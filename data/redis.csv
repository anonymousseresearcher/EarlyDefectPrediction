parent_hashes,commit_hash,author_name,author_email,author_date,author_date_unix_timestamp,commit_message,la,ld,fileschanged,nf,ns,nd,entropy,ndev,lt,nuc,age,exp,rexp,sexp,classification,fix,contains_bug,fixes
,ed9b544e10b84cd43348ddfab7068b610a5df1f7,antirez,antirez@gmail.com,Sun Mar 22 10:30:00 2009 +0100,1237714200,first commit,13641.0,0.0,"BETATESTING.txt,CAS_DELIMITER,BUGS,CAS_DELIMITER,COPYING,CAS_DELIMITER,Makefile,CAS_DELIMITER,README,CAS_DELIMITER,TODO,CAS_DELIMITER,adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,anet.c,CAS_DELIMITER,anet.h,CAS_DELIMITER,benchmark.c,CAS_DELIMITER,client-libraries/README,CAS_DELIMITER,client-libraries/erlang/.hg_archival.txt,CAS_DELIMITER,client-libraries/erlang/.hgignore,CAS_DELIMITER,client-libraries/erlang/LICENSE,CAS_DELIMITER,client-libraries/erlang/Makefile,CAS_DELIMITER,client-libraries/erlang/include/erldis.hrl,CAS_DELIMITER,client-libraries/erlang/src/Makefile,CAS_DELIMITER,client-libraries/erlang/src/client.erl,CAS_DELIMITER,client-libraries/erlang/src/erldis.erl,CAS_DELIMITER,client-libraries/erlang/src/proto.erl,CAS_DELIMITER,client-libraries/erlang/support/include.mk,CAS_DELIMITER,client-libraries/erlang/test/Makefile,CAS_DELIMITER,client-libraries/erlang/test/erldis_tests.erl,CAS_DELIMITER,client-libraries/erlang/test/proto_tests.erl,CAS_DELIMITER,client-libraries/php/redis.php,CAS_DELIMITER,client-libraries/php/tests.php,CAS_DELIMITER,client-libraries/python/redis.py,CAS_DELIMITER,client-libraries/ruby/LICENSE,CAS_DELIMITER,client-libraries/ruby/README.markdown,CAS_DELIMITER,client-libraries/ruby/README.rdoc,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/bench.rb,CAS_DELIMITER,client-libraries/ruby/bin/distredis,CAS_DELIMITER,client-libraries/ruby/examples/basic.rb,CAS_DELIMITER,client-libraries/ruby/examples/incr-decr.rb,CAS_DELIMITER,client-libraries/ruby/examples/list.rb,CAS_DELIMITER,client-libraries/ruby/examples/sets.rb,CAS_DELIMITER,client-libraries/ruby/fill.rb,CAS_DELIMITER,client-libraries/ruby/lib/better_timeout.rb,CAS_DELIMITER,client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/hash_ring.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/spec/spec_helper.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER,dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/VersionControl.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,doc/redis.png,CAS_DELIMITER,doc/style.css,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER,zmalloc.h,CAS_DELIMITER",110.0,3.0,16.0,5.162159064242124,1.0,0.0,0.0,0.0,54.5,0.0,22.0,None,False,,
ed9b544e10b84cd43348ddfab7068b610a5df1f7,70003d28b8d7430f9e0104575e7160be2f264602,antirez,antirez@gmail.com,Sun Mar 22 14:54:14 2009 +0100,1237730054,"INFO fixed, MGET implemented, redis-cli implements INFO/MGET",28.0,1.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.4798320236161285,1.0,1688.5,2.0,0.1834953703703704,110.5,5.087296581304404,24.0,Corrective,True,,
70003d28b8d7430f9e0104575e7160be2f264602,a74f2af61cb83e104cc9cc5ebd9292f14b6802fa,antirez,antirez@gmail.com,Sun Mar 22 14:59:05 2009 +0100,1237730345,redis-cli now checks the arity of vararg commnads,1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,341.0,2.0,0.003368055555555556,112.0,297.9072164948454,25.0,None,False,,
a74f2af61cb83e104cc9cc5ebd9292f14b6802fa,029524dbff9b076a5d1b7b97428981519e34886b,antirez,antirez@gmail.com,Sun Mar 22 15:08:06 2009 +0100,1237730886,added doc for MGET,3.0,43.0,"doc/CommandReference.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/VersionControl.html,CAS_DELIMITER",3.0,1.0,1.0,0.6784070909375675,1.0,43.66666666666666,3.0,0.193125,114.0,4.164329377921611,54.0,Feature Addition,False,,
029524dbff9b076a5d1b7b97428981519e34886b,e255235c20d1fae95dee3b93584b3cc277c0c79c,antirez,antirez@gmail.com,Sun Mar 22 15:15:51 2009 +0100,1237731351,doc changes,60.0,0.0,"doc/Benchmarks.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,1.0,60.5,1.0,0.09925347222222222,116.5,6.0376071366101085,56.0,Non Functional,False,,
e255235c20d1fae95dee3b93584b3cc277c0c79c,5b19bd7238d6036c2e920f26ba29704d83773057,antirez,antirez@gmail.com,Sun Mar 22 15:27:09 2009 +0100,1237732029,MGET tests added,25.0,2.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,807.0,1.0,0.20635416666666667,118.0,5.846037354871278,26.0,Feature Addition,False,,
5b19bd7238d6036c2e920f26ba29704d83773057,db52edaa0d6bcb455e46703ed082f80157723178,Luc Heinrich,luc@honk-honk.com,Mon Mar 23 12:28:28 2009 +0100,1237807708,Added gitignore file.,5.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,Feature Addition,False,,
db52edaa0d6bcb455e46703ed082f80157723178,ed329fcf25bb1c41949678eec125034326f86af2,Luc Heinrich,luc@honk-honk.com,Mon Mar 23 12:31:33 2009 +0100,1237807893,Allow to specify the pid file from the config file.,12.0,1.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.8904916402194913,1.0,1564.5,3.0,0.992662037037037,1.5,1.8068397653408752,2.0,None,False,True,"[""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
ed329fcf25bb1c41949678eec125034326f86af2,46713f83d46babbc9ad48d11c52cd954a8553846,Luc Heinrich,luc@honk-honk.com,Mon Mar 23 12:42:10 2009 +0100,1237808530,Display the port on server startup.,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,3070.0,3.0,0.007372685185185184,3.0,136.63579277864991,3.0,None,False,,
46713f83d46babbc9ad48d11c52cd954a8553846,b91f03a4d14c166bb8ead41e5b556b1080ccd559,Luc Heinrich,luc@honk-honk.com,Mon Mar 23 12:43:16 2009 +0100,1237808596,"Fixed redis-cli readLine loop to correctly handle EOF.When using the shutdown command with redis-cli the server saves the database and, if successful, silently closes the connection. The redis-cli tool did not correcty handle this EOF case in its readLine loop and was therefore infinitely looping - and eating 100% of the CPU - while waiting for some data which would never come.n",4.0,2.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,341.0,3.0,0.9056828703703704,4.0,2.1041392442269107,4.0,Corrective,True,True,"[""e0e1c195202dd74ab22554dd4293672cc95368ee""]"
5b19bd7238d6036c2e920f26ba29704d83773057,092dac2a64f912fe67be2e924c58979b200aa64b,antirez,antirez@gmail.com,Mon Mar 23 14:50:09 2009 +0100,1237816209,another missing free->zfree replacement fixed. Thanks to Ludo,22.0,3.0,"Makefile,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,zmalloc.h,CAS_DELIMITER",4.0,1.0,1.0,1.1754312795576,1.0,796.25,7.0,0.9077141203703702,120.5,1.4885059332833508,30.0,Corrective,True,,
092dac2a64f912fe67be2e924c58979b200aa64b b91f03a4d14c166bb8ead41e5b556b1080ccd559,2a200c784da1c7d33f72e3b92425f029214f70a1,antirez,antirez@gmail.com,Mon Mar 23 17:21:33 2009 +0100,1237825293,Merge git://github.com/lucsky/redis,,,,,,,,,,,,,,,Merge,False,,
2a200c784da1c7d33f72e3b92425f029214f70a1,5a039e3b95856ac9e59ce4a522f140b4ec014913,antirez,antirez@gmail.com,Mon Mar 23 17:22:24 2009 +0100,1237825344,"lucsky changes imported. pid file path can now be configured, redis-cli fixes",1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,5.0,1.0,0.2041203703703704,123.0,5.8990700839192565,31.0,Corrective,True,,
5a039e3b95856ac9e59ce4a522f140b4ec014913,87eca72788a18969f7e350fdbd75ced5a8b8e893,antirez,antirez@gmail.com,Mon Mar 23 19:43:39 2009 +0100,1237833819,MONITOR command implemented.,24.0,9.0,".gitignore,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.19590927087360493,2.0,1538.0,7.0,0.15095486111111112,124.5,7.753469342059063,33.0,None,False,True,"[""248ea3100391e57725185a87ae77567646f76723""]"
87eca72788a18969f7e350fdbd75ced5a8b8e893,cf3f0c012df3abeee9bc2ec511820c1a859ecfc7,antirez,antirez@gmail.com,Mon Mar 23 21:33:15 2009 +0100,1237840395,Now MONITOR/SYNC cannot be issued multiple times,8.0,0.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,2.0,1560.0,8.0,0.17802083333333335,126.5,4.190487298625819,35.0,None,False,,
cf3f0c012df3abeee9bc2ec511820c1a859ecfc7,5a6948fbc02568a26e21c0a69e5e921edef8c1b9,antirez,antirez@gmail.com,Tue Mar 24 00:43:38 2009 +0100,1237851818,"random tested mode for test-redis.tcl, minor other stuff, version switched to 0.8",39.0,40.0,".gitignore,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.2177758065186324,2.0,991.25,15.0,0.4647974537037037,129.5,3.597506859882306,39.0,Preventative,False,,
5a6948fbc02568a26e21c0a69e5e921edef8c1b9,796d05f855f00e0fda05129dd62c39e8670283e7,antirez,antirez@gmail.com,Tue Mar 24 11:28:34 2009 +0100,1237890514,"Python client library updated, thanks to Ludo!",33.0,0.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,930.0,1.0,2.0406712962962965,132.0,1.4900348242340369,35.0,None,False,,
796d05f855f00e0fda05129dd62c39e8670283e7,c937aa89b5835d12a1b5900beaa471908f3a236d,antirez,antirez@gmail.com,Tue Mar 24 13:37:32 2009 +0100,1237898252,"Server replies now in the new format, test-redis.tcl and redis-cli modified accordingly",252.0,255.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.5766831932318195,2.0,1430.0,15.0,0.7041820987654319,134.0,1.6906399332475768,42.0,Feature Addition,False,True,"[""7b45bfb2a4f9bc0296d9126274010a11d1073e8d"", ""5faa6025f52e4ee8443a111cbb42a775a0206396"", ""5762b7f0f8d33eda021da908b6ddced684a2ba05"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""18e61fa2ff09418025834c58618e598030f7832c"", ""21cdc9f0649ffa905fccf6a15c19adeff4aaf2c8"", ""b37ca6edb10faa0ebcf54a7d23cee31d895fe5b1""]"
c937aa89b5835d12a1b5900beaa471908f3a236d,fab3a740ab3f4eb4e5f1697973150f516b7c8d38,antirez,antirez@gmail.com,Tue Mar 24 13:38:25 2009 +0100,1237898305,protocol doc changed,37.0,61.0,"doc/FAQ.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER",2.0,1.0,1.0,0.14372616993938178,1.0,95.0,3.0,2.0342824074074075,136.5,1.3809286871755562,58.0,Non Functional,False,,
fab3a740ab3f4eb4e5f1697973150f516b7c8d38,9eb00f21f0afd16b311daa0795b1d45ca7da8874,antirez,antirez@gmail.com,Tue Mar 24 14:22:42 2009 +0100,1237900962,protocol fix in SORT reply with null elements,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3085.0,9.0,0.031365740740740736,138.0,32.881918819188186,43.0,Corrective,True,,
5b19bd7238d6036c2e920f26ba29704d83773057,11cb1537835786275c57afa5461dbd71b5a710b2,Ludovico Magnocavallo,ludo@ankh.qix.it,Tue Mar 24 14:30:04 2009 +0100,1237901404,sync python client to the new protocol,98.0,92.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,963.0,2.0,0.12604166666666666,0.0,0.0,0.0,Feature Addition,False,True,"[""39c8c0f22d21c80783b464f90fc8c8c8e6faaa2c""]"
11cb1537835786275c57afa5461dbd71b5a710b2 9eb00f21f0afd16b311daa0795b1d45ca7da8874,0c9ca0e11ca290392e2747596b89d18db175af7e,Ludovico Magnocavallo,ludo@ankh.qix.it,Tue Mar 24 14:33:43 2009 +0100,1237901623,git mess :),,,,,,,,,,,,,,,Merge,False,,
0c9ca0e11ca290392e2747596b89d18db175af7e,4c26a79a8d5eb80c8e68442486d3ebb1905221fc,antirez,antirez@gmail.com,Tue Mar 24 15:22:27 2009 +0100,1237904547,redis-benchmark sync with the new protocol,2.0,2.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,460.0,1.0,2.2030902777777777,139.0,1.4539078630080853,44.0,Feature Addition,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
4c26a79a8d5eb80c8e68442486d3ebb1905221fc,958694375564578103bb053d3845f3d4a89b8e4e,antirez,antirez@gmail.com,Tue Mar 24 19:22:45 2009 +0100,1237918965,Tcl client library,111.0,0.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,140.0,0.0,36.0,None,False,True,"[""4e4055779fc46370b2b1b99a0a2b1ff9cfc64013""]"
958694375564578103bb053d3845f3d4a89b8e4e,43c9dc7bd273f39522119415318ec750e678748a,antirez,antirez@gmail.com,Tue Mar 24 20:00:15 2009 +0100,1237921215,Now the Redis test uses the proper Tcl client library,258.0,490.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,860.0,4.0,0.2657754629629629,141.0,4.762574576492619,45.0,Preventative,False,,
43c9dc7bd273f39522119415318ec750e678748a,4e4055779fc46370b2b1b99a0a2b1ff9cfc64013,antirez,antirez@gmail.com,Tue Mar 24 21:48:04 2009 +0100,1237927684,two typos fixed,2.0,2.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER",2.0,2.0,2.0,1.0,1.0,115.0,3.0,0.22047453703703696,142.5,7.0886144304830365,59.0,Corrective,True,,
4e4055779fc46370b2b1b99a0a2b1ff9cfc64013,7b45bfb2a4f9bc0296d9126274010a11d1073e8d,antirez,antirez@gmail.com,Wed Mar 25 00:26:47 2009 +0100,1237937207,New protocol fix for LREM,10.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3085.0,10.0,0.4195023148148148,144.0,3.3837770726996825,46.0,Corrective,True,,
7b45bfb2a4f9bc0296d9126274010a11d1073e8d,f78fd11b71988ea91bda72f464df6cb7a1a45620,antirez,antirez@gmail.com,Wed Mar 25 16:47:22 2009 +0100,1237996042,"New file dump format, perl client library added",1129.0,104.0,"TODO,CAS_DELIMITER,client-libraries/README,CAS_DELIMITER,client-libraries/perl/Changes,CAS_DELIMITER,client-libraries/perl/MANIFEST,CAS_DELIMITER,client-libraries/perl/Makefile.PL,CAS_DELIMITER,client-libraries/perl/README,CAS_DELIMITER,client-libraries/perl/lib/Redis.pm,CAS_DELIMITER,client-libraries/perl/lib/Redis/Hash.pm,CAS_DELIMITER,client-libraries/perl/lib/Redis/List.pm,CAS_DELIMITER,client-libraries/perl/scripts/redis-benchmark.pl,CAS_DELIMITER,client-libraries/perl/t/00-load.t,CAS_DELIMITER,client-libraries/perl/t/01-Redis.t,CAS_DELIMITER,client-libraries/perl/t/10-Redis-List.t,CAS_DELIMITER,client-libraries/perl/t/20-Redis-Hash.t,CAS_DELIMITER,client-libraries/perl/t/pod-coverage.t,CAS_DELIMITER,client-libraries/perl/t/pod.t,CAS_DELIMITER,redis.c,CAS_DELIMITER",17.0,2.0,7.0,2.9487226085747986,2.0,183.94117647058826,16.0,0.3301341230936819,153.0,1.224648886832533,48.0,Feature Addition,False,True,"[""10c43610dee70032db40008996790bdeb54632b6"", ""17be1a4a173461772230716ad99d373a512e8f9e""]"
f78fd11b71988ea91bda72f464df6cb7a1a45620,916686686f54d78950fd06eac92ace5c5527290f,antirez,antirez@gmail.com,Wed Mar 25 16:49:27 2009 +0100,1237996167,Erlang client synched with Valentiono's repo,89.0,141.0,"client-libraries/erlang/.hg_archival.txt,CAS_DELIMITER,client-libraries/erlang/include/erldis.hrl,CAS_DELIMITER,client-libraries/erlang/src/client.erl,CAS_DELIMITER,client-libraries/erlang/src/erldis.erl,CAS_DELIMITER,client-libraries/erlang/src/proto.erl,CAS_DELIMITER,client-libraries/erlang/test/erldis_tests.erl,CAS_DELIMITER,client-libraries/erlang/test/proto_tests.erl,CAS_DELIMITER",7.0,1.0,4.0,1.517564315523122,1.0,74.71428571428571,7.0,3.2635069444444444,165.0,1.1135000383240679,59.0,None,False,,
916686686f54d78950fd06eac92ace5c5527290f,d9f650b990def521c92fdfe811e423bd5dd4ca4a,antirez,antirez@gmail.com,Wed Mar 25 16:49:58 2009 +0100,1237996198,doc update,38.0,0.0,"doc/UnstableSource.html,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,169.0,0.0,60.0,Non Functional,False,,
d9f650b990def521c92fdfe811e423bd5dd4ca4a,10c43610dee70032db40008996790bdeb54632b6,antirez,antirez@gmail.com,Wed Mar 25 21:00:48 2009 +0100,1238011248,"Nasty bug of the new DB format fixed, objects sharing implemented",95.0,31.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,0.3424141390715656,2.0,1075.3333333333333,19.0,0.9018788580246913,171.0,3.9641834183545583,51.0,Corrective,True,True,"[""21aecf4babfd3e7942ea6ce07657727dd007bbbb"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""b72f6a4b70ef642a085f700243ebf885ca7b09f4"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9""]"
10c43610dee70032db40008996790bdeb54632b6,abcb223ec05740c3534b31e3c756ac0d63f8c07e,Brian Hammond,brian@brianhammond.com,Wed Mar 25 23:03:56 2009 -0400,1238036636,"Adds AUTH command.$ makencc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  adlist.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  ae.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  anet.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  dict.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  redis.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  sds.cncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  zmalloc.cncc -o redis-server -O2 -Wall -W -DSDS_ABORT_ON_OOM -g adlist.o ae.o anet.o dict.o redis.o sds.o zmalloc.onnHint: To run the test-redis.tcl script is a good idea.nLaunch the redis server with ./redis-server, then in anothernterminal window enter this directory and run 'make test'.nncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  benchmark.cncc -o redis-benchmark -O2 -Wall -W -DSDS_ABORT_ON_OOM -g ae.o anet.o benchmark.o sds.o adlist.o zmalloc.oncc -c -O2 -Wall -W -DSDS_ABORT_ON_OOM -g  redis-cli.cncc -o redis-cli -O2 -Wall -W -DSDS_ABORT_ON_OOM -g anet.o sds.o adlist.o redis-cli.o zmalloc.onn$ tail -1 redis.confnn$ ./redis-server redis.conf &n[1] 52494n$ - Server started, Redis version 0.08n- DB loaded from diskn- The server is now ready to accept connections on port 6379n. 0 clients connected (0 slaves), 1932 bytes in usenn$ make testntclsh test-redis.tclnDEL all keys to start with a clean DB  . Accepted 127.0.0.1:54490nPASSEDnSET and GET an itemPASSEDnDEL against a single item  PASSEDnKEYS with pattern  PASSEDnKEYS to get all keys   PASSEDnDBSIZE PASSEDnDEL all keys   PASSEDnVery big payload in GET/SETPASSEDnSET 10000 numeric keys and access all them in reverse order. DB 0: 10001 keys in 16384 slots HT.n. 1 clients connected (0 slaves), 4885707 bytes in usenPASSEDnDBSIZE should be 10001 now PASSEDnINCR against non existing key  PASSEDnINCR against key created by incr itselfPASSEDnINCR against key originally set with SET   PASSEDnSETNX target key missing   PASSEDnSETNX target key existsPASSEDnEXISTS PASSEDnZero length value in key. SET/GET/EXISTS   PASSEDnCommands pipeliningPASSEDnNon existing command   PASSEDnBasic LPUSH, RPUSH, LLENGTH, LINDEXPASSEDnDEL a list PASSEDnCreate a long list and check every single element with LINDEX  PASSEDnTest elements with LINDEX in random access PASSEDnLLEN against non-list value error  PASSEDnLINDEX against non-list value errorPASSEDnLPUSH against non-list value error PASSEDnRPUSH against non-list value error PASSEDnRENAME basic usage PASSEDnRENAME source key should no longer exist   PASSEDnRENAME against already existing keyPASSEDnRENAMENX basic usage   PASSEDnRENAMENX against already existing key  PASSEDnRENAMENX against already existing key (2)  PASSEDnRENAME against non existing source key PASSEDnRENAME where source and dest key is the same   PASSEDnDEL all keys again (DB 0)  PASSEDnDEL all keys again (DB 1)  PASSEDnMOVE basic usage   PASSEDnMOVE against key existing in the target DB PASSEDnSET/GET keys in different DBs  PASSEDnBasic LPOP/RPOPPASSEDnLPOP/RPOP against empty list   PASSEDnLPOP against non list valuePASSEDnMass LPUSH/LPOPPASSEDnLRANGE basics  PASSEDnLRANGE inverted indexesPASSEDnLRANGE out of range indexes including the full listPASSEDnLRANGE against non existing keyPASSEDnLTRIM basics   PASSEDnLSET   PASSEDnLSET out of range indexPASSEDnLSET against non existing key  PASSEDnLSET against non list valuePASSEDnSADD, SCARD, SISMEMBER, SMEMBERS basicsPASSEDnSADD adding the same element multiple timesPASSEDnSADD against non set   PASSEDnSREM basicsPASSEDnMass SADD and SINTER with two sets PASSEDnSINTERSTORE with two sets  PASSEDnSINTER against three sets  PASSEDnSINTERSTORE with three setsPASSEDnSAVE - make sure there are all the types as values - DB saved on disknPASSEDnCreate a random list   . DB 0: 6057 keys in 16384 slots HT.n. DB 1: 3 keys in 16 slots HT.n. 1 clients connected (0 slaves), 1045147 bytes in usenPASSEDnSORT with BY against the newly created listPASSEDnSORT direct, numeric, against the newly created list   PASSEDnSORT decreasing sort   PASSEDnSORT speed, sorting 10000 elements list using BY, 100 timesn  Average time to sort: 5.28 milliseconds PASSEDnSORT speed, sorting 10000 elements list directly, 100 timesn  Average time to sort: 1.53 milliseconds PASSEDnSORT speed, pseudo-sorting 10000 elements list, BY <const>, 100 timesn  Average time to sort: 0.47 milliseconds PASSEDnSORT regression for issue #19, sorting floats  - DB saved on disknPASSEDnLREM, remove all the occurrences   - DB saved on disknPASSEDnLREM, remove the first occurrence  PASSEDnLREM, remove non existing element  PASSEDnLREM, starting from tail with negative count   - DB saved on disknPASSEDnLREM, starting from tail with negative count (2)   PASSEDnMGET   - DB saved on disknPASSEDnMGET against non existing key  PASSEDnMGET against non-string keyPASSEDnFLUSHALL   - DB saved on disknPASSEDnn79 tests, 79 passed, 0 failedn. Client closed connectionn. 0 clients connected (0 slaves), 1347660 bytes in usenn$ kill -15 %1n[1]+  Terminated  ./redis-server redis.confnn$ vim redis.confnn$ tail -1 redis.confnrequirepass foobarednn$ ./redis-server redis.conf &n[1] 52518n$ - Server started, Redis version 0.08n- DB loaded from diskn- The server is now ready to accept connections on port 6379n. 0 clients connected (0 slaves), 1945 bytes in usenn$ make testntclsh test-redis.tcln. Accepted 127.0.0.1:54492nDEL all keys to start with a clean DBnnERR operation not permittednnwhile executingn::redis::redis_read_reply $fdn(procedure ::redis::__dispatch__ line 13)ninvoked from withinn$r keys *n(uplevel body line 2)ninvoked from withinnuplevel 1 $coden(procedure test line 4)ninvoked from withinntest {DEL all keys to start with a clean DB} {nforeach key [$r keys *] {$r del $key}n$r dbsizen} {0}n(procedure main line 13)ninvoked from withinnmain 127.0.0.1 6379ninvoked from withinnif {[llength $argv] == 0} {nmain 127.0.0.1 6379n} elseif {[llength $argv] == 1 && [lindex $argv 0] eq {stress}} {nstressn} else {nmain [li...n(file test-redis.tcl line 630)n. Client closed connectionnmake: *** [test] Error 1n. 0 clients connected (0 slaves), 2041 bytes in usen. 0 clients connected (0 slaves), 2041 bytes in usenn$ kill -15 %1n[1]+  Terminated  ./redis-server redis.confnn$ vim test-redis.tclnn$ git diff test-redis.tcln",39.0,0.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.4229196387852907,2.0,1301.6666666666667,21.0,0.6411921296296296,1.0,1.4071520941633502,2.0,Feature Addition,False,True,"[""e63943a4502a8173d395ccd273eebf0787090d9c"", ""2e77c2ee72c97d33da568efcde3ec3dc954ccc13"", ""fa4c0aba85fca17e2526831d1afa530724479ed5"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
abcb223ec05740c3534b31e3c756ac0d63f8c07e,e63943a4502a8173d395ccd273eebf0787090d9c,antirez,antirez@gmail.com,Thu Mar 26 11:46:14 2009 +0100,1238064374,"AUTH merged from Brian Hammond fork, reworked a bit to fix minor problems",8.0,5.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,2.0,1618.0,20.0,0.46796296296296297,173.5,2.347391476648812,53.0,Corrective,True,,
e63943a4502a8173d395ccd273eebf0787090d9c,f2aa84bd638b8d18e80531abfd7191f5d0a58c71,antirez,antirez@gmail.com,Thu Mar 26 17:23:51 2009 +0100,1238084631,Lua client added thanks to Daniele Alessandri,363.0,9.0,".gitignore,CAS_DELIMITER,client-libraries/README,CAS_DELIMITER,client-libraries/lua/.LICENSE.swp,CAS_DELIMITER,client-libraries/lua/LICENSE,CAS_DELIMITER,client-libraries/lua/README,CAS_DELIMITER,client-libraries/lua/redis.lua,CAS_DELIMITER,redis.conf,CAS_DELIMITER",7.0,2.0,3.0,0.7976099407778219,2.0,17.428571428571427,10.0,0.610775462962963,178.0,1.2784455869686835,55.0,Feature Addition,False,,
f2aa84bd638b8d18e80531abfd7191f5d0a58c71,1a4601492cbe55b77fef7c335d6764c278c3595a,antirez,antirez@gmail.com,Thu Mar 26 17:24:53 2009 +0100,1238084693,Lua client added thanks to Daniele Alessandri,0.0,0.0,"client-libraries/lua/.LICENSE.swp,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,0.0,1.0,0.0007175925925925926,182.0,1394.548387096774,65.0,Feature Addition,False,,
1a4601492cbe55b77fef7c335d6764c278c3595a,29fac6170a308c1ed765d4f7edee94985959225c,antirez,antirez@gmail.com,Fri Mar 27 12:14:35 2009 +0100,1238152475,Ruby client library updated. Important changes in this new version!,699.0,810.0,"client-libraries/ruby/.gitignore,CAS_DELIMITER,client-libraries/ruby/README.rdoc,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/examples/test_server.rb,CAS_DELIMITER,client-libraries/ruby/fill.rb,CAS_DELIMITER,client-libraries/ruby/lib/better_timeout.rb,CAS_DELIMITER,client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/hash_ring.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/server.rb,CAS_DELIMITER,client-libraries/ruby/profile.rb,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/speed.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER",14.0,1.0,5.0,1.698921126203205,1.0,119.42857142857143,9.0,3.260974702380953,189.5,0.9812305664950366,79.0,Feature Addition,False,True,"[""6a97a74f5ebd7d95dc241634e0982552418d5bb3""]"
29fac6170a308c1ed765d4f7edee94985959225c,a4d1ba9a73e459d68423c4da623f8cf1663c70ba,antirez,antirez@gmail.com,Fri Mar 27 20:48:32 2009 +0100,1238183312,ANSI-C compatibility changes,35.0,22.0,"anet.c,CAS_DELIMITER,anet.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",5.0,1.0,1.0,1.6092097592827919,2.0,790.8,19.0,4.618949074074074,199.0,1.0915806475133554,60.0,None,False,True,"[""774e30478070d780f739db047e5551690a090db1"", ""d8b5f18f1da560dbe39e553407f0fd58d43d0129""]"
a4d1ba9a73e459d68423c4da623f8cf1663c70ba,17be1a4a173461772230716ad99d373a512e8f9e,antirez,antirez@gmail.com,Fri Mar 27 21:27:42 2009 +0100,1238185662,IMPORTANT FIX: new dump format implementation was broken. Now it's ok but tests for the 32-bit case values are needed,7.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3237.0,16.0,0.027199074074074073,202.0,37.76595744680851,61.0,Corrective,True,,
17be1a4a173461772230716ad99d373a512e8f9e,53f8c2c71e5962eeaccb80d04d2e0ff575d520fd,antirez,antirez@gmail.com,Fri Mar 27 21:37:57 2009 +0100,1238186277,now Redis is C99-ok,2.0,2.0,"Makefile,CAS_DELIMITER,sds.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,1.0,60.5,3.0,4.873524305555557,203.5,1.1680328820965975,63.0,None,False,,
53f8c2c71e5962eeaccb80d04d2e0ff575d520fd,23d4709dfbdc5d8f669c2e376159ffdfb4d37471,antirez,antirez@gmail.com,Fri Mar 27 22:00:27 2009 +0100,1238187627,feature macros defined to play well with C99,9.0,1.0,"anet.c,CAS_DELIMITER,dict.c,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.9219280948873625,2.0,1107.25,25.0,2.22535300925926,206.5,6.107249236147256,67.0,None,False,,
23d4709dfbdc5d8f669c2e376159ffdfb4d37471,e9a9afd35ef5a44b89771b41b3e66466c5c42be5,antirez,antirez@gmail.com,Fri Mar 27 22:01:04 2009 +0100,1238187664,feature macros defined to play well with C99,7.0,0.0,"fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,209.0,0.0,68.0,None,False,,
e9a9afd35ef5a44b89771b41b3e66466c5c42be5,e3566d4b46735c33bc85540c65c94e6a9778c1bf,antirez,antirez@gmail.com,Sat Mar 28 10:58:19 2009 +0100,1238234299,Integer encoding implemented in dump file. Doc updated,118.0,10.0,"TODO,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,2.0,2.0,0.6192658550161994,2.0,1097.0,26.0,2.842191358024692,211.0,1.2503176828295814,70.0,Non Functional,False,True,"[""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9"", ""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c""]"
e3566d4b46735c33bc85540c65c94e6a9778c1bf,8de4907a86e25ac8a50be57f5c2a80f872017e77,antirez,antirez@gmail.com,Sat Mar 28 11:50:27 2009 +0100,1238237427,redis-sha1 utility added,32.0,0.0,"utils/redis-sha1.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,213.0,0.0,0.0,Feature Addition,False,,
8de4907a86e25ac8a50be57f5c2a80f872017e77,378fd42197242327111995481c92c0890ac4e715,antirez,antirez@gmail.com,Mon Mar 30 12:13:43 2009 +0200,1238408023,changelog added,46.0,0.0,"Changelog,CAS_DELIMITER,Makefile,CAS_DELIMITER",2.0,1.0,1.0,0.3478169135710633,1.0,29.0,3.0,1.2832523148148147,214.5,0.694817493889405,72.0,Feature Addition,False,,
378fd42197242327111995481c92c0890ac4e715,300827b60dcb7eec8cbcc9d2b59c9dbd765efd40,antirez,antirez@gmail.com,Mon Mar 30 16:27:35 2009 +0200,1238423255,TODO updated,1.0,6.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,22.0,8.0,2.186990740740741,216.0,1.4572493067169077,73.0,None,False,,
300827b60dcb7eec8cbcc9d2b59c9dbd765efd40,3305306f0933bdfbd958cb12bd559636d50e4dc7,antirez,antirez@gmail.com,Wed Apr 1 13:22:35 2009 +0200,1238584955,Initial implementation of EXPIRE,252.0,196.0,"Makefile,CAS_DELIMITER,TODO,CAS_DELIMITER,dict.h,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",5.0,1.0,1.0,0.1604837748458849,2.0,779.4,39.0,4.530951388888889,219.0,1.1825647464833602,78.0,Feature Addition,False,True,"[""ce7bef0795e6137b36cdfdfa4e747e31fae09405"", ""83cdfe182f4e24e0785d13b358c84fe5f195df32"", ""774230260ff61dbc143236f690ccc73048f7fdfe"", ""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
3305306f0933bdfbd958cb12bd559636d50e4dc7,98c541c517585171f98b0a4082ff857f97246dc7,antirez,antirez@gmail.com,Wed Apr 1 14:36:29 2009 +0200,1238589389,fastlz dependence removed,1.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,61.0,5.0,0.05131944444444445,222.0,20.485791610284167,79.0,None,False,,
98c541c517585171f98b0a4082ff857f97246dc7,94754ccc3cb33bc16a9a17b664adfc3f8949f3df,antirez,antirez@gmail.com,Wed Apr 1 20:40:00 2009 +0200,1238611200,non-lazy expired keys purging implemented,51.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3393.0,20.0,0.3037615740740741,223.0,4.292055629643742,80.0,None,False,True,"[""dec423d9cf21dfe3ed7493eeb08deed9f1cc51a4"", ""724a51b1a95b9e6a6937ac363e11df647829d4c6"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
94754ccc3cb33bc16a9a17b664adfc3f8949f3df,774e30478070d780f739db047e5551690a090db1,antirez,antirez@gmail.com,Thu Apr 2 09:54:45 2009 +0200,1238658885,Issue 22 fixed,47.0,3.0,"Makefile,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.3825426691977457,2.0,1173.3333333333333,37.0,0.7373109567901235,225.0,1.7659105150685637,83.0,Corrective,True,True,"[""3a2694c44130c82aa216c1961d33e50fc1eb53a6"", ""5f5b9840c3d3f2ba6dd2f8c4d177f2bfac6f0d32"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9""]"
774e30478070d780f739db047e5551690a090db1,2e77c2ee72c97d33da568efcde3ec3dc954ccc13,antirez,antirez@gmail.com,Thu Apr 2 09:57:06 2009 +0200,1238659026,Fixed issue 23 about AUTH,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3484.0,22.0,0.0016319444444444445,227.0,613.7659574468084,84.0,Corrective,True,,
2e77c2ee72c97d33da568efcde3ec3dc954ccc13,d07519372b980b112cae65988a5cd4bd9d1e1daa,antirez,antirez@gmail.com,Thu Apr 2 10:00:49 2009 +0200,1238659249,new LZF files added,704.0,0.0,"lzf.h,CAS_DELIMITER,lzfP.h,CAS_DELIMITER,lzf_c.c,CAS_DELIMITER,lzf_d.c,CAS_DELIMITER",4.0,1.0,1.0,1.8858445447799363,1.0,0.0,0.0,0.0,229.5,0.0,88.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""62689ef0cf3c805b100ff5260485368e1c9b683c""]"
d07519372b980b112cae65988a5cd4bd9d1e1daa,40c32c3e4980d581c8468a9befa67e427c5249f3,antirez,antirez@gmail.com,Thu Apr 2 10:02:06 2009 +0200,1238659326,"disable LZF compression since it's not able to load the DB for now, the load part is missing",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3484.0,23.0,0.003472222222222222,232.0,289.0,89.0,None,False,,
40c32c3e4980d581c8468a9befa67e427c5249f3,88e859984a89091f20713d0ba90f7a9437c59c5d,antirez,antirez@gmail.com,Thu Apr 2 17:10:02 2009 +0200,1238685002,compression/decompression of large values on disk now working,25.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3484.0,24.0,0.2971759259259259,233.0,4.36501012618788,90.0,None,False,True,"[""3a2694c44130c82aa216c1961d33e50fc1eb53a6""]"
88e859984a89091f20713d0ba90f7a9437c59c5d,39c8c0f22d21c80783b464f90fc8c8c8e6faaa2c,Ludovico Magnocavallo,ludo@ankh.qix.it,Thu Apr 2 17:33:04 2009 +0200,1238686384,fix trailing cr+nl in values,54.0,57.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,969.0,3.0,9.085416666666667,1.0,1.110066498509516,1.0,Corrective,True,,
39c8c0f22d21c80783b464f90fc8c8c8e6faaa2c,491d908b0a9a08c571ce7bdf30371749d16b84b7,Ludovico Magnocavallo,ludo@ankh.qix.it,Thu Apr 2 17:34:42 2009 +0200,1238686482,fix select test,3.0,3.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,966.0,4.0,0.0011342592592592591,2.0,882.6326530612247,2.0,Corrective,True,,
491d908b0a9a08c571ce7bdf30371749d16b84b7,7a596b2f0fa649f1f47c60e75a1ebe3b9f5cddce,antirez,antirez@gmail.com,Thu Apr 2 23:00:27 2009 +0200,1238706027,LZF configured to initalize the HT in order to be determinsitic and play well with valgrind,1.0,1.0,"lzfP.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,159.0,1.0,0.541412037037037,234.0,2.8470221044080555,91.0,None,False,,
7a596b2f0fa649f1f47c60e75a1ebe3b9f5cddce,0c66a4713ab3ce3d0e88dcd10bc5a3cf4420faf6,antirez,antirez@gmail.com,Fri Apr 3 10:04:51 2009 +0200,1238745891,dirty increment was missing in two points. TODO updated,14.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8524051786494786,2.0,1761.5,36.0,0.8558738425925926,235.5,1.7886166059317787,93.0,None,False,,
0c66a4713ab3ce3d0e88dcd10bc5a3cf4420faf6,bb32ede52e8e222735d12d7b350532a06b648c8d,antirez,antirez@gmail.com,Fri Apr 3 11:07:37 2009 +0200,1238749657,persistent EXPIRE,58.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3509.0,26.0,0.04358796296296296,237.0,23.942113648433352,94.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
bb32ede52e8e222735d12d7b350532a06b648c8d,ab48d029d97ece21ac9cb0609cdb7fe714733758,Ludovico Magnocavallo,ludo@ankh.qix.it,Mon Apr 6 10:19:26 2009 +0200,1239005966,add expire command to the python lib,25.0,3.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,966.0,5.0,3.6977314814814815,3.0,1.2704360781760589,3.0,Feature Addition,False,,
ab48d029d97ece21ac9cb0609cdb7fe714733758,05557f6de7fd7a4ae29614ae2cde78cd08ebd1b9,antirez,antirez@gmail.com,Mon Apr 6 10:29:36 2009 +0200,1239006576,Don't accept SAVE if BGSAVE is in progress,8.0,0.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,1792.5,39.0,2.9953935185185188,238.5,1.2491787328836623,96.0,None,False,,
05557f6de7fd7a4ae29614ae2cde78cd08ebd1b9,ce7bef0795e6137b36cdfdfa4e747e31fae09405,antirez,antirez@gmail.com,Wed Apr 8 00:59:53 2009 +0200,1239145193,"RANDOMKEY issue 26 fixed, generic test + regression added",25.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5159469300074474,2.0,2100.5,34.0,7.21744212962963,240.5,1.3462883965006702,98.0,Corrective,True,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
ce7bef0795e6137b36cdfdfa4e747e31fae09405,5fba9f717be77af5bd5a5149595a1b934d4d5057,Bob Potter,bobby.potter@gmail.com,Tue Apr 7 18:33:44 2009 -0500,1239147224,64bit fixes for usedmemory,3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3566.0,29.0,0.023506944444444445,0.0,0.0,0.0,Corrective,True,True,"[""21aecf4babfd3e7942ea6ce07657727dd007bbbb"", ""b72f6a4b70ef642a085f700243ebf885ca7b09f4""]"
5fba9f717be77af5bd5a5149595a1b934d4d5057,27dd15268c9b519e94a4194bd32bac2d39c6c9fb,Bob Potter,bobby.potter@gmail.com,Tue Apr 7 18:36:23 2009 -0500,1239147383,ruby19 compat: use each_line on string,2.0,2.0,"client-libraries/ruby/lib/redis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,446.0,2.0,11.515138888888883,1.0,1.086842200484869,0.0,None,False,,
27dd15268c9b519e94a4194bd32bac2d39c6c9fb,5a6e8b1daa259141917ccc83cb3851614efac615,Bob Potter,bobby.potter@gmail.com,Tue Apr 7 18:40:33 2009 -0500,1239147633,Rearrange redisObject struct to reduce memory usage in 64bit environments (as recommended http://groups.google.com/group/redis-db/msg/68f5a743f8f4e287),1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3566.0,30.0,0.004733796296296297,2.0,212.24694376528115,1.0,None,False,,
ce7bef0795e6137b36cdfdfa4e747e31fae09405,bb7dcc1e51d38b3fe7abbeea9649a04b9697cbd8,Ludovico Magnocavallo,ludo@ankh.qix.it,Wed Apr 8 12:08:05 2009 +0200,1239185285,"fix decode bug, add flush and info commands",108.0,104.0,"client-libraries/php/redis.php,CAS_DELIMITER,client-libraries/php/tests.php,CAS_DELIMITER",2.0,1.0,1.0,0.4808446942193283,1.0,204.0,2.0,17.026446759259258,4.5,1.044049120207194,5.0,Corrective,True,True,"[""8d03032a83fefb817e244d4ce3ca695732090deb""]"
bb7dcc1e51d38b3fe7abbeea9649a04b9697cbd8,9a2944ace2ab5b5dac329c0dd847b289c85b7c72,Ludovico Magnocavallo,ludo@ankh.qix.it,Wed Apr 8 12:09:56 2009 +0200,1239185396,add expire command to the php lib,6.0,0.0,"client-libraries/php/redis.php,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,326.0,2.0,0.0012847222222222225,6.0,779.3783783783783,6.0,Feature Addition,False,True,"[""8d03032a83fefb817e244d4ce3ca695732090deb""]"
5a6e8b1daa259141917ccc83cb3851614efac615 9a2944ace2ab5b5dac329c0dd847b289c85b7c72,575acbf1f72b783bba13aee3ddf3bb1110f114fc,antirez,antirez@gmail.com,Wed Apr 8 12:13:56 2009 +0200,1239185636,Merge git://github.com/ludoo/redis,,,,,,,,,,,,,,,Merge,False,,
575acbf1f72b783bba13aee3ddf3bb1110f114fc,8b382972b0d000e51dc573c95ce546e16a7d30fa,antirez,antirez@gmail.com,Wed Apr 8 12:25:15 2009 +0200,1239186315,Changelog updated,25.0,1.0,"Changelog,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,43.0,1.0,9.008009259259259,242.0,1.1110123192837649,99.0,None,False,,
8b382972b0d000e51dc573c95ce546e16a7d30fa,928394cd12eb75c35eac72952b29e4dc9e75d154,antirez,antirez@gmail.com,Wed Apr 8 13:17:55 2009 +0200,1239189475,Lua client updated,206.0,193.0,"client-libraries/README,CAS_DELIMITER,client-libraries/lua/redis.lua,CAS_DELIMITER",2.0,1.0,2.0,0.025265991419407927,2.0,177.0,4.0,12.787546296296293,243.5,1.0586508140515765,81.0,None,False,,
928394cd12eb75c35eac72952b29e4dc9e75d154,9495122b1853a97b3f15f0ddbf69d69698f9c82b,antirez,antirez@gmail.com,Wed Apr 8 13:20:03 2009 +0200,1239189603,Ruby client updated,68.0,208.0,"client-libraries/README,CAS_DELIMITER,client-libraries/ruby/lib/better_timeout.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/server.rb,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER",6.0,1.0,4.0,1.3611701993092509,2.0,207.3333333333333,14.0,8.084220679012345,247.5,113.54202800752462,87.0,None,False,,
9495122b1853a97b3f15f0ddbf69d69698f9c82b,0bd06e524ae437c6fd1286f5508e2c5521afe0ac,antirez,antirez@gmail.com,Wed Apr 8 13:26:36 2009 +0200,1239189996,library clients update scripts,66.0,0.0,"client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/update-erlang-client.sh,CAS_DELIMITER,client-libraries/update-lua-client.sh,CAS_DELIMITER,client-libraries/update-perl-client.sh,CAS_DELIMITER,client-libraries/update-ruby-client.sh,CAS_DELIMITER",5.0,1.0,2.0,1.9767411067154697,1.0,0.0,0.0,0.0,253.0,0.0,92.0,None,False,,
0bd06e524ae437c6fd1286f5508e2c5521afe0ac,7f4e28e75046104599a5d83c493fdfd78f93ab49,antirez,antirez@gmail.com,Wed Apr 8 13:42:34 2009 +0200,1239190954,html doc updated,18.0,28.0,"doc/Credits.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER",12.0,1.0,1.0,3.013041446157795,2.0,42.16666666666666,13.0,16.318432677469133,261.5,1.0188987450654927,73.0,Non Functional,False,,
7f4e28e75046104599a5d83c493fdfd78f93ab49,290deb8b8c05fbb030587515add6e51d9a138b50,antirez,antirez@gmail.com,Wed Apr 8 13:46:26 2009 +0200,1239191186,"TODO changes, minor change to default redis.conf",5.0,8.0,"TODO,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,2.0,57.5,18.0,7.472019675925926,268.5,1.2674649812054657,101.0,None,False,,
290deb8b8c05fbb030587515add6e51d9a138b50,cc1db901e934826ce273b19a3f257d235719046f,antirez,antirez@gmail.com,Thu Apr 9 08:44:55 2009 +0200,1239259495,doc changes,66.0,2.0,"TODO,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER",3.0,2.0,2.0,0.4320417356548285,2.0,23.0,16.0,6.160949074074074,271.0,1.457683029024647,75.0,Non Functional,False,,
cc1db901e934826ce273b19a3f257d235719046f,5faa6025f52e4ee8443a111cbb42a775a0206396,antirez,antirez@gmail.com,Fri Apr 10 13:43:41 2009 +0200,1239363821,"SINTER/SINTERSTORE/SLEMENTS fix: misisng keys are now not errors, but just like empty sets",7.0,1.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,2.0,1796.0,46.0,1.8548263888888887,273.5,1.5488701171132822,104.0,Corrective,True,True,"[""0d36ded040eba3b7b6e6ed1437f4f9c0bd44fbbe""]"
5faa6025f52e4ee8443a111cbb42a775a0206396,6bea3d5f58a5aae62ce2083309a9ab88e1e673d8,antirez,antirez@gmail.com,Fri Apr 10 13:49:50 2009 +0200,1239364190,Redis 0.091 released,9.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,2.0,1819.0,34.0,1.0315046296296295,275.5,1.4852315813725099,106.0,None,False,True,"[""dec423d9cf21dfe3ed7493eeb08deed9f1cc51a4""]"
6bea3d5f58a5aae62ce2083309a9ab88e1e673d8,40d224a9e3df29e27e967ec2f1b9b0ecf66df50f,antirez,antirez@gmail.com,Sun Apr 19 10:02:36 2009 +0200,1240128156,"SUNION, SUNIONSTORE, Initial work on non blocking replication",223.0,14.0,"Changelog,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,0.44873597047300695,2.0,1162.5,50.0,11.730601851851851,278.5,1.0499968205264651,110.0,Feature Addition,False,True,"[""83cdfe182f4e24e0785d13b358c84fe5f195df32"", ""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55"", ""12d090d2d0a9ff8d2c082b97cf405a30c7126752"", ""d36c4e97e5018d98b4b346db7841090d9b6f4cfc""]"
40d224a9e3df29e27e967ec2f1b9b0ecf66df50f,6208b3a77644afe5c7c28688cd6d7554a0281953,antirez,antirez@gmail.com,Mon Apr 20 23:51:51 2009 +0200,1240264311,Non blocking replication (finally!). C-side linked lists API improved.,171.0,106.0,"TODO,CAS_DELIMITER,adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,utils/redis-sha1.rb,CAS_DELIMITER",5.0,2.0,2.0,1.0207957695829046,2.0,839.6,53.0,18.89757175925926,283.0,1.0320094769969184,1.0,None,False,True,"[""638e42aca477816ab4754ffb4e1e2816bdcc163c"", ""e96e4fbf159269075633f30063d254515aeb3a5f"", ""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
6208b3a77644afe5c7c28688cd6d7554a0281953,3c910136c1050ce3943c63201eedb7e940652f38,antirez,antirez@gmail.com,Tue Apr 21 00:33:34 2009 +0200,1240266814,doc update,123.0,6.0,"TODO,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER",6.0,2.0,2.0,2.00430179519912,2.0,19.166666666666668,21.0,6.871983024691358,288.5,12.532579041439199,80.0,Non Functional,False,,
3c910136c1050ce3943c63201eedb7e940652f38,8d03032a83fefb817e244d4ce3ca695732090deb,antirez,antirez@gmail.com,Tue Apr 21 19:43:02 2009 +0200,1240335782,PHP client ported to PHP5 and fixed,149.0,115.0,"client-libraries/php/redis.php,CAS_DELIMITER,client-libraries/php/tests.php,CAS_DELIMITER",2.0,1.0,1.0,0.2831700724740672,1.0,209.0,5.0,13.315295138888883,292.5,1.0563280133496655,94.0,Corrective,True,,
8d03032a83fefb817e244d4ce3ca695732090deb,975a5b6f9876beb55272160c8f602b9e248c0300,antirez,antirez@gmail.com,Tue Apr 21 19:47:12 2009 +0200,1240336032,forgot to comment testing code in PHP lib. Now it is ok,3.0,0.0,"client-libraries/php/redis.php,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,365.0,4.0,0.0028935185185185184,294.0,346.6,95.0,Preventative,False,,
975a5b6f9876beb55272160c8f602b9e248c0300,ca37e9cde814dd093cf2cf5d36f178854d768b3e,antirez,antirez@gmail.com,Wed Apr 22 01:44:48 2009 +0200,1240357488,"FLUSHALL/FLUSHDB no longer sync on disk. Just increment the dirty counter by the number of elements removed, that will probably trigger a background saving operation",7.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3803.0,35.0,1.0784375,295.0,1.9272674587076208,116.0,None,False,,
ca37e9cde814dd093cf2cf5d36f178854d768b3e,6f864e62661637917ce6b449ae2c5e11538dfa1f,antirez,antirez@gmail.com,Thu Apr 23 18:46:11 2009 +0200,1240505171,"dictGetRandomKey bug fixed, RANDOMKEY will not block the server anymore",13.0,1.0,"Changelog,CAS_DELIMITER,client-libraries/php/redis.php,CAS_DELIMITER,dict.c,CAS_DELIMITER",3.0,2.0,2.0,1.448815635725185,2.0,341.6666666666667,11.0,11.048217592592593,297.0,1.1391788394787157,118.0,Corrective,True,,
6f864e62661637917ce6b449ae2c5e11538dfa1f,f5785ae997611ac2fc628b6ad2d437a79530f7d6,antirez,antirez@gmail.com,Thu Apr 23 18:48:11 2009 +0200,1240505291,RANDOMKEY regression test added,7.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,672.0,8.0,4.364988425925927,299.0,1.2290956819176158,119.0,Feature Addition,False,,
f5785ae997611ac2fc628b6ad2d437a79530f7d6,d68ed1201a8c29d98d63f206946de037b6c5b29d,antirez,antirez@gmail.com,Mon Apr 27 17:50:26 2009 +0200,1240847426,"INCRBY/DECRBY now support 64bit increments, with tests",21.0,4.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.5193308322365362,2.0,1149.0,68.0,5.07795138888889,301.5,1.1141130083823754,123.0,Preventative,False,,
d68ed1201a8c29d98d63f206946de037b6c5b29d,be2bb6b07e9627e22d4afebab4d0863b898e0098,antirez,antirez@gmail.com,Mon Apr 27 17:52:04 2009 +0200,1240847524,bgsave_in_progress field in INFO output,2.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3805.0,37.0,0.0011342592592592591,304.0,882.6326530612247,124.0,None,False,,
be2bb6b07e9627e22d4afebab4d0863b898e0098,85dd2f3ad232725df668eb9d96553e58e45ad23f,antirez,antirez@gmail.com,Mon Apr 27 18:03:34 2009 +0200,1240848214,log file parsing code improved a bit,9.0,13.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,2.0,1918.5,57.0,0.008553240740740741,305.5,85.05102244080695,126.0,None,False,,
85dd2f3ad232725df668eb9d96553e58e45ad23f,b8b553c84fd1d9200fc35a08b9ea42ec9dbc73ee,antirez,antirez@gmail.com,Mon Apr 27 18:10:00 2009 +0200,1240848600,ability to specify a different file name for the DB,11.0,2.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",4.0,1.0,1.0,1.6691803368667308,2.0,1001.0,71.0,4.801388888888889,308.5,44.35749972619581,130.0,None,False,True,"[""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
b8b553c84fd1d9200fc35a08b9ea42ec9dbc73ee,a431eb74ba7162f575792efc1586b0eaf62eaca7,antirez,antirez@gmail.com,Tue Apr 28 14:42:55 2009 +0200,1240922575,GETSET implemented,15.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,2.0,2076.5,48.0,5.025428240740742,311.5,1.1041263682783835,132.0,None,False,True,"[""322fc7d855d3c19f8ca95cf5d66f8111f7981a30"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
a431eb74ba7162f575792efc1586b0eaf62eaca7,7ac6d4613f3552ec17b4ccc6b4493ae9250e3fd2,antirez,antirez@gmail.com,Tue Apr 28 16:21:16 2009 +0200,1240928476,GETSET tests,10.0,1.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6840384356390417,2.0,402.5,12.0,17.834733796296295,313.5,1.0284137901818595,133.0,Preventative,False,,
7ac6d4613f3552ec17b4ccc6b4493ae9250e3fd2,02fdd5ab4c8691156c150bc3948cbebbe8b208ad,antirez,antirez@gmail.com,Tue Apr 28 16:33:35 2009 +0200,1240929215,GETSET command doc added,52.0,8.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER",6.0,2.0,2.0,1.5593690581663255,2.0,52.5,36.0,13.637260802469134,317.5,1.2949323769751184,84.0,Feature Addition,False,,
02fdd5ab4c8691156c150bc3948cbebbe8b208ad,bb0b03a3d7d2c321fdbbf42fc44ab75766947ae6,antirez,antirez@gmail.com,Tue Apr 28 16:54:56 2009 +0200,1240930496,"less CPU usage in command parsing, case insensitive config directives",21.0,22.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3820.0,41.0,0.09167824074074074,321.0,11.907713672516095,136.0,None,False,,
bb0b03a3d7d2c321fdbbf42fc44ab75766947ae6,a4460ef43f9625e6c09cdc327614d1b47c043489,antirez,antirez@gmail.com,Tue Apr 28 20:36:08 2009 +0200,1240943768,SMOVE command implemented,96.0,11.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",16.0,2.0,2.0,2.4707682410898184,2.0,297.0,101.0,13.606008391203707,329.5,1.6900711705895086,140.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
a4460ef43f9625e6c09cdc327614d1b47c043489,0eeb2a4b8ff31b4e441ab7565fd4d7e26392091f,antirez,antirez@gmail.com,Tue Apr 28 21:19:37 2009 +0200,1240946377,SMOVE test added,36.0,1.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3033748360864139,2.0,407.0,14.0,0.2071875,338.5,4.619909502262443,141.0,Feature Addition,False,,
0eeb2a4b8ff31b4e441ab7565fd4d7e26392091f,b284af55d8d1d38fa2013bc45842c94e42eba3d4,antirez,antirez@gmail.com,Tue Apr 28 22:04:41 2009 +0200,1240949081,print bytes used at exit on SHUTDOWN,3.0,3.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,1942.0,66.0,0.061493055555555565,340.5,13.196499153020891,143.0,None,False,,
b284af55d8d1d38fa2013bc45842c94e42eba3d4,3a2694c44130c82aa216c1961d33e50fc1eb53a6,antirez,antirez@gmail.com,Wed Apr 29 01:04:04 2009 +0200,1240959844,fix for the LZF off-by-one bug added,3.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,2.0,1942.0,68.0,0.12457175925925924,342.5,7.020626219455543,145.0,Corrective,True,,
3a2694c44130c82aa216c1961d33e50fc1eb53a6,5a7c647e9acb6034e2bfbe879b1cba4209a76c05,antirez,antirez@gmail.com,Wed Apr 29 10:33:29 2009 +0200,1240994009,Check for fork() failure in background saving,5.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3857.0,45.0,0.3954282407407407,344.0,3.5289038489682425,146.0,Corrective,True,,
5a7c647e9acb6034e2bfbe879b1cba4209a76c05,dec423d9cf21dfe3ed7493eeb08deed9f1cc51a4,antirez,antirez@gmail.com,Wed Apr 29 16:50:48 2009 +0200,1241016648,fixed for HT resize check 32bits overflow,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3862.0,46.0,0.26202546296296303,345.0,4.8164229868810455,147.0,Corrective,True,,
dec423d9cf21dfe3ed7493eeb08deed9f1cc51a4,75398fbcae19a52ea21c518f5f0fd1e6668edcd3,antirez,antirez@gmail.com,Wed Apr 29 19:49:19 2009 +0200,1241027359,fuzz stresser implemented in redis-test,42.0,0.0,"Changelog,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,2.0,415.0,21.0,0.9523900462962962,346.5,1.7792995415808923,149.0,Preventative,False,True,"[""f69f2cbafeceb03a0bc945227f08657ea1c09251""]"
75398fbcae19a52ea21c518f5f0fd1e6668edcd3,f2923becc6cb11dc5cd979ad72a32d1801560df4,antirez,antirez@gmail.com,Thu Apr 30 14:48:02 2009 +0200,1241095682,"dict.c modified to be able to handle more than 150,000,000 keys",27.0,32.0,"TODO,CAS_DELIMITER,dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER",3.0,1.0,1.0,1.3960223246935677,2.0,248.3333333333333,30.0,12.488719135802471,349.0,1.2605645348463979,152.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19"", ""413d8239dfc9ddc275b6ab87caa3819f7dfb20f8""]"
f2923becc6cb11dc5cd979ad72a32d1801560df4,71aee3e959e205d3acc906c1c1cc91d7e4d87f14,antirez,antirez@gmail.com,Thu Apr 30 20:08:43 2009 +0200,1241114923,more fixes for dict.c and the 150 million keys limit,1.0,1.0,"dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,581.0,4.0,0.22269675925925925,351.0,5.4904111012941135,153.0,Corrective,True,,
71aee3e959e205d3acc906c1c1cc91d7e4d87f14,8d196ebac2554d77c15c38b3e730c8f85bdb26a6,antirez,antirez@gmail.com,Thu Apr 30 20:15:18 2009 +0200,1241115318,"zmalloc fix, return NULL or real malloc failure",1.0,0.0,"zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,82.0,2.0,33.93525462962963,352.0,1.0294678796700962,154.0,Corrective,True,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55""]"
8d196ebac2554d77c15c38b3e730c8f85bdb26a6,0bc03378965e6cd465b49ba5503d35c7adbffe2e,antirez,antirez@gmail.com,Mon May 4 16:26:06 2009 +0200,1241447166,Warns if /proc/sys/vm/overcommit_memory is set to 0 on Linux. Also make sure to don't resize the hash tables while the child process is saving in order to avoid copy-on-write of memory pages,56.0,8.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.20062232431271465,2.0,1942.5,73.0,4.525474537037037,353.5,1.1781502693324968,156.0,None,False,True,"[""b91cf5ef2bca4704a21cee929588a4d455035497""]"
0bc03378965e6cd465b49ba5503d35c7adbffe2e,93ea375904fa2a5d1cab110698d15f43e63d84f1,antirez,antirez@gmail.com,Wed May 6 23:54:57 2009 +0200,1241646897,Infinite number of arguments for MGET and all the other commands,31.0,9.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9097361225311662,2.0,1966.5,75.0,2.3117013888888893,355.5,1.3244363669134986,158.0,None,False,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55"", ""248ea3100391e57725185a87ae77567646f76723""]"
93ea375904fa2a5d1cab110698d15f43e63d84f1,57172ffb316b5e681c4f515927894f5129739237,antirez,antirez@gmail.com,Sat May 9 09:25:59 2009 +0200,1241853959,CPP client added thanks to Brian Hammond,2736.0,47.0,"TODO,CAS_DELIMITER,benchmark.c,CAS_DELIMITER,client-libraries/cpp/Makefile,CAS_DELIMITER,client-libraries/cpp/README.rst,CAS_DELIMITER,client-libraries/cpp/TODO,CAS_DELIMITER,client-libraries/cpp/anet.c,CAS_DELIMITER,client-libraries/cpp/anet.h,CAS_DELIMITER,client-libraries/cpp/fmacros.h,CAS_DELIMITER,client-libraries/cpp/redisclient.cpp,CAS_DELIMITER,client-libraries/cpp/redisclient.h,CAS_DELIMITER,client-libraries/cpp/test_client.cpp,CAS_DELIMITER,client-libraries/ruby/.gitignore,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/bench.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/server.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/update-cpp-client.sh,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,utils/redis-sha1.rb,CAS_DELIMITER",22.0,4.0,8.0,2.8749178971184235,2.0,71.5909090909091,46.0,14.702167508417508,367.5,1.0309090079601475,2.0,Feature Addition,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
57172ffb316b5e681c4f515927894f5129739237,efc296a1d6068f4e0cde584415d4c14a963c175c,antirez,antirez@gmail.com,Sat May 9 09:58:26 2009 +0200,1241855906,doc changes,46.0,5.0,"doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",5.0,1.0,1.0,1.0908639264942126,2.0,37.0,7.0,13.848337962962965,381.0,9.924684176057793,102.0,Non Functional,False,,
efc296a1d6068f4e0cde584415d4c14a963c175c,5109cdff8305ad1ea2047524f9d8221fc7cbdfff,antirez,antirez@gmail.com,Sat May 9 12:18:32 2009 +0200,1241864312,"DEL is now a vararg, IMPORTANT: memory leak fixed in loading DB code",34.0,14.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.6403360647604437,2.0,1100.75,98.0,5.744401041666666,385.5,1.0743988526915595,164.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
5109cdff8305ad1ea2047524f9d8221fc7cbdfff,cc582a77084840218c5cdcecb19be62f374f0a03,antirez,antirez@gmail.com,Sat May 9 12:32:29 2009 +0200,1241865149,added tests for vararg DEL,7.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,774.0,13.0,9.696643518518519,388.0,1.1031284689480658,165.0,Feature Addition,False,,
cc582a77084840218c5cdcecb19be62f374f0a03,391b4a60a1e493ffa169ffc8014fed4415d1614e,antirez,antirez@gmail.com,Sun May 10 10:48:37 2009 +0200,1241945317,minor doc changes,30.0,31.0,"TODO,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER",3.0,2.0,2.0,1.2014461200230289,2.0,62.33333333333334,37.0,4.5776157407407405,390.0,1.5488045289939218,104.0,Non Functional,False,,
391b4a60a1e493ffa169ffc8014fed4415d1614e,ecfaf6da92d8d482460d9491a69d80f91b2af7c0,antirez,antirez@gmail.com,Mon May 11 00:36:12 2009 +0200,1241994972,benchmark utility now supports random keys,30.0,3.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,465.0,3.0,1.6320949074074074,392.0,1.6127094665030883,167.0,None,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
ecfaf6da92d8d482460d9491a69d80f91b2af7c0,b062edf392a70116031881f9af7a082d042a2dbd,Ludovico Magnocavallo,ludo@ankh.qix.it,Mon May 11 13:39:59 2009 +0200,1242041999,disconnect when we cannot read from the socket,3.0,0.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,988.0,6.0,35.13927083333333,7.0,1.0284581886955777,7.0,None,False,,
b062edf392a70116031881f9af7a082d042a2dbd,7407797596cdc7ff4df1588cb0bacd2d3d5c67ac,antirez,antirez@gmail.com,Mon May 11 13:50:09 2009 +0200,1242042609,Python client updated pushing from Ludo's repository,9.0,1.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,anet.c,CAS_DELIMITER,benchmark.c,CAS_DELIMITER",4.0,1.0,1.0,1.7609640474436812,2.0,224.25,49.0,12.089722222222226,394.5,1.2099227430827009,171.0,None,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
7407797596cdc7ff4df1588cb0bacd2d3d5c67ac,1904ecc165735a859ef6a25fc7a8bd0c14505153,antirez,antirez@gmail.com,Mon May 11 19:45:47 2009 +0200,1242063947,timestamp in log lines,6.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3939.0,50.0,2.3105902777777776,397.0,1.4327898414606657,172.0,None,False,True,"[""6c9385e01d127f8ffa6a783b2a571d8ac4b73666"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
1904ecc165735a859ef6a25fc7a8bd0c14505153,f4f56e1dfba6c8b9b0654f332420fc2e4933fda3,antirez,antirez@gmail.com,Sun May 17 13:45:08 2009 +0200,1242560708,SDIFF/SDIFFSTORE implemnted unifying it with the implementation of SUNION/SUNIONSTORE,65.0,18.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.8872458373558914,2.0,1691.333333333333,76.0,7.286712962962962,399.0,1.080741879757638,175.0,None,False,True,"[""83cdfe182f4e24e0785d13b358c84fe5f195df32"", ""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55"", ""d36c4e97e5018d98b4b346db7841090d9b6f4cfc""]"
f4f56e1dfba6c8b9b0654f332420fc2e4933fda3,51829ed3f09bb4381f075900521bcaafee8819bb,Aman Gupta,aman@tmm1.net,Sun May 17 12:25:05 2009 -0700,1242588305,Optimize SDIFF to return as soon as the result set is empty,3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3972.0,52.0,0.31940972222222225,0.0,0.0,0.0,None,False,True,"[""d36c4e97e5018d98b4b346db7841090d9b6f4cfc""]"
51829ed3f09bb4381f075900521bcaafee8819bb,83cdfe182f4e24e0785d13b358c84fe5f195df32,Aman Gupta,aman@tmm1.net,Sun May 17 14:16:24 2009 -0700,1242594984,Fix SINTER/UNIONSTORE to allow for &=/|= style operations (i.e. SINTERSTORE set1 set1 set2),24.0,17.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8014698931335287,2.0,2386.5,68.0,0.2370081018518519,1.5,8.522850398597535,2.0,Corrective,True,True,"[""d36c4e97e5018d98b4b346db7841090d9b6f4cfc"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
f4f56e1dfba6c8b9b0654f332420fc2e4933fda3,75fd597daf80800feb18eab312c5f99e4c22e567,antirez,antirez@gmail.com,Tue May 19 17:34:30 2009 +0200,1242747270,psort.c/h added. This is a partial qsort implementation that Redis will use when SORT+LIMIT is requested,222.0,2.0,"TODO,CAS_DELIMITER,pqsort.c,CAS_DELIMITER,pqsort.h,CAS_DELIMITER",3.0,1.0,1.0,0.4556703013610228,2.0,10.333333333333334,32.0,2.718599537037037,402.0,1.12261214967197,178.0,Feature Addition,False,True,"[""5f5b9840c3d3f2ba6dd2f8c4d177f2bfac6f0d32"", ""12d090d2d0a9ff8d2c082b97cf405a30c7126752""]"
75fd597daf80800feb18eab312c5f99e4c22e567,5f5b9840c3d3f2ba6dd2f8c4d177f2bfac6f0d32,antirez,antirez@gmail.com,Tue May 19 18:39:58 2009 +0200,1242751198,"Partial qsort implemented in SORT command, only when both BY and LIMIT is used. minor fix for a warning compiling under Linux.",10.0,4.0,"Makefile,CAS_DELIMITER,benchmark.c,CAS_DELIMITER,pqsort.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.6644977792004616,2.0,1135.25,67.0,14.354872685185187,405.5,1.0186267418829356,182.0,Corrective,True,True,"[""5cf5fa656274752965939115f18528b20d962087"", ""970e10bb34690746ba378b0408ec37e7f7b57040""]"
83cdfe182f4e24e0785d13b358c84fe5f195df32,0150db364d939a5a69244aca6a66ad05903979fe,Aman Gupta,aman@tmm1.net,Tue May 19 22:36:11 2009 -0700,1242797771,Allow timeout=0 config to disable client timeouts,3.0,3.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,2034.0,62.0,11.549444444444443,3.5,1.949222126206049,4.0,None,False,,
5f5b9840c3d3f2ba6dd2f8c4d177f2bfac6f0d32 0150db364d939a5a69244aca6a66ad05903979fe,6d4371d46939ef6b10b9205af6af56e1146cdf91,antirez,antirez@gmail.com,Wed May 20 10:42:43 2009 +0200,1242808963,Merge git://github.com/tmm1/redis,,,,,,,,,,,,,,,Merge,False,,
6d4371d46939ef6b10b9205af6af56e1146cdf91,d214bb4894af1790d9e9974218c48730ce824845,antirez,antirez@gmail.com,Wed May 20 10:44:08 2009 +0200,1242809048,Aman Gupta changes merged,2.0,11.0,"TODO,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.7793498372920852,2.0,419.0,49.0,1.5963078703703704,408.5,1.8558894536297383,184.0,Non Functional,False,,
d214bb4894af1790d9e9974218c48730ce824845,1350d27e59a888ffd83d67ceb7e2ac9cdd4e6869,antirez,antirez@gmail.com,Wed May 20 11:09:09 2009 +0200,1242810549,SDIFF / SDIFFSTORE added to doc,96.0,2.0,"Changelog,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER",5.0,2.0,2.0,1.6097776316729977,2.0,38.6,21.0,14.477583333333332,412.0,1.03734900332117,108.0,Feature Addition,False,,
1350d27e59a888ffd83d67ceb7e2ac9cdd4e6869,4a327b4af9885d89b5860548f44569d1d2bde5ab,antirez,antirez@gmail.com,Wed May 20 16:36:12 2009 +0200,1242830172,Initial version of an alternative Ruby client added,74.0,0.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,415.0,0.0,117.0,Feature Addition,False,True,"[""0b420168b485d0a9c4b66d0a6c341597fb155947""]"
4a327b4af9885d89b5860548f44569d1d2bde5ab,4e1684df0921c6d49f2e5f89927b2f068f0efa91,antirez,antirez@gmail.com,Wed May 20 17:22:29 2009 +0200,1242832949,RubyRedis DB selection forced at object creation,8.0,0.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,74.0,1.0,0.03214120370370372,416.0,32.11271155923659,118.0,None,False,,
4e1684df0921c6d49f2e5f89927b2f068f0efa91,cd71a5705d16e5af90bc6be7ad960133391a5932,antirez,antirez@gmail.com,Wed May 20 17:23:06 2009 +0200,1242832986,random testing code removed,0.0,3.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,82.0,2.0,0.0004282407407407408,417.0,2336.135135135135,119.0,Preventative,False,,
cd71a5705d16e5af90bc6be7ad960133391a5932,ad0ea27c83f23819c515116117413a1a86555c36,antirez,antirez@gmail.com,Wed May 20 17:34:20 2009 +0200,1242833660,RubyRedis: Array alike operators implemented,8.0,0.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,79.0,3.0,0.007800925925925925,418.0,129.1899109792285,120.0,None,False,,
ad0ea27c83f23819c515116117413a1a86555c36,3f32f1f691b3ee60fe9f7e472bc605b1ccf2c404,antirez,antirez@gmail.com,Wed May 20 17:52:47 2009 +0200,1242834767,Automagically reconnection of RubyRedis,17.0,3.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,87.0,4.0,0.0128125,419.0,79.04878048780488,121.0,None,False,,
3f32f1f691b3ee60fe9f7e472bc605b1ccf2c404,3ba37089b57156619b07efd7a1587730217eca4d,antirez,antirez@gmail.com,Thu May 21 13:22:20 2009 +0200,1242904940,command postprocessing implemented into RubyRedis,35.0,5.0,"TODO,CAS_DELIMITER,client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,2.0,2.0,0.5501234060351945,2.0,1369.3333333333333,95.0,1.0541435185185186,421.0,1.579168107293435,187.0,None,False,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55""]"
3ba37089b57156619b07efd7a1587730217eca4d,fc9aeaeaf8d6d9a96b1b22ec5641c8e4290bc673,antirez,antirez@gmail.com,Thu May 21 13:31:00 2009 +0200,1242905460,dead code removed from RubyRedis,0.0,4.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,133.0,6.0,0.0060185185185185185,423.0,167.15384615384616,123.0,None,False,,
fc9aeaeaf8d6d9a96b1b22ec5641c8e4290bc673,f5bf7e3e30d2089704d8b0b5147bb1abd869ef0b,antirez,antirez@gmail.com,Thu May 21 13:51:30 2009 +0200,1242906690,RubyRedis info postprocessor rewritten in a more functional way,1.0,2.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,129.0,7.0,0.014236111111111109,424.0,71.24390243902441,124.0,None,False,,
f5bf7e3e30d2089704d8b0b5147bb1abd869ef0b,0dd8fce106f4a45328cbf42d5eedbcc7afa10e5e,antirez,antirez@gmail.com,Thu May 21 21:03:41 2009 +0200,1242932621,timeout support and Redis-rb compatibility aliases implemented in RubyRedis,118.0,12.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,128.0,8.0,0.3001273148148148,425.0,4.331919324360804,125.0,None,False,True,"[""06374c4b17be54086b674549f0a8e4c76602d84c""]"
0dd8fce106f4a45328cbf42d5eedbcc7afa10e5e,06374c4b17be54086b674549f0a8e4c76602d84c,antirez,antirez@gmail.com,Thu May 21 21:18:31 2009 +0200,1242933511,minor indentation fix,8.0,8.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,234.0,9.0,0.010300925925925923,426.0,98.07865168539328,126.0,Corrective,True,,
06374c4b17be54086b674549f0a8e4c76602d84c,e3d48807b9b1350a8ea3f7e28d7a040d2e6249b9,antirez,antirez@gmail.com,Fri May 22 12:16:57 2009 +0200,1242987417,rubyredis more compatible with Redis-rb,10.0,2.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,234.0,10.0,0.623912037037037,427.0,2.602790041924832,127.0,None,False,,
e3d48807b9b1350a8ea3f7e28d7a040d2e6249b9,03fd01c7eb56e1878e133857e95dcc8d23d14445,antirez,antirez@gmail.com,Fri May 22 15:29:27 2009 +0200,1242998967,S*STORE now return the cardinality of the resulting set,5.0,3.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,2.0,2108.5,68.0,0.6109780092592593,428.5,5.149439770001067,188.0,None,False,True,"[""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""d36c4e97e5018d98b4b346db7841090d9b6f4cfc""]"
03fd01c7eb56e1878e133857e95dcc8d23d14445,fd88489a417ba33e287b9ba4286328b6c18185df,antirez,antirez@gmail.com,Fri May 22 15:55:38 2009 +0200,1243000538,TTL command implemented,28.0,0.0,"Changelog,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.1856161633204378,2.0,1483.0,83.0,2.435918209876544,431.0,1.2429287928578103,191.0,None,False,,
fd88489a417ba33e287b9ba4286328b6c18185df,32c3a426a6f0b4f99e46dfb805dbca522bce7f8a,antirez,antirez@gmail.com,Fri May 22 16:08:20 2009 +0200,1243001300,TTL command doc added,40.0,2.0,"doc/CommandReference.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER",3.0,1.0,1.0,0.5489544344250401,2.0,34.0,9.0,5.154880401234569,434.0,1.1940912641722123,111.0,Feature Addition,False,,
32c3a426a6f0b4f99e46dfb805dbca522bce7f8a,6fdc78ac69865b79b16fda97cf29a063dc3d026a,antirez,antirez@gmail.com,Fri May 22 18:35:51 2009 +0200,1243010151,"critical bug about glueoutputbuffers=yes fixed. Under load and with pipelining and clients disconnecting on the middle of the chat with the server, Redis could block. Now it's ok",2.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,2.0,2010.5,94.0,0.6644907407407408,436.5,1.7868314202902895,193.0,Corrective,True,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55""]"
6fdc78ac69865b79b16fda97cf29a063dc3d026a,2abee6f2154e75a68488cd508bf2eddcfcc33ebc,antirez,antirez@gmail.com,Fri May 22 18:44:44 2009 +0200,1243010684,README tutorial now reflects the new proto,10.0,11.0,"doc/README.html,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,111.0,3.0,12.330636574074076,438.0,1.0810988138359834,112.0,Feature Addition,False,,
2abee6f2154e75a68488cd508bf2eddcfcc33ebc,8c4d91fcf8624ebff4434d259c19046fdd13240d,antirez,antirez@gmail.com,Fri May 22 20:55:09 2009 +0200,1243018509,"replication slave timeout when receiving the initial bulk data set to 3600 seconds, now that replication is non-blocking the server must save the db before to start the async replication and this can take a lot of time with huge datasets",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3992.0,60.0,0.0967361111111111,439.0,11.337401292175162,194.0,Feature Addition,False,,
8c4d91fcf8624ebff4434d259c19046fdd13240d,c7cf2ec97cc81a854ab58fd6755dcfe1cbc3fdc9,antirez,antirez@gmail.com,Fri May 22 21:56:00 2009 +0200,1243022160,Fix: no connection timeout for the master!,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,3992.0,61.0,0.04225694444444445,440.0,24.664749383730484,195.0,Corrective,True,,
c7cf2ec97cc81a854ab58fd6755dcfe1cbc3fdc9,321b0e13f6d48e61ee558c2ba32e86430bbe55af,antirez,antirez@gmail.com,Sat May 23 10:56:32 2009 +0200,1243068992,SLAVEOF command implemented for replication remote control,34.0,1.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.1372485119165283,2.0,1127.0,125.0,0.7019126157407407,442.5,1.6846127680174674,199.0,None,False,,
321b0e13f6d48e61ee558c2ba32e86430bbe55af,e9f0b930fecb02ef9fa025e78da5b3338b36f03b,antirez,antirez@gmail.com,Sat May 23 11:16:38 2009 +0200,1243070198,SLAVEOF command documented,42.0,1.0,"doc/CommandReference.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER",2.0,1.0,1.0,0.27138958750811115,2.0,22.0,8.0,0.39871527777777777,445.5,2.2540276931115564,114.0,Non Functional,False,,
e9f0b930fecb02ef9fa025e78da5b3338b36f03b,4d30232b0408f78d904ee484456e53b2b8fa6b0f,antirez,antirez@gmail.com,Sat May 23 11:33:21 2009 +0200,1243071201,"RubyRedis: now sets are returned as arrays again, and not as Set objects",0.0,5.0,"client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,242.0,12.0,0.8360416666666667,447.0,2.196112633939696,129.0,None,False,,
4d30232b0408f78d904ee484456e53b2b8fa6b0f,2073a849dfdd4e8975bcf9cf3cff7c4c210e098b,antirez,antirez@gmail.com,Sun May 24 09:15:40 2009 +0200,1243149340,"Issue with redis-client used in scripts solved, now to check if the latest argument must come from standard input we do not check that stdin is or not a tty but the command arity",10.0,7.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,353.0,14.0,0.9299537037037036,448.0,2.075322347787126,200.0,Preventative,False,,
2073a849dfdd4e8975bcf9cf3cff7c4c210e098b,8cca9b82773e2ca3d13bc1bb009d4e4d98141021,antirez,antirez@gmail.com,Sun May 24 09:21:35 2009 +0200,1243149695,Warns if using the default config,2.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,2024.0,100.0,0.9340625,449.5,1.8029441284710608,202.0,None,False,,
8cca9b82773e2ca3d13bc1bb009d4e4d98141021,0b420168b485d0a9c4b66d0a6c341597fb155947,antirez,antirez@gmail.com,Mon May 25 21:30:20 2009 +0200,1243279820,minor fix to RubyRedis about bulk commands sent without arguments,7.0,3.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",3.0,2.0,2.0,1.4854752972273344,2.0,135.33333333333334,66.0,2.1202623456790124,452.0,1.2734777830203827,130.0,Corrective,True,,
0b420168b485d0a9c4b66d0a6c341597fb155947,a0f643ea4c574d7f393a325f8f6e7c6c2e1c476f,antirez,antirez@gmail.com,Mon May 25 23:02:42 2009 +0200,1243285362,INFO command now reports replication info,19.0,5.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.2498822928331855,2.0,2023.5,103.0,0.8171817129629629,454.5,9.10094935717253,206.0,None,False,True,"[""f72b934d1478add5e580e312e93831cbab178a89"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e""]"
a0f643ea4c574d7f393a325f8f6e7c6c2e1c476f,285add5558c8d6cd6f6e659fbfcbc06af165218f,antirez,antirez@gmail.com,Mon May 25 23:29:18 2009 +0200,1243286958,"maxclients implemented, see redis.conf for details",28.0,1.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9293636260137188,2.0,2063.0,73.0,2.8401793981481482,456.5,28.155691781702398,208.0,None,False,,
285add5558c8d6cd6f6e659fbfcbc06af165218f,a56785f73cc3a2e09571f46941caf56133551400,antirez,antirez@gmail.com,Tue May 26 01:12:46 2009 +0200,1243293166,"RubyRedis: set TCP_NODELAY TCP socket option to to disable the neagle algorithm. Makes a huge difference under some OS, notably Linux",13.0,1.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",3.0,2.0,2.0,1.0949143184120975,2.0,136.33333333333334,70.0,0.13308641975308644,459.0,5.3545314815173795,131.0,None,False,,
a56785f73cc3a2e09571f46941caf56133551400,a1f6fa5edc0d258b234f77a8cbe6084a3ade5325,antirez,antirez@gmail.com,Tue May 26 16:35:18 2009 +0200,1243348518,max bytes of a received command enlarged from 1k to 16k,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4051.0,66.0,0.7125,461.0,2.4035087719298245,211.0,None,False,,
a1f6fa5edc0d258b234f77a8cbe6084a3ade5325,e083d7526209d0faf2ac0fabbc1a1e59b9974ce2,antirez,antirez@gmail.com,Tue May 26 16:45:57 2009 +0200,1243349157,ignore gcc warning about write() return code not checked. It is esplicitily this way since the max number of clients reached is a best-effort error,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4051.0,67.0,0.0073958333333333315,462.0,136.2112676056338,212.0,None,False,,
e083d7526209d0faf2ac0fabbc1a1e59b9974ce2,d7fc9edb182d361ac5c31b21fcdd25345c972898,antirez,antirez@gmail.com,Tue May 26 18:10:50 2009 +0200,1243354250,client libraries synched in git,384.0,305.0,"Changelog,CAS_DELIMITER,client-libraries/cpp/TODO,CAS_DELIMITER,client-libraries/cpp/redisclient.cpp,CAS_DELIMITER,client-libraries/cpp/redisclient.h,CAS_DELIMITER,client-libraries/lua/redis.lua,CAS_DELIMITER,client-libraries/ruby/.gitignore,CAS_DELIMITER,client-libraries/ruby/README.markdown,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/benchmarking/suite.rb,CAS_DELIMITER,client-libraries/ruby/benchmarking/worker.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/server.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/spec/server_spec.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER,redis.c,CAS_DELIMITER",18.0,2.0,8.0,2.6235499817995853,2.0,405.22222222222223,114.0,18.6719129372428,471.5,1.088057134898207,214.0,None,False,,
d7fc9edb182d361ac5c31b21fcdd25345c972898,77b78dc401fc6fc144f43b740047cc09d8ab93fe,antirez,antirez@gmail.com,Tue May 26 18:13:40 2009 +0200,1243354420,Redis 0.100 released,3.0,3.0,"client-libraries/README,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,34.0,5.0,48.20390046296296,481.0,1.020745209213274,148.0,None,False,,
77b78dc401fc6fc144f43b740047cc09d8ab93fe,16edf32dc3eeacb718046f954621b3574abafaa9,antirez,antirez@gmail.com,Tue May 26 20:54:47 2009 +0200,1243364087,Redis git version modified to 0.101 in order to distinguish that from the latest tar.gz via INFO ;),3.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,2101.0,87.0,0.11385416666666667,482.5,7.587374199451053,216.0,Preventative,False,,
16edf32dc3eeacb718046f954621b3574abafaa9,3fd78bcd45338e96f761b558bfa68e83a8141f0b,antirez,antirez@gmail.com,Wed May 27 22:53:20 2009 +0200,1243457600,maxmemory implemented,101.0,20.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.4663703330651825,2.0,2076.5,79.0,1.5286747685185187,484.5,1.6255082003671808,218.0,None,False,True,"[""d44659004125de932378e0cedb2abfc8cd5e64e1"", ""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""b61a28fe35232ca34632e2ad1c755e21a6eb5426""]"
3fd78bcd45338e96f761b558bfa68e83a8141f0b,144d479b7cd6f503d97f9d9ef3115839a0fa53c3,antirez,antirez@gmail.com,Thu May 28 18:25:22 2009 +0200,1243527922,minor fix for Solaris boxes,9.0,0.0,"pqsort.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,2.0,160.0,11.0,4.9246180555555545,486.5,1.106103716476462,220.0,Corrective,True,,
144d479b7cd6f503d97f9d9ef3115839a0fa53c3,edd9f775f0b51f031a04c7fc7573b276d152a74f,antirez,antirez@gmail.com,Thu May 28 18:26:28 2009 +0200,1243527988,minor fix for Solaris boxes,2.0,0.0,"pqsort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,208.0,2.0,0.0007638888888888888,488.0,1310.090909090909,221.0,Corrective,True,,
edd9f775f0b51f031a04c7fc7573b276d152a74f,5cf5fa656274752965939115f18528b20d962087,antirez,antirez@gmail.com,Thu May 28 18:28:55 2009 +0200,1243528135,another minor fix for Solaris boxes,1.0,1.0,"pqsort.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,15.0,2.0,8.992326388888891,489.0,1.1112059278937674,222.0,Corrective,True,,
5cf5fa656274752965939115f18528b20d962087,d90b352ded98b79fdddca6e057445237531835f3,antirez,antirez@gmail.com,Thu May 28 18:31:02 2009 +0200,1243528262,__P completely removed from pqsort.c/h,6.0,10.0,"pqsort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,210.0,3.0,0.003171296296296296,490.0,316.3284671532847,223.0,None,False,,
d90b352ded98b79fdddca6e057445237531835f3,69664139b5a57d08b2a17f624d5e9940761c9a3f,antirez,antirez@gmail.com,Fri May 29 12:28:37 2009 +0200,1243592917,ruby library client is not Redis-rb merged with RubyRedis engine by Brian McKinney,448.0,1054.0,"client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/server.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/spec/server_spec.rb,CAS_DELIMITER,client-libraries/ruby_2/rubyredis.rb,CAS_DELIMITER",8.0,1.0,4.0,2.013286319694321,2.0,183.625,38.0,10.376439525462962,494.5,1.0138602399141607,156.0,Non Functional,False,True,"[""6a97a74f5ebd7d95dc241634e0982552418d5bb3""]"
69664139b5a57d08b2a17f624d5e9940761c9a3f,6a97a74f5ebd7d95dc241634e0982552418d5bb3,antirez,antirez@gmail.com,Fri May 29 12:52:21 2009 +0200,1243594341,Redis-rb minor bool convertion fix,1.0,7.0,"client-libraries/ruby/lib/redis.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,279.0,7.0,0.016481481481481482,499.0,61.674157303370784,157.0,Corrective,True,,
6a97a74f5ebd7d95dc241634e0982552418d5bb3,be42428336aeb2059c6312cfeaac8d2bd23b53f1,antirez,antirez@gmail.com,Sat May 30 10:14:57 2009 +0200,1243671297,Python client library updated,137.0,96.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,991.0,7.0,18.857615740740737,500.0,1.0530289732142308,158.0,None,False,,
be42428336aeb2059c6312cfeaac8d2bd23b53f1,67d3e950bae378fe73812feaeb649a61ea6894bf,antirez,antirez@gmail.com,Sat May 30 10:17:06 2009 +0200,1243671426,Erlang client updated,57.0,15.0,"client-libraries/erlang/.hg_archival.txt,CAS_DELIMITER,client-libraries/erlang/src/client.erl,CAS_DELIMITER,client-libraries/erlang/src/erldis.erl,CAS_DELIMITER,client-libraries/erlang/test/erldis_tests.erl,CAS_DELIMITER,client-libraries/erlang/test/proto_tests.erl,CAS_DELIMITER,client-libraries/update-python-client.sh,CAS_DELIMITER",6.0,1.0,4.0,1.3081453121093736,1.0,72.0,10.0,54.73822337962963,503.5,1.006301034014483,164.0,None,False,,
67d3e950bae378fe73812feaeb649a61ea6894bf,e52c65b90af21d1eba73ddc0a75eedba69b2f7b8,antirez,antirez@gmail.com,Wed Jun 3 16:01:32 2009 +0200,1244037692,"shareobjectspoolsize implemented in reds.conf, in order to control the pool size when object sharing is on",17.0,0.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,1.1660870601063933,2.0,1425.333333333333,123.0,7.0771141975308645,508.0,1.0761245058717246,226.0,None,False,,
e52c65b90af21d1eba73ddc0a75eedba69b2f7b8,f7acd60336702b273886ef49650de34b143cbf36,antirez,antirez@gmail.com,Wed Jun 3 16:03:21 2009 +0200,1244037801,Python lib updated,53.0,1.0,"client-libraries/python/redis.py,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1032.0,8.0,4.241944444444443,510.0,1.2357409468928031,165.0,None,False,,
f7acd60336702b273886ef49650de34b143cbf36,7f957c925bb2b9dd8b89b1017b24b0d5f852cd7f,antirez,antirez@gmail.com,Thu Jun 4 16:45:57 2009 +0200,1244126757,initial backtrace dumping on sigsegv/sigbus + debug command,29.0,1.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,2.0,2093.0,80.0,8.475833333333334,511.5,1.0609010389054878,228.0,Corrective,True,True,"[""333298dac3e4b9c147851772be854b5dabcab8c2"", ""fbf9bcdb6f87d4c9c50d050803c39a139eec35fb""]"
7f957c925bb2b9dd8b89b1017b24b0d5f852cd7f,b5ff27084f593f64d47337c5f47ea3bf76c63a5a,antirez,antirez@gmail.com,Thu Jun 4 16:50:24 2009 +0200,1244127024,backtrace support removed: unreliable stack trace :(,1.0,16.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,2.0,2107.0,82.0,0.003090277777777777,513.5,243.6966292134832,230.0,None,False,,
b5ff27084f593f64d47337c5f47ea3bf76c63a5a,333298dac3e4b9c147851772be854b5dabcab8c2,antirez,antirez@gmail.com,Thu Jun 4 17:13:33 2009 +0200,1244128413,DEBUG OBJECT implemented,30.0,1.0,"Changelog,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.1702295713931186,2.0,1549.0,108.0,6.731435185185185,516.0,1.0707060144368712,233.0,Corrective,True,True,"[""210e29f7d276be1bbbaf1b711b654dd6834f8e93"", ""ace065423e275013f334ac8c40a96cb173c6897e"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
333298dac3e4b9c147851772be854b5dabcab8c2,ec93bba353113cb81dc97a738dc94de03f16b143,antirez,antirez@gmail.com,Thu Jun 4 18:50:54 2009 +0200,1244134254,"macosx specific zmalloc.c, uses malloc_size function in order to avoid to waste memory and time to put an additional header",32.0,1.0,"TODO,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,2.0,59.5,45.0,18.029502314814813,518.5,1.4612471193192451,235.0,Feature Addition,False,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55""]"
ec93bba353113cb81dc97a738dc94de03f16b143,0939d0ea39e459cce6d1df5aa1fb765c03784ae1,hrothgar,hrothgar@localhost.(none),Thu Jun 4 17:20:14 2009 +0000,1244136014,initial commit print stack trace,75.0,0.0,"redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,Feature Addition,False,True,"[""12d090d2d0a9ff8d2c082b97cf405a30c7126752""]"
0939d0ea39e459cce6d1df5aa1fb765c03784ae1,c9468bcf8a30d1a4c837814bc34d180f2dff992c,hrothgar,hrothgar@localhost.(none),Thu Jun 4 17:26:21 2009 +0000,1244136381,initial commit print stack trace,49.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4152.0,75.0,0.09222222222222222,1.0,11.843373493975903,1.0,Feature Addition,False,,
c9468bcf8a30d1a4c837814bc34d180f2dff992c,01fe7151a99609d52c2658cb7aa3a5e6dc32e069,hrothgar,hrothgar@localhost.(none),Thu Jun 4 18:41:00 2009 +0000,1244140860,add compile options to debug,2.0,2.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,61.0,10.0,0.1601388888888889,2.0,7.24457935819601,2.0,Corrective,True,,
01fe7151a99609d52c2658cb7aa3a5e6dc32e069,8a355d697a957d0c413a9c020d795959a985fd6f,hrothgar,hrothgar@localhost.(none),Thu Jun 4 18:48:26 2009 +0000,1244141306,remove die() :-),1.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4200.0,76.0,0.057002314814814825,3.0,18.54314720812183,3.0,None,False,,
ec93bba353113cb81dc97a738dc94de03f16b143,dde65f3f3c9949570cf19fb56e35ba195b48227d,antirez,antirez@gmail.com,Fri Jun 5 10:50:51 2009 +0200,1244191851,"added config.h for #ifdef business isolation, added fstat64 for Mac OS X",25.0,10.0,"TODO,CAS_DELIMITER,config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",4.0,1.0,1.0,1.5978595496170405,2.0,1086.0,124.0,0.4795688657407407,521.5,2.080101837992264,239.0,Feature Addition,False,True,"[""fbf9bcdb6f87d4c9c50d050803c39a139eec35fb"", ""06db1f50cd754995130ece657a39d534b82d14ae"", ""7cdc98b6305bb65aee5f5973e8123246755dac7d""]"
8a355d697a957d0c413a9c020d795959a985fd6f,fe3bbfbe16ebdc77b61c2157421c6794aef57092,hrothgar,hrothgar@localhost.(none),Fri Jun 5 10:10:44 2009 +0000,1244196644,- put some order in code - better output,36.0,39.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4196.0,78.0,0.05547453703703704,4.0,19.02628833715836,4.0,Perfective,False,True,"[""b91cf5ef2bca4704a21cee929588a4d455035497""]"
dde65f3f3c9949570cf19fb56e35ba195b48227d,33c08b39164eb669313f4871ce1b16a8e4cb2e5c,antirez,antirez@gmail.com,Fri Jun 5 16:07:22 2009 +0200,1244210842,LREM now returns :0 for non existing keys,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4193.0,79.0,0.1643287037037037,524.0,7.085364135793773,240.0,None,False,,
33c08b39164eb669313f4871ce1b16a8e4cb2e5c,9f3c422c72d4cede717b5f61bb7bde5823db53f2,antirez,antirez@gmail.com,Fri Jun 5 22:52:30 2009 +0200,1244235150,Kill the background saving process before performing SHUTDOWN to avoid races,25.0,15.0,"benchmark.c,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,2.0,2.0,1.234497796794641,2.0,1576.333333333333,88.0,25.279537037037034,526.0,1.0282145990087284,242.0,None,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040"", ""6766f45ef27af7f028dd71b5b1482365995bf314""]"
9f3c422c72d4cede717b5f61bb7bde5823db53f2,6f376729209b8af1f2e0ea6a7e04598f7644c5e3,antirez,antirez@gmail.com,Fri Jun 5 23:44:26 2009 +0200,1244238266,"Avoid a busy loop while sending very large replies against very fast links, this allows to be more responsive with other clients even under a KEY * against the loopback interface",10.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4203.0,81.0,0.03606481481481481,528.0,28.72785622593068,243.0,None,False,,
6f376729209b8af1f2e0ea6a7e04598f7644c5e3,9e9c0ce1702db12a71bef5ef877b5bf97c3c935e,antirez,antirez@gmail.com,Sat Jun 6 08:24:23 2009 +0200,1244269463,Makefile dependencies updated,12.0,10.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,61.0,11.0,1.4884606481481482,529.0,1.67183502717666,244.0,None,False,,
9e9c0ce1702db12a71bef5ef877b5bf97c3c935e,a3cc9e36aa9fe82bdd62cfb4916e3c1e4cb29583,antirez,antirez@gmail.com,Sat Jun 6 10:00:12 2009 +0200,1244275212,TODO updated,7.0,3.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER",2.0,1.0,1.0,0.8812908992306927,2.0,101.0,64.0,1.3319444444444444,530.5,1.4819754499496844,246.0,None,False,,
fe3bbfbe16ebdc77b61c2157421c6794aef57092,de96dbfedfb130ecf6f03f573515f5ceac87bd94,hrothgar,hrothgar@localhost.(none),Sat Jun 6 08:50:43 2009 +0000,1244278243,store static function pointer for a useful stack trace,122.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4213.0,82.0,0.4626967592592592,5.0,3.161242714560873,5.0,None,False,,
de96dbfedfb130ecf6f03f573515f5ceac87bd94,433cc893c0ad72b060761b867bc91f270e4338e3,hrothgar,hrothgar@localhost.(none),Sat Jun 6 09:49:10 2009 +0000,1244281750,add more output,32.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4331.0,83.0,0.04059027777777778,6.0,25.636441402908467,6.0,Feature Addition,False,,
a3cc9e36aa9fe82bdd62cfb4916e3c1e4cb29583 433cc893c0ad72b060761b867bc91f270e4338e3,c4cd5f393ced23cb298c52eaa5ed67569d3f8d0d,antirez,antirez@gmail.com,Sat Jun 6 23:40:48 2009 +0200,1244324448,Merge git://github.com/dierbro/redis,,,,,,,,,,,,,,,Merge,False,,
c4cd5f393ced23cb298c52eaa5ed67569d3f8d0d,56906eefea4b77e1cd43d0b483d11470a3dab90d,antirez,antirez@gmail.com,Sun Jun 7 14:00:31 2009 +0200,1244376031,"Dump a backtrace on sigsegv/sigbus, original coded thanks to Diego Rosario Brogna, modified in order to work on different OSes and to enhance reliability",181.0,159.0,"Makefile,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER",4.0,1.0,1.0,0.13296214028293654,2.0,1195.75,143.0,18.791629050925923,533.5,1.3817684334691849,250.0,None,False,True,"[""b91cf5ef2bca4704a21cee929588a4d455035497"", ""06db1f50cd754995130ece657a39d534b82d14ae"", ""c04c9ac94fdabe1ec2c958e2c6f9aa5d462acd80"", ""478c2c6f5bffa318d24e23519d2e4d7ea68f15fd"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9""]"
56906eefea4b77e1cd43d0b483d11470a3dab90d,e65fdc78380761bc9b9531f92a8b78c42263286c,antirez,antirez@gmail.com,Sun Jun 7 15:47:59 2009 +0200,1244382479,enable backtrace capabilities only for Linux and MacOSX,17.0,0.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9774178175281716,2.0,2275.0,106.0,0.6580729166666667,536.5,1.7826304774719954,252.0,None,False,,
e65fdc78380761bc9b9531f92a8b78c42263286c,d76412d1d1268c168332d7a4ca6020a5ac461b72,antirez,antirez@gmail.com,Sun Jun 7 20:22:43 2009 +0200,1244398963,some minor changes to the backtrace code,13.0,11.0,"config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,2.0,2201.5,87.0,1.2939583333333329,538.5,1.401788398744478,254.0,None,False,True,"[""7cdc98b6305bb65aee5f5973e8123246755dac7d""]"
d76412d1d1268c168332d7a4ca6020a5ac461b72,12fea9289063753ddd478f484636c343eeef49ba,antirez,antirez@gmail.com,Mon Jun 8 23:51:35 2009 +0200,1244497895,SPOP implemented. Hash table resizing for Sets and Expires too. Changed the resize policy to play better with RANDOMKEY and SPOP.,61.0,12.0,"dict.h,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",6.0,2.0,2.0,1.1245793846690697,2.0,958.1666666666664,130.0,20.83516010802469,542.5,1.0132390120781545,258.0,Perfective,False,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e""]"
12fea9289063753ddd478f484636c343eeef49ba,644fafa3830dd5f889142a0077bf153d536e9d45,antirez,antirez@gmail.com,Wed Jun 10 00:02:08 2009 +0200,1244584928,"max bytes in an inline command raised to 1024*1024 bytes, in order to allow for very large MGETs and still protect from client crashes",5.0,3.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,2.0,2226.5,134.0,1.7125578703703703,546.5,1.3527809489736382,260.0,None,False,,
644fafa3830dd5f889142a0077bf153d536e9d45,cd19463854027eb7e378bcd0ea8e072e7d17f4d0,antirez,antirez@gmail.com,Wed Jun 10 00:03:53 2009 +0200,1244585033,max inline request raised again to 1024*1024*256 bytes,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4421.0,89.0,0.0012152777777777778,548.0,823.8571428571429,261.0,None,False,,
cd19463854027eb7e378bcd0ea8e072e7d17f4d0,38210f7fe571c6b892f539d11d0c69ee1a93d00b,antirez,antirez@gmail.com,Wed Jun 10 00:08:10 2009 +0200,1244585290,Redis-rb sync,664.0,443.0,"client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER",5.0,1.0,3.0,1.1834702670676922,2.0,171.4,24.0,11.482502314814816,551.0,1.0397645833026308,170.0,None,False,,
38210f7fe571c6b892f539d11d0c69ee1a93d00b,0df1ead745f74d7643b73e3065f5c85b240b38fa,antirez,antirez@gmail.com,Wed Jun 10 00:11:17 2009 +0200,1244585477,sync with jodosha redis-rb,437.0,640.0,"client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/update-ruby-client.sh,CAS_DELIMITER",6.0,1.0,4.0,1.2213861469888507,2.0,181.66666666666663,30.0,10.409753086419752,556.5,176.83154544306626,176.0,None,False,,
0df1ead745f74d7643b73e3065f5c85b240b38fa,c9a111acf47cb5bb2138d1f699253f87d68e53e8,antirez,antirez@gmail.com,Wed Jun 10 14:40:11 2009 +0200,1244637611,It is now possible to specify - as config file name to read it from stdin,16.0,11.0,"client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,2.0,2.0,0.3809465857053901,2.0,2355.5,100.0,0.6059722222222221,560.5,2.2411940699613435,262.0,None,False,True,"[""6bccf64a5e0cf2050da4809a5304bdf797c9d5cf""]"
c9a111acf47cb5bb2138d1f699253f87d68e53e8,e59229a2d540b00566f44c8f29764de3ae89b5be,antirez,antirez@gmail.com,Sun Jun 14 23:15:21 2009 +0200,1245014121,Clojure library thanks to Ragnar Dahlu00c3u00a9n,1338.0,1.0,"client-libraries/README,CAS_DELIMITER,client-libraries/clojure/.gitignore,CAS_DELIMITER,client-libraries/clojure/LICENSE,CAS_DELIMITER,client-libraries/clojure/README.markdown,CAS_DELIMITER,client-libraries/clojure/benchmarks/clojure.clj,CAS_DELIMITER,client-libraries/clojure/benchmarks/ruby.clj,CAS_DELIMITER,client-libraries/clojure/build.xml,CAS_DELIMITER,client-libraries/clojure/examples/demo.clj,CAS_DELIMITER,client-libraries/clojure/src/redis.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/internal.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests/internal.clj,CAS_DELIMITER,redis.c,CAS_DELIMITER",13.0,2.0,8.0,2.891204687840169,2.0,343.07692307692315,97.0,1.8128659188034189,568.0,1.0513171219063515,263.0,None,False,,
e59229a2d540b00566f44c8f29764de3ae89b5be,7492bbe9f52a655bac2480f069083aaf220ac01b,antirez,antirez@gmail.com,Sun Jun 14 23:22:09 2009 +0200,1245014529,SPOP documented,49.0,1.0,"Changelog,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER",3.0,2.0,2.0,0.9106559588025548,2.0,76.0,31.0,9.939741512345678,576.0,1.0679229571190862,119.0,Non Functional,False,,
7492bbe9f52a655bac2480f069083aaf220ac01b,c3cb078d4684d3daba7cf2824fe41c747f69ef51,antirez,antirez@gmail.com,Sun Jun 14 23:34:25 2009 +0200,1245015265,number of keys info in INFO command thanks to Diego Rosario Brogna,13.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,2.0,2230.0,139.0,2.4969965277777777,578.5,1.200506724719917,266.0,None,False,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e""]"
c3cb078d4684d3daba7cf2824fe41c747f69ef51,a3b21203d2c89a298fee34d1e60cf97fb2aa6e1d,antirez,antirez@gmail.com,Tue Jun 16 16:42:20 2009 +0200,1245163340,Better handling of background saving process killed or crashed,31.0,9.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.3843115441264969,2.0,2234.5,141.0,1.7138310185185186,580.5,1.437616072936012,268.0,Perfective,False,,
a3b21203d2c89a298fee34d1e60cf97fb2aa6e1d,df3fd8d88da1432bbf42f6b02ecc19f92c02a2c3,antirez,antirez@gmail.com,Tue Jun 16 16:42:53 2009 +0200,1245163373,Redis release candidate 1,3.0,1.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,2.0,112.0,72.0,0.861556712962963,582.5,1.5804091821638822,270.0,None,False,,
df3fd8d88da1432bbf42f6b02ecc19f92c02a2c3,111d9959c05ac675bb713da589eb7b08fe876d56,antirez,antirez@gmail.com,Tue Jun 16 16:45:04 2009 +0200,1245163504,client libraries updated,165.0,86.0,"client-libraries/clojure/benchmarks/clojure.clj,CAS_DELIMITER,client-libraries/clojure/benchmarks/ruby.clj,CAS_DELIMITER,client-libraries/clojure/build.xml,CAS_DELIMITER,client-libraries/clojure/src/redis.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/internal.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests/internal.clj,CAS_DELIMITER,client-libraries/cpp/TODO,CAS_DELIMITER,client-libraries/cpp/redisclient.cpp,CAS_DELIMITER,client-libraries/cpp/redisclient.h,CAS_DELIMITER,client-libraries/cpp/test_client.cpp,CAS_DELIMITER,client-libraries/lua/redis.lua,CAS_DELIMITER,client-libraries/ruby/.gitignore,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/update-clojure-client.sh,CAS_DELIMITER",16.0,1.0,10.0,3.2934061017099716,2.0,253.9375,32.0,11.421279658564815,591.5,1.1000715795949314,205.0,None,False,,
111d9959c05ac675bb713da589eb7b08fe876d56,88a88bb6672a9ccebccef91799a4c59abbe5ef22,antirez,antirez@gmail.com,Tue Jun 16 16:46:33 2009 +0200,1245163593,update-ruby-client script already points to ezmobius repo,2.0,2.0,"client-libraries/update-ruby-client.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,13.0,2.0,6.691157407407408,600.0,1.1494509752368036,206.0,None,False,,
88a88bb6672a9ccebccef91799a4c59abbe5ef22,f0dec43b53a972bb8959b146d058e754e68be8c8,antirez,antirez@gmail.com,Tue Jun 16 17:33:58 2009 +0200,1245166438,Redis version modified to 0.900,4.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,2.0,2328.0,118.0,0.035665509259259265,601.5,22.10418989925406,272.0,None,False,,
f0dec43b53a972bb8959b146d058e754e68be8c8,774230260ff61dbc143236f690ccc73048f7fdfe,antirez,antirez@gmail.com,Fri Jul 3 19:57:26 2009 +0200,1246643846,bugfix: EXPIRE now propagates to the Slave.,4.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4460.0,95.0,17.099629629629632,603.0,1.0584807988043925,273.0,Corrective,True,,
774230260ff61dbc143236f690ccc73048f7fdfe,b91cf5ef2bca4704a21cee929588a4d455035497,antirez,antirez@gmail.com,Sat Jul 4 15:43:57 2009 +0200,1246715037,"Applied three different patches thanks to Chris Lamb, one to fix compilation and get the IP register value on Linux IA64 and other systems. One in order to log the overcommit problem on the logs instead of the standard output when Redis is demonized. The latest in order to suggest a more consistent way in order to switch to 1 the memory overcommit Linux feature.",12.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4462.0,96.0,0.8239699074074074,604.0,2.213636555182537,274.0,Corrective,True,True,"[""c04c9ac94fdabe1ec2c958e2c6f9aa5d462acd80""]"
b91cf5ef2bca4704a21cee929588a4d455035497,8034b0f9e0a7830f8fde62ad999fc58e103e9d7f,antirez,antirez@gmail.com,Sun Jul 5 12:56:59 2009 +0200,1246791419,"added utils/redis-copy.rb, a script that is able to copy data from one Redis server to another one on the fly.",80.0,0.0,"utils/redis-copy.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,605.0,0.0,3.0,Feature Addition,False,,
8034b0f9e0a7830f8fde62ad999fc58e103e9d7f,21aecf4babfd3e7942ea6ce07657727dd007bbbb,antirez,antirez@gmail.com,Fri Jul 17 11:56:56 2009 +0200,1247824616,"now the size of the shared pool can be really modified via config, also the number of objects in the sharing pool is logged when the log level is set to debug. Thanks to Aman Gupta",2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4467.0,97.0,12.842349537037034,606.0,1.077867371318311,275.0,Corrective,True,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e""]"
21aecf4babfd3e7942ea6ce07657727dd007bbbb,fbf9bcdb6f87d4c9c50d050803c39a139eec35fb,antirez,antirez@gmail.com,Wed Jul 22 10:32:21 2009 +0200,1248251541,Fixed NetBSD compile problems,5.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4467.0,98.0,4.941261574074074,607.0,1.2023774667681677,276.0,Corrective,True,,
fbf9bcdb6f87d4c9c50d050803c39a139eec35fb,06db1f50cd754995130ece657a39d534b82d14ae,antirez,antirez@gmail.com,Fri Jul 24 14:32:58 2009 +0200,1248438778,"fixed compilation with Snow Leopard, thanks to Lon Baker for providing SSH access to Snow Leopard box",8.0,2.0,"config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,2.0,2247.0,101.0,24.462106481481484,608.5,1.0209134474579664,278.0,Corrective,True,,
06db1f50cd754995130ece657a39d534b82d14ae,cbc59b38108dd71b8091be46bd7bdd3cd40c6fe3,antirez,antirez@gmail.com,Fri Jul 24 14:43:20 2009 +0200,1248439400,more snow leopard related fixes (for 32bit systems),4.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4471.0,100.0,0.007199074074074073,610.0,139.90675241157555,279.0,Corrective,True,True,"[""cb7e07cc63f62012c953e528881367db587cb3cf""]"
cbc59b38108dd71b8091be46bd7bdd3cd40c6fe3,ae21a529262a160521d6d4715c718118c840fa61,antirez,antirez@gmail.com,Tue Aug 11 03:00:50 2009 +0200,1249952450,TODO list modified,1.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,30.0,50.0,55.429131944444435,611.0,1.018041054675045,280.0,None,False,,
ae21a529262a160521d6d4715c718118c840fa61,af807d87e8e30978f9a0d162b8004a4af8e4e3a3,antirez,antirez@gmail.com,Tue Sep 1 16:30:52 2009 +0200,1251815452,"Fixed crash with only space and newline as command (issue 61), thanks to a guy having as nick fixxxerrr",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4475.0,101.0,39.07467592592592,612.0,1.0255920228716855,281.0,Corrective,True,True,"[""7c49733ce3f550a96f60a9213911fdc9265cedc8""]"
af807d87e8e30978f9a0d162b8004a4af8e4e3a3,45636487143097d360dfba4f3fa602b08927e355,antirez,antirez@gmail.com,Wed Sep 2 10:29:58 2009 +0200,1251880198,QuickStart added,53.0,4.0,"doc/QuickStart.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",3.0,1.0,1.0,0.5821234801200702,2.0,96.0,3.0,93.32673611111113,614.0,0.6698902641471572,122.0,Feature Addition,False,,
45636487143097d360dfba4f3fa602b08927e355,7c44bbb1108c9460027776138f4079f8ec46934c,antirez,antirez@gmail.com,Wed Sep 2 10:34:27 2009 +0200,1251880467,Scala client added thanks to Alejanro Crosa,1601.0,0.0,"Changelog,CAS_DELIMITER,client-libraries/scala/.gitignore,CAS_DELIMITER,client-libraries/scala/README.md,CAS_DELIMITER,client-libraries/scala/project/build.properties,CAS_DELIMITER,client-libraries/scala/project/build/RedisClientProject.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Connection.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/HashRing.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/KeySpaceOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/ListOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/NodeOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/Operations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/SetOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/SortOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/RedisClient.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/RedisCluster.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/SocketOperations.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/RedisClientSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/RedisClusterSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/SocketOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/helpers/RedisClientTestHelper.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/KeySpaceOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/ListOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/NodeOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/OperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/SetOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/SortOperationsSpec.scala,CAS_DELIMITER",26.0,2.0,9.0,4.303042598440844,2.0,7.6538461538461515,25.0,2.9887949608262114,628.5,1.0128685771241086,231.0,Feature Addition,False,,
7c44bbb1108c9460027776138f4079f8ec46934c,123d7c93cb73a0d09f2a8b34322f1a0f4acc71ba,antirez,antirez@gmail.com,Wed Sep 2 10:36:03 2009 +0200,1251880563,update-scala-client script added,12.0,0.0,"client-libraries/update-scala-client.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,642.0,0.0,232.0,Feature Addition,False,,
123d7c93cb73a0d09f2a8b34322f1a0f4acc71ba,3113921a454a6fad2b745cf8b5c146d396bdf771,antirez,antirez@gmail.com,Wed Sep 2 10:37:32 2009 +0200,1251880652,Ruby client lib updated to the latest git version,172.0,122.0,"client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/examples/test_server.rb,CAS_DELIMITER,client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/hash_ring.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/spec/spec_helper.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER",9.0,1.0,5.0,2.181402647230231,2.0,135.22222222222223,44.0,109.84682998971194,647.0,1.0032350669246073,241.0,Preventative,False,,
3113921a454a6fad2b745cf8b5c146d396bdf771,61c38ac53138e489d7e7260cc4d931b71c9c22ea,antirez,antirez@gmail.com,Wed Sep 2 11:37:01 2009 +0200,1251884221,Redis version pushed to 1.0,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4475.0,102.0,0.7959375,652.0,2.2563800549666277,283.0,None,False,,
61c38ac53138e489d7e7260cc4d931b71c9c22ea,26cdd4dd2d108384f94a614e42b469fab8cba9ba,antirez,antirez@gmail.com,Thu Sep 3 10:38:15 2009 +0200,1251967095,Redis 1.0.0 release,5.0,8.0,"BETATESTING.txt,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,12.0,1.0,164.9640625,653.0,1.0060619263665382,284.0,None,False,,
26cdd4dd2d108384f94a614e42b469fab8cba9ba,557a74e56308325874c573e6dd2c6b228136de86,antirez,antirez@gmail.com,Thu Sep 3 10:42:47 2009 +0200,1251967367,Latest doc changes for 1.0,6.0,7.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER",2.0,1.0,1.0,0.961236604722876,2.0,120.5,77.0,12.163292824074075,654.5,1.5176767748094957,286.0,Non Functional,False,,
557a74e56308325874c573e6dd2c6b228136de86,942a39618b8a7fe59435f632ccfb5e7495564fa1,antirez,antirez@gmail.com,Thu Sep 10 17:45:30 2009 +0200,1252597530,in-memory specialized object encoding (for now 32 signed integers only),253.0,59.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.05591963669874304,2.0,2269.0,116.0,51.70606481481482,656.5,1.0100895389944071,288.0,None,False,True,"[""724a51b1a95b9e6a6937ac363e11df647829d4c6"", ""f1017b3fb318d8524210ce4d599a0b083036dee9"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9"", ""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
942a39618b8a7fe59435f632ccfb5e7495564fa1,244de507b304596b2e853d2294b9421e17b1fba5,antirez,antirez@gmail.com,Thu Sep 10 17:46:21 2009 +0200,1252597581,"incremented version number to 1.001, AKA Redis edge is no longer stable...",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4669.0,104.0,0.0005902777777777778,658.0,1695.1176470588236,289.0,None,False,True,"[""1812e0246cc6dbae16a7fc90be2d8e4866299fe0""]"
244de507b304596b2e853d2294b9421e17b1fba5,d44659004125de932378e0cedb2abfc8cd5e64e1,antirez,antirez@gmail.com,Thu Sep 17 17:23:59 2009 +0200,1253201039,maxmemory didn't worked in 64 systems for values > 4GB since it used to be an unsigned int. Fixed,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4669.0,105.0,6.984467592592592,659.0,1.1431748356969331,290.0,Corrective,True,,
d44659004125de932378e0cedb2abfc8cd5e64e1,724a51b1a95b9e6a6937ac363e11df647829d4c6,antirez,antirez@gmail.com,Fri Sep 18 20:31:47 2009 +0200,1253298707,"LREM fixed, used to crash since the new object integer encoding is on the stage",54.0,11.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5381411852224502,2.0,2737.5,124.0,51.49583333333333,660.5,1.447169542397701,292.0,Corrective,True,True,"[""f69f2cbafeceb03a0bc945227f08657ea1c09251"", ""d7f43c081a49e31aac6b060ca8dfbc259da2c53d"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c""]"
724a51b1a95b9e6a6937ac363e11df647829d4c6,0ea663ea01e6cf6b552e99e3416a38ccb56b0a5f,antirez,antirez@gmail.com,Fri Oct 2 10:23:25 2009 +0200,1254471805,Issue 69 fixed. Object integer encoding now works with replication and MONITORing again.,127.0,37.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER",4.0,1.0,1.0,0.9598806319812936,2.0,1328.75,139.0,86.97580439814814,663.5,1.0167850284893307,296.0,Corrective,True,True,"[""f1017b3fb318d8524210ce4d599a0b083036dee9"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""83c6a61889f167d7c29c88069ada887f038985fd"", ""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c""]"
0ea663ea01e6cf6b552e99e3416a38ccb56b0a5f,c32514972cbf2255d6c78e0ba4f2c7d7b3f652f5,antirez,antirez@gmail.com,Sat Oct 3 10:54:27 2009 +0200,1254560067,benchmark now outputs the right command line to shorten the TIME_WAIT interval on Mac OS X when keep alive is set,1.0,1.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,495.0,7.0,119.50135416666667,666.0,1.0083681060099563,297.0,None,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
c32514972cbf2255d6c78e0ba4f2c7d7b3f652f5,e8a74421bb685abb728e95fa0bf33de52402fe0a,antirez,antirez@gmail.com,Wed Oct 7 13:30:15 2009 +0200,1254915015,"initial multi-bulk query protocol, this will allow MSET and other interesting features.",79.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4719.0,108.0,5.129745370370372,667.0,1.1949414498770334,298.0,Feature Addition,False,,
e8a74421bb685abb728e95fa0bf33de52402fe0a,f1017b3fb318d8524210ce4d599a0b083036dee9,antirez,antirez@gmail.com,Wed Oct 7 17:34:00 2009 +0200,1254929640,undoed all the sds hacking that lead just to random bugs and no memory saving ;),40.0,110.0,"redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER",3.0,1.0,1.0,0.6395563653739031,2.0,1754.0,116.0,3.589101080246913,669.0,3.0611462325594228,301.0,Corrective,True,True,"[""626f6b2d644b2458184edf9318f24ce95ba83532"", ""bd068b15c25c96200a8288beb5d8bc5331059e33""]"
f1017b3fb318d8524210ce4d599a0b083036dee9,f6b141c57d7339b4b1c312dad17b988ae26b85e9,antirez,antirez@gmail.com,Fri Oct 16 13:44:25 2009 +0200,1255693465,MSET and MSETNX commands implemented,76.0,7.0,"TODO,CAS_DELIMITER,client-libraries/tcl/redis.tcl,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,2.0,2.0,1.2610058128812849,2.0,1644.0,166.0,74.21686342592592,672.0,1.0107853957887434,303.0,None,False,True,"[""2ed22c8b29039dce0ae795c4ba3c334b9ec860f4"", ""f69f2cbafeceb03a0bc945227f08657ea1c09251"", ""6c446631dac7a7fe9e34b18392d4a8498c8c9bc3""]"
f6b141c57d7339b4b1c312dad17b988ae26b85e9,638e42aca477816ab4754ffb4e1e2816bdcc163c,antirez,antirez@gmail.com,Fri Oct 16 23:36:33 2009 +0200,1255728993,multi bulk input protocol fixed,44.0,29.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4840.0,111.0,0.4112037037037037,674.0,3.4318847106507544,304.0,Corrective,True,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""5921aa36ede343d728cb53cc7dda87defc966c2f""]"
638e42aca477816ab4754ffb4e1e2816bdcc163c,8d0490e7ec240c177945512c6e1c885767d673b1,antirez,antirez@gmail.com,Fri Oct 16 23:40:47 2009 +0200,1255729247,some dead code removed,4.0,9.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4855.0,112.0,0.002939814814814815,675.0,341.15748031496065,305.0,None,False,,
8d0490e7ec240c177945512c6e1c885767d673b1,2ed22c8b29039dce0ae795c4ba3c334b9ec860f4,antirez,antirez@gmail.com,Sat Oct 17 22:02:59 2009 +0200,1255809779,"MSET fixed, was not able to replace keys already set for a stupid bug",10.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,4850.0,113.0,0.9320833333333334,676.0,2.072865444792132,306.0,Corrective,True,True,"[""6c446631dac7a7fe9e34b18392d4a8498c8c9bc3""]"
2ed22c8b29039dce0ae795c4ba3c334b9ec860f4,8165a5f2a316dd32b5c1c9e0819dc8c1fb1282b2,antirez,antirez@gmail.com,Sat Oct 17 22:17:53 2009 +0200,1255810673,added multi-bulk protocol support to redis-cli and support for MSET and MSETNX,21.0,9.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,358.0,17.0,130.93493055555555,677.0,1.0076373813752908,307.0,Feature Addition,False,True,"[""5762b7f0f8d33eda021da908b6ddced684a2ba05"", ""e17e0b0529eda98156f988c907789f08299c2f7e""]"
8165a5f2a316dd32b5c1c9e0819dc8c1fb1282b2,f69f2cbafeceb03a0bc945227f08657ea1c09251,antirez,antirez@gmail.com,Tue Oct 20 11:39:20 2009 +0200,1256031560,"Imporant bug leading to data corruption fixed (NOT affecting stable distribution), Tcl client lib MSET/MSETNX implementation fixed, Added new tests for MSET and MSETNX in test-redis.tcl",26.0,7.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.115644407487406,2.0,1933.666666666667,138.0,12.703429783950618,679.0,1.1453696645653315,309.0,Corrective,True,,
f69f2cbafeceb03a0bc945227f08657ea1c09251,2abb95a9a849453eeb864e919ea0b8d6495a6a2a,antirez,antirez@gmail.com,Wed Oct 21 10:50:24 2009 +0200,1256115024,SRANDMEMBER added,29.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.21639693245126468,2.0,2613.5,133.0,2.2442997685185184,681.5,1.2533346958764795,311.0,Feature Addition,False,,
2abb95a9a849453eeb864e919ea0b8d6495a6a2a,2c65cbc9e3aa3ff189de3bfe207f4ee8f75edecb,antirez,antirez@gmail.com,Wed Oct 21 10:58:27 2009 +0200,1256115507,TODO updated,2.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,31.0,53.0,4.8847453703703705,683.0,1.2047189616199336,312.0,None,False,,
2c65cbc9e3aa3ff189de3bfe207f4ee8f75edecb,1812e0246cc6dbae16a7fc90be2d8e4866299fe0,antirez,antirez@gmail.com,Thu Oct 22 16:15:26 2009 +0200,1256220926,version incremented to 1.050 to distinguish from 1.001 stable and next stable versions with minor fixes,41.0,2.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8541802051521675,2.0,2552.5,144.0,10.735086805555557,684.5,1.0479862407543714,314.0,Corrective,True,True,"[""cb7e07cc63f62012c953e528881367db587cb3cf"", ""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55"", ""da0a1620771c54bb67cdef46dae40f005133b8d1""]"
1812e0246cc6dbae16a7fc90be2d8e4866299fe0,cb7e07cc63f62012c953e528881367db587cb3cf,antirez,antirez@gmail.com,Fri Oct 23 01:36:10 2009 +0200,1256254570,Fixed compilation in mac os x snow leopard when compiling a 32 bit binary.,10.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,2.0,2472.5,171.0,0.9994618055555556,686.5,1.5607851895108138,316.0,Corrective,True,True,"[""6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55""]"
cb7e07cc63f62012c953e528881367db587cb3cf,6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55,antirez,antirez@gmail.com,Fri Oct 23 20:33:25 2009 +0200,1256322805,initial skiplist implementation. Most memory checks removed and zmalloc() modified to fail with an error message and abort. Anyway Redis is not designed to recover from out of memory conditions.,125.0,47.0,"redis.c,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.40707680632541937,2.0,2513.0,123.0,70.59715856481479,688.5,1.636647396192341,318.0,Corrective,True,True,"[""913e9d6bcacfa28ace3b7ee1c75f8ec4e146974b"", ""412a8bcea3e2329ee255174d68b6760416cc3a59"", ""6fcb18003940f8c7f464293677bd7286cad4dce2"", ""6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee"", ""1caa627e4e53c479f1ee1f1f80b1b980d55eef7f""]"
6b47e12ef8d9e4fdf6fe9aa9b459baf5c107ab55,fd8ccf4419ab94ab5a9250c0dc7a8d1761056b48,antirez,antirez@gmail.com,Fri Oct 23 21:24:01 2009 +0200,1256325841,more work on ZSETs and a new make target called 32bit to build i386 binaries on mac os x leopard,85.0,1.0,"Makefile,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.4104055911506351,2.0,1807.333333333333,152.0,15.208966049382715,691.0,1.0223415724068885,321.0,Feature Addition,False,True,"[""ad807e6fa3ce761a862a627316e6545f50779668"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541""]"
fd8ccf4419ab94ab5a9250c0dc7a8d1761056b48,ace4ee541ac6254b0634149d90fbc48bcf518ac1,antirez,antirez@gmail.com,Fri Oct 23 21:43:09 2009 +0200,1256326989,zset symbols added to stack trace code. ZSets will simply crash at the moment,9.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5068.0,120.0,0.013287037037037036,693.0,76.26132404181185,322.0,Feature Addition,False,,
ace4ee541ac6254b0634149d90fbc48bcf518ac1,913e9d6bcacfa28ace3b7ee1c75f8ec4e146974b,antirez,antirez@gmail.com,Fri Oct 23 22:16:50 2009 +0200,1256329010,"first skiplist fix, courtesy of valgrind",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5077.0,121.0,0.023391203703703702,694.0,43.75111331024246,323.0,Corrective,True,,
913e9d6bcacfa28ace3b7ee1c75f8ec4e146974b,cc81236105712f89c96a46ef401219a443b7796d,antirez,antirez@gmail.com,Fri Oct 23 22:32:29 2009 +0200,1256329949,zrange initial hack (not working for now),58.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.12565805017256745,2.0,2724.5,142.0,0.029207175925925925,695.5,20.075606533251506,325.0,Feature Addition,False,,
cc81236105712f89c96a46ef401219a443b7796d,0aad7a1938c015c59d7ccdedd3dae8c2132170db,antirez,antirez@gmail.com,Fri Oct 23 22:39:25 2009 +0200,1256330365,zrange now starts to work. zadd still does not support update and will crash or leak or b000mmmmm,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5134.0,123.0,0.004814814814814815,697.0,208.6923076923077,326.0,Feature Addition,False,,
0aad7a1938c015c59d7ccdedd3dae8c2132170db,e197b441a2bc18c5b0c8ba4d2aafd5f79e54c058,antirez,antirez@gmail.com,Sat Oct 24 01:27:18 2009 +0200,1256340438,"some work on ZADD against existing element (score update), still broken...",52.0,4.0,"client-libraries/tcl/redis.tcl,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,2.0,2.0,0.3505730632745763,2.0,1879.333333333333,151.0,1.2709876543209877,699.0,1.2708401592835872,328.0,Feature Addition,False,True,"[""682ac7248a11ae7bf0e8d935c3ec13177500484e""]"
e197b441a2bc18c5b0c8ba4d2aafd5f79e54c058,f4d4c47f66a182746e3955c5240c2c0e8d528e43,antirez,antirez@gmail.com,Sat Oct 24 01:31:29 2009 +0200,1256340689,fix for ZADD in score update mode,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5181.0,125.0,0.002905092592592593,701.0,345.2231075697212,329.0,Corrective,True,,
f4d4c47f66a182746e3955c5240c2c0e8d528e43,1b7106e7dbf5317299da74cd79a1d488daa1bdaf,antirez,antirez@gmail.com,Mon Oct 26 12:04:42 2009 +0100,1256555082,ZREM implemented,41.0,2.0,"TODO,CAS_DELIMITER,client-libraries/tcl/redis.tcl,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,2.0,2.0,0.6955381149147434,2.0,1430.5,210.0,2.7320399305555565,703.5,1.1662802048119438,332.0,None,False,True,"[""d7f43c081a49e31aac6b060ca8dfbc259da2c53d"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541""]"
1b7106e7dbf5317299da74cd79a1d488daa1bdaf,9b1d5ebbe426b8158a9ee484a7e5371175e63949,antirez,antirez@gmail.com,Mon Oct 26 12:26:30 2009 +0100,1256556390,TODO updated,1.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,35.0,56.0,0.015138888888888891,706.0,67.05504587155963,333.0,None,False,,
9b1d5ebbe426b8158a9ee484a7e5371175e63949,e3870fab57b8073de1ebc04bbd300c6ab45c1c34,antirez,antirez@gmail.com,Mon Oct 26 16:14:49 2009 +0100,1256570089,"backward support to skiplists for ZREVRANGE, still broken, committing since I've to merge the Solaris patches",39.0,6.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.1537421803287619,2.0,2797.5,150.0,0.17369212962962965,707.5,5.317984940361165,335.0,Non Functional,False,True,"[""bb975144e4e84b618c8d4f1aa5adae428828b544""]"
e3870fab57b8073de1ebc04bbd300c6ab45c1c34,325d1eb4a86b59eaa8c867b2bb0a7a827d98aaf0,antirez,antirez@gmail.com,Mon Oct 26 16:25:07 2009 +0100,1256570707,Merged Solaris patches provided by Alan Harder,10.0,13.0,"Makefile,CAS_DELIMITER,pqsort.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.3257847812033308,2.0,1841.333333333333,147.0,51.26515817901235,710.0,1.1219502108799857,338.0,Non Functional,False,,
325d1eb4a86b59eaa8c867b2bb0a7a827d98aaf0,bb975144e4e84b618c8d4f1aa5adae428828b544,antirez,antirez@gmail.com,Mon Oct 26 16:43:56 2009 +0100,1256571836,Fix for skiplists backward link,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5252.0,129.0,0.01306712962962963,712.0,77.52790079716563,339.0,Corrective,True,,
bb975144e4e84b618c8d4f1aa5adae428828b544,599379dddaed98b8ab037a4303d9aa3ed6c9896d,antirez,antirez@gmail.com,Mon Oct 26 17:02:05 2009 +0100,1256572925,"ZSETs memory leak #1 solved, another one missing",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5252.0,130.0,0.012604166666666666,713.0,80.33884297520662,340.0,None,False,,
599379dddaed98b8ab037a4303d9aa3ed6c9896d,ad807e6fa3ce761a862a627316e6545f50779668,antirez,antirez@gmail.com,Mon Oct 26 17:33:31 2009 +0100,1256574811,"another leak fixed. Can't find more for now, but still a bug in ZSETs to fix",5.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5252.0,131.0,0.021828703703703704,714.0,46.811240721102855,341.0,Corrective,True,,
ad807e6fa3ce761a862a627316e6545f50779668,2161a9652725971e2602901410b4a5df0307f57e,antirez,antirez@gmail.com,Mon Oct 26 17:57:24 2009 +0100,1256576244,ZSETs random fixes. Now the implementation appears to be pretty stable,3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5256.0,132.0,0.016585648148148148,715.0,61.2930914166085,342.0,Corrective,True,,
2161a9652725971e2602901410b4a5df0307f57e,a7866db6cc5f68cd577bc9684d10bb048d63788f,antirez,antirez@gmail.com,Mon Oct 26 18:26:04 2009 +0100,1256577964,double serialization routines implemented,59.0,1.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.28639695711595625,2.0,2665.5,149.0,0.05195023148148148,716.5,11.765171183184915,344.0,None,False,True,"[""eaa256ad256e385f6f448df6c162ff14f4d2956b"", ""6c446631dac7a7fe9e34b18392d4a8498c8c9bc3""]"
a7866db6cc5f68cd577bc9684d10bb048d63788f,2b59cfdfe9629b5fd8543aa8bc8416d6d3f5db04,antirez,antirez@gmail.com,Mon Oct 26 18:47:12 2009 +0100,1256579232,ZSET now saved on disk like any other type,39.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5316.0,134.0,0.014675925925925926,718.0,69.13880126182966,345.0,None,False,,
2b59cfdfe9629b5fd8543aa8bc8416d6d3f5db04,9d60e6e466bd8f61c23d4664eba05200376cc1b9,antirez,antirez@gmail.com,Mon Oct 26 20:47:23 2009 +0100,1256586443,A trivial change makes the new implementation O(log(N)) instead of O(log(N))+O(M) when there are M repeated scores!,24.0,21.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5355.0,135.0,0.08346064814814813,719.0,12.981694633199279,346.0,Feature Addition,False,,
9d60e6e466bd8f61c23d4664eba05200376cc1b9,50c55df529ae207e45e156f2cd852b418caccde2,antirez,antirez@gmail.com,Mon Oct 26 23:02:56 2009 +0100,1256594576,ZRANGEBYSCORE implemented. Redis got range queries!,67.0,1.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.11058084476988707,2.0,2867.0,160.0,0.18877314814814816,720.5,4.088542308150996,348.0,None,False,True,"[""dbbc7285eee02ed4fed7d460d3407b02a271da72"", ""f44dd428729064d75804c86223811badcf73716d""]"
50c55df529ae207e45e156f2cd852b418caccde2,dbbc7285eee02ed4fed7d460d3407b02a271da72,antirez,antirez@gmail.com,Mon Oct 26 23:06:19 2009 +0100,1256594779,fix for ZRANGEBYSCORE,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5423.0,137.0,0.002349537037037037,722.0,426.615763546798,349.0,Corrective,True,True,"[""f44dd428729064d75804c86223811badcf73716d""]"
dbbc7285eee02ed4fed7d460d3407b02a271da72,6e333bbee207941f7a91bab8f90fc9a20d6ef987,antirez,antirez@gmail.com,Tue Oct 27 01:06:49 2009 +0100,1256602009,ZSCORE implemented,34.0,1.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.5007115883735379,2.0,1945.0,220.0,0.2325694444444445,724.0,2.6519340581943407,352.0,None,False,True,"[""eaa256ad256e385f6f448df6c162ff14f4d2956b"", ""96d8b4eeba2503c9f679e41963220a72ee5baeda""]"
6e333bbee207941f7a91bab8f90fc9a20d6ef987,d8b5f18f1da560dbe39e553407f0fd58d43d0129,antirez,antirez@gmail.com,Tue Oct 27 09:06:54 2009 +0100,1256630814,zmalloc Solaris fixes thanks to Alan Harder,14.0,8.0,"zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,116.0,6.0,3.564918981481481,726.0,1.2805112837611887,353.0,Corrective,True,True,"[""7cdc98b6305bb65aee5f5973e8123246755dac7d"", ""5ae979bf5798f5eaab56636034623d25bc70a941""]"
d8b5f18f1da560dbe39e553407f0fd58d43d0129,d7f43c081a49e31aac6b060ca8dfbc259da2c53d,antirez,antirez@gmail.com,Tue Oct 27 18:31:12 2009 +0100,1256664672,"A lot of ZSETs tests implemented, and a bug fixed thanks to this new tests",112.0,14.0,"TODO,CAS_DELIMITER,client-libraries/tcl/redis.tcl,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.0265704165151983,2.0,1613.25,225.0,2.5116550925925925,728.5,1.5869297148993788,356.0,Corrective,True,True,"[""eaa256ad256e385f6f448df6c162ff14f4d2956b"", ""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c""]"
d7f43c081a49e31aac6b060ca8dfbc259da2c53d,5043dff351f4ad9095f66bbef8e08d363cd959a0,antirez,antirez@gmail.com,Tue Oct 27 18:38:25 2009 +0100,1256665105,More Solaris fixes,19.0,0.0,"redis.c,CAS_DELIMITER,solarisfixes.h,CAS_DELIMITER",2.0,1.0,1.0,0.6292492238560345,2.0,2731.0,140.0,0.0025057870370370373,731.5,200.53810623556583,358.0,Corrective,True,True,"[""0bc1b2f651aa054cf1b83b3d1379120b98902150""]"
5043dff351f4ad9095f66bbef8e08d363cd959a0,0bc1b2f651aa054cf1b83b3d1379120b98902150,antirez,antirez@gmail.com,Tue Oct 27 18:39:47 2009 +0100,1256665187,a fix for the solaris fix itself ;),4.0,1.0,"redis.c,CAS_DELIMITER,solarisfixes.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,2.0,2740.5,142.0,0.000949074074074074,733.5,791.2439024390244,360.0,Corrective,True,,
0bc1b2f651aa054cf1b83b3d1379120b98902150,5b19e727c7bea32ddd68896bc5c4fdccf0c8a2d5,antirez,antirez@gmail.com,Tue Oct 27 18:44:17 2009 +0100,1256665457,Fix for 'make 32bit',1.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,73.0,17.0,1.012650462962963,735.0,1.9875075720343345,361.0,Corrective,True,,
5b19e727c7bea32ddd68896bc5c4fdccf0c8a2d5,23cff1a874693a80fc76b4b947cddfbe461ab43e,antirez,antirez@gmail.com,Tue Oct 27 18:54:03 2009 +0100,1256666043,TODO reworked to reflect the real roadmap,8.0,14.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,35.0,59.0,0.015868055555555555,736.0,64.01969365426696,362.0,None,False,,
23cff1a874693a80fc76b4b947cddfbe461ab43e,3c41331e118ca130736193b3ee26827c990b3537,antirez,antirez@gmail.com,Wed Oct 28 13:17:14 2009 +0100,1256732234,ZLEN renamed ZCARD for consistency with SCARD,34.0,4.0,"Changelog,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.9132829641650988,2.0,2025.333333333333,197.0,2.733719135802469,738.0,1.1418632664127135,365.0,None,False,,
3c41331e118ca130736193b3ee26827c990b3537,d13f767cf2c23f47fd976380c8c8833ec525eccd,antirez,antirez@gmail.com,Wed Oct 28 23:03:57 2009 +0100,1256767437,TODO changes and mostly theoretical minor skiplist change,5.0,1.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,2747.5,203.0,0.7904918981481481,740.5,1.7423194894666842,367.0,None,False,,
d13f767cf2c23f47fd976380c8c8833ec525eccd,1807985bafe08e69c1665684a0a274a4f1d74c08,antirez,antirez@gmail.com,Thu Oct 29 11:10:16 2009 +0100,1256811016,ZREMRANGEBYSCORE implemented. Remove a range of elements with score between min and max,70.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.10802319526362833,2.0,2922.0,171.0,0.7081076388888891,742.5,1.9014022766111685,369.0,None,False,,
1807985bafe08e69c1665684a0a274a4f1d74c08,f72b934d1478add5e580e312e93831cbab178a89,antirez,antirez@gmail.com,Thu Oct 29 11:30:43 2009 +0100,1256812243,Fixed  Issue 76 (redis-server crashes when it can't connect to MASTER and client connects to SLAVE),2.0,1.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,2784.0,206.0,0.2663946759259259,744.5,2.9026137799238034,371.0,Corrective,True,,
f72b934d1478add5e580e312e93831cbab178a89,6c9385e01d127f8ffa6a783b2a571d8ac4b73666,antirez,antirez@gmail.com,Thu Oct 29 11:31:55 2009 +0100,1256812315,Fixed issue 77 (Incorrect time in log files) thanks to youwantalex,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5535.0,146.0,0.0008333333333333334,746.0,1201.0,372.0,Corrective,True,,
6c9385e01d127f8ffa6a783b2a571d8ac4b73666,4aa701c11aae2b645583e78a808452ae7e1918da,antirez,antirez@gmail.com,Thu Oct 29 11:38:32 2009 +0100,1256812712,Fixed issue 72 (SLAVEOF shutdowns redis-server on malformed reply),5.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5535.0,147.0,0.004594907407407408,747.0,218.63224181360198,373.0,Corrective,True,,
4aa701c11aae2b645583e78a808452ae7e1918da,fa4c0aba85fca17e2526831d1afa530724479ed5,antirez,antirez@gmail.com,Thu Oct 29 11:43:40 2009 +0100,1256813020,"Fixed Issue 74 (ERR just returned on invalid password), now the error message is -ERR invalid password.",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5540.0,148.0,0.003564814814814815,748.0,281.5194805194805,374.0,Corrective,True,,
fa4c0aba85fca17e2526831d1afa530724479ed5,802e8373735c2708029f03b4b46ecc0e0ee50a1d,antirez,antirez@gmail.com,Fri Oct 30 00:15:45 2009 +0100,1256858145,"EXPIREAT implemented, will be useful for the append-only mode",16.0,4.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.5689955935892812,2.0,1984.333333333333,239.0,0.5330092592592592,750.0,2.1454578713540773,377.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
802e8373735c2708029f03b4b46ecc0e0ee50a1d,43e5ccdf57e2144a8a43c04c5a64e91a155a78fb,antirez,antirez@gmail.com,Fri Oct 30 00:21:04 2009 +0100,1256858464,"EXPIRE behaviour changed a bit, a negative TTL or an EXPIREAT with unix time in the past will now delete the key. It seems saner to me than doing nothing.",3.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5550.0,150.0,0.00369212962962963,752.0,271.84639498432597,378.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
43e5ccdf57e2144a8a43c04c5a64e91a155a78fb,44b38ef43259e8805b01db01ad9a1c67479c6194,antirez,antirez@gmail.com,Fri Oct 30 01:04:17 2009 +0100,1256861057,Initial implementation of append-only mode. Loading still not implemented.,89.0,0.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.7035821005719904,2.0,2841.5,163.0,74.22429398148148,753.5,17.66360727474105,380.0,Feature Addition,False,True,"[""71eba4775d886fe85337560e2103680390ed2cdd"", ""33ed1a426da493b4fd5a6a177007d38d7e1c6770""]"
44b38ef43259e8805b01db01ad9a1c67479c6194,16f9254761332a0f939cb145529d8ce5d55262a5,antirez,antirez@gmail.com,Fri Oct 30 01:11:29 2009 +0100,1256861489,first fix for append only mode,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5623.0,152.0,0.005,755.0,201.0,381.0,Corrective,True,,
16f9254761332a0f939cb145529d8ce5d55262a5,48f0308ad327d3bf4a89c1fc1ca977b7ed6f0f96,antirez,antirez@gmail.com,Fri Oct 30 13:48:53 2009 +0100,1256906933,"support for appendonly mode no, always, everysec",47.0,2.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9313043685793764,2.0,2886.5,166.0,0.5284722222222222,756.5,2.4236823048072,383.0,None,False,True,"[""1766c6dadce7dd59f3f272d8cc21a4ce52c3f561""]"
48f0308ad327d3bf4a89c1fc1ca977b7ed6f0f96,0154acdc57bd73f0a7f8afe2cecc890679ee97ff,antirez,antirez@gmail.com,Fri Oct 30 16:35:16 2009 +0100,1256916916,appendfsync is now set to NO by default,3.0,1.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,2909.0,168.0,0.11554398148148147,758.5,7.4910347590904545,385.0,None,False,,
0154acdc57bd73f0a7f8afe2cecc890679ee97ff,4e141d5a21626a43ad61c91f2baddffdaf01fcb1,antirez,antirez@gmail.com,Fri Oct 30 17:20:24 2009 +0100,1256919624,append only mode is now able to translate EXPIRE into EXPIREAT transparently,34.0,7.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9474351361840306,2.0,2910.0,170.0,0.0313425925925926,760.5,24.929098966026586,387.0,None,False,,
4e141d5a21626a43ad61c91f2baddffdaf01fcb1,71eba4775d886fe85337560e2103680390ed2cdd,antirez,antirez@gmail.com,Sat Oct 31 14:32:01 2009 +0100,1256995921,Fixed compilation on Linux,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5676.0,156.0,0.8830671296296296,762.0,2.1324167398456035,388.0,Corrective,True,,
71eba4775d886fe85337560e2103680390ed2cdd,412a8bcea3e2329ee255174d68b6760416cc3a59,antirez,antirez@gmail.com,Sat Oct 31 23:03:10 2009 +0100,1257026590,Fixed Issue 83:Using TYPE on a zset results in a malformed response from the Redis server,2.0,1.0,"redis.c,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,2899.0,164.0,2.4678530092592594,763.5,2.5098911068456404,390.0,Corrective,True,,
412a8bcea3e2329ee255174d68b6760416cc3a59,f80dff6212661a404c7c32c6741691b6255a4e31,antirez,antirez@gmail.com,Sun Nov 1 10:54:55 2009 +0100,1257069295,first version of append only file loading -- STILL BROKEN don't use it,197.0,83.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5677.0,158.0,0.4942708333333333,765.0,3.0231822971549,391.0,None,False,True,"[""0f151ef1a032e7065e156e4e2481efa9d4230717"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""83c6a61889f167d7c29c88069ada887f038985fd""]"
f80dff6212661a404c7c32c6741691b6255a4e31,9387d17dfeb757d685236ff5c792d102ea296631,antirez,antirez@gmail.com,Sun Nov 1 11:05:50 2009 +0100,1257069950,append only file loading fixed,3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5791.0,159.0,0.007581018518518519,766.0,132.9083969465649,392.0,Corrective,True,,
9387d17dfeb757d685236ff5c792d102ea296631,1766c6dadce7dd59f3f272d8cc21a4ce52c3f561,antirez,antirez@gmail.com,Sun Nov 1 11:55:46 2009 +0100,1257072946,appendfsync parsing in config file fixed. If you benchmarked Redis against different appendfsync options is time to try again ;),3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5794.0,160.0,0.034675925925925916,767.0,29.83845126835781,393.0,Corrective,True,,
1766c6dadce7dd59f3f272d8cc21a4ce52c3f561,33ed1a426da493b4fd5a6a177007d38d7e1c6770,antirez,antirez@gmail.com,Sun Nov 1 13:43:34 2009 +0100,1257079414,"another fix for append only mode, now read-only operations are not appended",2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5794.0,161.0,0.07486111111111111,768.0,14.358070500927644,394.0,Corrective,True,,
33ed1a426da493b4fd5a6a177007d38d7e1c6770,d8f8b666f451a2116c93ec4ff6207d9ca013855e,antirez,antirez@gmail.com,Sun Nov 1 14:14:02 2009 +0100,1257081242,now Redis prints DB stats just after the startup without to wait a second for the first report,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5794.0,162.0,0.02115740740740741,769.0,48.264770240700216,395.0,None,False,,
d8f8b666f451a2116c93ec4ff6207d9ca013855e,443c6409c326792514ced7a6c68a7f44c47898f7,antirez,antirez@gmail.com,Sun Nov 1 15:29:38 2009 +0100,1257085778,SORT STORE option,66.0,40.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.1539041273304295,2.0,2069.6666666666665,255.0,1.7739274691358033,771.0,1.2524148182895245,398.0,None,False,True,"[""121796f792c4d8fdc06fe664d675ec16791f6818"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""55017f9da0c8ee8709029c4dbdbf4f1d4db4a181""]"
443c6409c326792514ced7a6c68a7f44c47898f7,e2aba0f9ec23d00610b315f8163d7a0ec255c370,antirez,antirez@gmail.com,Sun Nov 1 15:31:54 2009 +0100,1257085914,redis-cli now makes clear when the returned string is an integer,1.0,0.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,381.0,30.0,0.001574074074074074,773.0,636.2941176470587,399.0,None,False,,
e2aba0f9ec23d00610b315f8163d7a0ec255c370,cf4a492cd2653094d45c0f1a2289c3474275e6ac,antirez,antirez@gmail.com,Sun Nov 1 15:46:55 2009 +0100,1257086815,TODO updated,2.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,34.0,64.0,0.012002314814814816,774.0,84.31726133076181,400.0,None,False,,
cf4a492cd2653094d45c0f1a2289c3474275e6ac,cdd140aa67be01a994dbb001e050f3dd2b0578ee,antirez,antirez@gmail.com,Sun Nov 1 15:47:40 2009 +0100,1257086860,TODO updated again,1.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,35.0,65.0,0.0005208333333333333,775.0,1921.0,401.0,None,False,,
cdd140aa67be01a994dbb001e050f3dd2b0578ee,5762b7f0f8d33eda021da908b6ddced684a2ba05,antirez,antirez@gmail.com,Tue Nov 3 01:35:39 2009 +0100,1257208539,redis-cli now accepts a -r (repeat) switch. Still there is a memory leaks to fix,37.0,27.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,382.0,31.0,1.4192708333333333,776.0,1.7045871559633028,402.0,Corrective,True,True,"[""570333015147ce01646ff61e50afc210a12408db"", ""aab055ae1f3a4900db2983490236c9e5fb3af0eb""]"
5762b7f0f8d33eda021da908b6ddced684a2ba05,1259672feb4fcad189d413a341745990a844feda,antirez,antirez@gmail.com,Tue Nov 3 11:25:32 2009 +0100,1257243932,client libs removed from Redis git,0.0,10740.0,"client-libraries/README,CAS_DELIMITER,client-libraries/clojure/.gitignore,CAS_DELIMITER,client-libraries/clojure/LICENSE,CAS_DELIMITER,client-libraries/clojure/README.markdown,CAS_DELIMITER,client-libraries/clojure/benchmarks/clojure.clj,CAS_DELIMITER,client-libraries/clojure/benchmarks/ruby.clj,CAS_DELIMITER,client-libraries/clojure/build.xml,CAS_DELIMITER,client-libraries/clojure/examples/demo.clj,CAS_DELIMITER,client-libraries/clojure/src/redis.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/internal.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests.clj,CAS_DELIMITER,client-libraries/clojure/src/redis/tests/internal.clj,CAS_DELIMITER,client-libraries/cpp/Makefile,CAS_DELIMITER,client-libraries/cpp/README.rst,CAS_DELIMITER,client-libraries/cpp/TODO,CAS_DELIMITER,client-libraries/cpp/anet.c,CAS_DELIMITER,client-libraries/cpp/anet.h,CAS_DELIMITER,client-libraries/cpp/fmacros.h,CAS_DELIMITER,client-libraries/cpp/redisclient.cpp,CAS_DELIMITER,client-libraries/cpp/redisclient.h,CAS_DELIMITER,client-libraries/cpp/test_client.cpp,CAS_DELIMITER,client-libraries/erlang/.hg_archival.txt,CAS_DELIMITER,client-libraries/erlang/.hgignore,CAS_DELIMITER,client-libraries/erlang/LICENSE,CAS_DELIMITER,client-libraries/erlang/Makefile,CAS_DELIMITER,client-libraries/erlang/include/erldis.hrl,CAS_DELIMITER,client-libraries/erlang/src/Makefile,CAS_DELIMITER,client-libraries/erlang/src/client.erl,CAS_DELIMITER,client-libraries/erlang/src/erldis.erl,CAS_DELIMITER,client-libraries/erlang/src/proto.erl,CAS_DELIMITER,client-libraries/erlang/support/include.mk,CAS_DELIMITER,client-libraries/erlang/test/Makefile,CAS_DELIMITER,client-libraries/erlang/test/erldis_tests.erl,CAS_DELIMITER,client-libraries/erlang/test/proto_tests.erl,CAS_DELIMITER,client-libraries/lua/LICENSE,CAS_DELIMITER,client-libraries/lua/README,CAS_DELIMITER,client-libraries/lua/redis.lua,CAS_DELIMITER,client-libraries/perl/Changes,CAS_DELIMITER,client-libraries/perl/MANIFEST,CAS_DELIMITER,client-libraries/perl/Makefile.PL,CAS_DELIMITER,client-libraries/perl/README,CAS_DELIMITER,client-libraries/perl/lib/Redis.pm,CAS_DELIMITER,client-libraries/perl/lib/Redis/Hash.pm,CAS_DELIMITER,client-libraries/perl/lib/Redis/List.pm,CAS_DELIMITER,client-libraries/perl/scripts/redis-benchmark.pl,CAS_DELIMITER,client-libraries/perl/t/00-load.t,CAS_DELIMITER,client-libraries/perl/t/01-Redis.t,CAS_DELIMITER,client-libraries/perl/t/10-Redis-List.t,CAS_DELIMITER,client-libraries/perl/t/20-Redis-Hash.t,CAS_DELIMITER,client-libraries/perl/t/pod-coverage.t,CAS_DELIMITER,client-libraries/perl/t/pod.t,CAS_DELIMITER,client-libraries/php/redis.php,CAS_DELIMITER,client-libraries/php/tests.php,CAS_DELIMITER,client-libraries/python/redis.py,CAS_DELIMITER,client-libraries/ruby/.gitignore,CAS_DELIMITER,client-libraries/ruby/LICENSE,CAS_DELIMITER,client-libraries/ruby/README.markdown,CAS_DELIMITER,client-libraries/ruby/Rakefile,CAS_DELIMITER,client-libraries/ruby/bench.rb,CAS_DELIMITER,client-libraries/ruby/benchmarking/suite.rb,CAS_DELIMITER,client-libraries/ruby/benchmarking/worker.rb,CAS_DELIMITER,client-libraries/ruby/bin/distredis,CAS_DELIMITER,client-libraries/ruby/examples/basic.rb,CAS_DELIMITER,client-libraries/ruby/examples/incr-decr.rb,CAS_DELIMITER,client-libraries/ruby/examples/list.rb,CAS_DELIMITER,client-libraries/ruby/examples/sets.rb,CAS_DELIMITER,client-libraries/ruby/lib/dist_redis.rb,CAS_DELIMITER,client-libraries/ruby/lib/hash_ring.rb,CAS_DELIMITER,client-libraries/ruby/lib/pipeline.rb,CAS_DELIMITER,client-libraries/ruby/lib/redis.rb,CAS_DELIMITER,client-libraries/ruby/profile.rb,CAS_DELIMITER,client-libraries/ruby/redis-rb.gemspec,CAS_DELIMITER,client-libraries/ruby/spec/redis_spec.rb,CAS_DELIMITER,client-libraries/ruby/spec/spec_helper.rb,CAS_DELIMITER,client-libraries/ruby/speed.rb,CAS_DELIMITER,client-libraries/ruby/tasks/redis.tasks.rb,CAS_DELIMITER,client-libraries/scala/.gitignore,CAS_DELIMITER,client-libraries/scala/README.md,CAS_DELIMITER,client-libraries/scala/project/build.properties,CAS_DELIMITER,client-libraries/scala/project/build/RedisClientProject.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Connection.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/HashRing.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/KeySpaceOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/ListOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/NodeOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/Operations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/SetOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/Operations/SortOperations.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/RedisClient.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/RedisCluster.scala,CAS_DELIMITER,client-libraries/scala/src/main/scala/com/redis/SocketOperations.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/RedisClientSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/RedisClusterSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/SocketOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/helpers/RedisClientTestHelper.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/KeySpaceOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/ListOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/NodeOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/OperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/SetOperationsSpec.scala,CAS_DELIMITER,client-libraries/scala/src/test/scala/com/redis/operations/SortOperationsSpec.scala,CAS_DELIMITER,client-libraries/tcl/redis.tcl,CAS_DELIMITER,client-libraries/update-clojure-client.sh,CAS_DELIMITER,client-libraries/update-cpp-client.sh,CAS_DELIMITER,client-libraries/update-erlang-client.sh,CAS_DELIMITER,client-libraries/update-lua-client.sh,CAS_DELIMITER,client-libraries/update-perl-client.sh,CAS_DELIMITER,client-libraries/update-python-client.sh,CAS_DELIMITER,client-libraries/update-ruby-client.sh,CAS_DELIMITER,client-libraries/update-scala-client.sh,CAS_DELIMITER",110.0,1.0,37.0,5.569988232204134,2.0,97.93636363636364,222.0,146.10925589225582,831.5,1.00032163054379,356.0,None,False,,
1259672feb4fcad189d413a341745990a844feda,f89c3a3500e0f62688ab3ee649002601844b1592,antirez,antirez@gmail.com,Tue Nov 3 11:28:37 2009 +0100,1257244117,redis.tcl put at toplevel since it's uesd for the test-redis.tcl script,132.0,1.0,"redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.1125875994003927,2.0,461.5,21.0,3.3532696759259264,887.5,0.574554099181113,404.0,Preventative,False,True,"[""ab72b4833d2054231437acccec36f32f07290075"", ""c4669d257fd0a375e7a94d26538be9ad28ac6b19"", ""7dcdd281f529dea2389509f90b101c0471f7f2bd""]"
f89c3a3500e0f62688ab3ee649002601844b1592,9155ea9c710f9ba481ac2c65a6a354a90eac8442,antirez,antirez@gmail.com,Tue Nov 3 12:05:13 2009 +0100,1257246313,client-libraries directory readded,11.0,0.0,"client-libraries/README,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,0.0,8.0,0.027557870370370368,889.0,37.287274254514905,357.0,Feature Addition,False,,
9155ea9c710f9ba481ac2c65a6a354a90eac8442,eaa256ad256e385f6f448df6c162ff14f4d2956b,antirez,antirez@gmail.com,Tue Nov 3 14:36:38 2009 +0100,1257255398,ZSets double to string serialization fixed,22.0,6.0,".gitignore,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.5844350719354887,2.0,1696.75,257.0,56.4820775462963,891.5,1.004457343132872,408.0,Corrective,True,,
eaa256ad256e385f6f448df6c162ff14f4d2956b,d0ccebcf46a2f726117b05f2a317b0a5e7113cae,antirez,antirez@gmail.com,Wed Nov 4 09:53:43 2009 +0100,1257324823,"masterauth option merged, thanks to Anthony Lauzon",37.0,3.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,2.0,2946.5,183.0,4.217540509259258,894.5,1.1247937353562492,410.0,Non Functional,False,,
d0ccebcf46a2f726117b05f2a317b0a5e7113cae,121796f792c4d8fdc06fe664d675ec16791f6818,root,root@yserv.com,Wed Nov 4 11:59:27 2009 +0100,1257332367,fixed a refcounting bug with SORT ... STORE leading to random crashes,9.0,4.0,"dict.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8904916402194913,2.0,3214.5,171.0,93.89460648148147,0.5,0.5026625597504294,1.0,Corrective,True,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
121796f792c4d8fdc06fe664d675ec16791f6818,eea4baf70d42500c574fc4ac23467a03bb79bb16,antirez,antirez@gmail.com,Wed Nov 4 12:26:57 2009 +0100,1257334017,"redis-test is now a better Redis citizen, testing everything against DB 9 and 10 and only if this DBs are empty.",44.0,21.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,936.0,23.0,0.9099421296296296,896.0,2.0989709866571693,411.0,Perfective,False,,
eea4baf70d42500c574fc4ac23467a03bb79bb16,bf75f580c91645e02fb017d13a33d330ac3a8f1e,antirez,antirez@gmail.com,Tue Nov 10 02:02:30 2009 +0100,1257814950,Minor TODO change with new expiring algorithm description. New expiring algorithm moved since it'll go in 1.1,35.0,1.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,2.0,148.5,97.0,9.503865740740741,897.5,1.066204745150848,413.0,Feature Addition,False,,
bf75f580c91645e02fb017d13a33d330ac3a8f1e,060f6be6bf2976bad5bd6007d21e7e6ff081c92b,antirez,antirez@gmail.com,Tue Nov 10 10:26:09 2009 +0100,1257845169,Fixed issue 92 in redis: redis-cli (nil) return value lacks CR/LF,1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,392.0,32.0,7.368402777777778,899.0,1.1357146223080907,414.0,Corrective,True,,
060f6be6bf2976bad5bd6007d21e7e6ff081c92b,f23242938637c5c72f5a8104976a3f7764d66203,antirez,antirez@gmail.com,Tue Nov 10 17:48:01 2009 +0100,1257871681,Implemented a much better lazy expiring algorithm for EXPIRE,12.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5850.0,167.0,6.242060185185185,900.0,1.1602035178022452,415.0,Perfective,False,,
f23242938637c5c72f5a8104976a3f7764d66203,bcfc686db7351a4489d135d2fb0544fb6ee8dad9,antirez,antirez@gmail.com,Tue Nov 10 19:20:32 2009 +0100,1257877232,"Tcl script, make target, and redis.c changes to build the static symbol table automagically",322.0,215.0,"Makefile,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,utils/build-static-symbols.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.2202094957826688,2.0,1194.6,255.0,1.4357453703703704,903.0,1.1429731356309325,4.0,None,False,True,"[""71c54b21e261536579d350771d13157afeeb84c6"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
bcfc686db7351a4489d135d2fb0544fb6ee8dad9,12f9d551b60e5471baa70b6aa2237bf25d25f70a,antirez,antirez@gmail.com,Wed Nov 11 18:38:37 2009 +0100,1257961117,LPUSHPOP first implementation,81.0,8.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,0.913376001908559,2.0,1784.5,295.0,2.63546875,907.5,1.4654325161103303,423.0,None,False,,
12f9d551b60e5471baa70b6aa2237bf25d25f70a,a81885d9ea995d8dcf0940e544a2480f2afbd3f1,antirez,antirez@gmail.com,Wed Nov 11 19:01:52 2009 +0100,1257962512,TODO updated,0.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,35.0,70.0,0.016145833333333342,910.0,62.935483870967744,424.0,None,False,,
a81885d9ea995d8dcf0940e544a2480f2afbd3f1,fee803ba3eeb9a902e3e8ac27812cc9b2eba970b,antirez,antirez@gmail.com,Wed Nov 11 19:59:54 2009 +0100,1257965994,Removed a long time warning compiling with recent GCC on Linux,4.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,2926.0,241.0,0.04837384259259258,911.5,18.574745143945734,426.0,None,False,,
fee803ba3eeb9a902e3e8ac27812cc9b2eba970b,405b0a6aa5aab15c50fee38459d354a0fe27a47b,antirez,antirez@gmail.com,Wed Nov 11 23:42:31 2009 +0100,1257979351,Workaround for test-redis.tcl and Tcl 8.4.x about ZSCORE test,1.0,1.0,"TODO,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,2.0,499.5,97.0,0.18281828703703706,913.5,5.60173726913763,428.0,Preventative,False,,
405b0a6aa5aab15c50fee38459d354a0fe27a47b,62e920df9a338e76a5c1dfae4d2a528e8abb9de6,ian,ian@ian1.(none),Wed Nov 11 23:12:09 2009 -0500,1257999129,can select db num,42.0,7.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,393.0,34.0,0.4399537037037037,0.0,0.0,0.0,None,False,,
405b0a6aa5aab15c50fee38459d354a0fe27a47b,0f5f7e9a82e24a875023af703a89a72d5c7fe411,antirez,antirez@gmail.com,Thu Nov 12 11:21:26 2009 +0100,1258021286,LPOPPUSH renamed into RPOPLPUSH,5.0,5.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,2.0,3124.0,206.0,0.4482002314814815,915.5,3.507508849633276,430.0,None,False,True,"[""0b13687c25eda63a06296215f2da950f567801be""]"
0f5f7e9a82e24a875023af703a89a72d5c7fe411,bbf44ecf1b33196a8302152a37fe10df2bbb359d,antirez,antirez@gmail.com,Thu Nov 12 11:36:51 2009 +0100,1258022211,Redis test will not fail the SAVE test even if a background save is in progress,11.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,966.0,26.0,0.4960648148148148,917.0,3.0158656089594027,431.0,Corrective,True,True,"[""0d36ded040eba3b7b6e6ed1437f4f9c0bd44fbbe""]"
bbf44ecf1b33196a8302152a37fe10df2bbb359d,96d8b4eeba2503c9f679e41963220a72ee5baeda,antirez,antirez@gmail.com,Thu Nov 12 21:35:05 2009 +0100,1258058105,"ZSCORE fixed, now returns NULL on missing key or missing element",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5820.0,172.0,0.4261458333333333,918.0,3.3466145196773405,432.0,Corrective,True,,
96d8b4eeba2503c9f679e41963220a72ee5baeda 62e920df9a338e76a5c1dfae4d2a528e8abb9de6,51e01d9b39127eb278957f0c7f122e43a8f830e0,antirez,antirez@gmail.com,Thu Nov 12 21:40:34 2009 +0100,1258058434,Merge git://github.com/ianxm/redis,,,,,,,,,,,,,,,Merge,False,,
51e01d9b39127eb278957f0c7f122e43a8f830e0,ef3ac64a27519c65370fbe6877c514e58a29d644,antirez,antirez@gmail.com,Thu Nov 12 21:49:15 2009 +0100,1258058955,Solaris fix thanks to Alan Harder,14.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,2.0,3057.5,204.0,1.4169849537037036,919.5,1.3534765012741967,434.0,Corrective,True,,
ef3ac64a27519c65370fbe6877c514e58a29d644,2fd309522d22ea518a496cf203e77505ec35aaf1,antirez,antirez@gmail.com,Tue Nov 17 16:57:35 2009 +0100,1258473455,"multi-bulk reply support for redis-bench, and as a result LRANGE is not tested, providing some number for the tuning of multi-bulk requests performances server-side",79.0,13.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,495.0,8.0,45.29384259259259,921.0,1.022078056149812,435.0,Preventative,False,True,"[""6c4e61b389bc9a9ce909e3ee6addb5ef6fddcf39"", ""970e10bb34690746ba378b0408ec37e7f7b57040"", ""6766f45ef27af7f028dd71b5b1482365995bf314""]"
2fd309522d22ea518a496cf203e77505ec35aaf1,2895e8626734136583c37ce6d4c7c76809d0d872,antirez,antirez@gmail.com,Tue Nov 17 17:46:44 2009 +0100,1258476404,support for writev implemented but currently ifdef-ed in order to understan why I can't see the improvements expected. Btw code provided by Stefano Barbato,97.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5820.0,174.0,4.831585648148149,922.0,1.206971390517165,436.0,None,False,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e""]"
2895e8626734136583c37ce6d4c7c76809d0d872,6c4e61b389bc9a9ce909e3ee6addb5ef6fddcf39,antirez,antirez@gmail.com,Wed Nov 18 18:47:05 2009 +0100,1258566425,redis-benchmark multi bulk reply support hopefully fixed,14.0,3.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,561.0,9.0,1.0760416666666666,923.0,1.9293320425943847,437.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
6c4e61b389bc9a9ce909e3ee6addb5ef6fddcf39,ccb5332c5e6644a56b2af1ba3248f882d4f1bb60,antirez,antirez@gmail.com,Wed Nov 18 19:02:20 2009 +0100,1258567340,more writev tests/work,9.0,0.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,572.0,10.0,0.010590277777777778,924.0,95.42622950819671,438.0,Preventative,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
ccb5332c5e6644a56b2af1ba3248f882d4f1bb60,cc30e368a3fd049bd5ffaa83f16cbac557d8279d,antirez,antirez@gmail.com,Wed Nov 18 19:41:25 2009 +0100,1258569685,benchmarking with different number of LRANGE elements. Ability to change the glue output buffer limit by #define,21.0,2.0,"benchmark.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7553754125614288,2.0,3248.5,186.0,0.5533912037037038,925.5,19.873934821680255,440.0,None,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
cc30e368a3fd049bd5ffaa83f16cbac557d8279d,c28b42acd9b32c8888d7265adc528ded7a787919,antirez,antirez@gmail.com,Wed Nov 18 20:32:03 2009 +0100,1258572723,"more experiments with long replies, glue output buffer, and writev.",25.0,20.0,"benchmark.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.8529692179236495,2.0,2497.6666666666665,215.0,2.1473302469135804,928.0,15.27162534023663,443.0,None,False,True,"[""89ee361eeffe6c117a9edb19e8468c44b394ee31""]"
c28b42acd9b32c8888d7265adc528ded7a787919,89ee361eeffe6c117a9edb19e8468c44b394ee31,antirez,antirez@gmail.com,Thu Nov 19 10:42:19 2009 +0100,1258623739,benchmark.c fixes,9.0,5.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,603.0,13.0,0.590462962962963,930.0,2.693586325858554,444.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
89ee361eeffe6c117a9edb19e8468c44b394ee31,7ea870c09205c93b6e0677ad466bf46a6f11a9ea,antirez,antirez@gmail.com,Thu Nov 19 11:46:28 2009 +0100,1258627588,Use writev(2) if glue output buffers is disabled,3.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5914.0,177.0,0.6350115740740739,931.0,2.574774446368359,445.0,None,False,,
7ea870c09205c93b6e0677ad466bf46a6f11a9ea,58cd710344c2a18c6d55895dc960cd141109c5a8,antirez,antirez@gmail.com,Thu Nov 19 13:08:54 2009 +0100,1258632534,debug mode in redis-bench,15.0,0.0,"benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,607.0,14.0,0.10179398148148147,932.0,10.823763501989767,446.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040"", ""294cd536e0aeedd3d6f63f947a67bd2c08d04805""]"
58cd710344c2a18c6d55895dc960cd141109c5a8,b892cabed4079de8a1c6ac18041e3ea835c80300,antirez,antirez@gmail.com,Thu Nov 19 18:44:18 2009 +0100,1258652658,redis-benchmark hopefully last bug with multi bulk reply fixed,3.0,3.0,"benchmark.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,2.0,3267.5,193.0,0.26153935185185184,933.5,4.102569617778983,448.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
b892cabed4079de8a1c6ac18041e3ea835c80300,37f68e61024151b1a7461910fe1fcef887b0900b,antirez,antirez@gmail.com,Thu Nov 19 19:04:54 2009 +0100,1258653894,writev() finally uncommented again,0.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5915.0,179.0,0.014305555555555556,935.0,70.90291262135922,449.0,None,False,,
37f68e61024151b1a7461910fe1fcef887b0900b,e2665397a7d9bcac9f864aee473737eb4c74e24a,antirez,antirez@gmail.com,Thu Nov 19 19:48:46 2009 +0100,1258656526,ZINCRSCOREBY implemented,74.0,22.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.08354288831032232,2.0,3170.5,216.0,3.6913888888888886,936.5,1.1357309793303398,451.0,None,False,True,"[""91d71bfc796cb27cf71043df504e0d84d6e1d31d"", ""682ac7248a11ae7bf0e8d935c3ec13177500484e"", ""83c6a61889f167d7c29c88069ada887f038985fd"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
e2665397a7d9bcac9f864aee473737eb4c74e24a,7db723adb22bb98f3c3ca5bf4c35636ee75b25ba,antirez,antirez@gmail.com,Fri Nov 20 09:18:40 2009 +0100,1258705120,ZINCRSCOREBY => ZINCRBY,8.0,9.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.8343470230852537,2.0,2142.0,291.0,3.1749884259259264,939.0,1.1118696603449223,454.0,None,False,,
7db723adb22bb98f3c3ca5bf4c35636ee75b25ba,91d71bfc796cb27cf71043df504e0d84d6e1d31d,antirez,antirez@gmail.com,Fri Nov 20 11:22:20 2009 +0100,1258712540,ZINCRBY return value fixed,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5964.0,182.0,0.08587962962962963,941.0,12.644204851752026,455.0,Corrective,True,,
91d71bfc796cb27cf71043df504e0d84d6e1d31d,c08f173487ca9e4a24b652e0e1c5391f8b5b8bd2,antirez,antirez@gmail.com,Fri Nov 20 13:57:41 2009 +0100,1258721861,RPOPLPUSH tests added,41.0,2.0,"TODO,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.5395046027107565,2.0,381.33333333333326,103.0,6.341138117283951,943.0,2.757120458923481,458.0,Feature Addition,False,,
c08f173487ca9e4a24b652e0e1c5391f8b5b8bd2,b9bb7ba22077ed7bf585506d889d0771ba2383da,antirez,antirez@gmail.com,Fri Nov 20 14:27:09 2009 +0100,1258723629,more RPOPLPUSH tests,27.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,1020.0,29.0,0.020462962962962964,945.0,49.868778280542976,459.0,Preventative,False,,
b9bb7ba22077ed7bf585506d889d0771ba2383da,b9febaab5dcc11f8288fa67c6168222cf7de11b0,antirez,antirez@gmail.com,Fri Nov 20 14:36:32 2009 +0100,1258724192,EXPIRE tests,27.0,1.0,"TODO,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,2.0,539.5,105.0,0.016747685185185185,946.5,34.460254607455724,461.0,Preventative,False,,
b9febaab5dcc11f8288fa67c6168222cf7de11b0,5446315f29fd5eed3aaa2a16a9bcc8f882d67e8c,antirez,antirez@gmail.com,Sat Nov 21 11:15:12 2009 +0100,1258798512,EXPIREAT test,8.0,1.0,"TODO,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,2.0,552.5,107.0,0.8601851851851852,948.5,1.8719052744886977,463.0,Preventative,False,,
5446315f29fd5eed3aaa2a16a9bcc8f882d67e8c,28173a49a7f6c8d5850f70c26874f3cba6f64941,antirez,antirez@gmail.com,Sat Nov 21 13:25:51 2009 +0100,1258806351,"SORT GET # implemented, with a test",40.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.4350671525085232,2.0,1801.75,294.0,0.5612818287037038,951.5,4.195341302005166,467.0,Preventative,False,,
28173a49a7f6c8d5850f70c26874f3cba6f64941,ed5a857a6dc0eab237c979622a3dba23e4873203,antirez,antirez@gmail.com,Sat Nov 21 13:46:34 2009 +0100,1258807594,Fixed a SORT memory leak that should never happen in practice,4.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5975.0,184.0,0.014386574074074074,954.0,70.50925181013676,468.0,Corrective,True,,
ed5a857a6dc0eab237c979622a3dba23e4873203,6cbfd2b3d900973a410d4a2fc02843ce23b501ed,antirez,antirez@gmail.com,Sat Nov 21 13:56:17 2009 +0100,1258808177,SRANDMEMBER test,14.0,1.0,"TODO,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,2.0,568.5,111.0,0.02113425925925926,955.5,36.48740416210296,470.0,Preventative,False,,
6cbfd2b3d900973a410d4a2fc02843ce23b501ed,7d65b33db7235971b2318518cc4ee93da0659d8c,antirez,antirez@gmail.com,Sat Nov 21 14:13:50 2009 +0100,1258809230,TODO updated with plans up to 1.5,20.0,15.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,31.0,79.0,0.0121875,957.0,83.05128205128204,471.0,None,False,,
7d65b33db7235971b2318518cc4ee93da0659d8c,c35f7d5b8dbbecc41baa2afc14b4ddbdb3d337f3,antirez,antirez@gmail.com,Sat Nov 21 14:16:45 2009 +0100,1258809405,TODO aesthetic changes,10.0,2.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,36.0,80.0,0.002025462962962963,958.0,494.71428571428567,472.0,None,False,,
c35f7d5b8dbbecc41baa2afc14b4ddbdb3d337f3,a96ffc6641ae91e1291e30a4af7570d6aa0c5945,antirez,antirez@gmail.com,Sat Nov 21 16:40:08 2009 +0100,1258818008,version incremented up to 1.06,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5978.0,185.0,0.1205324074074074,959.0,9.29652391012099,473.0,None,False,,
a96ffc6641ae91e1291e30a4af7570d6aa0c5945,5b2a1c292ac20d84ae2202bc21759a2f06b8041f,antirez,antirez@gmail.com,Mon Nov 23 12:00:23 2009 +0100,1258974023,ae.c initial refactoring for epoll implementation,68.0,40.0,"TODO,CAS_DELIMITER,ae.c,CAS_DELIMITER,anet.c,CAS_DELIMITER",3.0,1.0,1.0,0.5445090697085408,2.0,227.3333333333333,86.0,147.97783564814816,961.0,1.1770456137505878,476.0,Feature Addition,False,True,"[""67b70a18130bb22663494689b19db5b47cfed4fd""]"
5b2a1c292ac20d84ae2202bc21759a2f06b8041f,266373b2834efa11b83e681bb211a0cd6c922eaa,antirez,antirez@gmail.com,Mon Nov 23 18:50:39 2009 +0100,1258998639,"ae.c now supports multiple polling API modules, even if only ae_select.c is implemented currently. Also adding and removing an event is now O(1).",137.0,116.0,"Makefile,CAS_DELIMITER,ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,benchmark.c,CAS_DELIMITER,config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",6.0,1.0,1.0,1.6755652549169209,2.0,1200.6666666666667,228.0,64.65458140432101,965.5,1.0275420155148538,482.0,Feature Addition,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040"", ""621d5c1985a211662409976d7b49645cad55ea4e""]"
266373b2834efa11b83e681bb211a0cd6c922eaa,a51dcb8b7f63637f83e48f55c327e46ae6ac9269,antirez,antirez@gmail.com,Mon Nov 23 18:52:25 2009 +0100,1258998745,ae_select module added,74.0,0.0,"ae_select.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,969.0,0.0,483.0,Feature Addition,False,True,"[""621d5c1985a211662409976d7b49645cad55ea4e"", ""12d090d2d0a9ff8d2c082b97cf405a30c7126752""]"
a51dcb8b7f63637f83e48f55c327e46ae6ac9269,fb6a19677819cb2e35723bb5565a603cb069f461,antirez,antirez@gmail.com,Mon Nov 23 18:55:35 2009 +0100,1258998935,commented the HAVE_EPOLL test in config.h to allow compilation under Linux now that the epoll module is still missing,2.0,0.0,"config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,34.0,4.0,0.003425925925925926,970.0,292.8918918918919,484.0,Preventative,False,,
fb6a19677819cb2e35723bb5565a603cb069f461,64f36a5836c8c375247ca0623712a35f80c6cfb2,antirez,antirez@gmail.com,Mon Nov 23 23:40:27 2009 +0100,1259016027,epoll module for ae.c implemented. Some more testing needed,86.0,1.0,"Makefile,CAS_DELIMITER,ae_epoll.c,CAS_DELIMITER",2.0,1.0,1.0,0.15790637433488172,2.0,42.0,21.0,0.100625,971.5,5.9689440993788825,486.0,Preventative,False,True,"[""621d5c1985a211662409976d7b49645cad55ea4e"", ""12d090d2d0a9ff8d2c082b97cf405a30c7126752"", ""fb293ccbddb43f427ea1f791d8603fbd18e703e6"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
64f36a5836c8c375247ca0623712a35f80c6cfb2,7785121a503438cf6d72f16ba0149cad8ae26e42,antirez,antirez@gmail.com,Mon Nov 23 23:57:04 2009 +0100,1259017024,epoll support enabled by default for Linux builds,0.0,2.0,"config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,36.0,5.0,0.20936342592592594,973.0,5.776383437448173,487.0,None,False,,
7785121a503438cf6d72f16ba0149cad8ae26e42,214d880b815242fa419aa3a39411d42025566521,antirez,antirez@gmail.com,Tue Nov 24 00:18:57 2009 +0100,1259018337,minor fix to avoid a false valgrind warning.,2.0,0.0,"ae_epoll.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,85.0,1.0,0.02673611111111111,974.0,38.40259740259741,488.0,Corrective,True,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
214d880b815242fa419aa3a39411d42025566521,f284d963e7578a5ab4ce0b252449e2e35a3b54ea,antirez,antirez@gmail.com,Tue Nov 24 13:47:26 2009 +0100,1259066846,minor TODO change,4.0,3.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,51.0,82.0,1.0743402777777775,975.0,1.930803787854304,489.0,None,False,,
f284d963e7578a5ab4ce0b252449e2e35a3b54ea,6c446631dac7a7fe9e34b18392d4a8498c8c9bc3,antirez,antirez@gmail.com,Tue Nov 24 17:52:46 2009 +0100,1259081566,sorted sets saving fixed,44.0,44.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,5978.0,187.0,0.9598032407407407,976.0,2.0418802078936897,490.0,Corrective,True,True,"[""454d4e43b5ba15b8e79dcc1f67d5754d4faf80cb"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
6c446631dac7a7fe9e34b18392d4a8498c8c9bc3,1c0abf3c5d4aab9236f8e6bd53f3255bf0fc7b3b,antirez,antirez@gmail.com,Tue Nov 24 21:29:08 2009 +0100,1259094548,Redis version set to 1.07,35.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,2.0,3143.0,220.0,6.0681423611111125,977.5,1.0829139995838029,492.0,None,False,,
1c0abf3c5d4aab9236f8e6bd53f3255bf0fc7b3b,210e29f7d276be1bbbaf1b711b654dd6834f8e93,antirez,antirez@gmail.com,Tue Nov 24 21:44:20 2009 +0100,1259095460,"DEBUG RELOAD implemented, and test-redis.tcl modified to use it to check for persistence consistency.",51.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8403586716091171,2.0,3548.5,223.0,1.6677951388888888,979.5,48.51831955885133,494.0,Corrective,True,True,"[""7d30035d477f5d97e2b491477f4b95c9bb140d6f""]"
210e29f7d276be1bbbaf1b711b654dd6834f8e93,9d65a1bbae9e59269472e8067cb2fff1e1cce24c,antirez,antirez@gmail.com,Thu Nov 26 18:10:02 2009 +0100,1259255402,"log rebuilding, random refactoring, work in progress please wait for an OK commit before to use this version",400.0,110.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",4.0,1.0,1.0,0.2634971885538385,2.0,1665.0,312.0,6.5883969907407405,982.5,1.177308875215179,498.0,None,False,True,"[""85a831729fc5d38370b304dffee0fa381e27de42"", ""dfc5e96ce55aacc4ed798fcc70b52a7509f76541"", ""e96e4fbf159269075633f30063d254515aeb3a5f"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0"", ""478c2c6f5bffa318d24e23519d2e4d7ea68f15fd"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
9d65a1bbae9e59269472e8067cb2fff1e1cce24c,85a831729fc5d38370b304dffee0fa381e27de42,antirez,antirez@gmail.com,Thu Nov 26 19:03:32 2009 +0100,1259258612,append only file fixes,15.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,6262.0,191.0,0.037152777777777785,985.0,27.91588785046729,499.0,Corrective,True,,
85a831729fc5d38370b304dffee0fa381e27de42,0f151ef1a032e7065e156e4e2481efa9d4230717,antirez,antirez@gmail.com,Thu Nov 26 19:18:52 2009 +0100,1259259532,zero length bulk data reading fixed in loadAppendOnlyFile(),1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,6275.0,192.0,0.010648148148148148,986.0,94.91304347826087,500.0,Corrective,True,,
0f151ef1a032e7065e156e4e2481efa9d4230717,2014c4377d73b0f3b93537558e5211e9f745831d,antirez,antirez@gmail.com,Fri Nov 27 22:49:38 2009 +0100,1259358578,TODO updated,13.0,9.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,56.0,84.0,1.1941666666666666,987.0,1.837404047452896,501.0,None,False,,
0f151ef1a032e7065e156e4e2481efa9d4230717,f3053eb0eb704dea7ff39f389f344a37e3985aab,Harish Mallipeddi,harish.mallipeddi@gmail.com,Sat Nov 28 19:16:21 2009 +0530,1259415981,Added support for kqueue.,99.0,1.0,"ae.c,CAS_DELIMITER,ae_kqueue.c,CAS_DELIMITER,config.h,CAS_DELIMITER",3.0,1.0,1.0,0.5660906530347479,3.0,137.0,9.0,3.149301697530864,1.0,0.7709560081127009,2.0,Feature Addition,False,True,"[""fb293ccbddb43f427ea1f791d8603fbd18e703e6""]"
2014c4377d73b0f3b93537558e5211e9f745831d,1fd9bc8adc3ae42e7e33564d6f76d76f89dfb78b,antirez,antirez@gmail.com,Sat Nov 28 15:31:40 2009 +0100,1259418700,"Changes to TODO list, commented a function in redis.c",5.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,2.0,3167.5,278.0,1.269039351851852,988.5,1.9155383779371653,503.0,None,False,,
1fd9bc8adc3ae42e7e33564d6f76d76f89dfb78b f3053eb0eb704dea7ff39f389f344a37e3985aab,791445b7459183d839e20672e20d246dea895213,antirez,antirez@gmail.com,Sat Nov 28 15:44:02 2009 +0100,1259419442,Merge branch 'kqueue' of git://github.com/mallipeddi/redis,,,,,,,,,,,,,,,Merge,False,,
791445b7459183d839e20672e20d246dea895213,1751139117cc37f17051fdc55c0fe00c5da2043d,antirez,antirez@gmail.com,Sat Nov 28 16:55:05 2009 +0100,1259423705,Enabled object encoding for multiple keys in MSET. Added a test for memory leaks in test-redis.tcl when running on Mac OS X,10.0,2.0,"ae_kqueue.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.188721875540867,3.0,2508.6666666666665,230.0,1.3154861111111111,991.0,7.075652011951866,506.0,Feature Addition,False,,
1751139117cc37f17051fdc55c0fe00c5da2043d,7a932b74cc22097655d6792f64cab66bb0fe1694,antirez,antirez@gmail.com,Sat Nov 28 17:06:28 2009 +0100,1259424388,ifdefs added to use kevent on Free Open and Net BSD as well. INFO and ae.c modified in order to report the multiplexing API in use,25.0,4.0,"ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,ae_epoll.c,CAS_DELIMITER,ae_kqueue.c,CAS_DELIMITER,ae_select.c,CAS_DELIMITER,config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",8.0,1.0,1.0,2.8144939286158466,3.0,1028.625,249.0,1.846507523148148,996.5,2.3691436848034986,514.0,Feature Addition,False,,
7a932b74cc22097655d6792f64cab66bb0fe1694,1c85b79fefe9e2e1f1eff2b419ba43c0a215689b,antirez,antirez@gmail.com,Sat Nov 28 17:13:32 2009 +0100,1259424812,INFO refactored. Stack trace on memory corruption now dumps the same information as the INFO command,15.0,28.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.15935006268563445,3.0,3170.5,282.0,0.03782407407407407,1001.5,14.677609950848145,516.0,None,False,,
1c85b79fefe9e2e1f1eff2b419ba43c0a215689b,c74e7c775789392f65e4b3cc6b5a7d52ab94053f,antirez,antirez@gmail.com,Sat Nov 28 18:03:09 2009 +0100,1259427789,"ZRANGEBYSCORE memory leak fixed, ZRANGEBYSCORE initial test added",22.0,0.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,3.0,3719.0,234.0,0.03690972222222222,1003.5,22.284536100066013,518.0,Corrective,True,True,"[""f44dd428729064d75804c86223811badcf73716d""]"
c74e7c775789392f65e4b3cc6b5a7d52ab94053f,5b1207c63f235df510547901982a9883ca394f24,antirez,antirez@gmail.com,Sat Nov 28 18:19:11 2009 +0100,1259428751,ZRANGEBYSCORE fuzzy test,39.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1189.0,38.0,0.011134259259259259,1005.0,90.81288981288981,519.0,Preventative,False,,
5b1207c63f235df510547901982a9883ca394f24,03a37888f6581ec46d5eaee8c77b18b7926d2ca3,antirez,antirez@gmail.com,Sat Nov 28 18:19:48 2009 +0100,1259428788,TODO updated,1.0,2.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,58.0,87.0,0.04601851851851852,1006.0,22.73038229376257,520.0,None,False,,
03a37888f6581ec46d5eaee8c77b18b7926d2ca3,37be27653817f0c4c18d695ceea082e0bb7bf462,antirez,antirez@gmail.com,Sat Nov 28 20:48:53 2009 +0100,1259437733,enable kqueue/kevent only for Mac OS X 10.6.x as it seems that 10.5.x has a broken implementation of this syscalls.,1.0,3169.0,"config.h,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",66.0,2.0,2.0,5.859897473625924,3.0,48.57575757575758,127.0,218.40536318041504,1039.5,1.0984122309266138,187.0,None,False,,
37be27653817f0c4c18d695ceea082e0bb7bf462,924aa408b99837036b679bd3895f836af6bc763f,antirez,antirez@gmail.com,Sat Nov 28 20:59:06 2009 +0100,1259438346,html doc updated,4195.0,0.0,"doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",87.0,1.0,1.0,6.296800631224934,3.0,0.0,182.0,0.005219242230736487,1116.0,10.433268211485355,274.0,Non Functional,False,,
924aa408b99837036b679bd3895f836af6bc763f,d799af3119abb90ebf4b918ccc2da373751870ab,antirez,antirez@gmail.com,Sat Nov 28 21:00:16 2009 +0100,1259438416,Changelog updated,17.0,0.0,"Changelog,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,342.0,33.0,3.979953703703704,1160.0,1.2512592041132062,522.0,None,False,,
d799af3119abb90ebf4b918ccc2da373751870ab,80181f7848a26f6763d1d106e2b91dff9b53bfc8,antirez,antirez@gmail.com,Sat Nov 28 22:01:13 2009 +0100,1259442073,Implemented LIMIT option in ZRANGEBYSCORE. We now enter feature-freeze,22.0,2.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.6583514224564077,3.0,2253.0,325.0,0.8265432098765432,1162.0,3.446318852104563,525.0,None,False,True,"[""454d4e43b5ba15b8e79dcc1f67d5754d4faf80cb""]"
80181f7848a26f6763d1d106e2b91dff9b53bfc8,a5eb649bfad4b66168feddb6729b75e266b04f44,antirez,antirez@gmail.com,Sun Nov 29 10:10:35 2009 +0100,1259485835,SORT support for sorted sets,18.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6290.0,199.0,0.5065046296296296,1164.0,2.9743156162881035,526.0,None,False,True,"[""dfc5e96ce55aacc4ed798fcc70b52a7509f76541""]"
a5eb649bfad4b66168feddb6729b75e266b04f44,0b13687c25eda63a06296215f2da950f567801be,antirez,antirez@gmail.com,Sun Nov 29 10:29:08 2009 +0100,1259486948,"more tests in test-redis.tcl, some minor fix",26.0,3.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.8306021151458061,3.0,2529.6666666666665,328.0,0.40194830246913577,1166.0,2.5444644040597963,529.0,Corrective,True,,
0b13687c25eda63a06296215f2da950f567801be,d07ffa178d913a6c5a82f822a4c5b55535bcfda3,antirez,antirez@gmail.com,Sun Nov 29 10:44:25 2009 +0100,1259487865,"Version chagned to 1.100, also known as the first first 2.0 beta version",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6304.0,201.0,0.010613425925925924,1168.0,95.22028353326063,530.0,None,False,,
d07ffa178d913a6c5a82f822a4c5b55535bcfda3,0188805dd61eb9791be0c77b5010d4c38b296ce1,antirez,antirez@gmail.com,Sun Nov 29 12:09:31 2009 +0100,1259492971,TODO updated,8.0,2.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,56.0,90.0,0.06971064814814815,1169.0,15.345010791964135,531.0,None,False,,
0188805dd61eb9791be0c77b5010d4c38b296ce1,e17e0b0529eda98156f988c907789f08299c2f7e,antirez,antirez@gmail.com,Mon Nov 30 19:26:52 2009 +0100,1259605612,fixed a subtle bug in redis-cli not having visible effects,1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,431.0,40.0,1.8928125,1170.0,1.5283143470364866,532.0,Corrective,True,,
e17e0b0529eda98156f988c907789f08299c2f7e,dfc5e96ce55aacc4ed798fcc70b52a7509f76541,antirez,antirez@gmail.com,Mon Nov 30 20:25:06 2009 +0100,1259609106,"Fixed issued #85 (getDecodedObject: Assertion 1 != 1 failed. While sorting a set), added a smarter assert() function to dump the stacktrace, provided a macro to initalize Redis objects on the stack to avoid this kind of bugs.",52.0,29.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.16702680404522807,3.0,3252.5,204.0,2.7485243055555566,1171.5,1.4472730083140029,534.0,Corrective,True,True,"[""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""08ee9b570f4a9a181c3ed2242c5b2f6a88eddc41""]"
dfc5e96ce55aacc4ed798fcc70b52a7509f76541,9c21a518c3cd29bbaa27a66821105665dae82562,antirez,antirez@gmail.com,Tue Dec 1 01:47:58 2009 +0100,1259628478,design documents added to the project,146.0,0.0,"design-documents/REDIS-CLUSTER,CAS_DELIMITER,design-documents/VIRTUAL-MEMORY,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,2.0,2.0,0.9451419180487798,3.0,417.33333333333326,40.0,0.5460262345679012,1174.0,0.5368237593914129,535.0,Feature Addition,False,,
9c21a518c3cd29bbaa27a66821105665dae82562,380bf0802a7d30381588993f0b3cb153d5d923c5,antirez,antirez@gmail.com,Tue Dec 1 01:52:32 2009 +0100,1259628752,virtual memory design doc typos,4.0,4.0,"design-documents/VIRTUAL-MEMORY,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,11.0,1.0,0.003171296296296296,1176.0,316.3284671532847,2.0,Non Functional,False,,
380bf0802a7d30381588993f0b3cb153d5d923c5,da0a1620771c54bb67cdef46dae40f005133b8d1,antirez,antirez@gmail.com,Tue Dec 1 11:53:00 2009 +0100,1259664780,compilation problem on 64bit mac os x 10.5 possibly fixed,5.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6325.0,203.0,0.644375,1177.0,2.5518913676042674,536.0,Corrective,True,,
da0a1620771c54bb67cdef46dae40f005133b8d1,09f6f7020952cd93e178da11e66e36f8a98398d1,antirez,antirez@gmail.com,Tue Dec 1 19:37:43 2009 +0100,1259692663,TODO update,2.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,62.0,91.0,2.31125,1178.0,1.4326663061114115,537.0,None,False,,
09f6f7020952cd93e178da11e66e36f8a98398d1,682ac7248a11ae7bf0e8d935c3ec13177500484e,antirez,antirez@gmail.com,Sat Dec 5 13:50:36 2009 +0100,1260017436,use __attribute__ format in sdscatprintf() when the compiler is GCC. Fixed format bugs resulting from the new warnings.,45.0,30.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,sds.h,CAS_DELIMITER",3.0,1.0,1.0,1.3490674291003144,3.0,2151.6666666666665,300.0,22.24238040123457,1180.0,1.1361864712351195,540.0,Corrective,True,True,"[""83c6a61889f167d7c29c88069ada887f038985fd"", ""d36c4e97e5018d98b4b346db7841090d9b6f4cfc"", ""248ea3100391e57725185a87ae77567646f76723"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
682ac7248a11ae7bf0e8d935c3ec13177500484e,570333015147ce01646ff61e50afc210a12408db,antirez,antirez@gmail.com,Sat Dec 5 14:26:05 2009 +0100,1260019565,a few redis-cli format specified fixed,3.0,2.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,3.0,250.5,134.0,2.4078819444444446,1182.5,21.39504222178953,542.0,Corrective,True,True,"[""83c6a61889f167d7c29c88069ada887f038985fd""]"
570333015147ce01646ff61e50afc210a12408db,43f30ac0f9bcc4a7afb06136a8dfe5b703be7935,antirez,antirez@gmail.com,Sat Dec 5 16:58:10 2009 +0100,1260028690,HTML doc update,927.0,282.0,"doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",84.0,1.0,1.0,5.706356139816033,3.0,37.16666666666666,230.0,5.6939887841710854,1225.5,1.009756345057948,358.0,Non Functional,False,,
43f30ac0f9bcc4a7afb06136a8dfe5b703be7935,76d31044d44c7adb4af71dd273b52ec9a4768e17,antirez,antirez@gmail.com,Sat Dec 5 19:35:15 2009 +0100,1260038115,more HTML doc changes,31.0,19.0,"TODO,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,2.0,2.0,1.2084966928220162,3.0,1626.5,308.0,0.16805266203703706,1269.5,3.8859857844012384,544.0,Non Functional,False,True,"[""83c6a61889f167d7c29c88069ada887f038985fd""]"
76d31044d44c7adb4af71dd273b52ec9a4768e17,71c54b21e261536579d350771d13157afeeb84c6,antirez,antirez@gmail.com,Sun Dec 6 00:59:35 2009 +0100,1260057575,Fixed daemonization when using kqueue/kevent. Now the server initialization is performed *after* the daemonization,21.0,4.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.2732696895151083,3.0,2253.0,335.0,2.5388850308641966,1273.0,1.135375762047239,547.0,Corrective,True,True,"[""20f5b3886761a0ba963fee435bba90dd09bd5bd5""]"
71c54b21e261536579d350771d13157afeeb84c6,906573e78df502bbc42084846511be77722ccf47,antirez,antirez@gmail.com,Sun Dec 6 01:09:15 2009 +0100,1260058155,SETNX and MSETNX now respect the delete-on-write operation of EXPIREing keys,8.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6330.0,207.0,0.006712962962962963,1275.0,149.96551724137933,548.0,None,False,True,"[""5acdc75d66b855cd621f324b1a15c48c8491366c""]"
906573e78df502bbc42084846511be77722ccf47,5acdc75d66b855cd621f324b1a15c48c8491366c,antirez,antirez@gmail.com,Sun Dec 6 01:16:12 2009 +0100,1260058572,Regression tests for SETNX and MSETNX bugs added,15.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,3.0,3803.0,249.0,2.4913831018518517,1276.5,104.69746817020813,550.0,Corrective,True,,
5acdc75d66b855cd621f324b1a15c48c8491366c,83c6a61889f167d7c29c88069ada887f038985fd,antirez,antirez@gmail.com,Sun Dec 6 01:25:37 2009 +0100,1260059137,printf format warnings fixed by casting,12.0,9.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,3.0,3382.5,251.0,0.2322743055555556,1278.5,3.1679946123876777,552.0,Corrective,True,True,"[""248ea3100391e57725185a87ae77567646f76723""]"
83c6a61889f167d7c29c88069ada887f038985fd,231d758eecf6e492c8b40cddf4bc9e3a4dbf39cb,antirez,antirez@gmail.com,Sun Dec 6 01:42:41 2009 +0100,1260060161,in rdbLoadDoubleValue now the buffer is nul terminated correctly. Thanks valgrind.,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6335.0,210.0,0.011851851851851851,1280.0,85.375,553.0,Feature Addition,False,,
231d758eecf6e492c8b40cddf4bc9e3a4dbf39cb,333fd216159120be0b0ce66d707fceb5e47a5aca,antirez,antirez@gmail.com,Thu Dec 10 16:38:24 2009 +0100,1260459504,TODO change and minor SETNX optimization,1.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,3203.5,307.0,4.6369907407407425,1281.5,1.161395945948804,555.0,None,False,,
333fd216159120be0b0ce66d707fceb5e47a5aca,454d4e43b5ba15b8e79dcc1f67d5754d4faf80cb,antirez,antirez@gmail.com,Thu Dec 10 19:35:09 2009 +0100,1260470109,"a bit more verbose -ERR wrong number o arguments error, now gives info about the command name causing the error",7.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6336.0,212.0,0.12274305555555555,1283.0,9.147100424328148,556.0,Corrective,True,,
454d4e43b5ba15b8e79dcc1f67d5754d4faf80cb,5ad3c8c852de981482afb28a8c2659456b2a8b3b,antirez,antirez@gmail.com,Thu Dec 10 19:47:12 2009 +0100,1260470832,redis-sha1.rb utility updated,2.0,0.0,"utils/redis-sha1.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,35.0,3.0,215.47306712962964,1284.0,1.0046409512489018,5.0,None,False,,
5ad3c8c852de981482afb28a8c2659456b2a8b3b,b32627cdc10c2f3f6d08ea75b705b85d1de6b46d,antirez,antirez@gmail.com,Fri Dec 11 18:45:25 2009 +0100,1260553525,some change to redis-sha1.rb utility to make it more robust against non-meaningful changes in the dataset,21.0,5.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,utils/redis-sha1.rb,CAS_DELIMITER",3.0,2.0,2.0,0.7732283485249176,3.0,2149.0,314.0,1.003587962962963,1286.0,1.5793395507301105,6.0,None,False,,
b32627cdc10c2f3f6d08ea75b705b85d1de6b46d,61c47ecd2551a729032ff277620d3eea7c7ed080,antirez,antirez@gmail.com,Sat Dec 12 00:04:20 2009 +0100,1260572660,better handling of non blocking connect on redis-benchmark: EPIPE on read does not print an error message now,3.0,1.0,"TODO,CAS_DELIMITER,benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,3.0,354.5,115.0,9.219652777777778,1288.5,3.2847590510924194,560.0,Perfective,False,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
61c47ecd2551a729032ff277620d3eea7c7ed080,3f477979b3500781481db15a03ee1fca91cc68be,antirez,antirez@gmail.com,Sat Dec 12 19:42:42 2009 +0100,1260643362,TODO list modified. What's planned for 1.4 is now written in the stone ;),25.0,8.0,"TODO,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9940302114769564,3.0,122.0,115.0,21.95856481481481,1290.5,1.6224003263146107,562.0,None,False,,
3f477979b3500781481db15a03ee1fca91cc68be,b3fad521cc3752b48fdf43c10237527ea2a99d5b,antirez,antirez@gmail.com,Sat Dec 12 22:41:10 2009 +0100,1260654070,bgrewriteaof_in_progress added to INFO,2.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6340.0,214.0,1.1637152777777775,1292.0,1.8593167238549904,563.0,Feature Addition,False,,
b3fad521cc3752b48fdf43c10237527ea2a99d5b,25e52257e675f8bbba51cf4a779a4b327d7757d2,antirez,antirez@gmail.com,Sun Dec 13 01:16:51 2009 +0100,1260663411,TODO update,3.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,83.0,100.0,0.2320486111111111,1293.0,5.309441867424809,564.0,None,False,,
25e52257e675f8bbba51cf4a779a4b327d7757d2,179b395244456e33324e1c69c1f1e370fe31994e,antirez,antirez@gmail.com,Sun Dec 13 15:09:46 2009 +0100,1260713386,"Set the master->slave logical client as authenticated on creation, so that if the slave requires a password replication works anyway",1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6342.0,215.0,0.6865277777777777,1294.0,2.4566053004248443,565.0,None,False,,
179b395244456e33324e1c69c1f1e370fe31994e,49b99ab43e8160feb8478ebb09db0e0db942afcf,antirez,antirez@gmail.com,Sun Dec 13 16:52:43 2009 +0100,1260719563,Changed the reply of BGSAVE and BGREWRITEAOF from +OK to a more meaningful message that makes the user aware of an operation that just started and is not yet finished.,7.0,2.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,3260.5,233.0,0.476724537037037,1295.5,8.518098112998597,567.0,None,False,,
49b99ab43e8160feb8478ebb09db0e0db942afcf,fc77604c47c6b8d57153349260a7a7e5b0d833b6,antirez,antirez@gmail.com,Mon Dec 14 13:48:24 2009 -0500,1260816504,a few more tests and ability to run a specific test in test-redis.tcl,59.0,7.0,"Makefile,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.3870514213921977,3.0,685.0,64.0,14.80560763888889,1297.5,1.0408791357556826,569.0,Preventative,False,True,"[""7c49733ce3f550a96f60a9213911fdc9265cedc8""]"
fc77604c47c6b8d57153349260a7a7e5b0d833b6,0d36ded040eba3b7b6e6ed1437f4f9c0bd44fbbe,antirez,antirez@gmail.com,Tue Dec 15 04:06:10 2009 -0500,1260867970,Fixed issue #121,25.0,11.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,3.0,3840.0,260.0,1.1566724537037036,1299.5,1.5072286377197717,571.0,Corrective,True,,
0d36ded040eba3b7b6e6ed1437f4f9c0bd44fbbe,f4d9b3c62afe87f3b51f6c9279ad721a26241583,antirez,antirez@gmail.com,Tue Dec 15 04:26:51 2009 -0500,1260869211,Regression test for SINTERSTORE added,5.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1349.0,44.0,0.014363425925925925,1301.0,70.62127316680099,572.0,Feature Addition,False,,
f4d9b3c62afe87f3b51f6c9279ad721a26241583,7c49733ce3f550a96f60a9213911fdc9265cedc8,antirez,antirez@gmail.com,Tue Dec 15 09:14:40 2009 -0500,1260886480,"Fixed some subtle bug in the command processing code almost impossible to spot in the real world, thanks to gcov",62.0,5.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.7671903206448685,3.0,3849.5,263.0,0.20705439814814813,1302.5,4.541285750997151,574.0,Corrective,True,,
7c49733ce3f550a96f60a9213911fdc9265cedc8,ed10f40b1520cef2fa633c94289ff9f3241bb3f6,antirez,antirez@gmail.com,Tue Dec 15 09:33:29 2009 -0500,1260887609,Unified handling of empty queries with normal queries.,4.0,6.0,"redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,3.0,3342.5,224.0,34.48552083333333,1304.5,39.27119981787412,576.0,None,False,,
ed10f40b1520cef2fa633c94289ff9f3241bb3f6,e054afda908d6043acce66824e51a86bb9e0ba36,antirez,antirez@gmail.com,Tue Dec 15 10:55:13 2009 -0500,1260892513,Added a new test able to stress a lot the snapshotting engine,116.0,0.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.0715037894499587,3.0,3875.0,266.0,0.06329282407407408,1306.5,13.759030252009842,578.0,Feature Addition,False,True,"[""e96e4fbf159269075633f30063d254515aeb3a5f"", ""758b6d4c272c8132fd9090022b8b84a394062b91""]"
e054afda908d6043acce66824e51a86bb9e0ba36,71c2b467b01c93726fccc0a3521343c11c92167c,antirez,antirez@gmail.com,Tue Dec 15 11:15:47 2009 -0500,1260893747,debug loadaof implemented in order to add more consistency tests in test-redis.tcl,18.0,0.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9910760598382222,3.0,3933.0,268.0,0.014282407407407409,1308.5,53.51215559157213,580.0,Corrective,True,True,"[""e96e4fbf159269075633f30063d254515aeb3a5f""]"
71c2b467b01c93726fccc0a3521343c11c92167c,e96e4fbf159269075633f30063d254515aeb3a5f,antirez,antirez@gmail.com,Tue Dec 15 13:06:41 2009 -0500,1260900401,Two important fixes to append only file: zero length values and expires. A pretty neat new test to check consistency of randomly build datasets against snapshotting and AOF.,63.0,16.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER,utils/redis-sha1.rb,CAS_DELIMITER",3.0,2.0,2.0,0.7634123850187384,3.0,2645.0,275.0,1.3895987654320987,1311.0,7.572294569330128,7.0,Corrective,True,True,"[""758b6d4c272c8132fd9090022b8b84a394062b91""]"
e96e4fbf159269075633f30063d254515aeb3a5f,8879cbfe600cd6849f95c4bc7234f72f6e7331d4,antirez,antirez@gmail.com,Tue Dec 15 16:27:13 2009 -0500,1260912433,version is now 1.1.92,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6356.0,223.0,0.13925925925925925,1313.0,8.180851063829786,583.0,None,False,True,"[""483049a73786894bb7e5f902b7cabb8b6cabb195""]"
8879cbfe600cd6849f95c4bc7234f72f6e7331d4,163f4b8cb25ca46c1482bb6b4ca9c4c9d0f15dd4,antirez,antirez@gmail.com,Tue Dec 15 16:31:38 2009 -0500,1260912698,html doc updated,163.0,21.0,"TODO,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SponsorshipHowto.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",17.0,2.0,2.0,2.9940076389867403,3.0,36.8235294117647,153.0,7.385592320261438,1322.0,1.0587280455792254,376.0,Non Functional,False,,
163f4b8cb25ca46c1482bb6b4ca9c4c9d0f15dd4,67669f0032b27d9c434bc91b1cf5b199e9077fd2,antirez,antirez@gmail.com,Wed Dec 16 07:30:40 2009 -0500,1260966640,Fixed a lame epoll issue,3.0,0.0,"ae_epoll.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,91.0,3.0,17.85013888888889,1331.0,1.056021973062768,585.0,Corrective,True,,
67669f0032b27d9c434bc91b1cf5b199e9077fd2,483049a73786894bb7e5f902b7cabb8b6cabb195,antirez,antirez@gmail.com,Wed Dec 16 08:40:32 2009 -0500,1260970832,"Regression for epoll bug in redis-test.tcl, version is now 1.1.93",53.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.191501106916491,3.0,2768.333333333333,308.0,4.02039737654321,1333.0,1.0888124498726428,588.0,Corrective,True,,
483049a73786894bb7e5f902b7cabb8b6cabb195,121f70cfae583582f88b9623e640a59c7a7630a4,antirez,antirez@gmail.com,Wed Dec 16 11:28:41 2009 -0500,1260980921,"lzf compression switched off by default now, with config file option to enable it in redis.conf",32.0,18.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.6343095546405662,3.0,3268.5,243.0,1.5708738425925926,1335.5,5.4410382580865475,590.0,None,False,,
121f70cfae583582f88b9623e640a59c7a7630a4,b0553789719a3f47531655dab13f5def5ce35403,antirez,antirez@gmail.com,Wed Dec 16 15:48:57 2009 -0500,1260996537,"LZF compression re-enabled by default, but with INIT_HTAB set to 0 to avoid the very costly memset initialization. Note that with this option set valgrind will output some false positive about lzf_c.c",6.0,6.0,"lzfP.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,1.2516291673878228,3.0,2236.6666666666665,247.0,86.11783179012345,1338.0,1.0038733766782364,593.0,Feature Addition,False,,
b0553789719a3f47531655dab13f5def5ce35403,b2b5ae80065ff52a77a3b8c08a89c895d151a52f,antirez,antirez@gmail.com,Fri Dec 18 05:26:11 2009 -0500,1261131971,Fixed sds.c bug #124,2.0,1.0,"TODO,CAS_DELIMITER,sds.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,210.5,108.0,2.6830729166666667,1340.5,1.2901914249674842,595.0,Corrective,True,,
b2b5ae80065ff52a77a3b8c08a89c895d151a52f,c3a7dc32c98a7a9145b6c52399ca478ce64b727f,antirez,antirez@gmail.com,Fri Dec 18 05:30:54 2009 -0500,1261132254,added sdstoupper() declaration in sds.h,1.0,0.0,"sds.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,70.0,5.0,12.902986111111113,1342.0,1.0775014396968832,596.0,Feature Addition,False,,
c3a7dc32c98a7a9145b6c52399ca478ce64b727f,ab9d4cb1e3de4379afb175e092ff4aa44d4f72cc,antirez,antirez@gmail.com,Fri Dec 18 06:45:26 2009 -0500,1261136726,LTRIM now returns +OK against non existing keys. More tests in test-redis.tcl,29.0,3.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.3372900666170139,3.0,3981.0,277.0,1.7713136574074069,1343.5,1.4492936067639357,598.0,Preventative,False,,
ab9d4cb1e3de4379afb175e092ff4aa44d4f72cc,c632369b52992a2e1abe9cfe85e7c79e79edbf7f,antirez,antirez@gmail.com,Fri Dec 18 06:56:51 2009 -0500,1261137411,LTRIM stress testing test added,29.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1626.0,51.0,0.007928240740740741,1345.0,127.13138686131387,599.0,Feature Addition,False,,
c632369b52992a2e1abe9cfe85e7c79e79edbf7f,fdcaae84d32e284a86cabddb4298c52a8e41a9f6,antirez,antirez@gmail.com,Fri Dec 18 07:13:13 2009 -0500,1261138393,"Added a missing server.dirty increment in a non critical place, added more tests",8.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,4008.5,280.0,0.01532986111111111,1346.5,43.22285780669461,601.0,Feature Addition,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
fdcaae84d32e284a86cabddb4298c52a8e41a9f6,ac945e2dcf8cf2890c5676cc26cbd6e6d2254b14,antirez,antirez@gmail.com,Fri Dec 18 07:31:44 2009 -0500,1261139504,"SHUTDOWN now does the right thing when append only is on, that is, fsync instead to save the snapshot.",25.0,15.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.8841837197791889,3.0,2703.0,385.0,0.03763503086419753,1349.0,11.107300991667056,604.0,None,False,,
ac945e2dcf8cf2890c5676cc26cbd6e6d2254b14,04c71068a82dfe888e3e63098227f2edb1206a5e,antirez,antirez@gmail.com,Fri Dec 18 07:51:23 2009 -0500,1261140683,modified a bit the ZREVRANGE test to cover a few lines of code more,3.0,6.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1665.0,54.0,0.013645833333333331,1351.0,74.28244274809161,605.0,Preventative,False,,
04c71068a82dfe888e3e63098227f2edb1206a5e,d922ae6592228851d3a5b93ce9b3e22be31caddc,antirez,antirez@gmail.com,Fri Dec 18 09:06:53 2009 -0500,1261145213,Now SORT returns an empty bulk reply if the key does not exist,5.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,4015.5,285.0,0.05925347222222223,1352.5,12.786161502055675,607.0,None,False,,
d922ae6592228851d3a5b93ce9b3e22be31caddc,5384a2d82e71717f0d47ce0c90caedaa27b16ad3,antirez,antirez@gmail.com,Fri Dec 18 09:09:18 2009 -0500,1261145358,SORT STORE test added,5.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1666.0,56.0,0.0016782407407407408,1354.0,596.8620689655173,608.0,Feature Addition,False,,
5384a2d82e71717f0d47ce0c90caedaa27b16ad3,98e1bb8136c263ac5982af98a2c99db3993b6d0e,antirez,antirez@gmail.com,Fri Dec 18 09:19:36 2009 -0500,1261145976,still more tests,11.0,2.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1671.0,57.0,0.007152777777777778,1355.0,140.80582524271844,609.0,Preventative,False,,
98e1bb8136c263ac5982af98a2c99db3993b6d0e,0447be2efe6a9fe13b69b2961b2a94cf11006c48,antirez,antirez@gmail.com,Fri Dec 18 15:39:19 2009 -0500,1261168759,"the pipelining test was ran against DB 1 for error, now it runs on DB 9 like all the other tests",3.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1680.0,58.0,0.2636921296296296,1356.0,4.792301277268138,610.0,Preventative,False,,
0447be2efe6a9fe13b69b2961b2a94cf11006c48,f0c138f61a80b7118bf78c89b5e0879a448a2d7c,antirez,antirez@gmail.com,Fri Dec 18 15:49:22 2009 -0500,1261169362,TODO list update,6.0,11.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,85.0,104.0,0.3455787037037037,1357.0,3.893696831669904,611.0,None,False,,
f0c138f61a80b7118bf78c89b5e0879a448a2d7c,f6bea06f74d4f065b5f8e4680792266eb97d7582,antirez,antirez@gmail.com,Tue Dec 22 15:08:50 2009 -0500,1261512530,html docs update (ZINCRBY added),51.0,14.0,"TODO,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER",6.0,2.0,2.0,1.6819244867036676,3.0,39.66666666666666,125.0,8.700833333333334,1360.5,1.073233318676856,381.0,Feature Addition,False,,
f6bea06f74d4f065b5f8e4680792266eb97d7582,752da584f016a2d27496dea655f4e20bd2ff9578,antirez,antirez@gmail.com,Tue Dec 22 16:09:27 2009 -0500,1261516167,"ZRANGE, ZREVRANGE now support WITHSCORES options",16.0,5.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7024665512903903,3.0,3401.0,274.0,10.578611111111114,1364.5,1.0532819471653276,614.0,None,False,,
752da584f016a2d27496dea655f4e20bd2ff9578,2c14807b2dd5c15f1471bec32a7c6dbb077720ee,antirez,antirez@gmail.com,Wed Dec 23 06:23:32 2009 -0500,1261567412,Add the command name in the unknown command error message.,3.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6380.0,232.0,0.5931134259259261,1366.0,2.686018148112011,615.0,Feature Addition,False,,
2c14807b2dd5c15f1471bec32a7c6dbb077720ee,56c2735d89dd41ed2f552c4adccba63c817ed602,antirez,antirez@gmail.com,Wed Dec 23 11:01:31 2009 -0500,1261584091,version is now 1.1.94,5.0,6.0,"doc/ZrangeCommand.html,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,2.0,2.0,0.8453509366224365,3.0,3212.0,235.0,9.097685185185183,1367.5,1.0552537057172091,616.0,None,False,True,"[""322fc7d855d3c19f8ca95cf5d66f8111f7981a30""]"
56c2735d89dd41ed2f552c4adccba63c817ed602,81d456450ac42b7cf78367ae3a89af1a543c9ff1,antirez,antirez@gmail.com,Wed Dec 23 11:12:01 2009 -0500,1261584721,ZRANGE WITHSCORES test added,4.0,5040.0,"doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SponsorshipHowto.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",108.0,2.0,2.0,6.602576095071665,3.0,62.25,438.0,16.737111304012352,1422.5,1.0026248767439483,617.0,Feature Addition,False,,
81d456450ac42b7cf78367ae3a89af1a543c9ff1,8fb13ce816b85ac414921ecca420671bf74a3eea,antirez,antirez@gmail.com,Wed Dec 23 11:15:07 2009 -0500,1261584907,html doc readded,5040.0,0.0,"doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SponsorshipHowto.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",107.0,1.0,1.0,6.598496809904336,3.0,0.0,486.0,0.002152777777777781,1530.0,23.81212713256789,596.0,Feature Addition,False,,
8fb13ce816b85ac414921ecca420671bf74a3eea,322fc7d855d3c19f8ca95cf5d66f8111f7981a30,antirez,antirez@gmail.com,Thu Dec 24 09:40:11 2009 -0500,1261665611,"Fixed a minor bug in GETSET, now the SET part is not performed if the GET fails because the key does not contain a string value",11.0,3.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,3.0,3227.0,340.0,1.357644675925926,1584.5,1.4663459768882396,619.0,Corrective,True,,
322fc7d855d3c19f8ca95cf5d66f8111f7981a30,6e4698826f2673a83792d02f9554812cfdac6a5f,antirez,antirez@gmail.com,Sun Dec 27 15:47:28 2009 -0500,1261946848,MULTI/EXEC first implementation,117.0,12.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6388.0,235.0,3.2550578703703703,1586.0,1.307214200123028,620.0,None,False,True,"[""248ea3100391e57725185a87ae77567646f76723"", ""1ad4d31631315d0c1e140b0a831e30fa90163fec""]"
6e4698826f2673a83792d02f9554812cfdac6a5f,36c548f01d25fb63536514cc8307c2b0f28ca932,antirez,antirez@gmail.com,Sun Dec 27 15:58:03 2009 -0500,1261947483,Now MULTI returns +OK as well,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6493.0,236.0,0.007349537037037037,1587.0,137.06299212598424,621.0,None,False,,
36c548f01d25fb63536514cc8307c2b0f28ca932,7c8163b85bce72a789e2c80becd6f1596d371863,antirez,antirez@gmail.com,Sun Dec 27 16:26:51 2009 -0500,1261949211,"Version changed to 1.3.0, welcome to the new unstable",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6494.0,237.0,0.02,1588.0,51.0,622.0,Feature Addition,False,,
7c8163b85bce72a789e2c80becd6f1596d371863,279e33bee7ababb69e614b3d862ddd0a3e44d0cf,antirez,antirez@gmail.com,Sun Dec 27 20:31:16 2009 -0500,1261963876,AOFSYNC command implemented,9.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6494.0,238.0,0.16973379629629629,1589.0,6.891578588475964,623.0,None,False,,
279e33bee7ababb69e614b3d862ddd0a3e44d0cf,436b423e18efd213d835f83efd909de87e9fb8c6,antirez,antirez@gmail.com,Sun Dec 27 20:40:11 2009 -0500,1261964411,"AOFSYNC removed, got a better idea...",0.0,9.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6503.0,239.0,0.00619212962962963,1590.0,162.49532710280374,624.0,Perfective,False,,
436b423e18efd213d835f83efd909de87e9fb8c6,4409877e19dd9b32818e75823f5264e24607eee5,antirez,antirez@gmail.com,Tue Dec 29 14:59:40 2009 -0500,1262116780,not yet working BLPOP implementation,235.0,4.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,0.6729402484214331,3.0,2204.25,347.0,10.974291087962964,1592.5,1.0769687647662365,628.0,None,False,True,"[""2affc3ed20de01efcf9d2aecb86fbabd97666eca"", ""5921aa36ede343d728cb53cc7dda87defc966c2f""]"
4409877e19dd9b32818e75823f5264e24607eee5,c04c9ac94fdabe1ec2c958e2c6f9aa5d462acd80,antirez,antirez@gmail.com,Tue Dec 29 15:03:44 2009 -0500,1262117024,minor fix for Linux 64 bit,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6697.0,241.0,0.002824074074074074,1595.0,355.09836065573774,629.0,Corrective,True,True,"[""54bac49d92bcf02e9896e658ff5e72cc0adbd35d""]"
c04c9ac94fdabe1ec2c958e2c6f9aa5d462acd80,2affc3ed20de01efcf9d2aecb86fbabd97666eca,antirez,antirez@gmail.com,Tue Dec 29 15:32:37 2009 -0500,1262118757,"First fix, still broken",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6697.0,242.0,0.02005787037037037,1596.0,50.855741488747825,630.0,Corrective,True,,
2affc3ed20de01efcf9d2aecb86fbabd97666eca,9fe33a0e1245a0c74628894a3a174786bf23a323,antirez,antirez@gmail.com,Tue Dec 29 15:50:08 2009 -0500,1262119808,"a few more fixes, still broken",3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6697.0,243.0,0.012164351851851852,1597.0,83.20742150333017,631.0,Corrective,True,,
9fe33a0e1245a0c74628894a3a174786bf23a323,95242ab507bb55fce9ade6e07b2058d7e3b71c4b,antirez,antirez@gmail.com,Tue Dec 29 16:05:56 2009 -0500,1262120756,"first working implementation of BLPOP and BRPOP, still everything is to test well",9.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6700.0,244.0,0.010972222222222222,1598.0,92.13924050632912,632.0,Preventative,False,,
95242ab507bb55fce9ade6e07b2058d7e3b71c4b,f86a74e94459ab071333431a34b73e8557083426,antirez,antirez@gmail.com,Tue Dec 29 16:26:05 2009 -0500,1262121965,BLPOP timeouts implemented,16.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6701.0,245.0,0.013993055555555555,1599.0,72.46401985111663,633.0,None,False,True,"[""58d976b8e855b4ff83c7bfd910acf9c53e3e7b96""]"
f86a74e94459ab071333431a34b73e8557083426,58d976b8e855b4ff83c7bfd910acf9c53e3e7b96,antirez,antirez@gmail.com,Tue Dec 29 19:11:05 2009 -0500,1262131865,"fixed a problem with BLPOP timeout of zero, now it blocks forever",3.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6714.0,246.0,0.11458333333333333,1600.0,9.727272727272727,634.0,Corrective,True,,
58d976b8e855b4ff83c7bfd910acf9c53e3e7b96,b177fd30ac0409b885a6559b55e9c8d4764ac07d,antirez,antirez@gmail.com,Sat Jan 2 09:06:44 2010 -0500,1262441204,New vararg BLPOP able to block against multiple keys,103.0,52.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",4.0,1.0,1.0,0.6372203869490917,3.0,1860.5,403.0,5.016724537037037,1602.5,1.0752701954421902,638.0,Feature Addition,False,True,"[""676740a960dda1cf1adfad908628708057bf4e22""]"
b177fd30ac0409b885a6559b55e9c8d4764ac07d,08ff05b012fbc988ae3d800262f1e5a21a9148e6,antirez,antirez@gmail.com,Sat Jan 2 09:37:01 2010 -0500,1262443021,Version is now 1.3.1,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6762.0,248.0,0.0210300925925926,1605.0,48.55090809025866,639.0,None,False,,
08ff05b012fbc988ae3d800262f1e5a21a9148e6,e20fb74f69e452e6e0cb4c92414d4d5a29376c6f,antirez,antirez@gmail.com,Sat Jan 2 10:02:24 2010 -0500,1262444544,Now the PUSH side of RPOPLPUSH is able to unblock clients blocked on BLPOP,15.0,11.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6762.0,249.0,0.01762731481481481,1606.0,57.73013788575181,640.0,None,False,,
e20fb74f69e452e6e0cb4c92414d4d5a29376c6f,06233c458590307d717c23b7570a102a5a08d8f7,antirez,antirez@gmail.com,Mon Jan 4 15:00:43 2010 -0500,1262635243,"saving code refactored a bit, added a function returning the number of bytes an object will use on disk",71.0,49.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6766.0,250.0,2.207164351851852,1607.0,1.4530700213425347,641.0,Feature Addition,False,True,"[""ace065423e275013f334ac8c40a96cb173c6897e""]"
06233c458590307d717c23b7570a102a5a08d8f7,5dc70bff2eaf59c09bdab7b81f09ff26c15df4ef,antirez,antirez@gmail.com,Mon Jan 4 15:01:55 2010 -0500,1262635315,version marked 1.3.2,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6788.0,251.0,0.0008333333333333334,1608.0,1201.0,642.0,None,False,,
5dc70bff2eaf59c09bdab7b81f09ff26c15df4ef,75680a3c3700d40bd7d3c48b0a36cffb9922da01,antirez,antirez@gmail.com,Mon Jan 4 16:01:40 2010 -0500,1262638900,"vm swap file creation, and some basic configuration",74.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6788.0,252.0,0.04149305555555555,1609.0,25.100418410041843,643.0,None,False,True,"[""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
75680a3c3700d40bd7d3c48b0a36cffb9922da01,06224fec7aeda8edb617a114a94c38b2c0214026,antirez,antirez@gmail.com,Mon Jan 4 19:52:08 2010 -0500,1262652728,VM low level pages handling,123.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6860.0,253.0,0.1600462962962963,1610.0,7.248192074052647,644.0,None,False,True,"[""7d30035d477f5d97e2b491477f4b95c9bb140d6f""]"
06224fec7aeda8edb617a114a94c38b2c0214026,c78a8ccce75319bb2f1787d8dc7e275edcc55066,antirez,antirez@gmail.com,Tue Jan 5 04:49:02 2010 -0500,1262684942,"rdbLoadObject() as a separated function to load objects from disk. Dropped support for RDB version 0, I guess no longer has this legacy DBs around",81.0,80.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6983.0,254.0,0.3728472222222222,1611.0,3.6820636990128524,645.0,None,False,True,"[""ada386b2189aabee1cf862546d14cc35a827b4e1""]"
c78a8ccce75319bb2f1787d8dc7e275edcc55066,3a66edc7a43c3b32de1e9f609ddcc9d2c0fd4c2b,antirez,antirez@gmail.com,Tue Jan 5 05:37:19 2010 -0500,1262687839,Redis objects swapping / loading,77.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,6984.0,255.0,0.03353009259259259,1612.0,30.82395581636176,646.0,None,False,True,"[""38823f081799b5bcdbb07fd56478f07cb865640d"", ""478c2c6f5bffa318d24e23519d2e4d7ea68f15fd"", ""a4798f733dc2cb973552e0ea84cc5f553951e162""]"
3a66edc7a43c3b32de1e9f609ddcc9d2c0fd4c2b,a35ddf129c477ecced24220d0e3eb3f5c84163dd,antirez,antirez@gmail.com,Tue Jan 5 07:19:09 2010 -0500,1262693949,more object-level VM primitives,19.0,8.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.6051865766334206,3.0,3621.5,276.0,9.858344907407409,1613.5,8.09573565843431,648.0,None,False,,
a35ddf129c477ecced24220d0e3eb3f5c84163dd,55cf8433e32f0e6e99cd136b289c404134143746,antirez,antirez@gmail.com,Tue Jan 5 07:28:06 2010 -0500,1262694486,load key from swap on key lookup,15.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7061.0,257.0,0.006215277777777778,1615.0,161.8938547486034,649.0,None,False,,
55cf8433e32f0e6e99cd136b289c404134143746,7d30035d477f5d97e2b491477f4b95c9bb140d6f,antirez,antirez@gmail.com,Tue Jan 5 10:34:05 2010 -0500,1262705645,"VM internals bugfixes, set 1",37.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7072.0,258.0,0.1291550925925926,1616.0,8.742629267855543,650.0,Corrective,True,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
7d30035d477f5d97e2b491477f4b95c9bb140d6f,d894161b850458f76284941a207ffc42fe14c7ba,antirez,antirez@gmail.com,Tue Jan 5 10:38:58 2010 -0500,1262705938,New object field (one of the unused bytes) to hold the type of the swapped out value object in key objects,6.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7102.0,259.0,0.003391203703703704,1617.0,295.88054607508536,651.0,Feature Addition,False,,
d894161b850458f76284941a207ffc42fe14c7ba,4ef8de8ad74a890a31950aaf4d6b281d3beb6736,antirez,antirez@gmail.com,Tue Jan 5 12:46:59 2010 -0500,1262713619,basic VM mostly working!,205.0,4.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",3.0,1.0,1.0,1.0309344544353871,3.0,2505.0,286.0,1.1565046296296295,1619.0,5.898564674046106,654.0,None,False,True,"[""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""c8c72447f6c9e999a17d37338e9d3460f45722f4"", ""44262c58a417bfcb4a23d767a742a9a2f360fcb4""]"
4ef8de8ad74a890a31950aaf4d6b281d3beb6736,e3cadb8abe3a80e141d28bca1796f4a5b661eada,antirez,antirez@gmail.com,Tue Jan 5 13:16:41 2010 -0500,1262715401,swapping algorithm a bit more aggressive under low memory,16.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7254.0,261.0,0.020625,1621.0,49.48484848484848,655.0,None,False,,
e3cadb8abe3a80e141d28bca1796f4a5b661eada,7e69548dacc42f546d800e7bd50910ed951f103b,antirez,antirez@gmail.com,Tue Jan 5 13:51:46 2010 -0500,1262717506,SAVE now works with VM,66.0,16.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7267.0,262.0,0.024363425925925927,1622.0,42.045130641330154,656.0,None,False,True,"[""38823f081799b5bcdbb07fd56478f07cb865640d"", ""f870935d3e26fe79766f15bbaa5358c5379e390e"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
7e69548dacc42f546d800e7bd50910ed951f103b,1b03836c0efec87eada6787f78e7a6c80cb6f70a,antirez,antirez@gmail.com,Tue Jan 5 14:25:56 2010 -0500,1262719556,A first fix for SET key overwrite,20.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7317.0,263.0,0.023726851851851853,1623.0,43.14634146341463,657.0,Corrective,True,True,"[""ddfaca9d81cdebf4ced1cd65c42983edc052ab57"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
1b03836c0efec87eada6787f78e7a6c80cb6f70a,e7546c639301968a011265b96ea6e7f22407960e,antirez,antirez@gmail.com,Tue Jan 5 19:15:15 2010 -0500,1262736915,BGREWRITEAOF now works with swapping on,26.0,6.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.8571484374283718,3.0,3783.0,286.0,0.2352719907407408,1624.5,4.551222542718506,659.0,None,False,True,"[""38823f081799b5bcdbb07fd56478f07cb865640d"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
e7546c639301968a011265b96ea6e7f22407960e,f2b8ab346abd82d76a749a582396b053928e57af,antirez,antirez@gmail.com,Tue Jan 5 19:44:22 2010 -0500,1262738662,converted a few calls to assert() => redisAssert() to print stack trace,4.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7354.0,265.0,0.02021990740740741,1626.0,50.45621064682312,660.0,Preventative,False,,
f2b8ab346abd82d76a749a582396b053928e57af,38823f081799b5bcdbb07fd56478f07cb865640d,antirez,antirez@gmail.com,Tue Jan 5 19:51:30 2010 -0500,1262739090,fixed a bug in bgsave when VM is off but still it was testing for obj->storage field,3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7354.0,266.0,0.004953703703703704,1627.0,202.86915887850463,661.0,Corrective,True,,
38823f081799b5bcdbb07fd56478f07cb865640d,f870935d3e26fe79766f15bbaa5358c5379e390e,antirez,antirez@gmail.com,Wed Jan 6 09:15:17 2010 -0500,1262787317,"Introduced a new log verbosity level, so now DEBUG is really for debugging. Refactored a bit maxmemory. When virtual memory is short in RAM free the objects freelist as well as swapping things out.",51.0,31.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,0.5830559405614436,3.0,2555.0,398.0,1.7158256172839506,1629.0,1.2209998871190244,664.0,Corrective,True,True,"[""f6c0bba8bc1b11fd789b0139dd86c852194ebc4c""]"
f870935d3e26fe79766f15bbaa5358c5379e390e,7d98e08c0a829acdf682c3063c975efe8297be6a,antirez,antirez@gmail.com,Wed Jan 6 20:14:27 2010 -0500,1262826867,VM stats in INFO command,39.0,2.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.5349436990971067,3.0,3799.5,292.0,0.4577546296296297,1631.5,2.638432364096081,666.0,None,False,,
7d98e08c0a829acdf682c3063c975efe8297be6a,38aba9a12124bc57567a452b1a371bf0bedd5b6e,antirez,antirez@gmail.com,Wed Jan 6 21:03:16 2010 -0500,1262829796,a new default redis.conf,17.0,7.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,3.0,3818.0,294.0,0.033900462962962966,1633.5,23.12359166951177,668.0,Feature Addition,False,,
38aba9a12124bc57567a452b1a371bf0bedd5b6e,c9e5c23d5b6eda047f4dcf6f6327628302d89a57,antirez,antirez@gmail.com,Wed Jan 6 21:05:03 2010 -0500,1262829903,vm-enabled set to no by default in redis.conf,3.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,240.0,26.0,0.001238425925925926,1635.0,808.4766355140187,669.0,None,False,,
c9e5c23d5b6eda047f4dcf6f6327628302d89a57,0d7170a4545d8771f64441f591f95015ba65212a,antirez,antirez@gmail.com,Thu Jan 7 08:56:57 2010 -0500,1262872617,added process id information in INFO,3.0,0.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,3.0,3746.0,379.0,0.7414409722222222,1636.5,1.84362908952578,671.0,Feature Addition,False,,
0d7170a4545d8771f64441f591f95015ba65212a,b492cf00d8d408d1335bdef3c3f3a10ce3f45c48,antirez,antirez@gmail.com,Thu Jan 7 10:41:08 2010 -0500,1262878868,VM now swaps objects out while loading datasets not fitting into vm-max-memory bytes of RAM,16.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7408.0,271.0,0.07234953703703703,1638.0,14.821788513837786,672.0,None,False,,
b492cf00d8d408d1335bdef3c3f3a10ce3f45c48,87eaf97f1452a31e847e1be0923479f41cdcd81d,antirez,antirez@gmail.com,Thu Jan 7 15:49:00 2010 -0500,1262897340,added the fmacros to enable support for fseeko() lseeko() with 64bit off_t,2.0,0.0,"fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,7.0,1.0,285.99162037037036,1639.0,1.0034966059449748,673.0,Feature Addition,False,,
87eaf97f1452a31e847e1be0923479f41cdcd81d,0841cc928d4a915f7e2340023663fe30b4ea31b3,antirez,antirez@gmail.com,Thu Jan 7 15:53:12 2010 -0500,1262897592,fflush VM swap file after object swapping,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7424.0,272.0,0.2167129629629629,1640.0,5.614398632770777,674.0,None,False,True,"[""ba76a8f901258bc13812072dc4065b88f2e2d4d0""]"
0841cc928d4a915f7e2340023663fe30b4ea31b3,ace065423e275013f334ac8c40a96cb173c6897e,antirez,antirez@gmail.com,Thu Jan 7 16:51:58 2010 -0500,1262901118,Now DEBUG OBJECT plays well with swapped out objects,11.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7425.0,273.0,0.040810185185185185,1641.0,25.503686897334088,675.0,Corrective,True,True,"[""07efaf746766a7e4425f866062bb1a2e3d2a04b2"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
ace065423e275013f334ac8c40a96cb173c6897e,ec6c7a1d78d4f42f78d5e006d7b1e804388088a1,antirez,antirez@gmail.com,Fri Jan 8 10:38:48 2010 -0500,1262965128,used_memory_human added to INFO output. Human readable amount of memory used.,27.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5547781633412736,3.0,3760.5,384.0,0.905792824074074,1642.5,1.74297279862113,677.0,Feature Addition,False,True,"[""b72f6a4b70ef642a085f700243ebf885ca7b09f4"", ""aa42c9a7916e29964a565b66a2446a42f8bf483b""]"
ec6c7a1d78d4f42f78d5e006d7b1e804388088a1,92f8e882046e8e129236ac751d9a4fdf254b022f,antirez,antirez@gmail.com,Sat Jan 9 12:46:52 2010 -0500,1263059212,"non-blocking VM data structures, just a start",64.0,7.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,1.0105534152700903,3.0,2595.6666666666665,325.0,9.900081018518517,1645.0,1.0363894595482672,680.0,None,False,,
92f8e882046e8e129236ac751d9a4fdf254b022f,996cb5f704b2b37e764d63d0889463fd8ef2b70e,antirez,antirez@gmail.com,Sun Jan 10 11:23:01 2010 -0500,1263140581,more work on VM threaded I/O. Still nothing of usable,190.0,27.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7506.0,276.0,0.9417708333333332,1647.0,2.0618294436456144,681.0,None,False,True,"[""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""970e10bb34690746ba378b0408ec37e7f7b57040"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9"", ""e4ed181d4057395c7a83c531d89b022e76ba21b1""]"
996cb5f704b2b37e764d63d0889463fd8ef2b70e,a69a0c9c3bc199a627a794e07f3449290ddb0dc8,antirez,antirez@gmail.com,Mon Jan 11 05:15:54 2010 -0500,1263204954,More threaded I/O VM work + Redis init script,102.0,21.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,utils/redis_init_script,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER",5.0,2.0,2.0,1.7402313327373111,3.0,1622.6,315.0,15.925495370370367,1650.0,1.2525874286898542,685.0,None,False,True,"[""b3e3d0d78e3b74328f89697ad4f63a07e8acf373"", ""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
a69a0c9c3bc199a627a794e07f3449290ddb0dc8,b9bc0eefc4b56b23120a9597775bcef41277d8f7,antirez,antirez@gmail.com,Mon Jan 11 11:42:15 2010 -0500,1263228135,More work on non-blocking VM. Should work in a few days,218.0,47.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7701.0,278.0,0.2682986111111111,1653.0,4.727190371424874,686.0,None,False,True,"[""20f5b3886761a0ba963fee435bba90dd09bd5bd5"", ""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0"", ""59146ef3c107d59b6522b8a2f5539a55703adee1"", ""9ebed7cf066267c0fe91f100f50c028fc4cec23f"", ""248ea3100391e57725185a87ae77567646f76723"", ""e4ed181d4057395c7a83c531d89b022e76ba21b1"", ""092418136490fc94f2520ede706846dac8e43b5e"", ""44262c58a417bfcb4a23d767a742a9a2f360fcb4""]"
b9bc0eefc4b56b23120a9597775bcef41277d8f7,f11b86471486d15cc7e37b5cc4021433e0592c91,antirez,antirez@gmail.com,Mon Jan 11 12:45:15 2010 -0500,1263231915,a few non blocking VM bugs fixed,24.0,0.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,3.0,4059.0,286.0,0.17789930555555555,1654.5,13.83386078155279,688.0,Corrective,True,True,"[""20f5b3886761a0ba963fee435bba90dd09bd5bd5"", ""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
f11b86471486d15cc7e37b5cc4021433e0592c91,b3e3d0d78e3b74328f89697ad4f63a07e8acf373,antirez,antirez@gmail.com,Mon Jan 11 12:54:29 2010 -0500,1263232469,removed a bug introduced with non blocking VM,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7892.0,280.0,0.0064120370370370355,1656.0,156.956678700361,689.0,Corrective,True,,
b3e3d0d78e3b74328f89697ad4f63a07e8acf373,20f5b3886761a0ba963fee435bba90dd09bd5bd5,antirez,antirez@gmail.com,Mon Jan 11 13:10:43 2010 -0500,1263233443,converted random printfs in debug logs,3.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7892.0,281.0,0.011273148148148148,1657.0,89.70636550308008,690.0,Corrective,True,True,"[""6c96ba7dfe139187988b751fa4ae24dbfbe8be4e"", ""b74880b4ed84693e484efbbb5eef0eb98c37835b""]"
20f5b3886761a0ba963fee435bba90dd09bd5bd5,a5819310b0b92cdcd07a7f57f62f7d03d8cc58e0,antirez,antirez@gmail.com,Mon Jan 11 17:26:58 2010 -0500,1263248818,more steps towards a working non blocking VM,103.0,66.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.0927219401687717,3.0,4068.5,290.0,0.1867939814814815,1658.5,5.148128983117702,692.0,None,False,True,"[""9ebed7cf066267c0fe91f100f50c028fc4cec23f"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
a5819310b0b92cdcd07a7f57f62f7d03d8cc58e0,6c96ba7dfe139187988b751fa4ae24dbfbe8be4e,antirez,antirez@gmail.com,Mon Jan 11 19:47:18 2010 -0500,1263257238,Fixed a bug in the IO Job canceling funtion,28.0,16.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7924.0,283.0,0.09745370370370372,1660.0,11.261282660332537,693.0,Corrective,True,True,"[""b74880b4ed84693e484efbbb5eef0eb98c37835b"", ""2e111efe5a8d5092a4a6d391096ff6712cf6f162"", ""478c2c6f5bffa318d24e23519d2e4d7ea68f15fd"", ""9ebed7cf066267c0fe91f100f50c028fc4cec23f"", ""fdfb02e7ff6e25f94dda2e649c18fa4addac4cc4""]"
6c96ba7dfe139187988b751fa4ae24dbfbe8be4e,c953f24bceae51272ea9b2ef7d8f7781ea912439,antirez,antirez@gmail.com,Tue Jan 12 07:27:54 2010 -0500,1263299274,Added a define to configure how many completed IO jobs the handler should process at every call.,9.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7936.0,284.0,0.4865277777777778,1661.0,3.0553811019126464,694.0,Feature Addition,False,True,"[""f6c0bba8bc1b11fd789b0139dd86c852194ebc4c""]"
c953f24bceae51272ea9b2ef7d8f7781ea912439,25fd2cb284ac12447059aa0e8ec87db9fb75f79d,antirez,antirez@gmail.com,Tue Jan 12 09:57:00 2010 -0500,1263308220,a few more stuff in INFO about VM. Test #11 changed a bit in order to be less lame,18.0,5.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.5653402161740673,3.0,3243.333333333333,371.0,5.029521604938272,1663.0,1.557640233917151,697.0,Preventative,False,True,"[""02fcfc1e39d4d8fbe102c181152ea8699d86565b""]"
25fd2cb284ac12447059aa0e8ec87db9fb75f79d,d663729a127bb0985984d5c34d804862b2bdd3b1,antirez,antirez@gmail.com,Tue Jan 12 10:01:59 2010 -0500,1263308519,fix for test #11,1.0,1.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1704.0,62.0,0.003460648148148148,1665.0,289.9632107023412,698.0,Corrective,True,,
d663729a127bb0985984d5c34d804862b2bdd3b1,f2d9f50f6c1ed82663e71bacef7f2c9d2cd2e7e6,antirez,antirez@gmail.com,Tue Jan 12 15:09:11 2010 -0500,1263326951,more non blocking VM changes,26.0,13.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7948.0,286.0,0.2167939814814815,1666.0,5.612674176498852,699.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
f2d9f50f6c1ed82663e71bacef7f2c9d2cd2e7e6,72e9fd40b63924355dd158ab552e5f339ad1f19b,antirez,antirez@gmail.com,Tue Jan 12 15:23:52 2010 -0500,1263327832,support for blocking VM in config file,19.0,10.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",3.0,1.0,1.0,0.6906950555920002,3.0,2765.0,426.0,2.4390625000000004,1668.0,1.2041696231483374,702.0,None,False,,
72e9fd40b63924355dd158ab552e5f339ad1f19b,b74880b4ed84693e484efbbb5eef0eb98c37835b,antirez,antirez@gmail.com,Wed Jan 13 09:40:50 2010 -0500,1263393650,minor TODO and debugging info changes,4.0,3.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,3.0,4026.0,400.0,0.7617824074074074,1670.5,1.9845331064450449,704.0,Corrective,True,True,"[""9ebed7cf066267c0fe91f100f50c028fc4cec23f""]"
b74880b4ed84693e484efbbb5eef0eb98c37835b,c7df85a484f6526a00f9748490600a227587b3c3,antirez,antirez@gmail.com,Wed Jan 13 13:18:07 2010 -0500,1263406687,list API is now thread safe,60.0,41.0,"adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.9625875582286454,3.0,2786.666666666666,293.0,178.61801311728394,1673.0,1.0024887654189982,707.0,None,False,True,"[""85a2775298a85b80ccaaf31082c479b7968158b1"", ""427a2153d3f8509e34a8caf58612f7ed03a6d9ec""]"
c7df85a484f6526a00f9748490600a227587b3c3,4ee9488d7ebdbb0c4e3fff6e93ce5523f4534076,antirez,antirez@gmail.com,Wed Jan 13 13:38:30 2010 -0500,1263407910,Wait zero active threads condition before to fork() for BGSAVE or BGREWRITEAOF,17.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,7992.0,290.0,0.01415509259259259,1675.0,71.64595257563369,708.0,None,False,True,"[""054e426dbd7f5d4788c68fca653e1d4819adeec0"", ""76b7233adb5c59b072209434d9a5ee795c5affa5""]"
4ee9488d7ebdbb0c4e3fff6e93ce5523f4534076,85a2775298a85b80ccaaf31082c479b7968158b1,antirez,antirez@gmail.com,Wed Jan 13 13:41:38 2010 -0500,1263408098,removed a useless debugging message,0.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8009.0,291.0,0.0021759259259259253,1676.0,460.5744680851063,709.0,Corrective,True,,
85a2775298a85b80ccaaf31082c479b7968158b1,427a2153d3f8509e34a8caf58612f7ed03a6d9ec,antirez,antirez@gmail.com,Wed Jan 13 16:26:41 2010 -0500,1263418001,access to already freed job structure fixed by statements reoredering,6.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8007.0,292.0,0.11461805555555556,1677.0,9.724628900333233,710.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
427a2153d3f8509e34a8caf58612f7ed03a6d9ec,bcaa7a4ffab113115740ec47a6d1a923a7779bdf,antirez,antirez@gmail.com,Thu Jan 14 08:58:41 2010 -0500,1263477521,Set the new threads stack size to a LZF friendly amount,9.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8009.0,293.0,0.6888888888888889,1678.0,2.4516129032258065,711.0,Feature Addition,False,True,"[""a97b9060923da11136798b6c0c71b2da07c0efa7""]"
bcaa7a4ffab113115740ec47a6d1a923a7779bdf,2e111efe5a8d5092a4a6d391096ff6712cf6f162,antirez,antirez@gmail.com,Thu Jan 14 17:18:27 2010 -0500,1263507507,"Fixed a never experienced, theoretical bug that can actually happen in practice. Basically when a thread is working on a I/O Job we need to wait it to finish before to cancel the Job in vmCancelThreadedIOJob(), otherwise the thread may mess with an object that is being manipulated by the main thread as well.",24.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.2351933818192415,3.0,4052.0,407.0,0.8324247685185184,1679.5,1.6797507520322603,713.0,Corrective,True,True,"[""970e10bb34690746ba378b0408ec37e7f7b57040""]"
2e111efe5a8d5092a4a6d391096ff6712cf6f162,1064ef8764eaa95b21c6abeaa7f626b389327999,antirez,antirez@gmail.com,Fri Jan 15 05:09:18 2010 -0500,1263550158,removed a few races from threaded VM,16.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6098403047164004,3.0,4063.0,409.0,0.4936458333333333,1681.5,2.5193078708588312,715.0,None,False,,
1064ef8764eaa95b21c6abeaa7f626b389327999,b04a5df979ef9237a5114899e9a454c4e52fb5ac,antirez,antirez@gmail.com,Fri Jan 15 05:16:12 2010 -0500,1263550572,A define to make Redis more helgrind friendly,14.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8051.0,296.0,0.0047916666666666646,1683.0,209.69565217391303,716.0,None,False,,
b04a5df979ef9237a5114899e9a454c4e52fb5ac,4ad37480f3e9afb42d5957170b57f555171fb01c,antirez,antirez@gmail.com,Fri Jan 15 08:52:20 2010 -0500,1263563540,thread safe zmalloc used memory counter,43.0,9.0,"redis.c,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER,zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,0.4536495732030351,3.0,2743.0,308.0,100.76730324074076,1685.0,3.2994662630159737,719.0,None,False,True,"[""28e80bf96dba35f8937518421a2ee5a3a9c36c4d""]"
4ad37480f3e9afb42d5957170b57f555171fb01c,7276646263e4ef39bf20ee0ee04fec5f1295eaf5,antirez,antirez@gmail.com,Fri Jan 15 09:37:26 2010 -0500,1263566246,new test added,21.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1704.0,63.0,2.982951388888889,1687.0,1.3352384499877776,720.0,Feature Addition,False,True,"[""5f8e5d7c9e49b8633edd74dfca246a1310e9c003"", ""054e426dbd7f5d4788c68fca653e1d4819adeec0""]"
7276646263e4ef39bf20ee0ee04fec5f1295eaf5,02fcfc1e39d4d8fbe102c181152ea8699d86565b,antirez,antirez@gmail.com,Fri Jan 15 09:39:44 2010 -0500,1263566384,useless debugging messages removed,0.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8068.0,298.0,0.032916666666666664,1688.0,31.37974683544304,721.0,Corrective,True,,
02fcfc1e39d4d8fbe102c181152ea8699d86565b,5f8e5d7c9e49b8633edd74dfca246a1310e9c003,antirez,antirez@gmail.com,Fri Jan 15 10:37:37 2010 -0500,1263569857,fix for the just added new test,1.0,1.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1725.0,64.0,0.04179398148148148,1689.0,24.926890058155635,722.0,Corrective,True,,
5f8e5d7c9e49b8633edd74dfca246a1310e9c003,054e426dbd7f5d4788c68fca653e1d4819adeec0,antirez,antirez@gmail.com,Fri Jan 15 13:14:23 2010 -0500,1263579263,support for named VM swap file. Fixed a few important interaction issues between the background saving processes and IO threads,75.0,18.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.7287600002791114,3.0,3347.666666666666,393.0,1.056003086419753,1691.0,3.4503799704657427,725.0,Corrective,True,True,"[""2316bb3b428d583b88a03ad45b955d618bd320cd"", ""478c2c6f5bffa318d24e23519d2e4d7ea68f15fd""]"
054e426dbd7f5d4788c68fca653e1d4819adeec0,2316bb3b428d583b88a03ad45b955d618bd320cd,antirez,antirez@gmail.com,Fri Jan 15 13:17:43 2010 -0500,1263579463,minor fix,6.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8110.0,300.0,0.0023148148148148147,1693.0,433.0,726.0,Corrective,True,,
2316bb3b428d583b88a03ad45b955d618bd320cd,fefed5979816be8371ce106f9d98bdefc5f806da,antirez,antirez@gmail.com,Fri Jan 15 13:35:13 2010 -0500,1263580513,fixed a minor memory leak in configuration file parsing,3.0,2.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,3.0,4920.0,367.0,0.013310185185185184,1694.5,60.92546583850931,728.0,Corrective,True,,
fefed5979816be8371ce106f9d98bdefc5f806da,459f52a8aadefc39bd2fe0fb75b9b29b09e1936e,antirez,antirez@gmail.com,Fri Jan 15 13:55:52 2010 -0500,1263581752,I hate warnings,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8116.0,302.0,0.014340277777777778,1696.0,70.73365617433414,729.0,None,False,True,"[""07efaf746766a7e4425f866062bb1a2e3d2a04b2""]"
459f52a8aadefc39bd2fe0fb75b9b29b09e1936e,6fa987e390f12388e1597ab5c46f58618c859912,antirez,antirez@gmail.com,Fri Jan 15 14:02:18 2010 -0500,1263582138,Create swap file only if not exists,6.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8116.0,303.0,0.0044675925925925924,1697.0,224.83419689119168,730.0,Feature Addition,False,,
6fa987e390f12388e1597ab5c46f58618c859912,a9158272c69ff283fbedf68dd3cb4855e69159fc,antirez,antirez@gmail.com,Fri Jan 15 16:42:29 2010 -0500,1263591749,now redis-cli understands -h,14.0,9.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,435.0,46.0,13.316493055555556,1698.0,1.0750948463554229,731.0,None,False,True,"[""fdfdae0f3abdbe44905d2de1b89ea839717c2a65""]"
a9158272c69ff283fbedf68dd3cb4855e69159fc,76a41fb163b6e38845323e2b6a1269a31552c260,antirez,antirez@gmail.com,Sat Jan 16 07:57:32 2010 -0500,1263646652,removed support for REDIS_HELGRIND_FRIENDLY since Helgrind 3.5.0 is friendly enough even with many threads created and destroyed,0.0,14.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8120.0,304.0,0.7466898148148148,1699.0,2.339244195058437,732.0,Feature Addition,False,,
76a41fb163b6e38845323e2b6a1269a31552c260,33843a90aaff50805cb3c74f587d1ef204c036c4,antirez,antirez@gmail.com,Sun Jan 17 11:24:37 2010 -0500,1263745477,static symbols update,5.0,0.0,"staticsymbols.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,250.0,9.0,5.7483680555555585,1700.0,1.1739624168695222,733.0,None,False,,
33843a90aaff50805cb3c74f587d1ef204c036c4,970e10bb34690746ba378b0408ec37e7f7b57040,antirez,antirez@gmail.com,Tue Jan 19 13:02:02 2010 -0500,1263924122,removed a bug in the function to cancel an I/O job,665.0,646.0,"Makefile,CAS_DELIMITER,benchmark.c,CAS_DELIMITER,redis-benchmark.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.177532051464172,3.0,2208.75,349.0,12.282505787037033,1702.5,1.051047894736383,737.0,Corrective,True,True,"[""dbc289aed1cdefb51d8764000d95d5259f50b132""]"
970e10bb34690746ba378b0408ec37e7f7b57040,8e688711a7bcb1b13ef26002d35d555890d3cccf,antirez,antirez@gmail.com,Tue Jan 19 13:32:36 2010 -0500,1263925956,commercial tools stuff removed from the Redis makefile. cotools are now migrated into a different repos,1.0,8.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,101.0,27.0,0.02122685185185185,1705.0,48.11014176663031,738.0,None,False,,
8e688711a7bcb1b13ef26002d35d555890d3cccf,621d5c1985a211662409976d7b49645cad55ea4e,antirez,antirez@gmail.com,Wed Jan 20 13:38:59 2010 -0500,1264012739,"ae.c event loop does no longer support exception notifications, as they are fully pointless. Also a theoretical bug that never happens in practice fixed.",21.0,25.0,"ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,ae_epoll.c,CAS_DELIMITER,ae_select.c,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER",5.0,1.0,1.0,2.059161683236148,3.0,222.4,61.0,39.889217592592594,1708.0,1.0090935059030277,743.0,Corrective,True,True,"[""e0e1c195202dd74ab22554dd4293672cc95368ee""]"
621d5c1985a211662409976d7b49645cad55ea4e,76b7233adb5c59b072209434d9a5ee795c5affa5,antirez,antirez@gmail.com,Wed Jan 20 16:57:00 2010 -0500,1264024620,"fixed a deadlock caused by too much finished processes in queue so that I/O clients writing to the wirte side of the pipe used to awake the main thread where blocking. Then a BGSAVE started waiting for the last active thread to finish, condition impossible because all the I/O threads where blocking on threads. Takes this as a note to myself...",13.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8115.0,306.0,1.1631712962962963,1711.0,1.8597186013652007,744.0,Corrective,True,,
76b7233adb5c59b072209434d9a5ee795c5affa5,f6c0bba8bc1b11fd789b0139dd86c852194ebc4c,antirez,antirez@gmail.com,Thu Jan 21 07:27:32 2010 -0500,1264076852,"REDIS_MAX_COMPLETED_JOBS_PROCESSED is now in percentage, not number of jobs. Moved a debugging message a few lines forward as it was called where a few logged parameters where invalid, leading to a crash",11.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8127.0,307.0,0.604537037037037,1712.0,2.6541583703476794,745.0,Corrective,True,,
f6c0bba8bc1b11fd789b0139dd86c852194ebc4c,eb6845621cff10d890769fc785fd1c50ab7bd164,antirez,antirez@gmail.com,Thu Jan 21 10:36:32 2010 -0500,1264088192,Changelog updated,104.0,0.0,"Changelog,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,401.0,36.0,36.08055555555556,1713.0,1.0277157594887982,746.0,None,False,,
eb6845621cff10d890769fc785fd1c50ab7bd164,b0d8747dae8fa2dfa93b33ca036dace078edef21,antirez,antirez@gmail.com,Fri Jan 22 12:58:11 2010 -0500,1264183091,VM tuning thanks to redis-stat vmstat. Now it performs much better under high load,47.0,38.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",4.0,1.0,1.0,1.1248799299921821,3.0,2151.0,436.0,18.962748842592603,1715.5,1.0701764275691612,750.0,Perfective,False,True,"[""5921aa36ede343d728cb53cc7dda87defc966c2f"", ""ed7451548a0e874ac3b2e029268655afab96b506""]"
b0d8747dae8fa2dfa93b33ca036dace078edef21,b72f6a4b70ef642a085f700243ebf885ca7b09f4,antirez,antirez@gmail.com,Sat Jan 23 11:55:04 2010 -0500,1264265704,"Fixed memory human style memory reporting, removed server.usedmemory, now zmalloc_used_memory() is used always.",9.0,9.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,3.0,4113.5,425.0,0.9561689814814814,1718.5,1.7843801822957646,752.0,Corrective,True,,
b72f6a4b70ef642a085f700243ebf885ca7b09f4,a544018d04a29fa9e4bb0c8bb0dc792eb50e3932,antirez,antirez@gmail.com,Tue Jan 26 05:02:27 2010 -0500,1264500147,TODO cahnges,2.0,6.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,81.0,117.0,2.713460648148148,1720.0,1.3685330762701382,753.0,None,False,,
a544018d04a29fa9e4bb0c8bb0dc792eb50e3932,d5d55fc3195f1c0749440c3b698c00f288513a8d,antirez,antirez@gmail.com,Thu Jan 28 10:12:04 2010 -0500,1264691524,loading side of the threaded VM,288.0,62.0,"TODO,CAS_DELIMITER,ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",5.0,1.0,1.0,0.3932644244647203,3.0,1794.8,449.0,5.7481481481481485,1723.0,1.137016481372157,758.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
d5d55fc3195f1c0749440c3b698c00f288513a8d,478c2c6f5bffa318d24e23519d2e4d7ea68f15fd,antirez,antirez@gmail.com,Sun Jan 31 16:03:44 2010 +0100,1264950224,"Fixed VM corruption due to child fclosing the VM file directly or indirectly calling exit(), now replaced with _exit() in all the sensible places. Masked a few signals from IO threads.",19.0,10.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.21639693245126468,3.0,4216.5,430.0,2.994212962962963,1726.5,1.250483185156552,760.0,Corrective,True,,
478c2c6f5bffa318d24e23519d2e4d7ea68f15fd,9651a78787b922916bd390c70e9a71702939fe34,antirez,antirez@gmail.com,Tue Feb 2 12:01:53 2010 +0100,1265108513,"Log time taken to load the DB at startup, in seconds",6.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,3.0,4221.0,432.0,1.8320486111111112,1728.5,1.4093777836741657,762.0,None,False,,
9651a78787b922916bd390c70e9a71702939fe34,3c68de9b0107a0a15eef09edf86464d1434048e7,antirez,antirez@gmail.com,Tue Feb 2 12:05:15 2010 +0100,1265108715,faster Set loading time from .rdb file resizing the hash table to the right size before loading elements,4.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8366.0,313.0,0.0023379629629629627,1730.0,428.7227722772277,763.0,None,False,,
3c68de9b0107a0a15eef09edf86464d1434048e7,ed9e4966344df0f24b0fceb0778a67789ea60ffd,antirez,antirez@gmail.com,Tue Feb 2 12:19:24 2010 +0100,1265109564,"Faster version of the function hashing possibly encoded objects, leading to a general speed gain when working with Sets of integers",18.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8370.0,314.0,0.009826388888888891,1731.0,102.76678445229679,764.0,None,False,True,"[""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c""]"
ed9e4966344df0f24b0fceb0778a67789ea60ffd,4b00bebd3db6642ce0662888ff856de1fa593734,antirez,antirez@gmail.com,Thu Feb 4 15:55:52 2010 +0100,1265295352,APPEND command,50.0,1.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER",3.0,1.0,1.0,0.3767743609006035,3.0,3056.666666666666,370.0,21.72755401234568,1733.0,1.0471811673018705,767.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
4b00bebd3db6642ce0662888ff856de1fa593734,3c290b9b52c0db299c630cc508d2620ab3497759,antirez,antirez@gmail.com,Thu Feb 4 16:38:33 2010 +0100,1265297913,APPEND tests,24.0,1.0,"redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.4021791902022729,3.0,928.0,71.0,16.39017361111111,1735.5,1.0540036224149996,769.0,Preventative,False,True,"[""cc3b01c30a2acb426d93799f2f3287f27b3d7a56""]"
3c290b9b52c0db299c630cc508d2620ab3497759,6766f45ef27af7f028dd71b5b1482365995bf314,antirez,antirez@gmail.com,Sat Feb 6 13:39:07 2010 +0100,1265459947,"multi bulk requests in redis-benchmark, default fsync policy changed to everysec, added a prefix character for DEBUG logs",36.0,21.0,"TODO,CAS_DELIMITER,redis-benchmark.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",4.0,1.0,1.0,1.6079685324777084,3.0,2353.75,468.0,11.378871527777774,1738.5,1.0889273360112952,773.0,Corrective,True,,
6766f45ef27af7f028dd71b5b1482365995bf314,59146ef3c107d59b6522b8a2f5539a55703adee1,antirez,antirez@gmail.com,Sat Feb 6 18:53:39 2010 +0100,1265478819,DEBUG OBJECT provide info about serialized object length even when VM is disabled,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8432.0,317.0,0.2184259259259259,1741.0,5.5782111064010165,774.0,Corrective,True,,
59146ef3c107d59b6522b8a2f5539a55703adee1,0500ef2736d06edd9e1a2b1cfa480dcd463aa386,Sam Hendley,sam.hendley@gmail.com,Sat Feb 6 18:41:25 2010 -0500,1265499685,"Added withscores option to zrangebyscore command. Based on withscores support in zrange function, ugliest part was the argument parsing to handle using it with the limit option.",41.0,4.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9910760598382222,3.0,5090.0,386.0,1.2884143518518518,0.5,0.6940369568537267,1.0,Feature Addition,False,True,"[""f44dd428729064d75804c86223811badcf73716d""]"
0500ef2736d06edd9e1a2b1cfa480dcd463aa386,3a3978b10bd05d16691a0c95fa3a89741a5a68d8,antirez,antirez@gmail.com,Sun Feb 7 10:32:28 2010 +0100,1265535148,WITHSCORES in ZRANGEBYSCORE thanks to Sam Hendley,5.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,8449.0,319.0,0.4104513888888889,1742.0,3.436342103036968,775.0,None,False,,
3a3978b10bd05d16691a0c95fa3a89741a5a68d8,f44dd428729064d75804c86223811badcf73716d,antirez,antirez@gmail.com,Sun Feb 7 21:52:35 2010 +0100,1265575955,"ZRANGEBYSCORE now supports open intervals, prefixing double values with a open paren. Added ZCOUNT that can count the elements inside an interval of scores, this supports open intervals too",75.0,22.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.1655181742341376,3.0,2993.666666666666,491.0,1.6875694444444445,1744.0,1.3867148852309743,778.0,Corrective,True,,
f44dd428729064d75804c86223811badcf73716d,223a0591927744d320460bb9269eb41f1f6f2e36,antirez,antirez@gmail.com,Sun Feb 7 23:54:22 2010 +0100,1265583262,ZCOUNT and ZRANGEBYSCORE new tests,45.0,3.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,1768.0,69.0,0.9673263888888888,1746.0,2.033777235363796,779.0,Feature Addition,False,,
223a0591927744d320460bb9269eb41f1f6f2e36,7c775e09433249e9d64c24ff92d2e5b716f5eb2d,antirez,antirez@gmail.com,Tue Feb 9 14:01:49 2010 +0100,1265720509,VM now is able to block clients on swapped keys for all the commands,103.0,97.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.21389253048102685,3.0,3464.333333333333,514.0,1.6448881172839505,1748.0,1.3663995993354074,782.0,None,False,,
7c775e09433249e9d64c24ff92d2e5b716f5eb2d,ce8330208aacd63743ce706be020b5a7838f0a29,antirez,antirez@gmail.com,Wed Feb 10 15:59:09 2010 +0100,1265813949,Saner VM defaults for redis.conf,9.0,9.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,269.0,31.0,4.09724537037037,1750.0,1.2440664177038547,783.0,None,False,,
ce8330208aacd63743ce706be020b5a7838f0a29,12d090d2d0a9ff8d2c082b97cf405a30c7126752,antirez,antirez@gmail.com,Fri Feb 19 11:23:57 2010 +0100,1266575037,"A problem with replication with multiple slaves connectiong to a single master fixed. It was due to a typo, and reported on github by the user micmac. Also the copyright year fixed from many files.",21.0,21.0,"adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,ae_epoll.c,CAS_DELIMITER,ae_select.c,CAS_DELIMITER,anet.c,CAS_DELIMITER,anet.h,CAS_DELIMITER,dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,pqsort.c,CAS_DELIMITER,pqsort.h,CAS_DELIMITER,redis-benchmark.c,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.h,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER,zmalloc.h,CAS_DELIMITER",20.0,1.0,1.0,4.297079327540665,4.0,629.3,453.0,88.97296874999998,1760.5,1.004361645658604,803.0,Corrective,True,True,"[""4b1f6ad3e7a5c7c28618e43e7539c9a937bf8521""]"
12d090d2d0a9ff8d2c082b97cf405a30c7126752,9ebed7cf066267c0fe91f100f50c028fc4cec23f,antirez,antirez@gmail.com,Mon Feb 22 17:36:54 2010 +0100,1266856614,Fixed 32bit make target to work on Linux out of the box,13.0,9.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.292727214755173,4.0,3469.0,422.0,16.776003086419752,1772.0,1.0254160818859417,806.0,Corrective,True,True,"[""c8c72447f6c9e999a17d37338e9d3460f45722f4""]"
9ebed7cf066267c0fe91f100f50c028fc4cec23f,5921aa36ede343d728cb53cc7dda87defc966c2f,antirez,antirez@gmail.com,Sat Feb 27 12:26:08 2010 +0100,1267269968,Bug #169 fixed (BLOP/BRPOP interrupted connections are not cleared from the queue),29.0,10.0,"Changelog,CAS_DELIMITER,TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",4.0,1.0,1.0,1.4817001108061416,4.0,2340.5,517.0,19.09898148148148,1775.5,1.0188250775362124,810.0,Corrective,True,,
5921aa36ede343d728cb53cc7dda87defc966c2f,eb46f4bd7bf086089b0a48f1e2bed2aadb46d185,antirez,antirez@gmail.com,Sat Feb 27 18:07:46 2010 +0100,1267290466,initial zipmap.c implementation,325.0,0.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1778.0,0.0,811.0,Feature Addition,False,True,"[""8ec0832157587a1d19ee0b6514c6b33d258fd51b"", ""be0af2f0ec5508eb08eac71783f61235ad065df5"", ""ad6de43c800b6511ca96a2ca17848fc6582d85d0"", ""b36d1c309136051587db90391876125fc95ea348"", ""65fd32ab0a7ff1d3d052e3b70dcceac6719de58c"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
eb46f4bd7bf086089b0a48f1e2bed2aadb46d185,8ec0832157587a1d19ee0b6514c6b33d258fd51b,antirez,antirez@gmail.com,Sat Feb 27 18:13:55 2010 +0100,1267290835,first zipmap fix of a long sequence in the days to come ;),4.0,3.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,325.0,1.0,0.004270833333333333,1779.0,235.14634146341461,812.0,Corrective,True,,
8ec0832157587a1d19ee0b6514c6b33d258fd51b,be0af2f0ec5508eb08eac71783f61235ad065df5,antirez,antirez@gmail.com,Sun Feb 28 18:05:25 2010 +0100,1267376725,minor fixes for zipmap.c,8.0,3.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,326.0,2.0,0.9940972222222222,1780.0,2.00593782745372,813.0,Corrective,True,,
be0af2f0ec5508eb08eac71783f61235ad065df5,c8c72447f6c9e999a17d37338e9d3460f45722f4,antirez,antirez@gmail.com,Mon Mar 1 22:15:49 2010 +0100,1267478149,Swappability bug due to a typo fixed thanks to code review by Felix Geisendu00c3u00b6rfer @felixge,2.0,3.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,4.0,5153.5,397.0,4.801597222222221,1781.5,1.259577740706944,815.0,Corrective,True,,
c8c72447f6c9e999a17d37338e9d3460f45722f4,18b6cb7643f23c3c3d8e44dc4584167fb2b32b58,Damian Janowski,damian.janowski@gmail.com,Sat Feb 27 23:36:19 2010 -0300,1267324579,Add DISCARD command to discard queued MULTI commands.,27.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,4.0,5153.0,399.0,-1.7774305555555556,0.5,0.3593475288142215,1.0,Feature Addition,False,,
18b6cb7643f23c3c3d8e44dc4584167fb2b32b58,a3f9eec291993853095941348e80818d91e07c5f,antirez,antirez@gmail.com,Mon Mar 1 23:46:24 2010 +0100,1267483584,KEYS now returns a multi bulk reply,6.0,8.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,4.0,5166.0,401.0,1.840335648148148,1783.5,1.4075343542655891,817.0,None,False,True,"[""758b6d4c272c8132fd9090022b8b84a394062b91""]"
a3f9eec291993853095941348e80818d91e07c5f,ba76a8f901258bc13812072dc4065b88f2e2d4d0,antirez,antirez@gmail.com,Tue Mar 2 00:52:50 2010 +0100,1267487570,Fixed a subtle VM bug... was not flushing the buffer so the child process read truncated data,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8507.0,328.0,0.046134259259259264,1785.0,22.67586552935273,818.0,Corrective,True,,
ba76a8f901258bc13812072dc4065b88f2e2d4d0,ed7451548a0e874ac3b2e029268655afab96b506,antirez,antirez@gmail.com,Tue Mar 2 00:57:09 2010 +0100,1267487829,Better to increment the version minor number when a VM bug is fixed... it will be simpler to understand what's going on when users will report problems with the INFO trace.,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8507.0,329.0,0.0029976851851851853,1786.0,334.59073359073363,819.0,Corrective,True,,
ed7451548a0e874ac3b2e029268655afab96b506,6cf5882c562b25c1e0e78c0cf5c47ab177040fa9,Michel Martens & Damian Janowski,michel+djanowski@soveran.com,Tue Mar 2 12:14:14 2010 -0300,1267542854,Add interactive mode to redis-cli.,68.0,17.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,451.0,51.0,11.201585648148148,0.0,0.0,0.0,Feature Addition,False,True,"[""fdfdae0f3abdbe44905d2de1b89ea839717c2a65"", ""aab055ae1f3a4900db2983490236c9e5fb3af0eb""]"
ed7451548a0e874ac3b2e029268655afab96b506,54bac49d92bcf02e9896e658ff5e72cc0adbd35d,antirez,antirez@gmail.com,Tue Mar 2 17:42:22 2010 +0100,1267548142,minor fix for a Linux warning,2.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8507.0,330.0,0.6980671296296296,1787.0,2.432526984232255,820.0,Corrective,True,,
6cf5882c562b25c1e0e78c0cf5c47ab177040fa9,e3c7f0027fe857a200425218c1faa39b9a6407e0,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Mar 2 15:47:31 2010 -0300,1267555651,Remove trailing newline in interactive mode.,3.0,0.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,502.0,52.0,0.1481134259259259,0.0,0.0,0.0,Feature Addition,False,,
e3c7f0027fe857a200425218c1faa39b9a6407e0,6fa246220b03da9bfdbfcbc0bde71f02902810f6,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Mar 2 16:24:21 2010 -0300,1267557861,Add support for MULTI/EXEC.,10.0,8.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,505.0,53.0,0.025578703703703704,1.0,40.09502262443439,1.0,Feature Addition,False,,
54bac49d92bcf02e9896e658ff5e72cc0adbd35d 6fa246220b03da9bfdbfcbc0bde71f02902810f6,52d23ddbea757a8a544b2e9042e008025e54c93b,antirez,antirez@gmail.com,Wed Mar 3 14:39:03 2010 +0100,1267623543,Merge remote branch 'djanowski/interactive',,,,,,,,,,,,,,,Merge,False,,
52d23ddbea757a8a544b2e9042e008025e54c93b,2f4d2242ea886666e33482069d69afe6df4ed701,antirez,antirez@gmail.com,Wed Mar 3 14:41:47 2010 +0100,1267623707,added quit and exit commands to redis-cli in order to quit the interactive mode,2.0,0.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,507.0,54.0,0.7621064814814815,1788.0,2.31215259848738,821.0,Feature Addition,False,,
2f4d2242ea886666e33482069d69afe6df4ed701,cd5a96eedac0e3029966c038f845ae8bb791d681,antirez,antirez@gmail.com,Wed Mar 3 16:59:44 2010 +0100,1267631984,zipampDel() implemented,29.0,1.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,331.0,3.0,2.9543865740740736,1789.0,1.338479740185459,822.0,None,False,,
cd5a96eedac0e3029966c038f845ae8bb791d681,69d95c3e1cb1e6e306261957fba361cc45290a6d,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 3 18:20:19 2010 +0100,1267636819,initial implementation for augmented zsets and the zrank command,98.0,7.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.512709142030877,4.0,5165.5,406.0,1.3999537037037038,0.5,0.6785773339065445,1.0,Feature Addition,False,True,"[""67cac14343260a225ba8a68f2d3c503c95a2f4ae"", ""94e543b5c201fb0a4582af27bf50c21ef629232b"", ""cc3b01c30a2acb426d93799f2f3287f27b3d7a56""]"
69d95c3e1cb1e6e306261957fba361cc45290a6d,709d0a1bbc9a10968b21b694019a78e39ef5f49f,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 3 18:35:56 2010 +0100,1267637756,x->backward never equals zsl->header,2.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8587.0,332.0,0.010844907407407407,2.0,93.20917822838848,2.0,None,False,,
709d0a1bbc9a10968b21b694019a78e39ef5f49f,912b9165a95bdf382052d409737e4ab5bc3f07fb,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 3 18:40:42 2010 +0100,1267638042,rank is very unlikely to overflow integer range,4.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8585.0,333.0,0.003310185185185185,3.0,303.0979020979021,3.0,None,False,,
912b9165a95bdf382052d409737e4ab5bc3f07fb,2b37892e9b57d6d4c9d3f9a604e50cd8c15636de,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 3 19:04:38 2010 +0100,1267639478,use less memory as element->span[0] will always be 1; any level 0 skip list is essentially a linked list,34.0,15.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8585.0,334.0,0.01662037037037037,4.0,61.167130919220064,4.0,None,False,True,"[""2f4dd7e0fd0581ddf630ea5d928a9dce42f175e7""]"
912b9165a95bdf382052d409737e4ab5bc3f07fb,3589e1a7e5e0de5c5f14017f3ce9907584fbbb6d,antirez,antirez@gmail.com,Wed Mar 3 19:44:03 2010 +0100,1267641843,ZRANK stress tester,26.0,0.0,"redis-cli.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.2351933818192415,4.0,1172.0,131.0,0.13402777777777775,1790.5,5.247287620762872,824.0,Preventative,False,True,"[""67cac14343260a225ba8a68f2d3c503c95a2f4ae""]"
3589e1a7e5e0de5c5f14017f3ce9907584fbbb6d,386b43c6b31ba8c91cd5c46e23fb411542b7d71f,antirez,antirez@gmail.com,Wed Mar 3 20:08:16 2010 +0100,1267643296,fpurge call removed from redis-cli,0.0,3.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,510.0,56.0,0.01681712962962963,1792.0,60.46317962835513,825.0,None,False,,
386b43c6b31ba8c91cd5c46e23fb411542b7d71f,9693e4f0f0e1b49b28e90bedc6b8ea7c8c6bb559,antirez,antirez@gmail.com,Wed Mar 3 20:13:42 2010 +0100,1267643622,TODO updated,2.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,87.0,125.0,4.324699074074074,1793.0,1.2312299614081477,826.0,None,False,,
9693e4f0f0e1b49b28e90bedc6b8ea7c8c6bb559,39191553755d5309e200789cedff50e031909d18,antirez,antirez@gmail.com,Wed Mar 3 23:15:52 2010 +0100,1267654552,initial implementation of SUBSTR,42.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.1623261801753929,4.0,4555.5,392.0,0.15237268518518518,1794.5,6.478667106116641,828.0,Feature Addition,False,True,"[""8fe7fad77180189a2a9064f98250a5b9c5818487"", ""5de9ad7c85fb114be03fe158bd5e102515dc5d5b""]"
39191553755d5309e200789cedff50e031909d18,67cac14343260a225ba8a68f2d3c503c95a2f4ae,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 01:33:37 2010 +0100,1267662817,fix ZRANK (realize that rank is 1-based due to the skip list header),7.0,4.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,4.0,5252.5,413.0,0.16920717592592593,5.5,7.704338964025687,6.0,Corrective,True,,
67cac14343260a225ba8a68f2d3c503c95a2f4ae,8fe7fad77180189a2a9064f98250a5b9c5818487,antirez,antirez@gmail.com,Thu Mar 4 13:10:50 2010 +0100,1267704650,SUBSTR fix for integer encoded vals,6.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8648.0,337.0,0.4841782407407407,1796.0,3.0653551024310954,829.0,Corrective,True,,
8fe7fad77180189a2a9064f98250a5b9c5818487,27b0ccca71251edf3bc18dec41cedb43b487fe9f,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 13:34:50 2010 +0100,1267706090,lookup rank of a zset entry in a different function,41.0,30.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8653.0,338.0,0.016666666666666666,7.0,61.0,7.0,None,False,,
27b0ccca71251edf3bc18dec41cedb43b487fe9f,e74825c24f134cf75e2285ecaf8d379bc8e7d28e,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 14:16:07 2010 +0100,1267708567,use rank to find starting point for ZRANGE and ZREVRANGE,22.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8664.0,339.0,0.028668981481481483,8.0,35.880904319741624,8.0,None,False,,
e74825c24f134cf75e2285ecaf8d379bc8e7d28e,edb519581a9627ed18f309667c5d53b610a666fb,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 14:23:59 2010 +0100,1267709039,first check if starting point is trivial (head or tail) before applying log(N) search,5.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8680.0,340.0,0.005462962962962963,9.0,184.05084745762719,9.0,None,False,,
8fe7fad77180189a2a9064f98250a5b9c5818487,520b5a33ae69405e0a2ea2e0bbffc5c0d781ede1,antirez,antirez@gmail.com,Thu Mar 4 16:16:01 2010 +0100,1267715761,"Now list push commands return the length of the new list, thanks to Gustavo Picon",13.0,8.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,4.0,5271.0,419.0,0.34528935185185183,1797.5,8.150689168614342,831.0,Feature Addition,False,,
edb519581a9627ed18f309667c5d53b610a666fb 2b37892e9b57d6d4c9d3f9a604e50cd8c15636de,a50ea45c841e980f7692a9cd97130f0f37e5917b,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 16:35:57 2010 +0100,1267716957,merged memory reduction patch,,,,,,,,,,,,,,,Merge,False,,
520b5a33ae69405e0a2ea2e0bbffc5c0d781ede1,d239ec5960350367a990ff04452924d06e8ee94b,antirez,antirez@gmail.com,Thu Mar 4 16:36:30 2010 +0100,1267716990,redis-cli now runs in interactive mode if no command is provided,2.0,4.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,508.0,58.0,0.722662037037037,1799.0,2.383772702520901,832.0,None,False,,
d239ec5960350367a990ff04452924d06e8ee94b a50ea45c841e980f7692a9cd97130f0f37e5917b,947efa8d6e37f38bdd8485b64f7c139d1e310e70,antirez,antirez@gmail.com,Thu Mar 4 16:43:50 2010 +0100,1267717430,Merge branch 'zsl-get-rank' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
947efa8d6e37f38bdd8485b64f7c139d1e310e70,ddfaca9d81cdebf4ced1cd65c42983edc052ab57,antirez,antirez@gmail.com,Thu Mar 4 16:48:26 2010 +0100,1267717706,A fix for an invalid access when VM is disabled,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8682.0,342.0,0.02251157407407408,1800.0,45.4215938303342,833.0,Corrective,True,,
ddfaca9d81cdebf4ced1cd65c42983edc052ab57,94e543b5c201fb0a4582af27bf50c21ef629232b,antirez,antirez@gmail.com,Thu Mar 4 17:00:06 2010 +0100,1267718406,A fix for initialization of augmented skip lists,4.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8682.0,343.0,0.008101851851851851,1801.0,124.42857142857143,834.0,Corrective,True,,
94e543b5c201fb0a4582af27bf50c21ef629232b,9212eafd5df14d59d7bfa1bd0f90a9f8f7c75689,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 12:01:45 2010 +0100,1267700505,implemented ZREMBYRANK,108.0,2.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5499109046334102,4.0,5275.0,423.0,-0.19188078703703704,10.5,-2.7161653017767162,11.0,None,False,,
9212eafd5df14d59d7bfa1bd0f90a9f8f7c75689,2424490f9b6c139164cdcdf0f82ced3f8bd73810,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 17:48:31 2010 +0100,1267721311,use 1-based rank across zsl*Rank functions consistently,6.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8781.0,345.0,0.2408101851851852,12.0,5.152648274536191,12.0,None,False,,
2424490f9b6c139164cdcdf0f82ced3f8bd73810,f84d393374c03d6c80712ee5a4dbff8901756ca1,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 17:50:25 2010 +0100,1267721425,rename zslDeleteRange to zslDeleteRangeByScore (to differentiate between deleting using score or rank),2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8779.0,346.0,0.0013194444444444445,13.0,758.8947368421052,13.0,None,False,,
f84d393374c03d6c80712ee5a4dbff8901756ca1,841053366f12c27dcd225f83c8ae7312326be32e,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 4 17:55:16 2010 +0100,1267721716,moved code to delete a single node from a zset to a separate function,30.0,66.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8779.0,347.0,0.003368055555555556,14.0,297.9072164948454,14.0,None,False,,
94e543b5c201fb0a4582af27bf50c21ef629232b,66ef8da009f715a74f66d4759d8362161a49b919,antirez,antirez@gmail.com,Thu Mar 4 19:45:15 2010 +0100,1267728315,zipmap iteration code,41.0,0.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,359.0,4.0,1.1149421296296296,1802.0,1.8969075375528128,835.0,None,False,,
66ef8da009f715a74f66d4759d8362161a49b919,b1ad58ed2fada4d7563e91a6834adcee8bffcd82,antirez,antirez@gmail.com,Thu Mar 4 23:05:12 2010 +0100,1267740312,redis-benchmark now implements Set commands benchmarks,19.0,1.0,"redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,647.0,3.0,13.486979166666664,1803.0,1.074145587951342,836.0,None,False,,
b1ad58ed2fada4d7563e91a6834adcee8bffcd82,5234952bee02ac704b6998303d45912e1bebf460,antirez,antirez@gmail.com,Fri Mar 5 14:04:17 2010 +0100,1267794257,"zipmaps functions to get, iterate, test for existence. Initial works for Hash data type",136.0,24.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,zipmap.c,CAS_DELIMITER,zipmap.h,CAS_DELIMITER",4.0,1.0,1.0,1.6373346627229384,4.0,2310.0,382.0,3.1137905092592595,1805.5,1.0845627274105405,840.0,Feature Addition,False,True,"[""ba798261ce70a866d347978e942e35292da1f6a2"", ""b91cbf66bb527fbc7eef8079e9153fa5357186e2"", ""43fe2d0d979b23b18d3ebe0f52299c42b9708ec1""]"
5234952bee02ac704b6998303d45912e1bebf460,978c2c944cb540827ba53ceb2301e4bd460d9591,antirez,antirez@gmail.com,Sat Mar 6 01:56:16 2010 +0100,1267836976,first implementation of HSET/HSET. More work needed,79.0,1.0,"TODO,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,zipmap.c,CAS_DELIMITER",4.0,1.0,1.0,0.4781837316805838,4.0,2450.5,540.0,1.1538715277777778,1809.5,1.2954764787482125,844.0,None,False,True,"[""cbba7dd7c90f7b5b845d1dea86390572e5b4fa2c"", ""b1befe6a8e4fbec81e721d1a5a0871f88411a1c9"", ""2069d06a0bb88acf17153e2ece1ffb857d11645d""]"
978c2c944cb540827ba53ceb2301e4bd460d9591,18e61fa2ff09418025834c58618e598030f7832c,antirez,antirez@gmail.com,Sat Mar 6 12:08:22 2010 +0100,1267873702,Fix for replicaiton with over 2GB dump file initial SYNC stage,3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,8842.0,350.0,0.4250694444444445,1812.0,3.3525567717693185,845.0,Corrective,True,,
18e61fa2ff09418025834c58618e598030f7832c,798d9e55317d67fa694e5408dc30a61e021e8b49,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 7 20:35:53 2010 +0100,1267990553,added ZREVRANK,20.0,2.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,4.0,5358.5,431.0,2.354739583333333,15.5,1.475870438493017,16.0,Feature Addition,False,True,"[""653c9240b7dcb823e7bc72e6d88ffa07af481841""]"
18e61fa2ff09418025834c58618e598030f7832c,cbba7dd7c90f7b5b845d1dea86390572e5b4fa2c,antirez,antirez@gmail.com,Sun Mar 7 23:41:48 2010 +0100,1268001708,"HSET fixes, now the new pointer is stored back in the object pointer field",42.0,2.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,zipmap.c,CAS_DELIMITER",3.0,1.0,1.0,1.2205751009767971,4.0,3190.0,392.0,3.5016473765432106,1814.0,3.6523002342789694,848.0,Corrective,True,True,"[""b36d1c309136051587db90391876125fc95ea348""]"
cbba7dd7c90f7b5b845d1dea86390572e5b4fa2c,b287c9bb2b8e7dd0c62c2a8b9081fb41b0c035bc,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Mar 8 21:27:26 2010 +0100,1268080046,use ZMERGE as starting point,120.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.6626163186585247,4.0,3756.333333333334,494.0,1.5852662037037035,18.0,1.278179997644066,19.0,Non Functional,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
cbba7dd7c90f7b5b845d1dea86390572e5b4fa2c,b1befe6a8e4fbec81e721d1a5a0871f88411a1c9,antirez,antirez@gmail.com,Mon Mar 8 21:33:07 2010 +0100,1268080387,Hashes saving / fixes,65.0,19.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,zipmap.c,CAS_DELIMITER,zipmap.h,CAS_DELIMITER",4.0,1.0,1.0,1.1457811577118444,4.0,2434.75,375.0,10.862306134259258,1817.5,64.36146410874709,852.0,Corrective,True,,
b287c9bb2b8e7dd0c62c2a8b9081fb41b0c035bc,2830ca539bf30b64ef646d08d0856f0a1cfc5cb4,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 9 12:38:50 2010 +0100,1268134730,replaced ZMERGE by ZUNION and ZINTER. note: key preloading by the VM does not yet work,137.0,65.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.3993820824245975,4.0,5452.5,437.0,0.6309432870370371,20.5,2.191182717599676,21.0,Non Functional,False,,
b1befe6a8e4fbec81e721d1a5a0871f88411a1c9,ada386b2189aabee1cf862546d14cc35a827b4e1,antirez,antirez@gmail.com,Tue Mar 9 13:18:49 2010 +0100,1268137129,"Hash auto conversion from zipmap to hash table, type fixed for hashes, hash loading from disk",66.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.11058084476988707,4.0,4582.0,483.0,1.7508796296296296,1820.5,1.2867119698671543,854.0,Corrective,True,True,"[""bb039e853df6c2754885c5cfb82dc3f7ea7d25b5""]"
2830ca539bf30b64ef646d08d0856f0a1cfc5cb4,8f92e768311758bb5db1f6592a209d5eefbc40bb,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 9 16:12:34 2010 +0100,1268147554,"use a struct to store both a dict and its weight for ZUNION and ZINTER, so qsort can be applied",42.0,39.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9138.0,357.0,0.12065972222222222,22.0,9.287769784172662,22.0,None,False,True,"[""b9eed483aecbf19643e7c8ebb5eb204305bf0828""]"
ada386b2189aabee1cf862546d14cc35a827b4e1 798d9e55317d67fa694e5408dc30a61e021e8b49,e3f46030fcfd0ffd916d473b16d0ed07e138fefb,antirez,antirez@gmail.com,Tue Mar 9 16:19:33 2010 +0100,1268147973,Merged ZREVRANK from Pietern,,,,,,,,,,,,,,,Merge,False,,
e3f46030fcfd0ffd916d473b16d0ed07e138fefb 841053366f12c27dcd225f83c8ae7312326be32e,ee5cfe385305071ed0ab293be3ad18b13f2f9c86,antirez,antirez@gmail.com,Tue Mar 9 16:22:50 2010 +0100,1268148170,Merged ZREMBYRANK from Pietern,,,,,,,,,,,,,,,Merge,False,,
ee5cfe385305071ed0ab293be3ad18b13f2f9c86 8f92e768311758bb5db1f6592a209d5eefbc40bb,c1d57a106345a811c91a0bf1b6fff42ccbae61a3,antirez,antirez@gmail.com,Tue Mar 9 16:25:55 2010 +0100,1268148355,Merged zsetops branch from Pietern,,,,,,,,,,,,,,,Merge,False,,
c1d57a106345a811c91a0bf1b6fff42ccbae61a3,b9eed483aecbf19643e7c8ebb5eb204305bf0828,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 9 17:32:24 2010 +0100,1268152344,fix: use zmalloc instead of malloc,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9141.0,358.0,0.05543981481481482,23.0,19.037578288100207,23.0,Corrective,True,,
b9eed483aecbf19643e7c8ebb5eb204305bf0828,bcd1190644d09b313544aa1b21e46357031ea95e,antirez,antirez@gmail.com,Thu Mar 11 16:10:36 2010 +0100,1268320236,"Fix for HGET against non Hash type, debug messages used to understand a bit better a corrupted rdb file",11.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9141.0,359.0,1.9431944444444444,1822.0,1.5146165392037738,855.0,Corrective,True,True,"[""5de9ad7c85fb114be03fe158bd5e102515dc5d5b""]"
bcd1190644d09b313544aa1b21e46357031ea95e,8c5abee892f28d9c19921971b86991b5091e8530,antirez,antirez@gmail.com,Fri Mar 12 11:38:53 2010 +0100,1268390333,"Applied the replication bug patch provided by Jeremy Zawodny, removing temp file collision after the slave got the dump.rdb file in the SYNC stage",63.0,3.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6136190195993708,4.0,4839.0,398.0,6.889247685185183,1823.5,1.074847295071672,857.0,Corrective,True,,
8c5abee892f28d9c19921971b86991b5091e8530,5de9ad7c85fb114be03fe158bd5e102515dc5d5b,antirez,antirez@gmail.com,Fri Mar 12 23:46:27 2010 +0100,1268433987,A minor fix and a few debug messages removed,3.0,6.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,4.0,4869.0,400.0,0.5052546296296296,1825.5,2.4844000549777796,859.0,Corrective,True,,
5de9ad7c85fb114be03fe158bd5e102515dc5d5b,08af4d5c960bef772992350f64212e3942ce2d57,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 13 15:55:42 2010 +0100,1268492142,utility to check rdb files for unprocessable opcodes,678.0,1.0,".gitignore,CAS_DELIMITER,Makefile,CAS_DELIMITER,redis-check-dump.c,CAS_DELIMITER",3.0,1.0,1.0,0.09879227961332322,5.0,36.66666666666666,36.0,46.04409336419753,25.0,1.007389311660808,26.0,None,False,True,"[""7b30cc3a7bed6ea1d5b4131f977d554d78791bf7"", ""f85202c3dc6213bffdc3ccf998e4ea85a36ad9a8"", ""e5f794ff3abd844a08c0b01faa15550fd7014d7c"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""145473acc5798a499a0f37e42df48a014a3955c1"", ""6eb996540c662832370ddaac25484c4cbbca4e7a""]"
08af4d5c960bef772992350f64212e3942ce2d57,9c8e3cee262fc5b5b700027dd7b73bee00ca17d7,antirez,antirez@gmail.com,Sun Mar 14 13:40:41 2010 +0100,1268570441,Append only file support for hashes,64.0,11.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.6014353864290772,4.0,4711.0,375.0,3.625625,1827.5,1.3855438349080522,861.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
9c8e3cee262fc5b5b700027dd7b73bee00ca17d7,07efaf746766a7e4425f866062bb1a2e3d2a04b2,antirez,antirez@gmail.com,Sun Mar 14 13:54:31 2010 +0100,1268571271,HDEL and some improvement in DEBUG OBJECT command,43.0,2.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.1537421803287619,4.0,4853.0,424.0,2.8475405092592587,1829.5,1.1757384703491174,863.0,Corrective,True,,
07efaf746766a7e4425f866062bb1a2e3d2a04b2,55a8298fcf59f235a1398bfb2207f510119de5e6,antirez,antirez@gmail.com,Sun Mar 14 13:58:28 2010 +0100,1268571508,max zipmap entries and max zipmap value parameters added into INFO output,7.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9236.0,364.0,0.0027430555555555554,1831.0,365.55696202531647,864.0,Feature Addition,False,True,"[""aa42c9a7916e29964a565b66a2446a42f8bf483b"", ""3be2c9d732618512336f66f3de918941fc8f32d6""]"
55a8298fcf59f235a1398bfb2207f510119de5e6,bae2c7ec6b2a65218b6c5b3d6f434325ef58edc6,antirez,antirez@gmail.com,Mon Mar 15 18:28:12 2010 +0100,1268674092,zipmap to hash conversion in HSET,28.0,0.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.676941869780886,4.0,4913.0,405.0,1.983153935185185,1832.5,1.3059831072569992,866.0,None,False,,
bae2c7ec6b2a65218b6c5b3d6f434325ef58edc6,cc3b01c30a2acb426d93799f2f3287f27b3d7a56,antirez,antirez@gmail.com,Mon Mar 15 19:33:01 2010 +0100,1268677981,Fixed a ZRANK bug,2.0,2.0,"redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,4.0,4698.5,371.0,19.583084490740735,1834.5,12.12102016954834,868.0,Corrective,True,True,"[""653c9240b7dcb823e7bc72e6d88ffa07af481841""]"
cc3b01c30a2acb426d93799f2f3287f27b3d7a56,653c9240b7dcb823e7bc72e6d88ffa07af481841,antirez,antirez@gmail.com,Mon Mar 15 19:33:26 2010 +0100,1268678006,Fixed the same problem in ZREVRANK,2.0,2.0,"redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,4.0,4698.5,373.0,0.00028935185185185184,1836.5,2593.0,870.0,Corrective,True,,
653c9240b7dcb823e7bc72e6d88ffa07af481841,92b27fe946004935f0f29277d2a762c63af55ce3,antirez,antirez@gmail.com,Mon Mar 15 22:46:20 2010 +0100,1268689580,An interesting refactoring + more expressive internal API,49.0,3.0,"Changelog,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,0.835634358098697,4.0,2624.0,478.0,0.4541232638888889,1839.5,2.8422798715642177,874.0,None,False,,
92b27fe946004935f0f29277d2a762c63af55ce3,dd88747b786a4e5f9f4135e355d0d483e991d54e,antirez,antirez@gmail.com,Mon Mar 15 23:59:40 2010 +0100,1268693980,pretty big refactoring,451.0,629.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9308.0,369.0,0.050925925925925916,1842.0,20.63636363636364,875.0,None,False,True,"[""164ee595644b711b2fbd2248898667d8ce287c58"", ""2a1198b4c4fd07b5e560425432fa1b2bcdaca1a1"", ""092418136490fc94f2520ede706846dac8e43b5e"", ""184d74abc628a1fccf66d34505a8c5505f82d21b"", ""4774a53b247bb1f75fb175039c6af70a61462a94"", ""f483ce5ffef0beb6e5ab50987691d00166e8216b""]"
dd88747b786a4e5f9f4135e355d0d483e991d54e,6d4fb107b24cb4ce5c25be5c1cb3fa223a70940a,antirez,antirez@gmail.com,Tue Mar 16 01:11:23 2010 +0100,1268698283,Solved a memory leak with Hashes,0.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9130.0,370.0,0.04980324074074074,1843.0,21.079014640948177,876.0,None,False,,
6d4fb107b24cb4ce5c25be5c1cb3fa223a70940a,78409a0f84f63630ad49ba4dba4467b523bc6c55,antirez,antirez@gmail.com,Tue Mar 16 16:09:58 2010 +0100,1268752198,HKEYS / HVALS / HGETALL,83.0,6.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.2126586398816349,4.0,4820.0,434.0,0.6743807870370371,1844.5,2.0606079161054907,878.0,None,False,,
78409a0f84f63630ad49ba4dba4467b523bc6c55,23d8214891b28fad20fb7aba0b5d0492a8ca1e2e,antirez,antirez@gmail.com,Tue Mar 16 16:20:35 2010 +0100,1268752835,zrevrank support in redis-cli,1.0,0.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,515.0,64.0,0.007372685185185184,1846.0,136.63579277864991,879.0,None,False,,
23d8214891b28fad20fb7aba0b5d0492a8ca1e2e,164ee595644b711b2fbd2248898667d8ce287c58,antirez,antirez@gmail.com,Tue Mar 16 18:44:37 2010 +0100,1268761477,HGET fix for integer encoded field against zipmap encoded hash,65.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,4.0,5552.0,455.0,3.68070601851852,1847.5,5.723595854439309,881.0,Corrective,True,,
164ee595644b711b2fbd2248898667d8ce287c58,d2764cd6926fb4368ccf55f381aad7386afd5154,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 13 23:27:22 2010 +0100,1268519242,added explicit AGGREGATE [SUM|MIN|MAX] option to ZUNION/ZINTER,68.0,22.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.6751914401458716,4.0,5584.0,457.0,-2.8036458333333334,27.5,0.7324911759242059,28.0,Feature Addition,False,,
164ee595644b711b2fbd2248898667d8ce287c58,76583ea4555ea199422f56bcafc6be76d9caac7f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 13 18:03:31 2010 +0100,1268499811,added preloading keys from VM when using ZINTER or ZUNION,119.0,100.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9236.0,374.0,-0.22489583333333327,29.0,-3.4465030106530805,29.0,Feature Addition,False,,
164ee595644b711b2fbd2248898667d8ce287c58,b1d9c91ca889dd2ffb72fe9829e176a8eb89d37c,antirez,antirez@gmail.com,Wed Mar 17 01:40:05 2010 +0100,1268786405,More Hash tests,37.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,1978.0,85.0,3.092164351851852,1849.0,1.3233980753322878,882.0,Preventative,False,,
b1d9c91ca889dd2ffb72fe9829e176a8eb89d37c,2069d06a0bb88acf17153e2ece1ffb857d11645d,antirez,antirez@gmail.com,Wed Mar 17 02:00:03 2010 +0100,1268787603,"Fixed a bug in HSET, a memory leak, and a theoretical bug in dict.c",9.0,3.0,"dict.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,4.0,4919.5,382.0,14.469664351851847,1850.5,1.036802367151167,884.0,Corrective,True,,
2069d06a0bb88acf17153e2ece1ffb857d11645d,516977de15d8fba091a1d1594be47fd2d5bf6c83,antirez,antirez@gmail.com,Wed Mar 17 02:06:56 2010 +0100,1268788016,better HSET test,6.0,4.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,2015.0,86.0,0.01864583333333333,1852.0,54.63128491620112,885.0,Perfective,False,,
516977de15d8fba091a1d1594be47fd2d5bf6c83,11d9d1e3b1c605f57a53e6c4ebebe68b72b93c76,antirez,antirez@gmail.com,Wed Mar 17 12:36:27 2010 +0100,1268825787,More hash tests,46.0,5.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,2017.0,87.0,0.4371643518518519,1853.0,3.2874692224193165,886.0,Preventative,False,,
11d9d1e3b1c605f57a53e6c4ebebe68b72b93c76,a86f14b1907e72f97332c8f5f88bb97b937e64a9,antirez,antirez@gmail.com,Wed Mar 17 13:34:27 2010 +0100,1268829267,HEXISTS and tests implemented,36.0,1.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.3411548353945062,4.0,2990.0,537.0,0.7559693287037037,1855.5,1.6319729084545207,890.0,Preventative,False,,
a86f14b1907e72f97332c8f5f88bb97b937e64a9,fdfdae0f3abdbe44905d2de1b89ea839717c2a65,root,root@domU-12-31-39-00-C4-C4.compute-1.internal,Wed Mar 17 09:41:02 2010 -0400,1268833262,Added Authentication to redis-cli.c using -a switch Update usage fixed Makefile to delete redis-check-dump during make clean,41.0,3.0,"Makefile,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,5.0,310.0,97.0,1.9971932870370368,2.5,1.2518173171142153,3.0,Corrective,True,True,"[""288799e04addb974b85cd6c266918adc8a33964b""]"
fdfdae0f3abdbe44905d2de1b89ea839717c2a65 d2764cd6926fb4368ccf55f381aad7386afd5154,17d68f9c99cd629591527d4c385ed0b1244726c5,antirez,antirez@gmail.com,Wed Mar 17 16:59:29 2010 +0100,1268841569,Merge branch 'aggregates' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
17d68f9c99cd629591527d4c385ed0b1244726c5 76583ea4555ea199422f56bcafc6be76d9caac7f,4583c4f0ea0ef3cdb3cd1b0ede77e5b95be18327,antirez,antirez@gmail.com,Wed Mar 17 17:14:07 2010 +0100,1268842447,Merged Pietern patch for VM key args helper function. Fixed an obvious bug in the redis-cli passwd auth stuff,,,,,,,,,,,,,,,Merge,False,True,"[""288799e04addb974b85cd6c266918adc8a33964b""]"
4583c4f0ea0ef3cdb3cd1b0ede77e5b95be18327,a4c507866cb091074458a0a48120a95339b350c4,antirez,antirez@gmail.com,Wed Mar 17 18:30:15 2010 +0100,1268847015,Version is now 1.3.5,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,9277.0,377.0,0.20541666666666664,1858.0,5.8681541582150105,891.0,None,False,,
a4c507866cb091074458a0a48120a95339b350c4,2a1198b4c4fd07b5e560425432fa1b2bcdaca1a1,antirez,antirez@gmail.com,Wed Mar 17 19:26:53 2010 +0100,1268850413,"HDEL fix, an optimization for comparison of objects in hash table lookups when they are integer encoding",16.0,2.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9640787648082292,4.0,5673.5,467.0,0.14203703703703704,1859.5,15.473465102948046,893.0,Corrective,True,True,"[""db5946fc27be8721eac4c306639f94797c653074"", ""ad6de43c800b6511ca96a2ca17848fc6582d85d0""]"
2a1198b4c4fd07b5e560425432fa1b2bcdaca1a1,288799e04addb974b85cd6c266918adc8a33964b,antirez,antirez@gmail.com,Thu Mar 18 02:51:09 2010 +0100,1268877069,Fixed redis-cli auth code,12.0,30.0,"redis-cli.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.1623261801753929,5.0,1316.0,157.0,0.4077719907407407,1861.5,2.5992314867740856,895.0,Corrective,True,True,"[""aab055ae1f3a4900db2983490236c9e5fb3af0eb""]"
288799e04addb974b85cd6c266918adc8a33964b,bf0da6174c71ac6032c5a97aba059c902f799297,antirez,antirez@gmail.com,Thu Mar 18 02:59:28 2010 +0100,1268877568,reverted an optimization that makes Redis not stable,2.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,5.0,5681.0,470.0,0.1600347222222222,1863.5,4.153028232970174,897.0,None,False,True,"[""db5946fc27be8721eac4c306639f94797c653074""]"
bf0da6174c71ac6032c5a97aba059c902f799297,db5946fc27be8721eac4c306639f94797c653074,antirez,antirez@gmail.com,Thu Mar 18 03:06:08 2010 +0100,1268877968,Optimization fixed and re-activated,21.0,3.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,5.0,4938.5,422.0,1.092523148148148,1865.5,1.4581420725237677,899.0,Corrective,True,,
db5946fc27be8721eac4c306639f94797c653074,ad6de43c800b6511ca96a2ca17848fc6582d85d0,antirez,antirez@gmail.com,Thu Mar 18 03:23:44 2010 +0100,1268879024,zipmap fix for large values,17.0,2.0,"staticsymbols.h,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER,zipmap.c,CAS_DELIMITER,zipmap.h,CAS_DELIMITER",4.0,1.0,1.0,1.3605273114437082,5.0,715.0,117.0,5.518845486111113,1868.5,1.1704735603374914,903.0,Corrective,True,,
ad6de43c800b6511ca96a2ca17848fc6582d85d0,12f72a714c6266269b7c9066b7e1349c7682a8e7,antirez,antirez@gmail.com,Thu Mar 18 03:27:08 2010 +0100,1268879228,test-redis.tcl dataset digest function Hash support,7.0,2.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,2078.0,93.0,0.002361111111111111,1871.0,424.5294117647058,904.0,Preventative,False,True,"[""758b6d4c272c8132fd9090022b8b84a394062b91""]"
12f72a714c6266269b7c9066b7e1349c7682a8e7,7b7f987e9184645f64f766b7f8f7eb02a9a69552,antirez,antirez@gmail.com,Thu Mar 18 16:55:49 2010 +0100,1268927749,Redis 1.3.6,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9284.0,381.0,0.5761689814814814,1872.0,2.7356019364817903,905.0,None,False,,
7b7f987e9184645f64f766b7f8f7eb02a9a69552,c77169b7e992697d364e886555b613ba8ca27f83,antirez,antirez@gmail.com,Thu Mar 18 18:56:07 2010 +0100,1268934967,increment server.dirty on HDEL,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9284.0,382.0,0.08354166666666668,1873.0,12.970074812967582,906.0,None,False,,
c77169b7e992697d364e886555b613ba8ca27f83,6bccf64a5e0cf2050da4809a5304bdf797c9d5cf,Antonio Ognio,gnrfan@gnrfan-laptop.(none),Fri Mar 19 01:01:08 2010 -0500,1268978468,Fixing issue 193,4.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9285.0,383.0,0.5034837962962962,0.0,0.0,0.0,Corrective,True,True,"[""9a22de8270fbb594cbdd23fe06a9e193ee01f17a""]"
c77169b7e992697d364e886555b613ba8ca27f83,723fb69b9e354abcf1c13a7a65b2e781b035d8b3,Antonio Ognio,gnrfan@gnrfan-laptop.(none),Fri Mar 19 01:49:09 2010 -0500,1268981349,Solves issue #194 on Google Code: --help parameter to redis-srver prints the usage message,16.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9288.0,384.0,0.033344907407407406,1.0,30.98958694897605,1.0,None,False,,
c77169b7e992697d364e886555b613ba8ca27f83,42ab0172abc4363af13737e9ec4ec818c3f91fb8,Antonio Ognio,gnrfan@gnrfan-laptop.(none),Fri Mar 19 04:19:42 2010 -0500,1268990382,Solving issue #191 on Google Code: -v and --version should print the version of Redis,10.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9300.0,385.0,0.1045486111111111,2.0,10.564928595151112,2.0,None,False,,
c77169b7e992697d364e886555b613ba8ca27f83,a97b9060923da11136798b6c0c71b2da07c0efa7,antirez,antirez@gmail.com,Fri Mar 19 18:02:37 2010 +0100,1269018157,VM hash type swappability implemented. Handling of failed pthread_create() call.,39.0,4.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.4464813468968031,5.0,4700.0,514.0,5.25927662037037,1874.5,1.0965686832488653,908.0,Corrective,True,,
a97b9060923da11136798b6c0c71b2da07c0efa7,aa42c9a7916e29964a565b66a2446a42f8bf483b,antirez,antirez@gmail.com,Fri Mar 19 19:02:24 2010 +0100,1269021744,Removed a stupid overriding of config values due to a wrong cut&paste,0.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9347.0,387.0,0.0415162037037037,1876.0,25.086980763869533,909.0,Corrective,True,,
aa42c9a7916e29964a565b66a2446a42f8bf483b,b3f83f127273da21506f697e256ae010587b10f1,Jeremy Zawodny,Jeremy@Zawodny.com,Fri Mar 19 22:24:17 2010 -0700,1269062657,support for include directive in config parser,12.0,0.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,5.0,4812.0,422.0,6.376516203703704,0.5,0.5392063615951906,1.0,None,False,,
b3f83f127273da21506f697e256ae010587b10f1,a9c723ea1e2213f98eb46a4322d4e31af3d051c2,antirez,antirez@gmail.com,Mon Mar 22 17:08:29 2010 +0100,1269274109,Redis master version is now 1.3.7,9.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,5.0,4978.5,432.0,3.5161631944444447,1877.5,1.1801523065732054,911.0,None,False,,
a9c723ea1e2213f98eb46a4322d4e31af3d051c2 42ab0172abc4363af13737e9ec4ec818c3f91fb8,5e2022bb484791b1b3099b7ce304f02b1f4a3212,antirez,antirez@gmail.com,Mon Mar 22 17:29:09 2010 +0100,1269275349,Merge branch 'issue_191' of git://github.com/gnrfan/redis,,,,,,,,,,,,,,,Merge,False,,
5e2022bb484791b1b3099b7ce304f02b1f4a3212 6bccf64a5e0cf2050da4809a5304bdf797c9d5cf,7bf90179a32eeb7754c1a3244f6612ce780e7de4,antirez,antirez@gmail.com,Mon Mar 22 17:29:20 2010 +0100,1269275360,Merge branch 'issue_193' of git://github.com/gnrfan/redis,,,,,,,,,,,,,,,Merge,False,,
7bf90179a32eeb7754c1a3244f6612ce780e7de4 723fb69b9e354abcf1c13a7a65b2e781b035d8b3,44efe66ef2ff2d6ae7df7363fb1e62df3b16f4ab,antirez,antirez@gmail.com,Mon Mar 22 17:31:46 2010 +0100,1269275506,"Merged gnrfan patches fixing issues 191, 193, 194",,,,,,,,,,,,,,,Merge,False,,
44efe66ef2ff2d6ae7df7363fb1e62df3b16f4ab,3ea27d37d1e6884a9fd0640f25b937fb9fe06aed,antirez,antirez@gmail.com,Tue Mar 23 12:15:44 2010 +0100,1269342944,Empty value trigger key removal in all the operations,39.0,10.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.14372616993938178,5.0,4717.0,519.0,2.2779050925925928,1879.5,1.2427602129571091,913.0,None,False,True,"[""8bca8773b4e2542f9537b8403764867aa76273a5"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
3ea27d37d1e6884a9fd0640f25b937fb9fe06aed,d36c4e97e5018d98b4b346db7841090d9b6f4cfc,antirez,antirez@gmail.com,Tue Mar 23 12:29:35 2010 +0100,1269343775,key deletion on empty value fix + some refactoring,9.0,16.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9374.0,391.0,0.009618055555555557,1881.0,104.971119133574,914.0,Corrective,True,,
d36c4e97e5018d98b4b346db7841090d9b6f4cfc,aab055ae1f3a4900db2983490236c9e5fb3af0eb,Michel Martens & Damian Janowski,michel+djanowski@soveran.com,Tue Mar 23 10:54:49 2010 -0300,1269352489,Fix authentication for redis-cli on non-interactive mode.,12.0,13.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,536.0,68.0,5.5025462962962965,1.0,1.1817340456859198,1.0,Corrective,True,,
aab055ae1f3a4900db2983490236c9e5fb3af0eb,cf87ebf22d0a75aada2486dea17117c1e8b7072b,Michel Martens,michel@soveran.com,Tue Mar 23 11:25:32 2010 -0300,1269354332,Use linenoise for line editing on redis-cli.,461.0,29.0,"Makefile,CAS_DELIMITER,linenoise.c,CAS_DELIMITER,linenoise.h,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER",4.0,1.0,1.0,0.9557804121170754,6.0,159.5,101.0,1.513058449074074,1.5,0.8742133899163597,3.0,None,False,,
cf87ebf22d0a75aada2486dea17117c1e8b7072b,1763929f2379b8f4a5cb380987ff1cdb1f762f51,antirez,antirez@gmail.com,Tue Mar 23 19:15:02 2010 +0100,1269368102,the Cron timer function is now called 10 times per second instead of 1 time per second to make Redis more responsibe to BGSAVE and to delete expired keys more incrementally,8.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9367.0,392.0,0.2815625,1882.0,4.551609322974473,915.0,None,False,,
1763929f2379b8f4a5cb380987ff1cdb1f762f51,2a6a2ed102a7dc668bcddf5d0dbd58fea2af7980,antirez,antirez@gmail.com,Tue Mar 23 19:40:13 2010 +0100,1269369613,New INFO field: expired_keys,7.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9367.0,393.0,0.017488425925925925,1883.0,58.18067504963601,916.0,Feature Addition,False,,
2a6a2ed102a7dc668bcddf5d0dbd58fea2af7980,e940927314582b6e6260ed87e73841d69dd88f29,antirez,antirez@gmail.com,Tue Mar 23 20:04:55 2010 +0100,1269371095,with --help states that you can use - as config file name to feed config via stdin,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,9374.0,394.0,0.017152777777777774,1884.0,59.29959514170041,917.0,None,False,,
e940927314582b6e6260ed87e73841d69dd88f29,bc86d88e058d46bc65eeb1505f12f652792fe5d0,antirez,antirez@gmail.com,Wed Mar 24 11:58:38 2010 +0100,1269428318,redis-cli prompt is now redis>,1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,527.0,70.0,0.8563194444444444,1885.0,2.167788500527127,918.0,None,False,True,"[""d8d528e9926d712cf02617dcdb6e9bde90e4e49c""]"
bc86d88e058d46bc65eeb1505f12f652792fe5d0,500ece7c1721fa2d5f7cddfda23be9da70e103ee,antirez,antirez@gmail.com,Wed Mar 24 21:46:51 2010 +0100,1269463611,CONFIG command implemened -- just a start but already useful,116.0,4.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.06952964699480782,6.0,4951.0,466.0,0.7396354166666665,1886.5,2.562043127117165,920.0,None,False,,
500ece7c1721fa2d5f7cddfda23be9da70e103ee,b61a28fe35232ca34632e2ad1c755e21a6eb5426,antirez,antirez@gmail.com,Wed Mar 24 21:58:34 2010 +0100,1269464314,Fixed the reply about denied  write commands under maxmemory reached condition: now the error will no longer lead to a client-server protocol desync,9.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9486.0,396.0,0.008136574074074074,1888.0,123.9018492176387,921.0,Corrective,True,,
b61a28fe35232ca34632e2ad1c755e21a6eb5426,248ea3100391e57725185a87ae77567646f76723,antirez,antirez@gmail.com,Fri Mar 26 10:56:27 2010 +0100,1269597387,Fixed a critical replication bug: binary values issued with the multi bulk protocol caused a protocol desync with slaves.,31.0,21.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,6.0,4891.5,412.0,4.927291666666667,1889.5,1.3753716599420718,923.0,Corrective,True,,
248ea3100391e57725185a87ae77567646f76723,168ac5c6e3c9bf137fcebfd55948363564cbe434,antirez,antirez@gmail.com,Fri Mar 26 11:21:11 2010 +0100,1269598871,Removed a useless if spotted by Pieter Noordhuis,1.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9493.0,398.0,0.017175925925925924,1891.0,59.22102425876011,924.0,None,False,,
b61a28fe35232ca34632e2ad1c755e21a6eb5426,01426b054c615b58de73cd1bb418c1bd9fd1be8c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Mar 26 16:03:19 2010 +0100,1269615799,implements HINCRBY and tests (todo: find and fix small memleak),126.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.0143668354038504,6.0,4034.333333333334,565.0,3.4941628086419763,31.0,1.3913360006363575,32.0,Preventative,False,,
01426b054c615b58de73cd1bb418c1bd9fd1be8c,53476b82a1db594b9f7195726e8e32cd03d134ba,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Mar 26 16:45:41 2010 +0100,1269618341,removed unnecessary refcount increase that caused the HINCRBY memleak,0.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9570.0,400.0,0.029421296296296293,33.0,34.98898505114084,33.0,None,False,,
168ac5c6e3c9bf137fcebfd55948363564cbe434 53476b82a1db594b9f7195726e8e32cd03d134ba,570e43c8285a4e5e3f31edd8198b8e03ce63f46c,antirez,antirez@gmail.com,Fri Mar 26 17:08:47 2010 +0100,1269619727,Merge branch 'hincrby' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
570e43c8285a4e5e3f31edd8198b8e03ce63f46c,43078ff844b14bb864e118d35795ddc3b3d18f00,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 28 22:59:15 2010 +0200,1269809955,implemented strategy that doesn't use free blocks in zipmaps,52.0,62.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,457.0,10.0,10.774664351851852,34.0,1.0928103156947184,34.0,None,False,True,"[""b36d1c309136051587db90391876125fc95ea348""]"
43078ff844b14bb864e118d35795ddc3b3d18f00,9e071b4bf489d02a4b6e307516f0376ddcf02d4d,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 28 23:07:32 2010 +0200,1269810452,use first byte of zipmap to store length,18.0,5.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,447.0,11.0,0.005752314814814815,35.0,174.8430583501006,35.0,None,False,,
9e071b4bf489d02a4b6e307516f0376ddcf02d4d,381920793346413bc34dc87a31bc4ddf501fcdf8,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 28 23:10:01 2010 +0200,1269810601,removed references in code to ZIPMAP_EMPTY,2.0,17.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,460.0,12.0,0.001724537037037037,36.0,580.8657718120805,36.0,None,False,,
570e43c8285a4e5e3f31edd8198b8e03ce63f46c,cac154c58036e59be816aed3d2e54492131c4a85,antirez,antirez@gmail.com,Mon Mar 29 08:38:23 2010 +0200,1269844703,Redis version is now 1.3.8,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9568.0,401.0,2.6199305555555554,1892.0,1.3816895061892014,925.0,None,False,,
cac154c58036e59be816aed3d2e54492131c4a85,befec3cd91bcc9b5ab470a5e3e06b78bdf1fbc36,antirez,antirez@gmail.com,Mon Mar 29 11:47:58 2010 +0200,1269856078,PUBSUB implemented,155.0,4.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.13503620280212764,6.0,5048.5,475.0,1.4563310185185183,1893.5,1.3514552621656777,927.0,None,False,True,"[""fc46bb71aeeeafa24793dae49f3b63ae84a96e83""]"
befec3cd91bcc9b5ab470a5e3e06b78bdf1fbc36,fc46bb71aeeeafa24793dae49f3b63ae84a96e83,antirez,antirez@gmail.com,Mon Mar 29 12:13:35 2010 +0200,1269857615,First pubsub fix,3.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9716.0,403.0,0.01778935185185185,1895.0,57.213402732595966,928.0,Corrective,True,,
fc46bb71aeeeafa24793dae49f3b63ae84a96e83,de450ee9e5383a78bc0bea8e5c7c120b9160eb10,antirez,antirez@gmail.com,Mon Mar 29 12:14:34 2010 +0200,1269857674,"fmacros added to linenoise, avoiding all the nice warnings...",1.0,0.0,"linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,396.0,1.0,5.825717592592592,1896.0,1.1716526735301247,929.0,Feature Addition,False,,
de450ee9e5383a78bc0bea8e5c7c120b9160eb10,201037f56215626ed2c96bdc589f486411b146d6,antirez,antirez@gmail.com,Mon Mar 29 12:23:02 2010 +0200,1269858182,Fixed a refcount stuff leading to PUBSUB crashes,3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9718.0,404.0,0.0065625,1897.0,153.38095238095238,930.0,Corrective,True,,
201037f56215626ed2c96bdc589f486411b146d6,ff767a758086cac8797e611d3c5e9210a563a83b,antirez,antirez@gmail.com,Mon Mar 29 12:33:41 2010 +0200,1269858821,"free hash table entries about no longer active classes, so that PUBSUB can be abused with millions of different classes",6.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9721.0,405.0,0.0073958333333333315,1898.0,136.2112676056338,931.0,None,False,,
ff767a758086cac8797e611d3c5e9210a563a83b,d6cc8867b7e9d5372ff4f926a89ae9b17803df80,antirez,antirez@gmail.com,Mon Mar 29 17:48:13 2010 +0200,1269877693,No timeouts nor other commands for clients in a Pub/Sub context,10.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9727.0,406.0,0.2184259259259259,1899.0,5.5782111064010165,932.0,None,False,,
d6cc8867b7e9d5372ff4f926a89ae9b17803df80,958cd5f394a55c90d2bbbe77cfc328a1a2cce803,antirez,antirez@gmail.com,Wed Mar 31 19:49:12 2010 +0200,1270057752,Deny EXEC under out of memory,30.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,6.0,5177.5,451.0,5.576979166666666,1900.5,1.0999542787140897,934.0,None,False,,
381920793346413bc34dc87a31bc4ddf501fcdf8,06278a675853bc518a2613625d1b430af0523254,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 12:58:08 2010 +0200,1270119488,use function to determine length of a single entry,1.0,6.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,445.0,13.0,3.5750810185185187,37.0,1.2797139406967597,37.0,None,False,,
958cd5f394a55c90d2bbbe77cfc328a1a2cce803,ffc6b7f864dcaa58b6c5d81d7e595050fe954dec,antirez,antirez@gmail.com,Thu Apr 1 13:13:29 2010 +0200,1270120409,Pub/Sub pattern matching capabilities,210.0,52.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9736.0,408.0,0.7251967592592593,1902.0,2.3789361124854365,935.0,None,False,,
06278a675853bc518a2613625d1b430af0523254,8c6700720d7794bf9d526b6e2adbf73cc12207f0,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 13:15:32 2010 +0200,1270120532,allow 4 free trailing bytes for each value,1.0,1.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,440.0,14.0,0.012083333333333331,38.0,83.75862068965517,38.0,None,False,,
8c6700720d7794bf9d526b6e2adbf73cc12207f0,bfded2aa511f70bb07941698f883b38de68c7773,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 13:24:18 2010 +0200,1270121058,updated zipmap documentation to match the implementation,9.0,15.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,440.0,15.0,0.006087962962962962,39.0,165.25855513307985,39.0,Non Functional,False,,
bfded2aa511f70bb07941698f883b38de68c7773,da2cfe8a3baeaad619c11290acf377f4ea7356c1,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 14:02:22 2010 +0200,1270123342,update the zipmap entry in-place instead of appending it,20.0,13.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,434.0,16.0,0.026435185185185187,40.0,38.82837127845885,40.0,None,False,,
da2cfe8a3baeaad619c11290acf377f4ea7356c1,e9484a8502ce478585f884466efd061db782899f,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 14:31:13 2010 +0200,1270125073,reduce code complexity because zipmapLen now is O(1),5.0,9.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9894.0,409.0,0.053981481481481484,41.0,19.524871355060032,41.0,None,False,,
ffc6b7f864dcaa58b6c5d81d7e595050fe954dec e9484a8502ce478585f884466efd061db782899f,14ae26d89d32a25f66e96ca62b49dff1ef1b95ad,antirez,antirez@gmail.com,Thu Apr 1 18:48:14 2010 +0200,1270140494,Merge branch 'zipmap' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
14ae26d89d32a25f66e96ca62b49dff1ef1b95ad,8bca8773b4e2542f9537b8403764867aa76273a5,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 1 22:07:50 2010 +0200,1270152470,use the right object when cleaning up after zunion/zinter (fixes issue 216),6.0,1.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,6.0,6010.0,505.0,3.2642824074074066,42.5,2.653401490588517,43.0,Corrective,True,,
8bca8773b4e2542f9537b8403764867aa76273a5,4005fef12415087aed9bdfa4c1baadbb7a558bfb,antirez,antirez@gmail.com,Fri Apr 2 16:42:15 2010 +0200,1270219335,Now PUBLISH commands are replicated to slaves,9.0,5.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,6.0,5090.0,446.0,7.080688657407408,1903.5,1.6813852183863391,937.0,None,False,,
4005fef12415087aed9bdfa4c1baadbb7a558bfb,5e26ae88b8082090263281737f918b2a3ad71706,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 5 16:51:34 2010 +0200,1270479094,last argument is never encoded for HINCRBY,1.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9894.0,412.0,3.0064699074074075,44.0,1.3326160017554731,44.0,None,False,,
5e26ae88b8082090263281737f918b2a3ad71706,aa7c29340f87889467f343a8783bc9908df5483d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 5 16:51:48 2010 +0200,1270479108,use long long reply type for HINCRBY,16.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9891.0,413.0,0.00016203703703703703,45.0,6172.428571428572,45.0,None,False,,
4005fef12415087aed9bdfa4c1baadbb7a558bfb,686bc0ac5c05a43c35908c335e17818c7a01afbe,antirez,antirez@gmail.com,Wed Apr 7 13:55:06 2010 +0200,1270641306,"First version of evented Redis Tcl client, that will be used for BLPOP and Pub/Sub tests",114.0,1.0,"redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,131.0,9.0,20.972673611111112,1905.0,1.0476810929566085,938.0,Preventative,False,True,"[""6fcb18003940f8c7f464293677bd7286cad4dce2"", ""ab72b4833d2054231437acccec36f32f07290075""]"
686bc0ac5c05a43c35908c335e17818c7a01afbe,454eea7c44b5dc54690aea71d6411d241148f12d,antirez,antirez@gmail.com,Wed Apr 7 17:36:44 2010 +0200,1270654604,"Now when a child is terminated by a signal, the signal number is logged as well",3.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9906.0,414.0,2.0312037037037043,1906.0,1.4923189132515842,939.0,None,False,,
454eea7c44b5dc54690aea71d6411d241148f12d,6fcb18003940f8c7f464293677bd7286cad4dce2,antirez,antirez@gmail.com,Thu Apr 8 15:56:21 2010 +0200,1270734981,Skiplist theoretical fix,11.0,2.0,"redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,6.0,5075.5,425.0,1.0072453703703703,1907.5,1.7856688727387149,941.0,Corrective,True,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
6fcb18003940f8c7f464293677bd7286cad4dce2,10c2baa50a21eae161edd76c211b6728d06173b9,antirez,antirez@gmail.com,Thu Apr 8 16:07:18 2010 +0200,1270735638,-1 not needed...,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9907.0,416.0,0.007604166666666667,1909.0,132.50684931506848,942.0,None,False,,
10c2baa50a21eae161edd76c211b6728d06173b9 aa7c29340f87889467f343a8783bc9908df5483d,5727b9aa940cd3ae4884ca3fbede57d96b183b1f,antirez,antirez@gmail.com,Thu Apr 8 16:07:26 2010 +0200,1270735646,Merge branch 'issue_218' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
5727b9aa940cd3ae4884ca3fbede57d96b183b1f,884d4b39d475bc15d89ba4415772463f337c7f19,antirez,antirez@gmail.com,Thu Apr 8 20:08:51 2010 +0200,1270750131,Prevent hash table resize while there are active child processes in order to play well with copy on write,57.0,2.0,"dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",4.0,1.0,1.0,1.7359817961883168,6.0,2733.25,446.0,21.136744791666672,1911.5,1.0209934143179218,946.0,None,False,True,"[""3856f1475936e58d3caebbb3df317421b263f2e6""]"
884d4b39d475bc15d89ba4415772463f337c7f19,d9eaa43a028c8fb81f56b46a22687f51e668c490,antirez,antirez@gmail.com,Thu Apr 8 20:18:42 2010 +0200,1270750722,last change reverted as it was unstable... more testing needed,1.0,1.0,"dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,605.0,9.0,0.0068402777777777785,1914.0,147.19289340101525,947.0,Preventative,False,True,"[""dae121d9aa38626db9962ff02879b55eb7ca36bf""]"
d9eaa43a028c8fb81f56b46a22687f51e668c490,78ebe4c88f5ca2e7bfc0d1a0b0481940daac83b4,antirez,antirez@gmail.com,Fri Apr 9 17:02:56 2010 +0200,1270825376,"use directly the real key object in VM I/O jobs to match by pointer, and to handle different keys with the same name living in different DBs, but being at the same moment in the IO job queues",11.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9927.0,418.0,0.8708912037037037,1915.0,2.1482490530932288,948.0,None,False,,
78ebe4c88f5ca2e7bfc0d1a0b0481940daac83b4,bdcb92f273c6b89e8a17cea6cee8bac81568baf9,antirez,antirez@gmail.com,Fri Apr 9 17:13:39 2010 +0200,1270826019,"shareobjects feautres killed - no gains most of the time, but VM complexities",7.0,92.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",3.0,1.0,1.0,0.7403190591209191,6.0,3513.333333333333,472.0,2.635860339506173,1917.0,45.879621209173024,951.0,None,False,,
bdcb92f273c6b89e8a17cea6cee8bac81568baf9,10d91d7fb373e9e70ce22d4f796d59d5510d6ee5,antirez,antirez@gmail.com,Fri Apr 9 18:35:24 2010 +0200,1270830924,removed a no longer true assert in the VM code,0.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9865.0,420.0,0.056770833333333326,1919.0,18.61467889908257,952.0,Preventative,False,,
10d91d7fb373e9e70ce22d4f796d59d5510d6ee5,dae121d9aa38626db9962ff02879b55eb7ca36bf,antirez,antirez@gmail.com,Sat Apr 10 11:14:11 2010 +0200,1270890851,dict.c fixed to play well with enabling/disabling of the hash table,2.0,2.0,"dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,605.0,10.0,1.621863425925926,1920.0,1.6165747275724511,953.0,Corrective,True,,
dae121d9aa38626db9962ff02879b55eb7ca36bf,05df7621750eb4bde669141afd0809f747d8f263,antirez,antirez@gmail.com,Mon Apr 12 11:38:08 2010 +0200,1271065088,Sharing of small integer objects: may save a lot of memory with datasets having many of this,37.0,24.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9862.0,421.0,2.7102314814814816,1921.0,1.3689721733485931,954.0,None,False,,
05df7621750eb4bde669141afd0809f747d8f263,d33278d1601bda80987a6f4ad4b2319fb2f7e972,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 12 12:29:37 2010 +0200,1271068177,implemented HMSET,99.0,7.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.1271677526204722,6.0,3198.75,603.0,7.129892939814812,47.5,1.0583112918859459,49.0,None,False,,
d33278d1601bda80987a6f4ad4b2319fb2f7e972,09aeb5790fa09e1a5fb7545f669780efe1eb4632,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 12 14:53:25 2010 +0200,1271076805,implemented HMGET,96.0,4.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.2677882343595823,6.0,3221.75,607.0,0.09986111111111112,51.5,6.21557719054242,53.0,None,False,,
d33278d1601bda80987a6f4ad4b2319fb2f7e972,4e27f26863a237f0ddba4ee328d72f2d7e2408cc,antirez,antirez@gmail.com,Mon Apr 12 16:03:41 2010 +0200,1271081021,"Now all the commands returning a multi bulk reply against non existing keys will return an empty multi bulk, not a nil one",8.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9992.0,424.0,0.048796296296296296,1922.0,21.493358633776086,955.0,None,False,,
4e27f26863a237f0ddba4ee328d72f2d7e2408cc,e0a62c7fdb6fd0670cbc8c2250680948e737b0aa,Alex McHale,alexmchale@gmail.com,Wed Mar 24 09:15:24 2010 -0500,1269440124,Remove trailing whitespace.,33.0,33.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,6.0,6096.0,523.0,-18.967465277777773,0.5,0.4868195356449183,1.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
e0a62c7fdb6fd0670cbc8c2250680948e737b0aa,bbe025e04bca8c1631152aada1ed7db5a6aa625c,Alex McHale,alexmchale@gmail.com,Mon Mar 29 15:24:39 2010 -0500,1269894279,Validate numeric inputs.,125.0,36.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5413808372079267,6.0,6096.0,525.0,5.256423611111111,2.5,1.1426825643227532,3.0,None,False,True,"[""6485f293827bed97a791ff6c88a8f3d92b00b1c5""]"
bbe025e04bca8c1631152aada1ed7db5a6aa625c 09aeb5790fa09e1a5fb7545f669780efe1eb4632,b60bace9f945d30029596a6bd91412d2e1053c69,antirez,antirez@gmail.com,Tue Apr 13 18:30:55 2010 +0200,1271176255,Merge branch 'hmget' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
b60bace9f945d30029596a6bd91412d2e1053c69,9a22de8270fbb594cbdd23fe06a9e193ee01f17a,Alex McHale,alexmchale@gmail.com,Tue Apr 13 11:48:33 2010 -0500,1271177313,Fixed a tiny memory leak when loading the configuration file.,1.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10073.0,427.0,14.849930555555556,4.0,1.0673403822501977,4.0,Corrective,True,,
9a22de8270fbb594cbdd23fe06a9e193ee01f17a,e6cca5dba6ad046625c195c9c4f39c7ce06ad080,antirez,antirez@gmail.com,Wed Apr 14 12:12:25 2010 +0200,1271239945,Does not allow commands other than Pub/Sub commands when there is at least one pattern,31.0,1.0,"Changelog,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.4488644887230294,6.0,5359.0,473.0,7.20384837962963,1923.5,1.071245929843684,957.0,None,False,,
e6cca5dba6ad046625c195c9c4f39c7ce06ad080,5413c40da79d06b53b276b5358e04706a2738e9b,antirez,antirez@gmail.com,Thu Apr 15 11:59:13 2010 +0200,1271325553,Incrementally rehahsing hash table! Thanks to Derek Collison and Pieter Noordhuis for feedbacks/help,938.0,823.0,"Changelog,CAS_DELIMITER,Makefile,CAS_DELIMITER,dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",5.0,1.0,1.0,0.9337929238080378,6.0,2319.4,525.0,7.297594907407408,1927.0,1.2283025853023106,962.0,None,False,True,"[""3856f1475936e58d3caebbb3df317421b263f2e6"", ""65fd32ab0a7ff1d3d052e3b70dcceac6719de58c"", ""c0f86654142b47e2275fc84eacc08a5e680d7929"", ""064d5c96ac0545e2115edd7d4153433a99aaa707"", ""72aa797c89e68d423b5c6857bbd47c275f1ed291"", ""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
5413c40da79d06b53b276b5358e04706a2738e9b,8ca3e9d10b013263a5356c81882b00e619a88720,antirez,antirez@gmail.com,Thu Apr 15 18:07:57 2010 +0200,1271347677,Active rehashing,90.0,35.0,"dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",4.0,1.0,1.0,1.9103083326692296,6.0,2799.0,486.0,1.7014756944444445,1931.5,2.8266442281793336,966.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
8ca3e9d10b013263a5356c81882b00e619a88720,fb765a0ae39e07e58aa822dd755549de2be89d2d,antirez,antirez@gmail.com,Thu Apr 15 18:32:44 2010 +0200,1271349164,ability to select port/host from make test,10.0,7.0,"Makefile,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.7871265862012691,6.0,1157.0,134.0,8.556111111111111,1934.5,2.8588745508586406,968.0,Preventative,False,,
fb765a0ae39e07e58aa822dd755549de2be89d2d,bc55456975ca955c9babd5634495f939a56c3199,antirez,antirez@gmail.com,Thu Apr 15 19:13:14 2010 +0200,1271351594,more advanced leaks detection in test redis,10.0,1.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,2209.0,101.0,0.028125,1936.0,36.55555555555557,969.0,Preventative,False,,
bc55456975ca955c9babd5634495f939a56c3199,a71f072f7352e8879ac8e39dbfcf19369395ce93,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Apr 13 21:25:11 2010 +0200,1271186711,move retrieval of long up to prevent an empty hash from being created,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10088.0,431.0,-1.863032407407408,54.0,0.4632406843681274,54.0,Feature Addition,False,,
a71f072f7352e8879ac8e39dbfcf19369395ce93,7fb16bacaea00e8c098e9129abd6eff7506d5504,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 14 00:22:44 2010 +0200,1271197364,refactor of hash commands to use specialized api that abstracts zipmap and dict apis,246.0,291.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10088.0,432.0,0.12329861111111112,55.0,9.11039143903126,55.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
7fb16bacaea00e8c098e9129abd6eff7506d5504,1f1c76951824ffa4864c3aeeb9f39c2df201c184,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 15 12:48:13 2010 +0200,1271328493,added HSETNX,41.0,1.0,"redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.2009102795095283,6.0,4171.333333333333,548.0,1.3877932098765433,57.0,1.3749259799819218,58.0,Feature Addition,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
1f1c76951824ffa4864c3aeeb9f39c2df201c184,0c390abc69a0a5f4a6f3178b277de0745211934a,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 15 15:06:57 2010 +0200,1271336817,"set refcount of string objects retrieved from zipmaps to 0, so we don't have to touch the refcount of the objects inside dicts",15.0,11.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10059.0,434.0,0.0963425925925926,59.0,11.379625180201824,59.0,None,False,,
0c390abc69a0a5f4a6f3178b277de0745211934a,6e9e463f8014cbde1eaabe4c59045471e1871b74,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 15 15:38:48 2010 +0200,1271338728,use shared replies for hset,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10063.0,435.0,0.02211805555555556,60.0,46.21193092621665,60.0,None,False,,
6e9e463f8014cbde1eaabe4c59045471e1871b74,6d7d1370c3ea7b338b9c5ab1ade32adbbcc661b8,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 15 17:31:13 2010 +0200,1271345473,enable hash dereference in SORT on BY and GET,55.0,34.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10063.0,436.0,0.07806712962962963,61.0,13.809488510007414,61.0,None,False,True,"[""55017f9da0c8ee8709029c4dbdbf4f1d4db4a181"", ""08ee9b570f4a9a181c3ed2242c5b2f6a88eddc41""]"
6d7d1370c3ea7b338b9c5ab1ade32adbbcc661b8,16fa22f12b61d7da44145cb8cf48ea7f7c454200,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Apr 15 20:55:34 2010 +0200,1271357734,make sure that cmpobj is in decoded form when sorting by ALPHA (this solves edge case from previous commit where (!sortby && alpha) == 1),8.0,14.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10084.0,437.0,0.14190972222222226,62.0,8.046733545387815,62.0,None,False,True,"[""08ee9b570f4a9a181c3ed2242c5b2f6a88eddc41""]"
bc55456975ca955c9babd5634495f939a56c3199,d4dd6556c3925ae26b1fce142158b3243eda39a7,Konstantin Merenkov,kmerenkov@gmail.com,Sat Apr 3 00:12:10 2010 +0400,1270239130,"Don't set expire to keys with ttl=0, remove them immediately.",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10078.0,438.0,-12.946805555555557,0.0,0.0,0.0,None,False,,
d4dd6556c3925ae26b1fce142158b3243eda39a7,58e1c9c143e9c5f108ca1863bdd61fc5e02dc968,antirez,antirez@gmail.com,Fri Apr 16 10:04:51 2010 +0200,1271405091,added dictFetchValue() to dict.c to make hash table API a bit less verbose in the common cases,8.0,0.0,"dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,6.0,435.0,21.0,0.6645138888888888,1937.5,2.128644581460968,971.0,Feature Addition,False,,
16fa22f12b61d7da44145cb8cf48ea7f7c454200,feb8d7e6a6a579695513e8c65b97d10cd9a42f53,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 12:12:50 2010 +0200,1271412770,rename hashReplace to hashSet,5.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10078.0,439.0,13.583796296296294,63.0,1.0736171227974507,63.0,None,False,,
feb8d7e6a6a579695513e8c65b97d10cd9a42f53,c811bb381d06155ffc2b050196761be177ba620b,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 12:13:41 2010 +0200,1271412821,drop inline directive,3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10078.0,440.0,0.0005902777777777778,64.0,1695.1176470588236,64.0,None,False,,
c811bb381d06155ffc2b050196761be177ba620b,c44d3b56df4ce4cae1c2e6db6397eaab9651ff7a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 12:48:48 2010 +0200,1271414928,store the hash iterator on the heap instead of the stack,10.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10078.0,441.0,0.024386574074074074,65.0,42.00616990982439,65.0,None,False,,
c44d3b56df4ce4cae1c2e6db6397eaab9651ff7a,a3f3af860bd16cd138a9babdd8550f5aa9df16fc,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 13:20:12 2010 +0200,1271416812,revert 0c390a to stop using tricks with o->refcount,10.0,14.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10081.0,442.0,0.02180555555555556,66.0,46.859872611464965,66.0,None,False,,
a3f3af860bd16cd138a9babdd8550f5aa9df16fc,705dad386d2f9c303701dcd9e417433d6d287ee0,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 13:31:17 2010 +0200,1271417477,make sortCommand aware that lookupKeyByPattern always increased the refcount of the returned value,16.0,9.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10077.0,443.0,0.007696759259259259,67.0,130.9248120300752,67.0,None,False,,
705dad386d2f9c303701dcd9e417433d6d287ee0,b6f07345c9e4383ac444c895e08e7998ae404915,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 13:37:40 2010 +0200,1271417860,check object type in lookupKeyByPattern,4.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10084.0,444.0,0.00443287037037037,68.0,226.58746736292431,68.0,None,False,True,"[""55017f9da0c8ee8709029c4dbdbf4f1d4db4a181""]"
58e1c9c143e9c5f108ca1863bdd61fc5e02dc968 b6f07345c9e4383ac444c895e08e7998ae404915,b4eb9ccdcbc126e9b828f7fc8d0bcd40bd1891a0,antirez,antirez@gmail.com,Fri Apr 16 15:53:44 2010 +0200,1271426024,Merge branch 'hash-refactor' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
b4eb9ccdcbc126e9b828f7fc8d0bcd40bd1891a0,c4e83132313c3eaad0f0d6488566a746fddb76c4,antirez,antirez@gmail.com,Fri Apr 16 16:23:10 2010 +0200,1271427790,Added tests for GET/BY against hashes fields,26.0,1.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,2242.0,103.0,1.1492708333333332,1939.0,1.8701169219613891,972.0,Feature Addition,False,,
c4e83132313c3eaad0f0d6488566a746fddb76c4,4bfcbab8b27faf58c8e66681b8db907454404442,antirez,antirez@gmail.com,Fri Apr 16 17:00:27 2010 +0200,1271430027,SORT/GET test added,18.0,0.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,2267.0,104.0,0.025891203703703704,1940.0,39.62315601251676,973.0,Feature Addition,False,,
4bfcbab8b27faf58c8e66681b8db907454404442,55017f9da0c8ee8709029c4dbdbf4f1d4db4a181,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 17:55:57 2010 +0200,1271433357,fix small error and memory leaks in SORT,16.0,11.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10084.0,445.0,0.1793634259259259,69.0,6.57527263341292,69.0,Corrective,True,,
55017f9da0c8ee8709029c4dbdbf4f1d4db4a181,c651fd9ee3ce3d1dca7cc8dbf7648cd588255bd9,antirez,antirez@gmail.com,Sat Apr 17 11:35:05 2010 +0200,1271496905,"Added support for Guru Mediation, and raising a guru mediation if refCount <= 0 but decrRefCount is called against such an object",12.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10089.0,446.0,0.7355092592592593,1941.0,2.359602190470196,974.0,Feature Addition,False,,
c651fd9ee3ce3d1dca7cc8dbf7648cd588255bd9,97224de7f962f8c39cb357969f83378d12d25f96,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Apr 17 12:33:43 2010 +0200,1271500423,"strip tryObjectEncoding from hashSet, to enable the arguments being encoded in-place",11.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10101.0,447.0,0.04071759259259259,70.0,25.559408754974427,70.0,None,False,,
97224de7f962f8c39cb357969f83378d12d25f96,edc2f63ad9c961e54a10f27a44a4b64868160eaa,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Apr 17 12:35:22 2010 +0200,1271500522,increment dirty counter after hmset,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10111.0,448.0,0.0011458333333333331,71.0,873.7272727272727,71.0,None,False,,
edc2f63ad9c961e54a10f27a44a4b64868160eaa,3f973463a7a5d70785dd0c7d33e0e5624a474c94,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Apr 17 12:46:23 2010 +0200,1271501183,make sure that the resulting value in hincrby is encoded when possible,21.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10112.0,449.0,0.007650462962962962,72.0,131.71104387291982,72.0,None,False,True,"[""10dea8dc1b6515bb8af6723fed4c28594572cefb""]"
c651fd9ee3ce3d1dca7cc8dbf7648cd588255bd9,f83c6cb5eb02d618ef6944e095c897358fa9cd5f,antirez,antirez@gmail.com,Sat Apr 17 12:54:40 2010 +0200,1271501680,redisAssert(0) => redisPanic(something meaningful),9.0,9.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10130.0,450.0,0.005752314814814815,1942.0,174.8430583501006,975.0,Preventative,False,,
f83c6cb5eb02d618ef6944e095c897358fa9cd5f 3f973463a7a5d70785dd0c7d33e0e5624a474c94,4e8dbaf463cefe1710283bfefbccc3db37af5c5a,antirez,antirez@gmail.com,Sat Apr 17 12:54:49 2010 +0200,1271501689,Merge branch 'hash' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
4e8dbaf463cefe1710283bfefbccc3db37af5c5a,bd79a6bda04366bb45f071526d4e48ab25318532,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 14:35:52 2010 +0200,1271421352,refactor code that retrieves value from object or replies to client,80.0,58.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10130.0,451.0,-0.9297222222222222,73.0,-0.07559008066925599,73.0,None,False,True,"[""6485f293827bed97a791ff6c88a8f3d92b00b1c5""]"
bd79a6bda04366bb45f071526d4e48ab25318532,682c73e87e6edfdfe76b9bb4b3d66ce39465b359,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 16 14:42:14 2010 +0200,1271421734,check eptr inline,4.0,10.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10152.0,452.0,0.004421296296296296,74.0,227.17801047120412,74.0,None,False,,
682c73e87e6edfdfe76b9bb4b3d66ce39465b359,177727542c871330445700299aed803a1384b0ed,antirez,antirez@gmail.com,Sun Apr 18 00:03:49 2010 +0200,1271541829,Guru mediation -> meditation,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10146.0,453.0,1.3899884259259259,1943.0,1.7194304508930434,976.0,None,False,,
177727542c871330445700299aed803a1384b0ed,08ee9b570f4a9a181c3ed2242c5b2f6a88eddc41,antirez,antirez@gmail.com,Sun Apr 18 17:51:15 2010 +0200,1271605875,"Fix for a SORT bug introduced with commit 16fa22f1, regression test added",13.0,5.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,6215.5,559.0,1.388275462962963,1944.5,1.854594727333617,978.0,Corrective,True,,
08ee9b570f4a9a181c3ed2242c5b2f6a88eddc41,f1a930bbb785637a21f82a0fde08aa71ad19c8c3,antirez,antirez@gmail.com,Mon Apr 19 11:05:08 2010 +0200,1271667908,Added package require Tcl 8.5 in redis.tcl so it will show a clear error when the test suit is attempted to run under 8.4,1.0,0.0,"redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,253.0,14.0,3.9284143518518517,1946.0,1.2545556324853055,979.0,Feature Addition,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
f1a930bbb785637a21f82a0fde08aa71ad19c8c3,7ccd2d0a5fe75293990ee249f7539eb7c9279104,antirez,antirez@gmail.com,Mon Apr 19 16:11:13 2010 +0200,1271686273,running the test using tcl8.5 directly instead of tclsh that too often it's a symlink to 8.4,2.0,2.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,5126.5,490.0,2.4161284722222223,1947.5,1.231619781410524,981.0,Preventative,False,,
7ccd2d0a5fe75293990ee249f7539eb7c9279104,66c8853f9c1222eace3ab12b5cb58ca6871c942b,antirez,antirez@gmail.com,Mon Apr 19 18:30:11 2010 +0200,1271694611,Fix for MULTI/EXEC and Replication/AOF: now the block is correctly sent as MULTI/..writing operations../EXEC. Ok for slaves but more work needed for the AOF as it should be a write-all-or-nothing business,25.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10145.0,456.0,0.09650462962962963,1949.0,11.362197169585032,982.0,Corrective,True,,
66c8853f9c1222eace3ab12b5cb58ca6871c942b,d3277ecd92352db11e9f4ce4c45a63c3a225fc29,antirez,antirez@gmail.com,Tue Apr 20 11:01:36 2010 +0200,1271754096,More precise memory used guesswork in zmalloc.c,6.0,2.0,"zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,4.0,154.0,11.0,59.9428125,1950.0,1.016682567238566,983.0,None,False,,
d3277ecd92352db11e9f4ce4c45a63c3a225fc29,566c3c7a22c0ec217c40f7a95db2bb83c8cc16c7,antirez,antirez@gmail.com,Tue Apr 20 18:25:30 2010 +0200,1271780730,fsync always now uses O_DIRECT on Linux,15.0,1.0,"config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8960382325345575,6.0,5104.0,466.0,71.92775462962962,1951.5,1.0069756701188308,985.0,None,False,,
566c3c7a22c0ec217c40f7a95db2bb83c8cc16c7,122c04983400a076423811740f2b87163ea95c00,antirez,antirez@gmail.com,Tue Apr 20 18:29:06 2010 +0200,1271780946,define __USE_GNU to get O_DIRECT,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10179.0,458.0,0.0025,1953.0,401.0,986.0,None,False,,
d3277ecd92352db11e9f4ce4c45a63c3a225fc29,188714211af246b96f46a2e598c66fee95c52375,antirez,antirez@gmail.com,Wed Apr 21 09:54:21 2010 +0200,1271836461,version 1.3.10,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10180.0,459.0,0.6425347222222222,1954.0,2.556336125371521,987.0,None,False,,
188714211af246b96f46a2e598c66fee95c52375,a08bb01d6740f0d4baf970ad9499859383219c22,antirez,antirez@gmail.com,Wed Apr 21 10:29:24 2010 +0200,1271838564,Revert version 1.3.10This reverts commit 188714211af246b96f46a2e598c66fee95c52375.n,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10180.0,460.0,0.024340277777777777,1955.0,42.084165477888725,988.0,None,False,,
a08bb01d6740f0d4baf970ad9499859383219c22 122c04983400a076423811740f2b87163ea95c00,0040fa253fdfeca20d540609aa17a796856744eb,antirez,antirez@gmail.com,Wed Apr 21 10:30:36 2010 +0200,1271838636,Merge branch 'master' of github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
0040fa253fdfeca20d540609aa17a796856744eb,d6fb4d5396a8822435e50843b4ddc4522cfec070,antirez,antirez@gmail.com,Wed Apr 21 10:31:08 2010 +0200,1271838668,Revert define __USE_GNU to get O_DIRECTThis reverts commit 122c04983400a076423811740f2b87163ea95c00.n,0.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10180.0,461.0,0.0012037037037037038,1956.0,831.7692307692308,989.0,None,False,,
d6fb4d5396a8822435e50843b4ddc4522cfec070,3bb225d66be633c88ba01c6e7a0cebf91837cd13,antirez,antirez@gmail.com,Wed Apr 21 10:31:16 2010 +0200,1271838676,Revert fsync always now uses O_DIRECT on LinuxThis reverts commit 566c3c7a22c0ec217c40f7a95db2bb83c8cc16c7.n,1.0,15.0,"config.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8960382325345575,6.0,5111.0,472.0,0.3353819444444445,1957.5,2.4909404730224125,991.0,None,False,,
3bb225d66be633c88ba01c6e7a0cebf91837cd13,24df76987e85f7ba5314495e50dc5cc9ff623823,antirez,antirez@gmail.com,Wed Apr 21 10:31:48 2010 +0200,1271838708,Now that's the right 1.3.10,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10170.0,463.0,0.00037037037037037035,1959.0,2701.0,992.0,None,False,,
24df76987e85f7ba5314495e50dc5cc9ff623823,dc4be23ec895c6ec49afc75cd037cac230a21771,antirez,antirez@gmail.com,Wed Apr 21 11:31:29 2010 +0200,1271842289,binary safe keys ready implementation of RANDOMKEYS,12.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10170.0,464.0,0.04144675925925926,1960.0,25.12733873219771,993.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
dc4be23ec895c6ec49afc75cd037cac230a21771,2b61932933f48bef6a6c6aacf5859c6d21070f76,antirez,antirez@metal.(none),Thu Apr 22 12:05:51 2010 +0200,1271930751,"Now in redis.conf it is possible to specify units where appropriate instead of amounts of bytes, like 2Gi or 4M and so forth",54.0,15.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10177.0,465.0,1.0238657407407408,1961.0,1.976690556397097,994.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
2b61932933f48bef6a6c6aacf5859c6d21070f76,723240057a996a64516b10779f754ae26a91d0cd,antirez,antirez@gmail.com,Thu Apr 22 15:09:07 2010 +0200,1271941747,new units for bytes specification,18.0,6.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,5254.5,504.0,3.501539351851852,1962.5,5.000098515839495,996.0,Feature Addition,False,,
723240057a996a64516b10779f754ae26a91d0cd,4e5240af642a44654e8cece67a89f06bd359d614,antirez,antirez@gmail.com,Thu Apr 22 18:04:50 2010 +0200,1271952290,"Virtual memory design document removed, no longer needed as we have a full specification and implementation",0.0,11.0,"design-documents/VIRTUAL-MEMORY,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,11.0,2.0,142.63354166666667,1964.0,1.007010973634357,3.0,Non Functional,False,,
4e5240af642a44654e8cece67a89f06bd359d614,34b8a559a8c4363b3540252c897bf99142477cf2,antirez,antirez@gmail.com,Thu Apr 22 19:46:39 2010 +0200,1271958399,REDIS-CLUSTER doc updated,118.0,19.0,"design-documents/REDIS-CLUSTER,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,115.0,1.0,142.70741898148148,1965.0,1.0070073441670877,4.0,Non Functional,False,,
34b8a559a8c4363b3540252c897bf99142477cf2,ffcc5608aa194e5c86b44fb9a770429f3d9db8ae,antirez,antirez@gmail.com,Thu Apr 22 20:20:41 2010 +0200,1271960441,typo fixed,2.0,2.0,"design-documents/REDIS-CLUSTER,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,214.0,2.0,0.023634259259259258,1966.0,43.31145935357493,5.0,Corrective,True,,
ffcc5608aa194e5c86b44fb9a770429f3d9db8ae,7accafbbe22cbc46d5838c0288aacfce7ad2e0dc,antirez,antirez@gmail.com,Thu Apr 22 20:24:00 2010 +0200,1271960640,"typo fixed, reloaded",4.0,4.0,"design-documents/REDIS-CLUSTER,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,214.0,3.0,0.002303240740740741,1967.0,435.1708542713568,6.0,Corrective,True,,
7accafbbe22cbc46d5838c0288aacfce7ad2e0dc,c8d0ea0ef1df7b64a23f992f370db5f70f343891,antirez,antirez@gmail.com,Fri Apr 23 15:36:00 2010 +0200,1272029760,Pub/Sub API change: now messages received via pattern matching have a different message type and an additional field representing the original pattern the message matched,8.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10216.0,467.0,1.0186689814814816,1968.0,1.9816731619192616,997.0,None,False,,
c8d0ea0ef1df7b64a23f992f370db5f70f343891,526d00a572a3562bfab0cefd732aa13b7fcc0bff,antirez,antirez@gmail.com,Fri Apr 23 19:07:33 2010 +0200,1272042453,SETEX implemented,55.0,13.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.tcl,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",4.0,1.0,1.0,1.2095403087996162,6.0,3325.5,665.0,5.177847222222222,1970.5,1.0724831128817751,1001.0,None,False,True,"[""ab72b4833d2054231437acccec36f32f07290075"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
526d00a572a3562bfab0cefd732aa13b7fcc0bff,a88a2af6c5a5248227dd5436a93a637000e88d8c,antirez,antirez@gmail.com,Mon Apr 26 18:39:39 2010 +0200,1272299979,Initial support for quoted strings in redis-cli,83.0,19.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,535.0,77.0,2.980625,1973.0,1.335500104843783,1002.0,Feature Addition,False,True,"[""8ff6a48b99dd5e706f542be848a62beaf995229b""]"
a88a2af6c5a5248227dd5436a93a637000e88d8c,21cdc9f0649ffa905fccf6a15c19adeff4aaf2c8,antirez,antirez@gmail.com,Mon Apr 26 18:54:55 2010 +0200,1272300895,redis-cli now is able to also output the string representation instead of the raw string. Much better for debugging,35.0,5.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,599.0,78.0,0.010601851851851852,1974.0,95.32314410480349,1003.0,Corrective,True,True,"[""07242c0ccf1fd6a4d8199fa09981e6f7a3a1cce9""]"
21cdc9f0649ffa905fccf6a15c19adeff4aaf2c8,095e805e891798435944aa9082d45b3c69ed2dcf,antirez,antirez@gmail.com,Mon Apr 26 19:56:16 2010 +0200,1272304576,don't output the newline when stdout is not a tty,0.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,629.0,79.0,0.042604166666666665,1975.0,24.471882640586802,1004.0,Feature Addition,False,,
095e805e891798435944aa9082d45b3c69ed2dcf,249c3a7dd1473d32d8b02830e7beb0625a51ff9b,antirez,antirez@gmail.com,Tue Apr 27 16:07:31 2010 +0200,1272377251,Minimal support for subscribe/psubscribe in redis-cli,18.0,3.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,628.0,80.0,0.8411458333333334,1976.0,2.188854489164086,1005.0,None,False,,
249c3a7dd1473d32d8b02830e7beb0625a51ff9b,cbb87f7f8a954c9c0b34899206ce76f1094047a4,antirez,antirez@gmail.com,Tue Apr 27 16:21:15 2010 +0200,1272378075,redis-cli is now using only the new protocol,111.0,130.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,643.0,81.0,0.009537037037037037,1977.0,105.85436893203884,1006.0,Feature Addition,False,,
cbb87f7f8a954c9c0b34899206ce76f1094047a4,8f63ddca00cd23978fc5a26388681753c7e5318c,antirez,antirez@gmail.com,Tue Apr 27 16:58:08 2010 +0200,1272380288,AOF is now rewritten on slave after SYNC with master. Thanks to @_km for finding this bug and any others',2.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10237.0,469.0,3.910127314814815,1978.0,1.2557461482676455,1007.0,Corrective,True,,
8f63ddca00cd23978fc5a26388681753c7e5318c,8ff6a48b99dd5e706f542be848a62beaf995229b,antirez,antirez@metal.(none),Tue Apr 27 18:06:52 2010 +0200,1272384412,"Fixed a redis-cli bug, was using free instead of zfree call",1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,624.0,82.0,0.07334490740740741,1979.0,14.634211772131922,1008.0,Corrective,True,,
8ff6a48b99dd5e706f542be848a62beaf995229b,5bdb384ff0d532d137cea9ef6e3f9b4c6c193e49,antirez,antirez@gmail.com,Thu Apr 29 11:00:19 2010 +0200,1272531619,Redis cluster version 2,281.0,0.0,"design-documents/REDIS-CLUSTER-2,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1980.0,0.0,7.0,None,False,,
5bdb384ff0d532d137cea9ef6e3f9b4c6c193e49,0ce7679849b9d7edd9244a1461f4f126539003dc,antirez,antirez@gmail.com,Thu Apr 29 15:39:11 2010 +0200,1272548351,Added more information about slave election in Redis Cluster alternative doc,62.0,0.0,"design-documents/REDIS-CLUSTER-2,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,281.0,1.0,0.19365740740740744,1981.0,6.1637580683719815,8.0,Feature Addition,False,,
0ce7679849b9d7edd9244a1461f4f126539003dc,f40b035d7b5771742ddc9d0304eda3b9ba434454,antirez,antirez@gmail.com,Thu Apr 29 18:07:35 2010 +0200,1272557255,redis-cli INFO output format is now raw again,113.0,106.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,624.0,83.0,2.0004976851851852,1982.0,1.4998756096573191,1009.0,None,False,True,"[""7aaaad507060b131ff18d4637ea63499828076d6""]"
f40b035d7b5771742ddc9d0304eda3b9ba434454,dd142b9cd7488d849be078e0984d6547592599ac,antirez,antirez@gmail.com,Thu Apr 29 18:43:51 2010 +0200,1272559431,"New MONITOR output format with timestamp, every command in a single line, string representations",60.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10239.0,470.0,2.0734143518518517,1983.0,1.4822962661114305,1010.0,Feature Addition,False,,
dd142b9cd7488d849be078e0984d6547592599ac,7aaaad507060b131ff18d4637ea63499828076d6,antirez,antirez@metal.(none),Thu Apr 29 20:13:23 2010 +0200,1272564803,redis-cli minor fix (less segfault is better),1.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,631.0,84.0,0.08736111111111111,1984.0,12.446740858505564,1011.0,Corrective,True,,
7aaaad507060b131ff18d4637ea63499828076d6,a737ada1e58e6cd75e2fc643e2e55778de17b2ef,antirez,antirez@gmail.com,Fri Apr 30 09:21:48 2010 +0200,1272612108,"linenoise.c updated, now redis-cli can be used in a pipe",48.0,13.0,"linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,397.0,2.0,31.88002314814815,1985.0,1.0313676058311798,1012.0,None,False,,
a737ada1e58e6cd75e2fc643e2e55778de17b2ef,3c5caedc69b9873a500a572020be2097db1920de,antirez,antirez@gmail.com,Fri Apr 30 11:52:36 2010 +0200,1272621156,More tests for APPEND and tests for SUBSTR,114.0,0.0,"Changelog,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9776825423268496,6.0,1500.5,154.0,10.84667824074074,1986.5,1.0563920783971377,1014.0,Preventative,False,,
7aaaad507060b131ff18d4637ea63499828076d6,10ce12761a9971512e0702c73434bcef0f212e7d,antirez,antirez@metal.(none),Sun May 2 15:05:34 2010 +0200,1272805534,On Linux now fdatasync() is used insetad of fsync() in order to flush the AOF file kernel buffers,12.0,5.0,"config.h,CAS_DELIMITER,fmacros.h,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.402081402756032,6.0,3448.333333333333,484.0,42.90569058641975,1989.0,1.0350251299122402,1017.0,None,False,,
10ce12761a9971512e0702c73434bcef0f212e7d 3c5caedc69b9873a500a572020be2097db1920de,48d729a7d92399b6b4f2078d385d5aa83b63b979,antirez,antirez@metal.(none),Sun May 2 15:06:06 2010 +0200,1272805566,Merge branch 'master' of git@github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
48d729a7d92399b6b4f2078d385d5aa83b63b979,af090ffa5279a9faca4ea974d908d58d0fc77844,antirez,antirez@gmail.com,Sun May 2 15:08:06 2010 +0200,1272805686,compilation fix for mac os x,6.0,0.0,"fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9.0,3.0,0.0017592592592592595,1991.0,569.421052631579,1018.0,Corrective,True,True,"[""0cae060a26745e1cb06700f7878ffe647db8ddd4""]"
af090ffa5279a9faca4ea974d908d58d0fc77844,2cf5e5136b20bff5775c3824185e7462a97bc110,antirez,antirez@metal.(none),Sun May 2 15:11:05 2010 +0200,1272805865,included fmacros.h in linenose.c to avoid compilation warnings on Linux,1.0,0.0,"linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,432.0,3.0,2.2425578703703706,1992.0,1.4459193732355475,1019.0,None,False,,
2cf5e5136b20bff5775c3824185e7462a97bc110,b4bd05241da2772f457d0552d807e7cfd4dc8f33,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 13:36:29 2010 +0200,1273059389,tool to check if AOF is valid,168.0,2.0,"Makefile,CAS_DELIMITER,redis-check-aof.c,CAS_DELIMITER",2.0,1.0,1.0,0.29876186325867743,6.0,54.0,36.0,7.946273148148147,75.5,1.0629225790100765,76.0,None,False,True,"[""cb8ae3c88908a8a4b9c88d56713ae2aea472cbd8""]"
b4bd05241da2772f457d0552d807e7cfd4dc8f33,cb8ae3c88908a8a4b9c88d56713ae2aea472cbd8,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 13:46:37 2010 +0200,1273059997,allow AOF to be fixed by truncating to the portion of the file that is valid,33.0,8.0,"redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,161.0,1.0,0.007037037037037038,77.0,143.10526315789474,77.0,Corrective,True,,
cb8ae3c88908a8a4b9c88d56713ae2aea472cbd8,e795c7588875c47908c06a5fac0f869e23854218,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 13:47:17 2010 +0200,1273060037,ignore redis-check-aof binary,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,13.0,7.0,52.86915509259259,78.0,1.0189146204104955,78.0,None,False,,
e795c7588875c47908c06a5fac0f869e23854218,57ca68acc16cedb39409ce5e513f9c2dd6f29182,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 14:02:04 2010 +0200,1273060924,moved argument parsing around,9.0,11.0,"redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,186.0,2.0,0.010729166666666666,79.0,94.20388349514565,79.0,None,False,,
57ca68acc16cedb39409ce5e513f9c2dd6f29182,e51fa063db5fbb53c754738d87146551aebfd8e2,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 14:06:55 2010 +0200,1273061215,str can be free'd outside readString,3.0,13.0,"redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,184.0,3.0,0.003368055555555556,80.0,297.9072164948454,80.0,None,False,,
e51fa063db5fbb53c754738d87146551aebfd8e2,81330149f84f26c3e0492a296acfce7bd55d783f,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 5 16:38:50 2010 +0200,1273070330,ask for confirmation before AOF is truncated,14.0,4.0,"redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,174.0,4.0,0.10549768518518518,81.0,10.47888096544158,81.0,None,False,,
2cf5e5136b20bff5775c3824185e7462a97bc110,029245feac6b481545de6810c554a2d5d50c39c6,antirez,antirez@gmail.com,Thu May 6 18:04:51 2010 +0200,1273161891,clarified a few messages in redis.conf,12.0,6.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,305.0,39.0,14.122037037037034,1993.0,1.0708113140744042,1020.0,None,False,,
029245feac6b481545de6810c554a2d5d50c39c6,28ed1f33eedad20fc441b2552b3d7149b2832295,antirez,antirez@gmail.com,Thu May 6 20:16:14 2010 +0200,1273169774,"AOF writes are now accumulated into a buffer and flushed into disk just before re-entering the event loop. A lot less writes but still this guarantees that AOF is written before the client gets a positive reply about a write operation, as no reply is trasnmitted before re-entering into the event loop.",57.0,29.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10298.0,472.0,4.215740740740742,1994.0,1.2372062376455084,1021.0,None,False,,
029245feac6b481545de6810c554a2d5d50c39c6,946342c19019c5cf81b965cac3dbea5007d74049,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 6 20:35:00 2010 +0200,1273170900,hincrby should report an error when called against a hash key that doesn't contain an integer,16.0,13.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9991421039919088,6.0,6345.5,581.0,3.1879050925925925,82.5,39.44431838660119,83.0,None,False,,
81330149f84f26c3e0492a296acfce7bd55d783f 946342c19019c5cf81b965cac3dbea5007d74049,98d2e23be23f9af02653672081896747baf985f7,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 6 21:06:09 2010 +0200,1273172769,Merge branch 'master' into check-aof,,,,,,,,,,,,,,,Merge,False,,
98d2e23be23f9af02653672081896747baf985f7,8063b99da677afc470342a3f75552950b6a487db,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 6 22:00:04 2010 +0200,1273176004,log error and quit when the AOF contains an unfinished MULTI,13.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10325.0,474.0,0.05907407407407408,84.0,17.927899686520373,84.0,None,False,,
946342c19019c5cf81b965cac3dbea5007d74049,4132ad8d49e9a26425497048404f32b151362fe1,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 6 22:00:04 2010 +0200,1273176004,log error and quit when the AOF contains an unfinished MULTI,13.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10338.0,475.0,0.0,85.0,0.0,85.0,None,False,,
28ed1f33eedad20fc441b2552b3d7149b2832295 4132ad8d49e9a26425497048404f32b151362fe1,f424d5f398dde0679ae2afd5063c80d845641a00,antirez,antirez@gmail.com,Thu May 6 23:19:46 2010 +0200,1273180786,Merge branch 'master' into aof-speedup,,,,,,,,,,,,,,,Merge,False,,
f424d5f398dde0679ae2afd5063c80d845641a00,8b5bb414f111eeabb0514e686abbc7e0db031221,antirez,antirez@gmail.com,Fri May 7 09:32:26 2010 +0200,1273217546,Swap file is now locked,15.0,5.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,6.0,5220.0,606.0,22.66287037037037,1995.5,1.0221807915820291,1023.0,None,False,,
8b5bb414f111eeabb0514e686abbc7e0db031221,a0e7e5f516fa0317007b6267bf55d8fa535ad2f2,antirez,antirez@gmail.com,Fri May 7 09:36:37 2010 +0200,1273217797,swap file name pid expansion removed. Not suited for mission critical software...,32.0,28.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",3.0,1.0,1.0,1.5240979830688348,6.0,3664.0,535.0,9.444193672839505,1998.0,116.26564878338631,1026.0,None,False,,
a0e7e5f516fa0317007b6267bf55d8fa535ad2f2,f4f06efccc4064fa0f7f7f16098de746fa0e5b69,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 11:40:26 2010 +0200,1273225226,don't load value from VM for EXISTS,6.0,2.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,6.0,5216.0,609.0,0.08743634259259259,86.5,9.484222979680986,87.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
f4f06efccc4064fa0f7f7f16098de746fa0e5b69,f3b52411db839f4716bdbd7ac9f90331c94f0ccd,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 11:55:12 2010 +0200,1273226112,make append only filename configurable,6.0,2.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,6.0,5329.0,520.0,0.053246527777777775,88.5,54.4536068436962,89.0,None,False,,
f3b52411db839f4716bdbd7ac9f90331c94f0ccd,6f07874621392f7f0eb5f092f79f1afe8939b9c3,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 12:45:27 2010 +0200,1273229127,extract preloading of multiple keys according to the command prototype to a separate function,14.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10354.0,480.0,0.034895833333333334,90.0,29.65671641791045,90.0,None,False,,
6f07874621392f7f0eb5f092f79f1afe8939b9c3,ca1788b560a0e70047f1bcef354a3b6317b4360d,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 12:58:44 2010 +0200,1273229924,make prototype of custom function to preload keys from the vm match the prototype of waitForMultipleSwappedKeys,10.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10361.0,481.0,0.009224537037037036,91.0,109.40652446675031,91.0,None,False,,
ca1788b560a0e70047f1bcef354a3b6317b4360d,739ba0d21119778438c36ea60fdb263271783468,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 12:59:34 2010 +0200,1273229974,"add sanity check to zunionInterBlockClientOnSwappedKeys, as the number of keys used is provided as argument to the function",4.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10365.0,482.0,0.0005787037037037037,92.0,1729.0,92.0,Feature Addition,False,,
739ba0d21119778438c36ea60fdb263271783468,3805e04f788a27938095b3d79d987210140283a9,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 14:17:10 2010 +0200,1273234630,added function that preloads all keys needed to execute a MULTI/EXEC block,28.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10367.0,483.0,0.05388888888888889,93.0,19.55670103092784,93.0,Feature Addition,False,,
3805e04f788a27938095b3d79d987210140283a9,0a6f3f0f8a42731b36a78d58c5c11728faf97a43,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 14:33:34 2010 +0200,1273235614,swap arguments in blockClientOnSwappedKeys to be consistent,3.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10394.0,484.0,0.011388888888888893,94.0,88.80487804878048,94.0,None,False,,
0a6f3f0f8a42731b36a78d58c5c11728faf97a43,3317c679711e2ae82c452e783d912e5276b5f6d7,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 14:36:59 2010 +0200,1273235819,update TODO,0.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,85.0,132.0,0.12260416666666668,95.0,9.156329651656756,95.0,None,False,,
a0e7e5f516fa0317007b6267bf55d8fa535ad2f2,59305dc7a91a0572c5cc0d5f7e3d0e624311542a,antirez,antirez@gmail.com,Fri May 7 16:33:47 2010 +0200,1273242827,DEBUG POPULATE command for fast creation of test databases,19.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10394.0,485.0,0.08348379629629629,2000.0,12.978372383197007,1027.0,Corrective,True,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
3317c679711e2ae82c452e783d912e5276b5f6d7,3350558346a07600bb7529781638696e04c425cc,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 7 16:48:43 2010 +0200,1273243723,change command names no longer used to zunion/zinter,2.0,2.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,631.0,85.0,7.85787037037037,96.0,1.1272609438520005,96.0,None,False,,
59305dc7a91a0572c5cc0d5f7e3d0e624311542a,242a64f3d613524ca3b938b0b6fa17e1d288419c,antirez,antirez@gmail.com,Sat May 8 02:38:59 2010 +0200,1273279139,swap objects out directly while loading an RDB file if we detect we can't stay in the vm max memory limits anyway,36.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10413.0,486.0,0.42027777777777775,2001.0,3.3793787177792467,1028.0,None,False,,
242a64f3d613524ca3b938b0b6fa17e1d288419c,585af7e21c864652a15248b85c34808e16604c9e,antirez,antirez@gmail.com,Sat May 8 03:04:00 2010 +0200,1273280640,minor changes to improve code readability,16.0,18.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10443.0,487.0,0.017372685185185185,2002.0,58.56162558294471,1029.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
585af7e21c864652a15248b85c34808e16604c9e 8063b99da677afc470342a3f75552950b6a487db,45ae650129bf7b665ade56e0dc6bd880f1e4ad07,antirez,antirez@gmail.com,Mon May 10 15:09:25 2010 +0200,1273496965,Merge branch 'check-aof' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
45ae650129bf7b665ade56e0dc6bd880f1e4ad07,89e689c592837b7af30259d0d1432ed7faef92ee,antirez,antirez@gmail.com,Mon May 10 15:26:01 2010 +0200,1273497961,"while loading the rdb file don't add the key to the dictionary at all if it's already expired, instead of removing it just after the insertion.",7.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10441.0,488.0,2.5152893518518518,2003.0,1.3975685736767272,1030.0,Feature Addition,False,,
89e689c592837b7af30259d0d1432ed7faef92ee,a34e0a2574ee4482ca4ce6282ce6570f2d23d0c2,antirez,antirez@gmail.com,Mon May 10 18:50:55 2010 +0200,1273510255,CONFIG command now supports hot modification of RDB saving parameters.,66.0,0.0,"redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER",3.0,1.0,1.0,0.5987216622099321,6.0,3616.0,505.0,53.55991512345679,2005.0,3.348826038140755,1033.0,None,False,,
a34e0a2574ee4482ca4ce6282ce6570f2d23d0c2,1b67773229da874edd04c317a47470739d2b68e4,antirez,antirez@gmail.com,Mon May 10 20:56:54 2010 +0200,1273517814,CONFIG now can change appendfsync policy at run time,28.0,1.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.5787946246321198,6.0,5403.0,532.0,1.7318344907407408,2007.5,6.85939726813022,1035.0,None,False,,
1b67773229da874edd04c317a47470739d2b68e4,dc05abde89dc5e06748abad7e6b720b5f3506e58,antirez,antirez@gmail.com,Tue May 11 11:02:24 2010 +0200,1273568544,better use of encoding inforamtion in dictEncObjKeyCompare,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10521.0,491.0,0.5871527777777777,2009.0,2.7031342400946183,1036.0,Perfective,False,,
dc05abde89dc5e06748abad7e6b720b5f3506e58,bf02809825a02936af82ebb784fe375b791787b8,antirez,antirez@gmail.com,Tue May 11 11:15:36 2010 +0200,1273569336,added specialized function to compare string objects for perfect match that is optimized for this task,19.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10521.0,492.0,0.009166666666666668,2010.0,110.0909090909091,1037.0,Feature Addition,False,,
bf02809825a02936af82ebb784fe375b791787b8,e5b7a215e8c111cb759a69448f9c63f8c844aad0,antirez,antirez@gmail.com,Tue May 11 12:13:37 2010 +0200,1273572817,hand written code to turn a long long into a string -> very big speed win,14.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10534.0,493.0,0.040289351851851854,2011.0,25.82045389255961,1038.0,None,False,True,"[""ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c"", ""bd59ecfb9293e5d19d0bc3b7654ba78aa544a59f""]"
e5b7a215e8c111cb759a69448f9c63f8c844aad0,ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c,antirez,antirez@gmail.com,Tue May 11 14:13:53 2010 +0200,1273580033,"long long to string conversion speedup applied in other places as well. Still the code has bugs, fixing right now...",49.0,21.0,"redis.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER",3.0,1.0,1.0,0.8526075305027511,6.0,3654.0,512.0,0.56625,2013.0,5.561408654356391,1041.0,Corrective,True,,
ee14da56e6f725509a4dbfc4fe46ef8d8fe7621c,bd59ecfb9293e5d19d0bc3b7654ba78aa544a59f,antirez,antirez@gmail.com,Tue May 11 14:30:56 2010 +0200,1273581056,"fixed a problem leading to crashes, as keys can't be currently specially encoded, so we can't encode integers at object loading time... For now this can be fixed passing a few flags, or later can be fixed allowing encoded keys as well",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10558.0,495.0,0.011840277777777778,2015.0,85.4574780058651,1042.0,Corrective,True,,
bd59ecfb9293e5d19d0bc3b7654ba78aa544a59f,ad30aa606911d11119670083a6a96e8d446f4341,antirez,antirez@gmail.com,Tue May 11 16:12:22 2010 +0200,1273587142,load objects encoded from disk directly without useless conversion,22.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10558.0,496.0,0.07043981481481483,2016.0,15.196516595464999,1043.0,None,False,,
1b67773229da874edd04c317a47470739d2b68e4,6485f293827bed97a791ff6c88a8f3d92b00b1c5,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue May 11 22:46:24 2010 +0200,1273610784,fix to return error when calling INCR on a non-string type,3.0,3.0,"redis.c,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,6.0,6471.0,606.0,2.682442129629629,97.5,2.9204552328008253,98.0,Corrective,True,,
6485f293827bed97a791ff6c88a8f3d92b00b1c5 ad30aa606911d11119670083a6a96e8d446f4341,abce5627d7ce3bc1f5d2a15f65af11874bec169a,antirez,antirez@gmail.com,Wed May 12 11:51:01 2010 +0200,1273657861,Merge branch 'vm-speedup',,,,,,,,,,,,,,,Merge,False,,
abce5627d7ce3bc1f5d2a15f65af11874bec169a,418807d2d55fa6632ce1dca1f58ad7ee29f1ff00,antirez,antirez@metal.(none),Wed May 12 11:56:12 2010 +0200,1273658172,fixed compilation warnings in the AOF sanity check tool,1.0,0.0,"redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,184.0,5.0,6.803726851851853,2017.0,1.1469782696711022,1044.0,Corrective,True,,
418807d2d55fa6632ce1dca1f58ad7ee29f1ff00,8c096b16a1ab942413020c91138398d8a23bd64e,antirez,antirez@gmail.com,Wed May 12 15:07:39 2010 +0200,1273669659,"If a float can be casted to a long long without rounding loss, we can use the integer conversion function to write the score on disk. This is a seriuous speedup",4.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10573.0,498.0,0.6814236111111112,2018.0,2.4675159235668787,1045.0,None,False,,
8c096b16a1ab942413020c91138398d8a23bd64e,128e89dde29a15d39c5e266650c419e64d5b17ee,antirez,antirez@gmail.com,Wed May 12 17:22:39 2010 +0200,1273677759,use withscores when performing the dataset digest,1.0,1.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,2369.0,110.0,0.7751736111111112,2019.0,2.29003359462486,1046.0,None,False,True,"[""758b6d4c272c8132fd9090022b8b84a394062b91""]"
128e89dde29a15d39c5e266650c419e64d5b17ee,5107436cdf7c4ec25b7ea5ff4de87dfc10eeb2db,antirez,antirez@gmail.com,Wed May 12 21:51:48 2010 +0200,1273693908,"added overflow check in the double -> long long conversion trick to avoid integer overflows. I think this was not needed in practical terms, but it is safer",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10576.0,499.0,0.28065972222222224,2020.0,4.563033527155759,1047.0,Feature Addition,False,,
5107436cdf7c4ec25b7ea5ff4de87dfc10eeb2db,fe24458996667f1ee8eac6ab899cdd63f3c5dc22,antirez,antirez@gmail.com,Thu May 13 10:28:00 2010 +0200,1273739280,"Yet another version of the double saving code, with comments explaining what's happening there",12.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10576.0,500.0,0.5251388888888889,2021.0,2.9042581327691086,1048.0,None,False,,
fe24458996667f1ee8eac6ab899cdd63f3c5dc22,88e8d89f1e2a3b032f1b5446b3328f4f256f858a,antirez,antirez@gmail.com,Thu May 13 10:47:06 2010 +0200,1273740426,explicitly checks with ifdefs if our floating point and long long assumptions are verified,2.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10587.0,501.0,0.013263888888888893,2022.0,76.39267015706804,1049.0,None,False,,
88e8d89f1e2a3b032f1b5446b3328f4f256f858a,fb82e75cd118d84e46acc1d73c48aa8c23c3118a,antirez,antirez@gmail.com,Thu May 13 11:53:56 2010 +0200,1273744436,include limits.h otherwise no double precison macros,3.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10589.0,502.0,0.046412037037037036,2023.0,22.546134663341647,1050.0,None,False,,
fb82e75cd118d84e46acc1d73c48aa8c23c3118a,32a6651355cc75f19f40b7d7a4cbd419ea19f39f,antirez,antirez@gmail.com,Thu May 13 13:36:42 2010 +0200,1273750602,very strong speedup in saving time performance when there are many integers in the dataset. Instead of decoding the object before to pass them to the rdbSaveObject layer we check asap if the object is integer encoded and can be written on disk as an integer.,42.0,29.0,"TODO,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.743898745288434,6.0,5337.0,636.0,3.0147511574074075,2024.5,1.1668444390155792,1052.0,None,False,,
3350558346a07600bb7529781638696e04c425cc,9376e434f08003678e8042855bc5c35d406b8db2,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 13 14:15:06 2010 +0200,1273752906,feed SETEX as SET and EXPIREAT to AOF,44.0,29.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10614.0,504.0,0.02666666666666667,99.0,38.5,99.0,None,False,,
32a6651355cc75f19f40b7d7a4cbd419ea19f39f 9376e434f08003678e8042855bc5c35d406b8db2,9682a58fca1c53cecbf1b7a65bcf343f1f53c098,antirez,antirez@gmail.com,Thu May 13 14:24:41 2010 +0200,1273753481,conflicts resolved,,,,,,,,,,,,,,,Merge,False,,
9682a58fca1c53cecbf1b7a65bcf343f1f53c098,7a121e60f2c079a9d6556971d05c06da2383b66a,antirez,antirez@gmail.com,Thu May 13 14:30:36 2010 +0200,1273753836,makefile deps updated,5.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,113.0,37.0,8.037581018518518,2026.0,1.1244155421508049,1053.0,None,False,,
7a121e60f2c079a9d6556971d05c06da2383b66a,b58ba10526f5894fa74821bd37d6e0324de69aba,Ashley Martens,ashleym_72@yahoo.com,Thu May 13 16:11:47 2010 -0700,1273792307,Add SIGTERM shutdown handling.,52.0,33.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10629.0,505.0,0.4560300925925926,0.0,0.0,0.0,Feature Addition,False,,
7a121e60f2c079a9d6556971d05c06da2383b66a,ba798261ce70a866d347978e942e35292da1f6a2,antirez,antirez@gmail.com,Fri May 14 13:41:57 2010 +0200,1273837317,"DEBUG DIGEST implemented, in order to improve the ability to test persistence and replication consistency",471.0,3.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,sha1.c,CAS_DELIMITER,sha1.h,CAS_DELIMITER",4.0,1.0,1.0,1.2284912699508956,6.0,2691.25,544.0,0.371791087962963,2028.5,1.7630569873928097,1057.0,Corrective,True,True,"[""8ba400493449f8757627713043ae6e5a8f04ce6d"", ""3863d8ea81373689ff9e53b1243d254e360c568a"", ""9caf1a20436bca57f011175c43003cf4b255420c"", ""cbae1d34f6f188921639a746dc308130bbf2aa04"", ""092418136490fc94f2520ede706846dac8e43b5e"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
ba798261ce70a866d347978e942e35292da1f6a2,a57d9cc437ced3d3fd7fce64d1f698052651824d,Bruno Deferrari,utizoc@gmail.com,Fri May 14 11:04:01 2010 -0300,1273845841,"If command is a shutdown, ignore errors on reply",4.0,1.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,631.0,86.0,6.968958333333332,0.0,0.0,0.0,None,False,,
a57d9cc437ced3d3fd7fce64d1f698052651824d,36e5db6d24f361b96eb6e1f51ac117c0c9fdaaab,Bruno Deferrari,utizoc@gmail.com,Fri May 14 11:38:09 2010 -0300,1273847889,Don't rely on cliReadReply being able to return on shutdown,9.0,4.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,634.0,87.0,0.023703703703703703,1.0,43.1875,1.0,None,False,,
a57d9cc437ced3d3fd7fce64d1f698052651824d,758b6d4c272c8132fd9090022b8b84a394062b91,antirez,antirez@gmail.com,Fri May 14 16:41:24 2010 +0200,1273848084,"use DEBUG DIGEST in the test instead of a function that was doing a similar work, but in a much slower and buggy way",1.0,39.0,"test-redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,2369.0,111.0,1.9713541666666667,2031.0,1.5072655217965654,1058.0,Corrective,True,,
758b6d4c272c8132fd9090022b8b84a394062b91,98578b5704a8d147c31340b66d952b00efac9d59,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:31:11 2010 +0200,1273851071,split test suite into multiple files; runs redis-server in isolation,2995.0,254.0,"redis.tcl,CAS_DELIMITER,test/assets/default.conf,CAS_DELIMITER,test/support/redis.tcl,CAS_DELIMITER,test/support/server.tcl,CAS_DELIMITER,test/support/test.tcl,CAS_DELIMITER,test/support/tmpfile.tcl,CAS_DELIMITER,test/support/util.tcl,CAS_DELIMITER,test/test_helper.tcl,CAS_DELIMITER,test/tmp/.gitignore,CAS_DELIMITER,test/unit/auth.tcl,CAS_DELIMITER,test/unit/basic.tcl,CAS_DELIMITER,test/unit/expire.tcl,CAS_DELIMITER,test/unit/other.tcl,CAS_DELIMITER,test/unit/protocol.tcl,CAS_DELIMITER,test/unit/sort.tcl,CAS_DELIMITER,test/unit/type/hash.tcl,CAS_DELIMITER,test/unit/type/list.tcl,CAS_DELIMITER,test/unit/type/set.tcl,CAS_DELIMITER,test/unit/type/zset.tcl,CAS_DELIMITER",19.0,2.0,7.0,3.775971940955911,6.0,13.36842105263158,16.0,1.101740984405458,109.0,1.0477712817189695,17.0,Preventative,False,True,"[""35453d992fff6848690a5c802664ed64cd55ec94"", ""1488645e15f5a2cf829ecd5eae1b4873e60645fc"", ""ab72b4833d2054231437acccec36f32f07290075"", ""fdfb02e7ff6e25f94dda2e649c18fa4addac4cc4"", ""c4669d257fd0a375e7a94d26538be9ad28ac6b19"", ""184d74abc628a1fccf66d34505a8c5505f82d21b"", ""4774a53b247bb1f75fb175039c6af70a61462a94"", ""e39c8b5047c63336f67a7749e8f8cdd539c5eb22"", ""bad7d097e95ec0735c41f85b50ace65bec6134ae"", ""efc5d4cc0dd285b45061d61d7a717777aa8bc7a0"", ""3c23ee1ba265b6e420579dcbf94bd25ece23e9fe"", ""5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca"", ""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b"", ""ab52d1f4a8f3173622e0758d6f82f1aff0812b93"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5"", ""fc365a3a001d0ec55e6bde914708911aa1b524c4"", ""f63321207347d96852948cd0a9fb01bf0f0b4252""]"
98578b5704a8d147c31340b66d952b00efac9d59,35453d992fff6848690a5c802664ed64cd55ec94,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:38:12 2010 +0200,1273851492,use DEBUG DIGEST in new test suite,3.0,45.0,"test/support/util.tcl,CAS_DELIMITER,test/unit/other.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.5435644431995964,6.0,209.0,2.0,0.004872685185185185,119.5,154.91923990498816,19.0,Corrective,True,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
35453d992fff6848690a5c802664ed64cd55ec94,47bebf15fa2b88e992253fabd879a43f4fb12c8f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:42:07 2010 +0200,1273851727,start servers on different ports to prevent conflicts,4.0,1.0,"test/support/server.tcl,CAS_DELIMITER,test/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9709505944546686,6.0,79.5,2.0,0.0075925925925925935,121.5,99.78048780487805,21.0,None,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
47bebf15fa2b88e992253fabd879a43f4fb12c8f,4fb6d00c979984f7c462d5db1cadfdb0fa087dab,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:45:27 2010 +0200,1273851927,extract code to kill a server to a separate proc,23.0,20.0,"test/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,112.0,2.0,0.0023148148148148147,123.0,433.0,22.0,None,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
4fb6d00c979984f7c462d5db1cadfdb0fa087dab,239515bccea55b34ba5d706741894b605cb6b3d1,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:49:39 2010 +0200,1273852179,check for memory leaks before killing a server,9.0,0.0,"test/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,115.0,3.0,0.0029166666666666672,124.0,343.8571428571428,23.0,None,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
239515bccea55b34ba5d706741894b605cb6b3d1,628e1c6910c00205da36e3ea1ddc4a4c74cfc857,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 17:54:27 2010 +0200,1273852467,update makefile to use the new test suite,2.0,4.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,117.0,39.0,0.1753472222222222,125.0,6.702970297029704,101.0,Feature Addition,False,,
628e1c6910c00205da36e3ea1ddc4a4c74cfc857,1488645e15f5a2cf829ecd5eae1b4873e60645fc,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 18:01:39 2010 +0200,1273852899,fix cleaning up tmp folder,2.0,1.0,"test/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,50.0,2.0,0.013564814814814814,126.0,74.72013651877134,24.0,Corrective,True,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
1488645e15f5a2cf829ecd5eae1b4873e60645fc,47868511523c855799c315977b5d480f6f15a4be,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 18:08:53 2010 +0200,1273853333,wait for redis-server to be settled and ready for connections,10.0,2.0,"test/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,124.0,4.0,0.01335648148148148,127.0,75.87001733102255,25.0,None,False,True,"[""ab72b4833d2054231437acccec36f32f07290075""]"
47868511523c855799c315977b5d480f6f15a4be,ab72b4833d2054231437acccec36f32f07290075,antirez,antirez@gmail.com,Fri May 14 18:48:33 2010 +0200,1273855713,"minor fixes to the new test suite, html doc updated",3067.0,3065.0,"Makefile,CAS_DELIMITER,doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SponsorshipHowto.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,test/assets/default.conf,CAS_DELIMITER,test/support/redis.tcl,CAS_DELIMITER,test/support/server.tcl,CAS_DELIMITER,test/support/test.tcl,CAS_DELIMITER,test/support/tmpfile.tcl,CAS_DELIMITER,test/support/util.tcl,CAS_DELIMITER,test/test_helper.tcl,CAS_DELIMITER,test/tmp/.gitignore,CAS_DELIMITER,test/unit/auth.tcl,CAS_DELIMITER,test/unit/basic.tcl,CAS_DELIMITER,test/unit/expire.tcl,CAS_DELIMITER,test/unit/other.tcl,CAS_DELIMITER,test/unit/protocol.tcl,CAS_DELIMITER,test/unit/sort.tcl,CAS_DELIMITER,test/unit/type/hash.tcl,CAS_DELIMITER,test/unit/type/list.tcl,CAS_DELIMITER,test/unit/type/set.tcl,CAS_DELIMITER,test/unit/type/zset.tcl,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/support/tmpfile.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/tmp/.gitignore,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",59.0,4.0,14.0,4.8385466184760775,6.0,71.0,198.0,52.9738704488387,2061.0,1.4517776062716643,17.0,Corrective,True,True,"[""c4669d257fd0a375e7a94d26538be9ad28ac6b19""]"
ab72b4833d2054231437acccec36f32f07290075,5d373da96a7c2b38912cd925c456d719ea1a8933,antirez,antirez@gmail.com,Fri May 14 18:58:37 2010 +0200,1273856317,"ZUNION,ZINTER -> ZUNIONSTORE,ZINTERSTORE",87.0,38.0,"doc/CommandReference.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",8.0,3.0,3.0,2.4425925529369485,6.0,1474.125,568.0,18.709418402777786,2094.5,33.78576572134936,18.0,None,False,,
5d373da96a7c2b38912cd925c456d719ea1a8933,8ba400493449f8757627713043ae6e5a8f04ce6d,antirez,antirez@metal.(none),Fri May 14 19:21:30 2010 +0200,1273857690,"Fixed sha1.c compilation on Linux, due to endianess detection lameness",11.0,1.0,"sha1.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,265.0,1.0,0.2357986111111111,2099.0,5.240907082903843,1062.0,Corrective,True,True,"[""4d16bb253c8807e45abcd776fcf6521c525a3f2b""]"
8ba400493449f8757627713043ae6e5a8f04ce6d,4d16bb253c8807e45abcd776fcf6521c525a3f2b,antirez,antirez@gmail.com,Fri May 14 19:24:01 2010 +0200,1273857841,one more fix for endianess detection,0.0,2.0,"sha1.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,275.0,2.0,0.0017476851851851852,2100.0,573.1854304635763,1063.0,Corrective,True,,
4d16bb253c8807e45abcd776fcf6521c525a3f2b,9cf9e6f197a0270a86b26ddfca65a6faa72da893,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 20:48:57 2010 +0200,1273862937,proc to retrieve values from INFO properties,9.0,4.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,158.0,1.0,0.08361111111111111,128.0,12.960132890365449,0.0,None,False,,
9cf9e6f197a0270a86b26ddfca65a6faa72da893,1c4114be4012250382e082f7821f163dca408ffd,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 20:50:32 2010 +0200,1273863032,store entire server object on the stack instead of just the client,41.0,16.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9819407868640976,6.0,91.5,2.0,0.08471064814814815,129.5,9.853668533952726,2.0,None,False,,
1c4114be4012250382e082f7821f163dca408ffd,85ecc65edcdb08519a8cf1cd05b9eb910c26eb5c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 14 20:50:58 2010 +0200,1273863058,initial rough integration test for replication,43.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.9327931047282928,6.0,79.0,4.0,0.0005671296296296298,132.0,434.6015629392253,5.0,Feature Addition,False,,
4d16bb253c8807e45abcd776fcf6521c525a3f2b,3be2c9d732618512336f66f3de918941fc8f32d6,antirez,antirez@gmail.com,Fri May 14 22:56:06 2010 +0200,1273870566,fixed a warning seen with some GCC version under Linux,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10834.0,508.0,0.16491898148148149,2101.0,7.06358340936206,1064.0,Corrective,True,,
3be2c9d732618512336f66f3de918941fc8f32d6,3863d8ea81373689ff9e53b1243d254e360c568a,antirez,antirez@gmail.com,Fri May 14 22:57:39 2010 +0200,1273870659,more endianess detection fix for SHA1,1.0,1.0,"sha1.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,273.0,3.0,0.14835648148148148,2102.0,7.74052114214386,1065.0,Corrective,True,,
3863d8ea81373689ff9e53b1243d254e360c568a 85ecc65edcdb08519a8cf1cd05b9eb910c26eb5c,b78fd80f1e6c445b8b7d0a3058e4fe4a8cc25062,antirez,antirez@gmail.com,Sat May 15 00:38:16 2010 +0200,1273876696,Merge branch 'integration' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
b78fd80f1e6c445b8b7d0a3058e4fe4a8cc25062,76a224700d2745b7b292177f6b8eb0c2f122b73b,antirez,antirez@gmail.com,Sat May 15 00:43:43 2010 +0200,1273877023,"added pid info to the check memory leaks test, so that those tests don't appear to be duplicated",1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,134.0,2.0,0.16193287037037038,2103.0,7.175398470445286,19.0,Feature Addition,False,,
76a224700d2745b7b292177f6b8eb0c2f122b73b 36e5db6d24f361b96eb6e1f51ac117c0c9fdaaab,0f3010ab0d076d01b31019d902bfc94ca1e310d3,antirez,antirez@gmail.com,Sat May 15 10:40:58 2010 +0200,1273912858,Merge branch 'redis-cli-fix' of http://github.com/tizoc/redis,,,,,,,,,,,,,,,Merge,False,,
85ecc65edcdb08519a8cf1cd05b9eb910c26eb5c,fdfb02e7ff6e25f94dda2e649c18fa4addac4cc4,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 15 23:48:08 2010 +0200,1273960088,print warnings in redis log when a test raises an exception (very likely to be caused by something like a failed assertion),28.0,2.0,"redis.c,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.2555367253996503,6.0,3677.0,513.0,1.1224035493827162,135.0,1.5692350042377416,7.0,Corrective,True,,
0f3010ab0d076d01b31019d902bfc94ca1e310d3,d6f4c262a1854dffa2d6987cdae0de01837139f8,antirez,antirez@gmail.com,Sun May 16 00:59:08 2010 +0200,1273964348,faster INCR with very little efforts...,1.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10834.0,510.0,0.04930555555555555,2104.0,21.281690140845075,1066.0,None,False,,
d6f4c262a1854dffa2d6987cdae0de01837139f8,482b672df144cb575b69b6f2182a784f63d3d35c,antirez,antirez@gmail.com,Sun May 16 02:02:46 2010 +0200,1273968166,random refactoring and speedups,27.0,35.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.11911602665564835,6.0,5595.0,531.0,0.6693692129629629,2105.5,12.688310470825007,1068.0,None,False,,
482b672df144cb575b69b6f2182a784f63d3d35c,9e08e1b9edc480f6162c310ec44a3ec873ec2658,antirez,antirez@gmail.com,Sun May 16 19:15:12 2010 +0200,1274030112,redis version is now 1.3.11,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10826.0,512.0,0.7169675925925926,2107.0,2.394763180834921,1069.0,None,False,,
9e08e1b9edc480f6162c310ec44a3ec873ec2658,26ef09a83526e5099bcea5f035401532a61b24ab,antirez,antirez@gmail.com,Sun May 16 19:17:43 2010 +0200,1274030263,Redis version is now 1.3.12,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10826.0,513.0,0.0017476851851851852,2108.0,573.1854304635763,1070.0,None,False,True,"[""cbae1d34f6f188921639a746dc308130bbf2aa04""]"
26ef09a83526e5099bcea5f035401532a61b24ab,5436146c8dcd95c5ef3809f2830fb9c08edc4177,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 17 22:21:01 2010 +0200,1274127661,create release.h in make process and add this information to INFO listing,14.0,1.0,".gitignore,CAS_DELIMITER,Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.2309595631140104,6.0,3651.333333333334,563.0,5.543865740740743,138.0,1.0685173655869045,105.0,Feature Addition,False,True,"[""274e45e365a484ba0b3a957ead8c420484d6fca9"", ""3042fb0537c3ada4dd2882d4f800cc6080169596""]"
5436146c8dcd95c5ef3809f2830fb9c08edc4177,73287b2b576fa6a1ff1b61467286cbd5458881d2,antirez,antirez@gmail.com,Tue May 18 00:36:48 2010 +0200,1274135808,buliding of release.h moved into an external script. Avoided recompialtion of redis.c if git sha1 is the same as the previous one,94.0,5086.0,"Changelog,CAS_DELIMITER,Makefile,CAS_DELIMITER,doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,mkreleasehdr.sh,CAS_DELIMITER",109.0,2.0,2.0,6.608819672399582,6.0,54.57798165137615,706.0,112.76307689857306,2163.0,1.0018387534097748,1073.0,None,False,True,"[""274e45e365a484ba0b3a957ead8c420484d6fca9"", ""9b8834158bb173bc7e28413f0d6883b089230b58"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
73287b2b576fa6a1ff1b61467286cbd5458881d2,aed57a31af3a2fdaf0b8175568442ade979c7530,antirez,antirez@gmail.com,Tue May 18 00:39:49 2010 +0200,1274135989,html doc rebuild,6709.0,0.0,"doc/AppendCommand.html,CAS_DELIMITER,doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/BlpopCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/ConfigCommand.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/EventLibray.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/HackingStrings.html,CAS_DELIMITER,doc/HashCommandsSidebar.html,CAS_DELIMITER,doc/Hashes.html,CAS_DELIMITER,doc/HdelCommand.html,CAS_DELIMITER,doc/HexistsCommand.html,CAS_DELIMITER,doc/HgetCommand.html,CAS_DELIMITER,doc/HgetallCommand.html,CAS_DELIMITER,doc/HincrbyCommand.html,CAS_DELIMITER,doc/HlenCommand.html,CAS_DELIMITER,doc/HmsetCommand.html,CAS_DELIMITER,doc/HsetCommand.html,CAS_DELIMITER,doc/HsetnxCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/MultiExecCommand.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/PublishSubscribe.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/RedisBigData.html,CAS_DELIMITER,doc/RedisEventLibrary.html,CAS_DELIMITER,doc/RedisGuides.html,CAS_DELIMITER,doc/RedisInternals.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetexCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SubstrCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/VirtualMemorySpecification.html,CAS_DELIMITER,doc/VirtualMemoryUserGuide.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZrankCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyrankCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/ZunionCommand.html,CAS_DELIMITER,doc/ZunionstoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER",136.0,1.0,1.0,6.940394739176368,6.0,0.0,722.0,0.0016327954793028366,2285.5,23.34155746753254,865.0,Non Functional,False,,
aed57a31af3a2fdaf0b8175568442ade979c7530,9caf1a20436bca57f011175c43003cf4b255420c,antirez,antirez@gmail.com,Tue May 18 10:05:00 2010 +0200,1274169900,Solaris fixes,3.0,1.0,"sha1.c,CAS_DELIMITER,solarisfixes.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,145.5,6.0,103.0321412037037,2354.5,1.1467916713656066,1075.0,Corrective,True,,
9caf1a20436bca57f011175c43003cf4b255420c,a42453a5931165b87335fd2fb744ec1c3b89fe8f,antirez,antirez@gmail.com,Tue May 18 10:08:51 2010 +0200,1274170131,use git diff when generating release.h to check for dirty status,1.0,1.0,"mkreleasehdr.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9.0,1.0,0.3972569444444444,2356.0,3.5172624770562013,1076.0,None,False,True,"[""9b8834158bb173bc7e28413f0d6883b089230b58""]"
a42453a5931165b87335fd2fb744ec1c3b89fe8f,274e45e365a484ba0b3a957ead8c420484d6fca9,antirez,antirez@gmail.com,Tue May 18 12:17:51 2010 +0200,1274177871,build fixed when simpler shells are used to create release.h,3.0,3.0,"mkreleasehdr.sh,CAS_DELIMITER,redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,6.0,5420.0,517.0,0.3353587962962963,2357.5,7.326865581796657,1078.0,Corrective,True,True,"[""c7dadd15131c2d9cd8f3db468c060c37a4bf1714""]"
274e45e365a484ba0b3a957ead8c420484d6fca9,c7dadd15131c2d9cd8f3db468c060c37a4bf1714,antirez,antirez@gmail.com,Tue May 18 16:39:57 2010 +0200,1274193597,git hash 00000000 in reelase.h when git is not found enabled again after some shell scripting fix that is now compatible with most shells,1.0,1.0,"mkreleasehdr.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,9.0,3.0,0.1820138888888889,2359.0,6.494086226631056,1079.0,Corrective,True,True,"[""9b8834158bb173bc7e28413f0d6883b089230b58""]"
c7dadd15131c2d9cd8f3db468c060c37a4bf1714,2e5eb04e5014ddfddb18448e9aa4911731874caa,antirez,antirez@gmail.com,Wed May 19 11:06:43 2010 +0200,1274260003,It's now possible to turn off and on the AOF via CONFIG,81.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10831.0,516.0,0.9506018518518521,2360.0,2.051965129304047,1080.0,None,False,True,"[""30dd89b6b72643beafa098344752812029ce7bd9""]"
2e5eb04e5014ddfddb18448e9aa4911731874caa,30dd89b6b72643beafa098344752812029ce7bd9,antirez,antirez@gmail.com,Wed May 19 13:36:32 2010 +0200,1274268992,Fix for 'CONFIG SET appendonly no',3.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10910.0,517.0,0.10403935185185187,2361.0,10.611747691623094,1081.0,Corrective,True,,
fdfb02e7ff6e25f94dda2e649c18fa4addac4cc4 30dd89b6b72643beafa098344752812029ce7bd9,46b614edf7522e2bf8d3512fab347a9c9d4a1d70,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 19 14:53:57 2010 +0200,1274273637,Merge branch 'master' into integration,,,,,,,,,,,,,,,Merge,False,,
46b614edf7522e2bf8d3512fab347a9c9d4a1d70,53cbf66caf40c44f081336061a8082b08c8f3a28,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 19 14:33:39 2010 +0200,1274272419,initial tests for AOF (and small changes to server.tcl to support these),128.0,26.0,"tests/integration/aof.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",4.0,1.0,3.0,1.2849154014881579,6.0,99.75,10.0,3.2323148148148144,141.5,0.8544850080550503,11.0,Feature Addition,False,,
53cbf66caf40c44f081336061a8082b08c8f3a28,469c4e45c3d64a6331249c17b953d928a672b692,antirez,antirez@gmail.com,Wed May 19 23:02:30 2010 +0200,1274302950,TODO updated,13.0,23.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,73.0,134.0,6.392916666666666,2362.0,1.1564231245519132,1082.0,None,False,,
469c4e45c3d64a6331249c17b953d928a672b692,b36d1c309136051587db90391876125fc95ea348,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 20 11:02:08 2010 +0200,1274346128,fix lookup of keys with length larger than ZIPMAP_BIGLEN,19.0,4.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,441.0,17.0,48.874837962962964,144.0,1.0204604258894483,106.0,Corrective,True,,
b36d1c309136051587db90391876125fc95ea348,d6d3f92fb0b9886e500731111af7d7bd795f7d32,antirez,antirez@gmail.com,Thu May 20 12:03:02 2010 +0200,1274349782,added regression for zipmap bug,7.0,0.0,"TODO,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,6.0,176.0,136.0,3.1302141203703706,2363.5,2.0023129315027344,20.0,Corrective,True,,
d6d3f92fb0b9886e500731111af7d7bd795f7d32,9b8834158bb173bc7e28413f0d6883b089230b58,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 20 12:33:33 2010 +0200,1274351613,fix compile error on solaris,4.0,3.0,"mkreleasehdr.sh,CAS_DELIMITER,solarisfixes.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,6.0,14.5,7.0,1.9660243055555555,145.5,1.4005502141230308,108.0,Corrective,True,True,"[""3042fb0537c3ada4dd2882d4f800cc6080169596""]"
9b8834158bb173bc7e28413f0d6883b089230b58 b58ba10526f5894fa74821bd37d6e0324de69aba,c14753cea16cc963363b0d3002dc94b33c1f2075,antirez,antirez@gmail.com,Thu May 20 12:38:43 2010 +0200,1274351923,Merge http://github.com/ngmoco/redis,,,,,,,,,,,,,,,Merge,False,,
c14753cea16cc963363b0d3002dc94b33c1f2075,fab43727b43de73add99dfc3f25a69ac0777fd67,antirez,antirez@gmail.com,Thu May 20 12:50:57 2010 +0200,1274352657,shutdown on SIGTERM,21.0,14.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10911.0,518.0,0.9683449074074074,2365.0,2.0326898942210003,1084.0,None,False,,
fab43727b43de73add99dfc3f25a69ac0777fd67,8513a757abb1edf9e85f368df9072b22218defe3,antirez,antirez@gmail.com,Thu May 20 12:53:26 2010 +0200,1274352806,minor change to shutdown,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10918.0,519.0,0.001724537037037037,2366.0,580.8657718120805,1085.0,None,False,,
fab43727b43de73add99dfc3f25a69ac0777fd67,f166bb1d500dcecb14bff13312a4e7d2a76356c7,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 20 13:58:58 2010 +0200,1274356738,code to enable running tests with the vm enabled,27.0,14.0,"tests/assets/default.conf,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.384140652896508,6.0,178.33333333333337,9.0,2.5835763888888894,148.0,1.149690704795633,14.0,Preventative,False,True,"[""c4669d257fd0a375e7a94d26538be9ad28ac6b19"", ""e39c8b5047c63336f67a7749e8f8cdd539c5eb22"", ""5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca"", ""a5062bbab0a1619523a9562cec2256de16149c29""]"
8513a757abb1edf9e85f368df9072b22218defe3 f166bb1d500dcecb14bff13312a4e7d2a76356c7,6185fd3532704ef28012194d18ceda40096e332b,antirez,antirez@gmail.com,Thu May 20 13:59:59 2010 +0200,1274356799,Merge branch 'test_vm' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
8513a757abb1edf9e85f368df9072b22218defe3,cbae1d34f6f188921639a746dc308130bbf2aa04,antirez,antirez@metal.(none),Thu May 20 16:50:40 2010 +0200,1274367040,Fix for DEBUG DIGEST,16.0,8.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,6.0,5637.0,541.0,2.3906712962962966,2367.5,4.139559789938324,1087.0,Corrective,True,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
6185fd3532704ef28012194d18ceda40096e332b cbae1d34f6f188921639a746dc308130bbf2aa04,834c72fa57cb980d0858eb5cf81438ebb8a259f6,antirez,antirez@gmail.com,Thu May 20 17:09:00 2010 +0200,1274368140,Merge branch 'master' of github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
834c72fa57cb980d0858eb5cf81438ebb8a259f6,10dea8dc1b6515bb8af6723fed4c28594572cefb,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 20 19:43:28 2010 +0200,1274377408,fix memory leak on 32-bit builds,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10922.0,521.0,0.12,150.0,9.333333333333334,109.0,Corrective,True,,
10dea8dc1b6515bb8af6723fed4c28594572cefb,fd80abda0888564f26437834739ae456276771ff,antirez,antirez@gmail.com,Thu May 20 21:20:10 2010 +0200,1274383210,Don't exit with error in tests temp file cleanup if there are no files to clean,2.0,2.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,92.0,5.0,0.3063888888888889,2369.0,4.263825929283772,21.0,Perfective,False,,
fd80abda0888564f26437834739ae456276771ff,4993adbaaf4d5303549adef619883d87d16db46b,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 09:33:47 2010 +0200,1274427227,include solaris fixes in sha1.c,3.0,0.0,"sha1.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,273.0,5.0,2.9783217592592592,151.0,1.3357595588492464,110.0,Corrective,True,True,"[""792a94153a44014b52655d4c1af0f298dc9dc9b1""]"
10dea8dc1b6515bb8af6723fed4c28594572cefb,c4669d257fd0a375e7a94d26538be9ad28ac6b19,antirez,antirez@metal.(none),Fri May 21 12:00:13 2010 +0200,1274436013,"tests suite initial support for valgrind, fixed the old test suite until the new one is able to target a specific host/port",55.0,7.0,"test-redis.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.6060604278337609,6.0,857.0,123.0,2.7778047839506166,2371.0,1.132150326709932,23.0,Corrective,True,True,"[""72dff2c084ce67464bded6bc9f5674d5e01b2cf7""]"
c4669d257fd0a375e7a94d26538be9ad28ac6b19 fd80abda0888564f26437834739ae456276771ff,dcb518fd161ff326f576d4012ee82fa08d1e91df,antirez,antirez@metal.(none),Fri May 21 12:00:50 2010 +0200,1274436050,Merge branch 'master' of git@github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
dcb518fd161ff326f576d4012ee82fa08d1e91df,2f4dd7e0fd0581ddf630ea5d928a9dce42f175e7,antirez,antirez@metal.(none),Fri May 21 12:30:56 2010 +0200,1274437856,"minor fix for the skiplist code, resulting in a false positive with valgrind, and in general into a useless small allocation",3.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10922.0,522.0,0.6996296296296296,2373.0,2.42932768660667,1089.0,Corrective,True,,
2f4dd7e0fd0581ddf630ea5d928a9dce42f175e7,c22b2ec863386476c52e7442aa497151a8986af1,antirez,antirez@gmail.com,Fri May 21 13:58:04 2010 +0200,1274443084,by default test with valgrind does not show full leak info,1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,195.0,6.0,0.08184027777777778,2374.0,13.218922358930845,24.0,Preventative,False,,
c22b2ec863386476c52e7442aa497151a8986af1,89328c92445726df3b513da6dd410fd4403bd233,antirez,antirez@gmail.com,Fri May 21 13:59:16 2010 +0200,1274443156,html doc updated,2.0,2.0,"doc/RpushCommand.html,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,40.0,8.0,3.555173611111111,2375.0,1.2812802156481653,866.0,Non Functional,False,,
89328c92445726df3b513da6dd410fd4403bd233,be00fa244d9b8e107b080c756bf73d3137c3ccd1,antirez,antirez@gmail.com,Fri May 21 14:00:21 2010 +0200,1274443221,redis version is now 1.3.14 (aka 2.0.0 RC1),1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10924.0,523.0,0.06209490740740741,2376.0,17.104380242311276,1090.0,None,False,,
be00fa244d9b8e107b080c756bf73d3137c3ccd1,7fc98533392f455974d546c88bd4d41c85e6fe6d,antirez,antirez@gmail.com,Fri May 21 14:03:17 2010 +0200,1274443397,Changelog updated,32.0,0.0,"Changelog,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,833.0,49.0,3.5600578703703705,2377.0,1.2808943102646713,1091.0,None,False,,
7fc98533392f455974d546c88bd4d41c85e6fe6d 4993adbaaf4d5303549adef619883d87d16db46b,329cdba00afd2f97ca828134cb5c24316d516fce,antirez,antirez@gmail.com,Fri May 21 14:42:19 2010 +0200,1274445739,Merge branch 'solaris' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
329cdba00afd2f97ca828134cb5c24316d516fce,fda32cb6013c65f765fa9b203bed23e07d35ba59,antirez,antirez@gmail.com,Fri May 21 15:48:39 2010 +0200,1274449719,"Master is now already unfreezed, unstable, and ready to hacking sessions!",1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10924.0,524.0,0.07520833333333334,2378.0,14.296398891966758,1092.0,None,False,,
fda32cb6013c65f765fa9b203bed23e07d35ba59,75a190ca72f4819841a45a7a8c2f6fe3653a5ac0,antirez,antirez@gmail.com,Tue May 25 10:06:37 2010 +0200,1274774797,gitignore updated,3.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,15.0,9.0,7.49,2379.0,1.1335113484646195,1093.0,None,False,,
75a190ca72f4819841a45a7a8c2f6fe3653a5ac0,37ab76c99d9e86076c223d9b20756afd2aa2a99b,antirez,antirez@gmail.com,Tue May 25 13:15:11 2010 +0200,1274786111,WATCH for MULTI/EXEC (CAS alike concurrency),161.0,21.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10924.0,525.0,3.893425925925927,2380.0,1.2568432067349995,1094.0,None,False,True,"[""1ad4d31631315d0c1e140b0a831e30fa90163fec"", ""ca3f830b32a0a8303a5a761d6212925d9b5ac365""]"
37ab76c99d9e86076c223d9b20756afd2aa2a99b,87c68815c3c932e209a88aa3cc8280c6c0587c27,antirez,antirez@gmail.com,Tue May 25 13:21:23 2010 +0200,1274786483,minor bug fixed in WATCH,8.0,0.0,"redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",3.0,1.0,1.0,1.2987949406953985,6.0,4021.0,636.0,5.240775462962963,2382.0,1.0825575036646204,1097.0,Corrective,True,,
87c68815c3c932e209a88aa3cc8280c6c0587c27,c20c189db50f331786846c821c863b44aea5e006,antirez,antirez@gmail.com,Tue May 25 14:04:46 2010 +0200,1274789086,WATCH tests,68.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.19143325481419346,6.0,46.5,7.0,2.0432465277777783,2384.5,1.2447086013374005,26.0,Preventative,False,,
c20c189db50f331786846c821c863b44aea5e006,9b30e1a207c3ce25e942c58e2e42021b452cfa3f,antirez,antirez@gmail.com,Tue May 25 19:30:24 2010 +0200,1274808624,WATCH is now able to detect keys removed by FLUSHALL and FLUSHDB,79.0,0.0,"redis.c,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER",3.0,2.0,3.0,1.047009635482533,6.0,3721.333333333334,530.0,3.434471450617284,2387.0,2.3661837005594046,28.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
9b30e1a207c3ce25e942c58e2e42021b452cfa3f,cef34df02af2e10a4374fd01efe31ea6f50fce34,antirez,antirez@gmail.com,Tue May 25 20:28:22 2010 +0200,1274812102,TODO updated,5.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,64.0,136.0,5.350925925925926,2389.0,1.1868835438657208,1099.0,None,False,,
cef34df02af2e10a4374fd01efe31ea6f50fce34,b167f87705c807dec100bda9b164e2e580bd2c5d,antirez,antirez@gmail.com,Tue May 25 21:26:10 2010 +0200,1274815570,RENAME is now WATCH-aware,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11095.0,528.0,0.08039351851851853,2390.0,13.438813705729912,1100.0,None,False,,
b167f87705c807dec100bda9b164e2e580bd2c5d,9005896c0a5bfc7164b7a439cb7c56b5dab8923a,antirez,antirez@gmail.com,Tue May 25 22:42:47 2010 +0200,1274820167,Version is now 2.1.1,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11096.0,529.0,0.05320601851851852,2391.0,19.79486621709811,1101.0,None,False,,
9005896c0a5bfc7164b7a439cb7c56b5dab8923a,bc000c1db00dafaba9aae9620b246b63e4130238,Josiah Carlson,josiah@ad.ly,Tue May 25 17:41:35 2010 -0700,1274834495,allow regular sets to be passed to zunionstore/zinterstore,42.0,22.0,"redis.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,6.0,5740.0,532.0,5.743668981481481,0.5,0.5435261852321296,0.0,None,False,,
bc000c1db00dafaba9aae9620b246b63e4130238,6531c94d28c8314c934847d421a79ddb31298aeb,antirez,antirez@gmail.com,Wed May 26 16:47:37 2010 +0200,1274885257,raise error on nested MULTI and WATCH inside multi,12.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11100.0,531.0,0.5875231481481481,2392.0,2.7020605965092,1102.0,None,False,,
bc000c1db00dafaba9aae9620b246b63e4130238,1ad4d31631315d0c1e140b0a831e30fa90163fec,antirez,antirez@gmail.com,Wed May 26 17:50:29 2010 +0200,1274889029,Fix EXEC bug that was leaving the client in dirty status when used with WATCH,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11111.0,532.0,0.043657407407407416,2393.0,23.905620360551428,1103.0,Corrective,True,,
6531c94d28c8314c934847d421a79ddb31298aeb 1ad4d31631315d0c1e140b0a831e30fa90163fec,90fdc82697823a4e8228ae7e5c5ada0f56d160d7,antirez,antirez@gmail.com,Wed May 26 17:55:28 2010 +0200,1274889328,Merge branch 'master' into nested-multi,,,,,,,,,,,,,,,Merge,False,,
bc000c1db00dafaba9aae9620b246b63e4130238,37dc9e5abbb9335ee3217e8295bd37d051dc16a4,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 26 18:18:37 2010 +0200,1274890717,require the flag -c to be used for redis-cli to read the last argument from stdin,14.0,155.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,641.0,89.0,1.2064120370370373,152.0,1.828904196327494,111.0,None,False,,
37dc9e5abbb9335ee3217e8295bd37d051dc16a4,a2f4f8711a7ded05d950fe0b784a5e4c7abeb298,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed May 26 18:22:05 2010 +0200,1274890925,build command outside while loop,9.0,11.0,"redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,500.0,90.0,0.002407407407407408,153.0,416.3846153846154,112.0,None,False,,
90fdc82697823a4e8228ae7e5c5ada0f56d160d7,4ea93ad3accd39bf950acb318d65f6eef755c176,antirez,antirez@gmail.com,Thu May 27 16:08:44 2010 +0200,1274969324,new multi/exec tests,16.0,0.0,"tests/unit/other.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,218.0,1.0,12.889016203703706,2394.0,1.07758544051738,29.0,Feature Addition,False,,
4ea93ad3accd39bf950acb318d65f6eef755c176,ca3f830b32a0a8303a5a761d6212925d9b5ac365,Vincent Palmer,shift@someone.section.me,Thu May 27 16:15:09 2010 +0100,1274973309,Fixed typo.,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11111.0,533.0,0.975462962962963,0.0,0.0,0.0,Corrective,True,,
ca3f830b32a0a8303a5a761d6212925d9b5ac365,ea2c08e92200dd4c746f2b4b04da611a34e49dcf,antirez,antirez@gmail.com,Fri May 28 00:20:12 2010 +0200,1274998812,changed the message in the Makefile with the new command like to run the test suite,1.0,2334.0,"Makefile,CAS_DELIMITER,test-redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.018210990074802768,6.0,1223.0,156.0,8.251174768518519,2395.5,1.0803564212919103,1105.0,Feature Addition,False,,
ea2c08e92200dd4c746f2b4b04da611a34e49dcf,8a3b0d2d9a2eb34f1277e22c3f0185b0bfe21959,antirez,antirez@gmail.com,Fri May 28 00:23:27 2010 +0200,1274999007,Added Git sha1 and dirty status in redis-server -v output,2.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11111.0,534.0,0.29743055555555553,2397.0,4.362129348587439,1106.0,Feature Addition,False,,
8a3b0d2d9a2eb34f1277e22c3f0185b0bfe21959,38db91713c81b58e97496abbe35a9d14d1e423e0,antirez,antirez@gmail.com,Fri May 28 10:35:23 2010 +0200,1275035723,added new option no-appendfsync-on-rewrite to avoid blocking on fsync() in the main thread while a background process is doing big I/O,22.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11112.0,535.0,0.4249537037037037,2398.0,3.3531975160692884,1107.0,Feature Addition,False,,
38db91713c81b58e97496abbe35a9d14d1e423e0,b0bd87f60cdeba2ae215b22978331987e5a96d38,antirez,antirez@gmail.com,Fri May 28 10:40:53 2010 +0200,1275036053,don't fsync after a rewrite if appendfsync is set to no. use aof_fsycn instead of fsync where appropriate,4.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11134.0,536.0,0.003819444444444444,2399.0,262.8181818181818,1108.0,None,False,True,"[""d5d23dabd7a72c63ceda017d560c362b4065d85b""]"
b0bd87f60cdeba2ae215b22978331987e5a96d38,d5d23dabd7a72c63ceda017d560c362b4065d85b,antirez,antirez@gmail.com,Fri May 28 10:48:04 2010 +0200,1275036484,"redis.conf new features the new option, a minor typo preventing the compilation fixed",21.0,1.0,"redis.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,6.0,5723.0,580.0,8.79109375,2400.5,101.26045643362114,1110.0,Corrective,True,,
8a3b0d2d9a2eb34f1277e22c3f0185b0bfe21959,5fc9229c3467ed22e68242fecf3a339309de8ab5,antirez,antirez@gmail.com,Fri May 28 12:24:47 2010 +0200,1275042287,Fixed ZINCR Nan bugs leading to server crash and added tests,33.0,0.0,"redis.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9833761901392236,6.0,5767.0,541.0,1.2360821759259255,2402.5,8.646677222632821,30.0,Corrective,True,True,"[""673e1fb7e4c171f5ead560f6886e877f43730cf0""]"
5fc9229c3467ed22e68242fecf3a339309de8ab5 a2f4f8711a7ded05d950fe0b784a5e4c7abeb298,3caf15e6da15b6b3f9af57803eb57a37c6f753cf,antirez,antirez@gmail.com,Fri May 28 20:26:01 2010 +0200,1275071161,Merge branch 'cli-stdin' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
3caf15e6da15b6b3f9af57803eb57a37c6f753cf,1a132bbc9c3a44de902d1bf8337118d21063e7ab,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 28 22:14:10 2010 +0200,1275077650,use qsort and bsearch to lookup commands in O(log(N)) instead of O(N),30.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11148.0,539.0,0.4092939814814815,154.0,3.4432316262760514,113.0,None,False,,
1a132bbc9c3a44de902d1bf8337118d21063e7ab,d55d5c5dd3d09d8a9c9d9b0e17adbb764dfaff06,antirez,antirez@gmail.com,Fri May 28 23:44:32 2010 +0200,1275083072,command table size calculated with sizeof,5.0,11.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11171.0,540.0,0.06275462962962962,2404.0,16.935079306528955,1112.0,None,False,,
d55d5c5dd3d09d8a9c9d9b0e17adbb764dfaff06,3d04d29e7fd49902f494754ec8911792fedf1be8,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 12:53:34 2010 +0200,1274439214,extracted general methods to zip.c for reuse in other zip* structures,80.0,75.0,"zip.c,CAS_DELIMITER,zipmap.c,CAS_DELIMITER",2.0,1.0,1.0,0.8773118802464468,5.0,228.0,18.0,0.5386921296296296,155.5,0.9640869733364844,115.0,None,False,,
3d04d29e7fd49902f494754ec8911792fedf1be8,11ac6ff613387b4bafa9b405974653112228e96f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 12:54:01 2010 +0200,1274439241,implementation for a ziplist with push and pop support,152.0,0.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.10106696361212417,1.0,0.0,0.0,0.0,157.5,0.0,117.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""56538477143b144f2267ce98805a7b6edc763528"", ""ac61f9062583d67dd43f7d698824464d1e30d84b""]"
11ac6ff613387b4bafa9b405974653112228e96f,08253bf42b7f1fdc000dedfb2580bc9cb375449d,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 13:16:08 2010 +0200,1274440568,code to iterate over a ziplist,75.0,6.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,150.0,1.0,0.015358796296296297,159.0,66.10926902788245,118.0,None,False,,
08253bf42b7f1fdc000dedfb2580bc9cb375449d,335d16bc0f8f18f0da929bf3be725b42287c1042,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 13:29:14 2010 +0200,1274441354,change iteration code to avoid allocating a new sds for each traversed entry,19.0,13.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,219.0,2.0,0.009097222222222222,160.0,110.92366412213741,119.0,Feature Addition,False,,
335d16bc0f8f18f0da929bf3be725b42287c1042,33c1269efc86a603c54c1045edc9402488a7224f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 14:11:09 2010 +0200,1274443869,check if *value is non-NULL before setting it,2.0,2.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,225.0,3.0,0.02910879629629629,161.0,35.35387673956261,120.0,None,False,,
33c1269efc86a603c54c1045edc9402488a7224f,779deb60f92ab2980c41f8cb408315fbac2fa54b,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 14:11:29 2010 +0200,1274443889,code to delete an inner range from the ziplist,57.0,0.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,225.0,4.0,0.0002314814814814815,162.0,4321.0,121.0,None,False,True,"[""fc2c0f7a6c9d515bff525c89b81df428277a17a0""]"
779deb60f92ab2980c41f8cb408315fbac2fa54b,ba5b4bde21de6fb0fbc73dc970eaff71050a26a6,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 15:44:47 2010 +0200,1274449487,rename ziplistDelete to ziplistDeleteRange,7.0,7.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,282.0,5.0,0.06479166666666666,163.0,16.434083601286176,122.0,None,False,,
ba5b4bde21de6fb0fbc73dc970eaff71050a26a6,924727d905ec6943857f7a0832196f595884d461,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 15:45:30 2010 +0200,1274449530,allow pointer to be stored to current element when iterating over ziplist,6.0,5.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,282.0,6.0,0.0004976851851851852,164.0,2010.3023255813955,123.0,None,False,,
924727d905ec6943857f7a0832196f595884d461,0f10458c4f1b9a7397bf72e4f787041069cc9e8a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 21 15:46:00 2010 +0200,1274449560,allow entries to be deleted in place when iterating over a ziplist,42.0,1.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,283.0,7.0,0.00034722222222222224,165.0,2881.0,124.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""b84186ff2dadea9fa67f512a743ab97196390f56""]"
0f10458c4f1b9a7397bf72e4f787041069cc9e8a,f6eb17477aa6394adc699b5ec45705df9c584363,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 14:58:58 2010 +0200,1274533138,move length housekeeping to a macro,6.0,6.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,324.0,8.0,0.9673379629629628,166.0,2.033764866352389,125.0,None,False,,
f6eb17477aa6394adc699b5ec45705df9c584363,29b14d5face8a434810794f524c8449581166adf,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 15:07:12 2010 +0200,1274533632,initial work for integer encoding in ziplists,208.0,44.0,"zip.c,CAS_DELIMITER,ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.9640787648082292,5.0,185.0,10.0,0.5492592592592592,167.5,1.9126983384469856,127.0,Feature Addition,False,True,"[""fc2c0f7a6c9d515bff525c89b81df428277a17a0"", ""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""b84186ff2dadea9fa67f512a743ab97196390f56"", ""169d2ef1e0259945e667a33db7944947a6b047a0"", ""f013f40003e5709203e31dcba4485f8342e2cccc""]"
29b14d5face8a434810794f524c8449581166adf,af5f66fb98d2cb3c62a6aa66bf468559f5e0e04f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 15:13:09 2010 +0200,1274533989,partial revert of c80df5 because ziplist functions are starting to divert too much from zipmap functions,74.0,34.0,"zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,415.0,19.0,1.0969328703703705,169.0,1.9116328145608017,128.0,None,False,,
af5f66fb98d2cb3c62a6aa66bf468559f5e0e04f,37fff074a2f79a63c3fefbcf95fe72d83549b084,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 15:18:30 2010 +0200,1274534310,move code from zip.c to ziplist.c,157.0,160.0,"zip.c,CAS_DELIMITER,ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.9999928216151336,5.0,267.0,12.0,0.007847222222222222,170.5,96.57522123893804,130.0,None,False,True,"[""fc2c0f7a6c9d515bff525c89b81df428277a17a0"", ""a24ba809d1709e4cebf032994c03842611575e2c"", ""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""6171250871e408928a172c09d5fdf41961720fbc"", ""8ce39260a4acfedea5ee8f9143d2d2a9ce82b498"", ""12d0195b3013aff008bb492cf59f31d823f024b0""]"
37fff074a2f79a63c3fefbcf95fe72d83549b084,75d8978e7a0acc5772aa5c6844a2d045d563a615,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 15:48:27 2010 +0200,1274536107,updated iteration code to work well with different encodings,62.0,28.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,531.0,11.0,0.020798611111111108,172.0,49.080133555926544,131.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""177a0a0b0d66ca5d25cf3d06907292e8c02f1825"", ""b84186ff2dadea9fa67f512a743ab97196390f56"", ""50d43a9823be553a393127bc45e507d3a60982d7"", ""9aba616866a113174366f53b6354f23c80766c37""]"
75d8978e7a0acc5772aa5c6844a2d045d563a615,c09c2c3b04f0df0e37c24ee10d29bdf49ae070ff,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 16:25:06 2010 +0200,1274538306,"code to compare strings with entries in ziplist, regardless of their encoding",47.0,1.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,565.0,12.0,0.025451388888888888,173.0,40.2905866302865,132.0,None,False,True,"[""c4aace9003e29fc9becce292683dd09bdce7785c"", ""a24ba809d1709e4cebf032994c03842611575e2c"", ""177a0a0b0d66ca5d25cf3d06907292e8c02f1825"", ""b84186ff2dadea9fa67f512a743ab97196390f56"", ""169d2ef1e0259945e667a33db7944947a6b047a0"", ""9aba616866a113174366f53b6354f23c80766c37""]"
c09c2c3b04f0df0e37c24ee10d29bdf49ae070ff,c7019f7019a7ded425e700f391263227e259bbcb,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 16:25:18 2010 +0200,1274538318,added header ziplist.h,10.0,0.0,"ziplist.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,2.0,1.0,1.1467245370370371,174.0,1.8720490123843068,133.0,Feature Addition,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""53b1ee34ddba1446d81f2ce07c402db271a94674""]"
c7019f7019a7ded425e700f391263227e259bbcb,aa549962a4227f8732e3c9448ba8910160ec3ec4,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 19:35:26 2010 +0200,1274549726,re-introduce ZIP_BIGLEN for clarity,2.0,1.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,611.0,13.0,0.13217592592592592,175.0,8.56567425569177,134.0,None,False,,
aa549962a4227f8732e3c9448ba8910160ec3ec4,6205b46387ef47e0fcb9bd6c9f371c9eb5cdd7e5,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 19:35:40 2010 +0200,1274549740,add function to retrieve length of ziplist,20.0,1.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,5.0,312.0,16.0,0.06618055555555556,176.5,3090.4918303102972,136.0,Feature Addition,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""56538477143b144f2267ce98805a7b6edc763528""]"
6205b46387ef47e0fcb9bd6c9f371c9eb5cdd7e5,c4aace9003e29fc9becce292683dd09bdce7785c,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 22 21:49:36 2010 +0200,1274557776,fix compare function of ziplist to only load integer from ziplist when it is encoded as integer,10.0,5.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,630.0,15.0,0.09300925925925926,178.0,11.751617720258837,137.0,Corrective,True,,
c4aace9003e29fc9becce292683dd09bdce7785c,4812cf287347b035c113f8afdc964a007e7744a4,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 11:33:38 2010 +0200,1275125618,add function to retrieve ziplist size in bytes,7.0,1.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,5.0,324.0,19.0,6.61875,179.5,1.1138489829621472,139.0,Feature Addition,False,True,"[""56538477143b144f2267ce98805a7b6edc763528""]"
4812cf287347b035c113f8afdc964a007e7744a4,fc2c0f7a6c9d515bff525c89b81df428277a17a0,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 11:35:48 2010 +0200,1275125748,fix some warnings,2.0,3.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,640.0,17.0,0.0015046296296296294,181.0,665.6153846153846,140.0,Corrective,True,True,"[""a24ba809d1709e4cebf032994c03842611575e2c""]"
fc2c0f7a6c9d515bff525c89b81df428277a17a0,dcb9cf4e8213744e431f38722d04b841f78b316c,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 15:40:40 2010 +0200,1275140440,initial implementation for making the ziplist doubly linked,119.0,40.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,639.0,18.0,0.1700462962962963,182.0,6.8807514293493055,141.0,Feature Addition,False,True,"[""56538477143b144f2267ce98805a7b6edc763528""]"
dcb9cf4e8213744e431f38722d04b841f78b316c,a5456b2cb69c5bde1ea5403c6459885b074a8575,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 16:20:01 2010 +0200,1275142801,use a struct to retrieve all details for an entry,41.0,32.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,718.0,19.0,0.02732638888888889,183.0,37.59466327827192,142.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70""]"
a5456b2cb69c5bde1ea5403c6459885b074a8575,d593c48869e1c815fd4b270a1820e71165dafba5,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 16:22:24 2010 +0200,1275142944,modify compare function to check if the encoding is equal before comparing,5.0,5.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,727.0,20.0,0.0016550925925925926,184.0,605.1958041958042,143.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
d593c48869e1c815fd4b270a1820e71165dafba5,c8d9e7f4c0c237ca75e0e53c0c643ef0f09f81bb,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 16:25:05 2010 +0200,1275143105,change ziplistRepr to use the entry struct,9.0,11.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,727.0,21.0,0.0018634259259259261,185.0,537.6459627329192,144.0,None,False,True,"[""3688d7f308877dd2e2c0c786ffa1e46d6bb34a13"", ""169d2ef1e0259945e667a33db7944947a6b047a0"", ""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70""]"
c8d9e7f4c0c237ca75e0e53c0c643ef0f09f81bb,03e52931dd4e7d3c9a87eaa0195fdb8b08ff74b2,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 16:26:55 2010 +0200,1275143215,rename argument names to s* to disambiguate from e*,10.0,10.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,725.0,22.0,0.0012731481481481485,186.0,786.4545454545455,145.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""6171250871e408928a172c09d5fdf41961720fbc""]"
03e52931dd4e7d3c9a87eaa0195fdb8b08ff74b2,bb57b965c4252a48472d99a1b2e7a30d66d65796,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 16:37:47 2010 +0200,1275143867,use the entry struct in zipRawEntryLength,3.0,7.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,725.0,23.0,0.007546296296296297,187.0,133.51533742331287,146.0,None,False,,
bb57b965c4252a48472d99a1b2e7a30d66d65796,0c0d0564121eb758fa25e2edf43cb1cf42aadbbc,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 17:38:23 2010 +0200,1275147503,extract a generic delete function that can be used in pop and delete(range),45.0,58.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,721.0,24.0,0.042083333333333334,188.0,24.762376237623762,147.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""169d2ef1e0259945e667a33db7944947a6b047a0"", ""56538477143b144f2267ce98805a7b6edc763528"", ""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70""]"
0c0d0564121eb758fa25e2edf43cb1cf42aadbbc,6435c76772bfc846c4f336d07f56668aef33a38b,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 18:52:49 2010 +0200,1275151969,function to insert an element at an arbitrary position in the list,46.0,33.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,708.0,25.0,0.05168981481481481,189.0,20.346171070309,148.0,None,False,True,"[""a24ba809d1709e4cebf032994c03842611575e2c"", ""177a0a0b0d66ca5d25cf3d06907292e8c02f1825"", ""6171250871e408928a172c09d5fdf41961720fbc"", ""169d2ef1e0259945e667a33db7944947a6b047a0"", ""56538477143b144f2267ce98805a7b6edc763528""]"
6435c76772bfc846c4f336d07f56668aef33a38b,1ce81fa59b9f49cdd764ca35b312816396c93239,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 19:09:37 2010 +0200,1275152977,replace functions to get pointers to head and tail by macros,7.0,17.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,721.0,26.0,0.011666666666666669,190.0,86.7142857142857,149.0,None,False,True,"[""169d2ef1e0259945e667a33db7944947a6b047a0""]"
1ce81fa59b9f49cdd764ca35b312816396c93239,7b1f85c0a24aecb2ed9a9d3cf9a4b61bd03f642b,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 19:26:35 2010 +0200,1275153995,use simpler encoding for the length of the previous entry,36.0,7.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,711.0,27.0,0.011782407407407408,191.0,85.87229862475442,150.0,None,False,,
7b1f85c0a24aecb2ed9a9d3cf9a4b61bd03f642b,a24ba809d1709e4cebf032994c03842611575e2c,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 19:34:14 2010 +0200,1275154454,fix compile warnings,21.0,20.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.6006085754131871,5.0,377.0,32.0,0.16953125,192.5,96.5923014367037,152.0,Corrective,True,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""b84186ff2dadea9fa67f512a743ab97196390f56""]"
a24ba809d1709e4cebf032994c03842611575e2c,c03206fdf1dc0241d97204aba813c13b82f40d6e,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 29 22:17:16 2010 +0200,1275164236,ziplistIndex now accepts negative indices,102.0,11.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.12831912909782706,5.0,377.5,34.0,0.1132175925925926,194.5,7.624412185647106,154.0,None,False,True,"[""177a0a0b0d66ca5d25cf3d06907292e8c02f1825""]"
c03206fdf1dc0241d97204aba813c13b82f40d6e,177a0a0b0d66ca5d25cf3d06907292e8c02f1825,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 01:37:03 2010 +0200,1275176223,code style consistency fixes,4.0,4.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,832.0,30.0,0.13873842592592592,196.0,8.207808459164095,155.0,Corrective,True,,
177a0a0b0d66ca5d25cf3d06907292e8c02f1825,033fb554bec6523beb638965dc8f4adb96887332,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 01:38:56 2010 +0200,1275176336,expose extra functionality from ziplist.c,17.0,4.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.4537163391869448,5.0,423.0,37.0,0.07067708333333332,197.5,386.8380993993779,157.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651"", ""53b1ee34ddba1446d81f2ce07c402db271a94674""]"
033fb554bec6523beb638965dc8f4adb96887332,0f3dfa87bc8870c1da6867b7e2d9d70f7e21fc93,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 01:39:41 2010 +0200,1275176381,"change delete function to accept a direction argument, so p can be properly updated",45.0,5.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.2422921890824148,5.0,429.5,39.0,0.0005208333333333333,199.5,1441.0,159.0,None,False,True,"[""6a8e35ad9252f1ea1ff0a449af52aef1f71815f8"", ""b84186ff2dadea9fa67f512a743ab97196390f56""]"
0f3dfa87bc8870c1da6867b7e2d9d70f7e21fc93,c7d9d662a4c8ba1c17676055fd30a25ffa79304e,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 01:46:59 2010 +0200,1275176819,generic push function that supports the dual encoding,41.0,25.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11165.0,541.0,1.0850347222222223,201.0,1.921629492143749,160.0,None,False,,
c7d9d662a4c8ba1c17676055fd30a25ffa79304e,d72562f7baee43d41a5a6b3019e45f14c59b49d7,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 01:50:32 2010 +0200,1275177032,generic pop and length function for ziplist encoding,56.0,25.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11181.0,542.0,0.0024652777777777767,202.0,406.6338028169015,161.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
d72562f7baee43d41a5a6b3019e45f14c59b49d7,697bd5673fe1591eeabcd9ac8581d1e5019cf0ec,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 02:11:59 2010 +0200,1275178319,inline support for dual encoding in the LINDEX and LSET commands,53.0,29.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11212.0,543.0,0.014895833333333334,203.0,68.13286713286713,162.0,None,False,True,"[""bd8db0ada840e2c52ab37470256676a05c6fe855"", ""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
697bd5673fe1591eeabcd9ac8581d1e5019cf0ec,a6dd455b09cb67e18799c0b2ed720d213608e13d,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 02:15:34 2010 +0200,1275178534,update LRANGE to use basic iteration code to support dual encoding,79.0,10.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11236.0,544.0,0.002488425925925926,204.0,402.86046511627904,163.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
a6dd455b09cb67e18799c0b2ed720d213608e13d,9ae6b0be4ac05c919b943ed29ffa20e5560855a2,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 02:16:12 2010 +0200,1275178572,support dual encoding in LTRIM,17.0,10.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11305.0,545.0,0.00043981481481481486,205.0,2274.684210526316,164.0,None,False,,
9ae6b0be4ac05c919b943ed29ffa20e5560855a2,d2ee16abec401c7c6575cdbd666dd8a139b4926c,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 02:17:36 2010 +0200,1275178656,update LREM to support dual encoding via extra iteration primitives,68.0,17.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11312.0,546.0,0.0009722222222222224,206.0,1029.5714285714287,165.0,None,False,True,"[""3fbf9001ce88f2b3d154b099bcf2fd3783f24940""]"
d2ee16abec401c7c6575cdbd666dd8a139b4926c,dbaa41c618346be2ab58dfbab0a35e3ff1948ed1,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 03:06:12 2010 +0200,1275181572,the tail offset must be an integer pointer to hold a 32-bit offset,22.0,1.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,5.0,883.0,33.0,0.06008101851851853,207.0,17.644191870545175,166.0,None,False,True,"[""b84186ff2dadea9fa67f512a743ab97196390f56""]"
dbaa41c618346be2ab58dfbab0a35e3ff1948ed1,bd8db0ada840e2c52ab37470256676a05c6fe855,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 03:08:24 2010 +0200,1275181704,fixed LINDEX to always return bulk response,7.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11363.0,547.0,0.035277777777777776,208.0,29.34645669291339,167.0,Corrective,True,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
bd8db0ada840e2c52ab37470256676a05c6fe855,3fbf9001ce88f2b3d154b099bcf2fd3783f24940,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 30 03:14:38 2010 +0200,1275182078,fix LREM to remove *all* occurances when a zero argument is given,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11367.0,548.0,0.0043287037037037035,209.0,232.01604278074868,168.0,Corrective,True,,
d55d5c5dd3d09d8a9c9d9b0e17adbb764dfaff06 d5d23dabd7a72c63ceda017d560c362b4065d85b,752203d86d9667c07a69a11043df411703c32640,antirez,antirez@gmail.com,Mon May 31 10:08:14 2010 +0200,1275293294,Merge branch 'no-appendfsync-on-rewrite',,,,,,,,,,,,,,,Merge,False,,
752203d86d9667c07a69a11043df411703c32640,560db612e175427bcc8beae2a38c6f9a7853687f,antirez,antirez@gmail.com,Mon May 31 20:10:18 2010 +0200,1275329418,"first step of VM rewrite. blocking VM tests passing, more work needed in the async side",241.0,211.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11367.0,549.0,1.705324074074074,2405.0,1.5863988054839149,1113.0,Preventative,False,True,"[""e4ed181d4057395c7a83c531d89b022e76ba21b1"", ""092418136490fc94f2520ede706846dac8e43b5e""]"
3fbf9001ce88f2b3d154b099bcf2fd3783f24940,8632fb30401ccc6824b84499602fba7052cc3346,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 20:17:21 2010 +0200,1275329841,ziplistPrev should return the tail when the argument is ZIP_END,25.0,11.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,5.0,460.0,42.0,1.746116898148148,210.5,1.4345371568834255,170.0,None,False,,
8632fb30401ccc6824b84499602fba7052cc3346,6a8e35ad9252f1ea1ff0a449af52aef1f71815f8,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 20:18:23 2010 +0200,1275329903,ziplistDelete no longer needs a direction now ziplistPrev is fixed,3.0,7.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,5.0,467.0,44.0,0.0007175925925925926,212.5,1046.1612903225805,172.0,Corrective,True,,
6a8e35ad9252f1ea1ff0a449af52aef1f71815f8,be02a7c0d653021336ae23092046d442ac017f11,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 20:25:31 2010 +0200,1275330331,update list iteration semantic to work as expected (i.e. while(lNext(..))),72.0,58.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11397.0,550.0,0.01056712962962963,214.0,95.63307776560794,173.0,None,False,True,"[""b6eb9703949b49d2e5bd71316b4cd545677c5651""]"
be02a7c0d653021336ae23092046d442ac017f11,0f62e1775d37d34a4a465abfc81becaf02ecae64,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 20:47:39 2010 +0200,1275331659,update RPOPLPUSH to support dual encoding,18.0,26.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11411.0,551.0,0.015370370370370371,215.0,66.06024096385542,174.0,None,False,,
0f62e1775d37d34a4a465abfc81becaf02ecae64,2796f6da7b7208382edb618b3ab0667f7e2c4f27,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 21:08:07 2010 +0200,1275332887,added rdb save function to directly save long long values,19.0,25.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11403.0,552.0,0.014212962962962962,216.0,71.35830618892507,175.0,Feature Addition,False,,
2796f6da7b7208382edb618b3ab0667f7e2c4f27,b6eb9703949b49d2e5bd71316b4cd545677c5651,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 21:44:12 2010 +0200,1275335052,fixed signedness and disambiguate variable names,39.0,39.0,"redis.c,CAS_DELIMITER,ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",3.0,1.0,1.0,1.3739786720105205,6.0,4109.0,599.0,0.04808256172839506,218.0,20.551034316963023,178.0,Corrective,True,True,"[""6171250871e408928a172c09d5fdf41961720fbc""]"
b6eb9703949b49d2e5bd71316b4cd545677c5651,23f964946b815c8d6317071b4a5597151e4cefd2,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 22:25:22 2010 +0200,1275337522,support rdb saving/loading with dual list encoding,61.0,25.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11397.0,554.0,0.02858796296296296,220.0,35.97975708502024,179.0,None,False,True,"[""cd627d4e7892701cb480001986184913a3ece7f5""]"
560db612e175427bcc8beae2a38c6f9a7853687f,7dd8e7cfdfcdce0defee316645359eb9b36cf4d0,antirez,antirez@metal.(none),Mon May 31 22:56:53 2010 +0200,1275339413,fixed missing incrRefCount,1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11433.0,555.0,0.021886574074074086,2406.0,46.690111052353245,1114.0,Corrective,True,,
23f964946b815c8d6317071b4a5597151e4cefd2,1cd92e7f040702e07e4930e8faa3f0f692658cdc,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:10:05 2010 +0200,1275340205,function to create a new ziplist encoded list,13.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11434.0,556.0,0.009166666666666668,221.0,110.0909090909091,180.0,Feature Addition,False,,
1cd92e7f040702e07e4930e8faa3f0f692658cdc,a03611e1337a207bb771c2c72256047cbb2a4092,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:11:28 2010 +0200,1275340288,update SORT to work with the dual list encoding,34.0,31.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11439.0,557.0,0.0009606481481481482,222.0,1041.9638554216867,181.0,None,False,,
a03611e1337a207bb771c2c72256047cbb2a4092,d71b98650f64b09cdc4d028144617cad4af00e1b,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:35:21 2010 +0200,1275341721,ziplistNext should work as expected when called with a pointer to ZIP_END,10.0,1.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,914.0,37.0,0.0771875,223.0,13.955465587044534,182.0,None,False,,
d71b98650f64b09cdc4d028144617cad4af00e1b,dc845730a9afaadf20a6a892a458c219c7350dff,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:35:51 2010 +0200,1275341751,use list wrapper functions in computing the dataset digest,6.0,8.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11442.0,558.0,0.01693287037037037,224.0,60.05673274094328,183.0,None,False,,
dc845730a9afaadf20a6a892a458c219c7350dff,9eaef89fbc56f3690d9e4294ca96892cdacfea88,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:41:04 2010 +0200,1275342064,small refactor of fwrite* commands for AOF rewrite to allow writing a bulk long long,30.0,41.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.1851247601005459,6.0,5902.5,582.0,3.2169791666666665,225.5,139.09688198652253,185.0,None,False,,
9eaef89fbc56f3690d9e4294ca96892cdacfea88,6ddc908ab611b1d6f1c94c71497e181734ac53df,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 31 23:49:16 2010 +0200,1275342556,support rewriting the AOF with dual list encoding,33.0,10.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11429.0,560.0,0.005694444444444446,227.0,176.60975609756096,186.0,None,False,,
7dd8e7cfdfcdce0defee316645359eb9b36cf4d0,e4ed181d4057395c7a83c531d89b022e76ba21b1,antirez,antirez@metal.(none),Tue Jun 1 14:15:46 2010 +0200,1275394546,fixed bugs introduced in the rewrite of the new VM engine,20.0,10.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11452.0,561.0,0.6017361111111111,2407.0,2.661858049624928,1115.0,Corrective,True,,
7dd8e7cfdfcdce0defee316645359eb9b36cf4d0,a4798f733dc2cb973552e0ea84cc5f553951e162,antirez,antirez@gmail.com,Tue Jun 1 14:18:30 2010 +0200,1275394710,fixed a few comments,5.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11462.0,562.0,0.001898148148148148,2408.0,527.8292682926831,1116.0,Corrective,True,,
a4798f733dc2cb973552e0ea84cc5f553951e162 e4ed181d4057395c7a83c531d89b022e76ba21b1,4e538759c4125a2379fd625e5a92c72347017b7f,antirez,antirez@gmail.com,Tue Jun 1 14:18:38 2010 +0200,1275394718,Merge branch 'smallkeys' of github.com:antirez/redis into smallkeys,,,,,,,,,,,,,,,Merge,False,,
4e538759c4125a2379fd625e5a92c72347017b7f,dbc289aed1cdefb51d8764000d95d5259f50b132,antirez,antirez@gmail.com,Tue Jun 1 14:22:21 2010 +0200,1275394941,Debug message was printing stuff that are sometimes not initialized/valid,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11464.0,563.0,0.002673611111111111,2409.0,375.02597402597405,1117.0,Corrective,True,,
752203d86d9667c07a69a11043df411703c32640,356f9239138ebe4a27cefe9c7d3998a50c75526c,antirez,antirez@gmail.com,Tue Jun 1 15:01:16 2010 +0200,1275397276,TODO updated with syslog plans for 2.2,1.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,69.0,137.0,6.7728472222222225,2410.0,1.1476483917603997,1118.0,None,False,,
dbc289aed1cdefb51d8764000d95d5259f50b132,612e4de8cef739252ff1e19424fb39a793b1a22f,antirez,antirez@gmail.com,Tue Jun 1 17:08:43 2010 +0200,1275404923,minor code movements and free object pull restored to 1 million,75.0,73.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11464.0,564.0,0.1155324074074074,2411.0,9.655580044079345,1119.0,None,False,True,"[""092418136490fc94f2520ede706846dac8e43b5e""]"
6ddc908ab611b1d6f1c94c71497e181734ac53df,b84186ff2dadea9fa67f512a743ab97196390f56,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 1 17:57:09 2010 +0200,1275407829,fix signedness errors in ziplist testing code,24.0,24.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,923.0,38.0,0.7651388888888889,228.0,2.3069522599382832,187.0,Corrective,True,,
b84186ff2dadea9fa67f512a743ab97196390f56,ffc15852676131003d1f5e468467f15f57a8e0bf,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 1 17:57:51 2010 +0200,1275407871,added stress test for heavy i/o in ziplists,37.0,0.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,923.0,39.0,0.0004861111111111112,229.0,2058.1428571428573,188.0,Feature Addition,False,True,"[""56538477143b144f2267ce98805a7b6edc763528""]"
ffc15852676131003d1f5e468467f15f57a8e0bf,e1f93d4b2cc94fec29ede9b3cedea891ee9bd050,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 1 18:55:37 2010 +0200,1275411337,use integer types from stdint.h to be more verbose on the size in bytes of encoded elements. update list length to use 2 bytes instead of 1.,54.0,50.0,"ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,960.0,40.0,0.04011574074074074,230.0,25.927870744373926,189.0,None,False,True,"[""8ce39260a4acfedea5ee8f9143d2d2a9ce82b498"", ""56538477143b144f2267ce98805a7b6edc763528"", ""8e0ef249a2c1a67e11838ff48329b51c4aa7ccdc""]"
612e4de8cef739252ff1e19424fb39a793b1a22f,169dd6b7d3f113282d0320e24f2d4f590a3f6314,antirez,antirez@gmail.com,Wed Jun 2 15:00:02 2010 +0200,1275483602,minor code comment change,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11466.0,565.0,0.9106365740740741,2412.0,2.0981329198388385,1120.0,None,False,,
356f9239138ebe4a27cefe9c7d3998a50c75526c,7e02fe32d3b95a9c56490b381784e47e2d97dedf,antirez,antirez@gmail.com,Wed Jun 2 15:13:53 2010 +0200,1275484433,better swapout policy while loading RDB file,6.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11466.0,566.0,0.009618055555555557,2413.0,104.971119133574,1121.0,Perfective,False,,
7e02fe32d3b95a9c56490b381784e47e2d97dedf,a89b7013ff5aa27fae4d1f7d45615349c3ab7300,antirez,antirez@gmail.com,Wed Jun 2 15:18:22 2010 +0200,1275484702,smarter swapout policy on AOF too,7.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11471.0,567.0,0.003113425925925925,2414.0,322.18959107806694,1122.0,None,False,,
169dd6b7d3f113282d0320e24f2d4f590a3f6314 a89b7013ff5aa27fae4d1f7d45615349c3ab7300,1edbae86782835359dc0ce7250df627b41d147eb,antirez,antirez@gmail.com,Wed Jun 2 15:19:50 2010 +0200,1275484790,Merge branch 'master' into smallkeys,,,,,,,,,,,,,,,Merge,False,,
d55d5c5dd3d09d8a9c9d9b0e17adbb764dfaff06,436f18b618d3820ee3c99b2ae78cf29bf36b2994,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 21:20:29 2010 +0200,1275506429,"catch exceptions in the server proc, to be able to kill the entire chain of running servers",36.0,18.0,"tests/support/server.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.3800943362833298,6.0,108.0,18.0,9.562087191358025,232.0,1.055057257759726,17.0,None,False,,
436f18b618d3820ee3c99b2ae78cf29bf36b2994,38273a9ed6a92f5a9c0c6250484fff677b972019,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 21:29:47 2010 +0200,1275506987,removed obsolete code,0.0,2.0,"tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,1.0,6.0,65.5,13.0,0.006458333333333332,234.5,117.12903225806451,19.0,None,False,,
38273a9ed6a92f5a9c0c6250484fff677b972019,9e5d2e8bd664743d309f1647e29cdaf43f463051,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 22:23:52 2010 +0200,1275510232,changed how server.tcl accepts options to support more directives without requiring more arguments to the proc,30.0,19.0,"tests/integration/aof.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",14.0,1.0,4.0,3.0792268670059437,6.0,180.28571428571428,27.0,14.336420304232805,242.5,1.0165636269736764,33.0,None,False,,
9e5d2e8bd664743d309f1647e29cdaf43f463051,6e0e5bedd9c3a4bf0f53f43c427c88e2866bda0a,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 22:53:22 2010 +0200,1275512002,basic support to tag tests,54.0,5.0,"tests/support/server.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",4.0,1.0,3.0,1.4379198988812658,6.0,180.0,26.0,0.0392650462962963,251.5,19.809137803979365,37.0,Preventative,False,,
6e0e5bedd9c3a4bf0f53f43c427c88e2866bda0a,73bd6c583b9a3e29dbbbf4f1ba8259cfe5e131b8,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 23:04:22 2010 +0200,1275512662,pass tags to filter and match via arguments,21.0,2.0,"Makefile,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.8404914014731815,6.0,88.33333333333331,61.0,1.9875385802469128,255.0,1.167926949488771,39.0,None,False,,
73bd6c583b9a3e29dbbbf4f1ba8259cfe5e131b8,7f7499eeace8f69aeb32a4e92554eb0b144e8226,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 2 23:14:55 2010 +0200,1275513295,tags for existing tests,329.0,321.0,"tests/integration/aof.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",11.0,1.0,3.0,2.009847027193167,6.0,185.45454545454547,28.0,0.03358901515151515,262.0,9.070907921732859,50.0,Preventative,False,True,"[""9f40c25a0848d502967ca124b48b3c87bbce0106"", ""09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c""]"
7f7499eeace8f69aeb32a4e92554eb0b144e8226,7a6ae0a2b29f83523a6e65a61c7ec49cc9437781,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:06:58 2010 +0200,1275516418,scope res variable outside test,1.0,1.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,179.0,3.0,0.036145833333333335,268.0,28.665706051873197,51.0,Preventative,False,,
7a6ae0a2b29f83523a6e65a61c7ec49cc9437781,5713f06b339bd5f6d2d62092bb6adffd90367286,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:16:02 2010 +0200,1275516962,change how arguments are passed from the AOF tests,3.0,3.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,82.0,3.0,0.04244212962962963,269.0,24.561494409599128,52.0,Preventative,False,,
5713f06b339bd5f6d2d62092bb6adffd90367286,6b6f101c2761c5a9762723ae99a75dd0d2e009df,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:16:10 2010 +0200,1275516970,tag more slow tests,21.0,17.0,"tests/unit/expire.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8314743880097293,6.0,146.0,6.0,0.06026041666666668,270.5,16.903762369251936,54.0,Preventative,False,True,"[""a5062bbab0a1619523a9562cec2256de16149c29""]"
6b6f101c2761c5a9762723ae99a75dd0d2e009df,f6fa411d6cffd59155f8afbacad8c17db74d100d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:25:32 2010 +0200,1275517532,make sure the config it returned when called without code,2.0,3.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,246.0,10.0,0.06400462962962962,272.0,16.62386980108499,55.0,None,False,,
f6fa411d6cffd59155f8afbacad8c17db74d100d,afbf59145aa50d50631c860b73374a0438708b1f,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:26:39 2010 +0200,1275517599,tag test with sleep() as slow,6.0,4.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,60.0,4.0,0.007280092592592592,273.0,138.36089030206676,56.0,Preventative,False,,
afbf59145aa50d50631c860b73374a0438708b1f,5a9fcb87cac31b70a9721cc88df4a929c14846fe,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:27:09 2010 +0200,1275517629,tag memory leak check on kill server as leaks,5.0,3.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,245.0,11.0,0.0011226851851851851,274.0,891.7216494845361,57.0,None,False,,
1edbae86782835359dc0ce7250df627b41d147eb 5a9fcb87cac31b70a9721cc88df4a929c14846fe,a7159fe817b163d17ff64fae0d459bbe786280ef,antirez,antirez@gmail.com,Thu Jun 3 00:31:15 2010 +0200,1275517875,Merge branch 'testsuite' of git://github.com/pietern/redis into smallkeys,,,,,,,,,,,,,,,Merge,False,,
a89b7013ff5aa27fae4d1f7d45615349c3ab7300 5a9fcb87cac31b70a9721cc88df4a929c14846fe,9fcfd6b6512dd975ba3eadf476b7d5670c9dbb79,antirez,antirez@gmail.com,Thu Jun 3 00:31:41 2010 +0200,1275517901,Merge branch 'testsuite' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
e1f93d4b2cc94fec29ede9b3cedea891ee9bd050,74e0f445a8851d0cbf6898aa9fbea1814bb8cd1d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:48:52 2010 +0200,1275518932,use ziplists in SORT STORE until the thresholds are determined,1.0,6.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11473.0,568.0,0.3961805555555555,275.0,3.52410166520596,191.0,None,False,,
74e0f445a8851d0cbf6898aa9fbea1814bb8cd1d,178d6903722e80bd68d1b8dacbe3d4fc406d2cb5,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 00:50:33 2010 +0200,1275519033,update Makefile to include ziplist.o,2.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,113.0,45.0,0.07373842592592593,276.0,14.561450321770522,192.0,None,False,,
a7159fe817b163d17ff64fae0d459bbe786280ef,092418136490fc94f2520ede706846dac8e43b5e,antirez,antirez@gmail.com,Thu Jun 3 18:02:54 2010 +0200,1275580974,top level keys are no longer redis objects but sds strings. There are still a few bugs to fix when VM is enabled,223.0,206.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,2.0,0.2612870399852945,6.0,3985.333333333334,605.0,1.4246296296296297,2416.0,1.6378909741345378,31.0,Corrective,True,,
092418136490fc94f2520ede706846dac8e43b5e,44262c58a417bfcb4a23d767a742a9a2f360fcb4,antirez,antirez@gmail.com,Thu Jun 3 18:15:56 2010 +0200,1275581756,Fixed VM bugs introduced with the top level keys as sds strings changes,5.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11474.0,570.0,0.009050925925925926,2418.0,111.48593350383629,1125.0,Corrective,True,True,"[""4c8f23700b2943ff724d4ea5c7830d939dbd08d2""]"
44262c58a417bfcb4a23d767a742a9a2f360fcb4,4c8f23700b2943ff724d4ea5c7830d939dbd08d2,antirez,antirez@gmail.com,Thu Jun 3 18:22:15 2010 +0200,1275582135,memory leak introduced in the latest big changes fixed,3.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11472.0,571.0,0.004386574074074074,2419.0,228.96833773087073,1126.0,Corrective,True,,
4c8f23700b2943ff724d4ea5c7830d939dbd08d2,22194a7ffe6ada09b326ba9db1fadc549b065a4d,antirez,antirez@gmail.com,Thu Jun 3 18:32:52 2010 +0200,1275582772,test restored,0.0,2.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,125.0,13.0,0.020810185185185185,2420.0,49.05339265850945,32.0,Preventative,False,,
178d6903722e80bd68d1b8dacbe3d4fc406d2cb5 22194a7ffe6ada09b326ba9db1fadc549b065a4d,846d8b3ea558fadd8aa4eb5ad5f8d3bf4717b731,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 09:54:06 2010 +0200,1275638046,merge antirez/smallkeys,,,,,,,,,,,,,,,Merge,False,,
846d8b3ea558fadd8aa4eb5ad5f8d3bf4717b731,d0686e070d683d0577c6f6c2f088a55101b74980,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 10:57:31 2010 +0200,1275641851,add thresholds for converting a ziplist to a real list,66.0,3.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11474.0,572.0,0.6911574074074074,277.0,2.4468484158349524,193.0,Feature Addition,False,,
d0686e070d683d0577c6f6c2f088a55101b74980,003f0840ffa7f69fb40836bf9510c9d77be0e830,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 11:04:02 2010 +0200,1275642242,renamed list wrapper functions to be more verbose,76.0,76.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11537.0,573.0,0.004525462962962963,278.0,221.97186700767259,194.0,None,False,,
003f0840ffa7f69fb40836bf9510c9d77be0e830,dda20542abcccac04a7f630695e6a30304f7dcf8,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 11:32:33 2010 +0200,1275643953,safety assert in listTypeNext,3.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11537.0,574.0,0.01980324074074074,279.0,51.49678550555231,195.0,Preventative,False,,
9fcfd6b6512dd975ba3eadf476b7d5670c9dbb79 22194a7ffe6ada09b326ba9db1fadc549b065a4d,4dc1218c585e5c81674382c8091cb2b9e9807891,antirez,antirez@gmail.com,Fri Jun 4 11:35:43 2010 +0200,1275644143,Merge branch 'smallkeys',,,,,,,,,,,,,,,Merge,False,,
4dc1218c585e5c81674382c8091cb2b9e9807891 dda20542abcccac04a7f630695e6a30304f7dcf8,422cf21f15a13f52a6e87d83076857d5483c6f49,antirez,antirez@gmail.com,Fri Jun 4 11:36:37 2010 +0200,1275644197,Merge branch 'lists' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
422cf21f15a13f52a6e87d83076857d5483c6f49,d1578a33eefec1e834cf551fda0eac328c50bf74,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 11:39:23 2010 +0200,1275644363,renamed hash wrapper functions to match wrapper function naming convention: <type>Type<func>,61.0,61.0,"redis.c,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER",2.0,1.0,1.0,0.6807937753703206,6.0,5957.0,600.0,0.36920717592592606,280.5,107.04298025926701,197.0,None,False,,
d1578a33eefec1e834cf551fda0eac328c50bf74,d4507ec615439794e113daf51d7d5fccae77408a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 16:30:54 2010 +0200,1275661854,refactor list tests to test both encodings; implemented assert functions,436.0,268.0,"tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.4283605323198238,6.0,166.33333333333334,24.0,1.4538310185185186,283.0,1.3956304400278174,60.0,Preventative,False,True,"[""5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
d4507ec615439794e113daf51d7d5fccae77408a,ab193fe452de9aa7cb96a937ce15df2c675a47c1,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 4 17:05:54 2010 +0200,1275663954,generated tests for different encodings to avoid test code duplication,150.0,259.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,460.0,4.0,0.02430555555555556,285.0,42.14285714285714,61.0,Preventative,False,,
ab193fe452de9aa7cb96a937ce15df2c675a47c1,a26452263f4e130018e712f3799f0eddcf2ebe91,antirez,antirez@gmail.com,Fri Jun 4 21:19:06 2010 +0200,1275679146,"DISCSARD now unwatches all keys, as it should",1.0,0.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11540.0,576.0,0.4025810185185185,2421.0,3.4839720553143776,1127.0,None,False,,
a26452263f4e130018e712f3799f0eddcf2ebe91,6b0253fabd960e633275a62b23ffda987e47172d,antirez,antirez@gmail.com,Fri Jun 4 21:19:28 2010 +0200,1275679168,TODO updated,0.0,5.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,70.0,138.0,3.262638888888889,2422.0,1.3065003618407052,1128.0,None,False,,
ab193fe452de9aa7cb96a937ce15df2c675a47c1,cd627d4e7892701cb480001986184913a3ece7f5,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Jun 5 11:16:50 2010 +0200,1275729410,fixed two leaks for the dual encoded lists,1.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11541.0,577.0,0.5817592592592593,286.0,2.7189240808530952,198.0,Corrective,True,,
6b0253fabd960e633275a62b23ffda987e47172d cd627d4e7892701cb480001986184913a3ece7f5,65cc7665817dc3b8c66ade331e50f5966da598a4,antirez,antirez@gmail.com,Sat Jun 5 11:18:58 2010 +0200,1275729538,Merge branch 'lists' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
65cc7665817dc3b8c66ade331e50f5966da598a4,b785b2bf668b955f6b4a87813ae230e288b2cc78,antirez,antirez@gmail.com,Mon Jun 7 18:07:46 2010 +0200,1275926866,encode integers while loading an hash,2.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11541.0,578.0,2.2853703703703703,2423.0,1.4375658374523943,1129.0,None,False,,
b785b2bf668b955f6b4a87813ae230e288b2cc78,056c19c6f21e3729212924f76956e4bbb2d3a04c,antirez,antirez@gmail.com,Mon Jun 7 18:30:18 2010 +0200,1275928218,TODO updated,7.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,65.0,139.0,2.8825231481481484,2424.0,1.3469182895001004,1130.0,None,False,,
65cc7665817dc3b8c66ade331e50f5966da598a4,829137b9a0e70088b65d7cd71ee10ff75c9a6fac,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jun 7 20:44:12 2010 +0200,1275936252,reuse the sds from the main dictionary in the expiration dictionary,24.0,28.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11541.0,579.0,0.10863425925925926,287.0,10.205199232900064,199.0,None,False,,
cd627d4e7892701cb480001986184913a3ece7f5,4e16d8b312d913085d70617dd75cc7550610ce72,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jun 7 21:53:21 2010 +0200,1275940401,compute swappability for ziplist encoded lists,15.0,18.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11537.0,580.0,0.04802083333333333,288.0,21.82429501084599,200.0,None,False,,
4e16d8b312d913085d70617dd75cc7550610ce72,306974f5d77c9b0245c6dbb8c44cd4f358eac521,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 9 11:36:58 2010 +0200,1276076218,remove pop function and the sds dependency; can be implemented using get+delete,29.0,35.0,"ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,0.11611507530476972,6.0,490.0,52.0,8.136846064814815,289.5,1.0956984681901678,202.0,None,False,True,"[""1dfcd75ae36f5f7bea86893c391ea863cd32dee9""]"
306974f5d77c9b0245c6dbb8c44cd4f358eac521,dedff272f640b2df73062da06b8f3b82e19de2c2,Robey Pointer,robey@twitter.com,Fri Jun 11 10:08:59 2010 +0200,1276243739,"squashed merge from robey/twitter3: LINSERT BEFORE|AFTER, LPUSHX, RPUSHX",165.0,5.0,"adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",5.0,2.0,3.0,1.6061099411900244,6.0,2505.2,595.0,52.33461342592592,2.0,0.8033221500942294,1.0,Non Functional,False,,
dedff272f640b2df73062da06b8f3b82e19de2c2,0e1684bcd0c6b3378fb3f957407b08fac3f24bb1,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 10:52:09 2010 +0200,1276246329,move listTypeInsert to be grouped with other wrapper functions,25.0,25.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11616.0,582.0,0.02997685185185185,291.0,34.359073359073356,203.0,None,False,,
0e1684bcd0c6b3378fb3f957407b08fac3f24bb1,279d7e67cf7c4ac0db401291c01588a26c1da9ea,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 11:53:16 2010 +0200,1276249996,use REDIS_TAIL to insert AFTER an entry and REDIS_HEAD to insert BEFORE an entry,7.0,7.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11616.0,583.0,0.04244212962962963,292.0,24.561494409599128,204.0,None,False,,
279d7e67cf7c4ac0db401291c01588a26c1da9ea,1240552da92c7a1aa490cea6f6a66d1265c587e2,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 12:03:15 2010 +0200,1276250595,always iterate from head to tail on LINSERT,1.0,5.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11616.0,584.0,0.0069328703703703705,293.0,145.24040066777962,205.0,None,False,,
1240552da92c7a1aa490cea6f6a66d1265c587e2,bcfb387694534aa5f2f8ffb3cc12ea6a5f55b092,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 13:06:03 2010 +0200,1276254363,"rename vars, move arguments, add comments",29.0,21.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11612.0,585.0,0.04361111111111112,294.0,23.929936305732483,206.0,Feature Addition,False,,
bcfb387694534aa5f2f8ffb3cc12ea6a5f55b092,244b873b0c753f126db88ef9fe15aefe4a44f558,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 13:27:21 2010 +0200,1276255641,make sure the value to insert is string encoded,6.0,0.0,"redis.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,6.0,6009.5,592.0,0.07627314814814815,295.5,38.080510376370505,62.0,None,False,,
244b873b0c753f126db88ef9fe15aefe4a44f558,70b4b320ae1d04dd087ae9336bdd962a9615fbfe,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 14:51:59 2010 +0200,1276260719,"check if the list encoding needs to be changed on LPUSHX, RPUSHX, LINSERT",102.0,54.0,"redis.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5699613760403499,6.0,6012.5,594.0,0.05877314814814815,297.5,13.760929499803073,63.0,None,False,,
056c19c6f21e3729212924f76956e4bbb2d3a04c,144b0094c31b0a3604e5bd2686a7df15c0fd324d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 16:06:18 2010 +0200,1275573978,initial implementation for the intset,395.0,0.0,"intset.c,CAS_DELIMITER,intset.h,CAS_DELIMITER",2.0,1.0,1.0,0.2446088925154937,1.0,0.0,0.0,0.0,299.5,0.0,210.0,Feature Addition,False,True,"[""740eee1cc6fb65a094e5f17e85aa37fdaa24f2e9"", ""6136a16bd1fe4a88ada02e31e597b805d8a86b55"", ""c82e0b701f86989711988dae8be97bdbe63395ba""]"
144b0094c31b0a3604e5bd2686a7df15c0fd324d,3ab98cef4e9aaefbb1febbe51309f657c701b1df,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 3 22:21:39 2010 +0200,1275596499,move logic for obvious corner cases to intsetSearch,16.0,15.0,"intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,379.0,1.0,0.2606597222222222,301.0,4.836419341947514,211.0,None,False,True,"[""6136a16bd1fe4a88ada02e31e597b805d8a86b55""]"
70b4b320ae1d04dd087ae9336bdd962a9615fbfe,23d3a5feef0572762cac979f70accbae7ff1eda0,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 17:34:23 2010 +0200,1276270463,make LINSERT return -1 when the value could not be inserted,10.0,5.0,"redis.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9967916319816366,6.0,6036.5,596.0,0.11277777777777775,302.5,7.650246305418719,64.0,None,False,,
23d3a5feef0572762cac979f70accbae7ff1eda0,7d288d654793e867020b73d101c17d25bfbc256c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 17:35:48 2010 +0200,1276270548,"LPUSHX, RPUSHX, LINSERT only work on non-empty lists, so there are no clients waiting for a push",0.0,4.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11644.0,589.0,0.0009837962962962962,304.0,1017.4705882352944,213.0,None,False,,
3ab98cef4e9aaefbb1febbe51309f657c701b1df,35cabcb50557eae1433a68c7730ad8aff478b68a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 18:35:57 2010 +0200,1276274157,wrapper functions for the set type to support multiple encodings,175.0,109.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11640.0,590.0,0.04177083333333333,305.0,24.940149625935163,214.0,None,False,,
35cabcb50557eae1433a68c7730ad8aff478b68a,e24d93762f8945de0ee03f23b15d686cfa08bb58,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jun 11 19:22:27 2010 +0200,1276276947,intset housekeeping,4.0,4.0,"intset.c,CAS_DELIMITER,intset.h,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,1.0,198.0,3.0,8.005885416666667,306.5,1.0947146116419741,216.0,None,False,,
056c19c6f21e3729212924f76956e4bbb2d3a04c 7d288d654793e867020b73d101c17d25bfbc256c,ac9b8cfe577d1a27dd0f377e3b9578a7505cf00f,antirez,antirez@gmail.com,Fri Jun 11 20:27:56 2010 +0200,1276280876,Merge branch 'lists' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
ac9b8cfe577d1a27dd0f377e3b9578a7505cf00f 829137b9a0e70088b65d7cd71ee10ff75c9a6fac,f6475c725032038fc4d72fd89da3e539d127bc7e,antirez,antirez@gmail.com,Sat Jun 12 16:26:04 2010 +0200,1276352764,Merge branch 'expire' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
e24d93762f8945de0ee03f23b15d686cfa08bb58,d0b58d530027185a7fccd08bcda31efe06ef366b,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Jun 12 22:25:22 2010 +0200,1276374322,"intset encoding for sets, refactored set tests to test both encodings",308.0,119.0,"Makefile,CAS_DELIMITER,intset.c,CAS_DELIMITER,intset.h,CAS_DELIMITER,redis.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.2378556472867663,6.0,2473.4,645.0,4.655627314814816,310.0,1.078414012992786,65.0,Preventative,False,True,"[""1eb13e4913622927b17b9c2922754f864d520710"", ""6136a16bd1fe4a88ada02e31e597b805d8a86b55"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5"", ""0f36e5e5d8031496a07cde241d2c932d1e73ea38""]"
d0b58d530027185a7fccd08bcda31efe06ef366b,b978abbf022b1810031b5aaa171ef0899f7fe77d,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 11:16:18 2010 +0200,1276420578,small refactor of SMOVE and tests for SMOVE on sets with different encoding,92.0,48.0,"redis.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8898478016282408,6.0,6014.0,596.0,0.5353703703703704,313.5,2.400899342787963,66.0,Preventative,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
f6475c725032038fc4d72fd89da3e539d127bc7e,a8dca69bb31ae1ab4503e31e71e46b8d85b36dd5,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 15:07:53 2010 +0200,1276434473,use raw strings when loading a hash from the rdb into a zipmap,8.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11820.0,593.0,0.16082175925925926,315.0,7.2180640518172,222.0,None,False,,
b978abbf022b1810031b5aaa171ef0899f7fe77d,70ff3511bc427fe05df22e1aba4071910f33e289,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 15:21:25 2010 +0200,1276435285,configure maximum number of entries in an intset,13.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11826.0,594.0,0.009398148148148149,316.0,107.4039408866995,223.0,None,False,,
a8dca69bb31ae1ab4503e31e71e46b8d85b36dd5,bb039e853df6c2754885c5cfb82dc3f7ea7d25b5,antirez,antirez@gmail.com,Sun Jun 13 21:09:51 2010 +0200,1276456191,fixed a bug in rdbLoadObject abount specially encoded objects,4.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11837.0,595.0,0.2419675925925926,2425.0,5.1327848464555625,1131.0,Corrective,True,,
70ff3511bc427fe05df22e1aba4071910f33e289,ab37269c38a1e60ec03f3d537b1c7ed33f761225,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 21:23:43 2010 +0200,1276457023,use max number of intset entries in tests and make SUNION/SINTER/SDIFF tests use less entries,30.0,10.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,252.0,5.0,0.4218171296296296,317.0,3.3706955686651114,67.0,Preventative,False,True,"[""1eb13e4913622927b17b9c2922754f864d520710""]"
ab37269c38a1e60ec03f3d537b1c7ed33f761225,273f6169301eba5461d90f07ec683ae06572e931,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 21:42:04 2010 +0200,1276458124,make sure sets have the right encoding when loaded from rdb,43.0,6.0,"redis.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8886466698980794,6.0,6055.5,602.0,0.01755787037037037,318.5,37.58730967981091,68.0,None,False,,
273f6169301eba5461d90f07ec683ae06572e931,400aea2b1343232e45a0b7a9435a69d0fe8a0956,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Jun 13 21:52:07 2010 +0200,1276458727,expand the dictionary of the target set to the right size when converting from intset,8.0,1.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11861.0,597.0,0.006979166666666666,320.0,144.28358208955225,225.0,None,False,,
bb039e853df6c2754885c5cfb82dc3f7ea7d25b5,7c4fc71c156f1abdc64dba078030af98f3452b67,antirez,antirez@gmail.com,Sun Jun 13 23:45:14 2010 +0200,1276465514,hopefully faster recompiling with a trick,24.0,8.0,"Makefile,CAS_DELIMITER,redis.c,CAS_DELIMITER,release.c,CAS_DELIMITER",3.0,1.0,1.0,1.5575167455986103,6.0,3994.333333333334,645.0,0.378005401234568,2427.0,1.9036982535025675,1134.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
7c4fc71c156f1abdc64dba078030af98f3452b67,3042fb0537c3ada4dd2882d4f800cc6080169596,antirez,antirez@gmail.com,Sun Jun 13 23:51:43 2010 +0200,1276465903,Fixed deps in makefile and mkreleasehdr.sh script to really take advantage of the new trick to avoid recompilation of redis.c on git sha1 or dirty status change,2.0,4.0,"Makefile,CAS_DELIMITER,mkreleasehdr.sh,CAS_DELIMITER,redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272448,6.0,3998.333333333334,652.0,8.159984567901235,2430.0,75.06322538899654,1137.0,Corrective,True,,
bb039e853df6c2754885c5cfb82dc3f7ea7d25b5,08b59207509ffe2c6938f7051ea786c66e7fa09d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jun 14 09:45:34 2010 +0200,1276501534,change ltrim tests to cover all min/max cases and add stronger stresser,52.0,21.0,"tests/support/test.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.1811664015535457,6.0,259.0,17.0,6.1964756944444455,321.5,1.0917936852350794,70.0,Feature Addition,False,,
3042fb0537c3ada4dd2882d4f800cc6080169596,7d04fc75630387b2c02e8f9907cf8deda37d648a,antirez,antirez@gmail.com,Mon Jun 14 10:19:45 2010 +0200,1276503585,"allow running the test suite against an external Redis instance, without auto spawning",29.0,0.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8497511372532974,6.0,185.0,27.0,10.57689236111111,2432.5,1.0674517749500103,34.0,Preventative,False,True,"[""164d57c60d254d02d816c27f4e80cf33c5061fef""]"
08b59207509ffe2c6938f7051ea786c66e7fa09d,7e79de541ad9f0d4ce9d582102dc03acf48d532d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jun 14 10:21:23 2010 +0200,1276503683,rename list to linkedlist to be more verbose,48.0,48.0,"redis.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,6.0,6166.0,610.0,0.23107060185185185,323.5,3.2253825580108235,71.0,None,False,,
7d04fc75630387b2c02e8f9907cf8deda37d648a 7e79de541ad9f0d4ce9d582102dc03acf48d532d,d52e5888694cb65918f2b0d00691c198deb5643f,antirez,antirez@gmail.com,Mon Jun 14 10:22:38 2010 +0200,1276503758,Merge branch 'ltrim-tests' of git://github.com/pietern/redis,,,,,,,,,,,,,,,Merge,False,,
d52e5888694cb65918f2b0d00691c198deb5643f,d5096a28d79bc8e0c015816d1b359a4d197cb3bb,antirez,antirez@gmail.com,Mon Jun 14 17:59:03 2010 +0200,1276531143,TODO updated,0.0,7.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,72.0,140.0,6.9782986111111125,2434.0,1.1433014056474686,1138.0,None,False,,
d5096a28d79bc8e0c015816d1b359a4d197cb3bb,184d74abc628a1fccf66d34505a8c5505f82d21b,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 15 15:40:28 2010 +0200,1276609228,more tests for zrange and zrevrange; fix behavior for out-of-range negative end index,62.0,12.0,"redis.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3567800143839433,6.0,6146.0,607.0,6.952997685185185,325.5,1.4452598028484858,72.0,Corrective,True,,
184d74abc628a1fccf66d34505a8c5505f82d21b,4774a53b247bb1f75fb175039c6af70a61462a94,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 15 16:21:42 2010 +0200,1276611702,fix behavior for out-of-range negative end index on ZREMRANGEBYRANK,35.0,11.0,"redis.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4262286569981449,6.0,6171.0,609.0,0.028634259259259262,327.5,27.19240097008893,73.0,Corrective,True,,
d5096a28d79bc8e0c015816d1b359a4d197cb3bb,5eedc9c65e9d525f0e78c67f750e4d86d98aa097,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 15 21:16:27 2010 +0200,1276629387,tests for BLPOP/BRPOP via an option in the tcl client that defers reading the reply,128.0,10.0,"tests/support/redis.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",4.0,1.0,3.0,1.2931350945212086,6.0,233.5,38.0,2.213561921296296,330.5,1.1600956399805848,77.0,Preventative,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
5eedc9c65e9d525f0e78c67f750e4d86d98aa097,676740a960dda1cf1adfad908628708057bf4e22,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 15 21:16:56 2010 +0200,1276629416,fix BLPOP/BRPOP to use the wrapped function for list length,1.0,2.0,"redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,11868.0,603.0,0.20502314814814807,333.0,5.87749802416168,229.0,Corrective,True,,
676740a960dda1cf1adfad908628708057bf4e22,4589a823fd3da534ee3e80870ad2de86a23c3361,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jun 15 22:40:21 2010 +0200,1276634421,initial basic pub/sub tests,47.0,1.0,"tests/support/redis.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/pubsub.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.3946835562454195,6.0,136.66666666666666,20.0,0.03884259259259259,335.0,12.442193087008345,80.0,Feature Addition,False,,
4589a823fd3da534ee3e80870ad2de86a23c3361,c2ff0e90b8ce84d7b966622ffe0178303bb0a625,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jun 16 11:03:23 2010 +0200,1276679003,more pub/sub tests,184.0,27.0,"tests/support/test.tcl,CAS_DELIMITER,tests/unit/pubsub.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.21007428720676646,6.0,65.5,11.0,0.5451273148148148,337.5,2.3292953382262405,82.0,Preventative,False,True,"[""414c3deac1573ae54325ca6ab629446205774d62""]"
4774a53b247bb1f75fb175039c6af70a61462a94,f483ce5ffef0beb6e5ab50987691d00166e8216b,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jun 24 15:12:42 2010 -0700,1277417562,fix unexpected behavior on an out of range end index for LRANGE and LTRIM,15.0,4.0,"redis.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9819407868640976,6.0,6211.5,616.0,9.12222800925926,339.5,1.0822177650067497,83.0,Corrective,True,,
c2ff0e90b8ce84d7b966622ffe0178303bb0a625 f483ce5ffef0beb6e5ab50987691d00166e8216b,b8b8501d70770465adc67d4effb4dbae2899f3a8,antirez,antirez@gmail.com,Fri Jun 25 00:23:38 2010 +0200,1277418218,Merge remote branch 'pietern/zfixes',,,,,,,,,,,,,,,Merge,False,,
c2ff0e90b8ce84d7b966622ffe0178303bb0a625,e2641e09cc0daf44f63f654230f72d22acf3a9af,antirez,antirez@gmail.com,Tue Jun 22 00:07:48 2010 +0200,1277158068,"redis.c split into many different C files.networking related stuff moved into networking.cnnmoved more codennmore work on layout of source codennSDS instantaneuos memory saving. By Pieter and Salvatore at VMware ;)nncleanly compiling again after the first split, now splitting it in more C filesnnmoving more things around... work in progressnnsplit replication codennsplitting morennSets splitnnHash splitnnreplication splitnneven more splittingnnmore splittingnnminor changen",20200.0,20473.0,"Makefile,CAS_DELIMITER,adlist.c,CAS_DELIMITER,adlist.h,CAS_DELIMITER,ae.c,CAS_DELIMITER,ae.h,CAS_DELIMITER,ae_epoll.c,CAS_DELIMITER,ae_kqueue.c,CAS_DELIMITER,ae_select.c,CAS_DELIMITER,anet.c,CAS_DELIMITER,anet.h,CAS_DELIMITER,config.h,CAS_DELIMITER,dict.c,CAS_DELIMITER,dict.h,CAS_DELIMITER,fmacros.h,CAS_DELIMITER,linenoise.c,CAS_DELIMITER,linenoise.h,CAS_DELIMITER,lzf.h,CAS_DELIMITER,lzfP.h,CAS_DELIMITER,lzf_c.c,CAS_DELIMITER,lzf_d.c,CAS_DELIMITER,mkreleasehdr.sh,CAS_DELIMITER,pqsort.c,CAS_DELIMITER,pqsort.h,CAS_DELIMITER,redis-benchmark.c,CAS_DELIMITER,redis-check-aof.c,CAS_DELIMITER,redis-check-dump.c,CAS_DELIMITER,redis-cli.c,CAS_DELIMITER,redis.c,CAS_DELIMITER,redis.h,CAS_DELIMITER,release.c,CAS_DELIMITER,sds.c,CAS_DELIMITER,sds.h,CAS_DELIMITER,sha1.c,CAS_DELIMITER,sha1.h,CAS_DELIMITER,solarisfixes.h,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/adlist.c,CAS_DELIMITER,src/adlist.h,CAS_DELIMITER,src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER,src/ae_select.c,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/fmacros.h,CAS_DELIMITER,src/linenoise.c,CAS_DELIMITER,src/linenoise.h,CAS_DELIMITER,src/lzf.h,CAS_DELIMITER,src/lzfP.h,CAS_DELIMITER,src/lzf_c.c,CAS_DELIMITER,src/lzf_d.c,CAS_DELIMITER,src/mkreleasehdr.sh,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pqsort.c,CAS_DELIMITER,src/pqsort.h,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis-check-aof.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/release.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/sha1.c,CAS_DELIMITER,src/sha1.h,CAS_DELIMITER,src/solarisfixes.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/version.h,CAS_DELIMITER,src/vm.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER,src/zipmap.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER,staticsymbols.h,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,ziplist.c,CAS_DELIMITER,ziplist.h,CAS_DELIMITER,zipmap.c,CAS_DELIMITER,zipmap.h,CAS_DELIMITER,zmalloc.c,CAS_DELIMITER,zmalloc.h,CAS_DELIMITER",104.0,3.0,4.0,5.134622481285751,6.0,202.60576923076923,1038.0,39.327341746794865,2486.5,1.0025079989047936,1180.0,Perfective,False,True,"[""daf2049d0d62aa2b77bd6f9a38d03bb4bbfed59c"", ""5bd09cd4c5b680040a8bb6ac1ae1395499cc25b7"", ""d3b958c3fc32be66dac929ede482ef5fe8f5b462"", ""3688d7f308877dd2e2c0c786ffa1e46d6bb34a13"", ""2767f1c0c6983c75689dc67638546196c5dddb26"", ""1a71fb96697fc2af064fc221b21421ad6a8196fa"", ""0e5441d8161042493fcfdacaeed2a770f1f7285c"", ""e002ec6801f41d29e1038f687b52dfe6c7fc9c8a"", ""8c1420ff2a2a9e68ab3faa98bb82d682301fa66b"", ""673e1fb7e4c171f5ead560f6886e877f43730cf0"", ""c91abdcd077f868a59290bc9d68fba3130a3121d"", ""a679185aa515e2f52d8a0f66c3972eb8f43d7fae"", ""778b2210a939083070abaea4b7fc62ebf2ad9bfb"", ""b91d605a35c294573f0213c89c421d09b538c2b6"", ""695fe87456ac4e5ed14e4a853b9cce61fb3e5975"", ""357d36733dc37d87160ca2f65013656693290e9d"", ""09252fc4f36e9a5b89c9a9ff8b3c9750a3144b45"", ""c1ae36aea814e1bcb0f046a00b51ed46d7432c3b"", ""2f6b31c3bb95443991513e496d8d19656c4a80b5"", ""e0e1c195202dd74ab22554dd4293672cc95368ee"", ""106bd87a3ca7b90e1e6fb764398bbefccee3e4fa"", ""1d18f50458d2d31122cd0309f554b2443d076f7c"", ""50a9fad5d50488592447dc599a9ef6a184088ee3"", ""144a5e72f2adc9d151438569f680533e41778504"", ""1dd10ca233a533928ec2ff83f675499e4e7c1ff1"", ""ef59a8bc9ef426f9d24e701e9b73a6a03ddd3d0f"", ""8a979f039011a4672b1052ee84ca56f214e6a681"", ""baa14ef913032baf34645faeae80f5cd6895f97a"", ""2b2eca1f5643260ae7ca6bec70c263ff0db5a8e3"", ""1609a1c42d8f49bada5375a8756a2ca56609ece8"", ""8d51fb6a80fb40abd0bb487d71435d3a30c2942e"", ""a440ecf0d36d22305f994a4482e60099720c47f3"", ""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""b39619d8e73273cd679f560854e34a9a974d9eb4"", ""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b"", ""a5062bbab0a1619523a9562cec2256de16149c29"", ""3a73be752476f44dfb099863ac9424c2f27f2be0"", ""89a1433e69db5f7c996484672437616a16a6fe0a"", ""05600eb8a7cb981f1a132bfba7d30f0b81f0a472"", ""4aec2ec8c4226f3894418c33f865e14866f2b283"", ""a30047736806e54af0459a2c41767bf0ebc6a572"", ""dddf5335f47d62d5e74308faff8dcb5d0575286c"", ""612810af6e4456d14a7d68f01ce35905b2ff89d9"", ""b4b5144694a4134544221a5587b81a98aec608be"", ""f13cb0d9de088898cd879b3912ea3e3300fc9fdf"", ""efc3408748061a08ec5ff18e392c30f31f5094a2"", ""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb"", ""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""adae85cdaed4db207537400c312fdc9e5f525883"", ""ef9444e0d27d251672b12336ebc6568424406683"", ""3bc89500d22ea86a15d58f88e159bb92374a61e0"", ""a57225c2cff6547a70604c64de9e3a01a6c17eb2"", ""a3fcd6bc21ec16f227bd98f7155372b2fd80de11"", ""e3e69935108585c448bfd2ff5ba34fd7d9a6e4b9"", ""ff15dba09390b8b0a864e57fb0fdd84b20d4193d"", ""ab52d1f4a8f3173622e0758d6f82f1aff0812b93"", ""80ad7189e8de69ce5f7950dcdea4789be7db7014"", ""6d61e5bf5b3bdbdfa3032b2009120c3cceb64607"", ""12d293ca6edab6cc94cbd90840c629a535a12aef"", ""4be855e757b800a9f848823fcee8b7faf3e1eba0"", ""fa5af017d95dfd56b92ebe14064f995b19e4907f"", ""f371e721fae255137670208a62a69174734355ba"", ""237194b76064c95028b14e9ff7d7abfb10abd63d"", ""e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7"", ""087f41409052da35270417c85010c6739fd28200"", ""706b32e0e0a7dd20cc3f74501c1bfd74570b380c"", ""af77acc310204696a1af4e52345b2cf0be341cb1"", ""1824e3a3a37eb9618aa487e6e071395758bdaca8"", ""d8bd12f984d3d5f78c0bcc9819fe002a3b379308"", ""ebdfad69dce1b3a1a48960328e5f6c3ed8fafa41"", ""d4d208595c78d78196c926c55799bc81ae06f230"", ""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""a400a9b2d753fcfc90aa234019ab7afd21966509"", ""7c96b467c1f882874f80403101ec96ddaf624f1a"", ""c25e7eafef350a985ae236987131c5d56b30cfef"", ""c3e7441dadf1d287c76c1c0a3cab68f15a875dbd"", ""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb"", ""f892797e1b459ad568df32d891b368302c40b3c9"", ""3c25c4a691aec646cfdc3f840f356ef3bb5840c0"", ""94343492361a04301a48fc56490d6113ff97aba9"", ""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee"", ""bfc197c3b604baf0dba739ea174d5054284133f0"", ""a1b1c1ea3adb864c8c2e3feb4eaed890a9b505cf"", ""f0266532fc82b8ae9a87407adaf4555dddce690e"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5"", ""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""cceb0c5b4a24d9027abfc47924d5f93af87034b4"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""8766e81079dd4e26b0f5e1b04b8fc319b8d13eb7"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""b237de33d1462e81ac30277033fe2bdffe994784"", ""9cd06e4406377254c4d788299d11e4a040c200d6"", ""81e55ec0f399d5bb2b75e5b2ffa5a62d60a31bc2"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""88a5cede882ee4268685acae5ef6c8660f7f4e44"", ""51bd9da1fdf3d4bb0d4f81234f33003c16db9a51"", ""b47b343fab3dd11eb983cef0a5d4de65dca2ed51"", ""433e835d3ee8c96426694a1029a1f3a8ae9aacec"", ""27839e5ecb562d9b79e740e2e20f7a6db7270a66"", ""a75a57414120426012f49983cbe2b6f7f48ae741"", ""5b3930655fc8aa68d7cd7ae58b32ff8874476e30"", ""498ad7482b2eb4ebc6f4c7458fe6a35f244adaf6"", ""de663966c64e9f27e667ad6a0dacf66aaa8ad32e"", ""d4222e6bee4b6f58faec93cfb8179b695d5cdb9e"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35"", ""a2583466e43adf2f2e56a51f9e35fbd87d9737bf"", ""d9462d27801b337c482d8cde741081a29fcc14fb"", ""38a5db6c9ac21812e4942d7016e4e58429f9ab09"", ""792a94153a44014b52655d4c1af0f298dc9dc9b1"", ""d8c7db1bdba3938f31856a067b2966285acbf97f"", ""fc365a3a001d0ec55e6bde914708911aa1b524c4"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509"", ""159875b5a3a8dd7780aadbf1f7674061fc760920"", ""427794d845534ea0e84e0ef9582f9ae5800c96cf"", ""34e489cb8cee04b52b5cbbfe53280ad8419d0a96"", ""c494db89b5c2ef34758f599ee46ac7265782ad77"", ""218e522c82fc1e05b3db8ba5f59856e2c29ccdc0"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0"", ""840ac20855855b134662683ca3e7d9e364d4bca8"", ""9682b616a21b5e675a1ca82109a11d6f4de1d2de"", ""41d804d9dc48292f61fc1e1efd2241404dc9a6e8"", ""57a0db94956441ac14a252cd09daa45e3f3a9453"", ""b2da5ea773356320af3cda6cfd0f1fc1e7d48ba7"", ""f86df924b01db43eb68f5c4b4cac4c44c1507390"", ""22be435efe63af749149db4ad9177c0f2515be70"", ""f43eb5adcfa3be6368f116656348a29f22f580eb"", ""f782006782c9eb82c893c12084bec1c0cf7d521e"", ""dcffca0a31bfd2ed9aec0f2cc49d14767c7ffec6"", ""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc"", ""0ce8323c0d6908edd126c011ad2d44a72a022c48"", ""c241f5160752753c271366547e2ada8617f1e684"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec"", ""5a0b7212c9c3a672cb47fa2a773bc6cf1c2c4f17"", ""c710d4afdccc0c797745bc3264f3f32a4cdd85da"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6"", ""e978bdf9ef62404083afed28d98e7a455bcecd3b"", ""4d580438b0ce8b3e02213a01f892a34f36cde144"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
e2641e09cc0daf44f63f654230f72d22acf3a9af,fb829ec6a2574265e04de424de9a4b8cdab70fdf,antirez,antirez@gmail.com,Thu Jul 1 14:41:03 2010 +0200,1277988063,gitignore modified,1.0,1.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,18.0,10.0,37.19057870370371,2539.0,1.026888530236837,1181.0,None,False,,
fb829ec6a2574265e04de424de9a4b8cdab70fdf,24110a4d7daa2324e3c2cd165c5741897563ca19,antirez,antirez@gmail.com,Thu Jul 1 14:45:37 2010 +0200,1277988337,Make log target fixed,168.0,1.0,"Changelog,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.0927219401687717,6.0,488.0,51.0,25.319496527777765,2540.5,1.0220601980007324,60.0,Corrective,True,,
24110a4d7daa2324e3c2cd165c5741897563ca19,2c24c22039026baf50768dc2101ed6f3daf87f6c,antirez,antirez@gmail.com,Thu Jul 1 14:47:26 2010 +0200,1277988446,Version is now 2.1.2,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,1.0,9.610856481481482,2542.0,1.104048999371371,61.0,None,False,,
2c24c22039026baf50768dc2101ed6f3daf87f6c,bb8716b6dc6980415da8b40b46ffb6e637f33a6c,antirez,antirez@gmail.com,Thu Jul 1 14:52:01 2010 +0200,1277988721,TODO updated,10.0,19.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,65.0,141.0,16.87011574074074,2543.0,1.059276416082021,1183.0,None,False,,
bb8716b6dc6980415da8b40b46ffb6e637f33a6c,0f49d6b0496b2e881e2dc320b7e16539541fb77a,antirez,antirez@gmail.com,Thu Jul 1 15:14:25 2010 +0200,1277990065,minor aesthetic change,8.0,0.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,259.0,1.0,9.629594907407407,2544.0,1.1038465282927703,62.0,None,False,,
b8b8501d70770465adc67d4effb4dbae2899f3a8 0f49d6b0496b2e881e2dc320b7e16539541fb77a,af4e866dbb1455a50d51b3d5f46832f1a36e2080,antirez,antirez@gmail.com,Thu Jul 1 16:55:12 2010 +0200,1277996112,Merged with split,,,,,,,,,,,,,,,Merge,False,,
af4e866dbb1455a50d51b3d5f46832f1a36e2080,daf2049d0d62aa2b77bd6f9a38d03bb4bbfed59c,antirez,antirez@gmail.com,Thu Jul 1 20:13:33 2010 +0200,1278008013,fixed error code checking for *write operations and return value in AOF rewriting function,4.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,694.0,1.0,9.837326388888886,2545.0,1.101653636411768,63.0,Corrective,True,True,"[""5bd09cd4c5b680040a8bb6ac1ae1395499cc25b7""]"
daf2049d0d62aa2b77bd6f9a38d03bb4bbfed59c,5bd09cd4c5b680040a8bb6ac1ae1395499cc25b7,antirez,antirez@gmail.com,Thu Jul 1 20:18:48 2010 +0200,1278008328,Fix the AOF fix of the latest commit ;),4.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,694.0,2.0,0.003645833333333333,2546.0,275.2857142857143,64.0,Corrective,True,,
5bd09cd4c5b680040a8bb6ac1ae1395499cc25b7,d3b958c3fc32be66dac929ede482ef5fe8f5b462,antirez,antirez@gmail.com,Thu Jul 1 20:22:46 2010 +0200,1278008566,Fixed MONITOR output for consistency: now integer encoded values are also formatted like this: 3932,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,475.0,1.0,9.843726851851851,2547.0,1.1015875404762856,65.0,Corrective,True,,
d3b958c3fc32be66dac929ede482ef5fe8f5b462,3688d7f308877dd2e2c0c786ffa1e46d6bb34a13,antirez,antirez@metal.(none),Thu Jul 1 21:13:38 2010 +0200,1278011618,Compilation fixed on Linux after the source code split,17.0,4.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",6.0,1.0,1.0,2.332263854738758,6.0,874.8333333333335,8.0,8.238888888888889,2550.5,5.4153262856365085,71.0,Corrective,True,True,"[""d4d208595c78d78196c926c55799bc81ae06f230"", ""ac61f9062583d67dd43f7d698824464d1e30d84b""]"
3688d7f308877dd2e2c0c786ffa1e46d6bb34a13 400aea2b1343232e45a0b7a9435a69d0fe8a0956,96ffb2fe97c3e77879e7a4f6f7457397a18bf233,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jul 2 19:57:12 2010 +0200,1278093432,merged intset code into the split files,,,,,,,,,,,,,,,Merge,False,True,"[""2df84b726983ae1f4fc9c16da61d5a0ce5114cc4"", ""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb"", ""65fd32ab0a7ff1d3d052e3b70dcceac6719de58c""]"
96ffb2fe97c3e77879e7a4f6f7457397a18bf233,2767f1c0c6983c75689dc67638546196c5dddb26,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jul 2 20:42:20 2010 +0200,1278096140,fix aof and digest code to work with dual set encoding,28.0,21.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",2.0,1.0,1.0,0.8886466698980794,6.0,504.5,6.0,0.9782638888888888,341.5,1.7666643004188256,1.0,Corrective,True,True,"[""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
3688d7f308877dd2e2c0c786ffa1e46d6bb34a13,b7a8daef6070816e08438fd64b2b9a41571eb333,antirez,antirez@gmail.com,Mon Jul 5 19:38:12 2010 +0200,1278351492,"WATCH will now consider touched keys target of EXPIRE command after the WATCH is performed, but not before",23.0,0.0,"src/db.c,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4262286569981449,6.0,311.0,5.0,23.33114004629629,2554.5,1.0469136599820026,37.0,None,False,,
b7a8daef6070816e08438fd64b2b9a41571eb333,b67d234563e03ceb9325b39a78cca11bec28569d,antirez,antirez@gmail.com,Mon Jul 5 20:06:54 2010 +0200,1278353214,"Fixed a crash loading the AOF file containing MULTI/EXEC, a result of WATCH implementation. Test needed...",2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,708.0,5.0,2.9753935185185183,2556.0,1.336089997432646,73.0,Corrective,True,,
b67d234563e03ceb9325b39a78cca11bec28569d,d06a5b23c85d615310ce199c04bc2d122d16526a,antirez,antirez@gmail.com,Mon Jul 5 20:14:48 2010 +0200,1278353688,Fixed compilation on *BSD systems,2.0,0.0,"TODO,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,2.0,2.0,1.0,6.0,471.0,144.0,4.091649305555555,2557.5,1.1794669216295015,74.0,Corrective,True,,
d06a5b23c85d615310ce199c04bc2d122d16526a,70a214c46d00f37b83a4cb944e09a754072a28c9,antirez,antirez@gmail.com,Mon Jul 5 20:37:20 2010 +0200,1278355040,INSTALL file added BETATESTING.txt removed,19.0,9.0,"BETATESTING.txt,CAS_DELIMITER,INSTALL,CAS_DELIMITER",2.0,1.0,1.0,0.9059282160429992,1.0,4.5,2.0,152.7080150462963,2559.5,1.0032742223769224,1186.0,Feature Addition,False,,
70a214c46d00f37b83a4cb944e09a754072a28c9,d0a4e24e321ced2324b0ad4b6be34f13f90e9b90,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jul 5 15:16:33 2010 -0400,1278357393,"merged code from 184d74ab, 4774a53b, f483ce5f to new file structure",8.0,10.0,"src/t_list.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,907.0,2.0,13.881076388888893,343.5,1.0540303920955538,3.0,Feature Addition,False,,
d0a4e24e321ced2324b0ad4b6be34f13f90e9b90,8b654e54c490161983e42a328675e484e404e2d2,antirez,antirez@gmail.com,Tue Jul 6 17:24:00 2010 +0200,1278429840,First implementation of a replication consistency test,15.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,32.0,3.0,33.75630787037037,2561.0,1.029624092890732,38.0,Preventative,False,True,"[""569f84aa7cda1d47a27738906b1707741151521d""]"
8b654e54c490161983e42a328675e484e404e2d2,b056ca39f2d37957164c5bfc04c466b64aa6087e,antirez,antirez@gmail.com,Tue Jul 6 18:30:38 2010 +0200,1278433838,"improved random dataset creation in test: del, sunionstore, zunionstore",30.0,2.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,198.0,5.0,48.16457175925926,2562.0,1.0207621486805345,39.0,Preventative,False,True,"[""4d7e1255193702937daabf0dbaabbb6876bf5547""]"
b056ca39f2d37957164c5bfc04c466b64aa6087e,f26dde8ca93e50068084cc2f5423b9244296148d,antirez,antirez@gmail.com,Tue Jul 6 18:54:54 2010 +0200,1278435294,"top level Makefile added, so you do not need to cd src",9.0,0.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,50.0,14.782708333333336,2563.0,1.067646602872162,1187.0,Feature Addition,False,,
f26dde8ca93e50068084cc2f5423b9244296148d,acc018549379dc2ac02a0b0484cfdb4d56122488,antirez,antirez@gmail.com,Tue Jul 6 19:07:16 2010 +0200,1278436036,"make install target, finally ;)",12.0,1.0,"Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.6193821946787638,6.0,60.5,53.0,2.595144675925926,2564.5,59.31735800166053,75.0,None,False,,
acc018549379dc2ac02a0b0484cfdb4d56122488,443d1e9efedfcab7d67c10085b69a9b4cb1db6f5,antirez,antirez@gmail.com,Tue Jul 6 19:10:20 2010 +0200,1278436220,Make install fixed using a dummy taget,6.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,10.0,52.0,0.0021296296296296298,2566.0,470.5652173913043,1189.0,Corrective,True,,
443d1e9efedfcab7d67c10085b69a9b4cb1db6f5,185cabda4524efc03c767243fb90083708a4aeeb,antirez,antirez@gmail.com,Tue Jul 6 19:17:09 2010 +0200,1278436629,redis-cli is now able to report version information using -v,5.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,493.0,1.0,14.798159722222225,2567.0,1.0675759701727177,76.0,None,False,True,"[""fdc0bde9359d12dd53b686a6db9c66cf0001670f""]"
185cabda4524efc03c767243fb90083708a4aeeb,99628c1af8ab2a2af4f2baf7039c08acdf0974ce,antirez,antirez@gmail.com,Wed Jul 7 18:44:53 2010 +0200,1278521093,redis-cli history saved across sessions,54.0,7.0,"src/linenoise.c,CAS_DELIMITER,src/linenoise.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,1.0,1.0,0.9371713531760616,6.0,323.6666666666667,4.0,10.843032407407405,2569.0,1.041941445485478,79.0,None,False,True,"[""9d524114eda67dedc38a9f97c9d5f3a5c3747829""]"
99628c1af8ab2a2af4f2baf7039c08acdf0974ce,e51a74aa40136387615eec055975c63c803f5b30,antirez,antirez@gmail.com,Fri Jul 9 10:51:41 2010 +0200,1278665501,fmacro included in linenoise.c,2.0,0.0,"src/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,469.0,2.0,1.6713888888888888,2571.0,1.5983048030580025,80.0,None,False,,
e51a74aa40136387615eec055975c63c803f5b30,5b4bff9c175a0189672d95eb953df5704c891d0c,antirez,antirez@gmail.com,Mon Jul 12 12:01:15 2010 +0200,1278928875,WATCH is now affected only when write commands actually modify the key content,40.0,5.0,"TODO,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",8.0,2.0,2.0,2.7384704466191288,6.0,469.875,153.0,13.568810763888884,2575.5,1.0401056214770847,87.0,None,False,True,"[""8c1420ff2a2a9e68ab3faa98bb82d682301fa66b""]"
5b4bff9c175a0189672d95eb953df5704c891d0c,2cffe2993b01600ab16e7e424b71db4f6327941c,antirez,antirez@gmail.com,Fri Jul 16 23:56:18 2010 +0200,1279317378,"TODO list modified, trivial change to source code",8.0,4.0,"TODO,CAS_DELIMITER,src/object.c,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,6.0,232.0,145.0,14.744288194444444,2580.5,1.1281517710328186,88.0,None,False,,
2cffe2993b01600ab16e7e424b71db4f6327941c,1a71fb96697fc2af064fc221b21421ad6a8196fa,antirez,antirez@gmail.com,Wed Jul 21 13:16:26 2010 +0200,1279710986,"vm_blocked_clients count fixed in INFO, thanks to Pietern Noordhuis",16.0,11.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,589.0,1.0,29.54766203703704,2582.0,1.033843625216321,89.0,Corrective,True,,
1a71fb96697fc2af064fc221b21421ad6a8196fa,0e5441d8161042493fcfdacaeed2a770f1f7285c,antirez,antirez@gmail.com,Thu Jul 22 13:08:02 2010 +0200,1279796882,"don't use object sharing inside I/O threads, as a fix for a well known instability of VM introduced with the new object sharing code",11.0,2.0,"src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.7732283485249176,6.0,936.0,7.0,14.305408950617284,2584.0,1.0805456683425163,92.0,Corrective,True,True,"[""cdbea20afb232a3603f988a1dc235f75d8eff981""]"
0e5441d8161042493fcfdacaeed2a770f1f7285c,cdbea20afb232a3603f988a1dc235f75d8eff981,antirez,antirez@gmail.com,Thu Jul 22 13:12:24 2010 +0200,1279797144,minor typo fixed in a comment,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,411.0,3.0,0.0030324074074074073,2586.0,330.7709923664122,93.0,Corrective,True,,
cdbea20afb232a3603f988a1dc235f75d8eff981,e002ec6801f41d29e1038f687b52dfe6c7fc9c8a,antirez,antirez@gmail.com,Thu Jul 22 14:48:45 2010 +0200,1279802925,other shared objects where created in the I/O thread in createStringObjectFromLongLong. Fixed as well.,2.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,411.0,4.0,0.06690972222222223,2587.0,15.945511157239231,94.0,Corrective,True,,
e002ec6801f41d29e1038f687b52dfe6c7fc9c8a,2f996f02174343ce766710fc6871e2e6df8e73c6,antirez,antirez@gmail.com,Thu Jul 22 15:48:57 2010 +0200,1279806537,defensive programming: set o->ptr to NULL before freeing objects,1.0,0.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,412.0,5.0,0.04180555555555555,2588.0,24.920265780730897,95.0,None,False,,
2f996f02174343ce766710fc6871e2e6df8e73c6,c8a10631d14dfad768b0b924e8dfb240af858dcb,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jul 22 16:06:27 2010 +0200,1279807587,fix rare condition where 'key' would already be destroyed while is was needed later on,6.0,0.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1126.0,1.0,30.665729166666665,345.0,1.0326096925517425,4.0,Corrective,True,,
c8a10631d14dfad768b0b924e8dfb240af858dcb,230729617dc6714858902da5520b4e2c1ecc711e,antirez,antirez@gmail.com,Thu Jul 22 23:31:40 2010 +0200,1279834300,don't open/close log file if log level is not matched,11.0,12.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1518.0,3.0,0.4330787037037037,2589.0,3.3090491207440267,96.0,None,False,,
230729617dc6714858902da5520b4e2c1ecc711e,e39c8b5047c63336f67a7749e8f8cdd539c5eb22,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jul 23 13:08:35 2010 +0200,1279883315,exit with non-zero status when there are failed tests,3.0,3.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,148.0,18.0,37.60293981481482,346.0,1.026593665413522,84.0,Corrective,True,,
e39c8b5047c63336f67a7749e8f8cdd539c5eb22,b1e0bd4b9b5a9c203a4400bd52a06e377876f423,Benjamin Kramer,benny.kra@gmail.com,Sat Jul 24 22:37:01 2010 +0200,1280003821,Reduce code duplication,21.0,39.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,727.0,1.0,32.936956018518515,0.0,0.0,0.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
b1e0bd4b9b5a9c203a4400bd52a06e377876f423,d9dd352b3693e1ad8ab2e0993b4f0a275d7fd512,Benjamin Kramer,benny.kra@gmail.com,Sat Jul 24 23:10:42 2010 +0200,1280005842,Remove _dictAlloc and friendszmalloc calls abort() so _dictPanic will never be called.,12.0,39.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,709.0,2.0,0.023391203703703702,1.0,43.75111331024246,1.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
d9dd352b3693e1ad8ab2e0993b4f0a275d7fd512,399f2f401c6fc3d489e2e40ffc78638425e3a09e,Benjamin Kramer,benny.kra@gmail.com,Sat Jul 24 23:20:00 2010 +0200,1280006400,"Add zcalloc and use it where appropriatecalloc is more effecient than malloc+memset when the system uses mmap tonallocate memory. mmap always returns zeroed memory so the memset can benavoided.  The threshold to use mmap is 16k in osx libc and 128k in bsdnlibc and glibc. The kernel can lazily allocate the pages, this reducesnmemory usage when we have a page table or hash table that is mostlynempty.nnThis change is most visible when you start a new redis instance with vmnenabled.  You'll see no increased memory usage no matter how big yournpage table is.n",18.0,6.0,"src/dict.c,CAS_DELIMITER,src/vm.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",4.0,1.0,1.0,1.519644525083787,6.0,503.25,7.0,17.06028645833333,3.5,39.828768934653795,5.0,Feature Addition,False,True,"[""65fd32ab0a7ff1d3d052e3b70dcceac6719de58c"", ""6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee""]"
399f2f401c6fc3d489e2e40ffc78638425e3a09e,b3aa6d712e1345a57696e4d260ce49ccac253ba7,antirez,antirez@gmail.com,Tue Jul 27 09:36:42 2010 +0200,1280216202,use the function deprecated attribute if compiling with GCC to get warnings for malloc/free usages. We always want to use our zmalloc/zfree versions for memory usage tracking,9.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,6.0,1202.5,8.0,4.636701388888889,2590.5,1.1670356658467462,98.0,None,False,,
b3aa6d712e1345a57696e4d260ce49ccac253ba7,e0be2289e9582423495c5b36a413c02765cde3ea,antirez,antirez@gmail.com,Tue Jul 27 10:00:38 2010 +0200,1280217638,hash table example commented out in dict.c,7.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,680.0,4.0,2.4448842592592595,2592.0,1.4090173169600166,99.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
e0be2289e9582423495c5b36a413c02765cde3ea,80091bbaacf83d82635f3202c1db3f61f56dc0d0,antirez,antirez@gmail.com,Tue Jul 27 10:09:26 2010 +0200,1280218166,STRLEN command implemented,25.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.3705644329032338,6.0,759.75,16.0,17.35558449074074,2594.5,17.517248664012158,40.0,None,False,,
80091bbaacf83d82635f3202c1db3f61f56dc0d0,f99e660b44281cd6bd6c24c60f1ebfb5e0e994e1,antirez,antirez@gmail.com,Tue Jul 27 14:30:02 2010 +0200,1280233802,"malloc definition with deprecated attribute was duplicated, one removed",0.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,897.0,6.0,0.18097222222222226,2597.0,6.525709900230237,103.0,None,False,,
f99e660b44281cd6bd6c24c60f1ebfb5e0e994e1,dd3f505ff527be62f422bf164d5ef62932d0f06a,antirez,antirez@gmail.com,Tue Jul 27 14:42:11 2010 +0200,1280234531,Consistency test improved,100.0,17.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.980892449782821,6.0,231.0,10.0,37.72137731481481,2598.5,1.030618305225932,42.0,Preventative,False,True,"[""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b""]"
dd3f505ff527be62f422bf164d5ef62932d0f06a,db0c43a70c5da44642609414c12c0efbd2ef9746,antirez,antirez@gmail.com,Tue Jul 27 14:46:39 2010 +0200,1280234799,removed test code having bad effects...,0.0,1.0,"tests/unit/other.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,270.0,5.0,0.003101851851851852,2600.0,323.3880597014925,43.0,Preventative,False,,
db0c43a70c5da44642609414c12c0efbd2ef9746,6171250871e408928a172c09d5fdf41961720fbc,antirez,antirez@gmail.com,Tue Jul 27 15:26:08 2010 +0200,1280237168,fixed a ziplist bug about encoding of integer values overflowing 64 bit,20.0,6.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,959.0,2.0,25.758680555555557,2601.0,1.0388218642582732,104.0,Corrective,True,,
6171250871e408928a172c09d5fdf41961720fbc,a0573260b0928170d66268eb22be1a5699615275,antirez,antirez@gmail.com,Wed Jul 28 14:08:46 2010 +0200,1280318926,better random dataset creation function in test. master-slave replication test now is able to save the two datasets in CSV when an inconsistency is detected.,54.0,31.0,"tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.6171519192002819,6.0,161.0,11.0,11.420607638888884,2602.5,1.044758455691703,45.0,Perfective,False,True,"[""569f84aa7cda1d47a27738906b1707741151521d""]"
a0573260b0928170d66268eb22be1a5699615275,8c1420ff2a2a9e68ab3faa98bb82d682301fa66b,antirez,antirez@gmail.com,Wed Jul 28 18:42:02 2010 +0200,1280335322,"Fixed a replication bug in ZINTERSTORE.In order to trigger the bug what's needed is to call ZINTERSTOREnresulting into an empty set created, bug against a key that alreadynexisted. The command was not propagated, so the replica ended with thenkey that the master removed. Sequence of command to reproduce:nnredis-cli hset 446 34 905nredis-cli hset 446 393 911nredis-cli zadd 966 0.085412045980529885 652nredis-cli zadd 645 0.25081839284432045 280nredis-cli zinterstore 446 2 966 645n",7.0,3.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,990.0,3.0,16.27832175925926,2604.0,1.0614313941442517,105.0,Corrective,True,True,"[""9682b616a21b5e675a1ca82109a11d6f4de1d2de""]"
8c1420ff2a2a9e68ab3faa98bb82d682301fa66b,cbf7e1070a5f3bcd8024dff481a2f729a2b5cf2f,antirez,antirez@gmail.com,Wed Jul 28 18:56:52 2010 +0200,1280336212,fix of the fix for the replication bug,1.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,994.0,4.0,0.010300925925925923,2605.0,98.07865168539328,106.0,Corrective,True,,
cbf7e1070a5f3bcd8024dff481a2f729a2b5cf2f,86d392498ba41501f9508e03f6c830d7a5601631,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jul 29 13:31:24 2010 +0200,1280403084,ensure the value is swapped in before testing its encoding,8.0,3.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,93.0,11.0,43.102789351851854,347.0,1.023200354664681,85.0,Preventative,False,True,"[""68254919284ec958225e1bc5fb2951ef096c92d1"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
86d392498ba41501f9508e03f6c830d7a5601631,715c801a07f9157963dc629386eaaf2406ad7572,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jul 29 13:53:52 2010 +0200,1280404432,"Use a large value to consistently trigger a list encoding, even when the list is swapped out and in again.",94.0,87.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,567.0,13.0,34.57025462962963,348.0,1.02892660209517,86.0,None,False,,
cbf7e1070a5f3bcd8024dff481a2f729a2b5cf2f,d9e28bcf00a1e52c5e0c8cbc5f2c8c8cb7d7027f,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jul 29 21:31:58 2010 +0200,1280431918,"Fix ZUNIONSTORE/ZINTERSTORE to never store a NaN score.When +inf and -inf are added, the result is NaN. We don't want NaNnscores in a sorted set, so agreed on the result of this operation beingnzero.n",28.0,0.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,6.0,746.5,13.0,22.66158564814815,349.5,1.4624142431732845,87.0,Corrective,True,,
d9e28bcf00a1e52c5e0c8cbc5f2c8c8cb7d7027f,673e1fb7e4c171f5ead560f6886e877f43730cf0,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jul 29 22:13:31 2010 +0200,1280434411,Change getDoubleFromObject to fail on NaN.Return an error when the resulting value is not a number (NaN). FixnZUNIONSTORE/ZINTERSTORE to clean up when a weight argument is not andouble value.n,31.0,27.0,"src/object.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.175518748411799,6.0,644.6666666666666,21.0,2.4415895061728397,352.0,1.13706444170044,88.0,Corrective,True,,
673e1fb7e4c171f5ead560f6886e877f43730cf0 715c801a07f9157963dc629386eaaf2406ad7572,0c7a9dec651aa15857da30b95cca7079490725ab,antirez,antirez@gmail.com,Sat Jul 31 13:55:06 2010 +0200,1280577306,Merge remote branch 'pietern/list-test',,,,,,,,,,,,,,,Merge,False,,
0c7a9dec651aa15857da30b95cca7079490725ab,68254919284ec958225e1bc5fb2951ef096c92d1,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Aug 1 11:20:26 2010 +0200,1280654426,Fix assertion function on value encoding,2.0,2.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,98.0,12.0,2.9090509259259267,354.0,1.3437547246381425,89.0,Corrective,True,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
0c7a9dec651aa15857da30b95cca7079490725ab,c61e69257af07a3e79b4c623ded540062daa156e,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Aug 1 22:55:24 2010 +0200,1280696124,Support for Redis to listen on a Unix socket,87.0,4.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.313506295182488,6.0,625.5,9.0,32.09527199074074,356.5,1.0131399144359357,11.0,None,False,True,"[""59bdd08214831b268dd7c4981db8404da9c11e3a"", ""da2f9cd1861708e2e4f1334a25fd316e380f779d""]"
c61e69257af07a3e79b4c623ded540062daa156e,7e91f971f7ab63dc5bb60dc0ec5e1ea76efce939,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Aug 1 23:06:00 2010 +0200,1280696760,Add support for domain sockets to redis-cli,21.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,506.0,3.0,25.18133101851852,359.0,1.039711959596758,12.0,Feature Addition,False,,
0c7a9dec651aa15857da30b95cca7079490725ab,bcf2995c987acea7f5485ec0e3717a29a7e98457,antirez,antirez@gmail.com,Mon Aug 2 18:13:39 2010 +0200,1280765619,"support for write operations against expiring keys, by master-controlled expiring in replication and AOF synthesizing DEL operations",86.0,49.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",4.0,1.0,1.0,1.1151745402048985,6.0,798.25,20.0,8.638625578703705,2607.5,1.039185618133475,110.0,None,False,True,"[""4be855e757b800a9f848823fcee8b7faf3e1eba0"", ""024f213b12c62ac7421faad8f6dc855c3e0784c7""]"
bcf2995c987acea7f5485ec0e3717a29a7e98457,c25a5d3b1062f3398a96a76ecd27c6f3a77a446e,antirez,antirez@gmail.com,Mon Aug 2 21:37:39 2010 +0200,1280777859,memory leak removed from expire propagation code,2.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,535.0,4.0,0.14166666666666666,2610.0,8.058823529411764,111.0,None,False,,
c25a5d3b1062f3398a96a76ecd27c6f3a77a446e,0cf5b7b57cde8b699198a866b04feca9f5394d03,antirez,antirez@gmail.com,Tue Aug 3 12:26:30 2010 +0200,1280831190,allow to set a new EXPIRE of an existing volatile key,9.0,15.0,"src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,6.0,716.0,13.0,0.6880902777777778,2611.5,2.17335985747908,113.0,Feature Addition,False,,
0cf5b7b57cde8b699198a866b04feca9f5394d03,2c572622fb99f32328de58f815953f17d4ad0e4d,antirez,antirez@gmail.com,Tue Aug 3 13:08:32 2010 +0200,1280833712,no longer passing tests due to the new write-on-volatile semantics modified/removed,8.0,15.0,"tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9656361333706098,6.0,223.5,10.0,34.32673032407407,2613.5,1.0774645489373191,47.0,Feature Addition,False,True,"[""bf1379c8dfb02ef2b897043ee7c3fced6f2d5929""]"
2c572622fb99f32328de58f815953f17d4ad0e4d 68254919284ec958225e1bc5fb2951ef096c92d1,23d7298b1594cf673f04f2f8561d4f85b8457c6f,antirez,antirez@gmail.com,Tue Aug 3 13:09:27 2010 +0200,1280833767,Merge remote branch 'pietern/test-encoding-fix' into writeonexpire,,,,,,,,,,,,,,,Merge,False,,
7e91f971f7ab63dc5bb60dc0ec5e1ea76efce939,a5639e7dd9a1664c2bee87a51e775a5f73c64ffa,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 3 13:33:12 2010 +0200,1280835192,Change initialization to allow listening on both a port and socket,49.0,20.0,"redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,1.791731565978589,6.0,800.5,70.0,28.655399305555548,362.5,1.0083397381412276,17.0,Feature Addition,False,,
23d7298b1594cf673f04f2f8561d4f85b8457c6f,6146329f1f3381e8daef47463a6588b161f10596,antirez,antirez@gmail.com,Tue Aug 3 13:38:39 2010 +0200,1280835519,replication test with expires,26.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,6.0,172.5,13.0,5.979085648148147,2615.5,1.1254372397612822,49.0,Preventative,False,True,"[""569f84aa7cda1d47a27738906b1707741151521d""]"
6146329f1f3381e8daef47463a6588b161f10596,a539d29ac559ffb80bfe6b3f045eddbd772fa1ba,antirez,antirez@gmail.com,Tue Aug 3 14:19:20 2010 +0200,1280837960,PERSIST command implemented,17.0,5.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5304060778306042,6.0,993.0,25.0,0.04747685185185185,2618.0,10.61388477624548,116.0,None,False,,
a539d29ac559ffb80bfe6b3f045eddbd772fa1ba,1fb4e8def723ac836ba96e5369f22a0bf463578d,antirez,antirez@gmail.com,Tue Aug 3 14:25:22 2010 +0200,1280838322,PERSIST: a fix and some basic test,15.0,2.0,"src/db.c,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9366673818775626,6.0,301.5,13.0,0.02877314814814815,2620.5,129.02567305085273,50.0,None,False,,
68254919284ec958225e1bc5fb2951ef096c92d1,2159782b513da6eaba9be210c6b8b237baab6cfe,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 3 19:21:16 2010 +0200,1280856076,Use flexible array in zskiplistNode to reduce memory usage,64.0,83.0,"src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.38369483316931385,6.0,947.5,18.0,2.545028935185185,366.5,3.482863079461765,19.0,None,False,True,"[""a30047736806e54af0459a2c41767bf0ebc6a572""]"
2159782b513da6eaba9be210c6b8b237baab6cfe,69ef89f2cf5a699d97475ff8e7c3ce714c6947cf,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 3 20:49:53 2010 +0200,1280861393,Reference zset score in zskiplistNode from dict entriesThis avoids the extra allocation of sizeof(double) for storing the scorenof a zset entry in the hash table. Saves sizeof(double) + mallocnoverhead = approx. 16 bytes per zset entry.n,60.0,59.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.2458147728995137,6.0,1142.6666666666667,30.0,0.1314313271604938,369.0,4.076168007564056,22.0,None,False,True,"[""50a9fad5d50488592447dc599a9ef6a184088ee3""]"
68254919284ec958225e1bc5fb2951ef096c92d1,f2dd4769dd1dad4e85fffe4e560b9b355d59e703,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 14:15:52 2010 +0200,1280924152,Tests for the interactive mode of redis-cliChanged redis-cli to output the raw response for a bulk reply when it isnrun in interactive mode instead of checking isatty.n,84.0,4.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.9681044200060688,6.0,223.66666666666663,23.0,4.892858796296296,372.0,1.2760158970056867,91.0,Preventative,False,True,"[""07242c0ccf1fd6a4d8199fa09981e6f7a3a1cce9"", ""588cd980e93a1a9f6afae85ed52ec74ff3d811e1""]"
f2dd4769dd1dad4e85fffe4e560b9b355d59e703,0439d792c46efa328d67e098d688435bca1e2700,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 15:29:28 2010 +0200,1280928568,"Add tests for quotation in an interactive redis-cli sessionPatched redis-cli to abort on unexpected quotation. This causednredis-cli to get into an infinite, memory-consuming loop.n",37.0,3.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.99819587904281,6.0,297.5,6.0,0.05111111111111112,374.5,15.673913043478262,92.0,Feature Addition,False,,
0439d792c46efa328d67e098d688435bca1e2700,07242c0ccf1fd6a4d8199fa09981e6f7a3a1cce9,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 17:02:13 2010 +0200,1280934133,Tests for redis-cli in non-interactive modeMinor change in redis-cli output for the (multi-)bulk response but thisnwill be fixed in the next commit.n,38.0,2.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5435644431995964,6.0,314.5,8.0,0.06440972222222223,376.5,12.644204851752026,93.0,Corrective,True,,
07242c0ccf1fd6a4d8199fa09981e6f7a3a1cce9,123a10f7a5612c7174adeb05d238d88b98fb906d,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 17:16:05 2010 +0200,1280934965,Let the output mode depend on having a tty or not,26.0,12.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5617526078313282,6.0,332.5,10.0,0.00962962962962963,378.5,78.88461538461539,94.0,None,False,,
123a10f7a5612c7174adeb05d238d88b98fb906d,3a51bff0358c38162bc925ab25661e6090cf1161,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 17:46:56 2010 +0200,1280936816,Change output format for non-tty redis-cli execution,34.0,7.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9961344835095796,6.0,339.5,12.0,0.021423611111111112,380.5,36.00810372771475,95.0,None,False,,
3a51bff0358c38162bc925ab25661e6090cf1161,cf0c6b78f132847a576ccd275cb0fffbf0a061ff,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 18:16:39 2010 +0200,1280938599,Set tty before going into interactive mode to get non-pretty output when the commands are read from stdin.,1.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,550.0,9.0,0.020636574074074075,382.0,49.45765563656757,28.0,None,False,,
cf0c6b78f132847a576ccd275cb0fffbf0a061ff,abb731e5b8b2c305c2f4d204d1cca12bdd6fda8c,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 4 18:36:03 2010 +0200,1280939763,Deprecate starting interactive mode using the -i flag,6.0,7.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,549.0,10.0,0.013472222222222222,383.0,75.22680412371135,29.0,None,False,,
1fb4e8def723ac836ba96e5369f22a0bf463578d,cbce5171451eb53f1370aacc30decd74512347ac,antirez,antirez@gmail.com,Thu Aug 5 11:36:39 2010 +0200,1281000999,redis cli argument splitting is general and is now moved into the sds.c lib,81.0,67.0,"src/redis-cli.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",3.0,1.0,1.0,1.0500454276583076,6.0,335.3333333333333,13.0,29.888495370370368,2623.0,1.4814058361151627,120.0,None,False,True,"[""e360e3bb7e58fd493c71911caab948e05e7fbe85"", ""cf4700bda4929d8d952df16bdd3ca73019d15249""]"
cbce5171451eb53f1370aacc30decd74512347ac,c4705381422ead4ad99f4b7a3bc11f059c460401,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Aug 13 19:28:49 2010 +0200,1281720529,Make ziplist schema more efficient for strings with length > 15,144.0,83.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,973.0,3.0,17.168530092592594,384.0,1.0582461046232172,30.0,None,False,True,"[""b0d605c1d6bbf5746cc957946138108b928c88a1""]"
2767f1c0c6983c75689dc67638546196c5dddb26 cbce5171451eb53f1370aacc30decd74512347ac,aaada3f962a9f87fb239e55e3d26c1e794d411d5,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Aug 20 12:40:29 2010 +0200,1282300829,Merge branch 'master' into intset-splitConflicts:ntsrc/Makefilentsrc/t_set.cn,,,,,,,,,,,,,,,Merge,False,,
aaada3f962a9f87fb239e55e3d26c1e794d411d5,87c74dfaa81d204d47ca9ae9e3f76ea521ca8460,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Aug 20 13:42:42 2010 +0200,1282304562,Check if stroll return value was clamped,7.0,0.0,"src/object.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,6.0,350.5,14.0,44.65618634259259,385.5,1.0286980674892887,96.0,None,False,,
87c74dfaa81d204d47ca9ae9e3f76ea521ca8460,a53ebb4c8e7d209ff327b1ae9270b39e72424b2c,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 10:54:31 2010 +0200,1282380871,Don't abort test suite when the server block has a return value,22.0,16.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,268.0,14.0,60.449108796296294,387.0,1.016542841075951,97.0,Preventative,False,,
a53ebb4c8e7d209ff327b1ae9270b39e72424b2c,5d4f3a8c85e528b47d125a588f6255eeb1836e0f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 10:55:53 2010 +0200,1282380953,Move SORT tests around,123.0,134.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,179.0,4.0,79.45063657407405,388.0,1.012586431564556,98.0,Preventative,False,,
5d4f3a8c85e528b47d125a588f6255eeb1836e0f,ced6709cb9f4db367c58035f1ccb4a3ddd9c21cf,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 11:02:22 2010 +0200,1282381342,Make SORT tests use both ziplists and linked lists as input,14.0,6.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,168.0,5.0,0.004502314814814815,389.0,223.1079691516709,99.0,Preventative,False,,
ced6709cb9f4db367c58035f1ccb4a3ddd9c21cf,2b9a59471fe550e7c006ff9efb1367560be76742,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 11:03:56 2010 +0200,1282381436,SORT tests with hash table encoded set as input,2.0,0.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,176.0,6.0,0.0010879629629629627,390.0,920.1489361702127,100.0,Preventative,False,,
2b9a59471fe550e7c006ff9efb1367560be76742,029e5577ff01c13d8ddfdf9c6749ac33c9bd9e9f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 11:15:31 2010 +0200,1282382131,Make SORT use the hybrid set accessors to allow sorting intsets,17.0,12.0,"src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.21639693245126468,6.0,281.0,9.0,19.98814236111111,391.5,1.0250173480756373,101.0,None,False,,
029e5577ff01c13d8ddfdf9c6749ac33c9bd9e9f,cb72d0f155cb8faf6aa02f68318ba9b7477447c3,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Aug 21 11:25:13 2010 +0200,1282382713,Rename iterator to setTypeIterator for consistency,13.0,13.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",4.0,1.0,1.0,1.5734024524177668,6.0,488.5,21.0,26.80067418981481,394.5,1.0148088021566033,36.0,None,False,True,"[""740eee1cc6fb65a094e5f17e85aa37fdaa24f2e9"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
cbce5171451eb53f1370aacc30decd74512347ac,c91abdcd077f868a59290bc9d68fba3130a3121d,antirez,antirez@gmail.com,Mon Aug 23 17:06:38 2010 +0200,1282575998,"Fixed overflow detection in argument to long convertion function in general, and in expire/ttl pairs specifically, addressing issue 54",6.0,5.0,"src/db.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",2.0,1.0,1.0,0.9456603046006402,6.0,478.5,16.0,11.626805555555556,2625.5,1.0463628278002803,122.0,Corrective,True,,
c91abdcd077f868a59290bc9d68fba3130a3121d,e19387302522a81d987bedef98d8961dd7ff06a9,antirez,antirez@gmail.com,Tue Aug 24 10:10:01 2010 +0200,1282637401,changed the comments on top of redis-copy.rb to reflect what the program really does,4.0,6.0,"utils/redis-copy.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,80.0,1.0,414.8840509259259,2627.0,1.0024103119841996,9.0,None,False,,
e19387302522a81d987bedef98d8961dd7ff06a9,a679185aa515e2f52d8a0f66c3972eb8f43d7fae,antirez,antirez@gmail.com,Tue Aug 24 11:45:05 2010 +0200,1282643105,"sanity check for the bulk argument in protocol parsing code, fixing issue 146",14.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4854607607459134,6.0,1226.0,25.0,11.81773148148148,2628.5,1.0454009951038974,124.0,Corrective,True,,
a679185aa515e2f52d8a0f66c3972eb8f43d7fae,01daeecee7a93b92e10347fc2613b8ee22de751e,antirez,antirez@gmail.com,Tue Aug 24 11:49:05 2010 +0200,1282643345,added tests for invalid bulk argument,7.0,0.0,"tests/unit/protocol.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,41.0,2.0,82.55917824074074,2630.0,1.01211252366253,51.0,Feature Addition,False,,
01daeecee7a93b92e10347fc2613b8ee22de751e,e452436a07224022df17c59d6dbfbd47dcfc7fd6,antirez,antirez@gmail.com,Tue Aug 24 12:10:59 2010 +0200,1282644659,"BLPOPping clients are no longer subject to connection timeouts, fixing issues 155",1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,594.0,2.0,33.954548611111115,2631.0,1.0294511351469642,125.0,Corrective,True,,
e452436a07224022df17c59d6dbfbd47dcfc7fd6,778b2210a939083070abaea4b7fc62ebf2ad9bfb,antirez,antirez@gmail.com,Tue Aug 24 16:04:13 2010 +0200,1282658653,slave with attached slaves now close the conection to all the slaves when the connection to the master is lost. Now a slave without a connected link to the master will refuse SYNC from other slaves. Enhanced the replication error reporting. All this will fix Issue 156,26.0,2.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,535.0,5.0,26.99120949074075,2632.5,4.096299576519713,127.0,Corrective,True,True,"[""d37299e3b737addf5a2f6cd1ea47afabdf98730c"", ""179e54d2a9c6545d6f102bf9a3f9506175639743""]"
778b2210a939083070abaea4b7fc62ebf2ad9bfb,b91d605a35c294573f0213c89c421d09b538c2b6,antirez,antirez@gmail.com,Tue Aug 24 16:25:00 2010 +0200,1282659900,"slave now detect lost connection during SYNC, fixing Issue 173",2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,487.0,3.0,0.014432870370370368,2634.0,70.28628708901364,128.0,Corrective,True,,
b91d605a35c294573f0213c89c421d09b538c2b6,695fe87456ac4e5ed14e4a853b9cce61fb3e5975,antirez,antirez@gmail.com,Tue Aug 24 17:09:25 2010 +0200,1282662565,The pid file is now created only after the server is correctly initialied. It is also removed on sigterm and when the stack trace is produced after a sigbus or a sigsegv. This two changes should fix the Issue 175,13.0,12.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1561.0,12.0,0.2252314814814815,2635.0,5.439876670092498,129.0,Corrective,True,True,"[""8ce39260a4acfedea5ee8f9143d2d2a9ce82b498"", ""adae85cdaed4db207537400c312fdc9e5f525883"", ""d4d208595c78d78196c926c55799bc81ae06f230""]"
695fe87456ac4e5ed14e4a853b9cce61fb3e5975,b37ca6edb10faa0ebcf54a7d23cee31d895fe5b1,antirez,antirez@gmail.com,Tue Aug 24 18:08:09 2010 +0200,1282666089,"Issue 179 fixed, now redis-cli is able to parse correctly multi bulk replies with elements that are errors",3.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,484.0,12.0,19.271875,2636.0,1.0518890870763742,130.0,Corrective,True,,
b37ca6edb10faa0ebcf54a7d23cee31d895fe5b1,c0b3d42372dbe67c6ef096372869e2b60d4a1cdc,antirez,antirez@gmail.com,Tue Aug 24 18:39:34 2010 +0200,1282667974,redis-cli now supports automatically reconnection in interactive mode,34.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,485.0,13.0,0.02181712962962963,2637.0,46.835543766578255,131.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
abb731e5b8b2c305c2f4d204d1cca12bdd6fda8c c0b3d42372dbe67c6ef096372869e2b60d4a1cdc,4b93e5e2676e1dc45de1c118c03042de1ce9f024,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 09:54:02 2010 +0200,1282722842,Merge master and move argument splitting patch to sds.c,,,,,,,,,,,,,,,Merge,False,True,"[""2929ca9786e0dd64c656bbd212c35c137ab54fda""]"
4b93e5e2676e1dc45de1c118c03042de1ce9f024,5d15b5207d3fb83b4815df596251f553b7a811d5,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 10:05:50 2010 +0200,1282723550,Re-introduce the interactive field so we can reconnect in interactive mode,3.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,510.0,14.0,0.6432407407407408,397.0,2.554627896933928,37.0,None,False,,
5d15b5207d3fb83b4815df596251f553b7a811d5,ae77016e572bc5ed48574c3a173c4cda27c5e0d9,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 13:39:11 2010 +0200,1282736351,Add a newline to tty output after every reply,5.0,7.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6500224216483541,6.0,334.5,20.0,10.488055555555556,398.5,4.398572988286281,102.0,Feature Addition,False,,
ae77016e572bc5ed48574c3a173c4cda27c5e0d9,f9b252613bcdaf81183a1ed2fb12d1a9feabc183,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 14:08:32 2010 +0200,1282738112,Comments in redis-cli tests,3.0,0.0,"tests/integration/redis-cli.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,158.0,6.0,0.020381944444444446,400.0,50.063032367972745,103.0,Preventative,False,,
f9b252613bcdaf81183a1ed2fb12d1a9feabc183,f791d66e205b7449ee1829e60c2422caa5988192,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 14:15:41 2010 +0200,1282738541,Make helper functions simpler,12.0,17.0,"tests/integration/redis-cli.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,161.0,7.0,0.0049652777777777785,401.0,202.39860139860141,104.0,None,False,,
f791d66e205b7449ee1829e60c2422caa5988192,b4b62c34dbc97b8bcb6c84e0d0cef1d27117175e,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 25 14:48:50 2010 +0200,1282740530,Use fstat to detect if stdin was redirected,78.0,15.0,"src/redis-cli.c,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9696787018231176,6.0,332.5,24.0,0.035694444444444445,402.5,18.34129234275882,105.0,None,False,,
cb72d0f155cb8faf6aa02f68318ba9b7477447c3,76864d5626e6dc7d436df5c11901844a4c05740e,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 26 11:06:30 2010 +0200,1282813590,Expand macro's to functions for readability,53.0,36.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,404.0,0.0,40.0,None,False,True,"[""6136a16bd1fe4a88ada02e31e597b805d8a86b55""]"
76864d5626e6dc7d436df5c11901844a4c05740e,f9d5c4e33c8b03d20bd9e4ec145792c000a7210f,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 26 11:22:58 2010 +0200,1282814578,Make the function intsetUpgrade self-contained,28.0,17.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,17.0,1.0,0.011435185185185184,405.0,88.4493927125506,41.0,None,False,True,"[""6136a16bd1fe4a88ada02e31e597b805d8a86b55""]"
b4b62c34dbc97b8bcb6c84e0d0cef1d27117175e f9d5c4e33c8b03d20bd9e4ec145792c000a7210f,acc75bfd4f1607625876d74d6447efaaf505db59,antirez,antirez@gmail.com,Thu Aug 26 12:04:24 2010 +0200,1282817064,Merge remote branch 'pietern/intset-split',,,,,,,,,,,,,,,Merge,False,,
acc75bfd4f1607625876d74d6447efaaf505db59,674492bcebbfd59612ad65d7429b3db5735bd447,antirez,antirez@gmail.com,Thu Aug 26 12:10:16 2010 +0200,1282817416,removed a duplicated ERRNO checking that is useless at all,0.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,417.0,9.0,2.794189814814815,2638.0,1.3578854932109454,132.0,None,False,,
674492bcebbfd59612ad65d7429b3db5735bd447,740eee1cc6fb65a094e5f17e85aa37fdaa24f2e9,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 26 12:13:51 2010 +0200,1282817631,Fix type that was not renamed and compiler warning,2.0,2.0,"src/intset.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,193.0,5.0,2.534554398148148,406.5,15.248653045058346,43.0,Corrective,True,,
740eee1cc6fb65a094e5f17e85aa37fdaa24f2e9,5f19e8a4a5183255a38c31ea88ee6b72e96eca66,antirez,antirez@gmail.com,Thu Aug 26 12:28:53 2010 +0200,1282818533,computeObjectSwappability is now able to compute swappability for intset encoded sets,14.0,9.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1131.0,3.0,32.54783564814815,2639.0,1.030724009141815,133.0,None,False,,
5f19e8a4a5183255a38c31ea88ee6b72e96eca66,bad7d097e95ec0735c41f85b50ace65bec6134ae,antirez,antirez@gmail.com,Thu Aug 26 13:18:24 2010 +0200,1282821504,fixed a memory leak in the new Set code,3.0,1.0,"src/rdb.c,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,6.0,524.0,23.0,22.474907407407407,2640.5,1.0328723654729095,52.0,Corrective,True,,
bad7d097e95ec0735c41f85b50ace65bec6134ae,2929ca9786e0dd64c656bbd212c35c137ab54fda,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 26 13:18:19 2010 +0200,1282821499,Fix parenthesis error on decrementing *argc,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,461.0,2.0,21.07060185185185,408.0,1.047459489151332,44.0,Corrective,True,,
bad7d097e95ec0735c41f85b50ace65bec6134ae,e59a64b8d37c4d051234934ad74f70c4ac625e95,antirez,antirez@gmail.com,Thu Aug 26 13:18:56 2010 +0200,1282821536,"forgot the traceleaks var in tests set to 1, reverted to the default, 0",1.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,156.0,21.0,0.00037037037037037035,2642.0,2701.0,53.0,Preventative,False,,
bad7d097e95ec0735c41f85b50ace65bec6134ae,94364d53b4746e8cd9e3da633162cb1e34f0bdb6,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 26 14:05:14 2010 +0200,1282824314,Verify that the blocking pop timeout value is a non-negative integer,35.0,1.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9640787648082292,6.0,706.0,17.0,36.54699652777778,409.5,1.0179303999587348,106.0,None,False,,
e59a64b8d37c4d051234934ad74f70c4ac625e95 2929ca9786e0dd64c656bbd212c35c137ab54fda,4e0d34089ac874db92430820b9fe5ce8426c2ae5,antirez,antirez@gmail.com,Thu Aug 26 16:19:06 2010 +0200,1282832346,Merge remote branch 'pietern/redis-cli-fix',,,,,,,,,,,,,,,Merge,False,,
4e0d34089ac874db92430820b9fe5ce8426c2ae5,e4ecc931192bee19d0365d2efe0e12b1be27dc9a,antirez,antirez@gmail.com,Thu Aug 26 16:58:02 2010 +0200,1282834682,Version is now 2.1.3,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,2.0,56.090694444444466,2643.0,1.0178282691969602,135.0,None,False,,
e4ecc931192bee19d0365d2efe0e12b1be27dc9a,452ccf7a415fd748cb0b3d00bef8062455c3c675,antirez,antirez@gmail.com,Thu Aug 26 17:29:13 2010 +0200,1282836553,SORT stress testing against bigger aggregate values,4.0,2.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,179.0,8.0,5.259513888888889,2644.0,1.1901316397533568,54.0,Preventative,False,,
452ccf7a415fd748cb0b3d00bef8062455c3c675,588cd980e93a1a9f6afae85ed52ec74ff3d811e1,antirez,antirez@gmail.com,Thu Aug 26 17:52:02 2010 +0200,1282837922,"redis-cli tests commented out since there is a problem with the CI server and this tests, will be activated again once the problem is fixed",1.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,156.0,22.0,0.18965277777777773,2645.0,6.272793848407178,55.0,Corrective,True,,
588cd980e93a1a9f6afae85ed52ec74ff3d811e1,23c64fe50ddbc01f825ebe64f1a8b5f14c584327,antirez,antirez@metal.(none),Thu Aug 26 18:11:26 2010 +0200,1282839086,translated a few long logn into int64_t for correctness and to avoid compilation warnings as well,3.0,3.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,6.0,654.3333333333334,15.0,7.88167824074074,2647.0,1.0427164256515749,138.0,None,False,,
23c64fe50ddbc01f825ebe64f1a8b5f14c584327,ec7e138926b7b587adc247e8c64da6d3b1706434,antirez,antirez@gmail.com,Thu Aug 26 18:47:03 2010 +0200,1282841223,test for intset integer encodability test and some small refactoring,33.0,11.0,"src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER",3.0,1.0,1.0,0.9373012413074896,6.0,493.66666666666674,21.0,22.69834104938272,2650.0,1.2940796661912022,141.0,Preventative,False,,
ec7e138926b7b587adc247e8c64da6d3b1706434,2df84b726983ae1f4fc9c16da61d5a0ce5114cc4,antirez,antirez@gmail.com,Thu Aug 26 19:10:40 2010 +0200,1282842640,intset loading bug fixed,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,894.0,5.0,0.04113425925925926,2652.0,25.31063590320765,142.0,Corrective,True,,
2df84b726983ae1f4fc9c16da61d5a0ce5114cc4,357d36733dc37d87160ca2f65013656693290e9d,antirez,antirez@gmail.com,Fri Aug 27 11:01:03 2010 +0200,1282899663,"Fixed segfault in freeMemoryIfNeeded due to the fact that keys are now sds strings and not objects in the main hash table, thanks to Anthony Lauzon for spotting the bug and providing a patch.",5.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1562.0,13.0,2.7441898148148147,2653.0,1.3644062792600529,143.0,Corrective,True,,
357d36733dc37d87160ca2f65013656693290e9d,09252fc4f36e9a5b89c9a9ff8b3c9750a3144b45,antirez,antirez@gmail.com,Fri Aug 27 12:46:10 2010 +0200,1282905970,Fixed another instace of the Issue 173,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,487.0,4.0,2.848032407407408,2654.0,1.3511196001137888,144.0,Corrective,True,,
09252fc4f36e9a5b89c9a9ff8b3c9750a3144b45,c1ae36aea814e1bcb0f046a00b51ed46d7432c3b,antirez,antirez@gmail.com,Fri Aug 27 17:04:26 2010 +0200,1282921466,"Fix for bug 312, yet to verify in a couple of minutes...",13.0,2.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1136.0,4.0,1.1913541666666667,2655.0,1.8393809565445485,145.0,Corrective,True,True,"[""e5f257c2b2f7be0d58ebc0cf791d549c647cab6b""]"
c1ae36aea814e1bcb0f046a00b51ed46d7432c3b,e5f257c2b2f7be0d58ebc0cf791d549c647cab6b,antirez,antirez@gmail.com,Fri Aug 27 17:06:36 2010 +0200,1282921596,fix for the prev fix,1.0,1.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1147.0,5.0,0.0015046296296296294,2656.0,665.6153846153846,146.0,Corrective,True,,
e5f257c2b2f7be0d58ebc0cf791d549c647cab6b,2f6b31c3bb95443991513e496d8d19656c4a80b5,antirez,antirez@gmail.com,Mon Aug 30 10:32:32 2010 +0200,1283157152,"Fix for a race in BGSAVE that may result in some data not being saved as soon as possible (when the configured saving triggers should fire). Also known as Issue 313, more details there in the google code issue.",3.0,1.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,6.0,898.0,22.0,3.6483854166666654,2657.5,1.205879111534912,148.0,Corrective,True,,
2f6b31c3bb95443991513e496d8d19656c4a80b5,36babc1e31f434e95fc49a6a1f611a75b3827ade,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 30 11:14:54 2010 +0200,1283159694,Refactor reply parsing code in redis-benchmark for efficiency,87.0,69.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,675.0,2.0,28.513541666666665,411.0,1.0350710554195741,46.0,None,False,,
36babc1e31f434e95fc49a6a1f611a75b3827ade,ed0dd55402710d5bb21ef66d81a7dff694737c22,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 30 11:25:02 2010 +0200,1283160302,Show the current throughput while benchmarking,50.0,36.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,693.0,3.0,0.007037037037037038,412.0,143.10526315789474,47.0,None,False,,
2f6b31c3bb95443991513e496d8d19656c4a80b5,8fedd04dccd08e9a25652a22c2034d3f38f72d0f,antirez,antirez@gmail.com,Mon Aug 30 11:37:17 2010 +0200,1283161037,Makefile deps updated,42.0,5.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,122.0,3.0,54.687511574074065,2659.0,1.0182857104157226,149.0,None,False,,
8fedd04dccd08e9a25652a22c2034d3f38f72d0f,e0e1c195202dd74ab22554dd4293672cc95368ee,antirez,antirez@gmail.com,Mon Aug 30 11:51:45 2010 +0200,1283161905,Fixed MONITOR mode and Issue 296,6.0,5.0,"src/db.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.9940302114769564,6.0,530.5,26.0,5.829178240740743,2660.5,1.1166195298160475,151.0,Corrective,True,,
e0e1c195202dd74ab22554dd4293672cc95368ee,93b2a7718eefd73cdd1b3b221cfc38be83fca0b5,antirez,antirez@gmail.com,Mon Aug 30 15:36:13 2010 +0200,1283175373,It is now possible to use authentication and DB selection options at the same time in redis-cli (Issue 298),6.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,521.0,18.0,0.15587962962962962,2662.0,7.4152064152064145,152.0,None,False,,
93b2a7718eefd73cdd1b3b221cfc38be83fca0b5,8079656a8ea7c379815366c6f89f9954e86a57be,antirez,antirez@gmail.com,Mon Aug 30 15:57:03 2010 +0200,1283176623,Now redis-cli replies to help showing some basic usage information (Issue 291),20.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,527.0,19.0,0.014467592592592591,2663.0,70.12,153.0,None,False,,
8079656a8ea7c379815366c6f89f9954e86a57be,fb92ecece75ec48efb927fa6c2f2f86a58f73609,antirez,antirez@gmail.com,Mon Aug 30 16:31:03 2010 +0200,1283178663,"BLPOP inside MULTI/EXEC block no longer crashes, instead if the list is empty the behavior is like if the timeout is reached. This fixes Issue 285",18.0,0.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9640787648082292,6.0,723.0,19.0,4.101261574074074,2664.5,1.1828705598153233,56.0,Corrective,True,,
ed0dd55402710d5bb21ef66d81a7dff694737c22,834ef78e27a8690a91d727259aaece611664a368,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 30 14:44:34 2010 +0200,1283172274,Refactor reply buildup for speed on large multi bulk replies,153.0,96.0,"src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.36579016243524937,6.0,642.0,31.0,3.4089544753086423,414.0,1.1218277942836312,50.0,None,False,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
834ef78e27a8690a91d727259aaece611664a368,b301c1fc2bbf977a7d9fd4718cd9914113541c75,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 30 16:02:06 2010 +0200,1283176926,Wrapper for adding unknown multi bulk length to reply list,47.0,28.0,"src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",7.0,1.0,1.0,2.477221089122707,6.0,612.2857142857142,52.0,15.319685846560848,419.0,1.0259258756364686,57.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
b301c1fc2bbf977a7d9fd4718cd9914113541c75,57b0738011007e47ebe25d5c81acfe333c561e02,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 30 16:51:39 2010 +0200,1283179899,Don't build a reply when replaying the AOF,6.0,3.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,6.0,693.5,14.0,1.9895023148148148,423.5,1.2524152955035457,59.0,None,False,,
fb92ecece75ec48efb927fa6c2f2f86a58f73609,1eb13e4913622927b17b9c2922754f864d520710,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 31 09:37:25 2010 +0200,1283240245,Fix set tests to make sets have a deterministic encoding,21.0,16.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,293.0,8.0,10.829664351851852,425.0,1.092338965226471,107.0,Corrective,True,,
fb92ecece75ec48efb927fa6c2f2f86a58f73609,7b30cc3a7bed6ea1d5b4131f977d554d78791bf7,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 31 10:21:35 2010 +0200,1283242895,Fix issue 300 by upgrading variable types to 64-bit,16.0,14.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,671.0,1.0,70.42623842592594,426.0,1.0141992533230608,60.0,Corrective,True,True,"[""f85202c3dc6213bffdc3ccf998e4ea85a36ad9a8"", ""a047bf52a4fed963a434c6e7e7376880cf17abcf"", ""145473acc5798a499a0f37e42df48a014a3955c1""]"
1eb13e4913622927b17b9c2922754f864d520710,08f55b786b58b3e0f8310e02683a0e1761c5b6bf,antirez,antirez@gmail.com,Tue Aug 31 11:17:06 2010 +0200,1283246226,faster server starting in Redis tests,27.0,6.0,"tests/support/server.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER",3.0,1.0,2.0,0.6540471842463447,6.0,197.0,24.0,17.282650462962962,2667.0,1.0471390357531585,59.0,Preventative,False,,
08f55b786b58b3e0f8310e02683a0e1761c5b6bf 7b30cc3a7bed6ea1d5b4131f977d554d78791bf7,fc09b9f44918bec49f5bbded81f5dc9172a6e396,antirez,antirez@gmail.com,Tue Aug 31 11:19:11 2010 +0200,1283246351,Merge remote branch 'pietern/issue-300',,,,,,,,,,,,,,,Merge,False,,
fc09b9f44918bec49f5bbded81f5dc9172a6e396 94364d53b4746e8cd9e3da633162cb1e34f0bdb6,f7f12a606c39fcb09a203faaaa12c49882409d8f,antirez,antirez@gmail.com,Tue Aug 31 11:23:12 2010 +0200,1283246592,resolved conflict merging pietern/bpop-timeout,,,,,,,,,,,,,,,Merge,False,,
f7f12a606c39fcb09a203faaaa12c49882409d8f,d320764706cce1b4339043eb2ee9240d5fe3f2d2,antirez,antirez@gmail.com,Tue Aug 31 11:42:52 2010 +0200,1283247772,We finally have an half decent README! (Issue 277),68.0,1.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,1.0,527.0089351851851,2669.0,1.0018975010350604,1192.0,None,False,,
7b30cc3a7bed6ea1d5b4131f977d554d78791bf7,f85202c3dc6213bffdc3ccf998e4ea85a36ad9a8,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Aug 31 13:06:26 2010 +0200,1283252786,Fix compilation errors and add warning for 32-bit platforms,11.0,7.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,673.0,2.0,0.11447916666666667,427.0,9.735213830755233,61.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
d320764706cce1b4339043eb2ee9240d5fe3f2d2 f85202c3dc6213bffdc3ccf998e4ea85a36ad9a8,ec96ef47a630f608ae6a3103dd9a44e7eea598d9,antirez,antirez@gmail.com,Tue Aug 31 17:39:06 2010 +0200,1283269146,Merge remote branch 'pietern/issue-300',,,,,,,,,,,,,,,Merge,False,,
ec96ef47a630f608ae6a3103dd9a44e7eea598d9,dbebd395ebc897275ec84edb143b1067aef8d882,antirez,antirez@gmail.com,Tue Aug 31 18:34:34 2010 +0200,1283272474,Version is now 2.1.4 -- AKA 2.2-alpha1,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,3.0,5.0670370370370375,2670.0,1.1973539945910383,155.0,None,False,,
dbebd395ebc897275ec84edb143b1067aef8d882,a047bf52a4fed963a434c6e7e7376880cf17abcf,antirez,antirez@metal.(none),Wed Sep 1 18:31:30 2010 +0200,1283358690,fixed a few harmless warnings complining on Linux,6.0,3.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,677.0,3.0,1.2257407407407408,2671.0,1.815833207433147,156.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
a047bf52a4fed963a434c6e7e7376880cf17abcf,eddb388ef90258be406bdf1355f7c65bdd71bbe8,antirez,antirez@metal.(none),Thu Sep 2 10:34:39 2010 +0200,1283416479,memory fragmentation ratio in INFO output,50.0,0.0,"src/config.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",4.0,1.0,1.0,0.8421167451518299,6.0,456.0,19.0,39.33849826388889,2673.5,1.010348916910881,160.0,None,False,,
eddb388ef90258be406bdf1355f7c65bdd71bbe8,73db2acc374c99ca8224e44a7383f69e7ca24a4f,antirez,antirez@gmail.com,Thu Sep 2 10:57:58 2010 +0200,1283417878,memory fragmentation reporting in INFO also added for Mac OS X,36.0,6.0,"src/config.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.5266170655714282,6.0,132.0,5.0,0.016192129629629633,2676.5,47.31879914224447,162.0,Feature Addition,False,True,"[""7cdc98b6305bb65aee5f5973e8123246755dac7d""]"
57b0738011007e47ebe25d5c81acfe333c561e02,0537e7bf8042cf9954d3b0abab567edf3b5c0516,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 12:38:34 2010 +0200,1283423914,Use specialized function to add multi bulk reply length,14.0,10.0,"src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",9.0,1.0,1.0,2.9906015629507223,6.0,566.8888888888888,60.0,14.715226337448554,432.0,1.010830857757118,70.0,Feature Addition,False,,
0537e7bf8042cf9954d3b0abab567edf3b5c0516,2403fc9fdec6113f10aa54770714e550eaab1b69,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 14:17:53 2010 +0200,1283429873,Intialize bufpos in the fake client,1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,713.0,9.0,2.8932175925925927,437.0,1.3456359461383984,71.0,None,False,,
2403fc9fdec6113f10aa54770714e550eaab1b69,cd76bb651ddc9168451e6729fdf7793eb628f57c,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 14:19:15 2010 +0200,1283429955,Free the sds in addReplySds when it cannot be added to the reply,5.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,681.0,8.0,0.06991898148148147,438.0,15.302267836450918,72.0,Feature Addition,False,,
cd76bb651ddc9168451e6729fdf7793eb628f57c,b70d355521fd02737c4de2a1583025699f1554f8,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 14:30:56 2010 +0200,1283430656,Use existing reply functions where possible,10.0,12.0,"src/db.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",7.0,1.0,1.0,2.59490661824394,6.0,539.5714285714286,50.0,0.4864120370370369,442.0,1.3161463941694624,79.0,None,False,,
b70d355521fd02737c4de2a1583025699f1554f8,4a7893ca9ce334f2a144faa96ef02113bef4b2b2,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 14:31:25 2010 +0200,1283430685,Removed unneeded function,0.0,5.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,6.0,803.0,29.0,0.04340856481481481,446.5,65.93731429416718,81.0,None,False,,
4a7893ca9ce334f2a144faa96ef02113bef4b2b2,36c19d03e08b94ea1bc246918cbd71ea810d38aa,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 19:18:55 2010 +0200,1283447935,Changed reply buildup internals,97.0,62.0,"src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.4172503609701677,6.0,672.6666666666666,42.0,1.196608796296296,449.0,2.860743600008592,84.0,None,False,True,"[""49128f0b9da725de992e427fa341a837bcc2991b"", ""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
36c19d03e08b94ea1bc246918cbd71ea810d38aa,60361e5aac5b06ab06f4a63439ce84cd58c87f3d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 19:35:07 2010 +0200,1283448907,Add sds function that can be called with va_list,15.0,6.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.4537163391869448,6.0,268.0,5.0,17.796967592592594,451.5,1.082902053472159,86.0,Feature Addition,False,,
60361e5aac5b06ab06f4a63439ce84cd58c87f3d,3ab203762f28ffec4036dc4f5a188d637cf78ff1,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 19:52:24 2010 +0200,1283449944,Use specialized function to add status and error replies,122.0,83.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",13.0,1.0,1.0,3.3071954189687154,6.0,615.9230769230769,119.0,1.8224430199430204,459.0,1.4164457193465605,99.0,Feature Addition,False,True,"[""ef59a8bc9ef426f9d24e701e9b73a6a03ddd3d0f"", ""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""32a83c8206a501f300e971f46cb6cd469731e74f"", ""a6edfceaa876ac6f21d7995aaf2380ab0eb50cbe"", ""111d24f2465a41ddc100a11549dab3f0cd5ddc1b"", ""d55598988b3381afff87bc974f5cfda0e8ae77e0"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
3ab203762f28ffec4036dc4f5a188d637cf78ff1,49128f0b9da725de992e427fa341a837bcc2991b,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 2 23:34:32 2010 +0200,1283463272,Fix bug in gluing a deferred multi bulk length to the next reply chunk,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,764.0,12.0,0.15425925925925926,466.0,7.482593037214887,100.0,Corrective,True,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
73db2acc374c99ca8224e44a7383f69e7ca24a4f,b435f64510a032528c42fc1cfc4eca15a4474a1b,Anko painting,anko.com+github@gmail.com,Thu Sep 2 21:13:27 2010 -0700,1283487207,fix for issue 237,3.0,0.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1147.0,6.0,6.546423611111113,0.0,0.0,0.0,Corrective,True,True,"[""556bdfbab9062d472e19d882ae045fece36a25ab""]"
b435f64510a032528c42fc1cfc4eca15a4474a1b,556bdfbab9062d472e19d882ae045fece36a25ab,antirez,antirez@gmail.com,Fri Sep 3 10:24:18 2010 +0200,1283502258,added some comment and changed coding style for fix for 237,5.0,3.0,"src/vm.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1150.0,7.0,0.1742013888888889,2678.0,6.740482359976081,163.0,Corrective,True,,
49128f0b9da725de992e427fa341a837bcc2991b 556bdfbab9062d472e19d882ae045fece36a25ab,9e83ac06ef1c978c65fefc1fbf5af1e95f31fe15,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Sep 3 16:44:31 2010 +0200,1283525071,Merge branch 'master' into networking-perfResolved conflict in src/db.c and changed adding an error to the replynin blockingPopGenericCommand to use the new API.n,,,,,,,,,,,,,,,Merge,False,,
556bdfbab9062d472e19d882ae045fece36a25ab,abe18d0e00f8ef15aac18ce59c17f90627b72e9e,antirez,antirez@gmail.com,Mon Sep 6 10:12:44 2010 +0200,1283760764,Fix for solaris compilation bug Issue 325,199.0,76.0,"doc/BlpopCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/HashCommandsSidebar.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/MultiExecCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZunionCommand.html,CAS_DELIMITER,doc/ZunionstoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,src/solarisfixes.h,CAS_DELIMITER",19.0,2.0,2.0,2.9917507233098126,6.0,51.94736842105264,132.0,109.55692373294347,2688.0,1.0016766003300266,164.0,Corrective,True,,
c4705381422ead4ad99f4b7a3bc11f059c460401,169d2ef1e0259945e667a33db7944947a6b047a0,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Sep 6 23:12:41 2010 +0200,1283807561,"Fix updating the prevlen field of consecutive entriesIn the condition where the prevlen field of the next entry on insertnand delete operations needs more bytes to be properly encoded, the nextnentry also needs to be updated with a new prevlen. This patch makes surenthat this effect cascades throughout the ziplist.n",208.0,13.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1034.0,4.0,24.155462962962964,467.0,1.0413985027541504,101.0,Corrective,True,True,"[""306c6a02e333583bedd7b9ff15a27008c1008c51"", ""b7d3bf51575525c0475a13941d8eb44f4800b9cd"", ""56538477143b144f2267ce98805a7b6edc763528"", ""3fa19b7dfc785aeaa8c1d32782b0b0018a965d13"", ""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70"", ""ac61f9062583d67dd43f7d698824464d1e30d84b""]"
169d2ef1e0259945e667a33db7944947a6b047a0,84403fe7c1ab582c1fff4ddb5d933ba1a5f61759,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Sep 7 00:08:42 2010 +0200,1283810922,Allow a random seed argument for the ziplist test binary,4.0,0.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1229.0,5.0,0.03890046296296296,468.0,26.706634930080327,102.0,Preventative,False,,
abe18d0e00f8ef15aac18ce59c17f90627b72e9e,106bd87a3ca7b90e1e6fb764398bbefccee3e4fa,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Sep 6 11:27:22 2010 +0200,1283765242,"Fix bug where the client is not present in server.clients when free'ing itWhen creating the readable event results in an error (this happens whennthe server hits OS limits), the client was not added to the list ofnclients when freeClient was called. This results in an assertion error.nIt is better to check this condition first and free the clientnimmediately when this condition occurs. Port of 00a90feb.n",8.0,5.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,764.0,13.0,3.495023148148148,469.0,1.286121137861377,103.0,Corrective,True,,
106bd87a3ca7b90e1e6fb764398bbefccee3e4fa,efc5d4cc0dd285b45061d61d7a717777aa8bc7a0,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Sep 7 11:49:33 2010 +0200,1283852973,Fix test that sometimes returned the swapped object instead of encoding,2.0,2.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,295.0,4.0,96.52405092592592,470.0,1.0103601122249564,108.0,Corrective,True,,
efc5d4cc0dd285b45061d61d7a717777aa8bc7a0,7f00cd226438d3cd91238974346cee624d8920e1,antirez,antirez@gmail.com,Wed Sep 8 13:26:16 2010 +0200,1283945176,Fixed a race condition in VM happening when a key was deleted while there was a client waiting for this key to be resumed from swap to memory. The client would hang forever.,5.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,535.0,13.0,5.731851851851853,2698.0,1.1744636857069009,165.0,Corrective,True,True,"[""155fb4b45e9da66802aed6226189941459fa014f""]"
7f00cd226438d3cd91238974346cee624d8920e1,155fb4b45e9da66802aed6226189941459fa014f,antirez,antirez@gmail.com,Wed Sep 8 13:45:51 2010 +0200,1283946351,"latest fix reverted, there is some problem reported by the CI test",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,540.0,14.0,0.013599537037037037,2699.0,74.53191489361703,166.0,Corrective,True,True,"[""da14590bd9ecef2efca89a82677d390cc36afafd""]"
155fb4b45e9da66802aed6226189941459fa014f,da14590bd9ecef2efca89a82677d390cc36afafd,antirez,antirez@gmail.com,Wed Sep 8 13:47:28 2010 +0200,1283946448,"Fix re-enabled again, I forgot to check if VM was enabled before calling handleClientsBlockedOnSwappedKey()",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,540.0,15.0,0.0011226851851851851,2700.0,891.7216494845361,167.0,Corrective,True,,
da14590bd9ecef2efca89a82677d390cc36afafd,7f9a4db3c013b744e11dc7f58026009392b051de,antirez,antirez@gmail.com,Thu Sep 9 10:24:56 2010 +0200,1284020696,"Fix for the init script provided with Redis, thanks to Rowan. This fixes issue 316",2.0,3.0,"utils/redis_init_script,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,36.0,1.0,240.92293981481478,2701.0,1.0041507047887124,10.0,Corrective,True,,
7f9a4db3c013b744e11dc7f58026009392b051de,bc63407be6c65d779ba218ad79a4889f86e37fd5,antirez,antirez@gmail.com,Thu Sep 9 16:38:10 2010 +0200,1284043090,redis-cli does no longer try to auto detect if it is used inside a pipe. To read last argument from stdandard input there is to use the -x option. This will make it playing better inside cron scripts and in general when stdin is hacked.,7.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,547.0,20.0,10.028553240740743,2702.0,1.0997152805588672,168.0,Perfective,False,,
bc63407be6c65d779ba218ad79a4889f86e37fd5,3c23ee1ba265b6e420579dcbf94bd25ece23e9fe,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Sep 13 16:59:46 2010 +0200,1284389986,Fix another test that sometimes returned the swapped object instead of encoding,2.0,2.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,295.0,5.0,6.21542824074074,471.0,1.1608899598333746,109.0,Corrective,True,,
3c23ee1ba265b6e420579dcbf94bd25ece23e9fe,e13865033d06ea8d499cc01ab457abedd3ba6d05,Pedro Melo,melo@simplicidade.org,Mon Sep 13 16:09:11 2010 +0100,1284390551,Rename INSTALL_TOP to PREFIX; update documentationSigned-off-by: Pedro Melo <melo@simplicidade.org>n,15.0,3.0,"INSTALL,CAS_DELIMITER,README,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",3.0,2.0,2.0,1.1221136771091087,6.0,82.0,7.0,32.43751543209876,1.0,0.6741041533343713,1.0,Corrective,True,,
e13865033d06ea8d499cc01ab457abedd3ba6d05,e984050fb97939964daf6fb5e28cd7fc081c2c70,Pedro Melo,melo@simplicidade.org,Mon Sep 13 16:11:55 2010 +0100,1284390715,Make sure INSTALL_TOP exists before we install to itSigned-off-by: Pedro Melo <melo@simplicidade.org>n,1.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,159.0,5.0,0.001898148148148148,3.0,527.8292682926831,1.0,None,False,,
e984050fb97939964daf6fb5e28cd7fc081c2c70,0997b4119d79da25b6ca43bc5aec0e3e03f0e64d,Pedro Melo,melo@simplicidade.org,Mon Sep 13 16:50:57 2010 +0100,1284393057,Fixed missed use of INSTALL_TOPThanks to sylr@githubnnSigned-off-by: Pedro Melo <melo@simplicidade.org>n,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,160.0,6.0,0.02710648148148148,4.0,37.89154568744663,2.0,Corrective,True,,
0997b4119d79da25b6ca43bc5aec0e3e03f0e64d,1d18f50458d2d31122cd0309f554b2443d076f7c,antirez,antirez@gmail.com,Tue Sep 14 15:09:37 2010 +0200,1284469777,Advertise the existence of redis-check dump --fix when logging an error about corrupted AOF file,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,713.0,11.0,11.803622685185184,2703.0,1.0847197531360526,169.0,Corrective,True,True,"[""412e457c278395a20dbc985f85a2d3d5316a2919""]"
1d18f50458d2d31122cd0309f554b2443d076f7c,412e457c278395a20dbc985f85a2d3d5316a2919,antirez,antirez@gmail.com,Tue Sep 14 15:18:18 2010 +0200,1284470298,fixed typo in the latest commit,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,713.0,12.0,0.006030092592592593,2704.0,166.83493282149712,170.0,Corrective,True,,
412e457c278395a20dbc985f85a2d3d5316a2919,3856f1475936e58d3caebbb3df317421b263f2e6,antirez,antirez@gmail.com,Wed Sep 15 14:09:41 2010 +0200,1284552581,"This should fix Issue 332: when there is a background process saving we still allow the hash tables to grow, but only when a critical treshold is reached. Formerly we prevented the resize at all triggering pathological O(N) behavior. Also there is a fix for the statistics in INFO about the number of keys expired",22.0,7.0,"src/dict.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.21639693245126468,6.0,1125.5,21.0,31.46747685185185,2705.5,1.0179102396570214,172.0,Corrective,True,True,"[""9448ddb0c63b8a00cd3cc9638a1bf5567e07bf78"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
3856f1475936e58d3caebbb3df317421b263f2e6 9e83ac06ef1c978c65fefc1fbf5af1e95f31fe15,89f9f83769a2ad0b4aeb8907b82b453ace6ebe9d,antirez,antirez@gmail.com,Thu Sep 16 11:38:40 2010 +0200,1284629920,Merge remote branch 'pietern/networking-perf',,,,,,,,,,,,,,,Merge,False,,
9e83ac06ef1c978c65fefc1fbf5af1e95f31fe15,f3357792408fd28002847586a27f9043e08a4e2c,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 16 11:59:53 2010 +0200,1284631193,Static buffer in client struct has a constant size,3.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8453509366224365,6.0,845.0,37.0,11.847222222222221,472.5,1.0709893422501997,105.0,None,False,,
89f9f83769a2ad0b4aeb8907b82b453ace6ebe9d f3357792408fd28002847586a27f9043e08a4e2c,83f39c7ab26e7f7cfa5fb59ca51b768e9ac0facb,antirez,antirez@gmail.com,Thu Sep 16 12:02:18 2010 +0200,1284631338,Merge remote branch 'pietern/networking-perf',,,,,,,,,,,,,,,Merge,False,,
83f39c7ab26e7f7cfa5fb59ca51b768e9ac0facb,4c2e506a393615477a85ee51d69c801d84c5bad2,antirez,antirez@gmail.com,Thu Sep 16 13:08:40 2010 +0200,1284635320,modified a bit addReply() to play better with copy on write now that we have a static buffer. Changed the name of a function from _ensureFileEvent() to _installWriteEvent().,23.0,12.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,763.0,15.0,0.047766203703703713,2707.0,21.93530409498425,173.0,Feature Addition,False,,
4c2e506a393615477a85ee51d69c801d84c5bad2,2b00385d51cb75c30b47073a74f8edd0c53b942b,antirez,antirez@gmail.com,Thu Sep 16 13:28:58 2010 +0200,1284636538,"Added used CPU statistics in INFO output, obtained via getrusage()",13.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1565.0,17.0,0.971724537037037,2708.0,2.0290982288552475,174.0,Feature Addition,False,,
2b00385d51cb75c30b47073a74f8edd0c53b942b 69ef89f2cf5a699d97475ff8e7c3ce714c6947cf,192fc3376a0712e69e638b087c82c7e34f698f4d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 16 14:32:30 2010 +0200,1284640350,Merge branch 'zset-mem' into zrevrangebyscore,,,,,,,,,,,,,,,Merge,False,,
192fc3376a0712e69e638b087c82c7e34f698f4d,25bb8a4452d9c74ee522c89f682115ab45fe51a4,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 16 14:35:25 2010 +0200,1284640525,Add ZREVRANGEBYSCORE and refactor Z*RANGEBYSCORE,216.0,139.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",4.0,2.0,2.0,0.8913008068127779,6.0,1000.25,65.0,15.653975694444444,475.5,8.061284883065197,110.0,Feature Addition,False,True,"[""706b32e0e0a7dd20cc3f74501c1bfd74570b380c""]"
25bb8a4452d9c74ee522c89f682115ab45fe51a4,d433ebc6810b15c21120e502dea3a27fc2a5b348,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 16 15:36:36 2010 +0200,1284644196,Finished code for sorted set memory efficiency,19.0,17.0,"src/rdb.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,6.0,967.0,21.0,8.626822916666667,478.5,1.0580303048781974,110.0,None,False,,
2b00385d51cb75c30b47073a74f8edd0c53b942b,34a719d25034d6f1140a10eb0429bdee0efa5cd9,antirez,antirez@gmail.com,Fri Sep 17 15:25:32 2010 +0200,1284729932,try to parse the request in a smarter way to gain speed... work in progress,12.0,2.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,6.0,848.5,41.0,1.0649247685185186,2709.5,1.6913600669154956,176.0,None,False,,
34a719d25034d6f1140a10eb0429bdee0efa5cd9,a4f3f93b90c7cc688ffff665914bdadc224847fc,antirez,antirez@gmail.com,Fri Sep 17 16:05:01 2010 +0200,1284732301,new parsing code bugfixing,5.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,783.0,17.0,0.02741898148148148,2711.0,37.47108484592655,177.0,Corrective,True,,
a4f3f93b90c7cc688ffff665914bdadc224847fc 84403fe7c1ab582c1fff4ddb5d933ba1a5f61759,5171777bf112a6a930c4750949037ce741f3bf28,antirez,antirez@gmail.com,Wed Sep 22 12:59:25 2010 +0200,1285153165,Merge remote branch 'pietern/ziplist-eff',,,,,,,,,,,,,,,Merge,False,,
5171777bf112a6a930c4750949037ce741f3bf28,5ca2f0c49894878be47161f667ae0daf70bb6fd3,antirez,antirez@gmail.com,Wed Sep 22 16:09:30 2010 +0200,1285164570,preventive conflict resolution to merge pietern/zset-mem,2.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1040.0,15.0,6.0228472222222225,2712.0,1.1660344290836977,178.0,Non Functional,False,,
5ca2f0c49894878be47161f667ae0daf70bb6fd3 69ef89f2cf5a699d97475ff8e7c3ce714c6947cf,b882056c93f3e3afe5fde9d62fb569ce30a76a76,antirez,antirez@gmail.com,Wed Sep 22 16:09:33 2010 +0200,1285164573,Merge remote branch 'pietern/zset-mem',,,,,,,,,,,,,,,Merge,False,,
b882056c93f3e3afe5fde9d62fb569ce30a76a76,beb7756dcbb44099352abcb3368fcd3d23b55782,antirez,antirez@gmail.com,Wed Sep 22 16:10:13 2010 +0200,1285164613,error generation format reverted to the new style after merge,1.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1041.0,16.0,0.0004976851851851852,2713.0,2010.3023255813955,179.0,Feature Addition,False,,
beb7756dcbb44099352abcb3368fcd3d23b55782,50a9fad5d50488592447dc599a9ef6a184088ee3,antirez,antirez@gmail.com,Wed Sep 22 17:49:04 2010 +0200,1285170544,two leaks fixed,13.0,14.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1040.0,17.0,0.06864583333333334,2714.0,15.567526555386946,180.0,Corrective,True,,
50a9fad5d50488592447dc599a9ef6a184088ee3,56e52b69feebb11931cbe8162ce1749909b7ff30,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Sep 22 18:07:52 2010 +0200,1285171672,Update rdb.c to properly work with new memory strategy for sorted sets,5.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,896.0,8.0,6.1050462962962975,480.0,1.1637989216570992,111.0,Feature Addition,False,,
56e52b69feebb11931cbe8162ce1749909b7ff30,136cf53f22539b33396247d356e7e9d077068ccf,antirez,antirez@gmail.com,Thu Sep 23 16:05:17 2010 +0200,1285250717,minimal C test framework + a first example sds.c tests,80.0,4.0,"src/sds.c,CAS_DELIMITER,src/testhelp.h,CAS_DELIMITER",2.0,1.0,1.0,0.9402859586706308,6.0,234.0,4.0,10.427141203703703,2715.5,1.0479517818193926,182.0,Preventative,False,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d""]"
136cf53f22539b33396247d356e7e9d077068ccf,963238f713f02e538cf0f5851f3337173116ea39,antirez,antirez@gmail.com,Thu Sep 23 16:39:02 2010 +0200,1285252742,more tests for sds.c,79.0,8.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,490.0,5.0,0.0234375,2717.0,43.66666666666666,183.0,Preventative,False,,
963238f713f02e538cf0f5851f3337173116ea39,30d31cc8bb416f67183a218f1511ef517eb9ae3b,antirez,antirez@gmail.com,Thu Sep 23 18:24:47 2010 +0200,1285259087,Contributing file added,13.0,0.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,2718.0,0.0,1193.0,Feature Addition,False,,
56e52b69feebb11931cbe8162ce1749909b7ff30,b0d605c1d6bbf5746cc957946138108b928c88a1,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Sep 23 22:04:19 2010 +0200,1285272259,Add regression test and fix for >255 byte string entries,20.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1233.0,6.0,16.913622685185185,481.0,1.0591239392419407,112.0,Corrective,True,True,"[""306c6a02e333583bedd7b9ff15a27008c1008c51""]"
30d31cc8bb416f67183a218f1511ef517eb9ae3b b0d605c1d6bbf5746cc957946138108b928c88a1,e43505d6e9434bdc03f4521fa8b3b3d2b41be8c7,antirez,antirez@gmail.com,Fri Sep 24 01:15:16 2010 +0200,1285283716,Merge remote branch 'pietern/ziplist-fix',,,,,,,,,,,,,,,Merge,False,,
e43505d6e9434bdc03f4521fa8b3b3d2b41be8c7,1a06bf93c4de5016c746eab0d9d0255a458693b7,antirez,antirez@gmail.com,Fri Sep 24 10:30:15 2010 +0200,1285317015,ziplist implementation fuzzy tests,53.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,607.0,16.0,24.74944444444445,2719.0,1.0404049473613324,60.0,Preventative,False,,
1a06bf93c4de5016c746eab0d9d0255a458693b7,ef27ba988b10a632057b04ee3abb287cbe87322d,antirez,antirez@gmail.com,Fri Sep 24 10:37:00 2010 +0200,1285317420,explicit regression test for a ziplist bug added,9.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,660.0,17.0,0.0046875,2720.0,214.3333333333333,61.0,Corrective,True,,
ef27ba988b10a632057b04ee3abb287cbe87322d,4610b0332c199563e58de005eb1b10ed54e1ec9c,antirez,antirez@gmail.com,Fri Sep 24 11:15:06 2010 +0200,1285319706,"intset stress testing added, ziplist stress testing relocated in a more appropriate place",96.0,51.0,"tests/unit/type/list.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.8030909760146978,6.0,483.5,27.0,12.04714699074074,2721.5,19.918389596527135,63.0,Feature Addition,False,,
4610b0332c199563e58de005eb1b10ed54e1ec9c,fdc0bde9359d12dd53b686a6db9c66cf0001670f,antirez,antirez@gmail.com,Thu Oct 7 12:49:14 2010 +0200,1286448554,"minor typo fixed, reported by Thomas Bassetto",1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,548.0,21.0,27.84101851851852,2723.0,1.035918226171749,184.0,Corrective,True,,
fdc0bde9359d12dd53b686a6db9c66cf0001670f,144a5e72f2adc9d151438569f680533e41778504,antirez,antirez@gmail.com,Thu Oct 7 16:21:35 2010 +0200,1286461295,"fixed an alignment problem with time_t is 32 bit, long is 64 bit, and arch is sparc or any other where unaligned accesses will result to sigbus",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,540.0,16.0,29.107025462962962,2724.0,1.0343559667844604,185.0,Corrective,True,,
144a5e72f2adc9d151438569f680533e41778504,1dd10ca233a533928ec2ff83f675499e4e7c1ff1,antirez,antirez@gmail.com,Mon Oct 11 13:05:09 2010 +0200,1286795109,"maxmemory fixed, we now try to release memory just before we check for the memory limit. Before fixing there was code between the attempt to free memory and the check for memory limits, and this code could result into allocations going again after the memory limit.",6.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1579.0,19.0,24.937314814814812,2725.0,1.0401005484121295,186.0,Corrective,True,True,"[""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554""]"
1dd10ca233a533928ec2ff83f675499e4e7c1ff1,b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,antirez,antirez@gmail.com,Mon Oct 11 16:46:21 2010 +0200,1286808381,free memory if the maxmemory parameter is reduced via CONFIG SET,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,436.0,4.0,38.87079861111111,2726.0,1.025726253015912,187.0,None,False,,
b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,9f1ae9abee1da4e53b7e535e172213d81eb75ed7,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 09:26:44 2010 +0200,1286954804,Allow to specify which specific test files to run,18.0,3.0,"src/Makefile,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4537163391869448,6.0,158.0,30.0,38.64947337962963,482.5,1.0233318854224152,111.0,Preventative,False,,
9f1ae9abee1da4e53b7e535e172213d81eb75ed7,941c9fa2859cc4ce68911a1b5a8f88b53d802f77,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 11:25:40 2010 +0200,1286961940,Return OK on QUIT,51.0,13.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",6.0,2.0,3.0,2.2659646716672284,6.0,670.3333333333334,108.0,36.031726466049385,486.5,1.0180834266975265,114.0,None,False,True,"[""414c3deac1573ae54325ca6ab629446205774d62""]"
a5639e7dd9a1664c2bee87a51e775a5f73c64ffa,704bd093be7aac0c68613a57420b75615801d04b,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 16:33:27 2010 +0200,1286980407,Move creating socket/bind+listen on socket to separate functionsThanks to tav (http://github.com/tav) for original code.n,43.0,44.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,333.0,2.0,72.73475694444444,490.0,1.0137485851607893,117.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
704bd093be7aac0c68613a57420b75615801d04b,5d10923f7bc3333b5efaa151ea3b9a4e6ddfe72d,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 17:17:56 2010 +0200,1286983076,Rename variable sockpath to unixsocket,12.0,11.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.7900504167841065,6.0,821.25,98.0,18.416814236111108,492.5,1.013728314241019,120.0,None,False,,
5d10923f7bc3333b5efaa151ea3b9a4e6ddfe72d,893819801d4952e208e83dde364bfc5021465e45,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 17:18:58 2010 +0200,1286983138,Remove disabling TCP with port -1,5.0,10.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,2.0,2.0,1.1589385323502772,6.0,787.0,74.0,0.0007175925925925926,496.0,852.6129032258062,122.0,None,False,True,"[""a53b4c2409d4c2bff50060e893932b28f2f50f24""]"
893819801d4952e208e83dde364bfc5021465e45,ab17b909fe46603f78c8305a3cf2f02a0c6de0a4,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 18:34:24 2010 +0200,1286987664,Use different accept handlers for TCP and unix socket connections,68.0,26.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.5198178582339972,6.0,737.4,75.0,14.661192129629624,500.0,3.3920833989136896,127.0,None,False,True,"[""df541beae372f40e9ce82a0780171e7d7a8e67de"", ""6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee"", ""2ea41242f669c1afe03af7c8befb140a7a80fc4e"", ""f0266532fc82b8ae9a87407adaf4555dddce690e"", ""59cf0b1902f20436e01f2a7523609a597e688c5b""]"
ab17b909fe46603f78c8305a3cf2f02a0c6de0a4,4fe83b554ac1b16ddad559df788b80d4864310e1,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 18:50:07 2010 +0200,1286988607,sockaddr_un.sun_path appears to never hold anything after accept(),3.0,8.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",3.0,1.0,1.0,1.4353713907745331,6.0,406.66666666666674,27.0,0.01091435185185185,504.0,56.991516436903495,130.0,Feature Addition,False,,
4fe83b554ac1b16ddad559df788b80d4864310e1 b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,b04ce2a35ce084a043ef8749ca4fa0e62b92bd03,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 18:55:46 2010 +0200,1286988946,Merge master with resolved conflict in src/redis-cli.c,,,,,,,,,,,,,,,Merge,False,,
d433ebc6810b15c21120e502dea3a27fc2a5b348 b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,26f3388d27d1be9312d0244890db564c1b22ba0c,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 20:29:50 2010 +0200,1286994590,Merge branch 'master' into zrevrangebyscore,,,,,,,,,,,,,,,Merge,False,,
26f3388d27d1be9312d0244890db564c1b22ba0c,91504b6cbec2f555a3aa81113372c173adadad66,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 21:43:58 2010 +0200,1286999038,Make ZREMRANGEBYSCORE accept the same range spec as ZRANGEBYSCOREThis allows to use inclusive/exclusive bounds for min and max whenndeleting a range of scores from a sorted set.n,75.0,40.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9709505944546686,6.0,788.0,29.0,24.23036458333333,506.5,1.0339436330326506,115.0,None,False,,
91504b6cbec2f555a3aa81113372c173adadad66,7236fdb22f7fdb60833c32121b0828f11a13883c,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Oct 13 21:58:21 2010 +0200,1286999901,Return error when min and/or max in the sorted set range spec is not a double,30.0,7.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9090221560878148,6.0,805.5,31.0,0.009988425925925928,508.5,76.08690614136731,116.0,None,False,,
b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,ef59a8bc9ef426f9d24e701e9b73a6a03ddd3d0f,antirez,antirez@gmail.com,Thu Oct 14 13:52:58 2010 +0200,1287057178,Object approximated LRU algorithm enhanced / fixed / refactored. This is used for the VM currently but will soon be used for maxmemory expiring.,41.0,23.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/vm.c,CAS_DELIMITER",6.0,1.0,1.0,1.941278888645024,6.0,820.6666666666665,96.0,22.19193479938272,2729.5,1.0343261644860955,193.0,Corrective,True,True,"[""1de98301f66bb32af01ea76fc485a88b5d0a9b50"", ""6d5790d68289e8824477d8187076f743d87b66e5""]"
b4f2e412d087bae0a523fe6ea40fcad30fe74b5b,306c6a02e333583bedd7b9ff15a27008c1008c51,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Oct 14 21:11:42 2010 +0200,1287083502,Replace ziplist stresser and fix regression,100.0,41.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1252.0,7.0,20.96346064814815,510.0,1.0477020477097772,133.0,Corrective,True,True,"[""b7d3bf51575525c0475a13941d8eb44f4800b9cd"", ""52b52a350818f88c543a224375fbe308bb17cd12""]"
ef59a8bc9ef426f9d24e701e9b73a6a03ddd3d0f,165346ca29972817b1245e689315edeba1fe369b,antirez,antirez@gmail.com,Thu Oct 14 21:22:21 2010 +0200,1287084141,implemented different algorithms for maxmemory,175.0,7.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,1.669331639729173,6.0,742.6,123.0,0.6548495370370372,2735.0,1.460695440713551,197.0,None,False,True,"[""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
165346ca29972817b1245e689315edeba1fe369b 306c6a02e333583bedd7b9ff15a27008c1008c51,b33ef40105391502d9e44443fd4e337c06396468,antirez,antirez@gmail.com,Thu Oct 14 21:23:01 2010 +0200,1287084181,Merge remote branch 'pietern/ziplist-regression',,,,,,,,,,,,,,,Merge,False,,
b33ef40105391502d9e44443fd4e337c06396468,670bf2fd36e0627af5de966c7d0c19b632712e4f,antirez,antirez@gmail.com,Fri Oct 15 11:29:03 2010 +0200,1287134943,"Don't increment dirty on expireIfNeeded() as natural expires are not considered database changes. This will avoid useless read-only commands in the AOF file as a result of, for instance, a GET operation triggering an expirIfNeeded() call resulting in an expired key removed.",0.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,541.0,18.0,0.9000578703703703,2738.0,2.1110396708030605,198.0,None,False,,
670bf2fd36e0627af5de966c7d0c19b632712e4f,a36879293d7aa2d9fb57d43a0520f8032ed68d5f,antirez,antirez@gmail.com,Fri Oct 15 11:57:38 2010 +0200,1287136658,maxmemory-samples implemented in CONFIG command and configuration file,20.0,7.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,2.0,2.0,0.3809465857053901,6.0,418.0,56.0,0.6078356481481482,2739.5,2.233886170192509,199.0,None,False,,
a36879293d7aa2d9fb57d43a0520f8032ed68d5f,53eeeaff08eb2268342d3e6a42819207fc618290,antirez,antirez@gmail.com,Fri Oct 15 12:19:21 2010 +0200,1287137961,added keyspace_hits and keyspace_misses fields in INFO output,15.0,5.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.295461844238322,6.0,1051.0,76.0,0.4269212962962963,2742.0,11.309708146437686,202.0,Feature Addition,False,True,"[""c25e7eafef350a985ae236987131c5d56b30cfef""]"
53eeeaff08eb2268342d3e6a42819207fc618290,95506e4611458160d21ea8ae6e6e89161e7e44ca,antirez,antirez@gmail.com,Fri Oct 15 12:22:48 2010 +0200,1287138168,minor aesthetic change,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1681.0,27.0,0.0023958333333333327,2744.0,418.3913043478262,203.0,None,False,,
95506e4611458160d21ea8ae6e6e89161e7e44ca,9f8ded8ced44fb4c764a8c7dde113ea870ce9c3e,antirez,antirez@gmail.com,Fri Oct 15 12:29:05 2010 +0200,1287138545,CONFIG RESETSTAT no longer resets the server uptime. Now keyspace hits/misses are reset as well.,2.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,492.0,9.0,0.02184027777777777,2745.0,46.786963434022255,204.0,None,False,,
941c9fa2859cc4ce68911a1b5a8f88b53d802f77,5a4f9f27e7982d2784c17dc053c8629e13c9d7e8,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 12:54:53 2010 +0200,1287140093,Add tests for OK on QUIT,41.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/quit.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.1654270339962668,6.0,96.5,25.0,1.0309780092592593,511.5,1.4849763966927303,118.0,Feature Addition,False,,
5a4f9f27e7982d2784c17dc053c8629e13c9d7e8,cd8788f26d06d8643828024537b8abe2b702759f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 15:40:25 2010 +0200,1287150025,Refactor request parsing code for efficiency,182.0,225.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.1129070905790313,6.0,1145.3333333333333,81.0,0.7150424382716049,514.0,1.5000194781365082,136.0,None,False,True,"[""11e0c4c55b8edd8d2226ba2e5fde989778695195"", ""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""60a4f12f8b998c44dfff0e88202b01598287390d"", ""d55598988b3381afff87bc974f5cfda0e8ae77e0""]"
cd8788f26d06d8643828024537b8abe2b702759f,00cf82c0bd9e0272a06f086b00a70d5d5d0f5e31,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 15:50:29 2010 +0200,1287150629,Change tcl client to only use the multibulk protocol,7.0,37.0,"tests/support/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,271.0,5.0,2.1839004629629635,516.0,1.4578963267599063,119.0,None,False,,
00cf82c0bd9e0272a06f086b00a70d5d5d0f5e31,5b12b47df9bfdb92bc6878ee9f9307a2bb413f15,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 15:56:16 2010 +0200,1287150976,Show output of leaks command on a leak,3.0,1.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,98.0,13.0,75.19155092592592,517.0,1.0132993665868808,120.0,None,False,,
5b12b47df9bfdb92bc6878ee9f9307a2bb413f15,dc11daf3b5d1c2e93f534ee3a47f8a83bcd3796d,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 17:25:20 2010 +0200,1287156320,Change tests to use either the inline or the multibulk protocol,58.0,51.0,"tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",4.0,1.0,1.0,0.9003427269347155,6.0,218.75,26.0,53.42176793981481,519.5,1.0082244055672327,124.0,Preventative,False,,
dc11daf3b5d1c2e93f534ee3a47f8a83bcd3796d,9da6caac4e86aa608a3186fa8a209eed19b7b9c6,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 17:27:05 2010 +0200,1287156425,Don't reset the client when processCommand returns REDIS_ERR,8.0,4.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,6.0,1223.5,51.0,0.07407407407407407,522.5,11.125,138.0,None,False,,
9da6caac4e86aa608a3186fa8a209eed19b7b9c6,1aa608fc68877bcf7c7f287cf7a373fd6ef8a92c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 17:34:20 2010 +0200,1287156860,Change protocol from bulk to inline in redis-benchmark,4.0,4.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,707.0,4.0,46.25645833333334,524.0,1.021618602807716,139.0,None,False,,
9f8ded8ced44fb4c764a8c7dde113ea870ce9c3e,13a49af44b11dc275654a461f7d7ba5c20e27c1a,antirez,antirez@gmail.com,Fri Oct 15 18:04:05 2010 +0200,1287158645,prevent small integer sharing when maxmemory is active. So every object will use a private LRU field and the LRU algorithm can work well,6.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,432.0,15.0,0.8623148148148149,2746.0,2.159669279501772,205.0,None,False,,
1aa608fc68877bcf7c7f287cf7a373fd6ef8a92c,ea5b70924d444c5ebf32afdd577ddc7c1328a674,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 18:17:06 2010 +0200,1287159426,Add benchmark for MSET,18.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,707.0,5.0,0.029699074074074083,525.0,34.67108339828527,140.0,Feature Addition,False,True,"[""53f1d81712ff66d0343647af2f15308ea7e89d30""]"
ea5b70924d444c5ebf32afdd577ddc7c1328a674,b19c33d48a3b5456b87f84c85fdd85592e0c0562,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Oct 15 19:15:38 2010 +0200,1287162938,Prevent clients from making too large multibulk requests,11.0,0.0,"src/networking.c,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9456603046006402,6.0,468.0,28.0,0.07598958333333332,526.5,10.922812675908267,125.0,None,False,,
b19c33d48a3b5456b87f84c85fdd85592e0c0562,75b41de8ca975d01c6371a98f9e552c934af5937,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Oct 17 17:21:41 2010 +0200,1287328901,Convert objects in the command procs instead of the protocol code,31.0,10.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",9.0,1.0,1.0,2.9337895932206504,6.0,663.6666666666666,104.0,36.578800154320994,532.0,1.0101772518956018,150.0,None,False,,
75b41de8ca975d01c6371a98f9e552c934af5937,33aba595b0ad3baae1c110bfd4090dfe337b486f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Oct 17 17:31:40 2010 +0200,1287329500,Removed unused command flags,122.0,126.0,"src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.4928289896941574,6.0,1020.3333333333336,86.0,4.093441358024692,538.0,1.09250573535997,153.0,None,False,True,"[""8a979f039011a4672b1052ee84ca56f214e6a681""]"
33aba595b0ad3baae1c110bfd4090dfe337b486f,19408d83a41bd3a1161bd6e5240eb1c60091d40b,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Oct 17 17:46:55 2010 +0200,1287330415,Object encoding in hash function is done by a more specific function,0.0,7.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,406.0,7.0,0.01752314814814815,540.0,58.06737120211361,154.0,None,False,,
19408d83a41bd3a1161bd6e5240eb1c60091d40b,a375b077cc1da6afee6497749e4e3512caa757c7,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Oct 17 18:09:23 2010 +0200,1287331763,Skip object encoding where it doesn't make sense,6.0,10.0,"src/config.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.6685644431995964,6.0,776.3333333333335,46.0,0.030814043209876543,542.0,19.70019914436431,157.0,None,False,,
13a49af44b11dc275654a461f7d7ba5c20e27c1a,75fcab8c23dbbb2dadddf176c22a294adda5359c,antirez,antirez@gmail.com,Thu Oct 21 17:55:44 2010 +0200,1287676544,version bumped to 2.1.5,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,4.0,50.97303240740741,2747.0,1.0196182167858368,206.0,None,False,,
75fcab8c23dbbb2dadddf176c22a294adda5359c,0a802bd7a0aff807145470ed43cf84a435e2a615,antirez,antirez@gmail.com,Fri Oct 22 00:06:44 2010 +0200,1287698804,support for compiling with tcmalloc,19.0,0.0,"README,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.7424875695421236,6.0,114.5,11.0,23.45053819444444,2748.5,1.0237189877294313,207.0,None,False,,
0a802bd7a0aff807145470ed43cf84a435e2a615,13b37159259a36168e43f902d6a9c4ed7d4f28c8,antirez,antirez@gmail.com,Fri Oct 22 00:10:17 2010 +0200,1287699017,reports if tcmalloc is in used in INFO output,7.0,0.0,"src/Makefile,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,6.0,865.0,42.0,2.1265451388888894,2750.5,203.93446298540863,209.0,None,False,,
13b37159259a36168e43f902d6a9c4ed7d4f28c8,1a587ff843e668f1abe060ff614f5f3e9d3623bf,antirez,antirez@gmail.com,Fri Oct 22 00:16:32 2010 +0200,1287699392,Makefile typo fixed for tcmalloc option,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,165.0,10.0,0.004340277777777778,2752.0,231.4,210.0,Corrective,True,,
1a587ff843e668f1abe060ff614f5f3e9d3623bf,fc41345116be2b066f4e46a36596d9e71fac6cd1,antirez,antirez@gmail.com,Fri Oct 22 00:18:26 2010 +0200,1287699506,README more specific about tcmalloc space benefits,5.0,3.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,84.0,4.0,0.008125,2753.0,124.07692307692308,1197.0,None,False,,
fc41345116be2b066f4e46a36596d9e71fac6cd1,d8a717fb1afbc64d6bd92f24bcef358a755f6309,Robey Pointer,robey@twitter.com,Thu Sep 30 11:53:34 2010 -0700,1285872814,"if server.saveparamslen is not set, don't save the DB on exit.",3.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1572.0,34.0,-21.136608796296297,5.0,0.9526887208048612,0.0,None,False,True,"[""adae85cdaed4db207537400c312fdc9e5f525883""]"
d8a717fb1afbc64d6bd92f24bcef358a755f6309,da47440d444cfe023f339e0f7d6056101a332a48,antirez,antirez@gmail.com,Fri Oct 22 23:30:48 2010 +0200,1287783048,Make sure to reset the signal handler and deliver again the original crashing signal when dumping the stack trace. This will allow to dump the core if core dumping is enabled.,11.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1574.0,35.0,22.109189814814812,2754.0,1.0452300608197742,211.0,None,False,True,"[""d4d208595c78d78196c926c55799bc81ae06f230""]"
da47440d444cfe023f339e0f7d6056101a332a48,7cdc98b6305bb65aee5f5973e8123246755dac7d,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Oct 23 09:59:28 2010 +0200,1287820768,"Don't use prefix when malloc_size() can be calledAlso, use tcmalloc functions explicitly via macros to prevent symbolnlookups to resolve to native malloc/free on OSX.n",25.0,5.0,"src/config.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.9871377743721864,6.0,147.0,7.0,50.959375,544.5,1.014717605936101,159.0,Corrective,True,,
7cdc98b6305bb65aee5f5973e8123246755dac7d,d94ac406ba8061f3ac3cdda2bb372367d736a3fc,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Oct 23 10:18:48 2010 +0200,1287821928,Exclusively use either tcmalloc or OSX's native malloc_size(),5.0,5.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,64.0,4.0,0.013425925925925926,546.0,75.48275862068967,160.0,None,False,,
d94ac406ba8061f3ac3cdda2bb372367d736a3fc,19e61097c58079d6e317983f50006dc917d65cf7,antirez,antirez@gmail.com,Sun Oct 24 16:22:52 2010 +0200,1287930172,"synchronous I/O networking functions originally used just for replication refactored in a file as generally useful, they are used in the cluster branch for MIGRATE.",106.0,64.0,"src/Makefile,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",4.0,1.0,1.0,1.2880908366309356,6.0,399.5,51.0,15.369444444444444,2756.5,1.1277073016641628,215.0,None,False,True,"[""292fec058a32323d5aa52dddfa86be280e29fe65""]"
19e61097c58079d6e317983f50006dc917d65cf7,d08fac3eb9af712a4835773d7d6e58bdac465991,antirez,antirez@gmail.com,Mon Oct 25 10:49:15 2010 +0200,1287996555,more generally usable i/o functions moved to syncio.c,65.0,55.0,"src/aof.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",3.0,1.0,1.0,1.1250310700349206,6.0,586.3333333333334,50.0,3.0880401234567905,2760.0,1.1183523047609676,218.0,None,False,,
d08fac3eb9af712a4835773d7d6e58bdac465991,244201f6ba9e69da64bb73243d972dee658f74b9,antirez,antirez@gmail.com,Mon Oct 25 10:54:37 2010 +0200,1287996877,added a missing prototype from syncio.c in redis.h,1.0,0.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,954.0,36.0,0.0037268518518518523,2762.0,269.3229813664596,219.0,Feature Addition,False,,
244201f6ba9e69da64bb73243d972dee658f74b9,e584d82fecd13afa8de5e9c129789da6a70117d9,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Oct 26 12:26:27 2010 +0200,1288088787,Return error to client on wrong type for HMGET,6.0,0.0,"src/t_hash.c,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6500224216483541,6.0,347.0,14.0,25.79382523148148,547.5,1.0666563705678764,126.0,Corrective,True,,
e584d82fecd13afa8de5e9c129789da6a70117d9,1de98301f66bb32af01ea76fc485a88b5d0a9b50,antirez,antirez@gmail.com,Wed Oct 27 17:11:17 2010 +0200,1288192277,removed useless spaces from DEBUG OBJECT output,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,309.0,6.0,13.137719907407408,2763.0,1.076116708762848,220.0,Corrective,True,,
1de98301f66bb32af01ea76fc485a88b5d0a9b50 7236fdb22f7fdb60833c32121b0828f11a13883c,73abd0a9d2a956af34351c59e15eba603ab29c6e,antirez,antirez@gmail.com,Thu Oct 28 14:12:25 2010 +0200,1288267945,Merge remote branch 'remotes/pietern/zrevrangebyscore',,,,,,,,,,,,,,,Merge,False,,
a375b077cc1da6afee6497749e4e3512caa757c7,5e78edb350c8060fa478182efc4e4aa729bbe154,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Oct 28 15:07:45 2010 +0100,1288274865,Unify two client flags that mean the same,7.0,9.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.5,6.0,1141.3333333333333,97.0,7.259768518518517,550.0,1.0591640079933815,164.0,None,False,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509""]"
5e78edb350c8060fa478182efc4e4aa729bbe154,a3a323e0e56c3d4be148fcf039cbd1887cbd1e87,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Oct 28 16:52:16 2010 +0100,1288281136,"When REDIS_CLOSE_AFTER_REPLY is set, there may never be new replies",5.0,1.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,6.0,1234.5,62.0,0.07258101851851853,552.5,11.333280178599903,166.0,Feature Addition,False,True,"[""25ef31920adad5c52a1f5dbe7fd307d4abec5862""]"
a3a323e0e56c3d4be148fcf039cbd1887cbd1e87,4794d88f15ee4e4175e712b411bb7cebee7aff09,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Oct 28 16:59:05 2010 +0100,1288281545,Rewrite comment that was no longer valid,1.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,890.0,26.0,0.004733796296296297,554.0,212.24694376528115,167.0,None,False,,
73abd0a9d2a956af34351c59e15eba603ab29c6e 4794d88f15ee4e4175e712b411bb7cebee7aff09,21dbc6499a538af07f52a41742cf1683f3fc9c23,antirez,antirez@gmail.com,Thu Oct 28 22:59:47 2010 +0200,1288299587,merge conflict resolved,,,,,,,,,,,,,,,Merge,False,,
21dbc6499a538af07f52a41742cf1683f3fc9c23,92e282288f8f7bf51bccd0f6ef6964f32fa37f24,antirez,antirez@gmail.com,Tue Nov 2 10:51:09 2010 +0100,1288691469,zmalloc functions to get RSS and fragmentation refactored into two separated functions,26.0,8.0,"src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.19143325481419346,6.0,146.5,8.0,35.56534143518519,2764.5,1.0566445104494535,222.0,None,False,True,"[""c4df22afb6756446d35bb7ed3fc4a0bc42086056"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
92e282288f8f7bf51bccd0f6ef6964f32fa37f24,10c12171cc2f94087c85651b14831c1e52daa087,antirez,antirez@gmail.com,Tue Nov 2 11:15:09 2010 +0100,1288692909,removed a number of stupid compilation warnings on Linux,21.0,18.0,"src/redis-check-dump.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",4.0,1.0,1.0,1.132540542697658,6.0,1007.25,51.0,54.65925925925927,2767.5,1.011888535598923,226.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
10c12171cc2f94087c85651b14831c1e52daa087,7d47ecd543ed41db70396bc3866eac872a31774d,antirez,antirez@gmail.com,Tue Nov 2 11:40:35 2010 +0100,1288694435,"Function to compute RSS memory usage in a fast way, suitable to be called inside keys eviction loops",45.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,6.0,1268.0,77.0,2.436898148148148,2770.5,29.411894806813933,228.0,None,False,,
7d47ecd543ed41db70396bc3866eac872a31774d,a3e60027e7d4419971406c6da7d6e8accbcaf9b0,antirez,antirez@gmail.com,Tue Nov 2 11:50:55 2010 +0100,1288695055,"Now maxmemory, VM, and everything else uses the fast RSS memory used estimation instead of raw memory reported by zmalloc(). This means that setting maxmemory to 2GB will really have the effect of using up to 2GB of memory.",15.0,17.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.1994602933016414,6.0,1061.0,64.0,16.290520833333336,2773.0,1.054873409490228,231.0,None,False,,
a3e60027e7d4419971406c6da7d6e8accbcaf9b0,ca734d17ad9b7ea97a87bd048ad1c1e253ef67a6,antirez,antirez@gmail.com,Tue Nov 2 12:09:59 2010 +0100,1288696199,"Revert Now maxmemory, VM, and everything else uses the fast RSS memory used estimation instead of raw memory reported by zmalloc(). This means that setting maxmemory to 2GB will really have the effect of using up to 2GB of memory.This reverts commit a3e60027e7d4419971406c6da7d6e8accbcaf9b0.n",17.0,15.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.1994602933016414,6.0,1060.3333333333333,67.0,0.01324074074074074,2776.0,47.153846153846146,234.0,None,False,True,"[""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""6b5daa2df2a0711a25746cb025927dc3deb7717e""]"
ca734d17ad9b7ea97a87bd048ad1c1e253ef67a6,b5b22da8e68fef52cd9b535871584dd7afe95aef,antirez,antirez@gmail.com,Tue Nov 2 12:10:41 2010 +0100,1288696241,"Revert Function to compute RSS memory usage in a fast way, suitable to be called inside keys eviction loopsThis reverts commit 7d47ecd543ed41db70396bc3866eac872a31774d.n",0.0,45.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,6.0,1290.5,81.0,0.010694444444444444,2778.5,1052.9480519480521,236.0,None,False,,
b5b22da8e68fef52cd9b535871584dd7afe95aef,3ce014c766c47f3966d438032a6fa318c4f6ec61,antirez,antirez@gmail.com,Tue Nov 2 18:08:30 2010 +0100,1288717710,redis-cli in interactive mode now prints the time elapsed of the operation performed took more than half a second.,52.0,25.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,544.0,23.0,16.06724537037037,2780.0,1.0622384221407424,237.0,None,False,True,"[""4dc1e0dd3049b6f2efa9b30b078e7dfec714c7ea""]"
3ce014c766c47f3966d438032a6fa318c4f6ec61,7d0966a6b712078bf7d52c13669539ba619cf1fc,antirez,antirez@gmail.com,Tue Nov 2 18:59:48 2010 +0100,1288720788,Do not update the LRU info on key lookup when we have a saving child. With this trivial change the additional memory used while saving with a background child in presence of many read operations is zero.,5.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,542.0,20.0,18.31975694444445,2781.0,1.0545858770415213,238.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
7d0966a6b712078bf7d52c13669539ba619cf1fc,539fb43820592992c26dcb60d3901b503c6d9b77,antirez,antirez@gmail.com,Tue Nov 2 22:47:10 2010 +0100,1288734430,RSS information in INFO output,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1583.0,43.0,0.4420023148148148,2782.0,3.2624315902485006,239.0,None,False,,
539fb43820592992c26dcb60d3901b503c6d9b77 b04ce2a35ce084a043ef8749ca4fa0e62b92bd03,0a546fc01758f9a9f8b2113764c2cf963df6ef20,antirez,antirez@gmail.com,Tue Nov 2 23:47:52 2010 +0100,1288738072,Merge remote branch 'pietern/unixsocket',,,,,,,,,,,,,,,Merge,False,,
0a546fc01758f9a9f8b2113764c2cf963df6ef20,297e77c6ab9f65fed7f7ee5baa26310071f6ce9e,antirez,antirez@gmail.com,Wed Nov 3 10:31:19 2010 +0100,1288776679,Now it is possible to use quoted strings in the redis.conf file accordingly to the sdssplitargs() function capabilities.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,492.0,12.0,16.723564814814814,2783.0,1.0597958635657714,240.0,None,False,,
297e77c6ab9f65fed7f7ee5baa26310071f6ce9e,1b1f47c915c69eae40d99727267b147f7c5a44ac,antirez,antirez@gmail.com,Wed Nov 3 11:23:59 2010 +0100,1288779839,command lookup process turned into a much more flexible and probably faster hash table,70.0,28.0,"src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,1.0,1.0,1.3434215915494756,6.0,700.1666666666665,115.0,41.21717206790122,2786.5,1.250150291040094,246.0,None,False,True,"[""a48c8d873bc2a49f66ab398ebed51dc45764ca17"", ""da920e75d4836897b9a7109b6d4743e201cd8a4f"", ""95f68f7b0fc4ffc700361484b6c792a8e03f3a13"", ""7b190a08cfe9aded4c64b775fa2a2ab24b7b9405""]"
1b1f47c915c69eae40d99727267b147f7c5a44ac,8d3e063a0ac13ad10ad47df15cbb6bbc8116bf2f,antirez,antirez@gmail.com,Wed Nov 3 12:14:36 2010 +0100,1288782876,added support for command renaming/suppression in redis.conf,52.0,10.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,2.0,2.0,1.4815677795996742,6.0,821.6666666666665,107.0,6.386774691358025,2791.0,1.0523207423326637,248.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
8d3e063a0ac13ad10ad47df15cbb6bbc8116bf2f,24f753a8b996a364273019ea791fe89f87cff678,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 3 16:03:04 2010 +0100,1288796584,"Add hiredis dependency for redis-cli, redis-benchmark, etc",3337.0,0.0,"deps/hiredis/.gitignore,CAS_DELIMITER,deps/hiredis/COPYING,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/TODO,CAS_DELIMITER,deps/hiredis/adapters/libev.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/example-libev.c,CAS_DELIMITER,deps/hiredis/example-libevent.c,CAS_DELIMITER,deps/hiredis/example.c,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/util.h,CAS_DELIMITER",21.0,1.0,2.0,3.4869714826943143,1.0,0.0,0.0,0.0,565.0,0.0,20.0,Feature Addition,False,,
24f753a8b996a364273019ea791fe89f87cff678,7fc4ce13ed7ece2a24d110d9e97725eb719b30af,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 3 16:09:38 2010 +0100,1288796978,Use hiredis from redis-cli,155.0,223.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.11759466565886476,6.0,368.5,36.0,5.474965277777778,576.5,1.095500531452096,169.0,None,False,True,"[""8ce39260a4acfedea5ee8f9143d2d2a9ce82b498"", ""4d19e3443cc3a36bd51684099152d89e18c45afa"", ""2540736366eedbe421118a76556438c8fbe8ab48"", ""d3d1fa9437314082b3e18dedd48c768e097a9d61""]"
7fc4ce13ed7ece2a24d110d9e97725eb719b30af,cfcd5d6d433b13319cdc1bf8c91d2e61c43aef2c,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 3 17:03:54 2010 +0100,1288800234,Add proper numbering for multi bulk replies in redis-cli,26.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,499.0,25.0,0.03768518518518518,578.0,27.53562653562653,170.0,Feature Addition,False,True,"[""96628cc40df778716b70f4b661ceb1bd329591dd""]"
cfcd5d6d433b13319cdc1bf8c91d2e61c43aef2c,339b9dc2d2e7d319e29581b367a1027365186cc3,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 3 17:07:10 2010 +0100,1288800430,Put duration in parenthesis,3.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,516.0,26.0,0.002268518518518519,579.0,441.8163265306122,171.0,None,False,,
339b9dc2d2e7d319e29581b367a1027365186cc3,e902b579b4eb5f695680427cb34725159a4fa64f,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 3 17:10:12 2010 +0100,1288800612,Import linenoise as dependency for redis-cli,603.0,520.0,"deps/linenoise/.gitignore,CAS_DELIMITER,deps/linenoise/Makefile,CAS_DELIMITER,deps/linenoise/README.markdown,CAS_DELIMITER,deps/linenoise/example.c,CAS_DELIMITER,deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/linenoise.c,CAS_DELIMITER,src/linenoise.h,CAS_DELIMITER",9.0,2.0,2.0,1.8267609827656304,6.0,76.0,18.0,26.258055555555554,584.0,2.9764674795088304,174.0,None,False,True,"[""6e0a280cb55f948ecd731ca8bd87d8bb912e021f""]"
e902b579b4eb5f695680427cb34725159a4fa64f,8df3dcada5e34c6a99666931ee6dcccd57685353,antirez,antirez@gmail.com,Wed Nov 3 18:14:09 2010 +0100,1288804449,top level make clean also clean hiredis and linoise (deps),2.0,0.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,15.0,53.0,120.00265046296295,2793.0,1.0083331492774703,1199.0,Perfective,False,,
8df3dcada5e34c6a99666931ee6dcccd57685353,a9b18e54d4e348dd678a396cc8691dd693687de7,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Nov 4 10:09:30 2010 +0100,1288861770,Stop using the freelist robj* cache,4.0,51.0,"src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/vm.c,CAS_DELIMITER",4.0,1.0,1.0,1.3878091723246089,6.0,1040.75,112.0,10.614994212962962,590.5,1.0422798430676898,178.0,None,False,,
a9b18e54d4e348dd678a396cc8691dd693687de7,4d7e1255193702937daabf0dbaabbb6876bf5547,antirez,antirez@gmail.com,Thu Nov 4 10:48:49 2010 +0100,1288864129,minor test suite bug fixed,2.0,2.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,292.0,9.0,92.92372685185184,2794.0,1.0107615141350743,64.0,Corrective,True,,
8df3dcada5e34c6a99666931ee6dcccd57685353,afc156c2d8a2e2433528c0559bd2d38345e96a36,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Nov 4 13:35:47 2010 +0100,1288874147,Update hiredis,77.0,37.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",3.0,1.0,1.0,0.6828709916973025,1.0,474.33333333333326,3.0,0.8977199074074074,594.0,1.6807369493186186,29.0,None,False,,
afc156c2d8a2e2433528c0559bd2d38345e96a36,ec8f06675a24277bda9e819786c13f41c567a2f4,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Nov 4 13:37:05 2010 +0100,1288874225,Use hiredis from redis-benchmark,64.0,234.0,"src/Makefile,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,0.14219353322292674,6.0,447.0,20.0,10.349606481481484,596.5,1.6110083734535847,180.0,None,False,True,"[""b4c4be785cf5aeb480eabefd18a131655d36734f""]"
ec8f06675a24277bda9e819786c13f41c567a2f4,8146e31677f29440854edd310adfc521a6e65bad,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Nov 4 14:47:15 2010 +0100,1288878435,Microsecond latency resolution in redis-benchmark,40.0,28.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,551.0,7.0,0.048726851851851855,598.0,21.522565320665077,181.0,None,False,,
4d7e1255193702937daabf0dbaabbb6876bf5547,f4aa600b996c605b4e2109d0f80cb14a0c14513b,antirez,antirez@gmail.com,Thu Nov 4 17:29:53 2010 +0100,1288888193,first attempt to non blocking implementation of slave replication and SYNC bulk data download. Never compiled so far...,117.0,44.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,0.8515474965071522,6.0,963.25,123.0,4.680309606481481,2796.5,1.1158310872460535,252.0,None,False,True,"[""62ec599c363f36a8f2b0b7d39c1533895f491631"", ""9fd01051bf8400babcca73a76a67dfc1847633ff"", ""89a1433e69db5f7c996484672437616a16a6fe0a"", ""45029d37cb7fe589bdfd9a08dd5a3afd611ad57e"", ""784b93087c622999e225735c0c76d50241941022"", ""f0b9f803455feb5565ae4b799044890aa4de1479"", ""d7740fc8f350f6332fee27299c1152ba6c5dc9d0"", ""acc2336fd189ddf9e97b0fc589c43ae26a1fd153"", ""c85ae56edc982d28df5cb29eedcd9d8bc9840a05"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
f4aa600b996c605b4e2109d0f80cb14a0c14513b,62ec599c363f36a8f2b0b7d39c1533895f491631,antirez,antirez@gmail.com,Thu Nov 4 17:35:03 2010 +0100,1288888503,typos and minor stuff fixed in the new non blocking replication code,13.0,10.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.0676111603502405,6.0,1013.3333333333336,99.0,0.0035879629629629634,2800.0,171.32258064516125,255.0,Corrective,True,True,"[""94343492361a04301a48fc56490d6113ff97aba9"", ""784b93087c622999e225735c0c76d50241941022"", ""c85ae56edc982d28df5cb29eedcd9d8bc9840a05""]"
62ec599c363f36a8f2b0b7d39c1533895f491631,26b3366993f566b438049765d65c51db056fcffa,antirez,antirez@gmail.com,Thu Nov 4 18:09:35 2010 +0100,1288890575,non blocking slave replication is now more non blocking than the first implementation...,35.0,24.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,494.0,9.0,0.023981481481481482,2802.0,42.6988416988417,256.0,None,False,True,"[""784b93087c622999e225735c0c76d50241941022"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
26b3366993f566b438049765d65c51db056fcffa,f6433915fea3ed68a26f7af42becc14f9483acac,antirez,antirez@gmail.com,Thu Nov 4 18:14:20 2010 +0100,1288890860,more replication info in logs,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,505.0,10.0,0.003298611111111111,2803.0,304.15789473684214,257.0,None,False,,
f6433915fea3ed68a26f7af42becc14f9483acac,12ebe2ac17a26ecf263f90b2acdf03db29b00223,antirez,antirez@gmail.com,Thu Nov 4 18:50:23 2010 +0100,1288893023,replication asynchronous SYNC information in INFO output,12.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1586.0,49.0,0.05231481481481482,2804.0,20.11504424778761,258.0,None,False,,
12ebe2ac17a26ecf263f90b2acdf03db29b00223,4ebfc45528dea7a3b0e4bc2a8efd4238ea48347b,antirez,antirez@gmail.com,Thu Nov 4 19:59:21 2010 +0100,1288897161,config option to select if when replication link with master a slave should or not serve stale data,42.0,1.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.8814220743929224,6.0,862.25,158.0,0.6983969907407407,2806.5,1.4658126076135738,261.0,None,False,True,"[""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""3f232ebfb8712707f1a02dcc1eb532d05d0b8b71""]"
8146e31677f29440854edd310adfc521a6e65bad,feecb608ed0ec8f9932960d5fa8f02e551ffbe59,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Nov 5 10:22:52 2010 +0100,1288948972,Use multi-bulk protocol in SET benchmark,2.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,563.0,8.0,0.816400462962963,599.0,2.2248890653132403,182.0,None,False,,
4d7e1255193702937daabf0dbaabbb6876bf5547 feecb608ed0ec8f9932960d5fa8f02e551ffbe59,56fce7ce7d598def0ea15313635eb8a74d781bdd,antirez,antirez@gmail.com,Fri Nov 5 10:29:59 2010 +0100,1288949399,Merge remote branch 'pietern/benchmark',,,,,,,,,,,,,,,Merge,False,,
56fce7ce7d598def0ea15313635eb8a74d781bdd,ecc72ca17f6a1a65e01fbd439894fdd2dccacc14,antirez,antirez@gmail.com,Fri Nov 5 10:57:53 2010 +0100,1288951073,version bumped to 2.1.6,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,5.0,14.751493055555557,2809.0,1.067789748212869,262.0,None,False,,
ecc72ca17f6a1a65e01fbd439894fdd2dccacc14 4ebfc45528dea7a3b0e4bc2a8efd4238ea48347b,3b5e72d402345507856b00bb67a91942f4f1a49d,antirez,antirez@gmail.com,Fri Nov 5 10:59:49 2010 +0100,1288951189,Merge branch 'aaslave',,,,,,,,,,,,,,,Merge,False,,
3b5e72d402345507856b00bb67a91942f4f1a49d,645e9962cbf5894cdf2b80a6672fdd4c3af17657,antirez,antirez@gmail.com,Fri Nov 5 11:00:20 2010 +0100,1288951220,version bumped to 2.1.7 after merging with aaslave branch for non blocking slaves,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,6.0,0.0017013888888888886,2810.0,588.7551020408164,263.0,None,False,,
645e9962cbf5894cdf2b80a6672fdd4c3af17657,abc3ff4d90b2191f25a1dfb5ab1555c2cde208c2,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Nov 5 17:22:16 2010 +0100,1288974136,Only cascade clean target to deps,4.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,17.0,54.0,1.9639699074074075,600.0,1.5091727710431562,234.0,Perfective,False,,
abc3ff4d90b2191f25a1dfb5ab1555c2cde208c2,57c9babd819339544a8c7447a7cbae7e70f64678,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Nov 5 17:24:48 2010 +0100,1288974288,Update hiredis,24.0,3.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",3.0,1.0,1.0,1.305803563478725,1.0,487.66666666666674,6.0,1.1590393518518518,602.0,1.5272565682387835,32.0,None,False,,
57c9babd819339544a8c7447a7cbae7e70f64678,97e7f8aec3f464967bbe1b38ccfb357141134d09,antirez,antirez@gmail.com,Mon Nov 8 11:52:03 2010 +0100,1289213523,non blocking loading of the DB / AOF with informations and ETA in INFO output,100.0,1.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.7526081437170764,6.0,1033.0,124.0,4.82457175925926,2812.5,1.091572552128664,267.0,None,False,True,"[""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
97e7f8aec3f464967bbe1b38ccfb357141134d09,be98a33b511cec5cd3fce281360cea1dfc73d15a,antirez,antirez@gmail.com,Mon Nov 8 12:53:36 2010 +0100,1289217216,fixed compilation with 32bit target,7.0,5.0,"deps/linenoise/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,1.0,6.0,91.5,16.0,4.395804398148148,2815.5,1.1605680080899403,268.0,Corrective,True,,
be98a33b511cec5cd3fce281360cea1dfc73d15a,240f8dbf3f592ba257aba7fcf6ad44325fd7712f,antirez,antirez@gmail.com,Mon Nov 8 13:19:58 2010 +0100,1289218798,build redis-server at the end so have a more pleasing to see Make output and the advice to run the test suite at the end.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,175.0,16.0,0.018310185185185183,2817.0,55.614412136536025,269.0,Preventative,False,,
240f8dbf3f592ba257aba7fcf6ad44325fd7712f,5402c4262e6bd6d2e8082dd2a948f28ea453b060,antirez,antirez@gmail.com,Mon Nov 8 16:12:16 2010 +0100,1289229136,"added noeviction policy to redis maxmemory. ZSCORE removed from the list of commands that can't be called when we are low on memory, this command was added in the past for a stupid error.",21.0,1.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.6126502330422663,6.0,885.5,164.0,2.0115046296296297,2819.5,1.160454111458395,272.0,Feature Addition,False,True,"[""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554""]"
5402c4262e6bd6d2e8082dd2a948f28ea453b060,d9d8ccab93ac18ab38ac19811bc05582c7f9f550,antirez,antirez@gmail.com,Mon Nov 8 16:14:15 2010 +0100,1289229255,"make sure to flush stdout every line read in monitor mode, to play well with redirection to file",1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,517.0,27.0,4.963252314814816,2822.0,1.2014807905322684,273.0,None,False,,
d9d8ccab93ac18ab38ac19811bc05582c7f9f550,11fd0c422b627d73d563916c6f559d3c0a021f26,antirez,antirez@gmail.com,Mon Nov 8 16:26:02 2010 +0100,1289229962,now redis-cli is able to show the Git SHA1 in the version output,3.0,2.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,6.0,346.5,45.0,0.06869791666666668,2823.5,8.508701341281911,275.0,None,False,,
11fd0c422b627d73d563916c6f559d3c0a021f26,0c2f75c6d809a1658a244e74ef209dabb19fb4c7,antirez,antirez@gmail.com,Thu Nov 11 13:19:17 2010 +0100,1289477957,"volatile-lru maxmemory policy segfault fixed, thanks to Anthony Lauzon for reporting the problem with the patch. Original patch modified a bit in order to avoid the double lookup if the policy is allkeys-lru",4.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1653.0,53.0,2.8798726851851852,2825.0,1.3472375723913979,276.0,Corrective,True,True,"[""f0266532fc82b8ae9a87407adaf4555dddce690e""]"
0c2f75c6d809a1658a244e74ef209dabb19fb4c7,9fd01051bf8400babcca73a76a67dfc1847633ff,antirez,antirez@gmail.com,Fri Nov 12 20:02:20 2010 +0100,1289588540,"Fix for bug 374, thanks to Jeremy Zawodny for reporting and tracing why it was crashing.",5.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,506.0,11.0,8.075,2826.0,1.1238390092879258,277.0,Corrective,True,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
9fd01051bf8400babcca73a76a67dfc1847633ff,c086b85afb1f0f2d9aa76faa5a4c8536380670a2,antirez,antirez@gmail.com,Mon Nov 15 15:50:41 2010 +0100,1289832641,added a few more files to gitignore,2.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,18.0,11.0,137.0900231481481,2827.0,1.0072944768483942,1202.0,Feature Addition,False,,
21dbc6499a538af07f52a41742cf1683f3fc9c23,5397f2b596b5189edbed3e45a42d18f3c99341d6,Tj Holowaychuk,tj@vision-media.ca,Tue Nov 16 05:50:26 2010 -0800,1289915426,Added redis-cli interactive help supportupdated via commands.json in redis-doc repo. Currentlynuse `make src/help.h` to re-generate. The followingnare valid from the REPL:nn  helpn  help [command]n  help [group]n  help groupsnnex:nn  help sortn  help hashn,995.0,17.0,"Makefile,CAS_DELIMITER,src/help.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER,utils/help.h,CAS_DELIMITER",5.0,3.0,3.0,0.9783043031943188,7.0,107.8,84.0,3.7656342592592593,2.0,0.8502249271513161,1.0,Feature Addition,False,,
c086b85afb1f0f2d9aa76faa5a4c8536380670a2,8a623a98c31bda69c05f2c7c94bad2d131060b02,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 21 15:39:34 2010 +0100,1290350374,Return number of bytes written from rdbSave* functions,92.0,41.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,934.0,12.0,13.157997685185185,604.0,1.0759994053750228,183.0,None,False,True,"[""f704360462640a88975eeb68fd80617921d7c97d""]"
8a623a98c31bda69c05f2c7c94bad2d131060b02,9a68cf91f01a920c7e84773d3b3ae41565b4849e,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 21 16:12:25 2010 +0100,1290352345,Wrapper around fwrite to make API consistent,25.0,20.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,985.0,13.0,0.0228125,605.0,44.835616438356155,184.0,None,False,,
9a68cf91f01a920c7e84773d3b3ae41565b4849e,bd70a5f5884ec46983ac32a1ae0b48f4d356a9d5,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 21 16:27:47 2010 +0100,1290353267,"Stop using /dev/null to find out the serialized object lengthNow the rdbSave* functions return the number of bytes written (ornrequired to write) in serializing a Redis object, writing to /dev/nullnand using ftell (which doesn't work on FreeBSD) isn't needed anymore.n",11.0,24.0,"src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/vm.c,CAS_DELIMITER",5.0,1.0,1.0,1.9802566096747856,6.0,1016.6,132.0,13.085300925925925,608.0,1.0288880301088714,189.0,None,False,True,"[""f704360462640a88975eeb68fd80617921d7c97d""]"
bd70a5f5884ec46983ac32a1ae0b48f4d356a9d5,a4e48b417da1c14e5757296742069121882ddfcf,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 21 16:44:17 2010 +0100,1290354257,Don't hardcode make to make,14.0,14.0,"deps/hiredis/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.8631205685666309,6.0,138.5,19.0,15.520648148148148,611.5,1.0438412518301368,190.0,None,False,,
c086b85afb1f0f2d9aa76faa5a4c8536380670a2 5397f2b596b5189edbed3e45a42d18f3c99341d6,2612e0521fde55db2c720092d4ad02a8f015f46e,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Nov 26 20:46:42 2010 +0100,1290800802,Merge remote branch 'visionmedia/cli-help' into cli-help,,,,,,,,,,,,,,,Merge,False,,
2612e0521fde55db2c720092d4ad02a8f015f46e,50d0e82d54d9fcc7f42443a9cde51d812934b3c1,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 28 17:45:58 2010 +0100,1290962758,Update help.h generator script to output man-style argument list,628.0,739.0,"src/help.h,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER",2.0,2.0,2.0,0.3585368752669426,7.0,435.5,2.0,12.121898148148148,613.5,1.0618714982450648,191.0,None,False,,
50d0e82d54d9fcc7f42443a9cde51d812934b3c1,a2a69d5803d05ce9ccd2d911389b8aa28239dfba,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Nov 28 21:37:19 2010 +0100,1290976639,Refactor help-related code into redis-cli.c,482.0,583.0,"src/help.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER,utils/help.h,CAS_DELIMITER",4.0,2.0,2.0,1.1158240275301343,7.0,345.75,35.0,6.221608796296296,616.5,2.6060559213837027,2.0,None,False,,
a4e48b417da1c14e5757296742069121882ddfcf,5b761a33876938b3fb5d10efaa6e761619818b42,antirez,antirez@gmail.com,Mon Nov 29 11:14:57 2010 +0100,1291025697,gitignore now includes a few more files,2.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,20.0,12.0,13.808518518518515,2828.0,1.0724190649894054,1203.0,None,False,,
5b761a33876938b3fb5d10efaa6e761619818b42,efcf948c1aff6cc71690cf3dbed493ccb957bd48,antirez,antirez@gmail.com,Mon Nov 29 12:17:55 2010 +0100,1291029475,new redis-cli command connect,14.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,563.0,31.0,0.6115277777777778,2829.0,2.6352486940722235,278.0,Feature Addition,False,,
efcf948c1aff6cc71690cf3dbed493ccb957bd48,d8d528e9926d712cf02617dcdb6e9bde90e4e49c,antirez,antirez@gmail.com,Mon Nov 29 12:20:17 2010 +0100,1291029617,quick and dirty fix for hiredis bug creating problem with the new redis-cli connect commmand. Also change prompt when redis-cli is not connected,2.0,1.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,7.0,748.5,35.0,11.895086805555556,2830.5,1.0420356135560451,279.0,Corrective,True,,
a2a69d5803d05ce9ccd2d911389b8aa28239dfba,ff4058183bc6dfdc130a7172105bb0a02f76b4ec,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Nov 29 19:27:06 2010 +0100,1291055226,Update linenoise,109.0,0.0,"deps/linenoise/example.c,CAS_DELIMITER,deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER",3.0,1.0,1.0,0.8115975148315779,6.0,180.66666666666663,3.0,26.09506944444445,620.0,1.0234186428364236,36.0,None,False,,
ff4058183bc6dfdc130a7172105bb0a02f76b4ec,41945ba6ae4e365b39730f56ec0489551f8b42df,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Nov 29 19:27:36 2010 +0100,1291055256,Use linenoise completion API from redis-cli,108.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,571.0,33.0,0.2967476851851852,622.0,4.369866219431335,194.0,None,False,,
41945ba6ae4e365b39730f56ec0489551f8b42df,b2cc45bfbc5e8e264ce6c26c7803d2d24d47d340,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Nov 29 20:26:03 2010 +0100,1291058763,Refactor and support help for command names with spaces,69.0,55.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,644.0,34.0,0.04059027777777778,623.0,25.636441402908467,195.0,None,False,,
b2cc45bfbc5e8e264ce6c26c7803d2d24d47d340,c54afb6d0d9808e38248e55a3220868735aaab44,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Nov 29 20:53:57 2010 +0100,1291060437,Minor update to linenoise,5.0,1.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,572.0,2.0,0.0603125,624.0,17.580310880829018,37.0,None,False,,
d8d528e9926d712cf02617dcdb6e9bde90e4e49c,8a979f039011a4672b1052ee84ca56f214e6a681,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Mon Nov 8 10:43:21 2010 -0300,1289223801,Fix case in RPOPLPUSH.,3.0,3.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,6.0,1163.0,111.0,-1.4044444444444448,3.0,0.8826379126580418,2.0,Corrective,True,,
8a979f039011a4672b1052ee84ca56f214e6a681,b2a7fd0cf7afef7e7ede9e46a317fcb9ae84768c,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Mon Nov 8 15:25:59 2010 -0300,1289240759,BRPOPLPUSH.,112.0,23.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.1046003736179424,6.0,1041.75,133.0,11.492844328703706,6.5,3.3406192019108865,5.0,None,False,True,"[""baa14ef913032baf34645faeae80f5cd6895f97a"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
b2a7fd0cf7afef7e7ede9e46a317fcb9ae84768c,357a841714d50f3d3c293b9bb03839bac28cb05a,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Mon Nov 8 19:38:01 2010 -0300,1289255881,Move to struct.,34.0,27.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.3470624465271646,6.0,920.6666666666664,88.0,1.5352314814814816,10.0,1.2259345963361712,8.0,None,False,,
357a841714d50f3d3c293b9bb03839bac28cb05a,ba3b474111a79bfa378a8c77d89fff600cd5b23a,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Mon Nov 8 20:47:46 2010 -0300,1289260066,Refactor code for BRPOPLPUSH.,91.0,46.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4758988489055416,6.0,813.0,31.0,0.13594907407407408,12.5,13.161504534144775,1.0,None,False,True,"[""baa14ef913032baf34645faeae80f5cd6895f97a"", ""ecf940141501e47dcc8dfecbc84a4e3f6ee7b0d3""]"
ba3b474111a79bfa378a8c77d89fff600cd5b23a,7c25a43adc67c4a8d08e930aa92f1c5575ec3646,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Nov 9 10:31:02 2010 -0300,1289309462,Handle BRPOPLPUSH inside a transaction.,51.0,26.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7114160189012124,6.0,835.5,33.0,0.5717129629629629,14.5,2.3118471131265688,2.0,None,False,,
7c25a43adc67c4a8d08e930aa92f1c5575ec3646,59bd44d1c883b52507358996d1436d466c377e60,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Nov 9 11:00:54 2010 -0300,1289311254,Remove warning.,18.0,18.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,942.0,13.0,0.02074074074074074,16.0,49.214285714285715,11.0,None,False,,
59bd44d1c883b52507358996d1436d466c377e60,e3c51c4b1bb60069bbd6552fe9109885b886aa86,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Nov 9 15:06:25 2010 -0300,1289325985,Rename bstate to bpop.,25.0,25.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,0.9510456605801272,6.0,937.3333333333336,94.0,0.597758487654321,18.0,1.8021069236425031,14.0,None,False,True,"[""baa14ef913032baf34645faeae80f5cd6895f97a""]"
e3c51c4b1bb60069bbd6552fe9109885b886aa86,8987bf23bfd7b4d8501db98f4ae7e37310f58fbd,Damian Janowski & Michel Martens,damian.janowski+soveran@gmail.com,Tue Nov 9 15:16:09 2010 -0300,1289326569,Adhere to conventions.,1.0,2.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,942.0,15.0,0.006759259259259259,20.0,148.94520547945206,15.0,None,False,,
8987bf23bfd7b4d8501db98f4ae7e37310f58fbd,baa14ef913032baf34645faeae80f5cd6895f97a,Michel Martens & Damian Janowski,michel+djanowski@soveran.com,Mon Nov 29 23:47:45 2010 -0300,1291085265,Fix BRPOPLPUSH behavior for all use cases.,53.0,10.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9015982354056712,6.0,847.5,38.0,20.454276620370365,2.5,1.0367860368410446,0.0,Corrective,True,True,"[""ecf940141501e47dcc8dfecbc84a4e3f6ee7b0d3""]"
d8d528e9926d712cf02617dcdb6e9bde90e4e49c c54afb6d0d9808e38248e55a3220868735aaab44,ce260f736e483d40967d3e551f04534154c12aba,antirez,antirez@gmail.com,Tue Nov 30 11:39:55 2010 +0100,1291113595,minor merge conflicts merging cli-help branch fixed,,,,,,,,,,,,,,,Merge,False,,
ce260f736e483d40967d3e551f04534154c12aba,bbac56c2f823a6ab2170e1b00b93a620188b76da,antirez,antirez@gmail.com,Wed Dec 1 11:18:59 2010 +0100,1291198739,added support for ctrl-l and clear command into redis-cli. To clear the screen is a good idea from time to time :). Also linenoise updated to the current version to support this new feature.,25.0,0.0,"deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,2.0,2.0,0.9161182137782959,7.0,428.66666666666674,40.0,1.6272800925925923,2833.0,1.3787149029086632,280.0,Feature Addition,False,,
baa14ef913032baf34645faeae80f5cd6895f97a bbac56c2f823a6ab2170e1b00b93a620188b76da,bc8ffafeb9bb5b272e118400df55157db41ad897,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 12:31:56 2010 +0100,1291635116,Merge branch 'master' into brpoplpush,,,,,,,,,,,,,,,Merge,False,,
bc8ffafeb9bb5b272e118400df55157db41ad897,c8a0070a611011c706e67da52a7f17ebfc0c0c1a,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 13:45:48 2010 +0100,1291639548,Move timeout logic,10.0,15.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,941.0,17.0,6.4153125,625.0,1.1558770519752546,196.0,None,False,,
c8a0070a611011c706e67da52a7f17ebfc0c0c1a,5fa95ad7639ae3f43e175d95a7d6384e4723b80e,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 14:05:01 2010 +0100,1291640701,Rename blpop_blocked_clients to bpop_blocked_clients,6.0,6.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272446,6.0,1190.3333333333333,127.0,18.193715277777773,627.0,1.0242160135009348,199.0,None,False,,
5fa95ad7639ae3f43e175d95a7d6384e4723b80e,ac06fc011df598372232a5dc1805683004240c0d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 14:48:58 2010 +0100,1291643338,Move code for pushing on a (blocking) RPOPLPUSH,27.0,33.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,936.0,19.0,0.03052083333333333,629.0,33.76450511945392,200.0,None,False,True,"[""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb"", ""c47d152c8d96415de1af994b1a4bb3e0347caef3""]"
ac06fc011df598372232a5dc1805683004240c0d,8a88c368edbc12540eee3d129b8a017bd6a84cac,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 16:04:10 2010 +0100,1291647850,Check other blocked clients when value could not be pushed,55.0,23.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6789538995185759,6.0,863.5,43.0,3.2818113425925928,630.5,10.650645529176797,127.0,None,False,True,"[""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
8a88c368edbc12540eee3d129b8a017bd6a84cac,ecf940141501e47dcc8dfecbc84a4e3f6ee7b0d3,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 16:04:42 2010 +0100,1291647882,Fix case and indent,4.0,4.0,"src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,6.0,879.5,45.0,0.00037037037037037035,632.5,2026.0,128.0,Corrective,True,,
ecf940141501e47dcc8dfecbc84a4e3f6ee7b0d3,a4ce7581553b1f4e29a7ed2141add788e56142c5,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Dec 6 16:39:39 2010 +0100,1291649979,Don't execute commands for clients when they are unblocked,19.0,8.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.0377724203178629,6.0,1194.3333333333333,133.0,0.07967978395061727,635.0,7.050646436946438,205.0,None,False,,
bbac56c2f823a6ab2170e1b00b93a620188b76da,d51ebef5090624a3ba0824fa697410deaff1d1fa,antirez,antirez@gmail.com,Tue Dec 7 16:33:13 2010 +0100,1291735993,"LRANGE converted into a COW friendly command. Some refactoring, comment, and new addReply*() family function added in the process.",60.0,15.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",4.0,1.0,1.0,1.4958119921681203,6.0,1031.75,116.0,16.276388888888892,2836.5,1.0298218052289831,284.0,Feature Addition,False,True,"[""7cfeb8cccf945e5de7210d8bd5a398acfd0959d8"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
d51ebef5090624a3ba0824fa697410deaff1d1fa,a5be65f71c927601260f4518236cbc7bc3d87965,antirez,antirez@gmail.com,Thu Dec 9 10:21:02 2010 +0100,1291886462,"COW friendly versions of SPOP and SRANDMEMBER commands, with some change to the set encoding-agnostic API.",45.0,34.0,"src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",4.0,1.0,1.0,0.5081200798449351,6.0,343.25,68.0,39.863602430555574,2840.5,1.0086743260829245,288.0,None,False,True,"[""dd48de748ce6f86727f509096c76e51faadd2019""]"
a5be65f71c927601260f4518236cbc7bc3d87965,3c1bf4957e4c8aacd962a859e16cbcf2596f4edb,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 9 16:39:33 2010 +0100,1291909173,Add commands SETBIT/GETBIT,197.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",6.0,2.0,2.0,1.6094357759854772,6.0,656.0,139.0,47.70780671296296,639.5,1.1109514643341774,129.0,Feature Addition,False,True,"[""648e9654604e1d2c6191e3aceb938da4e1c031b2"", ""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
d51ebef5090624a3ba0824fa697410deaff1d1fa,e1a586ee69a15dd15afbba8e25f8eb62bbb22da9,Jonah H. Harris,jonah.harris@gmail.com,Thu Dec 9 11:10:21 2010 -0500,1291911021,syslog support,74.0,8.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.6491616658715156,6.0,897.5,185.0,15.530862268518515,1.5,0.7620768949866468,2.0,None,False,True,"[""9a322ab73093f15726348d08065b6a90c9894860""]"
3c1bf4957e4c8aacd962a859e16cbcf2596f4edb,076f88d65769788113c8d4db582a7b3ec8d0fefa,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 9 17:16:10 2010 +0100,1291911370,Enforce maximum string value length of 512MB,18.0,14.0,"src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3372900666170139,6.0,405.5,17.0,0.02542824074074074,643.5,30.49476558944015,130.0,None,False,True,"[""648e9654604e1d2c6191e3aceb938da4e1c031b2""]"
e1a586ee69a15dd15afbba8e25f8eb62bbb22da9,8b5db0a8dcf24f8693a99b795c1968338f41be8a,Jonah H. Harris,jonah.harris@gmail.com,Thu Dec 9 11:26:33 2010 -0500,1291911993,removed dup syslog-ident conditional,0.0,4.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,575.0,17.0,0.01125,4.0,89.88888888888891,3.0,None,False,,
a5be65f71c927601260f4518236cbc7bc3d87965,1b508da7ca7cb8e999a557bd0bf18875e0a40972,antirez,antirez@gmail.com,Thu Dec 9 21:11:56 2010 +0100,1291925516,"SINTER/MEMBERS are now COW friendly, also some refactoring around was needed to get this result.",117.0,40.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",4.0,1.0,1.0,0.3323424617798716,6.0,515.0,83.0,29.284311342592588,2844.5,1.0316278286055425,292.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""66f9393ee4d526e27df38e7b610daef30a4c89bd""]"
076f88d65769788113c8d4db582a7b3ec8d0fefa,eae33c1c813953e27dc37dfe7c3dcc246fda294f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Dec 10 11:58:14 2010 +0100,1291978694,Add generic function to grow an sds valueMove logic concerned with setting a bit in an sds to the SETBIT commandninstead of keeping it in sds.c. The function to grow an sds can and willnbe reused for a command to set a range within a string value.n,42.0,39.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.4590497311993933,6.0,370.0,30.0,0.7919270833333334,646.5,1.6496360427461787,131.0,Feature Addition,False,,
eae33c1c813953e27dc37dfe7c3dcc246fda294f,586500c0ef32f480dba9bc10aedb3f72bd525118,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Dec 10 12:06:24 2010 +0100,1291979184,Typo,1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,364.0,11.0,0.005671296296296297,649.0,177.32653061224488,215.0,None,False,True,"[""648e9654604e1d2c6191e3aceb938da4e1c031b2""]"
586500c0ef32f480dba9bc10aedb3f72bd525118,cc209063904ed5d86a34b2297ceac00854ff6c01,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Dec 10 12:16:16 2010 +0100,1291979776,Change function name to match what it does,5.0,5.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",3.0,1.0,1.0,1.3709505944546687,6.0,340.6666666666667,25.0,0.010632716049382715,651.0,51.37599027763992,218.0,None,False,,
1b508da7ca7cb8e999a557bd0bf18875e0a40972,3d24304ff930fd3392a63b79ed6037ebab94b742,antirez,antirez@gmail.com,Fri Dec 10 15:17:55 2010 +0100,1291990675,"HGET HMGET are now COW friendly, plus API refactoring and changes needed for the new implementation.",67.0,25.0,"src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",3.0,1.0,1.0,0.3573557425678517,6.0,593.6666666666666,75.0,15.556350308641974,2848.0,1.670136092493968,295.0,Feature Addition,False,True,"[""3c25c4a691aec646cfdc3f840f356ef3bb5840c0""]"
3d24304ff930fd3392a63b79ed6037ebab94b742,e9bc56dbed149a29e031debc27bf25f2db991cc7,antirez,antirez@gmail.com,Fri Dec 10 15:36:04 2010 +0100,1291991764,valgrind suppression file added,5.0,0.0,"src/valgrind.sup,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,2850.0,0.0,296.0,Feature Addition,False,,
e9bc56dbed149a29e031debc27bf25f2db991cc7,4b918769a1d89e08c88d570913a5911f7d891efe,antirez,antirez@gmail.com,Fri Dec 10 15:40:48 2010 +0100,1291992048,command line option in test suite to activate valgrind mode,3.0,1.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,1.0,6.0,242.5,43.0,57.18786458333334,2851.5,1.0129598416141259,66.0,Preventative,False,,
4b918769a1d89e08c88d570913a5911f7d891efe,dd48de748ce6f86727f509096c76e51faadd2019,antirez,antirez@gmail.com,Fri Dec 10 15:47:01 2010 +0100,1291992421,fixed compilation on Linux,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,994.0,60.0,0.02020833333333333,2853.0,50.48453608247422,297.0,Corrective,True,,
a5be65f71c927601260f4518236cbc7bc3d87965,6f8a32d5c71350afa1b64f2b77667e94b8e9773a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Dec 10 16:13:21 2010 +0100,1291994001,Be less verbose in testing; improve error handling,143.0,75.0,"tests/support/server.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",5.0,1.0,3.0,2.0526420650393185,6.0,212.0,79.0,29.66315740740741,655.0,9.857174414379523,136.0,Preventative,False,True,"[""5d46e370b7da346801e01066e3ed077069d73d3d"", ""121ffc85f4ab8cb4a961551163ed53541834c2b1"", ""e54484876a314c6e2a290b386cda0103f780acc5"", ""09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c""]"
dd48de748ce6f86727f509096c76e51faadd2019,b215a496a4fcab6b198ce4344b4c1b94c5b1eb12,antirez,antirez@gmail.com,Fri Dec 10 17:03:38 2010 +0100,1291997018,faster INCR doing far less allocation in common cases,16.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,364.0,13.0,0.1995601851851852,2854.0,6.01101960329428,298.0,None,False,,
b215a496a4fcab6b198ce4344b4c1b94c5b1eb12,a15742a41b30b742d58f4ed260a4a36f02bdd9ac,antirez,antirez@gmail.com,Fri Dec 10 17:23:38 2010 +0100,1291998218,dont take the fast path for INCR if the resulting integer will fit into a shared integer range,2.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,379.0,14.0,0.013888888888888888,2855.0,73.0,299.0,None,False,,
a15742a41b30b742d58f4ed260a4a36f02bdd9ac 6f8a32d5c71350afa1b64f2b77667e94b8e9773a,d6107fd6f194f568bd0fec3230cae83973de929d,antirez,antirez@gmail.com,Fri Dec 10 17:24:03 2010 +0100,1291998243,Merge remote branch 'pietern/testverbosity',,,,,,,,,,,,,,,Merge,False,,
d6107fd6f194f568bd0fec3230cae83973de929d,afd438dfff7112bec97b62640b6a2c4ec73fcf4e,antirez,antirez@metal.(none),Fri Dec 10 19:15:00 2010 +0100,1292004900,"previouse INCR implementation restored, was actually faster for some reson not fully clear at the moment",1.0,17.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,380.0,15.0,0.07733796296296297,2856.0,13.930260401077518,300.0,None,False,,
afd438dfff7112bec97b62640b6a2c4ec73fcf4e,5ce3a24dbaec87d3fc38c52cb2bcd631dff1a968,antirez,antirez@metal.(none),Fri Dec 10 19:22:13 2010 +0100,1292005333,Linenoise updated to latest version,3.0,1.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,596.0,4.0,9.335578703703703,2857.0,1.1071170874070475,4.0,Preventative,False,,
cc209063904ed5d86a34b2297ceac00854ff6c01,7ecd4644e7fe48309d4b8445ec62c7fe8c0443ff,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 14 10:31:11 2010 +0100,1292319071,Don't decode object on STRLEN when not necessary,10.0,3.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,364.0,16.0,3.6362384259259257,658.0,1.2750094693654093,219.0,None,False,,
5ce3a24dbaec87d3fc38c52cb2bcd631dff1a968,8c304be359f15151ed8fe3e5ff61b0238881358d,antirez,antirez@gmail.com,Tue Dec 14 12:10:51 2010 +0100,1292325051,cow friendly HGETALL and variants,58.0,22.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",3.0,1.0,1.0,0.5142770911323034,6.0,581.3333333333334,80.0,4.114741512345678,2859.0,1.138422374436776,303.0,None,False,True,"[""96b5d05fdea63040036c6ed0ae9b9b1cb94e2fc0""]"
7ecd4644e7fe48309d4b8445ec62c7fe8c0443ff,9f9e1ceaa0d4451a21aa56739e63cca012399317,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 14 14:20:51 2010 +0100,1292332851,Add SETRANGE command implementation and tests,191.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.076675109405496,6.0,877.0,150.0,2.30777488425926,660.5,1.1772770252767901,137.0,Feature Addition,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
9f9e1ceaa0d4451a21aa56739e63cca012399317,ef11bccccac22a001e2d0a6f440dddf69c401954,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 14 15:10:58 2010 +0100,1292335858,Refactor and rename SUBSTR to GETRANGESUBSTR is renamed to GETRANGE to have better consistency between commandnnames (with SETRANGE as its dual). GETRANGE is still aliased as SUBSTR.n,76.0,75.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.685497211758508,6.0,793.6,162.0,12.017513888888883,665.0,12.975393656697994,139.0,Perfective,False,True,"[""0b537972f48a432cd5799d9b516d4526ea1ffef7"", ""53fdfda9e3316a5763c78569fa74bf42e1c4b3a7"", ""f0e306f4a0bc0e4db15da54eb3d1d2337a1b6dea""]"
ef11bccccac22a001e2d0a6f440dddf69c401954,d8f160a848b2d10615918668eddbbb1fe415bd85,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 14 15:35:35 2010 +0100,1292337335,Add test cases for GETRANGE against integer-encoded strings,29.0,29.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,601.0,12.0,0.017094907407407406,668.0,59.49695328368315,140.0,Feature Addition,False,,
8c304be359f15151ed8fe3e5ff61b0238881358d a4ce7581553b1f4e29a7ed2141add788e56142c5,f858c11d7d9ca79010dd46a9c8c625e63a9a3ec0,antirez,antirez@gmail.com,Tue Dec 14 16:26:37 2010 +0100,1292340397,Merge remote branch 'pietern/brpoplpush',,,,,,,,,,,,,,,Merge,False,,
f858c11d7d9ca79010dd46a9c8c625e63a9a3ec0,96b5d05fdea63040036c6ed0ae9b9b1cb94e2fc0,antirez,antirez@metal.(none),Tue Dec 14 16:39:33 2010 +0100,1292341173,"initialized a few vars just to avoid warnings, not a real problem.",4.0,4.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,476.0,11.0,0.18659722222222225,2861.0,6.359136583550428,304.0,Corrective,True,,
5ce3a24dbaec87d3fc38c52cb2bcd631dff1a968,2b2eca1f5643260ae7ca6bec70c263ff0db5a8e3,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 14 17:39:34 2010 +0100,1292344774,Zero-pad timestamps in MONITOR outputOriginal report and fix:nhttp://code.google.com/p/redis/issues/detail?id=404n,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,510.0,12.0,31.90085648148149,669.0,1.0313471207451907,226.0,Corrective,True,,
8c304be359f15151ed8fe3e5ff61b0238881358d d8f160a848b2d10615918668eddbbb1fe415bd85,57997664eaba82ad263c61b9cdbe7dd26ec8d08d,antirez,antirez@gmail.com,Tue Dec 14 17:42:01 2010 +0100,1292344921,Merge remote branch 'pietern/strrange',,,,,,,,,,,,,,,Merge,False,,
57997664eaba82ad263c61b9cdbe7dd26ec8d08d 96b5d05fdea63040036c6ed0ae9b9b1cb94e2fc0,603e616bf4e09cdbbfeaf77a5e2a02876c229c35,antirez,antirez@gmail.com,Tue Dec 14 17:42:46 2010 +0100,1292344966,Merge branch 'master' of github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
603e616bf4e09cdbbfeaf77a5e2a02876c229c35,648e9654604e1d2c6191e3aceb938da4e1c031b2,antirez,antirez@metal.(none),Tue Dec 14 17:46:20 2010 +0100,1292345180,removed a test that will never be true fixing the compilation on Linux,2.0,4.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,456.0,19.0,0.10789351851851853,2862.0,10.26839733962669,305.0,Corrective,True,,
648e9654604e1d2c6191e3aceb938da4e1c031b2 2b2eca1f5643260ae7ca6bec70c263ff0db5a8e3,8e33831b2b93d6d0a324ca01c6934197887276d8,antirez,antirez@gmail.com,Tue Dec 14 17:48:52 2010 +0100,1292345332,Merge remote branch 'pietern/cli-monitor',,,,,,,,,,,,,,,Merge,False,,
8e33831b2b93d6d0a324ca01c6934197887276d8 8b5db0a8dcf24f8693a99b795c1968338f41be8a,cc7c4158bc9c584b91560e9bf3dff51a9316c9b3,antirez,antirez@gmail.com,Tue Dec 14 17:53:28 2010 +0100,1292345608,Merge remote branch 'jonahharris/syslog',,,,,,,,,,,,,,,Merge,False,,
cc7c4158bc9c584b91560e9bf3dff51a9316c9b3,6a246b1e7e9df7d7c104545d6d99819c6842511a,antirez,antirez@gmail.com,Tue Dec 14 18:23:52 2010 +0100,1292347432,"special encoding limits redefined, and all the config options for special encodings added in the example redis.conf file",16.0,3.0,"redis.conf,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,2.0,2.0,0.8997437586982626,6.0,702.0,117.0,2.592505787037037,2863.5,1.1954210557131022,306.0,Feature Addition,False,,
6a246b1e7e9df7d7c104545d6d99819c6842511a,30407e1f4fc290468f3d8ec31cb933402767568d,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 00:42:32 2010 +0100,1292370152,Make SETBIT return original bit value,37.0,28.0,"src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9500796252338518,6.0,527.5,33.0,0.3344270833333333,670.5,3.477484641075532,141.0,None,False,,
6a246b1e7e9df7d7c104545d6d99819c6842511a,eae9cce166dbb896eabda3c7bd37bd0bca0b2311,antirez,antirez@gmail.com,Wed Dec 15 10:14:34 2010 +0100,1292404474,colorized make test output when the verbose output is disabled (default),43.0,3.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,129.0,15.0,4.750844907407409,2865.0,1.210488875029539,67.0,Preventative,False,True,"[""180e07b8c0fb63b437d5c5af72843e34f1cd5e4c"", ""4a67d194e9437e48e076d15c746414d3d14faa35"", ""3744824c3ef559c6c69cbc264f93b3e9891c263b""]"
eae9cce166dbb896eabda3c7bd37bd0bca0b2311,7982173fef8bd6de9805e782edb9aa827184b010,antirez,antirez@gmail.com,Wed Dec 15 10:44:36 2010 +0100,1292406276,print test names inline in the non verbose output mode,16.0,0.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,169.0,16.0,0.020856481481481483,2866.0,48.94672586015538,68.0,Preventative,False,True,"[""4a67d194e9437e48e076d15c746414d3d14faa35"", ""3744824c3ef559c6c69cbc264f93b3e9891c263b""]"
7982173fef8bd6de9805e782edb9aa827184b010,180e07b8c0fb63b437d5c5af72843e34f1cd5e4c,antirez,antirez@gmail.com,Wed Dec 15 11:04:04 2010 +0100,1292407444,fixed test rendering when test failed in non verbose mode,1.0,1.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,185.0,17.0,0.013518518518518518,2867.0,74.97260273972603,69.0,Corrective,True,True,"[""3744824c3ef559c6c69cbc264f93b3e9891c263b""]"
30407e1f4fc290468f3d8ec31cb933402767568d,e983cf34be97ac01448f331b9c106f8b9ce55889,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 11:20:54 2010 +0100,1292408454,Add fuzzy test for SETBIT,18.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,601.0,14.0,0.4433101851851852,672.0,3.2557568795363165,142.0,Feature Addition,False,,
e983cf34be97ac01448f331b9c106f8b9ce55889,8f8eeffec1fe1c0d40b6d078121661d7cfb02c08,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 11:30:50 2010 +0100,1292409050,Disable negative offsets for SETRANGE,7.0,44.0,"src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,6.0,541.0,36.0,0.22855324074074074,673.5,3.204433984395898,143.0,None,False,,
8f8eeffec1fe1c0d40b6d078121661d7cfb02c08,1333f98dd2ff2aae4e4c2a9a43d7b83a0b1af8aa,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 11:40:36 2010 +0100,1292409636,Use helper functions in APPEND,8.0,14.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,456.0,22.0,0.006782407407407407,675.0,148.44027303754268,229.0,None,False,,
1333f98dd2ff2aae4e4c2a9a43d7b83a0b1af8aa,ad1b4f4f59e653ac310ee0afb847daeb4f19fbfd,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 11:49:04 2010 +0100,1292410144,Use helper function for string object length,3.0,20.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,450.0,23.0,0.00587962962962963,676.0,171.07874015748033,230.0,None,False,,
ad1b4f4f59e653ac310ee0afb847daeb4f19fbfd,7d5f5712d948b19d0778e4ef53a27d213aff7bdc,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 11:49:39 2010 +0100,1292410179,Update tests for STRLEN,8.0,8.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,589.0,16.0,0.01306712962962963,677.0,77.52790079716563,144.0,Preventative,False,,
180e07b8c0fb63b437d5c5af72843e34f1cd5e4c 7d5f5712d948b19d0778e4ef53a27d213aff7bdc,53f0efe28c4fe2f8d15286c02ccd2d83a5195fc9,antirez,antirez@gmail.com,Wed Dec 15 11:52:55 2010 +0100,1292410375,Merge remote branch 'pietern/string-patches',,,,,,,,,,,,,,,Merge,False,,
53f0efe28c4fe2f8d15286c02ccd2d83a5195fc9,c8061392e19e2887c0afd5cca06db8321df5fbee,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 12:40:23 2010 +0100,1292413223,Minor changes to Makefile,10.0,10.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,175.0,19.0,23.830625,678.0,1.0419628104592304,231.0,None,False,,
c8061392e19e2887c0afd5cca06db8321df5fbee,c392edf5315b9828414c96f14255c38c52252a4a,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 14:34:01 2010 +0100,1292420041,Show redis-cli version with repository information if present,18.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,660.0,36.0,14.135439814814816,679.0,1.0707441730219058,232.0,None,False,,
c392edf5315b9828414c96f14255c38c52252a4a,f18e059e8270a3b1889aa621fa6565dcf6be5f1c,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 14:58:18 2010 +0100,1292421498,Make redis-cli help a little better,31.0,19.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,677.0,37.0,0.016863425925925928,680.0,60.29993136582017,233.0,Perfective,False,,
c8061392e19e2887c0afd5cca06db8321df5fbee,2136a880a7edb1cc5b7d9b1a6e0f665f1ba5fed8,antirez,antirez@gmail.com,Wed Dec 15 15:22:04 2010 +0100,1292422924,version bumped to 2.1.8,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1.0,7.0,40.18175925925926,2868.0,1.0248869143221888,307.0,None,False,,
2136a880a7edb1cc5b7d9b1a6e0f665f1ba5fed8,b9f7e9e63c053f3d23464171d65fb8995676ee76,antirez,antirez@gmail.com,Wed Dec 15 15:49:29 2010 +0100,1292424569,HTML doc updated,105.0,112.0,"doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/HdelCommand.html,CAS_DELIMITER,doc/HgetallCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/MultiExecCommand.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/PublishSubscribe.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/SubstrCommand.html,CAS_DELIMITER,doc/VirtualMemoryUserGuide.html,CAS_DELIMITER,doc/ZrankCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,doc/redis.png,CAS_DELIMITER",17.0,1.0,1.0,2.13531530918765,6.0,67.82352941176471,94.0,210.25908837145974,2877.0,1.001150497404698,901.0,Non Functional,False,,
f18e059e8270a3b1889aa621fa6565dcf6be5f1c,65add0a31189e6257c521df3889f6d9a6d1183f2,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 15:59:04 2010 +0100,1292425144,"Improved raw output modeRaw output mode is selected by default when STDOUT is not a tty. Fornttys, raw output can be forced using the option --raw.n",65.0,29.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,689.0,38.0,0.04219907407407408,681.0,24.69720241360395,234.0,None,False,True,"[""1f8d6144237e10fe91b71b883578a0083b95920c""]"
b9f7e9e63c053f3d23464171d65fb8995676ee76,6674e3b91035fc9e0c19956119fe918ba115608d,antirez,antirez@gmail.com,Wed Dec 15 15:59:45 2010 +0100,1292425185,added new HTML doc pages,618.0,0.0,"doc/BrpoplpushCommand.html,CAS_DELIMITER,doc/GetbitCommand.html,CAS_DELIMITER,doc/HmgetCommand.html,CAS_DELIMITER,doc/NonexistentCommands.html,CAS_DELIMITER,doc/RedisCLI.html,CAS_DELIMITER,doc/RedisPipelining.html,CAS_DELIMITER,doc/RedisStatus.html,CAS_DELIMITER,doc/Redis_2_0_0_Changelog.html,CAS_DELIMITER,doc/Redis_2_0_Whats_new.html,CAS_DELIMITER,doc/SetbitCommand.html,CAS_DELIMITER,doc/SetrangeCommand.html,CAS_DELIMITER,doc/StrlenCommand.html,CAS_DELIMITER",12.0,1.0,1.0,3.5274521967586834,1.0,0.0,0.0,0.0,2891.5,0.0,913.0,Feature Addition,False,,
65add0a31189e6257c521df3889f6d9a6d1183f2,28c07c7bf80709e7e0be5cac1bbb280cea439272,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 15 16:02:07 2010 +0100,1292425327,Specify multi-bulk delimiter via options,5.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,725.0,39.0,0.0021180555555555558,682.0,473.13114754098365,235.0,None,False,,
6674e3b91035fc9e0c19956119fe918ba115608d 28c07c7bf80709e7e0be5cac1bbb280cea439272,beb1aab3fddc2bd2ed241d13e8597562b2cddea9,antirez,antirez@gmail.com,Wed Dec 15 16:03:43 2010 +0100,1292425423,Merge remote branch 'pietern/cli',,,,,,,,,,,,,,,Merge,False,,
beb1aab3fddc2bd2ed241d13e8597562b2cddea9,401c3e213c89d98bbeda399b4e17fbd636b80ac0,antirez,antirez@gmail.com,Wed Dec 15 16:07:49 2010 +0100,1292425669,bulk transfers limited to 512 MB as this is the new limit of all the redis strings,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,910.0,31.0,7.9823611111111115,2898.0,1.1252762166582568,308.0,Feature Addition,False,,
401c3e213c89d98bbeda399b4e17fbd636b80ac0,4c4dec7202091c1e7a2d1fe8f6013bf389426727,antirez,antirez@gmail.com,Wed Dec 15 16:44:29 2010 +0100,1292427869,release notes added,33.0,1.0,".gitignore,CAS_DELIMITER,00-RELEASENOTES,CAS_DELIMITER",2.0,1.0,1.0,0.19143325481419346,6.0,11.0,13.0,8.114421296296296,2899.5,1.0616186887200714,1206.0,Feature Addition,False,,
4c4dec7202091c1e7a2d1fe8f6013bf389426727,0898aa462e1eab878ae6e6abc5f9d273db8299de,antirez,antirez@gmail.com,Wed Dec 15 16:51:01 2010 +0100,1292428261,typo fixed,2.0,2.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,33.0,1.0,0.0045370370370370365,2901.0,221.4081632653061,1207.0,Corrective,True,,
0898aa462e1eab878ae6e6abc5f9d273db8299de,9a7a07a466f13b9fd821564af10413760eaed7fb,antirez,antirez@gmail.com,Wed Dec 15 16:54:08 2010 +0100,1292428448,removed a line from release notes that was not true (feature already backported into 2.0),0.0,1.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,33.0,2.0,0.0021643518518518518,2902.0,463.03208556149735,1208.0,None,False,,
9a7a07a466f13b9fd821564af10413760eaed7fb,51716cbdb8cdf8b0518d2b0ffcc96042686ccd97,antirez,antirez@gmail.com,Wed Dec 15 17:00:54 2010 +0100,1292428854,added more info in the release notes,1.0,0.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,32.0,3.0,0.004699074074074074,2903.0,213.807881773399,1209.0,Feature Addition,False,,
51716cbdb8cdf8b0518d2b0ffcc96042686ccd97,9fecc4057ac1f43d41a21d90e407863f22396e38,antirez,antirez@gmail.com,Wed Dec 15 17:18:15 2010 +0100,1292429895,"release notes, info on 2.0 compatibility",2.0,0.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,33.0,4.0,0.012048611111111107,2904.0,83.99711815561959,1210.0,None,False,,
9fecc4057ac1f43d41a21d90e407863f22396e38,59aee5513d27fdf2d24499f35611093fa0fab3fb,antirez,antirez@gmail.com,Wed Dec 15 17:19:01 2010 +0100,1292429941,added the mandatory Cheers in the release notes,3.0,0.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,35.0,5.0,0.0005324074074074074,2905.0,1879.2608695652173,1211.0,Feature Addition,False,,
59aee5513d27fdf2d24499f35611093fa0fab3fb,6418b4c790adc1373cea9e4e3342982e9a209505,antirez,antirez@gmail.com,Wed Dec 15 17:39:40 2010 +0100,1292431180,help.h updated,43.0,12.0,"src/help.h,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER",2.0,2.0,2.0,0.13110652958234506,7.0,359.5,6.0,16.834965277777773,2906.5,1.0445501364347929,11.0,None,False,,
59aee5513d27fdf2d24499f35611093fa0fab3fb,021321e0efc0fcc54645ee9016a229257e1d4ba7,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 16 23:32:02 2010 +0100,1292538722,Update hiredis to 0.9.2,678.0,173.0,"deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/ae.h,CAS_DELIMITER,deps/hiredis/adapters/libev.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/example-ae.c,CAS_DELIMITER,deps/hiredis/example-libev.c,CAS_DELIMITER,deps/hiredis/example-libevent.c,CAS_DELIMITER,deps/hiredis/example.c,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",16.0,1.0,2.0,3.2469324639383035,7.0,173.125,22.0,34.898595196759246,690.5,1.007335151381604,53.0,None,False,,
021321e0efc0fcc54645ee9016a229257e1d4ba7,53f1d81712ff66d0343647af2f15308ea7e89d30,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 16 23:35:02 2010 +0100,1292538902,Fix NULL-termination of variable data in redis-benchmark,7.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,564.0,9.0,41.55011574074074,699.0,1.0240673216469405,236.0,Corrective,True,,
53f1d81712ff66d0343647af2f15308ea7e89d30,174df6fe497898a9645fdafdf56807f6438b9978,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 16 23:41:58 2010 +0100,1292539318,Re-use variable data in redis-benchmark,8.0,18.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,570.0,10.0,0.004814814814814815,700.0,208.6923076923077,237.0,None,False,,
174df6fe497898a9645fdafdf56807f6438b9978,1cd3c1e08c96dfe4bddd4ef73229dc7b89c4ce2a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Dec 17 00:19:32 2010 +0100,1292541572,Use multi-bulk protocol by default in redis-benchmark,78.0,30.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,560.0,11.0,0.02608796296296296,701.0,39.331854480922814,238.0,None,False,True,"[""0ae65bec6054fe3b76a24bc65590fdaef2114ab6""]"
1cd3c1e08c96dfe4bddd4ef73229dc7b89c4ce2a,f474a5bd4e80157235dac13326edaa99181fb120,Didier Spezia,didier.06@gmail.com,Sat Dec 18 10:58:50 2010 +0100,1292666330,Add wait states to deal with many connections.,11.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,608.0,12.0,1.4439583333333332,0.0,0.0,0.0,Feature Addition,False,,
59aee5513d27fdf2d24499f35611093fa0fab3fb,9d7165e885b3de44577dea2917bb4f3afa2ed335,antirez,antirez@gmail.com,Sun Dec 19 12:22:12 2010 +0100,1292757732,overflow detection in INCR family functions,6.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,433.0,24.0,4.0230092592592595,2908.0,1.2485701462651184,310.0,None,False,True,"[""7c96b467c1f882874f80403101ec96ddaf624f1a""]"
9d7165e885b3de44577dea2917bb4f3afa2ed335,f21779ff36947fe22e6fc3f00d4bd73185557190,antirez,antirez@gmail.com,Sun Dec 19 15:15:08 2010 +0100,1292768108,"removed some dead code, added evicted keys counter separated from expired keys.",5.0,32.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.1792560669283215,6.0,1339.5,128.0,4.935914351851851,2909.5,1.150591340168174,312.0,Feature Addition,False,,
f21779ff36947fe22e6fc3f00d4bd73185557190,180596766bb48698fda28069ae5028554caac74c,antirez,antirez@gmail.com,Wed Dec 15 17:39:40 2010 +0100,1292431180,help.h updated,43.0,12.0,"src/help.h,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER",2.0,2.0,2.0,0.13110652958234506,7.0,375.0,8.0,0.0,2911.5,0.0,12.0,None,False,,
6418b4c790adc1373cea9e4e3342982e9a209505,4c22fd3409d7d84e682fbc45f3014bbdd4a1c397,antirez,antirez@gmail.com,Mon Dec 20 13:13:46 2010 +0100,1292847226,TODO udpated,26.0,48.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,64.0,145.0,156.59546296296298,2913.0,1.006385881053505,1212.0,None,False,,
4c22fd3409d7d84e682fbc45f3014bbdd4a1c397 180596766bb48698fda28069ae5028554caac74c,d841dedb5fc4b33eff47ee05f517bca9cabd7533,antirez,antirez@gmail.com,Mon Dec 20 13:14:12 2010 +0100,1292847252,Merge branch 'master' of github.com:antirez/redis,,,,,,,,,,,,,,,Merge,False,,
d841dedb5fc4b33eff47ee05f517bca9cabd7533,d3e5e28804bd3cfd038d95a1ffd85a92941bc788,antirez,antirez@gmail.com,Mon Dec 20 15:47:33 2010 +0100,1292856453,added mkrelease.sh script into utils. gitignore modified accordingly since this script was originally ignored,14.0,1.0,".gitignore,CAS_DELIMITER,utils/mkrelease.sh,CAS_DELIMITER",2.0,2.0,2.0,0.35335933502142136,6.0,10.5,14.0,2.4802314814814816,2914.5,1.2015940865734605,13.0,Feature Addition,False,,
f474a5bd4e80157235dac13326edaa99181fb120,f2f2424e006856aacef00e8ce8dd7be76e038dce,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 22 18:31:33 2010 +0100,1293039093,Remove code duplication,34.0,111.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,619.0,13.0,4.314386574074073,702.0,1.2317826608327542,239.0,None,False,,
f2f2424e006856aacef00e8ce8dd7be76e038dce,d69a483556e7bcd8642723482bd1de1cc5a10ff4,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Dec 22 18:39:52 2010 +0100,1293039592,Make the MSET benchmark *really* work with 10 keys,6.0,4.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,542.0,14.0,0.005775462962962963,703.0,174.14629258517033,240.0,None,False,,
d69a483556e7bcd8642723482bd1de1cc5a10ff4,3c49070b35e0bfaa69359c73b4a7942bc0e3214d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:04:44 2010 +0100,1293098684,Find substrings to randomize when the client is created,27.0,31.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,544.0,15.0,0.6839351851851851,704.0,2.4621268530427134,241.0,Feature Addition,False,True,"[""9b45592c699d6ca9445259e18839ea535495e23b""]"
3c49070b35e0bfaa69359c73b4a7942bc0e3214d,2380388974bd0256e1b123d608940355144e9fd4,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:22:40 2010 +0100,1293099760,Randomize keys and set start time when first write event fires,5.0,15.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,540.0,16.0,0.012453703703703705,705.0,81.29739776951673,242.0,None,False,,
d3e5e28804bd3cfd038d95a1ffd85a92941bc788,a1e97d692e3b9ed3cd6c8751a70665d832199fff,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 16 23:32:02 2010 +0100,1292538722,Update hiredis to 0.9.2,678.0,173.0,"deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/ae.h,CAS_DELIMITER,deps/hiredis/adapters/libev.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/example-ae.c,CAS_DELIMITER,deps/hiredis/example-libev.c,CAS_DELIMITER,deps/hiredis/example-libevent.c,CAS_DELIMITER,deps/hiredis/example.c,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",16.0,1.0,2.0,3.2469324639383035,7.0,204.6875,38.0,0.0,713.5,0.0,69.0,None,False,,
a1e97d692e3b9ed3cd6c8751a70665d832199fff,ba55932674cb83c7854344096e778e36394fcaba,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:08:50 2010 +0000,1293102530,Solaris doesn't support -rdynamic,2.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,175.0,20.0,7.978090277777778,722.0,1.1253432795546832,243.0,None,False,,
ba55932674cb83c7854344096e778e36394fcaba,65b472acceaf1c359ae22a410fc608c5fb311ffa,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:09:07 2010 +0000,1293102547,Solaris 10 doesn't know AF_LOCAL,4.0,0.0,"src/anet.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,53.0,4.0,70.76319444444445,723.0,1.0141316401534852,244.0,None,False,,
65b472acceaf1c359ae22a410fc608c5fb311ffa,89191613f118bcb286d4d7309564f542e957769d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:14:05 2010 +0000,1293102845,limits.h is already included from redis.h,0.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,438.0,25.0,3.9943634259259264,724.0,1.2503527830015098,245.0,None,False,,
89191613f118bcb286d4d7309564f542e957769d,8ce39260a4acfedea5ee8f9143d2d2a9ce82b498,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 23 11:25:56 2010 +0000,1293103556,Fix compiler warnings on Solaris,8.0,4.0,"src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272448,7.0,1234.3333333333333,114.0,9.186882716049382,726.0,1.08296948973193,248.0,Corrective,True,,
8ce39260a4acfedea5ee8f9143d2d2a9ce82b498 2380388974bd0256e1b123d608940355144e9fd4,04a2ade90dd15db2a1e685e2e045b8c0181b9eea,antirez,antirez@gmail.com,Thu Dec 23 13:18:07 2010 +0100,1293106687,Merge remote branch 'pietern/bench-fix',,,,,,,,,,,,,,,Merge,False,,
d3e5e28804bd3cfd038d95a1ffd85a92941bc788,52970711cf974e7905a7fe1252be3bcffcd28d62,antirez,antirez@gmail.com,Sun Dec 26 18:46:25 2010 +0100,1293385585,"added diskstore.c, currently just a stub",110.0,0.0,"src/diskstore.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,2916.0,0.0,314.0,Feature Addition,False,True,"[""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
52970711cf974e7905a7fe1252be3bcffcd28d62,33388d43042273bcf96b3e364fb1432f50c2db08,antirez,antirez@gmail.com,Tue Dec 28 14:42:09 2010 +0100,1293543729,added diskstore.c in Makefile and prototypes in redis.h,1236.0,1159.0,"src/Makefile,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/vm.c,CAS_DELIMITER",4.0,1.0,1.0,1.0950503459683778,6.0,580.5,98.0,12.752552083333333,2918.5,1.1205671671164583,318.0,Feature Addition,False,True,"[""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
33388d43042273bcf96b3e364fb1432f50c2db08,697af434fbeb2e3ba2ba9687cd283ed1a2734fa5,antirez,antirez@gmail.com,Tue Dec 28 15:20:20 2010 +0100,1293546020,initial changes needed to turn the current VM code into a cache system. Tons of work to do still.,43.0,75.0,"src/diskstore.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.2227405152417758,7.0,919.75,165.0,4.992884837962963,2922.5,1.1765508764635095,322.0,Feature Addition,False,,
697af434fbeb2e3ba2ba9687cd283ed1a2734fa5,16d778780eb865deefb2bfa024aef50926917eac,antirez,antirez@gmail.com,Tue Dec 28 18:06:40 2010 +0100,1293556000,a lot of code reworked/removed to implement object caching,76.0,175.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",8.0,1.0,1.0,2.7330732746389295,7.0,790.0,192.0,27.04259114583333,2928.5,1.0091519300408858,330.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""5d46e370b7da346801e01066e3ed077069d73d3d"", ""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b""]"
16d778780eb865deefb2bfa024aef50926917eac,f081eaf1c094535458d93473aabed005f99317ce,antirez,antirez@gmail.com,Tue Dec 28 18:46:34 2010 +0100,1293558394,removed parts of VM that probably will be of no use with object cache,1.0,307.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1230.0,2.0,0.02770833333333333,2933.0,37.090225563909776,331.0,None,False,,
f081eaf1c094535458d93473aabed005f99317ce,f2da3a620ce7d9462613a93c07022bb805eb5c90,antirez,antirez@gmail.com,Tue Dec 28 20:03:21 2010 +0100,1293563001,more work converting vm into object cache,31.0,204.0,"src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.2418944715889801,7.0,1177.0,138.0,0.11029706790123456,2935.0,9.592811578055304,334.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977""]"
f2da3a620ce7d9462613a93c07022bb805eb5c90,f34a6cd85e3327bf4fbe94ba46d6e7fefd7d61c7,antirez,antirez@gmail.com,Wed Dec 29 03:57:35 2010 +0100,1293591455,still more work for diskstore,12.0,63.0,"src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8366407419411673,7.0,871.0,74.0,0.3293287037037037,2937.5,3.2773599493920016,336.0,None,False,,
f34a6cd85e3327bf4fbe94ba46d6e7fefd7d61c7,5f6e1183e7b309b3fd51698523ae424d36fe29d5,antirez,antirez@gmail.com,Wed Dec 29 15:57:27 2010 +0100,1293634647,implemented complete job handling,6.0,60.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,712.0,5.0,0.4999074074074074,2939.0,3.0003704389701795,337.0,None,False,,
5f6e1183e7b309b3fd51698523ae424d36fe29d5,5ef640986bc507079506bf77fd22ab31ea3f4fc4,antirez,antirez@gmail.com,Wed Dec 29 16:58:57 2010 +0100,1293638337,more step forwards for disk store to be able to run,63.0,103.0,"src/debug.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.1202160715660678,7.0,516.25,89.0,4.213469328703703,2941.5,1.061974579566506,341.0,None,False,True,"[""05600eb8a7cb981f1a132bfba7d30f0b81f0a472"", ""7493d2a0325fe33dc75317bfedf9b1c1e5b0d0b5"", ""0aed6a952a0acf5a02ec4b588031ec3dc231a68c"", ""f704360462640a88975eeb68fd80617921d7c97d""]"
5ef640986bc507079506bf77fd22ab31ea3f4fc4,d021221086c9a6c5af404f3017791605b70c592d,antirez,antirez@gmail.com,Wed Dec 29 17:02:43 2010 +0100,1293638563,version set to 2.3.0,2.0,2.0,"src/diskstore.c,CAS_DELIMITER,src/version.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,61.5,11.0,7.036255787037038,2944.5,192.18597273822567,343.0,None,False,,
d021221086c9a6c5af404f3017791605b70c592d,cea8c5cd75b88cd5a13d9b253d792cc045d28b62,antirez,antirez@gmail.com,Wed Dec 29 19:39:42 2010 +0100,1293647982,touched key for WATCH refactored into a more general thing that can be used also for the cache system. Some more changes towards diskstore working.,96.0,91.0,"src/db.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",12.0,1.0,1.0,3.2480047567110657,7.0,696.9166666666665,303.0,13.35144675925926,2951.5,1.2596989629508604,355.0,None,False,True,"[""d2033feb5cd94872fc02fe9506d21ccb5ebf286e"", ""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb"", ""9682b616a21b5e675a1ca82109a11d6f4de1d2de"", ""436d02dd7bbbacc3dc2132db30bb061ee108da8f""]"
cea8c5cd75b88cd5a13d9b253d792cc045d28b62,f63f0928c3e08f60f6b8557dc7c5d635834f990b,antirez,antirez@gmail.com,Wed Dec 29 22:18:20 2010 +0100,1293657500,"cron part of disk store object cache implemented. Objects are pushed as IO jobs if needed, so that the IO thread will process them.",65.0,5.0,"src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6054266419690636,7.0,1082.0,148.0,0.14737268518518518,2959.0,4.260991732865771,358.0,None,False,True,"[""eea15afe5f38fee227bb6500f51c6208f6c8c70d"", ""c15a3887e08d468b96d4313cc19862b5e4b09977""]"
f63f0928c3e08f60f6b8557dc7c5d635834f990b,ddbc81af33d6b3cda29cedf39e5587edf33b7ec1,antirez,antirez@gmail.com,Wed Dec 29 23:00:00 2010 +0100,1293660000,diskstore directory structure creation,33.0,3.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.9022489914183384,7.0,816.0,82.0,0.06565586419753086,2962.0,7.072475482022469,361.0,None,False,True,"[""a440ecf0d36d22305f994a4482e60099720c47f3""]"
ddbc81af33d6b3cda29cedf39e5587edf33b7ec1,67b0b41c879d01a35b1fcdab88b7e70f95a3232c,antirez,antirez@gmail.com,Wed Dec 29 23:08:18 2010 +0100,1293660498,disk store logged messages improved,8.0,3.0,".gitignore,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,2.0,2.0,1.6858157091530304,7.0,624.5,100.0,2.3308420138888892,2965.5,1.107356983361919,364.0,None,False,,
67b0b41c879d01a35b1fcdab88b7e70f95a3232c,1609a1c42d8f49bada5375a8756a2ca56609ece8,antirez,antirez@gmail.com,Thu Dec 30 15:55:24 2010 +0100,1293720924,"fixed a few bugs in DS store, now it's somewhat about able to reply to 'GET foo' with a bogus value.",8.0,9.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.086312840741288,7.0,827.3333333333335,88.0,0.699375,2969.0,1.8737960480587823,367.0,Corrective,True,,
1609a1c42d8f49bada5375a8756a2ca56609ece8,4ab988238f7418d018bf4412c6c956845ffbeab9,antirez,antirez@gmail.com,Thu Dec 30 16:41:36 2010 +0100,1293723696,"more work done for diskstore without trying to compile, more work needed to build again.",104.0,22.0,"src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",7.0,1.0,1.0,1.9451739120772065,7.0,786.2857142857142,225.0,0.6508531746031746,2974.0,1.3310945506703071,374.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""05600eb8a7cb981f1a132bfba7d30f0b81f0a472"", ""1187b0a56e4458d49250c1121d53275b8f837694"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""2a887bd53f992b940c7c9838a5dbdc2de1e3720a"", ""b38682199b09bb77e11d9a3d4130fd8ebf8df7df""]"
4ab988238f7418d018bf4412c6c956845ffbeab9,0b470ebdaa7f55b85270405fc68b4720c4c7998d,antirez,antirez@gmail.com,Thu Dec 30 16:42:11 2010 +0100,1293723731,new gitingore,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,21.0,16.0,0.7318634259259259,2978.0,2.3663751522148244,1215.0,Feature Addition,False,,
0b470ebdaa7f55b85270405fc68b4720c4c7998d,1fce3201145f256401bef7fde96a8c1509bcb4a7,antirez,antirez@gmail.com,Thu Dec 30 17:07:06 2010 +0100,1293725226,filesystem based KV store mostly implemented in diskstore.c,73.0,10.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.854928266709438,7.0,710.75,114.0,0.017708333333333333,2980.5,30.411764705882355,378.0,None,False,True,"[""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
1fce3201145f256401bef7fde96a8c1509bcb4a7,eea15afe5f38fee227bb6500f51c6208f6c8c70d,antirez,antirez@gmail.com,Thu Dec 30 17:21:54 2010 +0100,1293726114,fixed bugs on diskstore cache,7.0,3.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,719.0,13.0,0.010277777777777778,2983.0,98.29729729729729,379.0,Corrective,True,True,"[""a440ecf0d36d22305f994a4482e60099720c47f3""]"
eea15afe5f38fee227bb6500f51c6208f6c8c70d,82ef6ebf73cfa2470f61ce14f02eee945873828d,antirez,antirez@gmail.com,Thu Dec 30 17:53:28 2010 +0100,1293728008,added cache-flush-delay configuration directive. Don't BGSAVE when using diskstore,4.0,1.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,7.0,1092.0,93.0,0.04990740740740741,2984.5,16.0278293135436,381.0,Feature Addition,False,,
82ef6ebf73cfa2470f61ce14f02eee945873828d,98a9abb66d2471e9ea4e657566fbd61a7f28b02b,antirez,antirez@gmail.com,Thu Dec 30 18:17:01 2010 +0100,1293729421,don't use small shared integer objects when disk store is enabled,17.0,8.0,"src/dscache.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.291314688649721,7.0,755.75,143.0,0.7591493055555556,2987.5,7.819817126032922,385.0,None,False,True,"[""a440ecf0d36d22305f994a4482e60099720c47f3""]"
98a9abb66d2471e9ea4e657566fbd61a7f28b02b,8d51fb6a80fb40abd0bb487d71435d3a30c2942e,antirez,antirez@gmail.com,Thu Dec 30 18:37:46 2010 +0100,1293730666,diskstore cache bug fixing,19.0,4.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5131851787372753,7.0,759.3333333333335,117.0,0.03649691358024692,2991.0,11.682173830025027,388.0,Corrective,True,True,"[""5d46e370b7da346801e01066e3ed077069d73d3d""]"
8d51fb6a80fb40abd0bb487d71435d3a30c2942e,31222292284aa518f1a1961b3b7df8e47134bac9,antirez,antirez@gmail.com,Thu Dec 30 19:16:59 2010 +0100,1293733019,handled DEL command as a special optimized case for disk store,34.0,5.0,"src/db.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.4616318183834172,7.0,640.25,130.0,0.04297453703703703,2994.5,15.49117613946352,392.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977""]"
31222292284aa518f1a1961b3b7df8e47134bac9,4e941ecacb976ec88c04561e2251f01db87146b3,antirez,antirez@gmail.com,Thu Dec 30 19:20:23 2010 +0100,1293733223,short but important comment added,3.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,572.0,27.0,0.002361111111111111,2997.0,424.5294117647058,393.0,Feature Addition,False,,
4e941ecacb976ec88c04561e2251f01db87146b3,ad01a25553ed32b33efe036bb10450852f91478f,antirez,antirez@gmail.com,Fri Dec 31 00:18:17 2010 +0100,1293751097,"blocking load of keys on lookup -- nor tested, nor finished",27.0,7.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,1.0,1.0,0.8739810481273578,7.0,665.0,45.0,0.20805555555555555,2998.5,4.618520565184597,395.0,Preventative,False,True,"[""9a3730289f6dba0878d83ddb3e8e5ec323ad6682""]"
ad01a25553ed32b33efe036bb10450852f91478f,8e6bb67108f1d21ea418b6167d094752296800a7,antirez,antirez@gmail.com,Fri Dec 31 02:39:00 2010 +0100,1293759540,brainstorming with myself in dscache.c comments,23.0,0.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,760.0,18.0,0.0977199074074074,3000.0,11.233329385289588,396.0,None,False,,
8e6bb67108f1d21ea418b6167d094752296800a7,a440ecf0d36d22305f994a4482e60099720c47f3,antirez,antirez@gmail.com,Fri Dec 31 14:30:24 2010 +0100,1293802224,major bug and a dead lock fixed,19.0,7.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,1.0,1.0,0.7062740891876007,7.0,686.5,48.0,0.5428877314814815,3001.5,2.3054550883584377,398.0,Corrective,True,True,"[""5d46e370b7da346801e01066e3ed077069d73d3d"", ""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
a440ecf0d36d22305f994a4482e60099720c47f3,c4b64a13954124742575d04251da8766fbd121d4,antirez,antirez@gmail.com,Fri Dec 31 16:10:09 2010 +0100,1293808209,don't overload the IO job queue if there are alrady too much entries,16.0,1.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,7.0,532.0,31.0,0.4697627314814815,3003.5,2.106728041348735,400.0,None,False,True,"[""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
c4b64a13954124742575d04251da8766fbd121d4,d934e1e85b1ec1c6d2cd07292cced53770f4a626,antirez,antirez@gmail.com,Fri Dec 31 17:32:59 2010 +0100,1293813179,negative caching implemented,102.0,28.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.9227335139124248,7.0,1001.75,204.0,0.5244675925925926,3006.5,4.660887120656566,404.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""5d46e370b7da346801e01066e3ed077069d73d3d""]"
d934e1e85b1ec1c6d2cd07292cced53770f4a626,aa81e4d5f4b4d942b9340fd2d401e7795fa9fd1e,antirez,antirez@gmail.com,Fri Dec 31 18:23:31 2010 +0100,1293816211,minor changes to doc and comments,28.0,72.0,"redis.conf,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",3.0,2.0,2.0,0.2822921890824148,7.0,629.0,107.0,5.6899807098765445,3010.0,1.0587033555555554,406.0,Non Functional,False,,
aa81e4d5f4b4d942b9340fd2d401e7795fa9fd1e,3be00d7ed619c12795da54553230aee15c555532,antirez,antirez@gmail.com,Sat Jan 1 21:35:56 2011 +0100,1293914156,"implemented a different approach to IO scheduling, so object->storage is no longer used, instead there is a queue and hash table of IO tasks to process, and it is always possible to know what are the scheduled and acrtive IO operations against every single key.",190.0,156.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",7.0,1.0,1.0,1.1461575428498496,7.0,810.4285714285713,276.0,1.7247569444444444,3015.0,1.2436166546903755,413.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""5d46e370b7da346801e01066e3ed077069d73d3d"", ""7493d2a0325fe33dc75317bfedf9b1c1e5b0d0b5"", ""0aed6a952a0acf5a02ec4b588031ec3dc231a68c"", ""acf73a0592261426e460a8c2917c88b4f5e4db3b""]"
3be00d7ed619c12795da54553230aee15c555532,9a3730289f6dba0878d83ddb3e8e5ec323ad6682,antirez,antirez@gmail.com,Sat Jan 1 21:39:48 2011 +0100,1293914388,blocking load fixed with the new design,11.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,595.0,33.0,0.002685185185185185,3019.0,373.4137931034483,414.0,Corrective,True,True,"[""4942145d722559698416483c6f31ead9909884be"", ""5d46e370b7da346801e01066e3ed077069d73d3d""]"
9a3730289f6dba0878d83ddb3e8e5ec323ad6682,133cf28ee8ac01f6a830fd55d9af281b7f62e3f3,antirez,antirez@gmail.com,Sat Jan 1 21:44:14 2011 +0100,1293914654,minor comment change of dscache.c,4.0,0.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,914.0,24.0,0.005763888888888889,3020.0,174.49397590361446,415.0,None,False,,
133cf28ee8ac01f6a830fd55d9af281b7f62e3f3,e37efb0d8bb12172990f6c688230bc7515aa6524,antirez,antirez@gmail.com,Sun Jan 2 17:42:04 2011 +0100,1293986524,diskstore race condition fixed,24.0,0.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,918.0,25.0,0.8318287037037037,3021.0,2.2021705857798803,416.0,Corrective,True,,
e37efb0d8bb12172990f6c688230bc7515aa6524,4942145d722559698416483c6f31ead9909884be,antirez,antirez@gmail.com,Sun Jan 2 21:39:17 2011 +0100,1294000757,fixed a bug in diskstore,9.0,60.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER",3.0,2.0,2.0,0.6784070909375675,7.0,617.0,62.0,76.17523533950617,3023.0,1.6211882149159045,70.0,Corrective,True,True,"[""5d46e370b7da346801e01066e3ed077069d73d3d""]"
4942145d722559698416483c6f31ead9909884be,d2033feb5cd94872fc02fe9506d21ccb5ebf286e,antirez,antirez@gmail.com,Sun Jan 2 22:27:26 2011 +0100,1294003646,fixed cache-flush-delay configuration parsing,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1622.0,76.0,1.0357638888888892,3025.0,1.9654710023466309,419.0,Corrective,True,,
d2033feb5cd94872fc02fe9506d21ccb5ebf286e,120b9ba8f82699f1987be17ccde597bcfa9fae46,antirez,antirez@gmail.com,Mon Jan 3 10:17:39 2011 +0100,1294046259,FLUSHALL / FLUSHDB for diskstore implemented,56.0,5.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.9615441840932928,7.0,535.25,140.0,1.584947916666667,3027.5,1.687722252599318,423.0,None,False,True,"[""c15a3887e08d468b96d4313cc19862b5e4b09977"", ""0b305fcfd9fd9131f6a393a19ffec38514f6756c""]"
120b9ba8f82699f1987be17ccde597bcfa9fae46,c15a3887e08d468b96d4313cc19862b5e4b09977,antirez,antirez@gmail.com,Mon Jan 3 10:47:39 2011 +0100,1294048059,diskstore bug fixing and negative cache proper implementation,53.0,26.0,"src/db.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.1148883634852806,7.0,716.0,158.0,0.15249421296296295,3031.5,19.834196437991395,427.0,Corrective,True,True,"[""0b305fcfd9fd9131f6a393a19ffec38514f6756c""]"
c15a3887e08d468b96d4313cc19862b5e4b09977,0b305fcfd9fd9131f6a393a19ffec38514f6756c,antirez,antirez@gmail.com,Mon Jan 3 10:51:45 2011 +0100,1294048305,diskstore FLUSH* fixed,7.0,2.0,"src/diskstore.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,321.0,14.0,0.002847222222222223,3034.0,352.21951219512187,428.0,Corrective,True,,
0b305fcfd9fd9131f6a393a19ffec38514f6756c,d158dc28f6617fd517172e04d3f46ce53d88013e,antirez,antirez@gmail.com,Mon Jan 3 10:58:59 2011 +0100,1294048739,comments on top of dscache.c updated,18.0,63.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,971.0,28.0,0.00787037037037037,3035.0,128.05882352941177,429.0,None,False,,
d158dc28f6617fd517172e04d3f46ce53d88013e,5d46e370b7da346801e01066e3ed077069d73d3d,antirez,antirez@gmail.com,Mon Jan 3 17:18:37 2011 +0100,1294071517,diskstore more fixes,75.0,16.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",5.0,2.0,4.0,1.2598585021655957,7.0,459.6,116.0,9.888953703703702,3038.0,2.2699869039158296,73.0,Corrective,True,True,"[""bafa88c8b700b1648b561e86dce6ceca4c139d46"", ""5ab7bbfc270c7ee9bf1f7ccafcc5c6a148259425"", ""5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca""]"
5d46e370b7da346801e01066e3ed077069d73d3d,9b24d8adbeb2fb4ff663f3b205b73d55425f0d4f,antirez,antirez@gmail.com,Mon Jan 3 17:27:47 2011 +0100,1294072067,serious performance enhancement of diskstore,20.0,4.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,945.0,30.0,0.0063657407407407395,3041.0,158.0909090909091,432.0,None,False,,
9b24d8adbeb2fb4ff663f3b205b73d55425f0d4f,bafa88c8b700b1648b561e86dce6ceca4c139d46,antirez,antirez@gmail.com,Mon Jan 3 17:37:20 2011 +0100,1294072640,stupid bug fixed,1.0,1.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,961.0,31.0,0.006631944444444446,3042.0,151.78534031413608,433.0,Corrective,True,,
bafa88c8b700b1648b561e86dce6ceca4c139d46,5ab7bbfc270c7ee9bf1f7ccafcc5c6a148259425,antirez,antirez@gmail.com,Mon Jan 3 17:40:10 2011 +0100,1294072810,fixed logging level for debugging message,2.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,639.0,38.0,0.014965277777777775,3043.0,67.82134570765662,434.0,Corrective,True,,
5ab7bbfc270c7ee9bf1f7ccafcc5c6a148259425,fad97fbeea6abd1bd6cbc3d74909b129fa1a9156,antirez,antirez@gmail.com,Tue Jan 4 13:20:04 2011 +0100,1294143604,TODO list updated,10.0,0.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,961.0,32.0,0.8213425925925926,3044.0,2.2175187418973,435.0,None,False,,
fad97fbeea6abd1bd6cbc3d74909b129fa1a9156,779fa2af7a4b7eff153bbb2f350a49bab3b82a55,antirez,antirez@gmail.com,Tue Jan 4 18:28:04 2011 +0100,1294162084,rename(2) used in diskstore.c for atomic updates of keys,22.0,7.0,"src/diskstore.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,326.0,15.0,1.316886574074074,3045.0,1.7593668427389941,436.0,None,False,,
779fa2af7a4b7eff153bbb2f350a49bab3b82a55,418d5eaf500935e77e29fdd9335aaca845e6c5cd,antirez,antirez@gmail.com,Tue Jan 4 18:53:09 2011 +0100,1294163589,strictly honour memory limit,17.0,9.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,1.0,1.0,0.3912435636292557,7.0,656.0,49.0,0.12436342592592592,3046.5,31.714556256560645,438.0,None,False,True,"[""c5b6f461321e9b3075eed9f55989ca1d0d18394e""]"
418d5eaf500935e77e29fdd9335aaca845e6c5cd,1190c6cbf7f240691fee0d8fb21a7c19938116be,antirez,antirez@gmail.com,Tue Jan 4 19:03:23 2011 +0100,1294164203,handle end of space on device in a better way,10.0,1.0,"src/diskstore.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,341.0,17.0,0.007106481481481481,3048.0,141.71661237785014,439.0,Perfective,False,,
1190c6cbf7f240691fee0d8fb21a7c19938116be 04a2ade90dd15db2a1e685e2e045b8c0181b9eea,6eaad66373982aa9c1c0ff6b584c542670548d0e,antirez,antirez@gmail.com,Tue Jan 4 19:07:15 2011 +0100,1294164435,Merge branch 'master' into unstable,,,,,,,,,,,,,,,Merge,False,,
6eaad66373982aa9c1c0ff6b584c542670548d0e,a510cb0c03eac3e3222641860f6dd84bb495c431,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jan 5 10:37:23 2011 +0100,1294220243,Remove glueoutputbuf option and broken code,2.0,99.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.7602179817857599,7.0,1024.0,217.0,3.4349045138888887,729.5,1.1104162742398391,252.0,None,False,,
a510cb0c03eac3e3222641860f6dd84bb495c431,a2b33f2f93dda5e812d558f13104ec4cf72ed9fe,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jan 5 10:42:37 2011 +0100,1294220557,Remove glueoutputbuf from redis.conf,0.0,5.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,375.0,55.0,4.679930555555557,732.0,1.2136783843539938,235.0,None,False,,
a2b33f2f93dda5e812d558f13104ec4cf72ed9fe,9b1d738f9609b5a1865b74bdb2e2a1d49c67c9b5,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jan 5 10:50:47 2011 +0100,1294221047,Remove newlines for networking errors,15.0,15.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,347.0,5.0,83.7087962962963,733.0,1.0119461758410715,253.0,Feature Addition,False,,
6eaad66373982aa9c1c0ff6b584c542670548d0e,f771dc23a0bce29d7665f001b4c2dfba3e0dc8a5,antirez,antirez@gmail.com,Wed Jan 5 12:34:14 2011 +0100,1294227254,IO performances greatly improved under high writes load,113.0,80.0,"src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.1454942487821595,7.0,984.5,118.0,0.4090046296296296,3049.5,2.289791819451967,441.0,None,False,True,"[""f1df1739e3f724e787e9a4da0a0f9abb352f65ce"", ""05600eb8a7cb981f1a132bfba7d30f0b81f0a472""]"
f771dc23a0bce29d7665f001b4c2dfba3e0dc8a5 9b1d738f9609b5a1865b74bdb2e2a1d49c67c9b5,51335102acb364be4c0652ff4e91c9a080b1e7e0,antirez,antirez@gmail.com,Wed Jan 5 13:51:37 2011 +0100,1294231897,Merge remote branch 'pietern/writev-unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
51335102acb364be4c0652ff4e91c9a080b1e7e0,249ad25f4f495057d11672f5fbdcb763860b72e1,antirez,antirez@gmail.com,Wed Jan 5 18:38:31 2011 +0100,1294249111,BGSAVE work in progress,97.0,10.0,"src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,utils/whatisdoing.sh,CAS_DELIMITER",5.0,2.0,2.0,1.9289207768660144,7.0,656.6,157.0,1.5104328703703704,3053.0,1.44573043615882,14.0,None,False,True,"[""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b"", ""05600eb8a7cb981f1a132bfba7d30f0b81f0a472"", ""d4a9836f1a4177a188537875374142e09cb4da74""]"
f771dc23a0bce29d7665f001b4c2dfba3e0dc8a5,44898603aa949bb32c522fb62ea676db78cf5a59,antirez,antirez@gmail.com,Fri Jan 7 16:43:36 2011 +0100,1294415016,TODO updated,5.0,6.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,42.0,146.0,18.145717592592593,3056.0,1.055109421542426,1217.0,None,False,,
44898603aa949bb32c522fb62ea676db78cf5a59 249ad25f4f495057d11672f5fbdcb763860b72e1,cb9b35c8cafc703ea5f2754b2961c9a3268c35d5,antirez,antirez@gmail.com,Fri Jan 7 16:43:51 2011 +0100,1294415031,Merge branch 'unstable' of github.com:antirez/redis-private into unstable,,,,,,,,,,,,,,,Merge,False,,
cb9b35c8cafc703ea5f2754b2961c9a3268c35d5,36c17a53b6aece050b79b667fd32064f6eb116c2,antirez,antirez@gmail.com,Fri Jan 7 18:15:14 2011 +0100,1294420514,"source reshaped a bit to play well with a bgsaving thread, still work to do, does not compile.",103.0,54.0,"TODO,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",8.0,2.0,2.0,2.52955245628226,7.0,787.375,444.0,3.0434013310185186,3060.5,3.0172882201880817,452.0,None,False,,
36c17a53b6aece050b79b667fd32064f6eb116c2,5b8ce85378f3b0887db254a20d1ae2cb7ad0ad55,antirez,antirez@gmail.com,Fri Jan 7 19:31:42 2011 +0100,1294425102,more work towards diskstore bgsave,34.0,11.0,"TODO,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,1.961468547940006,7.0,785.0,375.0,0.05310185185185185,3067.5,8.689625108979946,457.0,None,False,,
5b8ce85378f3b0887db254a20d1ae2cb7ad0ad55,f03fe802b79d1d41377016fd9755523dfae102e9,antirez,antirez@gmail.com,Fri Jan 7 23:41:00 2011 +0100,1294440060,diskstore BGSAVE should work now,86.0,25.0,"TODO,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,0.5593063178328133,7.0,830.0,375.0,0.1837453703703704,3073.0,3.5681433262883573,461.0,None,False,,
f03fe802b79d1d41377016fd9755523dfae102e9,43574a72c373d787b2e1d22c45f242a04165996f,antirez,antirez@gmail.com,Fri Jan 7 23:51:31 2011 +0100,1294440691,avoid bgsaving temp files,3.0,1.0,"src/diskstore.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,486.0,22.0,0.00730324074074074,3076.0,137.92551505546749,462.0,None,False,,
43574a72c373d787b2e1d22c45f242a04165996f,cc2750670f1cb2fafde3e7d1a340f6674dab1749,antirez,antirez@gmail.com,Sat Jan 8 00:09:57 2011 +0100,1294441797,blocking SAVE implemented,24.0,2.0,"src/diskstore.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6219041416291193,7.0,820.0,134.0,0.07537808641975309,3078.0,30.131720205514245,465.0,None,False,,
cc2750670f1cb2fafde3e7d1a340f6674dab1749,f1df1739e3f724e787e9a4da0a0f9abb352f65ce,antirez,antirez@gmail.com,Sat Jan 8 01:42:08 2011 +0100,1294447328,resolved a problem with delayed loading of keys,2.0,1.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1026.0,38.0,0.08412037037037037,3080.0,12.887727022564668,466.0,Corrective,True,,
f1df1739e3f724e787e9a4da0a0f9abb352f65ce,b39619d8e73273cd679f560854e34a9a974d9eb4,antirez,antirez@gmail.com,Sat Jan 8 02:06:01 2011 +0100,1294448761,"DEBUG OBJECT fixed with diskstore, force loading",3.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,273.0,13.0,4.658587962962963,3081.0,1.2146573184729517,467.0,Corrective,True,,
b39619d8e73273cd679f560854e34a9a974d9eb4,7cca366bdf39c071003afca0611c2dfae2916aef,antirez,antirez@gmail.com,Sat Jan 8 02:07:48 2011 +0100,1294448868,TODO updated,0.0,2.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,47.0,150.0,0.10194444444444443,3082.0,10.809264305177114,1221.0,None,False,,
7cca366bdf39c071003afca0611c2dfae2916aef,67a1810b324c9f140891d4aa5b80133b66cf9a70,antirez,antirez@gmail.com,Sun Jan 9 15:56:50 2011 +0100,1294585010,allocation stats in INFO,39.0,12.0,"src/redis.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.1158467256759763,7.0,651.3333333333334,91.0,46.03407407407408,3084.0,1.2058722776880015,470.0,None,False,True,"[""5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca"", ""8fd1031b10dec256d5b365b278815f9d8444e601""]"
67a1810b324c9f140891d4aa5b80133b66cf9a70,5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca,antirez,antirez@gmail.com,Sun Jan 9 16:49:52 2011 +0100,1294588192,initial fix of the test suite to run both in in-memory and diskstore mode,147.0,25.0,"src/zmalloc.c,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/support/tmpfile.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",5.0,2.0,4.0,0.8227314208633871,7.0,213.2,61.0,51.58723611111111,3088.0,6.482026886541743,77.0,Corrective,True,True,"[""69bfffb4a7aec38e5079ec10b0acc8629c1ee82b""]"
5e1d2d30f7b96c0aa808f8c6f9b267880c6097ca,69bfffb4a7aec38e5079ec10b0acc8629c1ee82b,antirez,antirez@gmail.com,Sun Jan 9 18:25:34 2011 +0100,1294593934,"test adapted to run with diskstore, and a few bugs fixed",39.0,14.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",7.0,2.0,3.0,2.4734593672675187,7.0,503.71428571428567,177.0,5.042966269841268,3094.0,1.1891255524098878,79.0,Corrective,True,,
69bfffb4a7aec38e5079ec10b0acc8629c1ee82b,0a0f83ab2c02ebf1a9029a473e23ef72d037cac0,antirez,antirez@gmail.com,Sun Jan 9 19:01:44 2011 +0100,1294596104,DEBUG FLUSHCACHE needs to wait that everything was synched on disk,3.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,287.0,15.0,0.02511574074074074,3098.0,40.815668202764975,477.0,Corrective,True,,
0a0f83ab2c02ebf1a9029a473e23ef72d037cac0,a5062bbab0a1619523a9562cec2256de16149c29,antirez,antirez@gmail.com,Sun Jan 9 19:25:34 2011 +0100,1294597534,"fixed bgsave_in_progress in INFO when BGSAVEing with diskstore enabled, don't DEBUG FLUSHCACHE when bgsave is in progress.",13.0,10.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.3603059777020794,7.0,603.0,139.0,0.06120949074074074,3100.5,19.90441060749205,81.0,Corrective,True,,
a5062bbab0a1619523a9562cec2256de16149c29,322ea972fe945a8cf439e9e3577de624f3e3e10b,antirez,antirez@gmail.com,Sun Jan 9 19:42:56 2011 +0100,1294598576,run both inmemory and diskstore tests.,40.0,39.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8354065254460504,7.0,233.0,43.0,0.012060185185185186,3103.5,63.188099808061416,83.0,Preventative,False,,
322ea972fe945a8cf439e9e3577de624f3e3e10b,69cb5462234ae2c263d8a11e96a74a6a7ce3f62a,antirez,antirez@gmail.com,Sun Jan 9 22:17:08 2011 +0100,1294607828,minor aesthetic change in test suite messages,1.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,225.0,33.0,0.10708333333333334,3105.0,10.33852140077821,84.0,Preventative,False,,
69cb5462234ae2c263d8a11e96a74a6a7ce3f62a,2d9fdb9d84a4113298099c077e5172bded6d3a27,antirez,antirez@gmail.com,Mon Jan 10 21:45:08 2011 +0100,1294692308,TODO modified,11.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,45.0,151.0,2.8175925925925926,3106.0,1.354912914886625,1222.0,None,False,,
2d9fdb9d84a4113298099c077e5172bded6d3a27,5b831607e70aebb338d60ba01aacdb02cd66272d,antirez,antirez@gmail.com,Fri Jan 14 00:19:19 2011 +0100,1294960759,redisServer structure fields reordered for clarity,9.0,7.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1010.0,90.0,6.00650462962963,3107.0,1.166486178178749,480.0,None,False,True,"[""c23c657cdd8696c66295962947b85c793c5d7b93""]"
5b831607e70aebb338d60ba01aacdb02cd66272d,3a73be752476f44dfb099863ac9424c2f27f2be0,antirez,antirez@gmail.com,Fri Jan 14 09:53:57 2011 +0100,1294995237,"master-slave replication fixed, it was not listing any key using KEYS command in the slave.",2.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,617.0,41.0,4.644710648148148,3108.0,1.2152986646000652,481.0,Corrective,True,,
3a73be752476f44dfb099863ac9424c2f27f2be0,7a1fd61e3d3d7572ff7825f337206c19c992a83b,antirez,antirez@gmail.com,Fri Jan 14 10:20:02 2011 +0100,1294996802,implemented two new INFO fields showing the size of clients max input and output buffers.,26.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.07273728622321,7.0,1163.3333333333333,211.0,4.6754243827160495,3110.0,1.0853450106606999,484.0,Feature Addition,False,,
7a1fd61e3d3d7572ff7825f337206c19c992a83b,52dc87bb18e81396e5260d970e9dc7ed25c7e0ba,antirez,antirez@gmail.com,Sat Jan 15 22:24:22 2011 +0100,1295126662,lame typo causing bad hashes memory characteristic,2.0,2.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1014.0,92.0,1.5030092592592592,3112.0,1.665331895887879,485.0,None,False,,
52dc87bb18e81396e5260d970e9dc7ed25c7e0ba,b8cfcea4243ef22537bdfefe73fd6c54fc41ee70,antirez,antirez@gmail.com,Sat Jan 15 22:31:07 2011 +0100,1295127067,default hash encoding settings also fixed in redis.conf,2.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,370.0,56.0,10.492013888888893,3113.0,1.0953105867557995,1223.0,Corrective,True,,
b8cfcea4243ef22537bdfefe73fd6c54fc41ee70,3bcffcbe5bc0acde311d0fb311f893400cd52e0e,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 17 10:03:21 2011 +0100,1295255001,Remove client from list of unblocked clients when it is free'd,12.0,1.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",4.0,1.0,1.0,1.669180336866731,7.0,1118.75,240.0,6.515497685185185,735.5,1.168579153022082,257.0,None,False,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""e4025ea9262a507d6e63021a081e8caaeb38fbd6""]"
3bcffcbe5bc0acde311d0fb311f893400cd52e0e,a4fdc3c021108438cb651c517aa5efc7358e7eec,antirez,antirez@gmail.com,Mon Jan 17 12:36:37 2011 +0100,1295264197,a better release note for Redis unstable provided,8.0,31.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,38.0,6.0,32.803888888888885,3114.0,1.0304841905600624,1224.0,Perfective,False,,
3bcffcbe5bc0acde311d0fb311f893400cd52e0e,c4df22afb6756446d35bb7ed3fc4a0bc42086056,antirez,antirez@gmail.com,Thu Jan 20 10:59:25 2011 +0100,1295517565,Fixed compilation on FreeBSD,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,278.0,8.0,10.756631944444445,3115.0,1.0929659028183518,486.0,Corrective,True,,
c4df22afb6756446d35bb7ed3fc4a0bc42086056 a4fdc3c021108438cb651c517aa5efc7358e7eec,f25d5b5c9c536bb4bb9febe6fa4fd57d7c7de581,antirez,antirez@gmail.com,Thu Jan 20 11:00:25 2011 +0100,1295517625,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
f25d5b5c9c536bb4bb9febe6fa4fd57d7c7de581,89a1433e69db5f7c996484672437616a16a6fe0a,antirez,antirez@gmail.com,Thu Jan 20 13:18:23 2011 +0100,1295525903,Fixed issue #435 and at the same time introduced explicit ping in the master-slave channel that will detect a blocked master or a broken even if apparently connected TCP link.,48.0,4.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.4536495732030351,7.0,1006.6666666666664,137.0,14.363167438271606,3117.0,1.1672030974581116,489.0,Corrective,True,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""55ba77270363400625f4563788d8f842408389a2""]"
89a1433e69db5f7c996484672437616a16a6fe0a,d9cb288c9ededc83c59e1f46f0ae738a0fd3edd2,antirez,antirez@gmail.com,Sun Jan 23 11:46:34 2011 +0100,1295779594,profiling information in INFO,141.0,121.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.03615786754989353,7.0,1339.5,180.0,4.503958333333333,3119.5,1.2257926291783865,491.0,None,False,,
d9cb288c9ededc83c59e1f46f0ae738a0fd3edd2,1b085c9f4820693a4c15e6689a9788308da516a7,antirez,antirez@gmail.com,Sun Jan 23 16:41:07 2011 +0100,1295797267,INFO output refactoring. Now INFO section will report only the specified section,240.0,167.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1682.0,87.0,0.2045486111111111,3121.0,5.888813444236972,492.0,None,False,True,"[""d83eda48e9566a438048c10add8448e0fe65b534"", ""fa5af017d95dfd56b92ebe14064f995b19e4907f"", ""784b93087c622999e225735c0c76d50241941022"", ""c49378fe3e6f8900e753ff60a1b1f59e2e2c8755"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
1b085c9f4820693a4c15e6689a9788308da516a7,0d808ef27532204d4176c16956eb4cef7f452ae2,antirez,antirez@gmail.com,Sun Jan 23 22:14:15 2011 +0100,1295817255,"Now INFO outputs the INFO default output if no argument is passed. Also added counts of calls for every command, thanks to an idea by Mike Shaver",141.0,127.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.06345811641554695,7.0,1386.0,183.0,0.33361689814814816,3122.5,3.9106592995329534,494.0,Feature Addition,False,True,"[""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""c49378fe3e6f8900e753ff60a1b1f59e2e2c8755""]"
0d808ef27532204d4176c16956eb4cef7f452ae2,9b45592c699d6ca9445259e18839ea535495e23b,antirez,antirez@gmail.com,Mon Jan 24 10:05:42 2011 +0100,1295859942,"portability fix in redis benchmark, using zu format specified with size_t instead of lu",1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,530.0,17.0,31.946550925925933,3124.0,1.0313022836899886,495.0,Corrective,True,,
9b45592c699d6ca9445259e18839ea535495e23b,d7ed7fd2fcd29fbba605fdd06b9498ffd85c092f,antirez,antirez@gmail.com,Mon Jan 24 10:56:06 2011 +0100,1295862966,"INFO commandstats section reset with config resetstat, a new microseconds per call field, and a few other minor things",24.0,8.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.3997900666170139,7.0,1117.3333333333333,207.0,6.6903742283950605,3126.0,1.0511966998893238,498.0,Feature Addition,False,,
d7ed7fd2fcd29fbba605fdd06b9498ffd85c092f,cc9f0eee712e520ddfd1eb5540a12ef1f8ef4bec,antirez,antirez@gmail.com,Wed Jan 26 10:42:32 2011 +0100,1296034952,TODO list updated,4.0,5.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,56.0,152.0,15.539861111111113,3128.0,1.06435063948448,1225.0,None,False,,
cc9f0eee712e520ddfd1eb5540a12ef1f8ef4bec,be86082be4c79922906a1261228a8e7df4279a86,antirez,antirez@gmail.com,Thu Jan 27 10:27:25 2011 +0100,1296120445,"Fixed a theoretical non exploitable security bug reported by @chrisrohlf. In theory if we undefine SDS_ABORT_ON_OOM from sds.c AND modify zmalloc.c in order to don't quit on out of memory (but this would break every other part of Redis), on out of memory there is a possible heap overflow.",5.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,580.0,9.0,47.92440972222222,3129.0,1.0208661933615075,499.0,Corrective,True,,
be86082be4c79922906a1261228a8e7df4279a86,452229b6fb0251f82d9caa5388db1160f10bc2d5,antirez,antirez@gmail.com,Thu Jan 27 16:52:37 2011 +0100,1296143557,"propagate key eviction to slaves and AOF, like for expires, so that replicas and AOFs are always consistent even in maxmemory mode.",1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1783.0,90.0,3.2475810185185185,3130.0,1.3079214942745847,500.0,None,False,,
452229b6fb0251f82d9caa5388db1160f10bc2d5,d5870d7ac3c4618bca373137559cb7c03c66e17d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 31 16:49:56 2011 +0100,1296488996,Reply with single null bulk for unsuccesful BRPOPLPUSH,1.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,960.0,26.0,14.282349537037033,738.0,1.0700164911527197,258.0,None,False,,
d5870d7ac3c4618bca373137559cb7c03c66e17d,554a5dd2fc708d0985fecf69b87e167707691c32,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 31 16:50:17 2011 +0100,1296489017,Clarify comment,1.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,960.0,27.0,0.0002430555555555556,739.0,4115.285714285715,259.0,None,False,,
452229b6fb0251f82d9caa5388db1160f10bc2d5,68d6345ddf6b0088e25d5f3b5ee93ad51833d5d1,antirez,antirez@gmail.com,Mon Feb 7 12:52:01 2011 +0100,1297079521,"If port zero is specified, Redis will not listen for TCP connections",5.0,1.0,"redis.conf,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,2.0,2.0,0.6500224216483541,7.0,1077.0,148.0,16.715381944444445,3131.5,1.0370822854601869,501.0,None,False,True,"[""a53b4c2409d4c2bff50060e893932b28f2f50f24""]"
68d6345ddf6b0088e25d5f3b5ee93ad51833d5d1,a53b4c2409d4c2bff50060e893932b28f2f50f24,antirez,antirez@gmail.com,Mon Feb 7 13:43:29 2011 +0100,1297082609,"Fix for the previous port 0 patch, thanks to Pieter for noticing the error",5.0,5.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1787.0,92.0,0.03574074074074074,3133.0,28.979274611398964,502.0,Corrective,True,,
a53b4c2409d4c2bff50060e893932b28f2f50f24 554a5dd2fc708d0985fecf69b87e167707691c32,a8cc969cd45dade10526349d8ea64b4852269e36,antirez,antirez@gmail.com,Mon Feb 7 15:28:01 2011 +0100,1297088881,Merge remote branch 'pietern/unstable-brpoplpush' into unstable,,,,,,,,,,,,,,,Merge,False,,
a8cc969cd45dade10526349d8ea64b4852269e36,9c104c6886c7a781b9c092775bfb20fbea1bc903,antirez,antirez@gmail.com,Wed Feb 9 10:10:35 2011 +0100,1297242635,introduced a new logging function for big messages,20.0,8.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1787.0,93.0,1.852152777777777,3134.0,1.5399122642570582,503.0,Feature Addition,False,True,"[""fa5af017d95dfd56b92ebe14064f995b19e4907f"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
9c104c6886c7a781b9c092775bfb20fbea1bc903,05600eb8a7cb981f1a132bfba7d30f0b81f0a472,antirez,antirez@gmail.com,Fri Feb 11 11:16:15 2011 +0100,1297419375,"fixed two diskstore issues, a quasi-deadlock creating problems with I/O speed and a race condition among threads",37.0,21.0,"src/dict.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.5171305720771406,7.0,845.4,192.0,43.57501157407407,3137.0,1.0066351605677957,508.0,Corrective,True,True,"[""91e6b4d74ec0d8905bd22d46fa7b9e71ce8848c4""]"
05600eb8a7cb981f1a132bfba7d30f0b81f0a472,21cda08b3bfa4a38a30e47e60139049b87bfb360,antirez,antirez@gmail.com,Mon Feb 14 02:51:27 2011 +0100,1297648287,CONFIG GET/SET dir implemented,14.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,567.0,23.0,20.6634375,3140.0,1.0483946584395747,509.0,None,False,True,"[""bb831c313c32a64446484e66c275aaba55d2d818""]"
21cda08b3bfa4a38a30e47e60139049b87bfb360,30318c1ddd2e6509562800bf8863af38e951dec8,antirez,antirez@gmail.com,Wed Feb 16 12:41:40 2011 +0100,1297856500,SPOP replication/AOF patch ported to unstable branch,15.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,447.0,13.0,48.70969907407408,3141.0,1.0205297921976335,510.0,None,False,True,"[""c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb""]"
30318c1ddd2e6509562800bf8863af38e951dec8,465b4189e6094170b3e7a025f665ce62e572e7b0,antirez,antirez@gmail.com,Thu Feb 17 12:20:59 2011 +0100,1297941659,"CONFIG SET/GET for all the special encoding parameters of sets, lists, hashes",40.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,581.0,24.0,3.3955092592592586,3142.0,1.2945066332165305,511.0,None,False,,
465b4189e6094170b3e7a025f665ce62e572e7b0,09d2abdca2a4300fabe1c432cab43c4f3869fb1d,antirez,antirez@gmail.com,Mon Feb 21 17:41:25 2011 +0100,1298306485,check return value of getcwd(),5.0,3.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,621.0,25.0,4.222523148148148,3143.0,1.2368252262722503,512.0,None,False,True,"[""bb831c313c32a64446484e66c275aaba55d2d818""]"
09d2abdca2a4300fabe1c432cab43c4f3869fb1d,f96a9f82d813c9172d61fdabdc02368a42fb283b,antirez,antirez@gmail.com,Mon Feb 21 17:50:54 2011 +0100,1298307054,"suppress a Linux warning, for 2.2 sake",3.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,554.0,14.0,32.18924768518519,3144.0,1.0310662743590693,513.0,None,False,True,"[""55ba77270363400625f4563788d8f842408389a2""]"
f96a9f82d813c9172d61fdabdc02368a42fb283b,29920dceb8e2b9806b2dcaf1dd134081e596633d,antirez,antirez@gmail.com,Tue Feb 22 00:03:03 2011 +0100,1298329383,conflict resolved in cherry pick,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1799.0,94.0,12.578101851851851,3145.0,1.0795032519038452,514.0,None,False,True,"[""a48c8d873bc2a49f66ab398ebed51dc45764ca17""]"
29920dceb8e2b9806b2dcaf1dd134081e596633d,df50d707f3a361327e55dce83fb342dc08390c69,Paul Gideon Dann,pdgiddie@gmail.com,Tue Feb 22 10:49:17 2011 +0000,1298371757,"Allow port to be 0 in configuration, in order to allow disabling of TCP.",1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,623.0,26.0,0.755462962962963,0.0,0.0,0.0,None,False,,
df50d707f3a361327e55dce83fb342dc08390c69,4a67d194e9437e48e076d15c746414d3d14faa35,antirez,antirez@gmail.com,Tue Feb 22 16:40:24 2011 +0100,1298389224,fixed color support for test suite. Now colors are shown as long as there is xterm somewhere inside the TERM env var,7.0,2.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,185.0,18.0,69.23356481481481,3146.0,1.0144438611918192,85.0,Corrective,True,,
4a67d194e9437e48e076d15c746414d3d14faa35,802fd01b7c441b0cc0db36b02cde9edf7836e6a0,antirez,antirez@gmail.com,Tue Feb 22 17:40:33 2011 +0100,1298392833,linenoise updated,13.0,2.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,598.0,5.0,73.92939814814815,3147.0,1.0135264187866928,5.0,None,False,,
802fd01b7c441b0cc0db36b02cde9edf7836e6a0,bf45f266b382860f849d2cf7d53c564a77aea98c,antirez,antirez@gmail.com,Tue Feb 22 18:22:00 2011 +0100,1298395320,fixed client-libraries/README to reflect the new site path instead of google code,1.0,1.0,"client-libraries/README,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,11.0,9.0,476.2616550925926,3148.0,1.002099686147955,358.0,Corrective,True,,
bf45f266b382860f849d2cf7d53c564a77aea98c,6c682e559cd250049ce483d60af19a42d0177d72,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Feb 23 09:39:29 2011 +0100,1298450369,Restore argc/argv in EXEC after command is executed,11.0,0.0,"src/multi.c,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9456603046006402,7.0,253.0,16.0,78.25418402777778,740.5,1.0076618975429394,145.0,None,False,,
6c682e559cd250049ce483d60af19a42d0177d72,900ab8fc7a38a1e2b94689f319df2c8e2a47f1e9,antirez,antirez@gmail.com,Fri Feb 25 10:59:57 2011 +0100,1298627997,more disk store fields in INFO,11.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1800.0,95.0,3.4561805555555565,3149.0,1.2893367357190215,515.0,None,False,,
900ab8fc7a38a1e2b94689f319df2c8e2a47f1e9,419e1cca74102440d5ce174fbbf36d81a9b8956a,antirez,antirez@gmail.com,Fri Feb 25 19:11:25 2011 +0100,1298657485,less delays in diskstore when there are many writes. more work to do.,12.0,3.0,"src/dscache.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,7.0,1030.5,139.0,14.329976851851852,3150.5,1.0523378375103989,517.0,None,False,True,"[""8b108ed3075f56d5d261e41e03c8e1fcfd764451"", ""d9fac6c07a08c577d70f529a612ae87e101ebbdb""]"
419e1cca74102440d5ce174fbbf36d81a9b8956a,2cc993655f2c7da5f893e6f628f6c34f6204c3d3,antirez,antirez@gmail.com,Mon Feb 28 09:56:48 2011 +0100,1298883408,save zipmap encoded hashes as blobs. Work in progress.,35.0,13.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER,src/zipmap.h,CAS_DELIMITER",4.0,1.0,1.0,1.1790342518152637,7.0,621.25,126.0,97.23899016203707,3153.5,1.0299960221284912,521.0,None,False,,
2cc993655f2c7da5f893e6f628f6c34f6204c3d3,d4fb9f4144e72a7918e477c22a6c2a75d9c3c30d,antirez,antirez@gmail.com,Mon Feb 28 14:48:49 2011 +0100,1298900929,encoded types API to get blob length,14.0,11.0,"src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",5.0,1.0,1.0,1.8552419173638843,7.0,366.0,20.0,96.2654837962963,3158.0,1.005397999731274,526.0,None,False,True,"[""6136a16bd1fe4a88ada02e31e597b805d8a86b55""]"
d4fb9f4144e72a7918e477c22a6c2a75d9c3c30d,1187b0a56e4458d49250c1121d53275b8f837694,antirez,antirez@gmail.com,Mon Feb 28 15:13:49 2011 +0100,1298902429,fix for zipmap raw saving in unstable branch,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,968.0,25.0,0.22015046296296287,3161.0,5.542347931233898,527.0,Corrective,True,,
1187b0a56e4458d49250c1121d53275b8f837694,4d60dea85394c29d47e28709e02b974b448b0af2,antirez,antirez@gmail.com,Mon Feb 28 15:31:54 2011 +0100,1298903514,RDB/AOF loading times logged with millisecond precision,4.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1810.0,96.0,3.1888541666666668,3162.0,1.3135922647241367,528.0,None,False,True,"[""6d61e5bf5b3bdbdfa3032b2009120c3cceb64607""]"
4d60dea85394c29d47e28709e02b974b448b0af2,f8956ed6d88fde242de8676dd615019b2c7e734e,antirez,antirez@gmail.com,Mon Feb 28 16:55:34 2011 +0100,1298908534,convert the zipmap into hash in rdb loading if the zipmap has too many elements,6.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,968.0,26.0,0.07065972222222222,3163.0,15.152334152334152,529.0,None,False,,
f8956ed6d88fde242de8676dd615019b2c7e734e,9fa7beb515902ec0dd08b90f443a3d9c0734ea04,antirez,antirez@gmail.com,Mon Feb 28 17:06:09 2011 +0100,1298909169,save ziplist encoded type as a different type id. Done as separated commit since this is the part that will not merge cleanly in 2.2,2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,973.0,27.0,0.007349537037037037,3164.0,137.06299212598424,530.0,Non Functional,False,True,"[""0a04b5f5a0caf3c59afc46aea7b1f6a9beea35df""]"
9fa7beb515902ec0dd08b90f443a3d9c0734ea04,9ad853ccde374ed371efee3b1654c6ebb39e06fa,antirez,antirez@gmail.com,Mon Feb 28 17:06:31 2011 +0100,1298909191,added new RDB codes for ziplist encoded lists and intset encodeed sets,2.0,0.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1023.0,100.0,0.29841435185185183,3165.0,4.35104526238219,531.0,Feature Addition,False,,
9ad853ccde374ed371efee3b1654c6ebb39e06fa,0a04b5f5a0caf3c59afc46aea7b1f6a9beea35df,antirez,antirez@gmail.com,Mon Feb 28 17:36:12 2011 +0100,1298910972,define name typo fixed,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,975.0,28.0,0.02086805555555556,3166.0,48.920133111480865,532.0,Corrective,True,,
0a04b5f5a0caf3c59afc46aea7b1f6a9beea35df,26117e84f01022b261452d6cae54616d08a31074,antirez,antirez@gmail.com,Mon Feb 28 17:53:47 2011 +0100,1298912027,direct saving of specially encoded types implemented for lists and sets too,38.0,36.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,975.0,29.0,0.01221064814814815,3167.0,82.8957345971564,533.0,None,False,,
26117e84f01022b261452d6cae54616d08a31074,1213abe477e7eefcb1d1694f7ba99b8eb3016e99,antirez,antirez@gmail.com,Mon Feb 28 17:55:05 2011 +0100,1298912105,fix type in rdbSaveKeyValuePair() when saving an intset. Don't merge this commit into 2.2 as will not apply cleanly.,2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,977.0,30.0,0.0009027777777777775,3168.0,1108.6923076923078,534.0,Corrective,True,,
1213abe477e7eefcb1d1694f7ba99b8eb3016e99,be14f38de642ee1082aa991b6b1e94ea6ae9dcdc,antirez,antirez@gmail.com,Tue Mar 1 15:20:35 2011 +0100,1298989235,Redis manifesto added,20.0,0.0,"src/MANIFESTO,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,3169.0,0.0,535.0,Feature Addition,False,,
be14f38de642ee1082aa991b6b1e94ea6ae9dcdc,8b108ed3075f56d5d261e41e03c8e1fcfd764451,antirez,antirez@gmail.com,Fri Mar 4 15:45:38 2011 +0100,1299249938,debugging message moved from REDIS_WARING to REDIS_DEBUG,1.0,1.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1049.0,42.0,6.857094907407408,3170.0,1.1458343531048032,536.0,Corrective,True,,
8b108ed3075f56d5d261e41e03c8e1fcfd764451,15db4aa00636e8ec60767fedec364a7d66ccb26c,antirez,antirez@gmail.com,Fri Mar 4 15:49:01 2011 +0100,1299250141,TTL command fixed to work reliably with diskstore,1.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,617.0,42.0,49.246574074074076,3171.0,1.0203059810515114,537.0,Corrective,True,,
15db4aa00636e8ec60767fedec364a7d66ccb26c,4aec2ec8c4226f3894418c33f865e14866f2b283,antirez,antirez@gmail.com,Fri Mar 4 16:13:54 2011 +0100,1299251634,AOF file descriptor leak fixed,3.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,646.0,22.0,53.908564814814824,3172.0,1.0185499280760892,538.0,Corrective,True,,
4aec2ec8c4226f3894418c33f865e14866f2b283,0b537972f48a432cd5799d9b516d4526ea1ffef7,antirez,antirez@gmail.com,Fri Mar 4 16:22:50 2011 +0100,1299252170,Fixed return value of GETRANGE / SUBSTR,2.0,2.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,437.0,27.0,64.86328703703704,3173.0,1.0154170416838264,539.0,Corrective,True,,
0b537972f48a432cd5799d9b516d4526ea1ffef7,d9fac6c07a08c577d70f529a612ae87e101ebbdb,antirez,antirez@gmail.com,Fri Mar 4 18:10:43 2011 +0100,1299258643,possible fix for a failed assertion introduced with the latest diskstore speedup fix,7.0,3.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1049.0,43.0,0.1007523148148148,3174.0,10.925330269959794,540.0,Corrective,True,,
d9fac6c07a08c577d70f529a612ae87e101ebbdb,633a941028ad60bfad1bdeee95edaeba6109304f,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 6 17:49:22 2011 +0100,1299430162,Save RDB on SIGTERM (see issue #471),22.0,26.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2498822928331855,7.0,1417.5,198.0,6.062609953703704,742.5,1.1232645892958908,262.0,None,False,True,"[""d4d208595c78d78196c926c55799bc81ae06f230""]"
d9fac6c07a08c577d70f529a612ae87e101ebbdb,ca36b4ab31be1a1fea24f422028c07c6eeb21120,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 6 20:00:08 2011 +0100,1299438008,Only save history when stdin is a tty (issue #465),17.0,13.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,732.0,41.0,73.31541666666666,744.0,1.013639696062106,263.0,None,False,True,"[""3ab832193cb58a876eba9c62df3fc0ea3814453a""]"
ca36b4ab31be1a1fea24f422028c07c6eeb21120,33753a732a492cfb2cabb0875b33728d62dd1bbe,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 6 20:13:01 2011 +0100,1299438781,Minor memory leak in redis-cli (issue #464),5.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,736.0,42.0,0.008946759259259258,745.0,112.77231565329883,264.0,None,False,,
33753a732a492cfb2cabb0875b33728d62dd1bbe,96e34b3ce11e4cda35b9127b6a75756fb42f12ba,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 6 20:46:40 2011 +0100,1299440800,Store SELECTed database for reconnect (issue #468),5.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,740.0,43.0,0.023368055555555555,746.0,43.79346210995543,265.0,None,False,,
96e34b3ce11e4cda35b9127b6a75756fb42f12ba,3f4eef215b321a4e7c4f968cfc614ff51a5a576e,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 6 21:14:40 2011 +0100,1299442480,Show database number in cli prompt when non-zero,13.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,742.0,44.0,0.019444444444444445,747.0,52.42857142857143,266.0,None,False,True,"[""a5bd08487ff22156cbaae9286ab8820172b35df7"", ""9dfd9d14120c7beaa2369a70ea77bb28aeb4ea07""]"
3f4eef215b321a4e7c4f968cfc614ff51a5a576e 633a941028ad60bfad1bdeee95edaeba6109304f,c2f816b4233355b6b8426572bd6e2c024fa24193,antirez,antirez@gmail.com,Mon Mar 7 12:22:00 2011 +0100,1299496920,Merge remote branch 'pietern/unstable-sigs' into unstable,,,,,,,,,,,,,,,Merge,False,,
c2f816b4233355b6b8426572bd6e2c024fa24193,a30047736806e54af0459a2c41767bf0ebc6a572,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Dec 9 10:37:35 2010 +0100,1291887455,Undo rename of function names where something went wrong,5.0,5.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1059.0,22.0,-20.376469907407404,748.0,0.9509237858891116,267.0,Corrective,True,,
a30047736806e54af0459a2c41767bf0ebc6a572,22b9bf15949933b351525ae658dc32e40e5784ab,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Dec 7 23:21:05 2010 +0100,1291760465,"Move logic concerned with zset rangesThis also optimizes ZREVRANGEBYSCORE for pathological cases where ansorted set contains many elements with the same score. Previously,nit would traverse the list from back to front in such a case.n",110.0,69.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4344152792772976,7.0,819.5,36.0,26.81466435185185,749.5,0.6691389902567589,146.0,None,False,,
22b9bf15949933b351525ae658dc32e40e5784ab,df278b8b0b4bd54b83840d4a151e538c60dc92e9,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Jan 13 16:06:03 2011 +0100,1294931163,Compiler should decide on inlining,3.0,3.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1084.0,24.0,36.697893518518526,751.0,1.0272495204525944,269.0,None,False,,
df278b8b0b4bd54b83840d4a151e538c60dc92e9,8e1b327706ca39f9efb8967653b365ca81a52425,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 17 11:10:30 2011 +0100,1295259030,Test for ranges where min > max,8.0,0.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,7.0,840.0,39.0,22.143703703703704,752.5,1.1430506353962224,147.0,Preventative,False,,
8e1b327706ca39f9efb8967653b365ca81a52425,45290ad9bb9c535d6447852327ceb458573afff6,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Feb 10 11:49:59 2011 +0100,1297334999,Rename zset range functions,9.0,9.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1088.0,26.0,24.027418981481482,754.0,1.0416191185899208,271.0,None,False,,
c2f816b4233355b6b8426572bd6e2c024fa24193,c5b6f461321e9b3075eed9f55989ca1d0d18394e,antirez,antirez@gmail.com,Tue Mar 8 15:03:51 2011 +0100,1299593031,comment typo fixed,1.0,1.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1053.0,44.0,3.8702314814814813,3175.0,1.2583824778401138,541.0,Corrective,True,,
c5b6f461321e9b3075eed9f55989ca1d0d18394e,e09b51869b355644e4f481634729ed2903acad97,antirez,antirez@gmail.com,Tue Mar 8 15:10:20 2011 +0100,1299593420,useless function removed,2.0,7.0,"TODO,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,2.0,2.0,0.7642045065086203,7.0,554.0,198.0,20.59523726851852,3176.5,1.0242787845877757,542.0,None,False,,
e09b51869b355644e4f481634729ed2903acad97,3a21cb99e51403eb0469803abc6f894f468948f1,antirez,antirez@gmail.com,Tue Mar 8 15:55:34 2011 +0100,1299596134,same final call of two if branches moved outside,1.0,2.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1046.0,46.0,0.03141203703703704,3178.0,32.834929992630805,543.0,None,False,,
45290ad9bb9c535d6447852327ceb458573afff6,672b0a1b25023fd6df826af6c7570e23d3ac3443,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 12:30:01 2011 +0100,1299583801,Fast conversion of double when representable as long long,41.0,0.0,"src/redis.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER",2.0,1.0,1.0,0.1654270339962668,7.0,634.0,104.0,97.7790335648148,755.5,1.283735392338635,273.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
672b0a1b25023fd6df826af6c7570e23d3ac3443,9e7cee0ed01246e898eac500330c6a16e9dbfddb,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 16:08:52 2011 +0100,1299596932,Add function to create ziplist-backed sorted set,8.0,1.0,"src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,7.0,712.5,124.0,32.96242476851852,757.5,1.0151863119941755,275.0,Feature Addition,False,,
9e7cee0ed01246e898eac500330c6a16e9dbfddb,21c5b508a48270257567ea223fb0766553501303,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 16:44:22 2011 +0100,1299599062,Initial work for ziplist backed sorted sets,244.0,70.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1088.0,27.0,26.20443287037037,759.0,1.0381614822555734,276.0,Feature Addition,False,,
21c5b508a48270257567ea223fb0766553501303,3ca7532a2d20ea88109cd4f0c3c527c37e3fe52f,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 16:51:41 2011 +0100,1299599501,Don't encode element argument when dealing with ziplist,12.0,10.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1262.0,28.0,0.0050810185185185186,760.0,197.81093394077442,277.0,None,False,,
3a21cb99e51403eb0469803abc6f894f468948f1,e270a7fa58d242d3cef9ebfe4724719b92afe7d6,antirez,antirez@gmail.com,Tue Mar 8 16:52:39 2011 +0100,1299599559,removed useless call,0.0,2.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1045.0,47.0,0.039641203703703706,3179.0,26.226277372262768,544.0,None,False,,
3ca7532a2d20ea88109cd4f0c3c527c37e3fe52f,0b10e1044496699585b401196dd86e19a9f87cc4,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 17:11:15 2011 +0100,1299600675,Support dual encoding in ZREM,43.0,23.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1264.0,29.0,0.013587962962962965,761.0,74.59454855195911,278.0,None,False,,
0b10e1044496699585b401196dd86e19a9f87cc4,8218db3dae220409f239a5a0adb47d106b178bf9,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 21:36:43 2011 +0100,1299616603,Little less obfuscation,8.0,11.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1284.0,30.0,0.18435185185185185,762.0,6.424409844299348,279.0,None,False,,
8218db3dae220409f239a5a0adb47d106b178bf9,9f9b60f974cb57923c88a585a75db4b82711288b,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 22:14:46 2011 +0100,1299618886,Typo,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1281.0,31.0,0.02642361111111111,763.0,38.844940867279895,280.0,None,False,,
9f9b60f974cb57923c88a585a75db4b82711288b,4a14dbbac2eb6148c50212222beb2639ecbc8760,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 22:23:56 2011 +0100,1299619436,Look up and remove elements by range,126.0,10.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1281.0,32.0,0.0063657407407407395,764.0,158.0909090909091,281.0,None,False,True,"[""d956d809acb848aec0f6524e1337d274a635980d""]"
4a14dbbac2eb6148c50212222beb2639ecbc8760,0f23eb3b10402bd7166c09583333c29aa3c3f55f,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 8 23:56:59 2011 +0100,1299625019,Properly free encoded sorted set,14.0,5.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,405.0,22.0,0.3250810185185185,765.0,4.076156228860326,282.0,None,False,,
0f23eb3b10402bd7166c09583333c29aa3c3f55f,5d1b4fb6983f5acd9cfb6ee5f5715547688448d2,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 00:00:19 2011 +0100,1299625219,Support dual encoding for ZRANGE,96.0,29.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1397.0,33.0,0.06693287037037036,766.0,15.940342382846275,283.0,None,False,,
5d1b4fb6983f5acd9cfb6ee5f5715547688448d2,63b7b7fb34984b47971a4ced65ae49b6c7a350fa,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 10:30:55 2011 +0100,1299663055,Support dual encoding for ZREMRANGEBYRANK,31.0,15.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1464.0,34.0,0.4379166666666667,767.0,3.2835394862036162,284.0,None,False,,
63b7b7fb34984b47971a4ced65ae49b6c7a350fa,4c5f0966b2e582981d9fdaf3b511c6cf4ac4d4d5,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 11:06:25 2011 +0100,1299665185,Helpers to move around in encoded sorted set,47.0,20.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1480.0,35.0,0.024652777777777773,768.0,41.56338028169015,285.0,None,False,,
4c5f0966b2e582981d9fdaf3b511c6cf4ac4d4d5,aff255c81df8bd27ff53a21dd7ece5595f2ed8a9,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 11:29:21 2011 +0100,1299666561,Support dual encoding for ZRANGEBYSCORE et al,114.0,45.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1507.0,36.0,0.015925925925925927,769.0,63.7906976744186,286.0,None,False,,
aff255c81df8bd27ff53a21dd7ece5595f2ed8a9,d1c920c53869907debf8a0f81ea320218fe95214,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 12:37:59 2011 +0100,1299670679,Support dual encoding for more commands,79.0,42.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1576.0,37.0,0.04766203703703704,770.0,21.981058766391453,287.0,None,False,True,"[""cc4c964b33ac108c9541e31eb2e2420addf9a82e""]"
d1c920c53869907debf8a0f81ea320218fe95214,e12b27acf72ee7e40a6a39ffc7c109914c584cd9,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 13:16:38 2011 +0100,1299672998,Persistence code for encoded sorted sets,33.0,15.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2498822928331855,7.0,1003.0,135.0,4.843512731481481,771.5,1.1083908257552828,289.0,None,False,,
e12b27acf72ee7e40a6a39ffc7c109914c584cd9,3ea204e1031a94dafca7f7e4eed2f79ec3bd7fd0,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 14:01:57 2011 +0100,1299675717,Configurable thresholds for encoded sorted sets,32.0,0.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.5016144718101818,7.0,957.25,288.0,12.003559027777778,774.5,1.0242750979848745,292.0,None,False,,
e270a7fa58d242d3cef9ebfe4724719b92afe7d6,b1a8e3e89e7824e0375b149e487f9ff1012a2100,antirez,antirez@gmail.com,Wed Mar 9 15:44:21 2011 +0100,1299681861,byte ordering detection in config.h,59.0,55.0,"src/config.h,CAS_DELIMITER,src/sha1.c,CAS_DELIMITER",2.0,1.0,1.0,0.9890934397021433,6.0,170.0,6.0,198.97989583333333,3180.5,1.0048989246984994,546.0,None,False,True,"[""705874e31db0196d8e1b23a28e8265dbdd2dc136""]"
3ea204e1031a94dafca7f7e4eed2f79ec3bd7fd0,a669d5e99945b873279eadfcf289181956cb62c3,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 16:13:06 2011 +0100,1299683586,Convert encoding when thresholds overflow,92.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1613.0,38.0,0.14938657407407407,777.0,7.69404199271713,293.0,None,False,,
a669d5e99945b873279eadfcf289181956cb62c3,cc4c964b33ac108c9541e31eb2e2420addf9a82e,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Mar 9 16:13:39 2011 +0100,1299683619,Fix used function in ZCARD,2.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1704.0,39.0,0.00038194444444444446,778.0,2619.181818181818,294.0,Corrective,True,,
b1a8e3e89e7824e0375b149e487f9ff1012a2100,e12cb14308ab2719b506762e662ab179f31aceb9,antirez,antirez@gmail.com,Wed Mar 9 16:24:18 2011 +0100,1299684258,"endianess conversion API, to be applied to specially encoded data types for arch agnostic encoding.",71.0,0.0,"src/endian.c,CAS_DELIMITER,src/endian.h,CAS_DELIMITER",2.0,1.0,1.0,0.5079353563991222,1.0,0.0,0.0,0.0,3182.5,0.0,548.0,None,False,,
e12cb14308ab2719b506762e662ab179f31aceb9,48e46215909d5161db838a596bb3ec334c86c6d7,antirez,antirez@gmail.com,Wed Mar 9 16:33:09 2011 +0100,1299684789,Ehm... sorry if we don't support PDP endianess,1.0,2.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,116.0,6.0,0.03388888888888888,3184.0,30.508196721311478,549.0,None,False,,
48e46215909d5161db838a596bb3ec334c86c6d7,bcde63785d6c6e54ae71216df8bec276f2c85155,antirez,antirez@gmail.com,Wed Mar 9 16:36:02 2011 +0100,1299684962,TODO updated,1.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,57.0,154.0,1.0595138888888889,3185.0,1.9438290620698693,1228.0,None,False,,
bcde63785d6c6e54ae71216df8bec276f2c85155,b5325132f1c8bc90e6c87392c54724ca33388ee8,antirez,antirez@gmail.com,Wed Mar 9 17:28:16 2011 +0100,1299688096,memrev variants only doing the work if the target host is big endian,10.0,0.0,"src/endian.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,8.0,1.0,0.0444212962962963,3186.0,23.511724856696194,550.0,None,False,,
b5325132f1c8bc90e6c87392c54724ca33388ee8,336c82d58379205b789f3ca9cefc7c2090808fb8,antirez,antirez@gmail.com,Wed Mar 9 17:31:02 2011 +0100,1299688262,"zipmaps are now endianess agnostic, needed for on disk serialization of zipmaps without convertions layers",6.0,1.0,"src/Makefile,CAS_DELIMITER,src/endian.h,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",3.0,1.0,1.0,1.5566567074628228,7.0,220.3333333333333,28.0,26.743950617283954,3188.0,1.0135286860997108,553.0,None,False,,
336c82d58379205b789f3ca9cefc7c2090808fb8,f22043745015281f76f3d3bc7f16afe3de731af9,antirez,antirez@gmail.com,Wed Mar 9 18:49:59 2011 +0100,1299692999,ziplist are now endianess agnostic,10.0,0.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1320.0,12.0,9.167476851851852,3190.0,1.1090812680697413,554.0,None,False,True,"[""66d1b021ec0063c988e837a78356e72d8ed180ca""]"
f22043745015281f76f3d3bc7f16afe3de731af9,dc75b1edfb2d5935246d2b3f97a04474c1296008,antirez,antirez@gmail.com,Wed Mar 9 19:14:04 2011 +0100,1299694444,encoding agnostic intsets,27.0,9.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,33.0,5.0,9.184201388888887,3191.0,1.108882629817962,555.0,None,False,True,"[""6136a16bd1fe4a88ada02e31e597b805d8a86b55""]"
cc4c964b33ac108c9541e31eb2e2420addf9a82e,d4e07f171472a99a63c47b1fb6ab8a0a071ae945,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 16:16:27 2011 +0100,1299770187,Add new string to long long function,58.0,0.0,"src/redis.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER",2.0,1.0,1.0,0.12565805017256745,7.0,658.0,109.0,1.625324074074074,779.5,1.6111035063400017,296.0,Feature Addition,False,True,"[""5cbe90dbfd5d9f46f5fa42e4e96a40a46d29b234""]"
d4e07f171472a99a63c47b1fb6ab8a0a071ae945,bbfe232f607f10655b6f9bf1d8f91830bb3ba413,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 16:17:14 2011 +0100,1299770234,Make zzlLength take a ziplist argument,4.0,6.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1705.0,40.0,1.002488425925926,781.0,1.9975177509669224,297.0,None,False,,
bbfe232f607f10655b6f9bf1d8f91830bb3ba413,56ce42faf168cafeb9dee681ab269b1fb98b197d,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 16:34:52 2011 +0100,1299771292,Generic iterator code for usage in ZUNIONSTORE/ZINTERSTORE,374.0,57.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1703.0,41.0,0.01224537037037037,782.0,82.66351606805294,298.0,None,False,True,"[""d070abe44cdc63ece3533d06986629b5b5c21ca8"", ""cb16b6c3899d0696a7e633c29f764e06b222b2fe"", ""38a154a9a6244826a8cb536347a60749cef2ee4a"", ""521ddcce1483d1b8760a108fd5d7df0ae663799a"", ""3039e806d84518773b157fe26068b5527db78981""]"
dc75b1edfb2d5935246d2b3f97a04474c1296008,7493d2a0325fe33dc75317bfedf9b1c1e5b0d0b5,antirez,antirez@gmail.com,Thu Mar 10 16:39:19 2011 +0100,1299771559,fixed diskstore race condition,10.0,2.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1043.0,48.0,1.9907407407407407,3192.0,1.5023255813953489,556.0,Corrective,True,,
e270a7fa58d242d3cef9ebfe4724719b92afe7d6,0aed6a952a0acf5a02ec4b588031ec3dc231a68c,antirez,antirez@gmail.com,Thu Mar 10 16:39:19 2011 +0100,1299771559,fixed diskstore race condition,10.0,2.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1051.0,49.0,0.0,3193.0,0.0,557.0,Corrective,True,,
0aed6a952a0acf5a02ec4b588031ec3dc231a68c 7493d2a0325fe33dc75317bfedf9b1c1e5b0d0b5,7226cbd1d978b15d4379e7f643595de35b5b3779,antirez,antirez@gmail.com,Thu Mar 10 16:47:09 2011 +0100,1299772029,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
56ce42faf168cafeb9dee681ab269b1fb98b197d,dba3a153a7ac9a1ec81e8f3034714d4900235a00,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 16:53:20 2011 +0100,1299772400,Remove comment,0.0,6.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2020.0,42.0,0.012824074074074076,783.0,78.9783393501805,299.0,None,False,,
dba3a153a7ac9a1ec81e8f3034714d4900235a00,255eebe22167e00f74e359bc71718225d6bd70c8,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 17:02:05 2011 +0100,1299772925,Convert encoding of result when in limits,16.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2014.0,43.0,0.006076388888888889,784.0,165.57142857142856,300.0,None,False,,
255eebe22167e00f74e359bc71718225d6bd70c8,df26a0ae0b419124efad82df148b84c6c6164615,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Mar 10 17:50:13 2011 +0100,1299775813,Encode sorted set after loading from dump,28.0,10.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.3059062414952043,7.0,1352.3333333333333,183.0,0.4295100308641975,786.0,1.8043896788461555,303.0,None,False,,
df26a0ae0b419124efad82df148b84c6c6164615,8588bfa370749b24922c0c8f477c562736626421,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Mar 11 17:06:07 2011 +0100,1299859567,Make zzl API unaware of the robj where the ziplist is stored,39.0,48.0,"src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.15790637433488172,7.0,1532.5,153.0,0.969375,788.5,1.7736943907156673,305.0,None,False,,
8588bfa370749b24922c0c8f477c562736626421,e53ca04b50b86ef158a75c54ae9ee8b17e31719c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Mar 11 18:17:53 2011 +0100,1299863873,Test for empty inner range when looking for elements in range,28.0,10.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6292492238560345,7.0,1309.5,61.0,26.67331597222222,790.5,11.041885435811317,148.0,Preventative,False,,
e53ca04b50b86ef158a75c54ae9ee8b17e31719c,72690afdd26b118589ddec3915cdb4790b9d4812,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 12 14:48:29 2011 +0100,1299937709,Remove unused function,0.0,4.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2031.0,47.0,0.8545833333333334,792.0,2.1701608971233544,307.0,None,False,,
72690afdd26b118589ddec3915cdb4790b9d4812,69298a05eb23cbbf60f9008faa2e11866ab4352a,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun Mar 13 18:15:57 2011 +0100,1300036557,Offset should be size_t,9.0,7.0,"src/t_zset.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,7.0,1678.5,61.0,2.5602199074074075,793.5,1.534682500960451,309.0,None,False,True,"[""56538477143b144f2267ce98805a7b6edc763528""]"
69298a05eb23cbbf60f9008faa2e11866ab4352a,9ec4ea20a71f075a7fc9a2e1d613c339353ee553,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Mar 14 10:50:35 2011 +0100,1300096235,Test both sorted set encodings for every test,528.0,467.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,606.0,16.0,2.689375,795.0,1.3718336044620032,149.0,Preventative,False,,
9ec4ea20a71f075a7fc9a2e1d613c339353ee553,dddf5335f47d62d5e74308faff8dcb5d0575286c,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Mar 14 13:30:06 2011 +0100,1300105806,"Fix DEBUG DIGEST, SORT and AOF rewrite",102.0,27.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER",4.0,1.0,1.0,1.2713441248833373,7.0,591.5,158.0,37.80817997685185,797.5,1.0336040775441684,313.0,Corrective,True,True,"[""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
7493d2a0325fe33dc75317bfedf9b1c1e5b0d0b5,4eddb121563a9e50cf2ee66e2a0ff7c186dd696a,antirez,antirez@gmail.com,Tue Mar 15 10:47:04 2011 +0100,1300182424,gitignore updated,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,22.0,17.0,74.7533912037037,3194.0,1.013377319528889,1229.0,None,False,,
4eddb121563a9e50cf2ee66e2a0ff7c186dd696a,612810af6e4456d14a7d68f01ce35905b2ff89d9,antirez,antirez@gmail.com,Sun Mar 20 18:24:49 2011 +0100,1300641889,sdscatrepr() fixed. Now newlines and other special chars are escaped correctly,5.0,5.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,584.0,10.0,52.33152777777778,3195.0,1.0191089395334765,558.0,Corrective,True,,
dddf5335f47d62d5e74308faff8dcb5d0575286c,48991620f71485a5fa056736796b620eab1387a9,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Mar 21 23:54:35 2011 +0100,1300748075,Remove sorted set when empty after ZREMRANGEBY*,2.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2027.0,49.0,8.235162037037037,800.0,1.121430518974924,314.0,None,False,,
48991620f71485a5fa056736796b620eab1387a9,04a10b1a6d372bd7a1105150194881eccbfd5620,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Mar 22 09:28:40 2011 +0100,1300782520,Test that sorted sets are removed when empty,22.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,667.0,17.0,7.943113425925926,801.0,1.1258952184588036,150.0,Preventative,False,,
612810af6e4456d14a7d68f01ce35905b2ff89d9,03af999cb0befed9d2556c2df1eb0511de2d96d2,antirez,antirez@gmail.com,Tue Mar 22 19:35:42 2011 +0100,1300818942,command table altered for the new API to get position of keys arguments in commands,13.0,13.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1808.0,99.0,13.231770833333336,3196.0,1.0755756740799056,559.0,Feature Addition,False,,
612810af6e4456d14a7d68f01ce35905b2ff89d9,e360e3bb7e58fd493c71911caab948e05e7fbe85,antirez,antirez@gmail.com,Tue Mar 22 22:49:12 2011 +0100,1300830552,Fixed sdssplitargs() handling of hex-style escapes.,48.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,584.0,11.0,2.1835995370370367,3197.0,1.4579594303069494,560.0,Corrective,True,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
03af999cb0befed9d2556c2df1eb0511de2d96d2,9791f0f8ceb18e2e3c297a8c479307b7af0f9830,antirez,antirez@gmail.com,Wed Mar 23 18:09:17 2011 +0100,1300900157,"new preloading implemented, still EXEC not handled correctly, everything to test",98.0,16.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.3789514028987648,7.0,1131.25,303.0,10.5734375,3199.5,1.034328379974392,564.0,Feature Addition,False,True,"[""b4b5144694a4134544221a5587b81a98aec608be"", ""6e1b9b58ec6ae895da686015d82d4f121f1bfb85"", ""4b61ca460c5d043b9d199a4e4991bfac5dde66c5"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""f0782a6e8633988a935097c195899773da2c2ad1"", ""10dedc25868c08bb1bf5da8252c8b11ad2ab370d""]"
9791f0f8ceb18e2e3c297a8c479307b7af0f9830,a3cf9041218518f235a297b2f2d0d08ef9a5c4e5,antirez,antirez@gmail.com,Wed Mar 23 23:13:15 2011 +0100,1300918395,minor style change,2.0,1.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1063.0,51.0,0.21108796296296287,3202.0,5.7373615528018425,565.0,None,False,,
7226cbd1d978b15d4379e7f643595de35b5b3779 e360e3bb7e58fd493c71911caab948e05e7fbe85,b8513c9398c3ab169ca77999cd8212134f29dc9b,antirez,antirez@gmail.com,Wed Mar 23 23:13:34 2011 +0100,1300918414,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
a3cf9041218518f235a297b2f2d0d08ef9a5c4e5,42b2621cdc4dfc47f90cf1085761ad89171a6a60,antirez,antirez@gmail.com,Mon Mar 28 17:29:26 2011 +0200,1301326166,implemented preload of EXEC using the new getKeys() system,27.0,8.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1064.0,52.0,4.719571759259258,3203.0,1.2118836307633452,566.0,Feature Addition,False,True,"[""b4b5144694a4134544221a5587b81a98aec608be""]"
42b2621cdc4dfc47f90cf1085761ad89171a6a60,b4b5144694a4134544221a5587b81a98aec608be,antirez,antirez@gmail.com,Mon Mar 28 17:54:42 2011 +0200,1301327682,Fixes to the new preloading / key discovery APIs,11.0,58.0,"src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER",2.0,1.0,1.0,0.2580186686648155,7.0,886.5,97.0,2.4828761574074067,3204.5,1.2017364000903863,568.0,Corrective,True,True,"[""a07bc9269234bba1f51211bff304ce9caa15a9fb""]"
b4b5144694a4134544221a5587b81a98aec608be,6e1b9b58ec6ae895da686015d82d4f121f1bfb85,antirez,antirez@gmail.com,Mon Mar 28 18:21:06 2011 +0200,1301329266,bug fixed in zunionstore specific getKeys() implementation,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,691.0,45.0,0.01833333333333333,3206.0,55.54545454545455,569.0,Corrective,True,True,"[""f0782a6e8633988a935097c195899773da2c2ad1""]"
6e1b9b58ec6ae895da686015d82d4f121f1bfb85,4b61ca460c5d043b9d199a4e4991bfac5dde66c5,antirez,antirez@gmail.com,Mon Mar 28 18:46:22 2011 +0200,1301330782,fixed a bug in RENAME getKeys() function,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,691.0,46.0,0.017546296296296296,3207.0,57.992084432717675,570.0,Corrective,True,,
4b61ca460c5d043b9d199a4e4991bfac5dde66c5,a07bc9269234bba1f51211bff304ce9caa15a9fb,antirez,antirez@gmail.com,Mon Mar 28 19:03:57 2011 +0200,1301331837,Preloading messages log level changed from WARNING to DEBUG,2.0,2.0,"src/dscache.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1035.0,54.0,0.04809027777777778,3208.0,21.794223826714802,571.0,Corrective,True,,
e360e3bb7e58fd493c71911caab948e05e7fbe85 a07bc9269234bba1f51211bff304ce9caa15a9fb,cc1cb7e5408291919922ded1aa3921f6b55c6307,antirez,antirez@gmail.com,Tue Mar 29 10:54:38 2011 +0200,1301388878,Merge remote branch 'origin/getkeys' into unstable,,,,,,,,,,,,,,,Merge,False,,
cc1cb7e5408291919922ded1aa3921f6b55c6307,b46251d92970468f5e55e06db1f580acf1fab1c4,antirez,antirez@gmail.com,Tue Mar 29 11:04:55 2011 +0200,1301389495,TODO modified,1.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,58.0,155.0,19.728391203703705,3209.0,1.050688370363026,1230.0,None,False,,
b46251d92970468f5e55e06db1f580acf1fab1c4,ecc9109434002d4667cd01a3b7c067a508c876eb,antirez,antirez@gmail.com,Tue Mar 29 17:51:15 2011 +0200,1301413875,Cluster branch merged to unstable.,1727.0,9.0,"CLUSTER,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/crc16.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",11.0,2.0,2.0,1.4302612297995247,7.0,571.2727272727273,390.0,22.728405934343435,3215.0,0.9299040491761608,581.0,Non Functional,False,True,"[""4b72c5617f1b9a53daad5bb58bfc7faf05c8169a"", ""626f6b2d644b2458184edf9318f24ce95ba83532"", ""d01a6bb3f92d96747dad229c3d28244cb42bf7e9"", ""152d937b8ca02ab8d6ccd038d6f49d3b0ab51a42"", ""93666e583cf344ff97e87503c77d9b3020ab357b"", ""a55c7868c1d66c491399895c1274cb300c983a95"", ""fd7a584f7ab9a796338e3bd6cacf01ce5476bb91"", ""9d89e99c9946ab199d295db6faa1953252d7b80c"", ""0276e5545c78490613871939d48989090a54c2c9"", ""a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618"", ""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""66c146592a0c0ff39570633811008cee8773233e"", ""f013f40003e5709203e31dcba4485f8342e2cccc"", ""6710ff24d067d56b6b8d768532a6a7d3c4bc7a80"", ""d329031fad1ac8c5d2d0c58a17d08a2de98b7b15"", ""4e97c2c71a3c511165c966769f51d2255d7a7b33"", ""70d848e1faff36e778f8e32c5a86628574c22b00"", ""84e5684bca4c737fac6ccc00fd1fa5737ded2cb7"", ""94343492361a04301a48fc56490d6113ff97aba9"", ""6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""303dde3757b75f9ce529ad804abf7e6d6ae5e793"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""58c8a071a51632c0e337f467e3ca7b2127e3fb43"", ""59cf0b1902f20436e01f2a7523609a597e688c5b"", ""a2583466e43adf2f2e56a51f9e35fbd87d9737bf"", ""12d0195b3013aff008bb492cf59f31d823f024b0"", ""29049507ec34efd59ce6de7cff524fb44b47f934"", ""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e"", ""a3778f3b0f0aacbb34ecc77541615a9eda251443"", ""3ce1c28d47eefd6e7121f0257563e380153cae54"", ""c85ae56edc982d28df5cb29eedcd9d8bc9840a05""]"
ecc9109434002d4667cd01a3b7c067a508c876eb,143d0077ba07fba8d662092c309d51b99270e648,antirez,antirez@gmail.com,Tue Mar 29 17:52:02 2011 +0200,1301413922,CLUSTER file updated with warning,4.0,0.0,"CLUSTER,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,131.0,1.0,0.0005439814814814813,3221.0,1839.297872340425,1232.0,None,False,,
143d0077ba07fba8d662092c309d51b99270e648,e6f0a7b237b19881d73b145960ed68202f4bde49,antirez,antirez@gmail.com,Tue Mar 29 18:02:34 2011 +0200,1301414554,todo list for a first cluster howto guide for early testers,21.0,0.0,"CLUSTER,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,135.0,2.0,0.007314814814814816,3222.0,137.70886075949366,1233.0,Preventative,False,,
e6f0a7b237b19881d73b145960ed68202f4bde49,c7c7cfbddca1325e600e5c0fd4cfcfde38cc0758,antirez,antirez@gmail.com,Wed Mar 30 14:58:19 2011 +0200,1301489899,cluster configuration saving,71.0,38.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1299.0,1.0,0.8799074074074074,3223.0,2.136483215826581,582.0,None,False,True,"[""4b72c5617f1b9a53daad5bb58bfc7faf05c8169a""]"
c7c7cfbddca1325e600e5c0fd4cfcfde38cc0758,4b72c5617f1b9a53daad5bb58bfc7faf05c8169a,antirez,antirez@gmail.com,Wed Mar 30 16:51:28 2011 +0200,1301496688,fix to configuration saving on first start,9.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1332.0,2.0,0.07857638888888889,3224.0,13.726469288555016,583.0,Corrective,True,,
4b72c5617f1b9a53daad5bb58bfc7faf05c8169a,ef21ab960e061e84ee0e8ba81900750e32179215,antirez,antirez@gmail.com,Wed Mar 30 17:41:13 2011 +0200,1301499673,centralized cluster config file name. Assigned slots in CLUSTER NODES output and in cluster config file.,38.0,11.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.2868389047509439,7.0,1455.0,217.0,0.6735378086419753,3226.0,11.137594036638248,586.0,None,False,True,"[""d01a6bb3f92d96747dad229c3d28244cb42bf7e9"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
ef21ab960e061e84ee0e8ba81900750e32179215,6c390c0b2303247c16f42160fec3fd609cb99cb7,antirez,antirez@gmail.com,Wed Mar 30 18:12:51 2011 +0200,1301501571,minor change with no actual effects til the loading node config code is in place,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1362.0,4.0,0.0219675925925926,3228.0,46.52160168598525,587.0,None,False,,
6c390c0b2303247c16f42160fec3fd609cb99cb7,25ef31920adad5c52a1f5dbe7fd307d4abec5862,antirez,antirez@gmail.com,Thu Mar 31 16:44:43 2011 +0200,1301582683,"Fixed issue #503. MONITOR + QUIT could crash the server, there are actually other interactions that could have the same effect (for instance Pub/Sub).",20.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,847.0,40.0,70.10162037037037,3229.0,1.014265005497971,588.0,Corrective,True,True,"[""5b94b8ac5d10dded6bb79909c660fe8d3f3ba677""]"
25ef31920adad5c52a1f5dbe7fd307d4abec5862,5b94b8ac5d10dded6bb79909c660fe8d3f3ba677,antirez,antirez@gmail.com,Thu Mar 31 19:52:15 2011 +0200,1301593935,fixed memory leak introduced with the previous commit. Many thanks to Pieter Noordhuis for spotting it in no time,4.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,864.0,41.0,0.13023148148148148,3230.0,8.67863490934945,589.0,Corrective,True,,
6c390c0b2303247c16f42160fec3fd609cb99cb7,626f6b2d644b2458184edf9318f24ce95ba83532,antirez,antirez@gmail.com,Fri Apr 1 18:59:28 2011 +0200,1301677168,"DUMP implemented, RESTORE and MIGRATE fixed. Use zcalloc() instead of zmalloc()+memset() in sds.c when a new string is created with NULL initialization pointer.",89.0,7.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER",4.0,1.0,1.0,0.9090191303633848,7.0,1255.75,233.0,3.9849623842592594,3232.5,1.2405763850999318,593.0,Corrective,True,,
626f6b2d644b2458184edf9318f24ce95ba83532 5b94b8ac5d10dded6bb79909c660fe8d3f3ba677,f304f22b22b2d3a09b9ab533f4cdcf4632858861,antirez,antirez@gmail.com,Fri Apr 1 19:00:21 2011 +0200,1301677221,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
f304f22b22b2d3a09b9ab533f4cdcf4632858861,f797c7dc176c833e6aa412c557d7fedd59dc1124,antirez,antirez@gmail.com,Tue Apr 5 13:57:28 2011 +0200,1302004648,bad data on RESTORE can no longer crash the server but create a memory leak with some input string,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1440.0,6.0,3.7902777777777774,3235.0,1.26383290582631,594.0,Feature Addition,False,,
f797c7dc176c833e6aa412c557d7fedd59dc1124,ece74202bbb2ff6b97b407755d5b9206db82cb17,antirez,antirez@gmail.com,Wed Apr 6 12:19:45 2011 +0200,1302085185,OBJECT command implemented,42.0,1.0,"src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5219490794046293,7.0,1148.6666666666667,241.0,12.63966049382716,3237.0,1.0305383995406476,597.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""6d5790d68289e8824477d8187076f743d87b66e5"", ""ce8a68b1fdf5c26d06d2e2972109881bd16e6856""]"
ece74202bbb2ff6b97b407755d5b9206db82cb17,0b7f6d0913f96f2fe8280afc681c6e0a65ca81c9,antirez,antirez@gmail.com,Wed Apr 6 15:36:10 2011 +0200,1302096970,"make sure that OBJECT ENCODING returns skiplist for sorted sets, and not raw, so that once we will merge specially encoded sorted sets everything will make sense.",6.0,1.0,"src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,7.0,818.0,139.0,0.13640046296296296,3239.5,6.49851506151888,599.0,Non Functional,False,,
04a10b1a6d372bd7a1105150194881eccbfd5620 0b7f6d0913f96f2fe8280afc681c6e0a65ca81c9,7d8c555e92954b02d40c15702476fd48e55c4f94,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 6 16:15:01 2011 +0200,1302099301,Merge branch 'unstable' into unstable-zsetConflicts:ntsrc/object.cn,,,,,,,,,,,,,,,Merge,False,,
7d8c555e92954b02d40c15702476fd48e55c4f94,4cc4d1648b3b4c01bf7568694a88e2ef3f70b2bf,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 6 16:15:15 2011 +0200,1302099315,Typo,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1010.0,34.0,7.933333333333334,802.0,1.1260504201680672,315.0,None,False,,
4cc4d1648b3b4c01bf7568694a88e2ef3f70b2bf,100ed062c0e3fa7d1a369de083aee619e27c8b2b,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 6 16:17:07 2011 +0200,1302099427,Test for ENCODING_SKIPLIST instead of ENCODING_RAW,28.0,28.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",7.0,2.0,2.0,1.6391183950780284,7.0,798.0,180.0,14.305044642857142,806.0,1.0206463027664692,151.0,Preventative,False,True,"[""237194b76064c95028b14e9ff7d7abfb10abd63d""]"
100ed062c0e3fa7d1a369de083aee619e27c8b2b,d4d3a70da2c9be4c5aa67a0be735568dbe436568,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 6 16:38:29 2011 +0200,1302100709,Update target encoding for sorted set from rdb,2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1010.0,36.0,0.014837962962962963,810.0,68.39469578783151,322.0,None,False,True,"[""d8c7db1bdba3938f31856a067b2966285acbf97f""]"
d4d3a70da2c9be4c5aa67a0be735568dbe436568,02e600653216cebc0746bfbb86b353667a843591,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 6 16:39:18 2011 +0200,1302100758,Explicitly zero zval since it is stored on the stack,1.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2029.0,51.0,0.01540509259259259,811.0,65.91359879789633,323.0,None,False,,
0b7f6d0913f96f2fe8280afc681c6e0a65ca81c9,726a39c15ff5d89f0d44a32cca8869cf0589f929,antirez,antirez@gmail.com,Thu Apr 7 12:55:02 2011 +0200,1302173702,initial cluster config load code,39.0,4.0,"src/cluster.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",3.0,1.0,1.0,0.7942556838305386,7.0,717.6666666666665,26.0,41.89627314814815,3242.0,1.2162818299640286,602.0,Feature Addition,False,True,"[""d01a6bb3f92d96747dad229c3d28244cb42bf7e9"", ""12d0195b3013aff008bb492cf59f31d823f024b0""]"
726a39c15ff5d89f0d44a32cca8869cf0589f929,92690d29fee4822a0e6280c0fe8afb8a6ff04671,antirez,antirez@gmail.com,Thu Apr 7 17:46:28 2011 +0200,1302191188,first version of cluster config loading code,72.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1469.0,8.0,0.20238425925925926,3244.0,5.941095733729839,603.0,None,False,,
92690d29fee4822a0e6280c0fe8afb8a6ff04671,d01a6bb3f92d96747dad229c3d28244cb42bf7e9,antirez,antirez@gmail.com,Thu Apr 7 19:04:16 2011 +0200,1302195856,fixes to configuration loading and saving. However there is to still fix the logic for reconnection/behavior of nodes after a restart.,10.0,7.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1535.0,9.0,0.05402777777777778,3245.0,19.50899742930591,604.0,Corrective,True,,
d01a6bb3f92d96747dad229c3d28244cb42bf7e9,2bc52b2c028c8b1b1d22052ecd689439a488fbf7,antirez,antirez@gmail.com,Thu Apr 7 19:22:24 2011 +0200,1302196944,useless newline removed from log message,6.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1538.0,10.0,0.012592592592592593,3246.0,80.41176470588233,605.0,Feature Addition,False,,
2bc52b2c028c8b1b1d22052ecd689439a488fbf7,1793752d97d72c82ce237b461165d5a06c44587e,antirez,antirez@gmail.com,Thu Apr 7 21:34:41 2011 +0200,1302204881,node cluster configuration file configurable via redis.conf,4.0,0.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,7.0,1095.0,40.0,4.6235127314814815,3247.5,6.496933984414962,607.0,None,False,,
1793752d97d72c82ce237b461165d5a06c44587e,152d937b8ca02ab8d6ccd038d6f49d3b0ab51a42,antirez,antirez@gmail.com,Thu Apr 7 23:06:01 2011 +0200,1302210361,when loading config set the ping/pong timestaps to the current value. Even a node in FAIL state can be accepted again if there are no slaves for this node so election was not possible,19.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1544.0,12.0,0.06342592592592593,3249.0,16.766423357664234,608.0,Corrective,True,True,"[""93666e583cf344ff97e87503c77d9b3020ab357b"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
152d937b8ca02ab8d6ccd038d6f49d3b0ab51a42,93666e583cf344ff97e87503c77d9b3020ab357b,antirez,antirez@gmail.com,Thu Apr 7 23:10:32 2011 +0200,1302210632,master node without slaves rejoin fixed,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1559.0,13.0,0.0031365740740740733,3250.0,319.8191881918819,609.0,Corrective,True,,
93666e583cf344ff97e87503c77d9b3020ab357b,5a547b27f7e4a12ac6ecd4e0b7f7c25841018deb,antirez,antirez@gmail.com,Thu Apr 7 23:23:27 2011 +0200,1302211407,evaluate cluster state after config load. Still bugs in the slot allocation after nodes config load to fix.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1559.0,14.0,0.008969907407407406,3251.0,112.48387096774192,610.0,Corrective,True,,
5a547b27f7e4a12ac6ecd4e0b7f7c25841018deb,a55c7868c1d66c491399895c1274cb300c983a95,antirez,antirez@gmail.com,Thu Apr 7 23:33:18 2011 +0200,1302211998,fixed lame error in slot assignment,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1560.0,15.0,0.0068402777777777785,3252.0,147.19289340101525,611.0,Corrective,True,,
a55c7868c1d66c491399895c1274cb300c983a95,fd7a584f7ab9a796338e3bd6cacf01ce5476bb91,antirez,antirez@gmail.com,Fri Apr 8 10:17:41 2011 +0200,1302250661,do not process node failure messages about yourself,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1560.0,16.0,0.4474884259259259,3253.0,3.2346946693220917,612.0,Corrective,True,,
fd7a584f7ab9a796338e3bd6cacf01ce5476bb91,8d727af8c4d309463cd463689b50ffb299b61964,antirez,antirez@gmail.com,Fri Apr 8 14:19:52 2011 +0200,1302265192,update state when FAIL is cleared from a node,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1561.0,17.0,0.16818287037037036,3254.0,6.945908746817151,613.0,Corrective,True,,
fd7a584f7ab9a796338e3bd6cacf01ce5476bb91,1c708b25ee663985bcfb91082f8acdd6c3cb7489,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 11 16:39:39 2011 +0200,1302532779,"added minimal cluster section in INFO output. This is only useful to check if the instance is or not configured as a cluster node, all the other informations are accessible using the CLUSTER command.",9.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1851.0,105.0,5.180486111111111,0.0,0.0,0.0,Feature Addition,False,True,"[""f2f2ba1b3ab5147684143ebfb2981c14c9a0bd27""]"
1c708b25ee663985bcfb91082f8acdd6c3cb7489,407798c1e1552e1f5e583ead63ed6b7c8ea20299,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 11 16:41:06 2011 +0200,1302532866,Redis-trib initial implementation (currently can not do any actual work),70.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,Feature Addition,False,True,"[""9a440ad418ac8b753f08ba98c00c2b5e52f1ca78"", ""bbf1af2da34001cf1f3af808cc3972dbc78fc6ab""]"
407798c1e1552e1f5e583ead63ed6b7c8ea20299,b800a3ab20440fdd55947f52f3efcc689ef858d3,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 11 16:58:47 2011 +0200,1302533927,a first refactoring of redis-trib.rb,45.0,25.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,70.0,1.0,0.012280092592592592,2.0,82.43261074458059,2.0,None,False,True,"[""8bad0ddd9daff59137d1fc2c932bb39e77cabf4c""]"
b800a3ab20440fdd55947f52f3efcc689ef858d3,8c4c50906cc91d8dffbb22cb4a520d11a1c6344b,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 11 17:40:35 2011 +0200,1302536435,added known nodes info in CLUSTER INFO,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1562.0,18.0,3.1393865740740736,3.0,1.3185335658431738,3.0,Feature Addition,False,,
8c4c50906cc91d8dffbb22cb4a520d11a1c6344b,f29d1fb0b20d31c39ea4d092ecd4eb1e4d2f5e1b,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 11 18:26:00 2011 +0200,1302539160,assert_empty in redis-trib,9.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,90.0,2.0,0.06056712962962961,4.0,17.51060577106822,4.0,Preventative,False,,
f29d1fb0b20d31c39ea4d092ecd4eb1e4d2f5e1b,e9ee513b6a940ecd3e30a152d6ad2e8fb25147a5,antirez,antirez@gmail.com,Mon Apr 11 21:47:45 2011 +0200,1302551265,TODO modified,2.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,59.0,156.0,13.446412037037033,3255.0,1.0743692813551735,1234.0,None,False,,
8d727af8c4d309463cd463689b50ffb299b61964 e9ee513b6a940ecd3e30a152d6ad2e8fb25147a5,d415f9ff41ed5b87de9baa7a9521431ed7d78d3c,antirez,antirez@gmail.com,Tue Apr 12 15:36:10 2011 +0200,1302615370,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d415f9ff41ed5b87de9baa7a9521431ed7d78d3c,744f34d834df8424fd201305fb469e540bb29020,antirez,antirez@gmail.com,Tue Apr 12 17:06:33 2011 +0200,1302620793,redis-trib can now assign hash slots to initialize a cluster. Next step is to join the cluster.,92.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,98.0,3.0,0.9448263888888888,3256.0,2.058395501819117,614.0,Feature Addition,False,,
744f34d834df8424fd201305fb469e540bb29020,4e17be0ef542cea7c13291126cb35bc25d3af83d,antirez,antirez@gmail.com,Tue Apr 12 19:21:03 2011 +0200,1302628863,TODO update,17.0,11.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,61.0,157.0,0.898125,3257.0,2.1134307585247045,1235.0,None,False,,
e9ee513b6a940ecd3e30a152d6ad2e8fb25147a5,1087227d4140a3bf5f0248e411fa084ba3fe2bf4,antirez,antirez@gmail.com,Wed Apr 13 10:38:56 2011 +0200,1302683936,redis-trib: show list of commands,6.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,190.0,4.0,0.7308217592592593,3258.0,2.368322696102497,615.0,None,False,,
1087227d4140a3bf5f0248e411fa084ba3fe2bf4 4e17be0ef542cea7c13291126cb35bc25d3af83d,a54d9805ee1c46d574aab8e349fd778d3a4bc67b,antirez,antirez@gmail.com,Wed Apr 13 10:39:06 2011 +0200,1302683946,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a54d9805ee1c46d574aab8e349fd778d3a4bc67b,996d503d1aab68bf0220951ab71a1ef9b8678b4a,antirez,antirez@gmail.com,Wed Apr 13 10:58:21 2011 +0200,1302685101,ASCII ART FTW,47.0,4.0,"src/Makefile,CAS_DELIMITER,src/asciilogo.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.2750651871829233,7.0,806.25,246.0,5.8208304398148165,3260.5,1.059893597577759,619.0,None,False,True,"[""9a322ab73093f15726348d08065b6a90c9894860"", ""6b5daa2df2a0711a25746cb025927dc3deb7717e""]"
996d503d1aab68bf0220951ab71a1ef9b8678b4a,9d89e99c9946ab199d295db6faa1953252d7b80c,antirez,antirez@gmail.com,Wed Apr 13 11:42:05 2011 +0200,1302687725,no longer useful debugging printf removed,0.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1564.0,19.0,1.7510416666666666,3263.0,1.5710886377156454,620.0,Corrective,True,,
9d89e99c9946ab199d295db6faa1953252d7b80c,8231b1ef60e5b4068137c47765ca3907002fc530,antirez,antirez@gmail.com,Wed Apr 13 15:39:43 2011 +0200,1302701983,TODO updated,5.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,67.0,158.0,0.8462962962962963,3264.0,2.1816192560175054,1236.0,None,False,,
8231b1ef60e5b4068137c47765ca3907002fc530,57d83d5673947bcd2406fb04d4c37cc8428648c2,antirez,antirez@gmail.com,Wed Apr 13 15:58:05 2011 +0200,1302703085,"redis-trib create, first version is know working",29.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,195.0,5.0,0.22163194444444445,3265.0,5.511984960050132,621.0,Feature Addition,False,,
57d83d5673947bcd2406fb04d4c37cc8428648c2,583fc5dd6047b89f68690d38837eface3b015789,antirez,antirez@gmail.com,Wed Apr 13 18:40:51 2011 +0200,1302712851,hopefully more readable info_string method in redis-trib,48.0,13.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,220.0,6.0,0.1130324074074074,3266.0,9.847020274421464,622.0,None,False,True,"[""180ba187d3357b02d7efb1474466c98719fdb5cf"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
583fc5dd6047b89f68690d38837eface3b015789,3883a381b6ea8354a7f830c3ac508ecba7ae9de2,antirez,antirez@gmail.com,Wed Apr 13 18:46:29 2011 +0200,1302713189,use map! instead of reassigning,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,255.0,7.0,0.003912037037037037,3267.0,256.6213017751479,623.0,None,False,,
3883a381b6ea8354a7f830c3ac508ecba7ae9de2,9a440ad418ac8b753f08ba98c00c2b5e52f1ca78,antirez,antirez@gmail.com,Wed Apr 13 18:50:50 2011 +0200,1302713450,fixed a typo in redis-trib,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,255.0,8.0,0.003020833333333333,3268.0,332.0344827586207,624.0,Corrective,True,True,"[""bbf1af2da34001cf1f3af808cc3972dbc78fc6ab""]"
9a440ad418ac8b753f08ba98c00c2b5e52f1ca78,180ba187d3357b02d7efb1474466c98719fdb5cf,antirez,antirez@gmail.com,Wed Apr 13 20:17:11 2011 +0200,1302718631,fixed typo in comment,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,255.0,9.0,0.05996527777777778,3269.0,17.67631731325999,625.0,Corrective,True,,
180ba187d3357b02d7efb1474466c98719fdb5cf,8bad0ddd9daff59137d1fc2c932bb39e77cabf4c,antirez,antirez@gmail.com,Wed Apr 13 21:26:12 2011 +0200,1302722772,fixed bug due to typo in code,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,255.0,10.0,0.04792824074074074,3270.0,21.864525476937928,626.0,Corrective,True,,
8bad0ddd9daff59137d1fc2c932bb39e77cabf4c,d0cfb2be643e5102cb24c3d22a1cf9cfc9df20d1,antirez,antirez@gmail.com,Thu Apr 14 09:41:22 2011 +0200,1302766882,redis-trib: functions implementing commands moved at bottom,33.0,30.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,255.0,11.0,0.5105324074074075,3271.0,2.95873951484924,627.0,None,False,,
d0cfb2be643e5102cb24c3d22a1cf9cfc9df20d1 02e600653216cebc0746bfbb86b353667a843591,7c0e1b53c4c4f646c788fcd09666e1c321c1d134,antirez,antirez@gmail.com,Thu Apr 14 13:31:14 2011 +0200,1302780674,Merge remote branch 'pietern/unstable-zset' into unstable,,,,,,,,,,,,,,,Merge,False,,
7c0e1b53c4c4f646c788fcd09666e1c321c1d134,fb2feae599e2a190cfc6906ca9a03abc54528b61,antirez,antirez@gmail.com,Fri Apr 15 16:35:27 2011 +0200,1302878127,variadic LPUSH/RPUSH,27.0,22.0,"src/redis.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",2.0,1.0,1.0,0.4079059801389763,7.0,1422.0,135.0,38.091064814814814,3272.5,1.2303672661147105,629.0,None,False,True,"[""33f943b4cddb0bf90b436ccd47d12363e13d0fce""]"
fb2feae599e2a190cfc6906ca9a03abc54528b61,72dff2c084ce67464bded6bc9f5674d5e01b2cf7,antirez,antirez@gmail.com,Fri Apr 15 16:35:54 2011 +0200,1302878154,test fixed after ascii art banner modified the output of a running server,2.0,1.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,7.0,259.5,55.0,95.835,3274.5,1.0078197718793511,87.0,Corrective,True,True,"[""6c16ecaaaab0d933249aaaef49fe50afd373df83""]"
72dff2c084ce67464bded6bc9f5674d5e01b2cf7,9d0a8656c166f14b6a2f41d134518ffbc4bf8f25,antirez,antirez@gmail.com,Fri Apr 15 16:52:07 2011 +0200,1302879127,tests for variadic list push,16.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,811.0,25.0,129.9912615740741,3276.0,1.0076928247936894,88.0,Preventative,False,,
9d0a8656c166f14b6a2f41d134518ffbc4bf8f25,2e667806ed0cb9db4ba55743efb4984447e19b4d,antirez,antirez@gmail.com,Fri Apr 15 17:44:08 2011 +0200,1302882248,"version bumped to 2.9, that is, 3.0 unstable",1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,9.0,106.9870949074074,3277.0,1.0093469217092534,630.0,None,False,,
2e667806ed0cb9db4ba55743efb4984447e19b4d,009db6764504746d64fef7e6ccf661f7882bd72e,antirez,antirez@gmail.com,Fri Apr 15 18:08:24 2011 +0200,1302883704,addReplyLongLong optimized to return shared objects when the value to reply is 0 or 1,6.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,867.0,42.0,14.927881944444444,3278.0,1.0669887398441116,631.0,Feature Addition,False,,
009db6764504746d64fef7e6ccf661f7882bd72e,22f294d24a1d56a655bdca69184e048e3ef49934,antirez,antirez@gmail.com,Fri Apr 15 18:08:32 2011 +0200,1302883712,variadic SADD,9.0,8.0,"src/redis.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,7.0,1172.0,122.0,29.124982638888888,3279.5,8.743588172379516,633.0,Feature Addition,False,,
22f294d24a1d56a655bdca69184e048e3ef49934,271f08784264e25c3dbcd751f8c9ee1b1ad8306e,antirez,antirez@gmail.com,Fri Apr 15 18:28:25 2011 +0200,1302884905,Variadic SADD tests,7.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,334.0,10.0,203.30091435185184,3281.0,1.0049188170313357,89.0,Feature Addition,False,,
271f08784264e25c3dbcd751f8c9ee1b1ad8306e,64a13a36e685c318319a70b775f91f2c34bcc34f,antirez,antirez@gmail.com,Tue Apr 19 17:07:55 2011 +0200,1303225675,variadic HDEL with tests,21.0,7.0,"src/redis.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.235348017977726,7.0,886.6666666666665,129.0,96.66876543209877,3283.0,1.0882723646156978,90.0,Preventative,False,,
64a13a36e685c318319a70b775f91f2c34bcc34f,b3a96d454e9a4a7f8d88bb0e6f301427b5cfaa3e,antirez,antirez@gmail.com,Tue Apr 19 17:37:03 2011 +0200,1303227423,Variadic SREM,19.0,8.0,"src/redis.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.2183368243391808,7.0,895.3333333333335,136.0,2.65423225308642,3286.0,17.601201750666558,91.0,None,False,True,"[""3738ff5f32aaadd3074a691544caf2f2daa77928""]"
b3a96d454e9a4a7f8d88bb0e6f301427b5cfaa3e,c7ba7b8bbb97e8b9e388ec0e9a2ea161c23a3fd0,antirez,antirez@gmail.com,Wed Apr 20 12:51:03 2011 +0200,1303296663,"removed check for zmalloc return NULL in createClient(). The check was misplaced, and zmalloc never returns NULL.",0.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,872.0,43.0,4.779618055555557,3288.0,1.2092217387198243,638.0,Feature Addition,False,,
c7ba7b8bbb97e8b9e388ec0e9a2ea161c23a3fd0,17b24ff30d5c84c489a9793e35b7497519a878b9,antirez,antirez@gmail.com,Thu Apr 21 10:49:52 2011 +0200,1303375792,save peak memory usage as statistic and show it in INFO. Also a new INFO field was added showing the fragmentation ratio using the peak memory info.,17.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2974722489192897,7.0,1534.5,228.0,4.855671296296296,3289.5,1.3426521312918949,640.0,Feature Addition,False,,
17b24ff30d5c84c489a9793e35b7497519a878b9,3cd12b568776fcee3284ca692ad25e4ddce93c95,antirez,antirez@gmail.com,Thu Apr 21 15:38:02 2011 +0200,1303393082,CLIENT LIST implemented,64.0,2.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,1.0,1.0,1.4433689844479003,7.0,853.8333333333335,331.0,41.6141512345679,3293.5,1.0050502367905925,646.0,None,False,True,"[""c2dc172a9d9f76cacdad0a62f889a9bbd885ad58""]"
3cd12b568776fcee3284ca692ad25e4ddce93c95,b93fdb7bbb5b224efee06b36a12d454db975fed8,antirez,antirez@gmail.com,Thu Apr 21 15:47:47 2011 +0200,1303393667,CLIENT KILL implemented,24.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,917.0,45.0,0.006770833333333334,3297.0,148.69230769230768,647.0,None,False,,
b93fdb7bbb5b224efee06b36a12d454db975fed8,7e79dd3f4cf7a4236319f9ee1a408155eda4b881,antirez,antirez@gmail.com,Thu Apr 21 16:56:31 2011 +0200,1303397791,peak fragmentation ratio removed as it is a confusing field for users and trivial to compute at hand now that there is peak memory information in INFO output,0.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1899.0,113.0,0.054502314814814816,3298.0,19.34784455298365,648.0,None,False,,
7e79dd3f4cf7a4236319f9ee1a408155eda4b881,d8b6ae3cd6ac9cfab51696b9b35d3c70fa2d55ba,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 22 09:37:28 2011 +0200,1303457848,Reformat AOF tests,29.0,25.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,82.0,5.0,304.3956018518518,812.0,1.0032851985834101,152.0,Preventative,False,,
d8b6ae3cd6ac9cfab51696b9b35d3c70fa2d55ba,45b0f6fb14f2a0d5bca0b4e32cb44a31e29aa921,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 22 09:44:06 2011 +0200,1303458246,Use correct argc/argv for cleanup when loading AOF,23.0,3.0,"src/aof.c,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8904916402194913,7.0,384.0,31.0,7.86583912037037,813.5,1.063575318246372,153.0,Perfective,False,True,"[""f8ba3b566890f994aec4d0fb1a14d4a8851955e1"", ""de663966c64e9f27e667ad6a0dacf66aaa8ad32e"", ""9f40c25a0848d502967ca124b48b3c87bbce0106""]"
45b0f6fb14f2a0d5bca0b4e32cb44a31e29aa921,c772d9c6e7a4b65075c6efd15a53e84bb3c7ba3f,antirez,antirez@gmail.com,Thu Apr 28 19:00:33 2011 +0200,1304010033,"take a hashslot -> keys index, will be used for cluster rehasing",73.0,29.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",4.0,1.0,1.0,1.3159382533079886,7.0,1370.0,239.0,18.647835648148146,3300.5,1.029961548213744,652.0,None,False,,
c772d9c6e7a4b65075c6efd15a53e84bb3c7ba3f,d37299e3b737addf5a2f6cd1ea47afabdf98730c,antirez,antirez@gmail.com,Fri Apr 29 14:18:16 2011 +0200,1304079496,Fixed a bug with replication where SLAVEOF NO ONE caused a slave to close the connection with its slaves,10.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,938.0,46.0,7.937835648148146,3303.0,1.1259789247757097,653.0,Corrective,True,True,"[""179e54d2a9c6545d6f102bf9a3f9506175639743""]"
d37299e3b737addf5a2f6cd1ea47afabdf98730c,1eb713a4c1e601bfc86963f7eab3fe36a0a65b17,antirez,antirez@gmail.com,Fri Apr 29 14:31:18 2011 +0200,1304080278,CLUSTER KEYSLOT command,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1564.0,21.0,0.8130208333333333,3304.0,2.2299807815502883,654.0,None,False,,
1eb713a4c1e601bfc86963f7eab3fe36a0a65b17,484354ff95e6e1b93552ef9576422709a1c739c2,antirez,antirez@gmail.com,Fri Apr 29 16:17:58 2011 +0200,1304086678,CLUSTER GETKEYSINSLOT implemented,29.0,3.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.079439161649138,7.0,1168.0,191.0,0.616087962962963,3306.0,6.027149354764856,657.0,None,False,,
484354ff95e6e1b93552ef9576422709a1c739c2,2f52dac9effe41f79e502c2c8fb78181c874a704,antirez,antirez@gmail.com,Fri Apr 29 17:34:03 2011 +0200,1304091243,CLUSTER subcommands to set slots in migrating or importing state. Still a work in progress...,39.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1589.0,23.0,0.05283564814814815,3308.0,19.92661555312158,658.0,None,False,True,"[""a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618"", ""2cdf4cc656cd74aa7c29360b13cf07d3e0e72afb""]"
c772d9c6e7a4b65075c6efd15a53e84bb3c7ba3f,5cbe90dbfd5d9f46f5fa42e4e96a40a46d29b234,antirez,antirez@gmail.com,Sun May 1 15:36:47 2011 +0200,1304257007,Fixed a problem with string2ll(),4.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,340.0,4.0,51.93078703703704,3309.0,1.019256399855577,659.0,Corrective,True,,
5cbe90dbfd5d9f46f5fa42e4e96a40a46d29b234 2f52dac9effe41f79e502c2c8fb78181c874a704,74a640492fe2547ff6737d598b32896840c2bd1d,antirez,antirez@gmail.com,Sun May 1 15:38:59 2011 +0200,1304257139,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
74a640492fe2547ff6737d598b32896840c2bd1d,66f2517feb78574cf0decb5669beb03245a1d72d,antirez,antirez@gmail.com,Mon May 2 19:04:33 2011 +0200,1304355873,render migrating and importing slots in cluster nodes info,16.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1626.0,24.0,3.0628472222222216,3310.0,1.326493594830518,660.0,None,False,,
66f2517feb78574cf0decb5669beb03245a1d72d,0ba2932298e3e432f32441ebc5d95a86158d706c,antirez,antirez@gmail.com,Wed May 4 09:31:37 2011 +0200,1304494297,CLUSTER SETSLOT implemented,27.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1642.0,25.0,1.6021296296296297,3311.0,1.6241692192105417,661.0,None,False,,
0ba2932298e3e432f32441ebc5d95a86158d706c,0d8f1ac359e2c4d87a1417a9b8bc6bc7a093d1ac,antirez,antirez@gmail.com,Tue May 3 23:32:37 2011 +0200,1304458357,initial pretty printing in makefile,2.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,181.0,25.0,20.523796296296297,3312.0,1.0487239293142108,662.0,Feature Addition,False,,
0d8f1ac359e2c4d87a1417a9b8bc6bc7a093d1ac,35845afba07982407c7ce35dc5df5a70e21cb4f0,antirez,antirez@gmail.com,Wed May 4 10:17:05 2011 +0200,1304497025,Better pretty printed makefile output,28.0,11.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,182.0,26.0,0.4475462962962963,3313.0,3.234405710147926,663.0,Perfective,False,,
35845afba07982407c7ce35dc5df5a70e21cb4f0,a5dce40726757a6679b534a5f8456120ff974483,antirez,antirez@metal.(none),Wed May 4 10:30:22 2011 +0200,1304497822,if /dev/urandom is not available use rand() to get a random node name,4.0,6.0,"src/cluster.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,7.0,1845.0,79.0,2.8432523148148148,3314.5,13.343246625051243,665.0,None,False,,
a5dce40726757a6679b534a5f8456120ff974483,eda827f8b71b81a1170f5524c52bea7db249eb58,antirez,antirez@gmail.com,Thu May 5 11:13:21 2011 +0200,1304586801,cluster import/export of hash slots implemented in the query redirection engine,60.0,23.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6177238554644999,7.0,1586.666666666667,262.0,6.86,3317.0,1.362404237840831,668.0,None,False,True,"[""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""7371d5e2489e355e2209db157cc774a8dc1be9f4"", ""e15e518a674ce75ada1badb3e4fe11c18c255016""]"
eda827f8b71b81a1170f5524c52bea7db249eb58,b7d3bf51575525c0475a13941d8eb44f4800b9cd,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 5 14:55:51 2011 +0200,1304600151,Fix ziplist regression and update stresser,34.0,31.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1332.0,14.0,52.819375,815.0,1.018932446663748,325.0,Corrective,True,True,"[""56538477143b144f2267ce98805a7b6edc763528""]"
b7d3bf51575525c0475a13941d8eb44f4800b9cd,5af302011c80076447403b454c781cf210d1d715,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 18 21:09:12 2011 +0200,1303153752,Use custom string2ll and strchr,18.0,19.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,944.0,47.0,-10.714629629629627,816.0,0.9066696624552792,326.0,None,False,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d""]"
5af302011c80076447403b454c781cf210d1d715,9703b1b3dc59aa76a314373fff748e26bdd0466f,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Apr 19 23:07:36 2011 +0200,1303247256,Update hiredis,1187.0,179.0,"deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/dict.c,CAS_DELIMITER,deps/hiredis/dict.h,CAS_DELIMITER,deps/hiredis/example.c,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",15.0,1.0,1.0,2.9851300874079887,7.0,249.13333333333333,41.0,116.07820679012345,824.0,1.0019544404813838,84.0,None,False,,
9703b1b3dc59aa76a314373fff748e26bdd0466f,ded614f803f56ad979da76485e74732ecdcc57fd,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Apr 19 23:10:45 2011 +0200,1303247445,Inline sdslen and sdsavail (thanks to @bitbckt),11.0,11.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.9940302114769564,7.0,359.5,21.0,12.427581018518515,832.5,1.0603496367380276,328.0,None,False,,
ded614f803f56ad979da76485e74732ecdcc57fd,5282562117565c54ecf3153901a80a244a0577ba,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Apr 19 23:54:43 2011 +0200,1303250083,More allocators,23.0,2.0,"src/Makefile,CAS_DELIMITER,src/config.h,CAS_DELIMITER",2.0,1.0,1.0,0.8554508105601307,7.0,157.0,34.0,13.416388888888884,834.5,0.9839891712397868,330.0,None,False,,
5282562117565c54ecf3153901a80a244a0577ba,af0e51f2e15bc9c63d11229e64ce7884e1a1402a,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 13:16:23 2011 +0200,1303902983,Move code,7.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,943.0,48.0,8.671655092592593,836.0,1.1153182396350392,331.0,None,False,,
af0e51f2e15bc9c63d11229e64ce7884e1a1402a,5d08193126df54405dae3073c62b7c19ae03d1a4,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 13:24:52 2011 +0200,1303903492,Tests for string2ll; move isObject* to object.c,152.0,52.0,"src/Makefile,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",5.0,1.0,1.0,1.0942898244815775,7.0,442.4,181.0,3.2885416666666663,839.0,1.0675442129356216,336.0,Preventative,False,,
5d08193126df54405dae3073c62b7c19ae03d1a4,edf23aff0e316908b5d4ed1f2b21800865c6f7bf,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 13:30:32 2011 +0200,1303903832,Use string2ll in ziplist code (faster),2.0,16.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1335.0,15.0,-8.059247685185188,842.0,0.8759189394516019,337.0,None,False,,
edf23aff0e316908b5d4ed1f2b21800865c6f7bf,32f99c5128fc46d5f4d40acbb65d204620432d0a,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 13:35:49 2011 +0200,1303904149,Show memory allocator in INFO output,9.0,7.0,"src/config.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,1010.5,123.0,-0.16542824074074058,843.5,-0.445180892632064,339.0,None,False,True,"[""fec5a664f8ce7a1e0f687d07079aa09230fa5846""]"
32f99c5128fc46d5f4d40acbb65d204620432d0a,bf9fd5ffa248ac8a9c577eb2fc7fb6cd8a445113,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 14:29:27 2011 +0200,1303907367,Check for n after finding r,25.0,21.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,944.0,49.0,0.05074074074074074,845.0,20.708029197080293,340.0,None,False,True,"[""11e0c4c55b8edd8d2226ba2e5fde989778695195""]"
bf9fd5ffa248ac8a9c577eb2fc7fb6cd8a445113,c040cbd6252b493456ca910d7b1d1cf4122959d4,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 14:32:56 2011 +0200,1303907576,Check seplen and len before malloc'ing tokens,7.0,5.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,630.0,15.0,7.640405092592593,846.0,1.1308831125943184,341.0,None,False,,
c040cbd6252b493456ca910d7b1d1cf4122959d4,3edbcab95a2d5cec861ac28cbdb638ea25d22bb9,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Apr 27 14:38:58 2011 +0200,1303907938,Extra tests for string2ll,8.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,432.0,6.0,0.051458333333333335,847.0,20.4331983805668,342.0,Preventative,False,,
3edbcab95a2d5cec861ac28cbdb638ea25d22bb9,0276e5545c78490613871939d48989090a54c2c9,antirez,antirez@gmail.com,Thu May 5 17:50:14 2011 +0200,1304610614,Fixed problem in cluster redirection due to a stupid typo,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1699.0,28.0,0.2756134259259259,3319.0,4.62827027254021,669.0,Corrective,True,,
0276e5545c78490613871939d48989090a54c2c9,4763ecc9add311467c9c3852a81664a0b3005919,antirez,antirez@gmail.com,Thu May 5 17:52:19 2011 +0200,1304610739,missing return caused protocol desync in CLUSTER SETSLOT,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1699.0,29.0,0.0014467592592592592,3320.0,692.2,670.0,None,False,,
4763ecc9add311467c9c3852a81664a0b3005919,46834808fe31e7cbf08d6c9f7638a54c5c8bff8a,antirez,antirez@gmail.com,Thu May 5 17:56:12 2011 +0200,1304610972,CLUSTER SETSLOT STABLE fixed,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1700.0,30.0,0.0026967592592592594,3321.0,371.8154506437768,671.0,Corrective,True,,
46834808fe31e7cbf08d6c9f7638a54c5c8bff8a,a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618,antirez,antirez@gmail.com,Thu May 5 18:10:02 2011 +0200,1304611802,"Fixed semantics of CLUSTER SETSLOT, SELECT now only denied in cluster mode if selected DB is not 0 so that MIGRATE still works well.",10.0,5.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,7.0,1221.5,81.0,3.0437152777777774,3322.5,53.130329231687355,673.0,Corrective,True,,
a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618,f384df8302ccc6601f5833ae42e6b4664abd0ddc,antirez,antirez@gmail.com,Fri May 6 13:38:27 2011 +0200,1304681907,CLUSTER DELSLOTS,24.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1706.0,32.0,0.811400462962963,3324.0,2.232437058697668,674.0,None,False,,
f384df8302ccc6601f5833ae42e6b4664abd0ddc,f9cbdcb1a67e8903c976e588bbf24f0fe6bf2fac,antirez,antirez@gmail.com,Fri May 6 15:44:09 2011 +0200,1304689449,CLUSTER SETSLOT command and some refactoring of the cluster command,44.0,17.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1726.0,33.0,0.08729166666666667,3325.0,12.455847255369928,675.0,None,False,True,"[""d38d2fdfdcfc2390fd9b02f1016e5571faf1fc6e""]"
f9cbdcb1a67e8903c976e588bbf24f0fe6bf2fac,0caa75074875ca5c13274accdd032c90db93b3c1,antirez,antirez@gmail.com,Fri May 6 16:08:10 2011 +0200,1304690890,clear importing/exporing state when appropriate on SETSLOT or ADDSLOTS cluster commands,16.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1753.0,34.0,0.01667824074074074,3326.0,60.958362248438604,676.0,Feature Addition,False,,
0caa75074875ca5c13274accdd032c90db93b3c1,8905378c569ba16e8636bc47404c97b952240096,antirez,antirez@gmail.com,Fri May 6 16:23:14 2011 +0200,1304691794,Cluster TODO updated,11.0,0.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,72.0,159.0,23.030219907407414,3327.0,1.0434212093510389,1237.0,None,False,,
8905378c569ba16e8636bc47404c97b952240096,df541beae372f40e9ce82a0780171e7d7a8e67de,antirez,antirez@gmail.com,Sat May 7 11:47:34 2011 +0200,1304761654,when Redis fails accepting a new connection reports the error at WARNING and not VERBOSE error level. Thanks to offby1 for proposing this in the Redis mailing list. #backport-candidate,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,948.0,50.0,9.88758101851852,3328.0,1.101136971532986,677.0,Corrective,True,,
df541beae372f40e9ce82a0780171e7d7a8e67de,6901fe7729d31c07e8053d9fd29bde964050679c,antirez,antirez@gmail.com,Tue May 10 10:07:04 2011 +0200,1305014824,Useless statement removed,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,684.0,26.0,18.01594907407408,3329.0,1.0555063735964405,678.0,None,False,,
6901fe7729d31c07e8053d9fd29bde964050679c,f13cb0d9de088898cd879b3912ea3e3300fc9fdf,antirez,antirez@gmail.com,Tue May 10 10:08:01 2011 +0200,1305014881,DEBUG DIGEST additional lookup needed for VM removed from unstable branch that does not have VM at all,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,328.0,19.0,33.74368055555556,3330.0,1.0296351786034008,679.0,Corrective,True,,
f13cb0d9de088898cd879b3912ea3e3300fc9fdf,4b53e7365c647235bbb3909596a7defe50709b67,antirez,antirez@gmail.com,Tue May 10 10:15:50 2011 +0200,1305015350,Introduced a safe iterator interface that can be used to iterate while accessing the dictionary at the same time. Now the default interface is consireded unsafe and should be used only with dictNext(),21.0,7.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,7.0,432.0,10.0,137.91369212962962,3331.5,1.007499950427305,681.0,None,False,True,"[""4b1f6ad3e7a5c7c28618e43e7539c9a937bf8521"", ""48cde3fe4710b43be6537854ab464b8568616fb8"", ""064d5c96ac0545e2115edd7d4153433a99aaa707""]"
4b53e7365c647235bbb3909596a7defe50709b67,6b52ad87c05ca2162a2d21f1f5b5329bf52a7678,antirez,antirez@gmail.com,Tue May 10 11:31:37 2011 +0200,1305019897,"RDB version signature bumped to 2, now that direct saving of specially encoded types is implemented 2.2 instances are no longer able to read rdb files produced by 2.4 or unstable.",2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1010.0,37.0,33.78689814814815,3333.0,1.0295972715700394,682.0,None,False,,
b8513c9398c3ab169ca77999cd8212134f29dc9b 6b52ad87c05ca2162a2d21f1f5b5329bf52a7678,bfe85f7ca97259256e8089349e1a462b6c7dbd00,antirez,antirez@gmail.com,Tue May 10 14:05:59 2011 +0200,1305029159,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
6b52ad87c05ca2162a2d21f1f5b5329bf52a7678,defb5f66a090c614aa70aee9e1923ec571e0e911,antirez,antirez@gmail.com,Wed May 11 09:49:23 2011 +0200,1305100163,removed assert causing an illegal memory access. This was responsible of crashes during BLPOP and other list blocking operations.,0.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,965.0,29.0,25.718009259259247,3334.0,1.0388832584170553,683.0,Preventative,False,,
6b52ad87c05ca2162a2d21f1f5b5329bf52a7678,af9aed25e44cf6e0c38cee2d289c7c31f03fc01f,antirez,antirez@gmail.com,Thu May 12 20:20:25 2011 +0200,1305224425,"ZINTERSTORE regressiont test with two sets, intset+hashtable",7.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,689.0,19.0,36.168958333333336,3335.0,1.0276480176947314,92.0,Preventative,False,,
af9aed25e44cf6e0c38cee2d289c7c31f03fc01f defb5f66a090c614aa70aee9e1923ec571e0e911,06d22a8a8ac309be1c553e307afbf46d22020410,antirez,antirez@gmail.com,Thu May 12 20:21:00 2011 +0200,1305224460,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
06d22a8a8ac309be1c553e307afbf46d22020410,70bc5f7724364e93c63865c02d517bc0164274d9,antirez,antirez@gmail.com,Thu May 12 20:15:13 2011 +0200,1305224113,replication with expire test modified to produce no or less false failures,2.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,78.0,6.0,282.2753935185185,3336.0,1.0035426396454017,93.0,Corrective,True,True,"[""27fee630f509fcca03e97e4d9632e967c81e60b8"", ""569f84aa7cda1d47a27738906b1707741151521d""]"
70bc5f7724364e93c63865c02d517bc0164274d9,2e4b0e7727743cf03d25da0f535ecc02aad82d1f,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 13 17:31:00 2011 +0200,1305300660,Abstract file/buffer I/O to support in-memory serialization,374.0,282.0,"src/Makefile,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",8.0,1.0,1.0,2.2904526134722825,7.0,585.75,251.0,16.733440393518514,851.5,1.0191288452664151,350.0,None,False,True,"[""041d8e2a5c3b36ff4661fb0444ebc48d24a33541"", ""84e5684bca4c737fac6ccc00fd1fa5737ded2cb7"", ""2f62c9663ca48b647d71f21d0cdf499346457f0f"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""d3588dc1943277b698f4cad284c9f88dda8dd8fc"", ""f704360462640a88975eeb68fd80617921d7c97d"", ""60a4f12f8b998c44dfff0e88202b01598287390d"", ""b85aae78dfad8cf49b1056ee598c1846252a2ef3"", ""2a887bd53f992b940c7c9838a5dbdc2de1e3720a""]"
2e4b0e7727743cf03d25da0f535ecc02aad82d1f,f1d8e4968ec50d04eea81b95ebb755d3b3080cdf,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 13 22:14:39 2011 +0200,1305317679,Make RDB types/opcodes explicit; load/save object type,119.0,99.0,"src/cluster.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.7428200684366109,7.0,884.0,227.0,0.19697916666666668,858.0,3.3183500793231087,355.0,None,False,True,"[""51857c7e5cc6479323d53778e37a197f7c140fbf""]"
f1d8e4968ec50d04eea81b95ebb755d3b3080cdf,221782ccc69b4c56608942f3fe9e47773a32866e,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 13 23:24:19 2011 +0200,1305321859,Move rdbLoad* to top; update comments,233.0,234.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.7398711930277111,7.0,755.6666666666665,167.0,0.048379629629629634,862.0,13.63157894736842,358.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""b252fab06c5e3ccb739cdd27db5f5f0ddd03d506"", ""d8c7db1bdba3938f31856a067b2966285acbf97f"", ""df6644fe0e858e40ea61c576597c51ddc82feef9""]"
221782ccc69b4c56608942f3fe9e47773a32866e,fd535c58623852e480906311c48b136d3d2646bb,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 14 12:15:08 2011 +0200,1305368108,More rioRead(),2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1047.0,41.0,0.5352893518518519,864.0,2.868148500508118,359.0,None,False,,
fd535c58623852e480906311c48b136d3d2646bb,7271198cf0eb4714fba706605ab8170363012cfa,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 14 12:36:22 2011 +0200,1305369382,Use rio.h functions in aof.c,56.0,111.0,"src/aof.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",3.0,1.0,1.0,1.1431420228540068,7.0,663.0,156.0,16.811682098765434,866.0,1.1594644145271813,362.0,None,False,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
7271198cf0eb4714fba706605ab8170363012cfa,041d8e2a5c3b36ff4661fb0444ebc48d24a33541,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat May 14 12:47:42 2011 +0200,1305370062,Fix up rdbWriteRaw to return number of bytes written,2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1047.0,42.0,0.022615740740740745,868.0,45.21699078812691,363.0,Corrective,True,,
70bc5f7724364e93c63865c02d517bc0164274d9,dd1eefa4f3c89177cbe4f2e98dbd8f409ff87bc6,antirez,antirez@gmail.com,Sun May 15 12:15:54 2011 +0200,1305454554,Fixed SINTER[STORE] problem related to the new copy on write safe iterator,1.0,0.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,464.0,16.0,25.77697916666667,3337.0,1.038794305319265,684.0,Corrective,True,,
dd1eefa4f3c89177cbe4f2e98dbd8f409ff87bc6,d070abe44cdc63ece3533d06986629b5b5c21ca8,antirez,antirez@gmail.com,Sun May 15 15:33:01 2011 +0200,1305466381,Fix for a possible bug related to ZINTER/UNIONSTORE called with the same source set more than one time.,4.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2024.0,54.0,11.210173611111117,3338.0,1.0892046844848895,685.0,Corrective,True,,
d070abe44cdc63ece3533d06986629b5b5c21ca8,cb16b6c3899d0696a7e633c29f764e06b222b2fe,antirez,antirez@gmail.com,Sun May 15 17:28:06 2011 +0200,1305473286,Fixed misuse of the new iterator semantics in ZUNIONSTORE,8.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2027.0,55.0,0.07991898148148148,3339.0,13.512671976828385,686.0,Corrective,True,True,"[""d200342ac2730c27cd456a79cc9e8725eaf0c5c2""]"
bfe85f7ca97259256e8089349e1a462b6c7dbd00 cb16b6c3899d0696a7e633c29f764e06b222b2fe,19e84589304256f0581b056133c9cae6ea1e011b,antirez,antirez@gmail.com,Mon May 16 10:04:09 2011 +0200,1305533049,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
cb16b6c3899d0696a7e633c29f764e06b222b2fe,330c90b01848f0f7b945aafd0f36c1703adbfd7f,antirez,antirez@metal.(none),Mon May 16 17:20:27 2011 +0200,1305559227,fmacros in utils.c to avoid warning about strcasecmp(),2.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,440.0,7.0,19.112141203703704,3340.0,1.0523227611883808,687.0,None,False,,
19e84589304256f0581b056133c9cae6ea1e011b,38a154a9a6244826a8cb536347a60749cef2ee4a,antirez,antirez@gmail.com,Thu May 19 17:58:29 2011 +0200,1305820709,Fix for ZUNIONSTORE bug when there is an empty set among input sets. Regression test added.,9.0,1.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7219280948873623,7.0,1365.0,76.0,5.461267361111113,3341.5,1.1701210194349978,94.0,Corrective,True,,
330c90b01848f0f7b945aafd0f36c1703adbfd7f,521ddcce1483d1b8760a108fd5d7df0ae663799a,antirez,antirez@gmail.com,Thu May 19 17:58:29 2011 +0200,1305820709,Fix for ZUNIONSTORE bug when there is an empty set among input sets. Regression test added.,9.0,1.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7219280948873623,7.0,1369.0,78.0,0.0,3343.5,0.0,95.0,Corrective,True,,
521ddcce1483d1b8760a108fd5d7df0ae663799a,a3309139992de03f3e68ec648db188c1c43057a0,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu May 19 18:53:06 2011 +0200,1305823986,Non-blocking connect with master,56.0,32.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.5107878229540133,7.0,844.0,142.0,46.13157407407408,869.5,1.1004470422291184,365.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
330c90b01848f0f7b945aafd0f36c1703adbfd7f,206d62710c2cf35ae036f55d59c8a523ad22abd8,antirez,antirez@gmail.com,Fri May 20 11:44:09 2011 +0200,1305884649,Print version info before running the test,7.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/printver.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.5916727785823275,7.0,113.0,35.0,17.398697916666666,3345.5,1.0287377827004536,97.0,Preventative,False,,
206d62710c2cf35ae036f55d59c8a523ad22abd8 521ddcce1483d1b8760a108fd5d7df0ae663799a,6326c3ce73e1d35cb585c0551bba9ac07cfbc7c1,antirez,antirez@gmail.com,Fri May 20 11:45:05 2011 +0200,1305884705,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a3309139992de03f3e68ec648db188c1c43057a0,b075621fb7d8b44b10d849e8db6db9b2498056ad,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 22 12:41:24 2011 +0200,1306060884,Minor changes in non-blocking repl. connect,20.0,15.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.6609623351442085,7.0,856.0,144.0,2.741875,871.5,1.2735354456348302,367.0,None,False,True,"[""45029d37cb7fe589bdfd9a08dd5a3afd611ad57e"", ""bb66fc312036e444a950df27dd7cb2e3db6b4b05"", ""acc2336fd189ddf9e97b0fc589c43ae26a1fd153"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
b075621fb7d8b44b10d849e8db6db9b2498056ad,890a2ed989274cb09b5cde1def3935e110ec3cb9,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 22 12:57:30 2011 +0200,1306061850,Configurable synchronous I/O timeout,9.0,4.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.2389012566026307,7.0,1204.0,262.0,8.331917438271606,874.0,1.0400247057719785,370.0,None,False,True,"[""9157549fad46025548b6f500a0202d2720779524""]"
6326c3ce73e1d35cb585c0551bba9ac07cfbc7c1,d200342ac2730c27cd456a79cc9e8725eaf0c5c2,antirez,antirez@gmail.com,Tue May 24 10:35:48 2011 +0200,1306226148,Fixed typo in comment,2.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2034.0,58.0,4.692581018518519,3347.0,1.213102340919349,690.0,Corrective,True,,
d200342ac2730c27cd456a79cc9e8725eaf0c5c2,27fee630f509fcca03e97e4d9632e967c81e60b8,antirez,antirez@gmail.com,Tue May 24 10:43:19 2011 +0200,1306226599,Comment typo fixed,1.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,80.0,7.0,11.602847222222225,3348.0,1.0861857422447794,98.0,Corrective,True,True,"[""569f84aa7cda1d47a27738906b1707741151521d""]"
27fee630f509fcca03e97e4d9632e967c81e60b8,efc3408748061a08ec5ff18e392c30f31f5094a2,antirez,antirez@gmail.com,Wed May 25 12:29:14 2011 +0200,1306319354,"Fix for Pub/Sub system, introduced in Redis 2.2.6 with the new copy-on-write safe iterator semantics. In the hope this is the last bug I introduced this way.",1.0,1.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,267.0,4.0,219.76378472222225,3349.0,1.0045503402722336,691.0,Corrective,True,,
efc3408748061a08ec5ff18e392c30f31f5094a2,21d3294c7013a4385aebd84436394bb58e273093,antirez,antirez@gmail.com,Sat Apr 30 16:15:30 2011 +0200,1304172930,makefile adapted to link against lua lib and to pass the 32bit flag to Lua building system,28464.0,2.0,"Makefile,CAS_DELIMITER,deps/lua/COPYRIGHT,CAS_DELIMITER,deps/lua/HISTORY,CAS_DELIMITER,deps/lua/INSTALL,CAS_DELIMITER,deps/lua/Makefile,CAS_DELIMITER,deps/lua/README,CAS_DELIMITER,deps/lua/doc/amazon.gif,CAS_DELIMITER,deps/lua/doc/contents.html,CAS_DELIMITER,deps/lua/doc/cover.png,CAS_DELIMITER,deps/lua/doc/logo.gif,CAS_DELIMITER,deps/lua/doc/lua.1,CAS_DELIMITER,deps/lua/doc/lua.css,CAS_DELIMITER,deps/lua/doc/lua.html,CAS_DELIMITER,deps/lua/doc/luac.1,CAS_DELIMITER,deps/lua/doc/luac.html,CAS_DELIMITER,deps/lua/doc/manual.css,CAS_DELIMITER,deps/lua/doc/manual.html,CAS_DELIMITER,deps/lua/doc/readme.html,CAS_DELIMITER,deps/lua/etc/Makefile,CAS_DELIMITER,deps/lua/etc/README,CAS_DELIMITER,deps/lua/etc/all.c,CAS_DELIMITER,deps/lua/etc/lua.hpp,CAS_DELIMITER,deps/lua/etc/lua.ico,CAS_DELIMITER,deps/lua/etc/lua.pc,CAS_DELIMITER,deps/lua/etc/luavs.bat,CAS_DELIMITER,deps/lua/etc/min.c,CAS_DELIMITER,deps/lua/etc/noparser.c,CAS_DELIMITER,deps/lua/etc/strict.lua,CAS_DELIMITER,deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/lapi.c,CAS_DELIMITER,deps/lua/src/lapi.h,CAS_DELIMITER,deps/lua/src/lauxlib.c,CAS_DELIMITER,deps/lua/src/lauxlib.h,CAS_DELIMITER,deps/lua/src/lbaselib.c,CAS_DELIMITER,deps/lua/src/lcode.c,CAS_DELIMITER,deps/lua/src/lcode.h,CAS_DELIMITER,deps/lua/src/ldblib.c,CAS_DELIMITER,deps/lua/src/ldebug.c,CAS_DELIMITER,deps/lua/src/ldebug.h,CAS_DELIMITER,deps/lua/src/ldo.c,CAS_DELIMITER,deps/lua/src/ldo.h,CAS_DELIMITER,deps/lua/src/ldump.c,CAS_DELIMITER,deps/lua/src/lfunc.c,CAS_DELIMITER,deps/lua/src/lfunc.h,CAS_DELIMITER,deps/lua/src/lgc.c,CAS_DELIMITER,deps/lua/src/lgc.h,CAS_DELIMITER,deps/lua/src/linit.c,CAS_DELIMITER,deps/lua/src/liolib.c,CAS_DELIMITER,deps/lua/src/llex.c,CAS_DELIMITER,deps/lua/src/llex.h,CAS_DELIMITER,deps/lua/src/llimits.h,CAS_DELIMITER,deps/lua/src/lmathlib.c,CAS_DELIMITER,deps/lua/src/lmem.c,CAS_DELIMITER,deps/lua/src/lmem.h,CAS_DELIMITER,deps/lua/src/loadlib.c,CAS_DELIMITER,deps/lua/src/lobject.c,CAS_DELIMITER,deps/lua/src/lobject.h,CAS_DELIMITER,deps/lua/src/lopcodes.c,CAS_DELIMITER,deps/lua/src/lopcodes.h,CAS_DELIMITER,deps/lua/src/loslib.c,CAS_DELIMITER,deps/lua/src/lparser.c,CAS_DELIMITER,deps/lua/src/lparser.h,CAS_DELIMITER,deps/lua/src/lstate.c,CAS_DELIMITER,deps/lua/src/lstate.h,CAS_DELIMITER,deps/lua/src/lstring.c,CAS_DELIMITER,deps/lua/src/lstring.h,CAS_DELIMITER,deps/lua/src/lstrlib.c,CAS_DELIMITER,deps/lua/src/ltable.c,CAS_DELIMITER,deps/lua/src/ltable.h,CAS_DELIMITER,deps/lua/src/ltablib.c,CAS_DELIMITER,deps/lua/src/ltm.c,CAS_DELIMITER,deps/lua/src/ltm.h,CAS_DELIMITER,deps/lua/src/lua.c,CAS_DELIMITER,deps/lua/src/lua.h,CAS_DELIMITER,deps/lua/src/luac.c,CAS_DELIMITER,deps/lua/src/luaconf.h,CAS_DELIMITER,deps/lua/src/lualib.h,CAS_DELIMITER,deps/lua/src/lundump.c,CAS_DELIMITER,deps/lua/src/lundump.h,CAS_DELIMITER,deps/lua/src/lvm.c,CAS_DELIMITER,deps/lua/src/lvm.h,CAS_DELIMITER,deps/lua/src/lzio.c,CAS_DELIMITER,deps/lua/src/lzio.h,CAS_DELIMITER,deps/lua/src/print.c,CAS_DELIMITER,deps/lua/test/README,CAS_DELIMITER,deps/lua/test/bisect.lua,CAS_DELIMITER,deps/lua/test/cf.lua,CAS_DELIMITER,deps/lua/test/echo.lua,CAS_DELIMITER,deps/lua/test/env.lua,CAS_DELIMITER,deps/lua/test/factorial.lua,CAS_DELIMITER,deps/lua/test/fib.lua,CAS_DELIMITER,deps/lua/test/fibfor.lua,CAS_DELIMITER,deps/lua/test/globals.lua,CAS_DELIMITER,deps/lua/test/hello.lua,CAS_DELIMITER,deps/lua/test/life.lua,CAS_DELIMITER,deps/lua/test/luac.lua,CAS_DELIMITER,deps/lua/test/printf.lua,CAS_DELIMITER,deps/lua/test/readonly.lua,CAS_DELIMITER,deps/lua/test/sieve.lua,CAS_DELIMITER,deps/lua/test/sort.lua,CAS_DELIMITER,deps/lua/test/table.lua,CAS_DELIMITER,deps/lua/test/trace-calls.lua,CAS_DELIMITER,deps/lua/test/trace-globals.lua,CAS_DELIMITER,deps/lua/test/xd.lua,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",105.0,3.0,7.0,4.796346380884693,7.0,2.2476190476190485,86.0,1.4472854938271604,3402.0,1.006064923850575,692.0,None,False,,
21d3294c7013a4385aebd84436394bb58e273093,7585836e6eb1c0199e8d9ea2c3f7a0f67b03c00b,antirez,antirez@gmail.com,Sat Apr 30 17:46:52 2011 +0200,1304178412,"Lua function creation on EVAL, basic Lua return type to Redis protocol convertion done.",111.0,3.0,"src/Makefile,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,1.0,1.0,0.7206795673749244,7.0,811.75,278.0,-10.883663194444445,3456.5,4.917180851378351,696.0,None,False,True,"[""379789cc523df4de1a3263c879114610949fade1"", ""497fc8775fd4b85289a6998bb4eaddbe657e6be7"", ""baee5650295e72fbcfe1f69ca7fa60f64cb5f740""]"
7585836e6eb1c0199e8d9ea2c3f7a0f67b03c00b,0f1d64ca577c8594e26b9e1663e49c8e1bc13757,antirez,antirez@gmail.com,Sat Apr 30 22:29:21 2011 +0200,1304195361,Lua call of Redis command work in progress: sorry I have to go to the cinema to watch the Source Code movie,73.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,0.9340426778547516,7.0,730.3333333333335,183.0,-2.053993055555556,3460.0,0.8426215946627251,699.0,None,False,True,"[""3791000f15ad793854fac48aa4840914970048db"", ""379789cc523df4de1a3263c879114610949fade1"", ""09ab5591fab7e347406252fe71eb3f4da6fe04bf""]"
0f1d64ca577c8594e26b9e1663e49c8e1bc13757,7156f43c040414494829a8dcd4a7be4c26d241d8,antirez,antirez@gmail.com,Sun May 1 03:12:53 2011 +0200,1304212373,"Correctly glue the reply buffer. For now returned as it is to Lua, but will be converted into Lua native type later.",9.0,3.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,0.8166890883150209,7.0,752.0,186.0,0.19689814814814813,3463.0,4.103691511873971,702.0,None,False,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9""]"
7156f43c040414494829a8dcd4a7be4c26d241d8,7b72272790268942b5f4f751c78ea6ed227b2bba,antirez,antirez@gmail.com,Sun May 1 03:27:40 2011 +0200,1304213260,"when creating not connected clients do not add them into the clients list, otherwise they will be subject to timeouts and other stuff",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,955.0,53.0,0.010266203703703704,3465.0,98.40698985343857,703.0,Feature Addition,False,,
7b72272790268942b5f4f751c78ea6ed227b2bba,00b7541b21f5d659a6fe650679c1f790fe6ea4b1,antirez,antirez@gmail.com,Sun May 1 12:49:02 2011 +0200,1304246942,function to access to Redis command from Lua renamed from r() to redis(),1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,162.0,3.0,0.40010416666666665,3466.0,3.499349127831294,704.0,None,False,,
00b7541b21f5d659a6fe650679c1f790fe6ea4b1,4ae5b5e1633caffeb513c98dfd5f12364491182b,antirez,antirez@gmail.com,Sun May 1 13:07:44 2011 +0200,1304248064,pupulate the Lua global tables KEYS and ARGV before executing the script,27.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,162.0,4.0,0.012986111111111113,3467.0,78.00534759358288,705.0,None,False,,
4ae5b5e1633caffeb513c98dfd5f12364491182b,532e0f5ded866881d46f0aeac3756ebd3a3da98e,antirez,antirez@gmail.com,Sun May 1 14:47:52 2011 +0200,1304254072,full conversion from Lua return value to redis reply. Partial conversion from Redis reply to Lua type.,116.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,189.0,5.0,0.06953703703703704,3468.0,15.380825565912115,706.0,None,False,True,"[""3791000f15ad793854fac48aa4840914970048db"", ""379789cc523df4de1a3263c879114610949fade1"", ""548efd91e5a33e1358213a902b8533d88f40f7cf"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""cf4700bda4929d8d952df16bdd3ca73019d15249""]"
532e0f5ded866881d46f0aeac3756ebd3a3da98e,3791000f15ad793854fac48aa4840914970048db,antirez,antirez@gmail.com,Sun May 1 15:26:47 2011 +0200,1304256407,Fixed arity detection of Redis command executed from Lua script. Error reporting from Lua fixed. More work on the Redis reply to lua conversion code.,54.0,3.0,"src/SCRIPTING.txt,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.3665780125533459,7.0,150.5,6.0,0.01351273148148148,3469.5,19.001070663811568,708.0,Corrective,True,True,"[""379789cc523df4de1a3263c879114610949fade1"", ""cf4700bda4929d8d952df16bdd3ca73019d15249""]"
3791000f15ad793854fac48aa4840914970048db,10a6da7af4bebad2b47a59d79609419aa98fae51,antirez,antirez@gmail.com,Sun May 1 15:48:26 2011 +0200,1304257706,Multi bulk to Lua table now working,1.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,348.0,7.0,0.015034722222222222,3471.0,67.51270207852194,709.0,None,False,,
10a6da7af4bebad2b47a59d79609419aa98fae51,67e829dce561a5b99766fb873367e248cde388ae,antirez,antirez@gmail.com,Sun May 1 15:50:33 2011 +0200,1304257833,Scripting todo list updated,2.0,1.0,"src/SCRIPTING.txt,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,4.0,1.0,0.016504629629629633,3472.0,61.5890603085554,710.0,None,False,,
67e829dce561a5b99766fb873367e248cde388ae,379789cc523df4de1a3263c879114610949fade1,antirez,antirez@gmail.com,Sun May 1 23:43:10 2011 +0200,1304286190,Fixed nul bulk parsing in Redis protocol to Lua type convertion. Check for bad Lua types as arguements of the redis() Lua command.,30.0,8.0,"src/SCRIPTING.txt,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.17556502585750278,7.0,175.5,10.0,0.3289409722222222,3473.5,3.2834481454876348,712.0,Corrective,True,,
379789cc523df4de1a3263c879114610949fade1,171ef6813d54882e4eebd018183f382f74db9102,antirez,antirez@gmail.com,Mon May 2 00:12:37 2011 +0200,1304287957,TODO updated,23.0,2.0,"src/SCRIPTING.txt,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,6.0,3.0,0.02045138888888889,3475.0,49.896434634974526,713.0,None,False,,
171ef6813d54882e4eebd018183f382f74db9102,497fc8775fd4b85289a6998bb4eaddbe657e6be7,antirez,antirez@gmail.com,Mon May 2 00:36:25 2011 +0200,1304289385,Eval command table fixed to return the keys arguments of the command. We use zunionInterGetKeys() as it ZUNION/ZINTER have exactly the same semantic with a prefixed number of keys followed by key names.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1898.0,118.0,1.2844097222222222,3476.0,1.7785677597253386,714.0,Corrective,True,,
497fc8775fd4b85289a6998bb4eaddbe657e6be7,e8092bf6014a34b04d1903b05f27915f38b09189,antirez,antirez@gmail.com,Mon May 2 00:44:02 2011 +0200,1304289842,Scripting doc updated,4.0,0.0,"src/SCRIPTING.txt,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,27.0,4.0,0.02181712962962963,3477.0,46.835543766578255,715.0,Non Functional,False,,
e8092bf6014a34b04d1903b05f27915f38b09189,0d916763afa44c2c6d5e28a4fe0f167197b00fc7,antirez,antirez@gmail.com,Mon May 2 10:08:26 2011 +0200,1304323706,Status replies converted in a special way like errors in the Lua <-> Redis conversion code.,18.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,367.0,9.0,0.43421296296296297,3478.0,3.3030173792515187,716.0,None,False,,
0d916763afa44c2c6d5e28a4fe0f167197b00fc7,09ab5591fab7e347406252fe71eb3f4da6fe04bf,antirez,antirez@gmail.com,Mon May 2 23:04:08 2011 +0200,1304370248,Fixed a problem in the script engine that crashed the server if the reply was not stored just int the static buffer of the client structure.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,382.0,10.0,0.5386805555555556,3479.0,2.8563877787804564,717.0,Corrective,True,,
09ab5591fab7e347406252fe71eb3f4da6fe04bf,c2a7dd85ae007f157da3a5bedf1392a23fc38bc4,antirez,antirez@gmail.com,Tue May 3 00:07:41 2011 +0200,1304374061,Lua scripting: Honor SELECT command in both ways,5.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,382.0,11.0,0.04413194444444445,3480.0,23.659323367427223,718.0,None,False,True,"[""baee5650295e72fbcfe1f69ca7fa60f64cb5f740"", ""96e0fe6232afabff501bc72d3978a157ead7f359""]"
c2a7dd85ae007f157da3a5bedf1392a23fc38bc4,40531be0e338556df5510f49f4472ea50713962f,antirez,antirez@gmail.com,Sat May 7 11:32:37 2011 +0200,1304760757,call lua_gc() for incremental garbage collection. Likely there is to tune this at some point.,2.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,387.0,12.0,4.4756481481481485,3481.0,1.2234313258994145,719.0,None,False,True,"[""baee5650295e72fbcfe1f69ca7fa60f64cb5f740""]"
40531be0e338556df5510f49f4472ea50713962f,8c3402dffaa52f54da5f560ca6dde036052828b1,antirez,antirez@gmail.com,Sat May 7 11:40:29 2011 +0200,1304761229,Lua memory usage in INFO,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1898.0,119.0,5.461157407407407,3482.0,1.1831113673163165,720.0,None,False,,
8c3402dffaa52f54da5f560ca6dde036052828b1,eeffcf380fcd3e3a0b2f650e24df8338a529642d,antirez,antirez@gmail.com,Fri May 6 17:21:27 2011 +0200,1304695287,Lua scripts max execution time,41.0,0.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,2.0,2.0,1.9541603972113688,7.0,892.2,355.0,18.19786574074074,3485.0,1.0124427531791325,724.0,None,False,True,"[""87c219243c42b826da98cb8ad832785a5f569dca"", ""da386cdf337a79b6734b58d3c5e426741e49c043""]"
eeffcf380fcd3e3a0b2f650e24df8338a529642d,bcc72bc38101e60a6e6a08d70038d7bc8307233f,antirez,antirez@gmail.com,Fri May 6 17:25:19 2011 +0200,1304695519,call the Lua hook with minor frequency. It is already enough to call it every 100000 istructions for near millisecond precision.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,407.0,14.0,0.002685185185185185,3488.0,373.4137931034483,725.0,None,False,True,"[""da386cdf337a79b6734b58d3c5e426741e49c043""]"
bcc72bc38101e60a6e6a08d70038d7bc8307233f,87c219243c42b826da98cb8ad832785a5f569dca,antirez,antirez@gmail.com,Fri May 6 17:30:54 2011 +0200,1304695854,Lua max exec time fixes: redisLog() to log the event moved before the lua_error() call that does a long jump so never returns. Aesthetic fixes in error message.,2.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,407.0,15.0,0.0038773148148148148,3489.0,258.910447761194,726.0,Corrective,True,,
87c219243c42b826da98cb8ad832785a5f569dca,da386cdf337a79b6734b58d3c5e426741e49c043,antirez,antirez@gmail.com,Fri May 6 17:37:03 2011 +0200,1304696223,for performance reasons only set the debug hook if the time limit is enabled.,11.0,6.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,407.0,16.0,0.004270833333333333,3490.0,235.14634146341461,727.0,Corrective,True,True,"[""0ad10db22098ef1555236719743e02da7cb85e00"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""c494db89b5c2ef34758f599ee46ac7265782ad77""]"
da386cdf337a79b6734b58d3c5e426741e49c043,82c6b8257a5f465aa257160930572c0ef257e5a8,antirez,antirez@gmail.com,Fri May 13 16:42:43 2011 +0200,1305297763,"Now it is possible to return multi bulks of multi bulks from Lua, just returning tables of tables. The new conversion of the Null bulk and multi bulk type is the Lua false type.",8.0,16.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,412.0,17.0,6.962268518518517,3491.0,1.1436313462113907,728.0,Feature Addition,False,,
82c6b8257a5f465aa257160930572c0ef257e5a8,7229d60d0356e94f553623e0492f636687ac39e6,antirez,antirez@gmail.com,Fri May 13 22:02:38 2011 +0200,1305316958,EVALSHA implemented,48.0,6.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,0.7465842066963784,7.0,1151.6666666666667,273.0,4.870898919753087,3493.0,1.0923013449018557,731.0,None,False,True,"[""e8c993f0fb0cfc29d953b710fd807ea8eb392b89"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""c494db89b5c2ef34758f599ee46ac7265782ad77""]"
7229d60d0356e94f553623e0492f636687ac39e6,288f811feacdd6b26c2263e7b9fcfabaa051a1ec,antirez,antirez@gmail.com,Mon May 16 18:32:03 2011 +0200,1305563523,All commands exported by Redis to Lua scripts are now inside the redis table. Implemented redis.log() function.,65.0,1.0,"src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.11327430349709673,7.0,796.5,154.0,2.8537615740740736,3495.5,1.262811023462373,733.0,None,False,True,"[""e927a246108e78dfaf6e02d604a674234e5116d3""]"
288f811feacdd6b26c2263e7b9fcfabaa051a1ec,e927a246108e78dfaf6e02d604a674234e5116d3,antirez,antirez@gmail.com,Mon May 16 18:36:07 2011 +0200,1305563767,Fix for wrong error level detection in redis.log(),2.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,505.0,20.0,0.002824074074074074,3497.0,355.09836065573774,734.0,Corrective,True,,
e927a246108e78dfaf6e02d604a674234e5116d3,449286a588c820ca1a120c2e9e8c57c1a31345a2,antirez,antirez@gmail.com,Tue May 24 18:40:37 2011 +0200,1306255237,Scripting tests added,127.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.06634397526831169,7.0,113.5,36.0,2.1446064814814814,3498.5,1.2331430051701622,100.0,Feature Addition,False,True,"[""e8c993f0fb0cfc29d953b710fd807ea8eb392b89"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""96e0fe6232afabff501bc72d3978a157ead7f359"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
449286a588c820ca1a120c2e9e8c57c1a31345a2,3bb818df405e667087fe3336cd91159790f63981,antirez,antirez@gmail.com,Tue May 24 19:43:11 2011 +0200,1306258991,"Make sure error and status replies emitted by Lua scripts can never have more than a newline, otherwise it is a protocol violation and clients will desync.",39.0,4.0,"src/networking.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",4.0,1.0,1.0,1.5492191860423676,7.0,545.25,99.0,23.44883101851852,3501.5,1.0253460559858307,738.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
38a154a9a6244826a8cb536347a60749cef2ee4a efc3408748061a08ec5ff18e392c30f31f5094a2,e4f6b8c327eb8e1444b51ced96e59dc5e7294cf8,antirez,antirez@gmail.com,Wed May 25 12:33:25 2011 +0200,1306319605,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
efc3408748061a08ec5ff18e392c30f31f5094a2,a45f9a1a1d4c3bc419beeba09d9aae9b2d5b1433,antirez,antirez@gmail.com,Sat May 28 15:04:12 2011 +0200,1306587852,"redis-cli no longer aborts in repl-mode on error, and retries to reconncet with the server at every command issued if the state is not connected. Also the prompt shows the server we are connected to.",17.0,14.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,767.0,47.0,36.97650462962963,3504.0,1.0270442003649716,739.0,None,False,True,"[""a5bd08487ff22156cbaae9286ab8820172b35df7""]"
a45f9a1a1d4c3bc419beeba09d9aae9b2d5b1433,4d19e3443cc3a36bd51684099152d89e18c45afa,antirez,antirez@gmail.com,Sat May 28 15:13:55 2011 +0200,1306588435,"redis-cli in REPL mode is now able to send the same command multiple times, prefixing the command with a number as in 10 ping",13.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,770.0,48.0,0.0067476851851851856,3505.0,149.19897084048026,740.0,Corrective,True,True,"[""aee7f99760ec3a8d7250789f60751245c0e349e0"", ""04607b53500f71498a502ffcfc41a82792013e2b""]"
4d19e3443cc3a36bd51684099152d89e18c45afa,442c748d841bb3603ba1194527ca9da6a1b3cd21,antirez,antirez@gmail.com,Sat May 28 15:25:48 2011 +0200,1306589148,redis-cli: Use the repetiton prefix after a reconnection.,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,780.0,49.0,0.008252314814814816,3506.0,122.1781206171108,741.0,None,False,,
442c748d841bb3603ba1194527ca9da6a1b3cd21,18f63d8d5197677a4049a372bf657e9fdaf0e890,antirez,antirez@gmail.com,Sat May 28 15:41:08 2011 +0200,1306590068,"redis-cli: -i (interval) implemented, to wait the specified number of seconds (decimal digits are allowed) between commands.",11.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,781.0,50.0,0.010648148148148148,3507.0,94.91304347826087,742.0,None,False,,
18f63d8d5197677a4049a372bf657e9fdaf0e890 890a2ed989274cb09b5cde1def3935e110ec3cb9,43222f253a60b8949d761bd3ef36cb061a3a4a3e,antirez,antirez@gmail.com,Sun May 29 14:26:01 2011 +0200,1306671961,Merge remote branch 'pietern/unstable-replnonblock' into unstable,,,,,,,,,,,,,,,Merge,False,,
43222f253a60b8949d761bd3ef36cb061a3a4a3e,615e414c5d9add3c0445d28b6d7ca62905dc8cd8,antirez,antirez@gmail.com,Sun May 29 15:17:29 2011 +0200,1306675049,INFO now contains the time (in usecs) needed to fork() in order to persist. The info is available in the stats section of INFO.,13.0,3.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.7489992230622806,7.0,1201.0,329.0,14.699858217592592,3509.5,1.0345113257865364,746.0,None,False,,
615e414c5d9add3c0445d28b6d7ca62905dc8cd8,632e4c09acad87b999dd944413ac5b75207de571,Pieter Noordhuis,pcnoordhuis@gmail.com,Sun May 29 17:55:13 2011 -0700,1306716913,Make replication faster (biggest gain for small number of slaves),6.0,36.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.1623261801753929,7.0,869.0,155.0,4.0331423611111115,876.5,2.0938992667285508,372.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
632e4c09acad87b999dd944413ac5b75207de571,ef231a7c56cafc42ff486b91d88ae7ec642a2117,antirez,antirez@gmail.com,Tue May 31 17:47:34 2011 +0200,1306856854,Variadic ZADD,98.0,86.0,"src/redis.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.08650421412134597,7.0,1970.5,182.0,4.70203125,3512.5,1.2907857381983658,748.0,Feature Addition,False,,
ef231a7c56cafc42ff486b91d88ae7ec642a2117,3fe40d6e3ce724de842bf690b3f5eebaf69fafa2,antirez,antirez@gmail.com,Tue May 31 18:35:09 2011 +0200,1306859709,Variadic ZADD tests,7.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,228.0,37.0,6.996203703703704,3514.0,1.1429346603316612,101.0,Feature Addition,False,,
3fe40d6e3ce724de842bf690b3f5eebaf69fafa2,faa2a80f89b5a3cd35812e71893d812e2877ed2e,antirez,antirez@gmail.com,Tue May 31 18:49:12 2011 +0200,1306860552,"disabled development test entry, tests moved in the right place",29.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.35335933502142136,7.0,473.5,60.0,6.022488425925926,3515.5,52.28706268161482,103.0,Preventative,False,,
faa2a80f89b5a3cd35812e71893d812e2877ed2e,3738ff5f32aaadd3074a691544caf2f2daa77928,antirez,antirez@gmail.com,Tue May 31 20:14:29 2011 +0200,1306865669,Fix for the variadic version of SREM. Regression test added.,10.0,1.0,"src/t_set.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9940302114769564,7.0,407.0,29.0,29.220839120370368,3517.5,1.039169626876393,104.0,Corrective,True,,
3738ff5f32aaadd3074a691544caf2f2daa77928,3f7b2b1f300e6d0441f420fcb51c253b10631cfa,antirez,antirez@gmail.com,Tue May 31 20:15:18 2011 +0200,1306865718,Variadic ZREM,33.0,24.0,"src/redis.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.2192973081321754,7.0,1976.5,184.0,0.1025925925925926,3519.5,8.310469314079423,751.0,None,False,,
3f7b2b1f300e6d0441f420fcb51c253b10631cfa,b002546bb4f543dd4d82e06037ada1bd7c036aec,antirez,antirez@gmail.com,Tue May 31 20:30:54 2011 +0200,1306866654,ZREM tests,15.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,740.0,23.0,0.070625,3521.0,15.15929203539823,105.0,Preventative,False,,
b002546bb4f543dd4d82e06037ada1bd7c036aec,fc05e8c850824d511ddbeee6eacd5ba187176447,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue May 31 17:15:42 2011 -0700,1306887342,More const's in redis-benchmark.c,11.0,11.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,530.0,18.0,127.63194444444444,878.0,1.0078350291093094,373.0,None,False,,
fc05e8c850824d511ddbeee6eacd5ba187176447,39bf440243d18afbc764f6a637d7138eeeb37372,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue May 31 17:19:11 2011 -0700,1306887551,Provide custom command to benchmark against via args,90.0,52.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,530.0,19.0,0.0024189814814814816,879.0,414.39712918660285,374.0,None,False,True,"[""294cd536e0aeedd3d6f63f947a67bd2c08d04805"", ""fa97ef34ca5899ef482c543d7122a41fba8e4509""]"
39bf440243d18afbc764f6a637d7138eeeb37372,294cd536e0aeedd3d6f63f947a67bd2c08d04805,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue May 31 17:38:39 2011 -0700,1306888719,There is no debug mode in benchmark tool,1.0,6.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,568.0,20.0,0.013518518518518518,880.0,74.97260273972603,375.0,Corrective,True,,
b002546bb4f543dd4d82e06037ada1bd7c036aec,936c4ab64bde3c781e965a7e68b154bbd8891e6e,antirez,antirez@metal.(none),Thu Jun 2 17:41:42 2011 +0200,1307029302,touch less pages in decrRefCount,3.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,467.0,27.0,36.17835648148147,3522.0,1.0276408354954396,752.0,None,False,,
efc3408748061a08ec5ff18e392c30f31f5094a2,06e09c9b586d0e2c5d91dc596f871be56c6e0971,antirez,antirez@gmail.com,Sun Jun 5 20:50:22 2011 +0200,1307299822,no more html documentation,0.0,7467.0,"doc/AppendCommand.html,CAS_DELIMITER,doc/AppendOnlyFileHowto.html,CAS_DELIMITER,doc/AuthCommand.html,CAS_DELIMITER,doc/Benchmarks.html,CAS_DELIMITER,doc/BgrewriteaofCommand.html,CAS_DELIMITER,doc/BgsaveCommand.html,CAS_DELIMITER,doc/BlpopCommand.html,CAS_DELIMITER,doc/BrpoplpushCommand.html,CAS_DELIMITER,doc/CommandReference.html,CAS_DELIMITER,doc/Comparisons.html,CAS_DELIMITER,doc/ConfigCommand.html,CAS_DELIMITER,doc/Configuration.html,CAS_DELIMITER,doc/ConnectionHandlingSidebar.html,CAS_DELIMITER,doc/ControlCommandsSidebar.html,CAS_DELIMITER,doc/Credits.html,CAS_DELIMITER,doc/DbsizeCommand.html,CAS_DELIMITER,doc/DelCommand.html,CAS_DELIMITER,doc/DesignPatterns.html,CAS_DELIMITER,doc/EventLibray.html,CAS_DELIMITER,doc/ExistsCommand.html,CAS_DELIMITER,doc/ExpireCommand.html,CAS_DELIMITER,doc/FAQ.html,CAS_DELIMITER,doc/Features.html,CAS_DELIMITER,doc/FlushallCommand.html,CAS_DELIMITER,doc/FlushdbCommand.html,CAS_DELIMITER,doc/FromSqlToDataStructures.html,CAS_DELIMITER,doc/GenericCommandsSidebar.html,CAS_DELIMITER,doc/GetCommand.html,CAS_DELIMITER,doc/GetbitCommand.html,CAS_DELIMITER,doc/GetsetCommand.html,CAS_DELIMITER,doc/HackingStrings.html,CAS_DELIMITER,doc/HashCommandsSidebar.html,CAS_DELIMITER,doc/Hashes.html,CAS_DELIMITER,doc/HdelCommand.html,CAS_DELIMITER,doc/HexistsCommand.html,CAS_DELIMITER,doc/HgetCommand.html,CAS_DELIMITER,doc/HgetallCommand.html,CAS_DELIMITER,doc/HincrbyCommand.html,CAS_DELIMITER,doc/HlenCommand.html,CAS_DELIMITER,doc/HmgetCommand.html,CAS_DELIMITER,doc/HmsetCommand.html,CAS_DELIMITER,doc/HsetCommand.html,CAS_DELIMITER,doc/HsetnxCommand.html,CAS_DELIMITER,doc/IncrCommand.html,CAS_DELIMITER,doc/InfoCommand.html,CAS_DELIMITER,doc/IntroductionToRedisDataTypes.html,CAS_DELIMITER,doc/KeysCommand.html,CAS_DELIMITER,doc/LastsaveCommand.html,CAS_DELIMITER,doc/LindexCommand.html,CAS_DELIMITER,doc/ListCommandsSidebar.html,CAS_DELIMITER,doc/Lists.html,CAS_DELIMITER,doc/LlenCommand.html,CAS_DELIMITER,doc/LpopCommand.html,CAS_DELIMITER,doc/LrangeCommand.html,CAS_DELIMITER,doc/LremCommand.html,CAS_DELIMITER,doc/LsetCommand.html,CAS_DELIMITER,doc/LtrimCommand.html,CAS_DELIMITER,doc/MgetCommand.html,CAS_DELIMITER,doc/MonitorCommand.html,CAS_DELIMITER,doc/MoveCommand.html,CAS_DELIMITER,doc/MsetCommand.html,CAS_DELIMITER,doc/MultiExecCommand.html,CAS_DELIMITER,doc/NonexistentCommands.html,CAS_DELIMITER,doc/ObjectHashMappers.html,CAS_DELIMITER,doc/Pipelining.html,CAS_DELIMITER,doc/ProgrammingExamples.html,CAS_DELIMITER,doc/ProtocolSpecification.html,CAS_DELIMITER,doc/PublishSubscribe.html,CAS_DELIMITER,doc/QuickStart.html,CAS_DELIMITER,doc/QuitCommand.html,CAS_DELIMITER,doc/README.html,CAS_DELIMITER,doc/RandomkeyCommand.html,CAS_DELIMITER,doc/Redis0100ChangeLog.html,CAS_DELIMITER,doc/Redis0900ChangeLog.html,CAS_DELIMITER,doc/RedisBigData.html,CAS_DELIMITER,doc/RedisCLI.html,CAS_DELIMITER,doc/RedisEventLibrary.html,CAS_DELIMITER,doc/RedisGuides.html,CAS_DELIMITER,doc/RedisInternals.html,CAS_DELIMITER,doc/RedisPipelining.html,CAS_DELIMITER,doc/RedisStatus.html,CAS_DELIMITER,doc/Redis_1_2_0_Changelog.html,CAS_DELIMITER,doc/Redis_2_0_0_Changelog.html,CAS_DELIMITER,doc/Redis_2_0_Whats_new.html,CAS_DELIMITER,doc/RenameCommand.html,CAS_DELIMITER,doc/RenamenxCommand.html,CAS_DELIMITER,doc/ReplicationHowto.html,CAS_DELIMITER,doc/ReplyTypes.html,CAS_DELIMITER,doc/RoadMap.html,CAS_DELIMITER,doc/RpoplpushCommand.html,CAS_DELIMITER,doc/RpushCommand.html,CAS_DELIMITER,doc/SaddCommand.html,CAS_DELIMITER,doc/SaveCommand.html,CAS_DELIMITER,doc/ScardCommand.html,CAS_DELIMITER,doc/SdiffCommand.html,CAS_DELIMITER,doc/SdiffstoreCommand.html,CAS_DELIMITER,doc/SelectCommand.html,CAS_DELIMITER,doc/SetCommand.html,CAS_DELIMITER,doc/SetCommandsSidebar.html,CAS_DELIMITER,doc/SetbitCommand.html,CAS_DELIMITER,doc/SetexCommand.html,CAS_DELIMITER,doc/SetnxCommand.html,CAS_DELIMITER,doc/SetrangeCommand.html,CAS_DELIMITER,doc/Sets.html,CAS_DELIMITER,doc/ShutdownCommand.html,CAS_DELIMITER,doc/SideBar.html,CAS_DELIMITER,doc/SinterCommand.html,CAS_DELIMITER,doc/SinterstoreCommand.html,CAS_DELIMITER,doc/SismemberCommand.html,CAS_DELIMITER,doc/SlaveofCommand.html,CAS_DELIMITER,doc/SmembersCommand.html,CAS_DELIMITER,doc/SmoveCommand.html,CAS_DELIMITER,doc/SortCommand.html,CAS_DELIMITER,doc/SortedSetCommandsSidebar.html,CAS_DELIMITER,doc/SortedSets.html,CAS_DELIMITER,doc/Speed.html,CAS_DELIMITER,doc/SponsorshipHistory.html,CAS_DELIMITER,doc/SpopCommand.html,CAS_DELIMITER,doc/SrandmemberCommand.html,CAS_DELIMITER,doc/SremCommand.html,CAS_DELIMITER,doc/StringCommandsSidebar.html,CAS_DELIMITER,doc/Strings.html,CAS_DELIMITER,doc/StrlenCommand.html,CAS_DELIMITER,doc/SubstrCommand.html,CAS_DELIMITER,doc/SunionCommand.html,CAS_DELIMITER,doc/SunionstoreCommand.html,CAS_DELIMITER,doc/SupportedLanguages.html,CAS_DELIMITER,doc/SupportedPlatforms.html,CAS_DELIMITER,doc/TemplateCommand.html,CAS_DELIMITER,doc/TtlCommand.html,CAS_DELIMITER,doc/TwitterAlikeExample.html,CAS_DELIMITER,doc/TypeCommand.html,CAS_DELIMITER,doc/UnstableSource.html,CAS_DELIMITER,doc/VirtualMemorySpecification.html,CAS_DELIMITER,doc/VirtualMemoryUserGuide.html,CAS_DELIMITER,doc/ZaddCommand.html,CAS_DELIMITER,doc/ZcardCommand.html,CAS_DELIMITER,doc/ZincrbyCommand.html,CAS_DELIMITER,doc/ZrangeCommand.html,CAS_DELIMITER,doc/ZrangebyscoreCommand.html,CAS_DELIMITER,doc/ZrankCommand.html,CAS_DELIMITER,doc/ZremCommand.html,CAS_DELIMITER,doc/ZremrangebyrankCommand.html,CAS_DELIMITER,doc/ZremrangebyscoreCommand.html,CAS_DELIMITER,doc/ZscoreCommand.html,CAS_DELIMITER,doc/ZunionCommand.html,CAS_DELIMITER,doc/ZunionstoreCommand.html,CAS_DELIMITER,doc/index.html,CAS_DELIMITER,doc/redis.png,CAS_DELIMITER,doc/style.css,CAS_DELIMITER",150.0,1.0,1.0,7.063460287135197,6.0,49.78,908.0,335.30605787037047,3597.5,1.000112139792796,1063.0,Non Functional,False,,
06e09c9b586d0e2c5d91dc596f871be56c6e0971,5daa1f060a048a9f57e8e5441438d3ba03510bdb,antirez,antirez@gmail.com,Sun Jun 5 20:51:07 2011 +0200,1307299867,no more client-libraries directory,0.0,11.0,"client-libraries/README,CAS_DELIMITER",1.0,1.0,1.0,0.0,2.0,11.0,10.0,103.06188657407408,3673.0,1.0097029079637627,359.0,None,False,,
5daa1f060a048a9f57e8e5441438d3ba03510bdb 936c4ab64bde3c781e965a7e68b154bbd8891e6e,cf1eefa4206b23327e38a144d8d20543307fdbe4,antirez,antirez@gmail.com,Sun Jun 5 20:51:49 2011 +0200,1307299909,Merge remote branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
e4f6b8c327eb8e1444b51ced96e59dc5e7294cf8 cf1eefa4206b23327e38a144d8d20543307fdbe4,fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,antirez,antirez@gmail.com,Tue Jun 7 17:01:45 2011 +0200,1307458905,Merge branch 'unstable',,,,,,,,,,,,,,,Merge,False,,
cf1eefa4206b23327e38a144d8d20543307fdbe4,73e718675b68f141054adf18eb3a70619d67406b,antirez,antirez@gmail.com,Wed Jun 8 17:09:18 2011 +0200,1307545758,"Better colorized Makefile implementation, inspired by git makefile",13.0,17.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,214.0,32.0,38.97391203703704,3674.0,1.0256581889713738,753.0,Perfective,False,,
73e718675b68f141054adf18eb3a70619d67406b,45029d37cb7fe589bdfd9a08dd5a3afd611ad57e,antirez,antirez@gmail.com,Thu Jun 9 15:35:07 2011 +0200,1307626507,Two fixes for replication: Slave performs the AOF rewrite at the right point. Non blocking connect also uses readable handler as with old Linux kernels like 2.6.18 on connection refused the writable even is not fired (kernel bug).,5.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,556.0,19.0,10.527708333333333,3675.0,1.0949874339540495,754.0,Corrective,True,True,"[""e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7"", ""bb66fc312036e444a950df27dd7cb2e3db6b4b05""]"
45029d37cb7fe589bdfd9a08dd5a3afd611ad57e,db6cea11c4164423c318ec2a4ad1c42a273feaaf,Hampus Wessman,hampus.wessman@gmail.com,Thu Jun 9 11:17:32 2011 +0200,1307611052,Fix Makefile colors.echo with escape sequences isn't portable. Use printf instead.n,4.0,4.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,210.0,33.0,0.7557175925925926,0.0,0.0,0.0,Corrective,True,,
db6cea11c4164423c318ec2a4ad1c42a273feaaf,b6c46d17a7cc5a59ae6f36fa3316fb495dae71b4,Pedro Melo,melo@simplicidade.org,Thu Jun 9 09:14:18 2011 -0700,1307636058,Small fix in the installation instructions,1.0,1.0,"INSTALL,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,30.0,2.0,269.04521990740744,5.0,1.0037168473030078,2.0,Corrective,True,,
db6cea11c4164423c318ec2a4ad1c42a273feaaf b6c46d17a7cc5a59ae6f36fa3316fb495dae71b4,00ba9b641c06725505079723e7e8e62b16514466,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 9 09:50:55 2011 -0700,1307638255,Merge pull request #57 from melo/patch-1Small fix in the installation instructions,,,,,,,,,,,,,,,Merge,False,,
936c4ab64bde3c781e965a7e68b154bbd8891e6e,b333e2399778e624174e00d123c2cb3785333e3d,antirez,antirez@gmail.com,Fri Jun 10 12:39:23 2011 +0200,1307702363,automatic AOF rewrite first implementation. Still to be tested.,97.0,8.0,"redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,2.259772476483466,7.0,976.1666666666664,427.0,19.079619984567906,3678.5,1.0152605822426006,759.0,Preventative,False,True,"[""4ff34b6adb9f5f9daad1f27e3aac8e016554b86c"", ""4f948300bc26abb0aaa99343bc9f089ea98a9abe"", ""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
b333e2399778e624174e00d123c2cb3785333e3d 00ba9b641c06725505079723e7e8e62b16514466,e087b6d7a145a6aabbb215405dddcf178e71aaa5,antirez,antirez@gmail.com,Fri Jun 10 12:39:40 2011 +0200,1307702380,Merge remote branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
e087b6d7a145a6aabbb215405dddcf178e71aaa5,e3d27a726162e9faefe2d6223caf3b459b7f94f7,antirez,antirez@gmail.com,Fri Jun 10 14:25:27 2011 +0200,1307708727,Avoid division by zero issues in the automatically triggered AOF rewrite feature.,3.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1932.0,126.0,0.07365740740740741,3682.0,14.576367064739154,760.0,None,False,True,"[""4f948300bc26abb0aaa99343bc9f089ea98a9abe"", ""11aaf523131d4f3aa4507043f46984854505bc28""]"
e3d27a726162e9faefe2d6223caf3b459b7f94f7 294cd536e0aeedd3d6f63f947a67bd2c08d04805,50528f0eea113508962b66e80d7cec7e9c5d92e9,antirez,antirez@gmail.com,Fri Jun 10 14:28:14 2011 +0200,1307708894,Merge remote branch 'pietern/unstable-bench' into unstable,,,,,,,,,,,,,,,Merge,False,,
50528f0eea113508962b66e80d7cec7e9c5d92e9,4ff34b6adb9f5f9daad1f27e3aac8e016554b86c,antirez,antirez@gmail.com,Fri Jun 10 14:43:11 2011 +0200,1307709791,AOF auto rewrite percentage option parsing fixed,2.0,1.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,7.0,1302.5,159.0,0.049143518518518524,3683.5,11.902972825512107,762.0,Corrective,True,True,"[""73b9e8aedfc42d4b4b9f2902969e8bc219736f3d""]"
4ff34b6adb9f5f9daad1f27e3aac8e016554b86c,73b9e8aedfc42d4b4b9f2902969e8bc219736f3d,antirez,antirez@gmail.com,Fri Jun 10 14:44:06 2011 +0200,1307709846,debugging printf removed,0.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1934.0,128.0,0.0006365740740740741,3685.0,1571.909090909091,763.0,Corrective,True,,
73b9e8aedfc42d4b4b9f2902969e8bc219736f3d,4f948300bc26abb0aaa99343bc9f089ea98a9abe,antirez,antirez@gmail.com,Fri Jun 10 14:47:12 2011 +0200,1307710032,Fixed bug in AOF rewrite not working because of integer overflow,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1933.0,129.0,0.0021527777777777773,3686.0,465.51612903225805,764.0,Corrective,True,True,"[""0b17517c7c9f1f6b1c299346b7b4fa374e343fbc""]"
4f948300bc26abb0aaa99343bc9f089ea98a9abe,d630abcdaf869345fed8fe508774d0318d1d82ff,antirez,antirez@gmail.com,Fri Jun 10 14:52:47 2011 +0200,1307710367,Added new INFO fields related to the new AOF auto rewrite feature,10.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1933.0,130.0,0.0038773148148148148,3687.0,258.910447761194,765.0,Feature Addition,False,True,"[""e7ef418ccd528f1546757392899272fd6176033e""]"
d630abcdaf869345fed8fe508774d0318d1d82ff,c66bf1fa32655ccf3f39b4cd72953459576463f5,antirez,antirez@gmail.com,Fri Jun 10 14:56:45 2011 +0200,1307710605,correctly set AOF base size field in server structure,2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,726.0,30.0,0.09539351851851853,3688.0,11.482892501819947,766.0,None,False,,
c66bf1fa32655ccf3f39b4cd72953459576463f5,0ec932208e6a3162955de1fe75efd0346439f005,antirez,antirez@gmail.com,Fri Jun 10 15:14:10 2011 +0200,1307711650,CONFIG SET/GET support for new automatic AOF rewrite parameters,16.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,672.0,33.0,0.021516203703703704,3689.0,47.47660032275417,767.0,Feature Addition,False,,
0ec932208e6a3162955de1fe75efd0346439f005,19b46c9a0938ccda1bfd61afb06c63bb2f468398,antirez,antirez@gmail.com,Fri Jun 10 15:15:29 2011 +0200,1307711729,Make sure an automatic rewrite only gets triggered when no other child is in execution.,4.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1943.0,131.0,0.01576388888888889,3690.0,64.43612334801762,768.0,None,False,,
19b46c9a0938ccda1bfd61afb06c63bb2f468398,2c6cc5e502824f1b4e222ebfa1a3fc89f078ae32,antirez,antirez@gmail.com,Fri Jun 10 18:13:57 2011 +0200,1307722437,minor code aesthetic change,1.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1053.0,45.0,0.2323379629629629,3691.0,5.304074922785693,769.0,None,False,,
2c6cc5e502824f1b4e222ebfa1a3fc89f078ae32,9e40bce3fa178c5a79188f63ab6f1acf81500a53,antirez,antirez@gmail.com,Fri Jun 10 18:35:16 2011 +0200,1307723716,different message on BGREWRITEAOF when it is just scheduled and not started.,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,728.0,31.0,0.1517476851851852,3692.0,7.589886354969107,770.0,None,False,,
9e40bce3fa178c5a79188f63ab6f1acf81500a53,0b17517c7c9f1f6b1c299346b7b4fa374e343fbc,Hampus Wessman,hampus.wessman@gmail.com,Sun Jun 12 07:27:01 2011 +0200,1307856421,Fix automatic rewrite starting too early.Slight adjustment in growth calculation.n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1945.0,132.0,1.6746759259259258,1.0,1.5971304564177702,1.0,Corrective,True,,
9e40bce3fa178c5a79188f63ab6f1acf81500a53 0b17517c7c9f1f6b1c299346b7b4fa374e343fbc,4abd096f5188448a2c0e75511a049b3a3fd8e9b1,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 14 01:26:42 2011 -0700,1308040002,Merge pull request #58 from hampus/fix-autorewriteFix automatic rewrite starting too early,,,,,,,,,,,,,,,Merge,False,,
4abd096f5188448a2c0e75511a049b3a3fd8e9b1,b0d68504e9986ffa9f1f80f550a04c4f1898957f,antirez,antirez@gmail.com,Tue Jun 14 13:48:49 2011 +0200,1308052129,Better init script,13.0,6.0,"utils/redis_init_script,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,35.0,2.0,278.14158564814807,3693.0,1.0035952912171322,15.0,Perfective,False,,
b0d68504e9986ffa9f1f80f550a04c4f1898957f,55937b7972cb990a6f0a69927f7a28d7baf915d9,antirez,antirez@gmail.com,Tue Jun 14 17:11:44 2011 +0200,1308064304,"Fixed init script bug, thanks to Henrik Westphal",1.0,1.0,"utils/redis_init_script,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,42.0,3.0,0.14091435185185186,3694.0,8.096509240246405,16.0,Corrective,True,,
3bb818df405e667087fe3336cd91159790f63981 55937b7972cb990a6f0a69927f7a28d7baf915d9,0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,antirez,antirez@gmail.com,Tue Jun 14 18:06:39 2011 +0200,1308067599,Updated to unstable,,,,,,,,,,,,,,,Merge,False,,
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,6d0014cf588a4bf01ce663f3f951eb8b299795d0,Pierre Chapuis,catwell@archlinux.us,Fri May 27 15:27:07 2011 +0200,1306502827,Untrack and ignore Lua binary files,2.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,23.0,18.0,73.1528125,0.0,0.0,0.0,None,False,,
6d0014cf588a4bf01ce663f3f951eb8b299795d0,45ec3243f8205ff8d356a5175026052070211d91,Pierre Chapuis,catwell@archlinux.us,Fri May 27 16:01:29 2011 +0200,1306504889,Untrack and ignore Lua binary files (2),1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,25.0,19.0,0.02386574074074074,1.0,42.90106692531523,1.0,None,False,,
55937b7972cb990a6f0a69927f7a28d7baf915d9,591f29e0f5493f1e375c06ae225dc5aafe5b37fb,antirez,antirez@gmail.com,Fri Jun 17 15:40:55 2011 +0200,1308318055,"Use a safe iterator while saving the DB, since the getExpire() function will access the iterating dictionary.",2.0,2.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,889.0,78.0,6.886325231481483,3695.5,1.1089896232603056,772.0,None,False,,
591f29e0f5493f1e375c06ae225dc5aafe5b37fb,07486df6fecae97b02171bba86f51d5df0a94cb5,antirez,antirez@gmail.com,Fri Jun 17 16:13:22 2011 +0200,1308320002,new INFO filed master_link_down_since_seconds,9.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9864267287308424,7.0,1355.3333333333333,327.0,12.12280478395062,3698.0,1.0345469708307966,775.0,Feature Addition,False,,
07486df6fecae97b02171bba86f51d5df0a94cb5,a78e148b7d12a8c46b0a4686a9b0a3e8e054261c,antirez,antirez@gmail.com,Mon May 9 10:52:55 2011 +0200,1304931175,jemalloc source added,40431.0,0.0,"deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/autogen.sh,CAS_DELIMITER,deps/jemalloc/bin/pprof,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.stamp.in,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/doc/manpages.xsl.in,CAS_DELIMITER,deps/jemalloc/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_swap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prn.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/zone.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/install-sh,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/atomic.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk_swap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/hash.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mb.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/allocated.c,CAS_DELIMITER,deps/jemalloc/test/allocated.exp,CAS_DELIMITER,deps/jemalloc/test/allocm.c,CAS_DELIMITER,deps/jemalloc/test/allocm.exp,CAS_DELIMITER,deps/jemalloc/test/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/bitmap.exp,CAS_DELIMITER,deps/jemalloc/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/mremap.c,CAS_DELIMITER,deps/jemalloc/test/mremap.exp,CAS_DELIMITER,deps/jemalloc/test/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/posix_memalign.exp,CAS_DELIMITER,deps/jemalloc/test/rallocm.c,CAS_DELIMITER,deps/jemalloc/test/rallocm.exp,CAS_DELIMITER,deps/jemalloc/test/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/thread_arena.exp,CAS_DELIMITER",83.0,1.0,7.0,4.673137776695249,1.0,0.0,0.0,0.0,3741.0,0.0,191.0,Feature Addition,False,True,"[""fceef8e0ddfca103b2f0328e3ad9ae522093f2c8""]"
a78e148b7d12a8c46b0a4686a9b0a3e8e054261c,29d04257b0cb09028978f02c6404a0c002f0314c,antirez,antirez@gmail.com,Mon Jun 20 11:34:04 2011 +0200,1308562444,forward-ported changes in zmalloc.c/h to support jemalloc build,48.0,8.0,"src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.8383729377099397,7.0,162.5,14.0,156.3791261574074,3783.5,1.0049103232024763,777.0,None,False,,
29d04257b0cb09028978f02c6404a0c002f0314c,16cd4acdeed9f38802606bfad206b632d4cb5039,antirez,antirez@gmail.com,Mon Jun 20 11:35:29 2011 +0200,1308562529,ZMALLOC related stuff removed from config.h. They are now defined in zmalloc.h,0.0,29.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,128.0,9.0,53.916435185185186,3785.0,1.0185472202782941,778.0,None,False,,
16cd4acdeed9f38802606bfad206b632d4cb5039,b4a79b9ffcbf01ff2162020f856b7fb8e6094bbf,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue May 17 12:25:33 2011 +0200,1305627933,Ignore jemalloc build artifacts,15.0,0.0,"deps/jemalloc/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,881.0,0.0,85.0,None,False,,
b4a79b9ffcbf01ff2162020f856b7fb8e6094bbf,9e62dc17dadc02e988f93dfa3856e46c2ff2bac7,antirez,antirez@gmail.com,Mon Jun 20 11:52:15 2011 +0200,1308563535,Makefile modified to build with jemalloc,33.0,15.0,"Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.14609425012013633,7.0,117.0,91.0,30.92064814814815,3786.5,1.017924402873546,779.0,None,False,,
9e62dc17dadc02e988f93dfa3856e46c2ff2bac7,fec5a664f8ce7a1e0f687d07079aa09230fa5846,antirez,antirez@gmail.com,Mon Jun 20 11:54:08 2011 +0200,1308563648,Fixed INFO implementation to use the new allocator name define,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1952.0,134.0,2.8199768518518518,3788.0,1.3546128399399129,780.0,Corrective,True,,
fec5a664f8ce7a1e0f687d07079aa09230fa5846,7d9ba156690b0eef1167f8ed9c5d1d3e09e1948e,antirez,antirez@gmail.com,Wed Jun 1 17:56:50 2011 +0200,1306943810,"Added -ldl when linking against jemalloc, needed on Linux",1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,227.0,35.0,-18.74681712962963,3789.0,0.946657611631604,781.0,Feature Addition,False,,
7d9ba156690b0eef1167f8ed9c5d1d3e09e1948e,e93d36a6388b4416cae4812a224dbf151aa4b5d7,antirez,antirez@gmail.com,Wed Jun 1 17:08:12 2011 +0200,1306940892,It is now possible to build with: make 32bit USE_JEMALLOC=yes,2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,227.0,36.0,-0.03377314814814815,3790.0,-28.60932145305004,782.0,None,False,,
e93d36a6388b4416cae4812a224dbf151aa4b5d7,3e2a0bf44a1fe3494fa655a54c9a0b24bf7689ef,antirez,antirez@gmail.com,Mon Jun 20 11:58:54 2011 +0200,1308563934,Makefile deps updated,33.0,28.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,227.0,37.0,18.785208333333333,3791.0,1.053233372888687,783.0,None,False,,
3e2a0bf44a1fe3494fa655a54c9a0b24bf7689ef,f85cd526c155a1b1302b2d080502d40227af00ec,antirez,antirez@gmail.com,Tue Jun 14 15:34:27 2011 +0200,1308058467,DB API refactoring. The changes were designed together with Pieter Noordhuis.,75.0,81.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",7.0,1.0,1.0,1.7415267793329376,7.0,924.4285714285713,369.0,44.9045916005291,3795.0,1.0105523555923523,790.0,None,False,True,"[""4ab18a3331a870d9617ec5fc763f227cf4110283"", ""237194b76064c95028b14e9ff7d7abfb10abd63d"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
f85cd526c155a1b1302b2d080502d40227af00ec,b0d1d2684d15aeb201da6f8e1e23ba496d6907ad,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jun 13 21:06:44 2011 +0200,1307992004,SETNX regression tests.,38.0,11.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,589.0,17.0,180.3451967592593,882.0,1.005544921727718,154.0,Preventative,False,,
b0d1d2684d15aeb201da6f8e1e23ba496d6907ad,634bae94fbc0427032be4d1fd68b29b7d03aecb7,antirez,antirez@gmail.com,Tue Jun 14 16:22:54 2011 +0200,1308061374,"useless call removed, thanks to Pieter for spotting this",0.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,425.0,29.0,0.03364583333333333,3799.0,30.721362229102173,791.0,None,False,,
634bae94fbc0427032be4d1fd68b29b7d03aecb7,c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb,antirez,antirez@gmail.com,Mon Jun 20 17:07:18 2011 +0200,1308582438,Fix for bug 561 and other related problems,96.0,21.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",6.0,2.0,3.0,2.146261103291088,7.0,743.8333333333335,279.0,27.0922087191358,3802.5,1.08171254682703,107.0,Corrective,True,True,"[""569f84aa7cda1d47a27738906b1707741151521d"", ""48082cc044202878364edce68a1323a96d2d40b4""]"
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,b3bc4452d26304c620fbca5a20db4b695eb8229c,Damian Janowski,damian.janowski@gmail.com,Fri Jun 24 13:56:06 2011 -0300,1308934566,Avoid bug reports when Tcl is not installed.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,232.0,38.0,4.289722222222221,2.0,1.2331153273327722,0.0,Corrective,True,,
c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb b3bc4452d26304c620fbca5a20db4b695eb8229c,a004de0f1509c0ff499e6fc28da2f7e308e14e40,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 24 09:59:37 2011 -0700,1308934777,Merge pull request #63 from djanowski/tclAdd warning when `tcl` is not available to run tests,,,,,,,,,,,,,,,Merge,False,,
c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb,c9d0c3623a7714bd41a35237f4ba927206a7adb6,antirez,antirez@gmail.com,Sat Jun 25 12:22:03 2011 +0200,1308997323,diskstore removed,12.0,1944.0,"redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/diskstore.c,CAS_DELIMITER,src/dscache.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER",14.0,3.0,3.0,2.1020476235153094,7.0,762.0714285714287,738.0,25.993641699735445,3812.5,1.019573319257908,108.0,None,False,,
c9d0c3623a7714bd41a35237f4ba927206a7adb6 a004de0f1509c0ff499e6fc28da2f7e308e14e40,d5b36c5114659e979fc2e102954ded1e30aacacf,antirez,antirez@gmail.com,Sat Jun 25 12:22:59 2011 +0200,1308997379,Merge remote branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
45ec3243f8205ff8d356a5175026052070211d91 d5b36c5114659e979fc2e102954ded1e30aacacf,994ed2bc552f4114b1f0c8dd3fd8aefaec6beeae,antirez,antirez@gmail.com,Sat Jun 25 12:29:24 2011 +0200,1308997764,unstable merge conflicts resolved,,,,,,,,,,,,,,,Merge,False,,
994ed2bc552f4114b1f0c8dd3fd8aefaec6beeae,15bc1cc1bcd4174e7116b5429f1f31f792d13d2e,antirez,antirez@gmail.com,Sat Jun 25 12:42:55 2011 +0200,1308998575,colorized test output shows scripting tests with X,3.0,0.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,190.0,19.0,122.79341435185185,3820.0,1.0081437592176938,109.0,Preventative,False,,
d5b36c5114659e979fc2e102954ded1e30aacacf,ef67a2fc3c24d346efb1fa73b822e6a160229166,antirez,antirez@gmail.com,Wed Jun 29 16:10:28 2011 +0200,1309356628,"Partial fix for a problem with AOF and BRPOP. We have at least a single evidence of an AOF that ended with a BRPOP call against an empty list, causing later issues at run time. Now the problem is detected while loading the AOF at startup, even if it is still to understand how the corrupted AOF was generated.",2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,724.0,34.0,4.158622685185185,3821.0,1.2404642295542785,808.0,Corrective,True,,
ef67a2fc3c24d346efb1fa73b822e6a160229166,daa70b179888121b92554103817443ad0ef32cd8,antirez,antirez@gmail.com,Thu Jun 30 13:27:32 2011 +0200,1309433252,First implementation of the slow log feature,182.0,38.0,"src/Makefile,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER",5.0,1.0,1.0,1.8604363280496707,7.0,632.2,319.0,3.027284722222221,3824.0,1.0990987064407276,813.0,None,False,True,"[""09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e"", ""3fc4bf07cc04dc12a91e9da682162b4d062136bf""]"
daa70b179888121b92554103817443ad0ef32cd8,404345d8e53ed5646e3a0128beecaa2052dd4a81,antirez,antirez@gmail.com,Thu Jun 30 13:31:44 2011 +0200,1309433504,DEUBG SLEEP implemented,6.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,308.0,21.0,5.048391203703703,3827.0,1.1980829059495943,814.0,None,False,,
404345d8e53ed5646e3a0128beecaa2052dd4a81,63d62eb786aacf25e0533cf328d95dc45806dcba,antirez,antirez@gmail.com,Thu Jun 30 13:34:38 2011 +0200,1309433678,hiredis max multi bulk nesting level raised to 7,3.0,3.0,"deps/hiredis/hiredis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1214.0,7.0,71.60210648148148,3828.0,1.0139660695633117,192.0,None,False,,
63d62eb786aacf25e0533cf328d95dc45806dcba,35a6044140deb1c70dc92c5d454745142faeeb37,antirez,antirez@gmail.com,Thu Jun 30 15:47:15 2011 +0200,1309441635,slow log configuration implemented,42.0,1.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",4.0,2.0,2.0,1.3526334608420476,7.0,560.75,242.0,2.6197627314814813,3830.5,1.1208589326634422,817.0,None,False,,
35a6044140deb1c70dc92c5d454745142faeeb37,de32c37c06ee447d5d7d3505725c100da2c03c75,antirez,antirez@gmail.com,Thu Jun 30 15:54:05 2011 +0200,1309442045,"More redis.conf self-documentation. Now even queries that took exactly server.slow_log_slower_than are logged, as this is not exact but is more intuitive for people, and a value of 0 will force every query to be logged.",7.0,1.0,"redis.conf,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,7.0,254.0,65.0,0.00474537037037037,3833.5,159.04878048780492,818.0,Non Functional,False,,
de32c37c06ee447d5d7d3505725c100da2c03c75,2cb6828480300533e690d33cf824de8aa4f1ccd7,antirez,antirez@gmail.com,Thu Jun 30 17:36:15 2011 +0200,1309448175,Added an unique ID field to every slow log entry.,6.0,1.0,"src/redis.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER",3.0,1.0,1.0,1.1488348542809168,7.0,401.33333333333326,149.0,0.10645447530864198,3836.0,8.720498733054345,821.0,Feature Addition,False,,
2cb6828480300533e690d33cf824de8aa4f1ccd7,17daf16f855cc32a17bd5849cd089ad2476f4667,antirez,antirez@gmail.com,Thu Jun 30 18:44:58 2011 +0200,1309452298,SLOWLOG tests,1.0,18.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,235.0,39.0,29.997060185185184,3838.0,1.0333366001143631,110.0,Preventative,False,,
17daf16f855cc32a17bd5849cd089ad2476f4667,bbbf79ddb510fd93f4c65ad67bb6887854273545,antirez,antirez@gmail.com,Fri Jul 1 15:49:17 2011 +0200,1309528157,Added slowlog.tcl,41.0,0.0,"tests/unit/slowlog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,3839.0,0.0,111.0,Feature Addition,False,,
bbbf79ddb510fd93f4c65ad67bb6887854273545,650463401999f675ae4254790db13aac5ddc5c5b,antirez,antirez@gmail.com,Sat Jul 2 10:25:35 2011 +0200,1309595135,"no more allocation stats info in INFO, useless now that we have jemalloc.",0.0,29.0,"src/redis.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.3416303588849137,7.0,743.3333333333335,153.0,8.592843364197531,3841.0,1.2149459356627414,824.0,None,False,,
650463401999f675ae4254790db13aac5ddc5c5b,5a9dd97c7c57efcb8d6f0bd007825a8b28cbc179,antirez,antirez@gmail.com,Sat Jul 2 10:51:35 2011 +0200,1309596695,"childrens -> children in INFO output field names. This is a backward incompatible change, but really a minimal one.",2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1849.0,138.0,0.01805555555555556,3843.0,56.384615384615394,825.0,None,False,,
5a9dd97c7c57efcb8d6f0bd007825a8b28cbc179,208092ad703855ebd42873defdcb74fd6d6706d7,antirez,antirez@gmail.com,Sun Jul 3 15:49:49 2011 +0200,1309700989,Fixed typo in redis.conf related to slow log parameters,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,402.0,64.0,2.997037037037037,3844.0,1.333662876915472,1245.0,Corrective,True,,
208092ad703855ebd42873defdcb74fd6d6706d7,10ba492fa3674117a9af0c3c80bed90fc415847d,antirez,antirez@gmail.com,Tue Jul 5 13:27:21 2011 +0200,1309865241,"Ingore jemalloc make distclean error in Makefile, caused by make clean against a tree that never compiled jemalloc.",1.0,1.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,25.0,58.0,15.066041666666667,3845.0,1.0663744347802038,1246.0,Perfective,False,,
10ba492fa3674117a9af0c3c80bed90fc415847d,cabe03eb758a898e5c0e6906890fd7ede0cc2be1,antirez,antirez@gmail.com,Wed Jul 6 15:22:00 2011 +0200,1309958520,more valgrind friendly test,25.0,4.0,"src/valgrind.sup,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,3.0,1.5631922012781003,7.0,172.33333333333337,63.0,98.58543209876542,3847.0,1.0038798472492694,113.0,Preventative,False,,
cabe03eb758a898e5c0e6906890fd7ede0cc2be1,72bae0cc75828f10d2d69923bb2d27ddc494107b,Hampus Wessman,hampus.wessman@gmail.com,Sun Jul 3 11:04:55 2011 +0200,1309683895,Add test for incorrect expiration when loading AOF.,18.0,0.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,104.0,7.0,72.05612268518519,2.0,1.0138780711858313,0.0,Feature Addition,False,True,"[""9f40c25a0848d502967ca124b48b3c87bbce0106""]"
72bae0cc75828f10d2d69923bb2d27ddc494107b,040b0ade7dd9d30210ec89182bbe4d416416ed53,Hampus Wessman,hampus.wessman@gmail.com,Sun Jul 3 12:18:44 2011 +0200,1309688324,Don't expire keys while loading AOF.They will be expired (and a DEL will be logged) after the loading is doneninstead.n,4.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,669.0,53.0,7.997696759259258,3.0,1.1250359985007257,2.0,None,False,,
040b0ade7dd9d30210ec89182bbe4d416416ed53,812ecc8b1094b44400aade78ae14c00e477fa835,antirez,antirez@gmail.com,Thu Jul 7 16:24:37 2011 +0200,1310048677,don't process EXPIRE with negative TTL or EXPIREAT with time in the past if we are a slave too (see http://groups.google.com/group/redis-db/browse_thread/thread/5a931fefb88b16d5). Also propagate it as DEL.,17.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,672.0,54.0,4.170752314814815,3849.0,1.2397648971980253,827.0,None,False,,
812ecc8b1094b44400aade78ae14c00e477fa835,5521fa6a9f1f22bf2034d26b68e885c1dd5baa3a,antirez,antirez@gmail.com,Fri Jul 8 12:20:30 2011 +0200,1310120430,Test for regression about: Redis should not try to convert DEL into EXPIREAT for EXPIRE -1,7.0,0.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,122.0,8.0,5.052488425925926,3850.0,1.1979222742735405,114.0,Preventative,False,,
5521fa6a9f1f22bf2034d26b68e885c1dd5baa3a,09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e,antirez,antirez@gmail.com,Fri Jul 8 12:59:30 2011 +0200,1310122770,"Take a pointer to the relevant entry of the command table in the client structure. This is generally a more sounding design, simplifies a few functions prototype, and as a side effect fixes a bug related to the conversion of EXPIRE -1 to DEL: before of this fix Redis tried to convert it into an EXPIREAT in the AOF code, regardless of our rewrite of the command.",45.0,31.0,"src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,1.4321635677401632,7.0,1030.6,379.0,35.96956018518519,3853.0,1.0064740253419633,832.0,Corrective,True,True,"[""f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554"", ""7b190a08cfe9aded4c64b775fa2a2ab24b7b9405""]"
09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e,5ab1461f9839fb0458b256045d38612062668863,antirez,antirez@gmail.com,Sat Jul 9 19:23:46 2011 +0200,1310232226,"The test now gives some more time for Redis to start before of exiting with an error, since starting with valgrind can take a significant amount of time.",1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,296.0,23.0,3.167893518518518,3856.0,1.3156671757287015,115.0,Preventative,False,,
5ab1461f9839fb0458b256045d38612062668863,13566085cf67f7417e60c10cc272c68ec8608b81,antirez,antirez@gmail.com,Sun Jul 10 23:25:48 2011 +0200,1310333148,Initial implementation of a client-server parallel testing system for Redis in order to speedup execution of the test suite.,182.0,123.0,"tests/support/test.tcl,CAS_DELIMITER,tests/support/tmpfile.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",4.0,1.0,3.0,1.0938704416899907,7.0,172.0,76.0,84.88696759259258,3858.5,1.0194234246679759,119.0,Feature Addition,False,True,"[""3744824c3ef559c6c69cbc264f93b3e9891c263b"", ""569f84aa7cda1d47a27738906b1707741151521d"", ""04e2410d2dcfc14c938ac56877929e96baa99d28"", ""121ffc85f4ab8cb4a961551163ed53541834c2b1"", ""3a82b8ac641120c231f4f7e8a2edc0bd1c40a399""]"
13566085cf67f7417e60c10cc272c68ec8608b81,36e790a04063e93c9a36bfcfaccd5e5fb473afc9,antirez,antirez@gmail.com,Sun Jul 10 23:57:35 2011 +0200,1310335055,print execution time of different units at end,12.0,3.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,327.0,42.0,0.02207175925925926,3861.0,46.30676455165181,120.0,None,False,True,"[""3744824c3ef559c6c69cbc264f93b3e9891c263b"", ""04e2410d2dcfc14c938ac56877929e96baa99d28""]"
36e790a04063e93c9a36bfcfaccd5e5fb473afc9,3744824c3ef559c6c69cbc264f93b3e9891c263b,antirez,antirez@gmail.com,Mon Jul 11 00:09:56 2011 +0200,1310335796,some test colorization and some fix,20.0,39.0,"tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.6939659673342858,7.0,249.0,64.0,0.01961226851851852,3862.5,30.06132244091645,122.0,Corrective,True,True,"[""569f84aa7cda1d47a27738906b1707741151521d""]"
3744824c3ef559c6c69cbc264f93b3e9891c263b,82e5dd35ea99692cc10077be95485242a9b352a3,antirez,antirez@gmail.com,Mon Jul 11 00:14:12 2011 +0200,1310336052,display less useless information in parallel test,14.0,8.0,"tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9940302114769564,7.0,239.5,66.0,0.002962962962962963,3864.5,254.125,124.0,Preventative,False,True,"[""04e2410d2dcfc14c938ac56877929e96baa99d28""]"
82e5dd35ea99692cc10077be95485242a9b352a3,569f84aa7cda1d47a27738906b1707741151521d,antirez,antirez@gmail.com,Mon Jul 11 00:46:25 2011 +0200,1310337985,replication test split into three parts in order to improve test execution time. Random fixes and improvements.,69.0,41.0,"tests/integration/replication-2.tcl,CAS_DELIMITER,tests/integration/replication-3.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",4.0,1.0,2.0,1.9387719232703917,7.0,110.25,54.0,5.085300925925926,3867.5,0.5245941822134036,128.0,Corrective,True,True,"[""5f5be1ee330903ce1582386623fe4f9bc28a7801""]"
569f84aa7cda1d47a27738906b1707741151521d,daab15993273bcced8b438f07c081f2325d6708b,antirez,antirez@gmail.com,Mon Jul 11 00:53:30 2011 +0200,1310338410,no longer prints testing... but just shows the test when we get the final result from the testing client.,2.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,353.0,46.0,0.004918981481481482,3870.0,204.29411764705884,129.0,Preventative,False,,
daab15993273bcced8b438f07c081f2325d6708b,d4edba6f43ac8f5d42aa89ed29c0e5b8b3f85f1e,antirez,antirez@gmail.com,Mon Jul 11 11:17:05 2011 +0200,1310375825,explicitly use tclsh8.5 to run the test,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,237.0,41.0,10.909409722222225,3871.0,1.0916639878290595,833.0,Preventative,False,,
d4edba6f43ac8f5d42aa89ed29c0e5b8b3f85f1e,52c863ddac711b08390216c5360bf703ecf29dc7,antirez,antirez@gmail.com,Mon Jul 11 11:18:46 2011 +0200,1310375926,use tclsh8.5 not only in which but also in the actual test execution.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,237.0,42.0,0.0011689814814814813,3872.0,856.4455445544554,834.0,Preventative,False,,
52c863ddac711b08390216c5360bf703ecf29dc7,e46f78bd26d37550d54c922ee9b894c569d4ae37,antirez,antirez@gmail.com,Mon Jul 11 11:30:46 2011 +0200,1310376646,list test split into smaller parts,120.0,108.0,"tests/unit/type/list-2.tcl,CAS_DELIMITER,tests/unit/type/list-common.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.1298584637704332,7.0,278.3333333333333,27.0,6.922098765432099,3874.0,0.34938498397807466,132.0,Preventative,False,,
e46f78bd26d37550d54c922ee9b894c569d4ae37,be9250c8cd34fd168af37960e2ac1dada91fee69,antirez,antirez@gmail.com,Mon Jul 11 11:32:19 2011 +0200,1310376739,list-2 added to the list of tests,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,355.0,47.0,0.4436226851851852,3876.0,3.2541678624540165,133.0,Feature Addition,False,,
be9250c8cd34fd168af37960e2ac1dada91fee69,6209797d376a21ea73e3352c4948c36b53eaf2da,antirez,antirez@gmail.com,Mon Jul 11 11:41:23 2011 +0200,1310377283,list test further split into smaller units,70.0,70.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/type/list-2.tcl,CAS_DELIMITER,tests/unit/type/list-3.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.0540115976318143,7.0,156.66666666666666,49.0,0.004556327160493827,3878.0,102.71340339692186,136.0,Preventative,False,,
6209797d376a21ea73e3352c4948c36b53eaf2da,524d515f0c02e62c67f6293a6b59448479f5f5e9,antirez,antirez@gmail.com,Mon Jul 11 11:59:55 2011 +0200,1310378395,"implemented --single, --list-tests. --accurante and --help are now recognized but not actually implemented.",14.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,357.0,49.0,0.01287037037037037,3880.0,78.6978417266187,137.0,Preventative,False,True,"[""782928769187c977252c9f698535d824ac5409de""]"
524d515f0c02e62c67f6293a6b59448479f5f5e9,30cf7be60c48c0f4931cd58bbd13201c17638b48,antirez,antirez@gmail.com,Mon Jul 11 12:15:35 2011 +0200,1310379335,the test runs less iterations of slow tests if no --accurate is given.,11.0,6.0,"tests/integration/replication-3.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/type/list-3.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",4.0,1.0,3.0,1.9039678130877664,7.0,274.0,40.0,10.423234953703703,3882.5,2.016220060843094,141.0,Preventative,False,,
30cf7be60c48c0f4931cd58bbd13201c17638b48,04e2410d2dcfc14c938ac56877929e96baa99d28,antirez,antirez@gmail.com,Mon Jul 11 12:44:55 2011 +0200,1310381095,initial support for failed tests summary at end of the test.,25.0,3.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8112781244591328,7.0,308.0,65.0,0.025810185185185186,3885.5,26.68609865470852,143.0,Corrective,True,True,"[""121ffc85f4ab8cb4a961551163ed53541834c2b1""]"
04e2410d2dcfc14c938ac56877929e96baa99d28,121ffc85f4ab8cb4a961551163ed53541834c2b1,antirez,antirez@gmail.com,Mon Jul 11 12:56:00 2011 +0200,1310381760,better recap of failed tests.,11.0,13.0,"tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.280672129520887,7.0,260.0,90.0,0.1814737654320988,3888.0,2.8634086094316165,146.0,Corrective,True,,
121ffc85f4ab8cb4a961551163ed53541834c2b1,e4715f0011049b60ba96441e66d6fc87ff5a43d3,antirez,antirez@gmail.com,Mon Jul 11 13:03:22 2011 +0200,1310382202,--help implemented,12.0,6.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,386.0,52.0,0.005115740740740741,3890.0,196.47511312217202,147.0,None,False,True,"[""782928769187c977252c9f698535d824ac5409de""]"
e4715f0011049b60ba96441e66d6fc87ff5a43d3,c7c16a32a755ca704295046c1d0c22856cbc96ff,antirez,antirez@gmail.com,Mon Jul 11 13:19:42 2011 +0200,1310383182,cleanup after test,3.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,392.0,53.0,0.011342592592592592,3891.0,89.16326530612244,148.0,Perfective,False,,
c7c16a32a755ca704295046c1d0c22856cbc96ff,4c378d7f6caae6783c64ed177f86c9098ea3da78,antirez,antirez@gmail.com,Mon Jul 11 13:41:06 2011 +0200,1310384466,new test engine valgrind support,4.0,4.0,"tests/integration/aof.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.2987949406953985,7.0,161.66666666666666,43.0,1.7853279320987652,3893.0,1.26406026766696,151.0,Feature Addition,False,,
4c378d7f6caae6783c64ed177f86c9098ea3da78,6b91a11e3e224fdc506bd8f47a9e90bee2b9b05d,antirez,antirez@gmail.com,Mon Jul 11 13:46:09 2011 +0200,1310384769,removed --file argument from test invocation inside Makefile,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,237.0,43.0,0.10234953703703704,3895.0,10.770439895962909,835.0,Preventative,False,,
6b91a11e3e224fdc506bd8f47a9e90bee2b9b05d,e6fcb5b30db56e29c393cf7375085ab6fe12fb4d,antirez,antirez@gmail.com,Mon Jul 11 14:48:45 2011 +0200,1310388525,make test depends on redis-check-aof as well.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,237.0,44.0,0.04347222222222223,3896.0,24.00319488817892,836.0,Preventative,False,,
6b91a11e3e224fdc506bd8f47a9e90bee2b9b05d,0717e3aa16fc81ff0e5a9dfacc93655edbdaec6f,antirez,antirez@gmail.com,Mon Jul 11 15:44:38 2011 +0200,1310391878,fix a test timing issue when running the test over valgrind,4.0,0.0,"tests/unit/other.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8112781244591328,7.0,490.0,45.0,0.1467013888888889,3897.5,6.9737605135144936,153.0,Corrective,True,,
0717e3aa16fc81ff0e5a9dfacc93655edbdaec6f e6fcb5b30db56e29c393cf7375085ab6fe12fb4d,4bab6312239f4d77b7cc25ab7eec80fc3ba19506,antirez,antirez@gmail.com,Mon Jul 11 15:45:06 2011 +0200,1310391906,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
4bab6312239f4d77b7cc25ab7eec80fc3ba19506,bf1379c8dfb02ef2b897043ee7c3fced6f2d5929,antirez,antirez@gmail.com,Mon Jul 11 15:58:31 2011 +0200,1310392711,fixed another timing issue when running the test over valgrind or with very slow PCs,1.0,1.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,74.0,7.0,342.0646875,3899.0,1.0029234236579887,154.0,Corrective,True,,
bf1379c8dfb02ef2b897043ee7c3fced6f2d5929,34a8b51768a2579010e128b05e001bf1d8f99995,antirez,antirez@gmail.com,Mon Jul 11 16:04:18 2011 +0200,1310393058,solved a slow positive in the slow log test when the test is executed slowly,1.0,1.0,"tests/unit/slowlog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,41.0,1.0,10.01042824074074,3900.0,1.0998958262275105,155.0,Preventative,False,,
15bc1cc1bcd4174e7116b5429f1f31f792d13d2e 34a8b51768a2579010e128b05e001bf1d8f99995,0681c5ad844cefefbe62f30df6587c0cbec3272e,antirez,antirez@gmail.com,Tue Jul 12 12:39:16 2011 +0200,1310467156,master branch merged into scripting.,,,,,,,,,,,,,,,Merge,False,,
0681c5ad844cefefbe62f30df6587c0cbec3272e,5f5461949427103c605859e381202fcf1d4ef0e4,antirez,antirez@gmail.com,Tue Jul 12 12:41:29 2011 +0200,1310467289,Fix for a typo left after merging.,2.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,698.0,36.0,11.87099537037037,3901.0,1.08423893437748,837.0,Corrective,True,,
5f5461949427103c605859e381202fcf1d4ef0e4,331bf3292f249fac99226c591b40fd64a8d7106a,antirez,antirez@gmail.com,Tue Jul 12 12:58:32 2011 +0200,1310468312,when building redis-server use LINK and not CC as prefix in the output,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,237.0,45.0,0.9234606481481479,3902.0,2.082883176457318,838.0,Corrective,True,,
331bf3292f249fac99226c591b40fd64a8d7106a,c984d42fb14c72aa8a97e971f0f3d3df189f82d0,Tyler Stromberg,tylers@mac.com,Tue Jul 12 18:50:18 2011 -0700,1310521818,Minor spelling fixes,4.0,4.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,86.0,5.0,264.1471296296296,0.0,0.0,0.0,Corrective,True,,
331bf3292f249fac99226c591b40fd64a8d7106a c984d42fb14c72aa8a97e971f0f3d3df189f82d0,706b6e58bab051bfa62e95216cb74b2892f23bc3,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 13 03:00:28 2011 -0700,1310551228,Merge pull request #69 from AquaGeek/patch-1Minor spelling fixes,,,,,,,,,,,,,,,Merge,False,,
331bf3292f249fac99226c591b40fd64a8d7106a,70ecddc9f42750d77b1c6c003488b380dba1dca1,antirez,antirez@gmail.com,Wed Jul 13 12:04:02 2011 +0200,1310551442,"scripting.txt file removed, content merged into the TODO file",8.0,31.0,"TODO,CAS_DELIMITER,src/SCRIPTING.txt,CAS_DELIMITER",2.0,2.0,2.0,0.7320666900931938,7.0,57.0,165.0,70.14611111111111,3903.5,1.0109364459530978,839.0,Non Functional,False,,
70ecddc9f42750d77b1c6c003488b380dba1dca1,4dd444bb4aabc3d6be68f90b67ad8a3a185fd40b,antirez,antirez@gmail.com,Wed Jul 13 15:38:03 2011 +0200,1310564283,Replicate EVALSHA as EVAL taking a dictionary of sha1 -> script source code.,79.0,3.0,"src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,1.0,1.0,1.958780409714166,7.0,974.0,397.0,16.659238425925928,3907.0,1.0631720071701078,844.0,None,False,True,"[""95f68f7b0fc4ffc700361484b6c792a8e03f3a13"", ""7b190a08cfe9aded4c64b775fa2a2ab24b7b9405""]"
4dd444bb4aabc3d6be68f90b67ad8a3a185fd40b 706b6e58bab051bfa62e95216cb74b2892f23bc3,5cb4850708d7ad9c035e7ee9534b05bb1b0e9d94,antirez,antirez@gmail.com,Wed Jul 13 15:38:33 2011 +0200,1310564313,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
5cb4850708d7ad9c035e7ee9534b05bb1b0e9d94,319bb48c01b4c5be95b425e325d4b9ae46d4bced,antirez,antirez@gmail.com,Wed Jul 13 19:15:22 2011 +0200,1310577322,"top level Makefile now just a proxy. Doing make clean inside src now does a full clean including deps, not just Redis source. Thanks to Pieter for the top level Makefile proxy trick.",9.0,20.0,"Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.7973265101474423,7.0,131.0,105.0,4.751684027777778,3910.5,1.1132801815238662,845.0,Perfective,False,,
319bb48c01b4c5be95b425e325d4b9ae46d4bced,f790bd028cceca6f19b0690124e913baf897cb0e,antirez,antirez@gmail.com,Fri Jul 15 17:20:57 2011 +0200,1310743257,Added a 'runtest' script that is responsible to check if Tcl is available and run the test. This is invoked from Makefile as well.,10.0,1.0,"runtest,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.6840384356390417,7.0,122.0,47.0,0.9602719907407408,3912.5,0.7603429053545063,846.0,Feature Addition,False,,
f790bd028cceca6f19b0690124e913baf897cb0e,61fee31999554aa2d223cff6a841be7730394131,antirez,antirez@gmail.com,Fri Jul 15 17:41:40 2011 +0200,1310744500,test that EVALSHA is replicated as EVAL,24.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,126.0,1.0,51.9590625,3914.0,1.01924592076695,156.0,Preventative,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
61fee31999554aa2d223cff6a841be7730394131,d50292d2cc255a85cd5a8f7f34d2411206a1d449,antirez,antirez@gmail.com,Fri Jul 15 18:28:24 2011 +0200,1310747304,make a scripting test more valgrind friendly,1.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,150.0,2.0,0.03245370370370372,3915.0,31.813124108416552,157.0,Preventative,False,,
d50292d2cc255a85cd5a8f7f34d2411206a1d449,adae85cdaed4db207537400c312fdc9e5f525883,antirez,antirez@gmail.com,Fri Jul 22 11:52:21 2011 +0200,1311328341,prepareForShutdown() fixed for correctness regarding what to do with AOF and RDB persistence on exit.,19.0,8.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1850.0,141.0,8.843263888888886,3916.0,1.1130804205963425,847.0,Corrective,True,,
adae85cdaed4db207537400c312fdc9e5f525883,80e87a461a7d2ee54430127bdb6ac014778c54c5,antirez,antirez@gmail.com,Fri Jul 22 12:11:40 2011 +0200,1311329500,Close the listening sockets. Apparently this allows faster restarts.,4.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1861.0,142.0,0.013414351851851851,3917.0,75.54702329594477,848.0,None,False,,
80e87a461a7d2ee54430127bdb6ac014778c54c5,5215ab1418479ba7820ddfcf0f342305be4b7e24,Bruce Mitchener,bruce.mitchener@gmail.com,Tue Jul 26 10:18:36 2011 +0700,1311650316,Spelling fixes.,17.0,17.0,"00-RELEASENOTES,CAS_DELIMITER,CLUSTER,CAS_DELIMITER,CONTRIBUTING,CAS_DELIMITER,TODO,CAS_DELIMITER,design-documents/REDIS-CLUSTER,CAS_DELIMITER,design-documents/REDIS-CLUSTER-2,CAS_DELIMITER",6.0,2.0,2.0,2.1607047528877827,7.0,138.66666666666666,178.0,256.3727334104938,2.5,0.8346738520914507,1.0,Corrective,True,,
80e87a461a7d2ee54430127bdb6ac014778c54c5,2d7162bb1db39bbdd80e3d2c99899f6d9ac4b2d6,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jul 27 12:29:36 2011 +0200,1311762576,HDEL: Abort deleting fields when hash is removed,11.0,1.0,"src/t_hash.c,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9798687566511528,7.0,395.0,22.0,98.80672453703704,883.5,1.0075905764867137,155.0,None,False,,
2d7162bb1db39bbdd80e3d2c99899f6d9ac4b2d6,4d6bf65c42d213c716c5878343b9e1456ffcd327,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jul 27 14:46:17 2011 +0200,1311770777,Wait for Lua to be built before linking redis-server,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,244.0,48.0,11.892592592592592,885.0,1.0840859545312986,377.0,None,False,,
4d6bf65c42d213c716c5878343b9e1456ffcd327,bb831c313c32a64446484e66c275aaba55d2d818,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jul 27 15:03:48 2011 +0200,1311771828,Fix adding bulk reply when getcwd fails,4.0,5.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,700.0,37.0,15.098831018518519,886.0,1.0662302928467449,378.0,Corrective,True,,
bb831c313c32a64446484e66c275aaba55d2d818,47cadab42b2489705263de54bf7ea980b5fe0df0,antirez,antirez@gmail.com,Wed Jul 27 16:39:03 2011 +0200,1311777543,TODO updated,1.0,25.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,91.0,162.0,1.4725347222222225,3918.0,1.6791011341932136,1250.0,None,False,,
80e87a461a7d2ee54430127bdb6ac014778c54c5,e54484876a314c6e2a290b386cda0103f780acc5,antirez,antirez@gmail.com,Thu Jul 28 12:31:44 2011 +0200,1311849104,fixed assert proc on Redis test,1.0,1.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,140.0,24.0,16.98314814814815,3919.0,1.0588818981779324,158.0,Corrective,True,,
e54484876a314c6e2a290b386cda0103f780acc5,243b783fdc4a77968f7a3dd4a246e43b226a4316,antirez,antirez@gmail.com,Thu Jul 28 12:32:52 2011 +0200,1311849172,Maxmemory test,121.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/maxmemory.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.06905438212565049,7.0,197.0,54.0,8.483738425925926,3920.5,1.0589362819664527,160.0,Preventative,False,,
243b783fdc4a77968f7a3dd4a246e43b226a4316 47cadab42b2489705263de54bf7ea980b5fe0df0,3d9704d33574a8f4598ef129dc2b42872b30d1eb,antirez,antirez@gmail.com,Thu Jul 28 12:33:17 2011 +0200,1311849197,Merge remote branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
3d9704d33574a8f4598ef129dc2b42872b30d1eb,64f201c2aa3b2d6618b5aa11a19e2b96e0450e87,Hampus Wessman,hampus.wessman@gmail.com,Thu Jul 28 11:20:42 2011 +0200,1311844842,Fix crash when pipelining several blocking commands.,3.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,990.0,60.0,14.821284722222225,4.0,1.0674705343525757,3.0,Corrective,True,True,"[""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509""]"
47cadab42b2489705263de54bf7ea980b5fe0df0,4bb1ccc6ebaa5944f8283500d69cae505f9d04d8,antirez,antirez@gmail.com,Thu Jul 28 14:40:06 2011 +0200,1311856806,Regression for a crash with blocking ops and pipelining,16.0,0.0,"tests/unit/protocol.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,62.0,6.0,285.8086574074074,3922.0,1.0034988443284787,161.0,None,False,,
4bb1ccc6ebaa5944f8283500d69cae505f9d04d8 64f201c2aa3b2d6618b5aa11a19e2b96e0450e87,f65c8f654fafb6cc86804d8f4ca9cdd1b6d978db,antirez,antirez@gmail.com,Thu Jul 28 14:40:47 2011 +0200,1311856847,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
2d7162bb1db39bbdd80e3d2c99899f6d9ac4b2d6,be6f639564a472a54371ecf846a132218c7039ae,Konstantin Merenkov,kmerenkov@gmail.com,Tue Aug 2 17:05:04 2011 +0400,1312290304,[issue 620] don't segfault if number of arguments is less than 1,2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,726.0,35.0,33.95458333333333,1.0,1.0294511050300033,0.0,None,False,,
64f201c2aa3b2d6618b5aa11a19e2b96e0450e87,11aaf523131d4f3aa4507043f46984854505bc28,antirez,antirez@gmail.com,Tue Aug 9 11:45:57 2011 +0200,1312883157,"Auto rewrite integer overflow fixed. Thanks to Gaurav for finding it (see issue 602 on google code), and Pieter Noordhuis for tracing it.",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1865.0,143.0,17.982141203703705,3923.0,1.0556107300388695,849.0,Corrective,True,,
11aaf523131d4f3aa4507043f46984854505bc28 f65c8f654fafb6cc86804d8f4ca9cdd1b6d978db,b56567017dfc44b8e5071423423a48601cc4657e,antirez,antirez@gmail.com,Tue Aug 9 11:46:21 2011 +0200,1312883181,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
b56567017dfc44b8e5071423423a48601cc4657e,08c4b019b73323726da8215ed2d86b0adf844efd,Poincare,dhaivatpandya@gmail.com,Thu Aug 25 07:35:33 2011 -0300,1314268533,Added note about Tcl,1.0,1.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,86.0,6.0,43.364756944444466,0.0,0.0,0.0,Feature Addition,False,,
b56567017dfc44b8e5071423423a48601cc4657e,c74b7c77306028acc7dc71d2ae14f880aea7e091,vambo,vpoldra@gmail.com,Fri Aug 26 21:40:18 2011 +0300,1314384018,"Corrected typo in documentation for R_Zero, R_PosInf, R_NegInf, R_Nan;",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1865.0,144.0,17.371076388888888,0.0,0.0,0.0,Non Functional,False,,
b56567017dfc44b8e5071423423a48601cc4657e,ef9444e0d27d251672b12336ebc6568424406683,Konstantin Tokarev,annulen@yandex.ru,Thu Sep 1 22:16:20 2011 +0400,1314900980,Fixed compilation on Mac/PPCApplied patch from Issue 119 provided by npahowes@gmail.com,3.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1865.0,145.0,5.983356481481483,0.0,0.0,0.0,Corrective,True,True,"[""d4d208595c78d78196c926c55799bc81ae06f230""]"
b56567017dfc44b8e5071423423a48601cc4657e,c47d152c8d96415de1af994b1a4bb3e0347caef3,Hampus Wessman,hampus.wessman@gmail.com,Wed Sep 7 19:08:48 2011 +0200,1315415328,Fix crash when chaining brpoplpush with other blocking commands.,1.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,995.0,32.0,61.25645833333334,5.0,1.0163248092888164,4.0,Corrective,True,,
c47d152c8d96415de1af994b1a4bb3e0347caef3,48082cc044202878364edce68a1323a96d2d40b4,antirez,antirez@gmail.com,Mon Sep 12 10:04:23 2011 +0200,1315814663,fixed typos in the comments of rpoplpushHandlePush(),5.0,3.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,995.0,33.0,4.621932870370372,3924.0,1.2163596979979214,850.0,Corrective,True,,
48082cc044202878364edce68a1323a96d2d40b4,7551e23716dbedb3561a5e5e4c590247f6b4e50d,antirez,antirez@gmail.com,Mon Sep 12 10:53:49 2011 +0200,1315817629,regression test for bug 593 added,14.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,731.0,29.0,62.79804398148149,3925.0,1.0159240628624495,162.0,Corrective,True,,
7551e23716dbedb3561a5e5e4c590247f6b4e50d,3bc89500d22ea86a15d58f88e159bb92374a61e0,antirez,antirez@gmail.com,Mon Sep 12 11:05:48 2011 +0200,1315818348,Remove the write handler only if there are no longer objects in the output queue AND if the static buffer is empty. This bug was the cause of a possible server-stop-responding-to-client bug under some specific work load. Thanks to Pieter Noordhuis for spotting and fixing it.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,993.0,61.0,45.98965277777778,3926.0,1.0217440215265814,851.0,Corrective,True,,
3bc89500d22ea86a15d58f88e159bb92374a61e0,297322481d1635cecb6701a982c1d87fecb58538,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 18 12:25:59 2011 +0200,1313663159,Avoid unnecessary calls to time(3),6.0,7.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,728.0,36.0,15.889525462962967,887.0,1.0629345415211366,379.0,None,False,,
297322481d1635cecb6701a982c1d87fecb58538,4f06867afe756f7f2d7a9bbb93a19206455a9121,antirez,antirez@gmail.com,Tue Sep 13 12:21:54 2011 +0200,1315909314,added a newline for code readability,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1867.0,146.0,11.670532407407407,3927.0,1.0856858937613925,852.0,Feature Addition,False,,
4f06867afe756f7f2d7a9bbb93a19206455a9121,a57225c2cff6547a70604c64de9e3a01a6c17eb2,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 18 12:27:34 2011 +0200,1313663254,Fix indent,6.0,6.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,727.0,37.0,0.0010995370370370367,888.0,910.4736842105262,380.0,Corrective,True,,
a57225c2cff6547a70604c64de9e3a01a6c17eb2,f990782f4ded01658f3091b5ebf956ca778f957e,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 18 12:44:30 2011 +0200,1313664270,Re-use AOF buffer when it is small enough,17.0,2.0,"src/aof.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",3.0,1.0,1.0,1.210810026106033,7.0,490.66666666666674,64.0,57.14341820987655,890.0,29.35228970223425,383.0,None,False,,
f990782f4ded01658f3091b5ebf956ca778f957e,d1ec6c8b228e49dbaba943f328c124a5f5529768,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 18 13:03:04 2011 +0200,1313665384,Speed up protocol synthesis for AOF,20.0,8.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,734.0,39.0,0.012893518518518521,892.0,78.55834829443448,384.0,None,False,,
d1ec6c8b228e49dbaba943f328c124a5f5529768,02925dd96e3ad5e31a3cdd9abbc2415949de8700,antirez,antirez@gmail.com,Tue Sep 13 15:59:48 2011 +0200,1315922388,bio.o added to redis-server objects,114.0,1.0,"src/Makefile,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER",3.0,1.0,1.0,0.4207357679074217,7.0,81.33333333333333,49.0,16.01701774691358,3929.0,1.020811198351676,855.0,Feature Addition,False,True,"[""f81a5f54d8e8cac73ea198d5061d7b40d40ee942"", ""8ea2dfd75c962865ee73cdb5d1893b9a64212b27"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
02925dd96e3ad5e31a3cdd9abbc2415949de8700,f81a5f54d8e8cac73ea198d5061d7b40d40ee942,antirez,antirez@gmail.com,Tue Sep 13 16:09:06 2011 +0200,1315922946,bio.c typos fixes to make it compile,9.0,4.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,107.0,1.0,0.006458333333333332,3931.0,155.83870967741942,856.0,Corrective,True,,
f81a5f54d8e8cac73ea198d5061d7b40d40ee942,8f61a72fa8912968cb7fd21a5fae36de7ffab790,antirez,antirez@gmail.com,Tue Sep 13 16:10:26 2011 +0200,1315923026,add background jobs initialization to Redis main init function,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1868.0,147.0,0.1587037037037037,3932.0,7.301050175029172,857.0,Feature Addition,False,,
8f61a72fa8912968cb7fd21a5fae36de7ffab790,f67e338d5c696132aa645d7d554a1403af43fa3b,antirez,antirez@gmail.com,Tue Sep 13 16:17:45 2011 +0200,1315923465,Removed no longer useful fields in the redis server structure,0.0,24.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1084.0,148.0,62.02756944444447,3933.0,1.0161218633739253,858.0,None,False,,
f67e338d5c696132aa645d7d554a1403af43fa3b,8ea2dfd75c962865ee73cdb5d1893b9a64212b27,antirez,antirez@gmail.com,Tue Sep 13 16:19:37 2011 +0200,1315923577,typo fixed in bio.c,2.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,112.0,2.0,0.00730324074074074,3934.0,137.92551505546749,859.0,Corrective,True,True,"[""b147cb9e1ac77e021228f3343a59db1da7c88789""]"
8ea2dfd75c962865ee73cdb5d1893b9a64212b27,b7c739b0ddb95ef274d141a6fe714fb34291324d,antirez,antirez@gmail.com,Tue Sep 13 16:21:12 2011 +0200,1315923672,use pthread_cond_signal() to make sure the background thread will process the job.,1.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,113.0,3.0,0.0010995370370370367,3935.0,910.4736842105262,860.0,None,False,,
b7c739b0ddb95ef274d141a6fe714fb34291324d,b147cb9e1ac77e021228f3343a59db1da7c88789,antirez,antirez@gmail.com,Tue Sep 13 16:53:33 2011 +0200,1315925613,debug message removed,25.0,27.0,"src/Makefile,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.2736549202807799,7.0,742.6666666666665,202.0,0.02991126543209877,3937.0,19.21983653744664,863.0,Corrective,True,,
b147cb9e1ac77e021228f3343a59db1da7c88789,d47ded66ce3c36eb41f38a20ebb5633dfa2e77b0,antirez,antirez@gmail.com,Tue Sep 13 16:56:43 2011 +0200,1315925803,make bio_list static as well,1.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,113.0,5.0,0.0021990740740740733,3939.0,455.7368421052631,864.0,None,False,,
d47ded66ce3c36eb41f38a20ebb5633dfa2e77b0,b1c892f3f63dfdace7431c623ddf09eb6997682b,antirez,antirez@gmail.com,Tue Sep 13 16:57:18 2011 +0200,1315925838,test background close operation removed,0.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1871.0,149.0,0.0026041666666666665,3940.0,385.0,865.0,Preventative,False,,
b1c892f3f63dfdace7431c623ddf09eb6997682b,b454056d9480b91fd8935a7719ac3ffa40445ddf,Pieter Noordhuis,pcnoordhuis@gmail.com,Thu Aug 18 15:49:06 2011 +0200,1313675346,Asynchronously close old file after BGREWRITEAOF,96.0,33.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,746.0,40.0,0.11530092592592593,893.0,9.672957237502509,385.0,None,False,True,"[""47ca4b6e28af49d1904f40fceacf58bb2907fbf2""]"
b454056d9480b91fd8935a7719ac3ffa40445ddf,986630afad7310f4ad548b355be3df076a50032c,antirez,antirez@gmail.com,Tue Sep 13 18:27:08 2011 +0200,1315931228,use bio.c instead of libeio for closing the AOF file in background. Some comment added and other minor changes.,20.0,19.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,809.0,41.0,26.10974537037037,3941.0,1.0382998756140611,866.0,Feature Addition,False,,
986630afad7310f4ad548b355be3df076a50032c,6468a6faad92e087d5054b60b86bf33d718e86ba,antirez,antirez@gmail.com,Wed Sep 14 13:08:19 2011 +0200,1315998499,Don't replicate/AOF SAVE,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1870.0,150.0,0.8409837962962963,3942.0,2.189083552387113,867.0,None,False,,
6468a6faad92e087d5054b60b86bf33d718e86ba,7cfeb8cccf945e5de7210d8bd5a398acfd0959d8,antirez,antirez@gmail.com,Wed Sep 14 15:10:28 2011 +0200,1316005828,Optimize LRANGE to scan the list starting from the head or the tail in order to traverse the minimal number of elements. Thanks to Didier Spezia for noticing the problem and providing a patch.,6.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,997.0,34.0,2.2125578703703703,3943.0,1.45196557947323,868.0,Corrective,True,,
7cfeb8cccf945e5de7210d8bd5a398acfd0959d8 08c4b019b73323726da8215ed2d86b0adf844efd,e0ba14557e2b24d21e92be01afd2307f1cc57aac,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 14 06:27:47 2011 -0700,1316006867,Merge pull request #77 from Poincare/patch-1Added note about Tcl,,,,,,,,,,,,,,,Merge,False,,
e0ba14557e2b24d21e92be01afd2307f1cc57aac,7feb90fa3709a612c272dc1fb0a239752c8c6bbd,antirez,antirez@gmail.com,Wed Sep 14 19:09:48 2011 +0200,1316020188,enable zmalloc thread safety support now that we have the bio.c background thread.,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1870.0,151.0,0.25103009259259257,3944.0,4.983586149661119,869.0,None,False,,
7feb90fa3709a612c272dc1fb0a239752c8c6bbd,f1907057221cc1601a914c7626d896483999fb39,antirez,antirez@gmail.com,Thu Sep 15 17:04:55 2011 +0200,1316099095,TODO updated with 2.6 things,10.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,67.0,163.0,50.01796296296296,3945.0,1.0199928173952322,1251.0,None,False,,
f1907057221cc1601a914c7626d896483999fb39,fde4e4c428e58ec9a7c951f57cc523ed82dec1ca,antirez,antirez@gmail.com,Wed Sep 14 18:39:29 2011 +0200,1316018369,Background I/O library enhanced so that the main thread can query for the number of pending jobs of the specified type.,52.0,2.0,"src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER",2.0,1.0,1.0,0.5564215672884281,7.0,59.5,7.0,1.091128472222222,3946.5,1.6958146251486832,871.0,None,False,,
fde4e4c428e58ec9a7c951f57cc523ed82dec1ca,91de5421b250874cfff7554ae48cdb7dbc757789,antirez,antirez@gmail.com,Wed Sep 14 19:05:21 2011 +0200,1316019921,Better comments for bioWaitPendingJobsLE,9.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,158.0,7.0,0.017962962962962962,3948.0,56.670103092783506,872.0,Perfective,False,,
91de5421b250874cfff7554ae48cdb7dbc757789,50be9b97bc975439cb34703acad5ac108952e672,antirez,antirez@gmail.com,Thu Sep 15 15:46:29 2011 +0200,1316094389,Use a different thread for every different type of background job,67.0,42.0,"src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER",3.0,1.0,1.0,0.5409284556368235,7.0,329.0,52.0,1.2100655864197531,3950.0,1.3895324856503966,875.0,None,False,True,"[""ce8b6ede3477b63023dc458ac43bb798536d460e""]"
50be9b97bc975439cb34703acad5ac108952e672,1317b7c2338777343841e8ea3a83c120bac1747e,antirez,antirez@gmail.com,Thu Sep 15 15:52:14 2011 +0200,1316094734,"Remove backgroud jobs from the queue only when the processing was completed, and not just started.",1.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,192.0,9.0,0.0039930555555555535,3952.0,251.43478260869568,876.0,None,False,,
1317b7c2338777343841e8ea3a83c120bac1747e,fbb23ce496eaffa8313846601a73a68df0c0ba5d,antirez,antirez@gmail.com,Thu Sep 15 18:23:11 2011 +0200,1316103791,some more comment about bio.c design,4.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,192.0,10.0,0.10482638888888887,3953.0,10.539582643259358,877.0,None,False,,
fbb23ce496eaffa8313846601a73a68df0c0ba5d,b39a4d0b3941be82629d94dfd06f1ddc13fb260b,antirez,antirez@gmail.com,Thu Sep 15 18:23:58 2011 +0200,1316103838,fixed a problem in bioOlderJobType() when there are no jobs of the specified type. Now the function returns 0 when this happens.,4.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,196.0,11.0,0.0005439814814814813,3954.0,1839.297872340425,878.0,Corrective,True,,
b39a4d0b3941be82629d94dfd06f1ddc13fb260b,9fc1e1b1d4613b9d95f80c64dc909a7f8defd78a,antirez,antirez@gmail.com,Thu Sep 15 18:25:53 2011 +0200,1316103953,REDIS_BIO_AOF_FSYNC implemented,4.0,1.0,"src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,7.0,105.0,15.0,0.05601273148148148,3955.5,381.11544491211373,880.0,None,False,,
f1907057221cc1601a914c7626d896483999fb39,43071993e19135c2f59fc6f013aa5522abcc2554,antirez,antirez@gmail.com,Thu Sep 15 19:28:00 2011 +0200,1316107680,Implemented --latency in redis-cli,42.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,792.0,51.0,110.15754629629627,3957.0,1.009077907357434,881.0,None,False,True,"[""59046a7373215cd535cba7b7864ded34301c2357""]"
43071993e19135c2f59fc6f013aa5522abcc2554,96674b6d95c8990cc7dae885b27c76f377ddeb91,antirez,antirez@gmail.com,Thu Sep 15 19:32:25 2011 +0200,1316107945,Fixed a bug in the average latency metering of redis-cli --latency,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,834.0,52.0,0.0030671296296296297,3958.0,327.0377358490566,882.0,Corrective,True,,
9fc1e1b1d4613b9d95f80c64dc909a7f8defd78a,4b77700a334b5b9ac4dbc04252ef6c6e6e3598ea,antirez,antirez@gmail.com,Fri Sep 16 11:08:39 2011 +0200,1316164119,"Added aof_backgronud_fsync() function, and use it in the bacground rewrite done handler when the fsync policy is everysec.",8.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,810.0,43.0,0.8070601851851852,3959.0,2.2390649648644767,883.0,Feature Addition,False,True,"[""9a35eb22bfc9313d04598b8fc7ebb5ca9367d2de""]"
96674b6d95c8990cc7dae885b27c76f377ddeb91,5f54a5e615efca2c15a8990c336986d9c9497453,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 17 18:15:06 2011 +0200,1313597706,Fix AOF race that may duplicate commands,5.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,817.0,44.0,-29.703854166666666,894.0,0.9663343351206528,386.0,Corrective,True,,
5f54a5e615efca2c15a8990c336986d9c9497453,bdbf3acff5ffc5d114f18c1383b103fe6f45829e,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 17 17:06:19 2011 +0200,1313593579,Enforce upper bound for number of requests in redis-benchmark,19.0,11.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,563.0,21.0,77.6025462962963,895.0,1.012886175102836,387.0,None,False,,
bdbf3acff5ffc5d114f18c1383b103fe6f45829e,3aa4b0097062b13031506b6b52fc8fc4bfec6dfc,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Aug 17 18:09:01 2011 +0200,1313597341,Failing test related to AOF rewrite buffers,36.0,0.0,"tests/integration/aof-race.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.1831220683013728,7.0,197.5,55.0,10.11671875,896.5,0.5247115696480146,157.0,Corrective,True,True,"[""dcdfd005a0133a347cc0aae54c690cd8c845fed7""]"
4b77700a334b5b9ac4dbc04252ef6c6e6e3598ea,9a35eb22bfc9313d04598b8fc7ebb5ca9367d2de,antirez,antirez@gmail.com,Fri Sep 16 12:11:48 2011 +0200,1316167908,Fixed typo preventing compilation,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,822.0,45.0,29.747708333333332,3960.0,1.0336160348486227,884.0,Corrective,True,,
9a35eb22bfc9313d04598b8fc7ebb5ca9367d2de,db3c2a4fb4b2d4a9dd619151b7efc5e5253a8e3f,antirez,antirez@gmail.com,Fri Sep 16 12:35:12 2011 +0200,1316169312,postpone the AOF fsync if policy is everysec and there is a background fsync already going.,54.0,8.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6706514056796242,7.0,1251.0,347.0,1.5292245370370368,3962.0,21.77680551079321,887.0,None,False,True,"[""e7aec180e87ecf2cb33644b4e0f57b9a34c7377a"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35""]"
db3c2a4fb4b2d4a9dd619151b7efc5e5253a8e3f,a3fcd6bc21ec16f227bd98f7155372b2fd80de11,antirez,antirez@gmail.com,Fri Sep 16 12:36:17 2011 +0200,1316169377,"fixed flushAppendOnlyFile() function prototype to reflect the new implementation, fixing compilation.",1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1061.0,150.0,0.0007523148148148147,3964.0,1330.2307692307693,888.0,Corrective,True,,
a3fcd6bc21ec16f227bd98f7155372b2fd80de11 3aa4b0097062b13031506b6b52fc8fc4bfec6dfc,af4707a80c8ff5bbca34e271d3b33fd23135c203,antirez,antirez@gmail.com,Fri Sep 16 12:36:33 2011 +0200,1316169393,Merge remote-tracking branch 'origin/unstable' into bg-aof-2,,,,,,,,,,,,,,,Merge,False,,
3aa4b0097062b13031506b6b52fc8fc4bfec6dfc,dcdfd005a0133a347cc0aae54c690cd8c845fed7,antirez,antirez@gmail.com,Fri Sep 16 15:43:03 2011 +0200,1316180583,"commenting out aof-race test for now, waiting for a fix to issue #80",0.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,396.0,56.0,29.89863425925926,3965.0,1.0334463437804124,163.0,Corrective,True,,
af4707a80c8ff5bbca34e271d3b33fd23135c203 dcdfd005a0133a347cc0aae54c690cd8c845fed7,37183f14e4034c77283b5246d274cc54a6a90cda,antirez,antirez@gmail.com,Fri Sep 16 15:44:14 2011 +0200,1316180654,Merge remote-tracking branch 'origin/unstable' into bg-aof-2,,,,,,,,,,,,,,,Merge,False,,
37183f14e4034c77283b5246d274cc54a6a90cda,a60b397b6d2a25072c79fe0a5e29bea89a4d3786,antirez,antirez@gmail.com,Fri Sep 16 15:53:01 2011 +0200,1316181181,use aof_fsync wrapper instead of fsync(2) in bio.c,1.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,202.0,13.0,0.8938425925925926,3966.0,2.118765214688973,889.0,None,False,,
a60b397b6d2a25072c79fe0a5e29bea89a4d3786,77ca5fcba639eeb8dec6525b4a43606a734175c7,antirez,antirez@gmail.com,Mon Sep 19 16:52:13 2011 +0200,1316443933,Emit a log message when AOF fsync is still in progress but we are forced to write from the main thread since two seconds already elapsed.,1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,861.0,47.0,3.1784837962962964,3967.0,1.3146154154270795,890.0,None,False,,
77ca5fcba639eeb8dec6525b4a43606a734175c7,47e7f9acbd74856bc0324c590369b5d61dd5f058,antirez,antirez@gmail.com,Mon Sep 19 17:06:27 2011 +0200,1316444787,Comment out things in bio.c that are currently not useful but that may be useful in the future.,6.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,202.0,14.0,3.0509953703703703,3968.0,1.3277618870587165,891.0,None,False,,
47e7f9acbd74856bc0324c590369b5d61dd5f058,e7aec180e87ecf2cb33644b4e0f57b9a34c7377a,antirez,antirez@gmail.com,Mon Sep 19 17:49:50 2011 +0200,1316447390,Fixed comment typo,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,862.0,48.0,0.04001157407407408,3969.0,25.99276829621059,892.0,Corrective,True,,
e7aec180e87ecf2cb33644b4e0f57b9a34c7377a,eef17490d434658b63e1e410d1504e33fa6d5013,antirez,antirez@gmail.com,Tue Sep 20 10:48:21 2011 +0200,1316508501,Include port number in error when can't bind lisetning port on startup.,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1877.0,153.0,3.925798611111111,3970.0,1.2547252416794177,893.0,None,False,,
eef17490d434658b63e1e410d1504e33fa6d5013 be6f639564a472a54371ecf846a132218c7039ae,18be93e0a48455587812d700d5bf16505a592516,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 20 01:55:34 2011 -0700,1316508934,Merge pull request #74 from kmerenkov/issue_620[issue 620] don't segfault if number of arguments is less than 1,,,,,,,,,,,,,,,Merge,False,,
18be93e0a48455587812d700d5bf16505a592516 ef9444e0d27d251672b12336ebc6568424406683,5bae401107b73b7cfa9cf5e4f1dc518f3687da7d,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 20 01:58:55 2011 -0700,1316509135,Merge pull request #79 from annulen/mac_ppcFixed compilation on Mac/PPC,,,,,,,,,,,,,,,Merge,False,,
5bae401107b73b7cfa9cf5e4f1dc518f3687da7d c74b7c77306028acc7dc71d2ae14f880aea7e091,ac1f6fd07a15ac7a14f27b8a5f4b5fb3dc6cf8ac,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 20 02:00:58 2011 -0700,1316509258,"Merge pull request #78 from vambo/patch-1Corrected typo in documentation for R_Zero, R_PosInf, R_NegInf, R_Nan;",,,,,,,,,,,,,,,Merge,False,,
ac1f6fd07a15ac7a14f27b8a5f4b5fb3dc6cf8ac 5215ab1418479ba7820ddfcf0f342305be4b7e24,0ace6ce463695df1ff4c7ba848554f4c9b822f36,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 20 02:12:14 2011 -0700,1316509934,Merge pull request #72 from datafueled/spellingSpelling fixes.,,,,,,,,,,,,,,,Merge,False,,
0ace6ce463695df1ff4c7ba848554f4c9b822f36,2e5e29815f0113f0593af5d47eb28db6a3bcd557,antirez,antirez@gmail.com,Tue Sep 20 11:15:55 2011 +0200,1316510155,no longer valid design documents removed,0.0,557.0,"design-documents/REDIS-CLUSTER,CAS_DELIMITER,design-documents/REDIS-CLUSTER-2,CAS_DELIMITER",2.0,1.0,1.0,0.9609551512949328,7.0,278.5,8.0,56.248136574074074,3971.5,1.0133337750489266,10.0,Non Functional,False,,
2e5e29815f0113f0593af5d47eb28db6a3bcd557,29177b4d08eff23300b1e4c9a4ae358f05554dbb,antirez,antirez@gmail.com,Tue Sep 20 14:50:01 2011 +0200,1316523001,TODO updated,0.0,1.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,76.0,164.0,4.9063194444444465,3973.0,1.2038187711426591,1252.0,None,False,,
29177b4d08eff23300b1e4c9a4ae358f05554dbb,0e793fbe84f5796597ce1021a2ea840cdcba1924,antirez,antirez@gmail.com,Tue Sep 20 15:34:49 2011 +0200,1316525689,TODO updated after moving more things into the github issues system,0.0,23.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,75.0,165.0,0.031111111111111117,3974.0,33.142857142857146,1253.0,None,False,,
0e793fbe84f5796597ce1021a2ea840cdcba1924,5833cf1676a4351e3fc7ea57c59d3ccad2a15632,antirez,antirez@gmail.com,Wed Sep 21 19:13:43 2011 +0200,1316625223,TODO updated,1.0,3.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,52.0,166.0,1.1520138888888891,3975.0,1.868045090119959,1254.0,None,False,,
319bb48c01b4c5be95b425e325d4b9ae46d4bced,aee7f99760ec3a8d7250789f60751245c0e349e0,Juri M. Vainonen,jvain@iki.fi,Wed Sep 21 23:22:14 2011 +0300,1316636534,fixed a small bug that caused redis-cli to segfault when given single numeric parameter greater that zero.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,835.0,53.0,6.117928240740741,0.0,0.0,0.0,Corrective,True,True,"[""04607b53500f71498a502ffcfc41a82792013e2b""]"
5833cf1676a4351e3fc7ea57c59d3ccad2a15632 aee7f99760ec3a8d7250789f60751245c0e349e0,7c748c061ecb630f52d0041c5d2497783aac5c06,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 21 13:32:24 2011 -0700,1316637144,Merge pull request #97 from jvain/redis-cliredis-cli segfaults with single numeric argument greater than zero,,,,,,,,,,,,,,,Merge,False,,
7c748c061ecb630f52d0041c5d2497783aac5c06 041d8e2a5c3b36ff4661fb0444ebc48d24a33541,f9c6f39b2b0039cf29df6597d41c124048c825cd,antirez,antirez@gmail.com,Thu Sep 22 15:15:26 2011 +0200,1316697326,merge conflicts resolved,,,,,,,,,,,,,,,Merge,False,,
f9c6f39b2b0039cf29df6597d41c124048c825cd,4c0462972ecdef6fcd8155003028a41aafd70c27,antirez,antirez@gmail.com,Thu Sep 22 15:47:48 2011 +0200,1316699268,"comment on top of the _rio structure modified for correctness as actually fwrite/fread semantics is different in general, but was 0/1 in our old usage before rio.c as we always used 1 as number items, and the actual number of bytes to read as item length.",3.0,2.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,39.0,1.0,131.92833333333334,3976.0,1.0075798729107974,894.0,None,False,,
4c0462972ecdef6fcd8155003028a41aafd70c27,69cecb511fef03795e94ba819308262ea44b2a18,antirez,antirez@gmail.com,Thu Sep 22 15:54:08 2011 +0200,1316699648,"make sure to return just 1 for rio.c write when the target is a buffer, as we do when the target is a file.",2.0,2.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,106.0,1.0,131.93273148148148,3977.0,1.007579620225936,895.0,None,False,,
69cecb511fef03795e94ba819308262ea44b2a18,f96a8a8054b3b699c2fba797bdcd203dda1168ce,antirez,antirez@gmail.com,Thu Sep 22 16:00:40 2011 +0200,1316700040,rioInitWithFile nad rioInitWithBuffer functions now take a rio structure pointer to avoid copying a structure to return value to the caller.,17.0,18.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",5.0,1.0,1.0,1.943943922623373,7.0,739.6,140.0,38.42153703703704,3980.0,1.0734612167261588,900.0,None,False,,
f96a8a8054b3b699c2fba797bdcd203dda1168ce,cbdac04a5ebadaef6c66a520b26ffc5fefff86a9,antirez,antirez@gmail.com,Fri Sep 23 14:51:48 2011 +0200,1316782308,libc neutral random function derived from a drand48() implementation added. Will be used to replace Lua's math.random implementation.,101.0,1.0,"src/Makefile,CAS_DELIMITER,src/rand.c,CAS_DELIMITER,src/rand.h,CAS_DELIMITER",3.0,1.0,1.0,0.49798167640825897,7.0,80.66666666666667,51.0,3.305150462962963,3984.0,1.100852695533416,903.0,Feature Addition,False,,
cbdac04a5ebadaef6c66a520b26ffc5fefff86a9,69786b262d2c899f61643f734e62ac5c8d3f7432,antirez,antirez@gmail.com,Fri Sep 23 15:06:07 2011 +0200,1316783167,Defined macro with bigger number that redisLrand48() can output.,2.0,0.0,"src/rand.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,7.0,1.0,0.009942129629629629,3986.0,101.58207217694996,904.0,None,False,,
69786b262d2c899f61643f734e62ac5c8d3f7432,e108bab0437c709fcc8f339677bf6295fa793163,antirez,antirez@gmail.com,Fri Sep 23 15:40:58 2011 +0200,1316785258,Lua math.random and math.randomseed replaced with our own version based on redisSrand48(). Seed initialized to the same value at every EVAL/EVALSHA call.,61.0,1.0,"src/Makefile,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.20559250818508304,7.0,392.5,75.0,36.01808449074074,3987.5,15.651008754285591,906.0,Feature Addition,False,,
e108bab0437c709fcc8f339677bf6295fa793163,5d02b00f56fa959d3720c0590f32762a853c8928,antirez,antirez@gmail.com,Mon Sep 26 15:40:39 2011 +0200,1317044439,command table refactoring to make it simpler adding new flags,165.0,138.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3508411629476376,7.0,1469.5,305.0,8.16550925925926,3989.5,1.111222922775911,908.0,Feature Addition,False,True,"[""7afc3a9611a598686efb8d612f919d921b3487ec"", ""39da5d1f2183eb6e7440bf742b558f974a5a4172"", ""1bcfa0f643d53e700d7398985ef236babf18d9bf"", ""548efd91e5a33e1358213a902b8533d88f40f7cf"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""df69155e8a75b433217487d2806bd854cde2f6f7""]"
5d02b00f56fa959d3720c0590f32762a853c8928,b60ed6e81233a8b3910e0a5d45031a7a6191b8bf,antirez,antirez@gmail.com,Tue Sep 27 13:45:46 2011 +0200,1317123946,added the NOSCRIPT and RANDOM command flags,26.0,18.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,7.0,1483.0,307.0,0.9202199074074074,3991.5,1.8150225766284729,910.0,Feature Addition,False,True,"[""7e14a2080151f64a1540e26f00cecd8b9ae9cee3"", ""548efd91e5a33e1358213a902b8533d88f40f7cf"", ""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb"", ""be90c803e3bb041335ea0b8f40348965846f06b7"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
b60ed6e81233a8b3910e0a5d45031a7a6191b8bf,15ef6053404686995024adb373854a009a3d2d39,antirez,antirez@gmail.com,Tue Sep 27 13:57:10 2011 +0200,1317124630,Deny commands flagged as REDIS_CMD_NOSCRIPT from Lua scripts,13.0,7.0,"src/redis.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,7.0,1257.0,180.0,1.9679166666666663,3993.5,64.28493263648217,912.0,None,False,,
15ef6053404686995024adb373854a009a3d2d39,9f772cc23744804fc4b5da2aa7985c4c512abf55,antirez,antirez@gmail.com,Tue Sep 27 15:30:31 2011 +0200,1317130231,Return errors if a write command is called inside a Lua script after a random command was called. See https://github.com/antirez/redis/issues/95 for more information.,20.0,0.0,"src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,7.0,836.0,178.0,0.06878472222222222,3995.5,11.508036369375414,914.0,None,False,True,"[""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb""]"
9f772cc23744804fc4b5da2aa7985c4c512abf55,7864ef855181016993a87d0d57f7814e7fc9980b,antirez,antirez@gmail.com,Tue Sep 27 15:39:41 2011 +0200,1317130781,new tests for the scripting engine: not allowed commands and write commands after random commands.,15.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,150.0,3.0,73.88283564814813,3997.0,1.0135349434172003,164.0,Feature Addition,False,,
7864ef855181016993a87d0d57f7814e7fc9980b,882b65ceafc3003e20c5a48bf1a253e09084f44f,antirez,antirez@gmail.com,Tue Sep 27 16:07:38 2011 +0200,1317132458,a few entries removed from the old TODO list (done),0.0,7.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,50.0,167.0,5.870775462962962,3998.0,1.1703352489477263,1255.0,None,False,,
882b65ceafc3003e20c5a48bf1a253e09084f44f,002d5626e0e717a77c8cdb18ee22043defce1817,antirez,antirez@gmail.com,Tue Sep 27 18:46:23 2011 +0200,1317141983,"Scripting engine now only loads selected libraries, using code originally contributed by @loopole.",20.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,627.0,26.0,0.1360185185185185,3999.0,8.351940095302927,915.0,None,False,,
002d5626e0e717a77c8cdb18ee22043defce1817,07c152a7bd83ebee8c0f34ae9b2e457ea500d662,antirez,antirez@gmail.com,Wed Sep 28 15:55:52 2011 +0200,1317218152,cluster config file entries added to the example configuration file,19.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,402.0,65.0,87.00420138888889,4000.0,1.0114936978219045,1256.0,Feature Addition,False,,
07c152a7bd83ebee8c0f34ae9b2e457ea500d662,1ef8b0a96d9b1a9f3a69914ece8e20b3c3d4c64c,antirez,antirez@gmail.com,Wed Sep 28 18:28:36 2011 +0200,1317227316,show node with myself flag always as connected in CLUSTER NODES output.,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1656.0,39.0,6.102731481481483,4001.0,1.1638610518969192,916.0,None,False,,
1ef8b0a96d9b1a9f3a69914ece8e20b3c3d4c64c,d3f7fbfc092d9c681bd4fd74e38418f692d5eb38,antirez,antirez@gmail.com,Wed Sep 28 19:08:35 2011 +0200,1317229715,initial node loading info code for redis-trib,37.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,258.0,12.0,167.39390046296296,4002.0,1.0059739333227449,917.0,Feature Addition,False,True,"[""7112580cb3368d08f0672360b856e8a0d9892051""]"
d3f7fbfc092d9c681bd4fd74e38418f692d5eb38,0cae060a26745e1cb06700f7878ffe647db8ddd4,antirez,antirez@gmail.com,Thu Sep 29 10:20:03 2011 +0200,1317284403,Compilation fixed on OpenBSD making sure that _XOPEN_SOURCE is set to 700 in fmacros.h,1.0,1.0,"src/fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,15.0,1.0,464.4251736111111,4003.0,1.00215319938888,918.0,Corrective,True,,
0cae060a26745e1cb06700f7878ffe647db8ddd4,f639f99180c304e8eb4f4d063a7aff309b6b1056,antirez,antirez@gmail.com,Thu Sep 29 12:50:46 2011 +0200,1317293446,redis-trib cluster check command: check that all the 4096 slots are covered,25.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,295.0,13.0,0.7376273148148148,4004.0,2.3556981688660152,919.0,None,False,,
f639f99180c304e8eb4f4d063a7aff309b6b1056,b08c9dd28032a207a67773caf5d93616ff82a23f,antirez,antirez@gmail.com,Thu Sep 29 13:18:09 2011 +0200,1317295089,redis-trib: when loading node info also fetch the output of CLUSTER INFO.,9.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,319.0,14.0,0.019016203703703702,4005.0,53.58673158855751,920.0,None,False,,
b08c9dd28032a207a67773caf5d93616ff82a23f,92dd76c8ee1cf6dd44644be018ad20f9f4533267,antirez,antirez@gmail.com,Thu Sep 29 14:44:15 2011 +0200,1317300255,redis-trib: all node information into a single hash,15.0,20.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,328.0,15.0,0.059791666666666674,4006.0,17.724738675958193,921.0,None,False,True,"[""bbf1af2da34001cf1f3af808cc3972dbc78fc6ab""]"
92dd76c8ee1cf6dd44644be018ad20f9f4533267,d7021b081b3d1c768bc27f0634515f0b8c850424,antirez,antirez@gmail.com,Thu Sep 29 15:04:23 2011 +0200,1317301463,redis-trib: added cluster state to node info string,2.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,323.0,16.0,0.013981481481481482,4007.0,72.52317880794702,922.0,None,False,,
d7021b081b3d1c768bc27f0634515f0b8c850424,7afc3a9611a598686efb8d612f919d921b3487ec,antirez,antirez@gmail.com,Thu Sep 29 15:14:06 2011 +0200,1317302046,Fixed command table for RESTORE to make it accepting keys only for the right slots when cluster is enabled.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1911.0,157.0,2.053425925925926,4008.0,1.4869910267394146,923.0,Corrective,True,,
7afc3a9611a598686efb8d612f919d921b3487ec,3b5289a04c474ce66df2ef410e053795b1f0f1d2,antirez,antirez@gmail.com,Thu Sep 29 15:26:01 2011 +0200,1317302761,added comment about SETSLOT NODE form.,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1657.0,40.0,0.8732060185185185,4009.0,2.145205116309895,924.0,Feature Addition,False,,
3b5289a04c474ce66df2ef410e053795b1f0f1d2,5d8f25da3688a11daa1c2aa59322bb29eb78db16,antirez,antirez@gmail.com,Thu Sep 29 15:31:02 2011 +0200,1317303062,redis-trib: don't crash loading node info for nodes without assigned slots,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,324.0,17.0,0.018506944444444444,4010.0,55.03377110694184,925.0,None,False,,
5d8f25da3688a11daa1c2aa59322bb29eb78db16,9514aa325192d4d59497fab560ce781b3ed90bbb,antirez,antirez@gmail.com,Thu Sep 29 15:45:10 2011 +0200,1317303910,redis-trib: minor refactoring creating a method to load the cluster information starting from a single node,7.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,324.0,18.0,0.009814814814814814,4011.0,102.8867924528302,926.0,None,False,,
9514aa325192d4d59497fab560ce781b3ed90bbb,85b514d16574803ac5ed291aedcaf2d77cea8f48,antirez,antirez@gmail.com,Thu Sep 29 16:06:49 2011 +0200,1317305209,redis-trib: reshard command work in progress,28.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,328.0,19.0,0.015034722222222222,4012.0,67.51270207852194,927.0,None,False,True,"[""7112580cb3368d08f0672360b856e8a0d9892051""]"
85b514d16574803ac5ed291aedcaf2d77cea8f48,841cd7684cd3f1287fba7c2ac9a5087230e47949,antirez,antirez@gmail.com,Fri Sep 30 18:28:51 2011 +0200,1317400131,"redis-trib: initial slots allocation strategy, still to improve for better balancing when there are just a few slots to move.",72.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,353.0,20.0,1.0986342592592593,4013.0,1.9102210235772528,928.0,None,False,,
841cd7684cd3f1287fba7c2ac9a5087230e47949,6c0047c4304fc5cd84029996587d6ea1416d0578,antirez,antirez@gmail.com,Fri Sep 30 18:41:25 2011 +0200,1317400885,redis-trib: better slots allocation strategy for resharding,14.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,421.0,21.0,0.008726851851851852,4014.0,115.58885941644562,929.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
6c0047c4304fc5cd84029996587d6ea1416d0578,c5954c196679cbc830fd835d6b72bbd94422fe5a,antirez,antirez@gmail.com,Fri Sep 30 19:20:56 2011 +0200,1317403256,Clear the importing status from the slot if a CLUSTER SETSLOT command permanently assigns the slot to the importing node.,5.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1658.0,41.0,1.163136574074074,4015.0,1.859744265883875,930.0,None,False,,
c5954c196679cbc830fd835d6b72bbd94422fe5a,9a38df8799615dba444922e5d7018e4edfecc73e,antirez,antirez@gmail.com,Fri Sep 30 19:21:36 2011 +0200,1317403296,"redis-trib: actual slot migration work in progress, more work needed.",19.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,433.0,22.0,0.02790509259259259,4016.0,36.835752799668185,931.0,None,False,,
9a38df8799615dba444922e5d7018e4edfecc73e,d38d2fdfdcfc2390fd9b02f1016e5571faf1fc6e,antirez,antirez@gmail.com,Fri Sep 30 22:17:24 2011 +0200,1317413844,Fixed two bugs in the CLUSTER SETSLOT ... NODE subcommand,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1663.0,42.0,0.12254629629629628,4017.0,9.160181337363053,932.0,Corrective,True,,
d38d2fdfdcfc2390fd9b02f1016e5571faf1fc6e,a0189bbe75ce56af6c906f828a5f2c2dc86d6d28,antirez,antirez@gmail.com,Fri Sep 30 22:18:07 2011 +0200,1317413887,"redis-trib: initial working implementation of cluster rehashing, more work needed to make it more correct, more reliable.",26.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,450.0,23.0,0.12258101851851852,4018.0,9.157869889528843,933.0,None,False,True,"[""7112580cb3368d08f0672360b856e8a0d9892051"", ""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456""]"
a0189bbe75ce56af6c906f828a5f2c2dc86d6d28,7112580cb3368d08f0672360b856e8a0d9892051,antirez,antirez@gmail.com,Sat Oct 1 01:31:46 2011 +0200,1317425506,fixed a few problems with redis-trib resharding.,28.0,10.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,472.0,24.0,0.13447916666666668,4019.0,8.436096049573973,934.0,Corrective,True,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
7112580cb3368d08f0672360b856e8a0d9892051,66c146592a0c0ff39570633811008cee8773233e,antirez,antirez@gmail.com,Sat Oct 1 15:11:07 2011 +0200,1317474667,when processing gossip packets make sure to also update the node bitmap when associating slots to nodes. Fixed simply using the appropriate helper function to add a slot.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1663.0,43.0,0.7039699074074074,4020.0,2.4205152656067606,935.0,Corrective,True,True,"[""9465d83efd8afa5f6c99486e0b9a232b6f25d31b""]"
66c146592a0c0ff39570633811008cee8773233e,13c7e5ef299f4f6b38cd81c924bdf3eca691d691,antirez,antirez@gmail.com,Sun Oct 2 14:05:29 2011 +0200,1317557129,Exact variant of CRC16 specified into crc16.c,14.0,1.0,"src/crc16.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,74.0,1.0,186.8432175925926,4021.0,1.0053520808134468,936.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
13c7e5ef299f4f6b38cd81c924bdf3eca691d691,9210e70173786a186781cba309d3e0bd9155e4f4,dvir volk,dvir@doit9.com,Mon Oct 3 10:48:07 2011 +0200,1317631687,Added installer and config template renderer,554.0,0.0,"utils/install_server.sh,CAS_DELIMITER,utils/redis.conf.tpl,CAS_DELIMITER,utils/redis_init_script.tpl,CAS_DELIMITER",3.0,1.0,1.0,1.0478841927889928,1.0,0.0,0.0,0.0,1.0,0.0,2.0,Feature Addition,False,True,"[""001f8da256d501b6dab6137ec3038d8921478f66"", ""9a01957f6830da6f46a758e29b5dcd583e098208"", ""d9237055baddbc41d6832ef5e6a516feb738eb95"", ""34f37fb7d3d685fa737e7195d51ed874a6d496ae"", ""2209d077d397352a11480501a691bd991c05ff36"", ""af1e63c36564ea935d13da22522523b064fe5906""]"
9210e70173786a186781cba309d3e0bd9155e4f4,001f8da256d501b6dab6137ec3038d8921478f66,dvir volk,dvir@doit9.com,Mon Oct 3 10:58:43 2011 +0200,1317632323,fixes to install script and template,14.0,8.0,"utils/install_server.sh,CAS_DELIMITER,utils/redis.conf.tpl,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,1.0,261.5,2.0,0.007361111111111111,3.5,102.8867924528302,4.0,Corrective,True,True,"[""2209d077d397352a11480501a691bd991c05ff36"", ""af1e63c36564ea935d13da22522523b064fe5906""]"
001f8da256d501b6dab6137ec3038d8921478f66,c01043baf1b58c064f6ced68abc3c512a022d61a,dvir volk,dvir@doit9.com,Mon Oct 3 11:29:01 2011 +0200,1317634141,changed license to gpl v3,18.0,2.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,127.0,2.0,0.02104166666666667,5.0,48.524752475247524,5.0,None,False,,
c01043baf1b58c064f6ced68abc3c512a022d61a,78f56a5aeed01022912b117864b8acf4e6411c58,dvir volk,dvir@doit9.com,Mon Oct 3 11:35:30 2011 +0200,1317634530,changed license to gpl BSD. LOL,19.0,11.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,143.0,3.0,0.004502314814814815,6.0,223.1079691516709,6.0,None,False,,
78f56a5aeed01022912b117864b8acf4e6411c58,f1e60d75309990b25a1763e004d7044c77c53834,antirez,antirez@gmail.com,Mon Oct 3 13:28:54 2011 +0200,1317641334,Use the new install script as make install target. Message about install script requiring root changed a bit to make it more evident.,2.0,7.0,"src/Makefile,CAS_DELIMITER,utils/install_server.sh,CAS_DELIMITER",2.0,2.0,2.0,0.7642045065086203,8.0,196.5,57.0,4.993518518518519,4022.5,1.100527708319812,17.0,Feature Addition,False,,
13c7e5ef299f4f6b38cd81c924bdf3eca691d691,62d774e5ba6056be39012ecedb88c3fec10304fb,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Oct 3 14:14:43 2011 +0200,1317644083,Use element rank instead of iterating in ZCOUNT,74.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2055.0,61.0,124.7495949074074,898.0,1.0080160580941544,388.0,None,False,,
62d774e5ba6056be39012ecedb88c3fec10304fb,0cfc8940664dbd1b5a36dbc9e250ef4150d6495d,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Oct 3 14:23:31 2011 +0200,1317644611,Remove ZCOUNT branches from generic RANGEBYSCORE code,55.0,46.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2128.0,62.0,0.0061111111111111106,899.0,164.63636363636363,389.0,None,False,,
f1e60d75309990b25a1763e004d7044c77c53834 0cfc8940664dbd1b5a36dbc9e250ef4150d6495d,cd73df62af0efeceeede6b71f14ceb31199f461c,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 3 06:20:23 2011 -0700,1317648023,Merge pull request #114 from pietern/unstable-zcountUse rank information to compute ZCOUNT,,,,,,,,,,,,,,,Merge,False,,
cd73df62af0efeceeede6b71f14ceb31199f461c,2a95c944ff743df91ad7a20d9486a90fcc231cb3,antirez,antirez@gmail.com,Mon Oct 3 15:45:14 2011 +0200,1317649514,increment server.dirty in restore command to make sure it is replicated and increments the dirty count for persistence concerns.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1663.0,44.0,2.0236921296296297,4024.0,1.4941463107745632,938.0,None,False,,
2a95c944ff743df91ad7a20d9486a90fcc231cb3,37d650032a47bbc75356bdb09215eb6e59e363f4,antirez,antirez@gmail.com,Mon Oct 3 15:51:10 2011 +0200,1317649870,Rewrite MIGRATE as DEL for AOF/replication. Also increment the dirty counter to both force replication and persistence.,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1664.0,45.0,0.0041203703703703715,4025.0,243.6966292134832,939.0,None,False,True,"[""bfbc16ae8321603ce527012f6c33fd7619ad9b09""]"
37d650032a47bbc75356bdb09215eb6e59e363f4,0bb5160cb08ad8f16ce241e55a1ed6c3042bf2aa,antirez,antirez@gmail.com,Mon Oct 3 16:04:44 2011 +0200,1317650684,"Revert Use the new install script as make install target. Message about install script requiring root changed a bit to make it more evident. After talking with Pieter he changed my mind about this, it is better to have a simpler install script that works everywhere, and the complex one can be always executed if needed by hand. We'll make possibly a new target for the full featured installation script, and even suggest it after a Make install.This reverts commit f1e60d75309990b25a1763e004d7044c77c53834.n",7.0,2.0,"src/Makefile,CAS_DELIMITER,utils/install_server.sh,CAS_DELIMITER",2.0,2.0,2.0,0.7642045065086203,8.0,194.0,59.0,0.1082175925925926,4026.5,7.930481283422459,18.0,Feature Addition,False,,
0bb5160cb08ad8f16ce241e55a1ed6c3042bf2aa,24bfb570ee7f9f10eccdf034f5c772b84b876f5f,antirez,antirez@gmail.com,Tue Oct 4 10:05:21 2011 +0200,1317715521,Redis test ports selection made more robust. This prevents the test from hanging if an already bound port is selected but the TCP server listening to it does not cause a protocol error with a Redis client PING. Also base port moved away from the range near to the Redis Cluster gossip ports.,25.0,22.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.3424637724817959,7.0,344.0,82.0,51.30782986111112,4028.5,1.0107652905131128,166.0,Preventative,False,True,"[""dfcf5a0ac8f80a15a4d1e3e581de80064663c89e""]"
24bfb570ee7f9f10eccdf034f5c772b84b876f5f,909aee2c6cc6c35394a3dc212126c7f6034b3d63,antirez,antirez@gmail.com,Tue Oct 4 15:53:07 2011 +0200,1317736387,redis-trib: create subcommand fixed calling node info loading method. Was needed after recent refactoring.,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,490.0,25.0,3.5981597222222224,4030.0,1.277919847144084,941.0,None,False,,
909aee2c6cc6c35394a3dc212126c7f6034b3d63,9a01957f6830da6f46a758e29b5dcd583e098208,dvir volk,dvir@doit9.com,Tue Oct 4 16:58:55 2011 +0200,1317740335,fixes to install script,7.0,2.0,"utils/install_server.sh,CAS_DELIMITER,utils/redis.conf.tpl,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,8.0,276.5,8.0,1.1438831018518518,7.5,1.7004223804351288,8.0,Corrective,True,True,"[""2209d077d397352a11480501a691bd991c05ff36""]"
909aee2c6cc6c35394a3dc212126c7f6034b3d63,e3e69935108585c448bfd2ff5ba34fd7d9a6e4b9,antirez,antirez@gmail.com,Tue Oct 4 17:22:29 2011 +0200,1317741749,Introduced a redisAssert() variant that is able to show information about the client in the context where the failed assertion was detected.,41.0,2.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6931274153282879,7.0,689.5,176.0,51.61899884259259,4031.5,1.0100428320867738,943.0,Corrective,True,True,"[""d4d208595c78d78196c926c55799bc81ae06f230"", ""0da171b3a675ee0897e7d566a6dcefd02fb671c4""]"
e3e69935108585c448bfd2ff5ba34fd7d9a6e4b9,bab205f787afcb37e5b5a5d1eb16c8fafef6f95d,antirez,antirez@gmail.com,Tue Oct 4 18:05:26 2011 +0200,1317744326,redisAssertWithClientInfo() is now redisAssertWithInfo() that is also able to report an optional object. The client is also optional. Specifying NULL will prevent dumping the not available information (either client or object).,37.0,26.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3411538931451762,7.0,709.0,178.0,0.02982638888888889,4033.5,26.145518044237484,945.0,Preventative,False,True,"[""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""cf71b82111e8e099b2667fc0126fe9624a1f69f7"", ""96628cc40df778716b70f4b661ceb1bd329591dd""]"
bab205f787afcb37e5b5a5d1eb16c8fafef6f95d,eab0e26e03fa3c27a4e1172659cea32e1b83699e,antirez,antirez@gmail.com,Tue Oct 4 18:43:03 2011 +0200,1317746583,replaced redisAssert() with redisAssertWithInfo() in a shitload of places.,86.0,85.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",14.0,1.0,1.0,3.310675317086201,7.0,801.8571428571429,463.0,58.086217757936495,4041.5,1.066961224557624,959.0,Preventative,False,True,"[""f013f40003e5709203e31dcba4485f8342e2cccc"", ""12e91892a0ec06c55534753b5e52bf5036450107""]"
eab0e26e03fa3c27a4e1172659cea32e1b83699e 9a01957f6830da6f46a758e29b5dcd583e098208,093433c16ddf432e5005a6b45825febf448fc6a9,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 5 03:49:52 2011 -0700,1317811792,Merge pull request #118 from dvirsky/unstablefixes to install scripts,,,,,,,,,,,,,,,Merge,False,,
eab0e26e03fa3c27a4e1172659cea32e1b83699e,ad7a86fbe092a228d223045cd114b314302983d8,antirez,antirez@gmail.com,Wed Oct 5 16:02:45 2011 +0200,1317823365,just minor aesthetic changes to cluster.c,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1672.0,47.0,0.8886805555555556,4049.0,2.125263733687583,960.0,None,False,,
ad7a86fbe092a228d223045cd114b314302983d8,2aa26d2a636efd68b58c1ca1f972da6b03ef0226,antirez,antirez@gmail.com,Wed Oct 5 16:08:35 2011 +0200,1317823715,CONFIG SET/GET support for loglevel,26.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,699.0,39.0,0.8927314814814815,4050.0,2.1201576518176632,961.0,None,False,,
2aa26d2a636efd68b58c1ca1f972da6b03ef0226 093433c16ddf432e5005a6b45825febf448fc6a9,dbf6bca4315db7cf03ae0d33a25c515b0b0849c8,antirez,antirez@gmail.com,Wed Oct 5 16:08:54 2011 +0200,1317823734,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
dbf6bca4315db7cf03ae0d33a25c515b0b0849c8,9465d83efd8afa5f6c99486e0b9a232b6f25d31b,antirez,antirez@gmail.com,Wed Oct 5 17:40:02 2011 +0200,1317829202,"A node can populate a slot if a message from a trusted slot is received claiming ownership of this slot, that is currently empty or served by a node in FAIL state. However this feature was broken since calling clusterAddSlot() was not enough as the slot bit is already set in the node that pong us. We need to directly alter the table. This commit fixes the issue.",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1673.0,48.0,0.06755787037037038,4051.0,15.802124378961794,962.0,Corrective,True,,
9465d83efd8afa5f6c99486e0b9a232b6f25d31b,623131d40895316970ccc36f35c0f56c1c23d55b,antirez,antirez@gmail.com,Wed Oct 5 19:55:33 2011 +0200,1317837333,"Totally hackish and dirty, but working, support for Redis Cluster in redis-cli",63.0,16.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,835.0,54.0,13.898136574074075,4052.0,1.0719520918988108,963.0,None,False,True,"[""c30ffaab05fe7f2ddc5723d9b81382b5c9876d25""]"
623131d40895316970ccc36f35c0f56c1c23d55b,c563ce463b169c768ced856167d3ee09652207b1,antirez,antirez@gmail.com,Fri Oct 7 15:37:34 2011 +0200,1317994654,propagate PUBLISH messages using the redis cluster nodes bus. Still need to process the incoming packets of that type. Work in progress.,82.0,12.0,"src/cluster.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6896777025840459,7.0,1003.0,211.0,2.561153549382716,4054.0,1.2870973021872658,966.0,None,False,True,"[""21661d7acc9ed525c1150f6fa55646d19f5a31d9"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""d1a005ab3963c16b65e805675a76f0e40c723158""]"
c563ce463b169c768ced856167d3ee09652207b1,d38ef520852af3268dde9d254f04a000856f9b3c,antirez,antirez@gmail.com,Fri Oct 7 16:34:16 2011 +0200,1317998056,Redis Cluster: process node to node CLUSTERMSG_TYPE_PUBLISH messages and send it to the local clients.,28.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.22228483068568802,7.0,1405.5,207.0,0.039375,4056.5,20.047619047619047,968.0,None,False,,
d38ef520852af3268dde9d254f04a000856f9b3c,ff15dba09390b8b0a864e57fb0fdd84b20d4193d,antirez,antirez@gmail.com,Sat Oct 8 10:58:57 2011 +0200,1318064337,not used parameter for redisLog() removed. Error message grammar fixed. Thanks to @ardsrk.,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,862.0,50.0,15.790474537037033,4058.0,1.0633293190558948,969.0,Corrective,True,True,"[""e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7""]"
ff15dba09390b8b0a864e57fb0fdd84b20d4193d,56209f720ae602cf5de70a35573625cff9ef0e2c,Nathan Florea,florean@gmail.com,Sun Oct 9 00:46:03 2011 -0700,1318146363,Unlink Unix socket file on shutdown,4.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1911.0,158.0,9.7721875,0.0,0.0,0.0,None,False,,
ff15dba09390b8b0a864e57fb0fdd84b20d4193d,02a3e582582c381f14bc23aa9bed4b4645a2f118,antirez,antirez@gmail.com,Mon Oct 10 12:01:13 2011 +0200,1318240873,"Added two new tests for RENAME, currently both will fail because of bug #128.",19.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,616.0,18.0,118.62116898148147,4059.0,1.0084301984931214,167.0,Corrective,True,,
02a3e582582c381f14bc23aa9bed4b4645a2f118,4ab18a3331a870d9617ec5fc763f227cf4110283,antirez,antirez@gmail.com,Mon Oct 10 15:21:19 2011 +0200,1318252879,Fix for bug #128 about the RENAME command.,6.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,686.0,56.0,5.859907407407408,4060.0,1.1706511605859022,970.0,Corrective,True,True,"[""2ea9518a530bf64cfe3b6e124f67efc1d355240f""]"
4ab18a3331a870d9617ec5fc763f227cf4110283,d83eda48e9566a438048c10add8448e0fe65b534,antirez,antirez@gmail.com,Mon Oct 10 15:29:36 2011 +0200,1318253376,Issue #131. stime/utime reported in INFO was inverted. Fixed thanks to Didier Spezia.,3.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1915.0,159.0,1.2385763888888892,4061.0,1.8073785427938664,971.0,Corrective,True,,
56209f720ae602cf5de70a35573625cff9ef0e2c,85238765033e2fa89b1879383421d5a8aafff17f,Nathan Florea,florean@gmail.com,Mon Oct 10 11:21:15 2011 -0700,1318270875,Added a config directive for a Unix socket maskAdded a configuration directive to allow a user to specify thenpermissions to be granted to the Unix socket file.  I followednthe format Pieter and Salvatore discusses in issue #85 (nhttps://github.com/antirez/redis/issues/85).n,14.0,3.0,"redis.conf,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,2.3242764617775693,7.0,760.0,437.0,60.85221257716049,3.5,1.0164278041730652,5.0,Feature Addition,False,,
d83eda48e9566a438048c10add8448e0fe65b534 85238765033e2fa89b1879383421d5a8aafff17f,70cb03e172a892e75542d895932b320ee7bf5167,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 10 13:05:16 2011 -0700,1318277116,Merge pull request #126 from florean/unstableUnlink Unix socket file on shutdown,,,,,,,,,,,,,,,Merge,False,,
70cb03e172a892e75542d895932b320ee7bf5167,ab52d1f4a8f3173622e0758d6f82f1aff0812b93,antirez,antirez@gmail.com,Mon Oct 10 22:21:17 2011 +0200,1318278077,Fix for issue #132. Now AUTH raises an error if no server password is configured.,17.0,3.0,"src/redis.c,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7219280948873623,7.0,965.5,164.0,247.5230555555556,4062.5,6.9993438030918895,168.0,Corrective,True,True,"[""31a1439bfd6e24647f023281da65473047b69dfb""]"
ab52d1f4a8f3173622e0758d6f82f1aff0812b93,2b9ce0192ef93a6b01009d381202833e10dc7e4a,antirez,antirez@gmail.com,Thu Oct 13 14:51:29 2011 +0200,1318510289,small comment added,4.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1755.0,51.0,5.928622685185185,4064.0,1.1686732404979765,973.0,Feature Addition,False,,
2b9ce0192ef93a6b01009d381202833e10dc7e4a,dd9ad570622cc7a164173d4cb6103655482a9b9f,antirez,antirez@gmail.com,Thu Oct 13 15:16:03 2011 +0200,1318511763,redis-trib: fix for a slot allocation bug.,2.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,491.0,26.0,8.97425925925926,4065.0,1.1114298095375663,974.0,None,False,True,"[""57f8021cb212eb8bed35ea13329acacf46520e99""]"
dd9ad570622cc7a164173d4cb6103655482a9b9f,80ad7189e8de69ce5f7950dcdea4789be7db7014,antirez,antirez@gmail.com,Fri Oct 14 14:30:41 2011 +0200,1318595441,More informative error when DEBUG RELOAD fails.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,360.0,24.0,9.850868055555557,4066.0,1.1015138964769744,975.0,Corrective,True,,
80ad7189e8de69ce5f7950dcdea4789be7db7014,2e63cfe20d0a01c1afb6c6239c3ed447aec86fac,antirez,antirez@gmail.com,Fri Oct 14 16:52:11 2011 +0200,1318603931,redis-check-dump: RDB version 2 now supported.,12.0,3.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,681.0,5.0,346.19238425925926,4067.0,1.0028885672980348,976.0,None,False,True,"[""e5f794ff3abd844a08c0b01faa15550fd7014d7c"", ""145473acc5798a499a0f37e42df48a014a3955c1""]"
2e63cfe20d0a01c1afb6c6239c3ed447aec86fac,6d61e5bf5b3bdbdfa3032b2009120c3cceb64607,antirez,antirez@gmail.com,Fri Oct 14 16:59:32 2011 +0200,1318604372,Exit with Fatal error at startup if the RDB file signature or version is wrong. Ref: issue #103,13.0,3.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9886994082884974,7.0,1476.0,213.0,6.852337962962962,4068.5,1.0868459335207905,978.0,Corrective,True,True,"[""4178a80282ac917a48771da2c2d1ee65bc562161""]"
6d61e5bf5b3bdbdfa3032b2009120c3cceb64607,42a6fcd6c59f7a51d0bda011e55e50960a28cfb5,antirez,antirez@gmail.com,Mon Oct 17 10:25:35 2011 +0200,1318839935,FLUSHALL will only perform a blocking SAVE if RDB persistence is configured.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,689.0,57.0,6.79462962962963,4070.0,1.1471750565533785,979.0,None,False,True,"[""13cd1515f9030ed4f8ebd0b54fa90243858e244b""]"
42a6fcd6c59f7a51d0bda011e55e50960a28cfb5,13cd1515f9030ed4f8ebd0b54fa90243858e244b,antirez,antirez@gmail.com,Mon Oct 17 10:28:57 2011 +0200,1318840137,"FLUSHALL now prevents rdbSave() from resetting the dirty counter, so that the command will get replicated and put inside the AOF. This fixes issue #142",7.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,689.0,58.0,0.0023379629629629627,4071.0,428.7227722772277,980.0,Corrective,True,,
13cd1515f9030ed4f8ebd0b54fa90243858e244b,c0875a77a14d417f76b4419127733929ace587ee,antirez,antirez@gmail.com,Mon Oct 17 10:40:11 2011 +0200,1318840811,Regression test for issue #142 added,6.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,61.0,11.0,97.87436342592592,4072.0,1.0102171801174151,169.0,Feature Addition,False,,
c0875a77a14d417f76b4419127733929ace587ee,bfbc16ae8321603ce527012f6c33fd7619ad9b09,antirez,antirez@gmail.com,Mon Oct 17 16:39:05 2011 +0200,1318862345,Fixed a typo causing segfault on MIGRATE,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1758.0,52.0,4.0747222222222215,4073.0,1.2454155020792146,981.0,Corrective,True,,
bfbc16ae8321603ce527012f6c33fd7619ad9b09,e0aab1fc79a89bf0c6ed639e7823b27e73acd1db,antirez,antirez@gmail.com,Mon Oct 17 16:44:08 2011 +0200,1318862648,MIGRATE +NOKEY error was missing the final CRLF causing a protocol error.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1758.0,53.0,0.0035069444444444445,4074.0,286.1485148514852,982.0,None,False,,
e0aab1fc79a89bf0c6ed639e7823b27e73acd1db,6856c7b4d64f6afc00249128fc952c575d8c84bf,antirez,antirez@gmail.com,Mon Oct 17 17:35:23 2011 +0200,1318865723,First implementation of the ASKING command. Semantics still to verify.,23.0,2.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.0263137138648348,7.0,1439.75,439.0,5.724577546296297,4076.5,8.070167560766128,986.0,None,False,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
6856c7b4d64f6afc00249128fc952c575d8c84bf,76e772f39a971e14e9c8cd077b68ad8ed8cc7f97,antirez,antirez@gmail.com,Tue Oct 18 11:09:32 2011 +0200,1318928972,Return from syncWithMaster() ASAP if the event fired but the instance is no longer a slave. This should fix Issue #145.,7.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,558.0,20.0,130.81556712962964,4079.0,1.007644350148397,987.0,Corrective,True,,
76e772f39a971e14e9c8cd077b68ad8ed8cc7f97,046f70f758a263052a044f78e808a5ebf2bc24ca,smly,eowner@gmail.com,Tue Oct 18 20:18:26 2011 +0900,1318936706,Fixed a small memory leak I found with valgrind,1.0,0.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,690.0,6.0,3.8515625,0.0,0.0,0.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
76e772f39a971e14e9c8cd077b68ad8ed8cc7f97 046f70f758a263052a044f78e808a5ebf2bc24ca,d0dc3d82042402816f640576a1e203cb7da86206,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 18 05:13:25 2011 -0700,1318940005,Merge pull request #146 from smly/fixed-redis-check-dumpMemory leak in redis-check-dump,,,,,,,,,,,,,,,Merge,False,,
d0dc3d82042402816f640576a1e203cb7da86206,e491a1a1a8aadb1a5715576f97a63396b687f8a8,Jan Oberst,mail@janoberst.com,Tue Oct 18 14:14:16 2011 -0400,1318961656,Cleaned up redis root directory and changed links for redis.io and github issues and pull requests,5.0,194.0,"00-RELEASENOTES,CAS_DELIMITER,CLUSTER,CAS_DELIMITER,CONTRIBUTING,CAS_DELIMITER,README,CAS_DELIMITER",4.0,1.0,1.0,1.0378044944434164,7.0,67.5,21.0,77.04613136574075,1.5,0.7532731313168072,3.0,Perfective,False,,
e491a1a1a8aadb1a5715576f97a63396b687f8a8,3fb1c8a0bc4206fabf78a0d8d349906c87446858,Jan Oberst,mail@janoberst.com,Tue Oct 18 14:28:07 2011 -0400,1318962487,Actually let's just cpy over the README from stable. Missed the updated version there.,31.0,6.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,68.0,8.0,0.009618055555555557,4.0,104.971119133574,4.0,None,False,,
3fb1c8a0bc4206fabf78a0d8d349906c87446858,61e02c4f6c1b5f4119bac41f9198240b035c26b1,Jan Oberst,mail@janoberst.com,Tue Oct 18 14:28:23 2011 -0400,1318962503,Switched issues URL to Github in BUGS,1.0,1.0,"BUGS,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,1.0,940.3738773148148,5.0,1.0010634068258633,5.0,Corrective,True,,
76e772f39a971e14e9c8cd077b68ad8ed8cc7f97,15108778d5dde69edd61dfe11372b071339ad108,antirez,antirez@gmail.com,Wed Oct 19 16:42:10 2011 +0200,1319035330,"JSON support for Lua scripting, based on work from @lp, thanks!. We are using the good and fast cjson by Mark Pulford.",1697.0,2.0,"deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/lua_cjson.c,CAS_DELIMITER,deps/lua/src/strbuf.c,CAS_DELIMITER,deps/lua/src/strbuf.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,2.0,2.0,1.039666926542508,7.0,165.6,29.0,37.38691435185185,4082.0,1.0057205551280743,988.0,None,False,,
15108778d5dde69edd61dfe11372b071339ad108 d0dc3d82042402816f640576a1e203cb7da86206,8f2af26c2c8ddcb78a801f04ac1a29a7411b5bb4,antirez,antirez@gmail.com,Wed Oct 19 16:42:35 2011 +0200,1319035355,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
8f2af26c2c8ddcb78a801f04ac1a29a7411b5bb4,34296ae890178926347f0b8b47f66d96a541f1c3,antirez,antirez@gmail.com,Wed Oct 19 16:57:54 2011 +0200,1319036274,Lua cjson include paths now use the local includes.,2.0,2.0,"deps/lua/src/lua_cjson.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1299.0,1.0,0.010925925925925926,4085.0,92.52542372881358,197.0,None,False,,
34296ae890178926347f0b8b47f66d96a541f1c3 61e02c4f6c1b5f4119bac41f9198240b035c26b1,3a02bd96e757f2bb5659adfda1d57ea542ec49cf,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 20 00:53:22 2011 -0700,1319097202,Merge pull request #147 from janoberst/unstableCleaned up redis root directory a tiny bit and changed links to github issues,,,,,,,,,,,,,,,Merge,False,,
34296ae890178926347f0b8b47f66d96a541f1c3,73fac227a0dd3a7d25e29b4718f8588f55db07d6,antirez,antirez@gmail.com,Thu Oct 20 11:17:30 2011 +0200,1319102250,use signalModifiedKey to set the key as dirty in the context of WATCH for both MIGRATE and RESTORE.,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1774.0,55.0,2.7375810185185183,4086.0,1.3652859927196472,989.0,None,False,,
73fac227a0dd3a7d25e29b4718f8588f55db07d6 3a02bd96e757f2bb5659adfda1d57ea542ec49cf,2f5abbfeb7fa928399d86889c14ebf8064706869,antirez,antirez@gmail.com,Thu Oct 20 11:18:10 2011 +0200,1319102290,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
2f5abbfeb7fa928399d86889c14ebf8064706869,9ed32ba0831b5cabdb0c1c26fdafe96e8b485459,antirez,antirez@gmail.com,Thu Oct 20 16:02:23 2011 +0200,1319119343,Redis.call is now split into two variants of the same function. Redis.call will raise an error by default. Redis.pcall will return the error object instead.,58.0,12.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9517626756348312,7.0,407.0,33.0,11.994068287037035,4087.5,1.5350497713039457,170.0,None,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
9ed32ba0831b5cabdb0c1c26fdafe96e8b485459,9e6a9f30ea72445740a26599d50ed63a14a59f7f,antirez,antirez@gmail.com,Sun Oct 23 10:42:16 2011 +0200,1319359336,"A past commit removed the inclusion of redis.h from rdb.c, completely breaking 32 bit builds under Linux.",3.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1039.0,52.0,8.73800925925926,4089.0,1.1144425429556906,991.0,None,False,,
9e6a9f30ea72445740a26599d50ed63a14a59f7f,f013f40003e5709203e31dcba4485f8342e2cccc,antirez,antirez@gmail.com,Sun Oct 23 10:57:01 2011 +0200,1319360221,Fixed a few warnings compiling on Linux.,7.0,3.0,"src/cluster.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",4.0,1.0,1.0,1.9219280948873625,7.0,1334.75,139.0,57.83616608796297,4091.5,1.096979253823419,995.0,Corrective,True,True,"[""303dde3757b75f9ce529ad804abf7e6d6ae5e793""]"
f013f40003e5709203e31dcba4485f8342e2cccc,a84e7e46ec2de8bd24fcef263dcb0fa2024eb415,antirez,antirez@gmail.com,Sun Oct 23 12:16:07 2011 +0200,1319364967,removed a few entries for gitignore,0.0,2.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,26.0,20.0,148.84349537037036,4094.0,1.0067184662488051,1257.0,None,False,,
a84e7e46ec2de8bd24fcef263dcb0fa2024eb415,ca1f766a550bf204f4a618c374649bb3f182030c,antirez,antirez@gmail.com,Sun Oct 23 12:28:31 2011 +0200,1319365711,Better installation info inside README file.,29.0,8.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,93.0,9.0,4.666944444444447,4095.0,1.2142729599428606,1258.0,Perfective,False,,
ca1f766a550bf204f4a618c374649bb3f182030c,070e39454dbe8bcd164e04f7f83da047bd367e22,antirez,antirez@gmail.com,Mon Oct 24 22:47:00 2011 +0200,1319489220,SCRIPT command for introspection and control of the scripting environment.,51.0,4.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,0.5051268137294554,7.0,1227.3333333333333,354.0,6.23792824074074,4097.0,1.0870988021417254,998.0,None,False,,
070e39454dbe8bcd164e04f7f83da047bd367e22,a9b07ac459b435d0ea7ad37da933511f83e05507,antirez,antirez@gmail.com,Tue Oct 25 10:25:59 2011 +0200,1319531159,"SCRIPT LOAD implemented, scripting eval command refactoring.",61.0,36.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,715.0,31.0,0.4854050925925926,4099.0,3.0601349579150674,999.0,None,False,True,"[""e8c993f0fb0cfc29d953b710fd807ea8eb392b89"", ""41d3147344da4656b6a21c73373c34d25fe8f24d"", ""68681f2bcf8d17e573c27ff3fc676ddde381204c""]"
a9b07ac459b435d0ea7ad37da933511f83e05507,e8c993f0fb0cfc29d953b710fd807ea8eb392b89,antirez,antirez@gmail.com,Tue Oct 25 11:19:15 2011 +0200,1319534355,Fixes for the scripting refactoring and new commands. Tests for the new features.,38.0,7.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9564574047992596,7.0,464.5,37.0,2.420185185185185,4100.5,14.620194000630715,171.0,Corrective,True,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""65a9740fa880a8e5b4640037a3670f8a2f33080b""]"
e8c993f0fb0cfc29d953b710fd807ea8eb392b89,8cb8d417b1bc8de33da70b1ae1d5d16b7ada3eba,antirez,antirez@gmail.com,Tue Oct 25 12:10:15 2011 +0200,1319537415,Lau scripts default max execution time set to 5 seconds.,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1088.0,161.0,0.5578125,4102.0,2.7927170868347337,1001.0,None,False,,
8cb8d417b1bc8de33da70b1ae1d5d16b7ada3eba,e5abf6ef19ec0d4c583608c19aaaf97fc21b0298,antirez,antirez@gmail.com,Tue Oct 25 14:46:15 2011 +0200,1319546775,SCRIPT LOAD now returns the SHA1 instead of +OK,2.0,2.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,7.0,480.0,39.0,0.14375,4103.5,6.217391304347826,172.0,None,False,,
e5abf6ef19ec0d4c583608c19aaaf97fc21b0298,e089e61019a4d59eacb6340f0c58dc7bf3b61fd3,antirez,antirez@gmail.com,Tue Oct 25 19:54:10 2011 +0200,1319565250,Don't timeout scripts if the instance is a slave.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,745.0,34.0,0.21383101851851846,4105.0,5.6765899864682,1003.0,None,False,,
e089e61019a4d59eacb6340f0c58dc7bf3b61fd3,b508aeb994ffebd93fa5c3238057dfa2101d0424,antirez,antirez@gmail.com,Wed Oct 26 12:53:30 2011 +0200,1319626410,"Clear the AOF rewrite scheduled flag once an AOF rewrite is triggered. Fix for issue #161, probably fixing 159 as well.",1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,862.0,51.0,18.07954861111111,4106.0,1.0553111154216224,1004.0,Corrective,True,,
b508aeb994ffebd93fa5c3238057dfa2101d0424,bb48c5fa678b182deb59a59beb293f6c45060ca1,Nathan Florea,florean@gmail.com,Thu Oct 20 18:20:58 2011 -0700,1319160058,Set errno to 0 before calling strtol.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,730.0,41.0,10.291469907407407,7.0,1.0971678495877677,6.0,None,False,,
bb48c5fa678b182deb59a59beb293f6c45060ca1,115e3ff39e8cbf2f2e044fbd6c65c2e6602c537f,antirez,antirez@gmail.com,Thu Oct 27 14:49:10 2011 +0200,1319719750,"If a Lua script executes for more time than the max time specified in the configuration Redis will log a warning, and will start accepting queries (re-entering the event loop), returning -SLOWSCRIPT error for all the commands but SHUTDOWN that remains callable.",31.0,9.0,"redis.conf,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,2.0,2.0,1.873477838446826,7.0,1045.25,429.0,5.834027777777778,4108.5,1.0500848764609212,1007.0,None,False,True,"[""c25e7eafef350a985ae236987131c5d56b30cfef"", ""baee5650295e72fbcfe1f69ca7fa60f64cb5f740"", ""c494db89b5c2ef34758f599ee46ac7265782ad77""]"
115e3ff39e8cbf2f2e044fbd6c65c2e6602c537f,d8ba159b6cac421e97535fc40cfc8846d073940d,antirez,antirez@gmail.com,Thu Oct 27 20:56:12 2011 +0200,1319741772,use the more generic -BUSY error for idle scripts,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1935.0,166.0,0.2548842592592593,4111.0,4.923349377894832,1008.0,None,False,,
d8ba159b6cac421e97535fc40cfc8846d073940d,e1cf460cf1b8b5ee0446bc305aa76325f8762cd3,antirez,antirez@gmail.com,Fri Oct 28 17:31:40 2011 +0200,1319815900,sds.c single quotes support,22.0,2.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,662.0,18.0,71.19942129629631,4112.0,1.0140450579765037,1009.0,None,False,,
e1cf460cf1b8b5ee0446bc305aa76325f8762cd3,db6a2e7f78f99503eaa2fcc0574a16eea570637a,antirez,antirez@gmail.com,Fri Oct 28 17:43:04 2011 +0200,1319816584,Fixed a memory leak in redis-cli.c,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,882.0,55.0,22.90799768518519,4113.0,1.0436528767700508,1010.0,Corrective,True,,
db6a2e7f78f99503eaa2fcc0574a16eea570637a,b83e95830f45eb5e3b4e7c0a997d611f75f758b8,Ben Noordhuis,info@bnoordhuis.nl,Sun Oct 30 03:20:00 2011 +0000,1319944800,"build: fix sunos build, compile lua with __C99FEATURES__=1",5.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,242.0,55.0,26.55226851851852,0.0,0.0,0.0,None,False,,
db6a2e7f78f99503eaa2fcc0574a16eea570637a,1eceb85ebc127480ffe3d80be00e09472fa684ec,antirez,antirez@gmail.com,Mon Oct 31 09:57:06 2011 +0100,1320051426,It is now possible to disable password authentication via CONFIG SET. Thanks to Jan Oberst. This closes issue #171.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,731.0,42.0,10.31675925925926,4114.0,1.0969296631694203,1011.0,None,False,,
1eceb85ebc127480ffe3d80be00e09472fa684ec,58732c23d53d6fc652668a516556ea182b0ed0f8,antirez,antirez@gmail.com,Mon Oct 31 10:48:41 2011 +0100,1320054521,"maxclients configuration is now implemented dealing with the actual process rlimits. Setting maxclients to 0 no longer makes sense and is now invalid, the new default is 10000. See issue #162 for more information.",43.0,6.0,"redis.conf,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.133512835991043,7.0,1112.25,462.0,6.282086226851853,4116.5,1.1004105484263145,1014.0,Feature Addition,False,True,"[""a48c8d873bc2a49f66ab398ebed51dc45764ca17""]"
58732c23d53d6fc652668a516556ea182b0ed0f8,8996bf77204b6084796608ebad3b1688212d8bfc,antirez,antirez@gmail.com,Mon Oct 31 11:13:28 2011 +0100,1320056008,7c6da73,33.0,6.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,2.0,2.0,2.1261134162704085,7.0,957.4,465.0,2.6298125000000003,4121.0,19.680974189165774,1018.0,None,False,True,"[""9edfe63553314fc2258392db94bfce8a4144b303""]"
8996bf77204b6084796608ebad3b1688212d8bfc,f15e33a884e45923a104ac4bfb230199e2a2f443,Herbert G. Fischer,hgfischer@sp.r7.com,Tue Oct 18 19:01:30 2011 -0200,1318971690,fixed typo in comments,2.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,443.0,70.0,-12.549976851851852,0.0,0.0,0.0,Corrective,True,,
f15e33a884e45923a104ac4bfb230199e2a2f443,aeecbdfae3e410959b396ab72d652673aea5c59a,antirez,antirez@gmail.com,Mon Oct 31 11:14:24 2011 +0100,1320056064,1fe4cd5,4.0,4.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,1533.0,334.0,0.0006481481481481481,4124.5,1158.142857142857,1020.0,None,False,,
aeecbdfae3e410959b396ab72d652673aea5c59a,85ccd576328355462a030392951fa9256589b7f6,antirez,antirez@gmail.com,Mon Oct 31 11:17:21 2011 +0100,1320056241,added more clarifications in redis.conf about ther right value to set as replication timeout.,4.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,443.0,71.0,12.552673611111107,4126.0,1.0796643034767384,1262.0,Feature Addition,False,,
85ccd576328355462a030392951fa9256589b7f6 b83e95830f45eb5e3b4e7c0a997d611f75f758b8,404cd6450d8b7cd8fe905df831cd2755030f7aec,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 31 03:21:09 2011 -0700,1320056469,"Merge pull request #170 from bnoordhuis/fix-sunos-buildbuild: fix sunos build, compile lua with __C99FEATURES__=1",,,,,,,,,,,,,,,Merge,False,,
404cd6450d8b7cd8fe905df831cd2755030f7aec,aba4adb7dcf202246b2663e34b18c9968003509c,antirez,antirez@gmail.com,Mon Oct 31 15:43:09 2011 +0100,1320072189,"use timeout 0 by default, as this is a common source of problems.",1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,447.0,72.0,0.18458333333333327,4127.0,6.417607223476298,1263.0,Corrective,True,,
aba4adb7dcf202246b2663e34b18c9968003509c,d569f39a77d68af007de0777d0aa7e4d66673ae7,antirez,antirez@gmail.com,Mon Oct 31 15:47:12 2011 +0100,1320072432,removed the vmpointer structure that is no longer user in Redis >= 2.5.x,0.0,25.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1096.0,166.0,0.18944444444444444,4128.0,6.278592375366569,1021.0,None,False,,
d569f39a77d68af007de0777d0aa7e4d66673ae7,ef23f3ac920c4cc1f403a2765455e455b03101bd,antirez,antirez@gmail.com,Mon Oct 31 16:09:07 2011 +0100,1320073747,Script max execution time test disabled for now since it is no longer enforced.,12.0,10.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,215.0,7.0,6.099212962962962,4129.0,1.1639555801826282,173.0,Preventative,False,,
ef23f3ac920c4cc1f403a2765455e455b03101bd,b91cbf66bb527fbc7eef8079e9153fa5357186e2,Jason Davies,jason@jasondavies.com,Tue Nov 1 19:57:51 2011 +0000,1320177471,Fix minor typos.,2.0,2.0,"src/zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,467.0,5.0,237.1436226851852,0.0,0.0,0.0,Corrective,True,,
ef23f3ac920c4cc1f403a2765455e455b03101bd,6a7841eb099e8f92bb2c321e87e2b1f4724ddaed,antirez,antirez@gmail.com,Wed Nov 2 15:28:45 2011 +0100,1320244125,added an union in the dict.h structure to store 64 bit integers directly into hash table entries.,12.0,7.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.6292492238560345,7.0,439.0,12.0,176.25896990740742,4130.5,1.0042551025936095,1023.0,Feature Addition,False,,
ef23f3ac920c4cc1f403a2765455e455b03101bd,35267245948fef5561a921943c1eb118cfb704b0,antirez,antirez@gmail.com,Wed Nov 2 16:09:14 2011 +0100,1320246554,added a comment to sdsMakeRoomFor() to make it clear what the function actually does.,6.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,682.0,19.0,4.984421296296296,4132.0,1.200625095784551,1024.0,Feature Addition,False,,
35267245948fef5561a921943c1eb118cfb704b0,d0b2a9b2234afe82d6ed42a8c45f8221ede25d8f,antirez,antirez@gmail.com,Wed Nov 2 16:50:59 2011 +0100,1320249059,sdsMakeRoomFor() exposed as public API. sdsIncrLen() added. Both the changes make it possible to copy stuff from a system call to an sds buffer without the need of an additional buffer and copying overhead.,57.0,1.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.362051251733998,7.0,389.5,30.0,38.12091435185185,4133.5,18.25206706187873,1026.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""cf68f4ee6a4c466b893fbb269f6aff14c7c75e6a"", ""60a4f12f8b998c44dfff0e88202b01598287390d""]"
d0b2a9b2234afe82d6ed42a8c45f8221ede25d8f,dd5fbedf7bb9ac02d14aa9ecaeafb47e48b9a587,antirez,antirez@gmail.com,Wed Nov 2 16:51:33 2011 +0100,1320249093,I/O buffer length enlarged,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1071.0,167.0,2.0446875,4135.0,1.4890722909980134,1027.0,None,False,,
dd5fbedf7bb9ac02d14aa9ecaeafb47e48b9a587,a54806ac6af77940070a90a44b603bec46cfe599,antirez,antirez@gmail.com,Wed Nov 2 16:52:10 2011 +0100,1320249130,testhelp.h now exits with retcode 1 on failed tests.,1.0,0.0,"src/testhelp.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,54.0,1.0,405.07422453703697,4136.0,1.0024686833657286,1028.0,Corrective,True,,
a54806ac6af77940070a90a44b603bec46cfe599,b8d743e1813abbf3d55e92e9945dc47da3ef7836,antirez,antirez@gmail.com,Wed Nov 2 16:52:45 2011 +0100,1320249165,sdsIncrLen() / sdsMakeRoomFor() used to avoid copying to intermediate buffer while reading the client query.,5.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,995.0,65.0,2.2528240740740744,4137.0,1.4438873019461171,1029.0,None,False,True,"[""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509""]"
b8d743e1813abbf3d55e92e9945dc47da3ef7836,921709557253dae2db676c2feb933386e4066494,antirez,antirez@gmail.com,Wed Nov 2 17:30:19 2011 +0100,1320251419,optimized object creation in multi-bulk protocol parsing,20.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,997.0,66.0,0.02608796296296296,4138.0,39.331854480922814,1030.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""60a4f12f8b998c44dfff0e88202b01598287390d""]"
921709557253dae2db676c2feb933386e4066494,826b5beb9c04fef0d9942b8846989732b0d03ead,antirez,antirez@gmail.com,Thu Nov 3 15:53:40 2011 +0100,1320332020,further optimizations for the multi bulk protocol parsing code when big objects are transmitted to Redis.,39.0,5.0,"src/networking.c,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,7.0,792.5,89.0,39.462048611111115,4139.5,1.5423086998391742,1032.0,None,False,True,"[""53272781d0b7f664fc6e3fcd5c9032dd09103bbc"", ""f0266532fc82b8ae9a87407adaf4555dddce690e"", ""60a4f12f8b998c44dfff0e88202b01598287390d""]"
826b5beb9c04fef0d9942b8846989732b0d03ead,94d490b9f68a1972a3c89cf0ffc801b64ec2083e,antirez,antirez@gmail.com,Fri Nov 4 11:16:11 2011 +0100,1320401771,Added a define to set the size threshold to enable the multi bulk parsing big objects optimization.,14.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,7.0,1058.5,236.0,1.2872048611111109,4141.5,1.8135652381586445,1034.0,Feature Addition,False,True,"[""53272781d0b7f664fc6e3fcd5c9032dd09103bbc""]"
94d490b9f68a1972a3c89cf0ffc801b64ec2083e,ca908473e8298e617d099a57ae1fb8db4bccdfa9,antirez,antirez@gmail.com,Fri Nov 4 11:18:15 2011 +0100,1320401895,A comment moved a few lines for clarity.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1051.0,69.0,0.0014351851851851852,4143.0,697.7741935483873,1035.0,None,False,True,"[""53272781d0b7f664fc6e3fcd5c9032dd09103bbc""]"
ca908473e8298e617d099a57ae1fb8db4bccdfa9,410dfe90b2cc62cbbeddb7f7617e9946dc1eab98,antirez,antirez@gmail.com,Fri Nov 4 11:20:19 2011 +0100,1320402019,PING / MSET benchmarks enabled again.,0.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,573.0,23.0,0.8101736111111111,4144.0,2.234303347190674,1036.0,None,False,,
410dfe90b2cc62cbbeddb7f7617e9946dc1eab98,7b86f5e6d5ecdafc3e47f640ac99614ee2295c06,antirez,antirez@gmail.com,Fri Nov 4 14:49:24 2011 +0100,1320414564,csv output for redis-benchmark,10.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,571.0,24.0,0.14519675925925926,4145.0,7.887206058190514,1037.0,None,False,,
7b86f5e6d5ecdafc3e47f640ac99614ee2295c06,9f080a01fac2353a1c3a855729cd337ef4384c5a,antirez,antirez@gmail.com,Fri Nov 4 20:45:46 2011 +0100,1320435946,first version of the speed regression test,85.0,0.0,"utils/speed-regression.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,4146.0,0.0,19.0,Preventative,False,,
9f080a01fac2353a1c3a855729cd337ef4384c5a,d9747b496e06e6647cd9d4dbc4e8b89eda5f2ccc,antirez,antirez@gmail.com,Mon Nov 7 11:29:37 2011 +0100,1320661777,redis-benchmark: ability to run selected tests. Better help with examples.,142.0,67.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,579.0,25.0,2.861261574074073,4147.0,1.3494961834531356,1038.0,None,False,True,"[""8dd19d818f52d27284fd3e3b6e0fc237388e7678"", ""dbb6cb442a4b432bf1db42a60f4871c4854fa11d""]"
d9747b496e06e6647cd9d4dbc4e8b89eda5f2ccc,84c6bdfcd0cd12f741bbb117648d057c26c85b89,antirez,antirez@gmail.com,Mon Nov 7 15:35:01 2011 +0100,1320676501,speed-regression.tcl script: obtain test names dynamically.,11.0,6.0,"utils/speed-regression.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,85.0,1.0,2.784201388888889,4148.0,1.3591694207145977,20.0,None,False,,
84c6bdfcd0cd12f741bbb117648d057c26c85b89,85bc9b06b747939dcf4151a9a820957d2b37168b,antirez,antirez@gmail.com,Mon Nov 7 16:00:15 2011 +0100,1320678015,speed-regression.tcl script: killing previously tested instance fixed. Don't run if there is already an instance running in the same port.,22.0,6.0,"utils/speed-regression.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,90.0,2.0,0.01752314814814815,4149.0,58.06737120211361,21.0,None,False,,
85bc9b06b747939dcf4151a9a820957d2b37168b,55758a5fab86390b37b584c3ee6b6d80bb98c320,antirez,antirez@gmail.com,Mon Nov 7 16:52:55 2011 +0100,1320681175,"speed-regression.tcl: move tests, data size, requests in global vars that will be changed via command line options.",6.0,1.0,"utils/speed-regression.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,106.0,3.0,0.03657407407407407,4150.0,28.34177215189873,22.0,None,False,,
55758a5fab86390b37b584c3ee6b6d80bb98c320,d5a80182870140ff338c9ad9a35d3698f3911bc1,antirez,antirez@gmail.com,Mon Nov 7 17:18:50 2011 +0100,1320682730,"speed-regression.tcl: command line options to select tests, data size, and number of requests.",19.0,0.0,"utils/speed-regression.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,111.0,4.0,0.017997685185185186,4151.0,56.562700964630224,23.0,None,False,,
d5a80182870140ff338c9ad9a35d3698f3911bc1,65330badb97206cd7cf0973d3f2267b0a523c05e,antirez,antirez@gmail.com,Tue Nov 8 10:59:35 2011 +0100,1320746375,"hiredis/redis changes for speed with big payloads: read buffer size set to 16k, request buffer size is no longer destroyed when emtpy and large (better fix needed). Redis clients static output buffer set to 16k as well.",4.0,3.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,2.0,2.0,0.8631205685666309,7.0,1143.0,177.0,67.46123263888889,4152.5,1.0075245501088077,1039.0,None,False,,
65330badb97206cd7cf0973d3f2267b0a523c05e,53272781d0b7f664fc6e3fcd5c9032dd09103bbc,antirez,antirez@gmail.com,Tue Nov 8 11:22:40 2011 +0100,1320747760,"Multi bulk optimization for creating big objects without copying data is no longer optional, #ifdefs removed. Also debugging messages removed.",0.0,8.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1051.0,70.0,4.0030671296296285,4154.0,1.2498084512743413,1040.0,Corrective,True,,
53272781d0b7f664fc6e3fcd5c9032dd09103bbc,b0a2e34059b4b442a25fc7e25afde39706ad9034,antirez,antirez@gmail.com,Tue Nov 8 11:24:12 2011 +0100,1320747852,yet another #if REDIS_MBULK_BIG_ARG removed.,0.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1043.0,71.0,0.0010648148148148149,4155.0,940.1304347826086,1041.0,None,False,,
b0a2e34059b4b442a25fc7e25afde39706ad9034,b90314588fc4863f2fdb6bec0a46d48385c66994,antirez,antirez@gmail.com,Tue Nov 8 11:26:06 2011 +0100,1320747966,useless double if removed.,3.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1041.0,72.0,0.0013194444444444445,4156.0,758.8947368421052,1042.0,None,False,,
6a7841eb099e8f92bb2c321e87e2b1f4724ddaed b90314588fc4863f2fdb6bec0a46d48385c66994,66d8818cb751ab23e70e82fc5ab1017399f49109,antirez,antirez@gmail.com,Tue Nov 8 16:15:08 2011 +0100,1320765308,Merge branch 'unstable' into ttlres,,,,,,,,,,,,,,,Merge,False,,
66d8818cb751ab23e70e82fc5ab1017399f49109,71a50956b1ff6b45b8265afa8e7e0264c465cec8,antirez,antirez@gmail.com,Tue Nov 8 16:57:20 2011 +0100,1320767840,"dict.c: added two lower level methods for directly manipulating hash entries. This is useful in order to set 64 bit integers as values directly inside the hash entry (in order to save memory), without casting, and even in 32 bit builds.",40.0,3.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.27138958750811115,7.0,441.5,14.0,6.061516203703704,4157.5,1.1237314188060301,1044.0,None,False,True,"[""65fd32ab0a7ff1d3d052e3b70dcceac6719de58c""]"
71a50956b1ff6b45b8265afa8e7e0264c465cec8,c0ba9ebe13865189a3b21f7be8a910e349b59fda,antirez,antirez@gmail.com,Tue Nov 8 17:07:55 2011 +0100,1320768475,dict.c API names modified to be more coincise and consistent.,80.0,81.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",15.0,1.0,1.0,3.6640156574995606,7.0,856.6,620.0,21.65589969135802,4166.0,1.0143265990725308,1059.0,None,False,True,"[""4be855e757b800a9f848823fcee8b7faf3e1eba0"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
c0ba9ebe13865189a3b21f7be8a910e349b59fda,aa9a61ccd7cc1ffa1441ef74edd9d51954fc7896,antirez,antirez@gmail.com,Tue Nov 8 19:41:29 2011 +0100,1320777689,dict.c: added macros in dict.h to set signed and unsigned 64 bit values directly inside the hash entry without using additional memory.,7.0,1.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,7.0,459.5,18.0,0.10664351851851853,4174.5,8.032776210115044,1061.0,None,False,True,"[""14ed10d9573b57c43011c2af2f5abb771abc7bfb""]"
aa9a61ccd7cc1ffa1441ef74edd9d51954fc7896,b28d0461b47a8c607aabe437bdca703ee7619014,antirez,antirez@gmail.com,Tue Nov 8 21:00:52 2011 +0100,1320782452,"32bit build fixed, broken by a previous commit fixing build on Solaris",7.0,6.0,"deps/lua/Makefile,CAS_DELIMITER,deps/lua/src/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",3.0,2.0,3.0,1.3346791410515948,8.0,185.3333333333333,59.0,74.05206790123457,4177.0,1.0048033051311878,1062.0,Corrective,True,,
b28d0461b47a8c607aabe437bdca703ee7619014,6c578b764a65e5047851c1654131a5e45722f308,antirez,antirez@gmail.com,Tue Nov 8 23:59:46 2011 +0100,1320793186,dict.c: added macros to get signed/unsigned integer values from hash entry. Field name of hash entry union modified for clarity.,4.0,2.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,169.0,7.0,0.1793634259259259,4179.0,6.57527263341292,1063.0,None,False,True,"[""14ed10d9573b57c43011c2af2f5abb771abc7bfb""]"
6c578b764a65e5047851c1654131a5e45722f308,2c2b20853724d86eaa6c51308f11645cc576dc1c,antirez,antirez@gmail.com,Wed Nov 9 00:03:03 2011 +0100,1320793383,added mstime() to get UNIX time in milliseconds.,6.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,7.0,1521.0,341.0,0.4161805555555556,4180.5,3.3350833453225,1065.0,Feature Addition,False,,
2c2b20853724d86eaa6c51308f11645cc576dc1c,14ed10d9573b57c43011c2af2f5abb771abc7bfb,antirez,antirez@gmail.com,Wed Nov 9 13:39:59 2011 +0100,1320842399,dict set/get macros for integers fixed.,4.0,4.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,171.0,8.0,0.5695949074074074,4182.0,2.7556336740292204,1066.0,Corrective,True,,
14ed10d9573b57c43011c2af2f5abb771abc7bfb,7dcc10b65e0075fccc90d93bac5b078baefdbb07,antirez,antirez@gmail.com,Wed Nov 9 16:51:19 2011 +0100,1320853879,"Initial support for key expire times with millisecond resolution. RDB version is now 3, new opcoded added for high resolution times. Redis is still able to correctly load RDB version 2. Tests passing but still a work in progress. API to specify milliseconds expires still missing, but the precision of normal expires is now already improved and working.",76.0,39.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",6.0,1.0,1.0,1.6283583314003556,7.0,696.1666666666665,371.0,55.24929205246914,4185.5,1.3114424444620894,1072.0,Feature Addition,False,True,"[""bdbdb02edb5aff16c3cbfb0fba31152d69e30160"", ""dab5332f95bd2f4fabf8e746b0998cd5bc37e448"", ""12d293ca6edab6cc94cbd90840c629a535a12aef"", ""4be855e757b800a9f848823fcee8b7faf3e1eba0"", ""d48d1309c6712fef8894d4c5eced9bf9164b926a"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""2a887bd53f992b940c7c9838a5dbdc2de1e3720a""]"
7dcc10b65e0075fccc90d93bac5b078baefdbb07,b0b74486e14bf93bb8800d0194220d74f5c615ce,antirez,antirez@gmail.com,Wed Nov 9 17:20:14 2011 +0100,1320855614,use EXPIREAT ... ms form when rewriting the AOF,3.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,863.0,54.0,0.02008101851851852,4189.0,50.79827089337175,1073.0,None,False,True,"[""12d293ca6edab6cc94cbd90840c629a535a12aef""]"
b0b74486e14bf93bb8800d0194220d74f5c615ce,52d46855d90bfddb3e03d957c48101d123e4dfe7,antirez,antirez@gmail.com,Wed Nov 9 18:05:35 2011 +0100,1320858335,"TTL, EXPIRE and EXPIREAT now support the milliseconds input/output form",31.0,7.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.6292492238560345,7.0,1345.5,233.0,0.40166666666666667,4190.5,11.31720017580846,1075.0,None,False,True,"[""12d293ca6edab6cc94cbd90840c629a535a12aef""]"
52d46855d90bfddb3e03d957c48101d123e4dfe7,bdbdb02edb5aff16c3cbfb0fba31152d69e30160,antirez,antirez@gmail.com,Wed Nov 9 18:47:48 2011 +0100,1320860868,Fixed bug breaking rdbSaveMillisecondTime() in 32 bit systems. Thanks to @anydot (Pu00c5u0099emysl Hrubu00c3u00bd),1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1060.0,55.0,0.0808912037037037,4192.0,13.362283588496208,1076.0,Corrective,True,,
bdbdb02edb5aff16c3cbfb0fba31152d69e30160,dab5332f95bd2f4fabf8e746b0998cd5bc37e448,antirez,antirez@gmail.com,Wed Nov 9 21:59:27 2011 +0100,1320872367,Fixed a few typos,2.0,2.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,571.5,60.0,0.17353587962962966,4193.5,6.197472692119103,1078.0,Corrective,True,True,"[""2a887bd53f992b940c7c9838a5dbdc2de1e3720a""]"
b90314588fc4863f2fdb6bec0a46d48385c66994,57f8021cb212eb8bed35ea13329acacf46520e99,Dave Hoover,dave.hoover@gmail.com,Wed Nov 9 19:06:12 2011 -0600,1320887172,Fixing inject: it was failing when there was 1 or >2 sources,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,492.0,27.0,27.493159722222234,0.0,0.0,0.0,Corrective,True,,
dab5332f95bd2f4fabf8e746b0998cd5bc37e448,12d293ca6edab6cc94cbd90840c629a535a12aef,antirez,antirez@gmail.com,Thu Nov 10 17:52:02 2011 +0100,1320943922,high resolution expires API modified to use separated commands. AOF transation to PEXPIREAT of all the expire-style commands fixed.,86.0,60.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",5.0,1.0,1.0,1.9671288943659198,7.0,1014.2,493.0,1.0175185185185185,4197.0,1.4503931325543948,1083.0,Corrective,True,True,"[""39da5d1f2183eb6e7440bf742b558f974a5a4172"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
12d293ca6edab6cc94cbd90840c629a535a12aef,64c7499eb88040c26aba264ab52756fd764d8fa4,antirez,antirez@gmail.com,Fri Nov 11 15:11:50 2011 +0100,1321020710,"new tests for EXPIRE family functions, new millisecond precision, and new millisecond argument variants.",94.0,5.0,"tests/unit/expire.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9371858565132072,7.0,163.5,26.0,123.01406828703705,4200.5,1.0060970229252089,175.0,Feature Addition,False,,
64c7499eb88040c26aba264ab52756fd764d8fa4,3570629f9006687177b86f279ea9a6b2e8690e67,antirez,antirez@gmail.com,Fri Nov 11 17:16:03 2011 +0100,1321028163,set default client timeout to zero inside redis.h as well,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1076.0,173.0,0.975011574074074,4202.0,2.025628850559704,1084.0,None,False,,
3570629f9006687177b86f279ea9a6b2e8690e67,4be855e757b800a9f848823fcee8b7faf3e1eba0,antirez,antirez@gmail.com,Sat Nov 12 01:04:27 2011 +0100,1321056267,"Fixed issues with expire introduced with latest millisecond resolution feature. Many time_t were not converted to long long, and one time() call was not replaced with mstime().",7.0,7.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.8423709931771088,7.0,1070.75,313.0,2.0149942129629634,4204.5,1.3142478266533535,1088.0,Corrective,True,True,"[""2a887bd53f992b940c7c9838a5dbdc2de1e3720a"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
4be855e757b800a9f848823fcee8b7faf3e1eba0,762eea07cac57eecb89bf5a079139cd664f4b9d8,antirez,antirez@gmail.com,Sat Nov 12 11:27:38 2011 +0100,1321093658,Added test to make sure Redis evicts expired keys actively (and not just in a lazy fashion).,14.0,0.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,130.0,9.0,0.8443055555555555,4207.0,2.184405329823984,176.0,Feature Addition,False,,
64c7499eb88040c26aba264ab52756fd764d8fa4,5574b53eae1743cca9eed5a9dd25bf418c974701,antirez,antirez@gmail.com,Sat Nov 12 19:27:35 2011 +0100,1321122455,INCRBYFLOAT implementation,88.0,2.0,"src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",4.0,1.0,1.0,1.1886600676183745,7.0,991.0,413.0,2.0051880787037035,4209.5,1.1855833223551004,1092.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
5574b53eae1743cca9eed5a9dd25bf418c974701,5244d6e54ec08666f953124739a498d0537a2bf9,antirez,antirez@gmail.com,Mon Nov 14 10:15:13 2011 +0100,1321262113,rewrite INCRBYFLOAT as SETs for AOF/replication,9.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,456.0,33.0,1.6164120370370367,4212.0,1.6186541408297412,1093.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
5244d6e54ec08666f953124739a498d0537a2bf9,d93f9a8644821222fedbb32c522624bfa98b17df,antirez,antirez@gmail.com,Mon Nov 14 15:34:44 2011 +0100,1321281284,string to number API is now more strict not accepting spaces before or after the number. A few tests converted to match the new error messages using the word float instead of double.,22.0,24.0,"src/object.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.4910138707589942,7.0,1142.0,124.0,44.651184413580246,4214.0,1.2266957543785566,177.0,Feature Addition,False,True,"[""9d520a7f70d24ea663b8de9c7178624d76a8d846"", ""de474186bdb1a595bb77ccec577754134884bb52""]"
d93f9a8644821222fedbb32c522624bfa98b17df,c9df799b2ce424ed9d35674ac7a7fe57bd1e34e0,antirez,antirez@gmail.com,Mon Nov 14 15:37:13 2011 +0100,1321281433,INCRBYFLOAT tests,66.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,635.0,19.0,35.19166666666667,4216.0,1.028415818138764,178.0,Preventative,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5""]"
c9df799b2ce424ed9d35674ac7a7fe57bd1e34e0,70023978fd82d00740e7b38c7ad17f3679a27c84,antirez,antirez@gmail.com,Mon Nov 14 15:39:55 2011 +0100,1321281595,test for the new more strict behavior about number parsing,13.0,1.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,701.0,20.0,0.001875,4217.0,534.3333333333334,179.0,Feature Addition,False,,
70023978fd82d00740e7b38c7ad17f3679a27c84 762eea07cac57eecb89bf5a079139cd664f4b9d8,d4a3cfed9c95e0ca5f8bcc771f8844ad17895c69,antirez,antirez@gmail.com,Mon Nov 14 15:59:56 2011 +0100,1321282796,Merge branch 'unstable' into incrbyfloat,,,,,,,,,,,,,,,Merge,False,,
d4a3cfed9c95e0ca5f8bcc771f8844ad17895c69,68bfe993c8aa0d43bb2a5cf02b5d325effb67b0c,antirez,antirez@gmail.com,Tue Nov 15 15:09:39 2011 +0100,1321366179,HINCRBYFLOAT implemented,29.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",3.0,1.0,1.0,0.4310167689753773,7.0,1181.3333333333333,368.0,4.186543209876542,4219.0,1.2037897366101111,1098.0,None,False,,
68bfe993c8aa0d43bb2a5cf02b5d325effb67b0c,3c5680ed9d6ab8435d0641a4428334e434655d8d,antirez,antirez@gmail.com,Tue Nov 15 15:26:10 2011 +0100,1321367170,HINCRBYFLOAT tests,75.0,3.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,316.0,9.0,111.1642824074074,4221.0,1.0089956951850334,180.0,Preventative,False,,
3c5680ed9d6ab8435d0641a4428334e434655d8d 57f8021cb212eb8bed35ea13329acacf46520e99,7b81e5a16ca577b7aa10dd0398cce4ba9cdf0842,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 15 06:36:53 2011 -0800,1321367813,Merge pull request #181 from redsquirrel/unstableFixing inject: it was failing when there was 1 or >2 sources,,,,,,,,,,,,,,,Merge,False,,
762eea07cac57eecb89bf5a079139cd664f4b9d8,61c0e893aad4ba476aa9e001a3df10844972b901,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Nov 15 09:36:13 2011 -0800,1321378573,CCLINK already includes ALLOC_LINK,5.0,5.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,247.0,57.0,6.899548611111111,900.0,1.1449370178202076,390.0,None,False,,
61c0e893aad4ba476aa9e001a3df10844972b901,321a0440c0dde3ea00a72da0751fd7beb8f9bb93,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Nov 15 09:39:38 2011 -0800,1321378778,Use CCLINK as last argument,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,247.0,58.0,0.002372685185185185,901.0,422.4634146341464,391.0,None,False,,
321a0440c0dde3ea00a72da0751fd7beb8f9bb93,4b8a63941dc360a0d2dcba1ec182a006221e4a20,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Nov 15 12:40:49 2011 -0800,1321389649,"Rebuild deps/ and src/ when ARCH changesThis change moves the build instructions for dependencies to a separatenMakefile in deps/. The ARCH environment variable is stored in an.make-arch file in the same directory as the Makefile. The contents ofnthis file is read and compared to the current ARCH, and, on a mismatchntriggers rebuilding the entire source tree.nnWhen file .make-arch exists and matches with ARCH from the environment,nthe dependencies are assumed to already be built.nnThe new clean target only cleans the Redis source tree, not itsndependencies. To clear the dependencies as well, the distclean targetncan be used.n",88.0,35.0,".gitignore,CAS_DELIMITER,deps/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",3.0,3.0,3.0,1.0592252769421393,8.0,90.33333333333331,80.0,7.853213734567902,903.0,1.0425974013558503,392.0,Feature Addition,False,,
4b8a63941dc360a0d2dcba1ec182a006221e4a20,5bb2c88e9414df90f029b88a38a67f5fc1e36219,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Nov 15 13:09:31 2011 -0800,1321391371,"Rebuild source when allocator changesTo do so, the Makefile stores the contents of the MALLOC environmentnvariable in a file named .make-malloc. When the contents of this filenand the MALLOC variable are not equal, it forces a rebuild of the Redisnsource tree.nnA side-effect of this change is that choosing an allocator can now bendone using the single MALLOC variable instead of USE_TCMALLOC,nUSE_JEMALLOC and so forth. These variables continue to work fornbackwards compatibility.n",44.0,17.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,240.0,60.0,0.01993055555555556,905.0,51.174216027874564,393.0,None,False,,
5bb2c88e9414df90f029b88a38a67f5fc1e36219,a63a3d4ddb992747020bd48f00c35158d7a447d6,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Nov 15 13:28:57 2011 -0800,1321392537,Update README on allocators,9.0,8.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,114.0,10.0,23.458634259259266,906.0,1.0426282275834236,238.0,None,False,,
7b81e5a16ca577b7aa10dd0398cce4ba9cdf0842 a63a3d4ddb992747020bd48f00c35158d7a447d6,32adb531560004cfb3597cbe87234f80eacf0e25,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 16 01:29:42 2011 -0800,1321435782,Merge pull request #192 from pietern/makefileAdd separate clean/distclean targets to Makefile,,,,,,,,,,,,,,,Merge,False,,
32adb531560004cfb3597cbe87234f80eacf0e25,cd4aba36cdf5b9599e94029793dcfd13cd199577,antirez,antirez@gmail.com,Wed Nov 16 13:30:43 2011 +0100,1321446643,"valgrind handles floating point numbers differently for some reason, so using simpler numbers to make tests happy.",5.0,5.0,"tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9709505944546686,7.0,550.5,31.0,1.415052083333333,4222.5,1.4384139809668224,182.0,Preventative,False,,
cd4aba36cdf5b9599e94029793dcfd13cd199577,bf758397a1ea243aec67083b31dd3005092ad495,antirez,antirez@gmail.com,Wed Nov 16 14:40:50 2011 +0100,1321450850,more valgrind (and other archs) friendly testing of floating number related features.,22.0,14.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.2997367636952524,7.0,465.66666666666674,44.0,113.677712191358,4225.0,1.0029326851411755,185.0,Preventative,False,,
bf758397a1ea243aec67083b31dd3005092ad495,42c6a5da3d4738597217494198f4d3ba9be1113d,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Nov 16 08:34:42 2011 -0800,1321461282,Don't force rebuild when params didn't change,11.0,10.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,267.0,61.0,0.8091550925925926,907.0,2.2358570182088657,394.0,None,False,,
42c6a5da3d4738597217494198f4d3ba9be1113d,5ae979bf5798f5eaab56636034623d25bc70a941,Chris Lamb,lamby@debian.org,Wed Nov 16 17:21:16 2011 +0000,1321464076,"Fix crash on SPARC due to improper alignment of allocated memoryI believe that you should be able to drop 'defined(__sun)' completelynfrom this clause, as Solaris on x86 hardware probably does not havenstrict alignment requirements, but I don't have a way to test that.nnThanks to Jurij Smakov <jurij@wooyd.org>.nnSigned-off-by: Chris Lamb <lamby@debian.org>n",1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,273.0,11.0,137.3720023148148,0.0,0.0,0.0,Corrective,True,,
42c6a5da3d4738597217494198f4d3ba9be1113d 5ae979bf5798f5eaab56636034623d25bc70a941,5c85257b9615c050924f54b65b44ed54f49ac21d,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 16 09:23:19 2011 -0800,1321464199,Merge pull request #193 from lamby/sparc-crashFix crash on SPARC due to improper alignment of allocated memory,,,,,,,,,,,,,,,Merge,False,,
5c85257b9615c050924f54b65b44ed54f49ac21d,4ab8695d537eff1dbc554bf3ab1896495311deda,antirez,antirez@gmail.com,Fri Nov 18 14:10:48 2011 +0100,1321621848,New script timeout semantics and SCRIPT KILL implemented. SHUTDOWN NOSAVE and SHUTDOWN SAVE implemented.,80.0,14.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,1.0,1.0,1.8877588876667843,7.0,1134.75,452.0,8.944913194444442,4228.5,1.0801479605663449,1102.0,Feature Addition,False,True,"[""0ad10db22098ef1555236719743e02da7cb85e00"", ""baee5650295e72fbcfe1f69ca7fa60f64cb5f740""]"
4ab8695d537eff1dbc554bf3ab1896495311deda,e41677b4cf1452c276e5a02e791585a25e02f8f2,antirez,antirez@gmail.com,Fri Nov 18 14:23:38 2011 +0100,1321622618,prevent (more) commands from Lua scripts,6.0,6.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1992.0,178.0,0.008912037037037038,4231.0,113.20779220779221,1103.0,None,False,True,"[""7dcdd281f529dea2389509f90b101c0471f7f2bd"", ""d303bca58787300efe29212940e7806ee625ae9f""]"
e41677b4cf1452c276e5a02e791585a25e02f8f2 b91cbf66bb527fbc7eef8079e9153fa5357186e2,794e6ce14ff85f00b0d3e86365e9cc45a90d3bcf,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 18 05:34:56 2011 -0800,1321623296,Merge pull request #173 from jasondavies/typoFix some minor typos.,,,,,,,,,,,,,,,Merge,False,,
e41677b4cf1452c276e5a02e791585a25e02f8f2,5c63922691ed8a821bd7f9f2837a8270f1154268,antirez,antirez@gmail.com,Fri Nov 18 15:53:47 2011 +0100,1321628027,aof-race test reenabled now that port allocation of the test suite is smarter,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,397.0,58.0,45.28363425925926,4232.0,1.0220830332272972,186.0,Preventative,False,True,"[""53a2af3941b0c6cd8057983ee92775916f1490ab""]"
5c63922691ed8a821bd7f9f2837a8270f1154268,0b14e44118bf80e2e724081fcf2f3071788068d5,antirez,antirez@gmail.com,Fri Nov 18 16:29:22 2011 +0100,1321630162,redis.conf updated to reflect the new scripting timeout semantics.,6.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,447.0,73.0,18.03209490740741,4233.0,1.05545667351103,1264.0,Feature Addition,False,,
0b14e44118bf80e2e724081fcf2f3071788068d5 794e6ce14ff85f00b0d3e86365e9cc45a90d3bcf,40f3ff21b7366defa4ae84ba93f4833a468669a1,antirez,antirez@gmail.com,Fri Nov 18 16:30:26 2011 +0100,1321630226,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
40f3ff21b7366defa4ae84ba93f4833a468669a1,92a157eae5553553b4259d984e47b99ab82a03d0,Ju00c3u00a9ru00c3u00a9my Bethmont,jeremy.bethmont@gmail.com,Mon Nov 21 09:38:14 2011 +0800,1321839494,Fixed a typo in comments.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,451.0,74.0,2.4228240740740743,0.0,0.0,0.0,Corrective,True,,
40f3ff21b7366defa4ae84ba93f4833a468669a1,7e14a2080151f64a1540e26f00cecd8b9ae9cee3,antirez,antirez@gmail.com,Mon Nov 21 10:55:52 2011 +0100,1321869352,Fixed a comment typo in the command table.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1992.0,179.0,2.8557175925925926,4234.0,1.3501746820462524,1104.0,Corrective,True,,
7e14a2080151f64a1540e26f00cecd8b9ae9cee3,08a879af6e5c32059ba4e0e091ef5a05dd2d62a4,antirez,antirez@gmail.com,Mon Nov 21 15:34:00 2011 +0100,1321886040,Added sdscatsds() to sds.c/h,5.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,7.0,417.5,32.0,18.94653935185185,4235.5,1.0395850654344798,1106.0,Feature Addition,False,,
08a879af6e5c32059ba4e0e091ef5a05dd2d62a4,17d25a33e2c569df08a0accbef1f2bba23719823,antirez,antirez@gmail.com,Mon Nov 21 15:34:32 2011 +0100,1321886072,code generating the CLIENT LIST output refactored to have a function that is able to render a single client into a client info string.,38.0,28.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1040.0,73.0,13.172523148148148,4237.0,1.0759156001286347,1107.0,None,False,True,"[""afd0f06b755ff53ce91d1dabeca959655590d3f0"", ""2ea41242f669c1afe03af7c8befb140a7a80fc4e""]"
17d25a33e2c569df08a0accbef1f2bba23719823,5e84f56ea6e6a8f92e6771d6cfafa03072d8cc2f,antirez,antirez@gmail.com,Mon Nov 21 15:35:54 2011 +0100,1321886154,file .prerequisites added to gitignore,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,25.0,22.0,5.746585648148147,4238.0,1.1740163744574577,1265.0,Feature Addition,False,,
5e84f56ea6e6a8f92e6771d6cfafa03072d8cc2f,491c1c4e044ac18c25905d3aba5c1578d6da7502,antirez,antirez@gmail.com,Mon Nov 21 15:54:49 2011 +0100,1321887289,"added output list and buffer length, query buffer size, to CLIENT LIST output.",5.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1050.0,74.0,0.014085648148148147,4239.0,71.99424815119146,1108.0,Feature Addition,False,,
491c1c4e044ac18c25905d3aba5c1578d6da7502,f14479c796fbf00c41ceefdcb4bec04df46f53ce,antirez,antirez@gmail.com,Mon Nov 21 16:05:29 2011 +0100,1321887929,new ae.c API to get current events by file descriptor.,8.0,0.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,6.0,253.5,2.0,517.7067245370371,4240.5,1.0014486966547915,1110.0,Feature Addition,False,,
f14479c796fbf00c41ceefdcb4bec04df46f53ce,6621b8ffa109b06a19822d865d4690a72cd9adbf,antirez,antirez@gmail.com,Mon Nov 21 16:06:03 2011 +0100,1321887963,show active events in client file descriptor in CLIENT LIST.,11.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1053.0,75.0,0.007800925925925925,4242.0,129.1899109792285,1111.0,None,False,,
6621b8ffa109b06a19822d865d4690a72cd9adbf,becf5fdb0c2df94db46c1f838638de892a347250,antirez,antirez@gmail.com,Mon Nov 21 16:17:51 2011 +0100,1321888671,Close client connection and log the event when the client input buffer reaches 1GB.,11.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.2406705316766886,7.0,1381.0,433.0,1.1066743827160497,4244.0,43.21642562895382,1114.0,None,False,,
becf5fdb0c2df94db46c1f838638de892a347250,afd0f06b755ff53ce91d1dabeca959655590d3f0,antirez,antirez@gmail.com,Mon Nov 21 16:19:30 2011 +0100,1321888770,Fixed bug in getClientInfoString() that was not rendering the N (no flags) special flag correctly.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1068.0,77.0,0.0011458333333333331,4246.0,873.7272727272727,1115.0,Corrective,True,,
afd0f06b755ff53ce91d1dabeca959655590d3f0,7501c66f2e614fe997f5753f206b6034efed7029,antirez,antirez@gmail.com,Tue Nov 22 10:13:45 2011 +0100,1321953225,comment describing the Redis command table enhanced,25.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1993.0,181.0,0.7471527777777778,4247.0,2.3384143507760946,1116.0,None,False,,
7501c66f2e614fe997f5753f206b6034efed7029,39da5d1f2183eb6e7440bf742b558f974a5a4172,antirez,antirez@gmail.com,Tue Nov 22 10:16:15 2011 +0100,1321953375,Fixed command table for SETEX and PSETEX causing the expire time to be hashed by Redis cluster instead of the key.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2015.0,182.0,0.001736111111111111,4248.0,577.0,1117.0,Corrective,True,,
39da5d1f2183eb6e7440bf742b558f974a5a4172 92a157eae5553553b4259d984e47b99ab82a03d0,4e5f63a60c36f58bdecedc43262e7f89e28656d7,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 22 02:43:28 2011 -0800,1321958608,Merge pull request #199 from jerem/patch-1Fixed a typo in comments.,,,,,,,,,,,,,,,Merge,False,,
39da5d1f2183eb6e7440bf742b558f974a5a4172,1bcfa0f643d53e700d7398985ef236babf18d9bf,antirez,antirez@gmail.com,Tue Nov 22 14:27:32 2011 +0100,1321968452,"More fixes in the Redis command table, to make sure all the keys are detected by Redis Cluster.",5.0,5.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2015.0,183.0,0.17450231481481482,4249.0,6.730583007229555,1118.0,Corrective,True,True,"[""ce8a68b1fdf5c26d06d2e2972109881bd16e6856""]"
1bcfa0f643d53e700d7398985ef236babf18d9bf 4e5f63a60c36f58bdecedc43262e7f89e28656d7,1b2962c61fd47730924489b689a39ffda6b88a80,antirez,antirez@gmail.com,Tue Nov 22 14:27:53 2011 +0100,1321968473,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
1b2962c61fd47730924489b689a39ffda6b88a80,3c95e7212ef5f0afb12fbd102c48bf4319af2f84,antirez,antirez@gmail.com,Wed Nov 23 18:38:12 2011 +0100,1322069892,new counter in INFO output: rejected_connections with number of dropped connections because of maxclients limit reached.,5.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.3709505944546687,7.0,1392.0,440.0,1.7892862654320991,4251.0,1.3230313852858278,1121.0,Feature Addition,False,,
3c95e7212ef5f0afb12fbd102c48bf4319af2f84,1d03c1c98a45ec569e017e4c0b8957c4ce00850b,jbergstroem,bugs@bergstroem.nu,Wed Nov 23 21:36:25 2011 +0100,1322080585,Update to jemalloc 2.2.5,535.0,202.0,"deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/test/rallocm.c,CAS_DELIMITER",24.0,1.0,6.0,3.3721521101168874,2.0,1062.2083333333333,23.0,190.2181857638889,11.5,0.9589248084592948,23.0,None,False,True,"[""fceef8e0ddfca103b2f0328e3ad9ae522093f2c8""]"
3c95e7212ef5f0afb12fbd102c48bf4319af2f84,2c74a9f9488774f1d7226afaf248493bf3aec4ed,antirez,antirez@gmail.com,Thu Nov 24 14:56:34 2011 +0100,1322142994,last executed command in CLIENT LIST output.,6.0,5.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.3092966682370035,7.0,1393.666666666667,443.0,0.846087962962963,4254.0,1.722278460233646,1124.0,None,False,,
2c74a9f9488774f1d7226afaf248493bf3aec4ed,45e7a1ce00380ccf5f41080d69c655e120aacad6,antirez,antirez@gmail.com,Thu Nov 24 15:04:42 2011 +0100,1322143482,minor refactoring to networking.c adding a separated function to get a string representing the current state of all the connected clients.,17.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2422921890824148,7.0,1082.0,260.0,0.005648148148148148,4256.5,133.78688524590166,1126.0,Feature Addition,False,True,"[""0a466a754226d5b13cd555a2893867084ee981d4""]"
45e7a1ce00380ccf5f41080d69c655e120aacad6,fa5af017d95dfd56b92ebe14064f995b19e4907f,antirez,antirez@gmail.com,Thu Nov 24 15:47:26 2011 +0100,1322146046,better bug report info on crash,51.0,8.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.0647770961864376,7.0,1157.6666666666667,394.0,4.226060956790123,4259.0,1.0790728337306,1129.0,Corrective,True,True,"[""d4d208595c78d78196c926c55799bc81ae06f230"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
3c95e7212ef5f0afb12fbd102c48bf4319af2f84,f371e721fae255137670208a62a69174734355ba,woowenjie,woowenjie@gmail.com,Fri Nov 25 10:34:05 2011 +0800,1322188445,clean REDIS_DIRTY_CAS when discard Command runs. otherwise the next MULTI/EXEC may fail in the same RedisClient,1.0,1.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,273.0,7.0,51.41043981481482,0.0,0.0,0.0,Corrective,True,True,"[""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb""]"
fa5af017d95dfd56b92ebe14064f995b19e4907f f371e721fae255137670208a62a69174734355ba,07ac2daaaa6c844cc3171c8f01ad5ad7e786e2ea,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 25 03:13:10 2011 -0800,1322219590,Merge pull request #209 from woowenjie/unstableclean REDIS_DIRTY_CAS when discard Command runs. otherwise the next MULT...,,,,,,,,,,,,,,,Merge,False,,
07ac2daaaa6c844cc3171c8f01ad5ad7e786e2ea,674df1eef514169b5bea0a4d4e841aabee0209c9,antirez,antirez@gmail.com,Fri Nov 25 12:27:00 2011 +0100,1322220420,Added regression tests for issue #209,23.0,2.0,"tests/unit/cas.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,135.0,5.0,507.7422222222222,4261.0,1.0019695033350255,187.0,Feature Addition,False,,
674df1eef514169b5bea0a4d4e841aabee0209c9,3e0a975e07089609036daf70c319eea0599ce944,antirez,antirez@gmail.com,Fri Nov 25 16:09:16 2011 +0100,1322233756,log client protocol errors for log level >= verbose,6.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1078.0,81.0,1.044837962962963,4262.0,1.9570862042227,1130.0,None,False,True,"[""6b953a268186a37084d07046267dcbf263d61372""]"
3e0a975e07089609036daf70c319eea0599ce944 1d03c1c98a45ec569e017e4c0b8957c4ce00850b,2753acf1d642628d01de0d2a477c5d905fb761bc,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 25 07:29:55 2011 -0800,1322234995,Merge pull request #208 from jbergstroem/jemalloc-2.2.5Update to jemalloc 2.2.5,,,,,,,,,,,,,,,Merge,False,,
2753acf1d642628d01de0d2a477c5d905fb761bc,86de66e32fa35541e7034841b78bafab77759c3c,antirez,antirez@gmail.com,Fri Nov 25 16:40:15 2011 +0100,1322235615,jemalloc gitignore updated to jemalloc 2.2.5,19.0,11.0,"deps/jemalloc/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,15.0,1.0,192.21854166666665,4263.0,1.0052024117513811,201.0,None,False,,
86de66e32fa35541e7034841b78bafab77759c3c,53a2af3941b0c6cd8057983ee92775916f1490ab,antirez,antirez@gmail.com,Mon Nov 28 10:35:30 2011 +0100,1322472930,"still problems with the AOF race regression test, disabling it again for now",0.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,398.0,59.0,9.778969907407408,4264.0,1.1022602594617372,188.0,Corrective,True,,
53a2af3941b0c6cd8057983ee92775916f1490ab,e7ef418ccd528f1546757392899272fd6176033e,antirez,antirez@gmail.com,Mon Nov 28 11:04:03 2011 +0100,1322474643,two new AOF related INFO fields that can be interesting information for debugging.,6.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2048.0,187.0,3.803206018518519,4265.0,1.262936058454581,1131.0,Corrective,True,,
e7ef418ccd528f1546757392899272fd6176033e,63fd13996d5ff19a642709aef78d655939cf8ced,antirez,antirez@gmail.com,Fri Nov 25 17:08:25 2011 +0100,1322237305,show initial querybuf bytes on querybuf overflow.,5.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1084.0,82.0,0.041076388888888885,4266.0,25.34488588334742,1132.0,Feature Addition,False,,
63fd13996d5ff19a642709aef78d655939cf8ced,38b957d8ba22fa8760e88fd5500c9bdc2d6fd3da,antirez,antirez@gmail.com,Tue Nov 29 16:29:12 2011 +0100,1322580552,--quiet option implemented in the Redis test. Output improved a bit.,25.0,9.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,397.0,60.0,1.245625,4267.0,1.8028098344204717,189.0,Preventative,False,,
38b957d8ba22fa8760e88fd5500c9bdc2d6fd3da,c6f9ee88fa81468261d3cc771112e4ea9fd2e6da,antirez,antirez@gmail.com,Wed Nov 30 15:04:40 2011 +0100,1322661880,default log level is now notice.,2.0,2.0,"redis.conf,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,2.0,2.0,1.0,7.0,1251.5,263.0,5.842725694444447,4268.5,1.0953183257999957,1133.0,None,False,,
c6f9ee88fa81468261d3cc771112e4ea9fd2e6da,27acd7aa89c50a207f500fb0d0fb7194ae05812a,antirez,antirez@gmail.com,Wed Nov 30 15:35:16 2011 +0100,1322663716,Replication bug fixed: now non blocking connect is also forced to follow the configured replication timeout.,23.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,562.0,22.0,30.18180555555556,4270.0,1.0331325439811512,1134.0,Corrective,True,True,"[""ed6228851cfc7731a4e84201a3b2d6c11d925438"", ""acc2336fd189ddf9e97b0fc589c43ae26a1fd153""]"
27acd7aa89c50a207f500fb0d0fb7194ae05812a,39ca1713d7400cf33e2cbc502478055a78cc03c1,antirez,antirez@gmail.com,Thu Dec 1 12:15:44 2011 +0100,1322738144,I like when main() is the last function in the file.,47.0,47.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2052.0,189.0,0.8826851851851852,4271.0,2.1329067449910832,1135.0,None,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""f1c8661e74ab1b6c45669f4a998484dfe54ed2d3""]"
39ca1713d7400cf33e2cbc502478055a78cc03c1,4c8bd905a0751c19279c98d2dbd681a08297e38e,antirez,antirez@gmail.com,Thu Dec 1 12:18:22 2011 +0100,1322738302,-h is now alias for --help when running redis-server.,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2052.0,190.0,0.001828703703703704,4272.0,547.8354430379746,1136.0,None,False,,
4c8bd905a0751c19279c98d2dbd681a08297e38e,67c6f0f630e1083f4fdad3efc12be691bf13dd55,antirez,antirez@gmail.com,Thu Dec 1 13:44:53 2011 +0100,1322743493,Support for command line configuration options for redis-server.,82.0,38.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9514008547386816,7.0,1299.0,417.0,12.693375771604938,4274.0,1.0301654907046809,1139.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
67c6f0f630e1083f4fdad3efc12be691bf13dd55,27ccb94a021c74acbdfead03f4bc7f6b9cb8a9ae,antirez,antirez@gmail.com,Thu Dec 1 13:45:19 2011 +0100,1322743519,Even when loglevel is warning the server should log that it started.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2077.0,192.0,0.000300925925925926,4276.0,3324.0769230769233,1140.0,None,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e""]"
27ccb94a021c74acbdfead03f4bc7f6b9cb8a9ae,9268a5b5fd4f1824dad767c71188b90e44281551,antirez,antirez@gmail.com,Thu Dec 1 13:50:36 2011 +0100,1322743836,usage information updated to reflect the new way to pass options to Redis from the command line.,9.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2077.0,193.0,0.0036689814814814814,4277.0,273.5552050473186,1141.0,Feature Addition,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e""]"
9268a5b5fd4f1824dad767c71188b90e44281551,1576520cc0c2deda30288bea797fdacf322581ec,antirez,antirez@gmail.com,Thu Dec 1 15:40:49 2011 +0100,1322750449,Document the redis-server cli options in the README,9.0,0.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,115.0,11.0,15.716574074074074,4278.0,1.063627098074102,1267.0,Non Functional,False,,
1576520cc0c2deda30288bea797fdacf322581ec,237194b76064c95028b14e9ff7d7abfb10abd63d,antirez,antirez@gmail.com,Thu Dec 1 16:07:55 2011 +0100,1322752075,Fixed SORT bugs (issue #224) with regression tests.,21.0,12.0,"src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9456603046006402,7.0,290.5,25.0,189.4772800925926,4279.5,1.023098003796166,190.0,Corrective,True,True,"[""a0bf8d0ad8a6f4414194bc8ec7d067664bd321c2"", ""09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c""]"
237194b76064c95028b14e9ff7d7abfb10abd63d,fb293ccbddb43f427ea1f791d8603fbd18e703e6,antirez,antirez@gmail.com,Wed Dec 7 08:58:29 2011 +0100,1323244709,"Fixed a theoretical memory leak with no practical effects in ae_kqueue.c and ae_epoll.c, thanks to magicyang87 for reporting it.",8.0,2.0,"src/ae_epoll.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,6.0,92.0,2.0,533.4101967592593,4281.5,1.0014060473619677,1144.0,Corrective,True,,
fb293ccbddb43f427ea1f791d8603fbd18e703e6,846bcd9abe1d41fd6a7bb8c80267c221b145a7b7,antirez,antirez@gmail.com,Wed Dec 7 11:47:38 2011 +0100,1323254858,Redis test: handle inability to start the server in a better way.,12.0,8.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,294.0,26.0,64.11269675925926,4283.0,1.015597534506386,191.0,Preventative,False,True,"[""227965221ab443f21b27fa0a3636d6232c496b45""]"
846bcd9abe1d41fd6a7bb8c80267c221b145a7b7,85b69afedea1c31ded63495983eb168a7799bfcd,antirez,antirez@gmail.com,Wed Dec 7 12:44:27 2011 +0100,1323258267,EXPIRE tests more tolerant to random latency while the test is running.,8.0,8.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,144.0,10.0,25.053344907407414,4284.0,1.0399148298838266,192.0,Preventative,False,,
85b69afedea1c31ded63495983eb168a7799bfcd,dfcf5a0ac8f80a15a4d1e3e581de80064663c89e,antirez,antirez@gmail.com,Wed Dec 7 17:15:17 2011 +0100,1323274517,Redis test port allocation fixed.,2.0,2.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,413.0,61.0,8.032002314814816,4285.0,1.1245019561505265,193.0,Corrective,True,,
dfcf5a0ac8f80a15a4d1e3e581de80064663c89e,b1d08d45401abd0a1c0321b26137d701b1c319e2,antirez,antirez@gmail.com,Wed Dec 7 17:51:21 2011 +0100,1323276681,Redis test: wait more time for the server to start if it is running using valgrind.,1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,298.0,27.0,0.2525810185185185,4286.0,4.959125693076112,194.0,Preventative,False,,
b1d08d45401abd0a1c0321b26137d701b1c319e2,43093dff2d23ab0c9b3429f224e49d18839b8ec6,antirez,antirez@gmail.com,Wed Dec 7 18:31:39 2011 +0100,1323279099,Redis test: two redundant tests removed as they tend to create issues when running the test with valgrind.,0.0,10.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,131.0,10.0,149.2434375,4287.0,1.006700462122497,195.0,Preventative,False,,
43093dff2d23ab0c9b3429f224e49d18839b8ec6,954cc9d0f635ff85b23a6bbc03fdfb09bad13cf0,antirez,antirez@gmail.com,Sat Dec 10 13:28:32 2011 +0100,1323520112,Redis test: vaoid two false positives while running under valgrind.,26.0,4.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,121.0,11.0,2.789502314814815,4288.0,1.358486886599478,196.0,Preventative,False,,
43093dff2d23ab0c9b3429f224e49d18839b8ec6,5b2500965684fbcf75cb88152394f0e853661867,antirez,antirez@gmail.com,Tue Dec 6 18:22:52 2011 +0100,1323192172,Lists AOF rewrite using variadic RPUSH (work in progress),57.0,38.0,"src/aof.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.08426242877623302,7.0,992.5,240.0,14.957083333333333,4289.5,1.036940107324703,1146.0,None,False,,
5b2500965684fbcf75cb88152394f0e853661867,38c06fa037dbb49b6e7c28df5b1fb566d504ba61,antirez,antirez@gmail.com,Wed Dec 7 11:34:25 2011 +0100,1323254065,List type AOF rewrite using variadic RPUSH for the linked list encoding.,9.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,902.0,58.0,0.7163541666666666,4291.0,2.3959575396248365,1147.0,None,False,,
38c06fa037dbb49b6e7c28df5b1fb566d504ba61,570bbcf8e0be3847c561b75d1a115d6a7e550e5f,antirez,antirez@gmail.com,Mon Dec 12 15:34:00 2011 +0100,1323700440,Added tests for AOF rewrite.,108.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.0758415063771471,7.0,206.5,62.0,2.4648321759259257,4292.5,1.2028535674288543,198.0,Feature Addition,False,,
570bbcf8e0be3847c561b75d1a115d6a7e550e5f,8d875ccb7a0159dd19bb24b1c35afd9b9a64f032,antirez,antirez@gmail.com,Mon Dec 12 15:57:51 2011 +0100,1323701871,Set type AOF rewrite using variadic SADD.,50.0,24.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,908.0,59.0,5.182939814814816,4294.0,1.1929406930679805,1148.0,Feature Addition,False,,
8d875ccb7a0159dd19bb24b1c35afd9b9a64f032,7df9b1412bb829eaff986f930ad35b814cb7b460,antirez,antirez@gmail.com,Mon Dec 12 17:27:39 2011 +0100,1323707259,Sorted Set type AOF rewrite using variadic ZADD.,70.0,50.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,934.0,60.0,0.06236111111111111,4295.0,17.035634743875278,1149.0,Feature Addition,False,,
7df9b1412bb829eaff986f930ad35b814cb7b460,54ecc0e777cb13b5281619f41384a95d837737ee,antirez,antirez@gmail.com,Mon Dec 12 17:39:23 2011 +0100,1323707963,Hash type AOF rewrite using HMSET.,51.0,31.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,954.0,61.0,0.008148148148148147,4296.0,123.72727272727272,1150.0,None,False,,
54ecc0e777cb13b5281619f41384a95d837737ee 954cc9d0f635ff85b23a6bbc03fdfb09bad13cf0,da33edbc58282eed2d48ccb62babf39d0cb748e7,antirez,antirez@gmail.com,Tue Dec 13 11:16:34 2011 +0100,1323771394,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
da33edbc58282eed2d48ccb62babf39d0cb748e7,e2f313899bf985fe691428af8466d10e3e67a6fd,antirez,antirez@gmail.com,Tue Dec 13 16:22:28 2011 +0100,1323789748,redis-cli --eval implemented,59.0,18.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,883.0,56.0,45.98569444444446,4297.0,1.0217458931974617,1151.0,None,False,True,"[""58573f1dd2d6d3cfd5dbaea7484c55571f856b3b""]"
e2f313899bf985fe691428af8466d10e3e67a6fd,19951d965aa78402fa3030af05a68b81fc4e9522,antirez,antirez@gmail.com,Tue Dec 13 18:07:21 2011 +0100,1323796041,version bumped to 2.9.1,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,10.0,242.05778935185185,4298.0,1.0041312448679205,1152.0,None,False,,
19951d965aa78402fa3030af05a68b81fc4e9522,503d87a818ffd11c275bba6479bcd5b4a855e8ca,antirez,antirez@gmail.com,Wed Dec 14 15:11:11 2011 +0100,1323871871,"List connected slaves with ip,port,state information in INFO, as requested by github issue #219",31.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2085.0,194.0,13.055960648148147,4299.0,1.076593368113578,1153.0,None,False,True,"[""1ca4008d149af10a3a388e949299c680a03540ac""]"
503d87a818ffd11c275bba6479bcd5b4a855e8ca,e074416be49947c7bab5e237fab7210441bd99e5,antirez,antirez@gmail.com,Thu Dec 15 11:42:40 2011 +0100,1323945760,"Max limit to 10k clients removed, this implements feature request on issue #194",84.0,53.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",6.0,1.0,1.0,1.9749075279792816,7.0,579.1666666666666,229.0,17.121211419753088,4302.5,1.0193542899800456,1159.0,None,False,True,"[""36dda9554a826104653765ec8782e055384c39f1"", ""a5f8341245aeebd22a2474e92c4ed497eae01545"", ""4a25983f8fe70e105bfd7cc42fed825001afd1df""]"
e074416be49947c7bab5e237fab7210441bd99e5,36dda9554a826104653765ec8782e055384c39f1,antirez,antirez@gmail.com,Thu Dec 15 11:50:15 2011 +0100,1323946215,ae_epoll.c typo introduced in the previous commit fixed.,1.0,1.0,"src/ae_epoll.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,101.0,3.0,0.0052662037037037035,4306.0,190.8901098901099,1160.0,Corrective,True,,
e074416be49947c7bab5e237fab7210441bd99e5,e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7,antirez,antirez@gmail.com,Thu Dec 15 16:07:49 2011 +0100,1323961669,AOF fixes in the context of replicaiton (when AOF is used by slave) and CONFIG SET appendonly yes/no.,39.0,5.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,1.252664572199357,7.0,1195.75,465.0,6.762340856481483,4308.5,1.1952814938395604,1164.0,Corrective,True,True,"[""087f41409052da35270417c85010c6739fd28200"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7,087f41409052da35270417c85010c6739fd28200,antirez,antirez@gmail.com,Thu Dec 15 20:03:28 2011 +0100,1323975808,Fix: when aof_write_rewrite is true don't append on the AOF buffer but accumulate the differences for the rewrite.,10.0,9.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,992.0,63.0,0.16364583333333332,4311.0,7.11075747931254,1165.0,Corrective,True,,
e074416be49947c7bab5e237fab7210441bd99e5,18d0ef4bf010282832e9f4c697a86218fc70f393,antirez,antirez@gmail.com,Fri Dec 16 09:55:01 2011 +0100,1324025701,ae.c: solved a memory leak with no practical effects (since the event loop is never destroyed in Redis). Thanks to @anydot for noticing it.,2.0,0.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,407.0,3.0,0.9252430555555556,4312.0,2.0807970878522912,1166.0,None,False,,
18d0ef4bf010282832e9f4c697a86218fc70f393 36dda9554a826104653765ec8782e055384c39f1,24accab2aa62f6ed1b87c6178f2003e37f0adbfd,antirez,antirez@gmail.com,Fri Dec 16 09:56:12 2011 +0100,1324025772,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
24accab2aa62f6ed1b87c6178f2003e37f0adbfd,a244a13b4c5d74031432aa337d6be21b4f033efd,antirez,antirez@gmail.com,Sun Dec 18 11:12:58 2011 +0100,1324203178,added assertion in zslInsert() that ensures the inserted element score is not NaN,1.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2137.0,67.0,33.8182175925926,4313.0,1.0295698611927744,1167.0,Feature Addition,False,,
a244a13b4c5d74031432aa337d6be21b4f033efd,0a466a754226d5b13cd555a2893867084ee981d4,antirez,antirez@gmail.com,Mon Dec 19 10:16:37 2011 +0100,1324286197,"Fixed memleak in CLIENT INFO, added simple test that will work as regression test on mac os x and in the CI when running over valgrind. This fixes issue #256",5.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1087.0,83.0,23.714027777777765,4314.0,1.042169133365741,1168.0,Corrective,True,,
0a466a754226d5b13cd555a2893867084ee981d4,f4bddefecd70e85cd95c72869a1bd8de3274e79e,antirez,antirez@gmail.com,Mon Dec 19 10:18:21 2011 +0100,1324286301,unit/introspection added among tests executed by default,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,414.0,63.0,6.780798611111113,4315.0,1.1474752543692104,199.0,Feature Addition,False,,
f4bddefecd70e85cd95c72869a1bd8de3274e79e,3ae5a308db4613262ac82abae2ba80115d184ca4,antirez,antirez@gmail.com,Mon Dec 19 10:21:50 2011 +0100,1324286510,unit/introspection.tcl added,5.0,0.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,4316.0,0.0,200.0,Feature Addition,False,True,"[""3c0602ff418ff1a1b18440a6994fd73226786251""]"
3ae5a308db4613262ac82abae2ba80115d184ca4,0e59a947287a793719226c2c7505d9fc8e616e1a,antirez,antirez@gmail.com,Mon Dec 19 10:55:31 2011 +0100,1324288531,version bumped to 2.9.2,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,11.0,5.700115740740743,4317.0,1.1754350342138926,1169.0,None,False,,
0e59a947287a793719226c2c7505d9fc8e616e1a,706b32e0e0a7dd20cc3f74501c1bfd74570b380c,BigCat,miaout17@gmail.com,Mon Dec 19 19:29:46 2011 +0800,1324294186,Fix issue #247 : Accepting non-integer parameters when shouldn't Using `getLongFromObjectOrReply` instead of `atoi` if possible. The following functions are modified.* lrangeCommandn* ltrimCommandn* lremCommandn* lindexCommandn* lsetCommandn* zunionInterGenericCommandn* genericZrangebyscoreCommandn* sortCommandn,33.0,15.0,"src/sort.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.3246095799115576,7.0,1176.3333333333333,120.0,19.90289351851852,1.0,0.6779322425236903,2.0,Corrective,True,True,"[""8caecc9ab466011fd1432c0a7e2dc51ae8797629""]"
706b32e0e0a7dd20cc3f74501c1bfd74570b380c,f54c299091e94ba69d298c1d782589c1e9903b9c,BigCat,miaout17@gmail.com,Mon Dec 19 19:45:57 2011 +0800,1324295157,I found that no test will fail even if I broke the `SORT x LIMIT y z` code. Added a naive unit test for SORT-LIMIT command.,4.0,0.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,201.0,12.0,17.859745370370373,3.0,1.0559918397078056,0.0,Corrective,True,,
0e59a947287a793719226c2c7505d9fc8e616e1a f54c299091e94ba69d298c1d782589c1e9903b9c,7d5209d7d36cf1f3978f3ca09a831f0c1a9f26e2,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 19 05:38:31 2011 -0800,1324301911,Merge pull request #258 from miaout17/bugfix-247Fix issue #247 and add a test case,,,,,,,,,,,,,,,Merge,False,,
087f41409052da35270417c85010c6739fd28200 0e59a947287a793719226c2c7505d9fc8e616e1a,fc96409f9193a7fda1dd509d16769272453f36c0,antirez,antirez@gmail.com,Tue Dec 20 10:29:33 2011 +0100,1324373373,Merge remote-tracking branch 'origin/unstable' into aof-fixes,,,,,,,,,,,,,,,Merge,False,,
fc96409f9193a7fda1dd509d16769272453f36c0,af77acc310204696a1af4e52345b2cf0be341cb1,antirez,antirez@gmail.com,Tue Dec 20 17:00:27 2011 +0100,1324396827,startAppendOnly() fixed to set server.appendonly to 0 if the start failed.,1.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,993.0,64.0,4.8729050925925925,4318.0,1.2052163916592835,1170.0,Corrective,True,,
af77acc310204696a1af4e52345b2cf0be341cb1,efb6022529469813cd946f6bb22d762dc20e606d,antirez,antirez@gmail.com,Tue Dec 20 17:52:57 2011 +0100,1324399977,Do not propagate DEBUG LOADAOF,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,367.0,28.0,26.08716435185185,4319.0,1.0383330279409615,1171.0,Corrective,True,,
efb6022529469813cd946f6bb22d762dc20e606d,202e3091d7554df42e520c3e6f7c6d54c1ad7728,antirez,antirez@gmail.com,Wed Dec 21 09:23:22 2011 +0100,1324455802,Redis test: when assertion fails print not just the expression but also expanded values in the error message.,1.0,1.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,140.0,25.0,145.9108564814815,4320.0,1.0068534996237717,201.0,Preventative,False,,
202e3091d7554df42e520c3e6f7c6d54c1ad7728,b4fb720b1014a05fb1e3238d1b7b73883e20cb00,antirez,antirez@gmail.com,Wed Dec 21 09:24:14 2011 +0100,1324455854,A test modified to pass with the new AOF start/stop semantics.,1.0,0.0,"tests/unit/other.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,286.0,19.0,39.758611111111115,4321.0,1.0251517840300144,202.0,Feature Addition,False,,
b4fb720b1014a05fb1e3238d1b7b73883e20cb00,c6ac7d0302000c4dc77a746415edcdb6ff698569,antirez,antirez@gmail.com,Wed Dec 21 10:05:32 2011 +0100,1324458332,"server.appendonly -> server.aof_state, and many comments added in the server global state structure in the process.",95.0,92.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1103.0,185.0,5.748414351851853,4322.0,1.17396101581958,1172.0,Feature Addition,False,True,"[""c25e7eafef350a985ae236987131c5d56b30cfef"", ""9edfe63553314fc2258392db94bfce8a4144b303"", ""784b93087c622999e225735c0c76d50241941022"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""c138631cd16e5a28cf7f5169bee28ed4c6dae598""]"
c6ac7d0302000c4dc77a746415edcdb6ff698569,e394114d95395fe9babb0a658de263a0811ec330,antirez,antirez@gmail.com,Wed Dec 21 10:31:34 2011 +0100,1324459894,"AOF refactoring, now with three states: ON, OFF, WAIT_REWRITE.",42.0,51.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",7.0,1.0,1.0,1.9513403686138933,7.0,942.5714285714287,589.0,13.04063326719577,4326.0,1.2120175387662822,1179.0,None,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
e394114d95395fe9babb0a658de263a0811ec330,2c915bcf6d62e2e8d0868cddfda896fc989bc81f,antirez,antirez@gmail.com,Wed Dec 21 11:58:42 2011 +0100,1324465122,"AOF fileds in the global server state, and define names, renamed with more consistent names. More work to do.",100.0,100.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.9204954048317628,7.0,1068.6,526.0,0.19920601851851846,4332.0,6.6010691059947195,1184.0,None,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
2c915bcf6d62e2e8d0868cddfda896fc989bc81f,ff2145adac3108196bf6afcab61a5babc64ce4ed,antirez,antirez@gmail.com,Wed Dec 21 12:17:02 2011 +0100,1324466222,more AOF server struct fields renamed.,80.0,80.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.3052737180484142,7.0,1202.8,577.0,7.915701388888888,4337.0,19.050588326234287,1189.0,None,False,True,"[""47ca4b6e28af49d1904f40fceacf58bb2907fbf2"", ""79a0ef62db890c007166a2c09d11691923236716"", ""ee724cac491c6e6f4ee3c9b91be482f163e6d12c"", ""f782006782c9eb82c893c12084bec1c0cf7d521e"", ""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
ff2145adac3108196bf6afcab61a5babc64ce4ed,f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,antirez,antirez@gmail.com,Wed Dec 21 12:22:13 2011 +0100,1324466533,some RDB server struct fields renamed.,49.0,49.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",8.0,1.0,1.0,2.6777016196614336,7.0,968.0,684.0,0.0159375,4343.5,59.42687376200103,1197.0,None,False,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""79a0ef62db890c007166a2c09d11691923236716"", ""333547dab6928380be70f612aadf18f48a3cb1b4"", ""41d804d9dc48292f61fc1e1efd2241404dc9a6e8"", ""365e6c45ea0d5d9d72ac18b1df729f536c1fa0a1""]"
f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,1844f9900f131a538d1cee988d76ef689c8426fe,antirez,antirez@gmail.com,Wed Dec 21 12:23:18 2011 +0100,1324466598,server.replstate -> server.repl_state,28.0,28.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,1.0,1.0,1.3709121449234951,7.0,1136.0,549.0,0.41819675925925937,4350.0,267.2289555264296,1202.0,None,False,True,"[""bb66fc312036e444a950df27dd7cb2e3db6b4b05""]"
1844f9900f131a538d1cee988d76ef689c8426fe,b941417c1ba4d7720a16f6b56790e2af9fa978a3,antirez,antirez@gmail.com,Wed Dec 21 16:37:22 2011 +0100,1324481842,Log when the child rewriting the AOF is killed by stopAppendOnly(),2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,985.0,69.0,0.1771875,4353.0,6.643738977072308,1203.0,None,False,True,"[""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
b941417c1ba4d7720a16f6b56790e2af9fa978a3,e51b79f31554d1f5eceb38cad1a0a4d14bd70454,antirez,antirez@gmail.com,Wed Dec 21 17:12:23 2011 +0100,1324483943,sligthly better AOF related logs,10.0,5.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,987.0,70.0,0.024317129629629636,4354.0,42.12327463112803,1204.0,Perfective,False,,
e51b79f31554d1f5eceb38cad1a0a4d14bd70454 7d5209d7d36cf1f3978f3ca09a831f0c1a9f26e2,d334281c802bc94e99475557ed341d356af0ab54,antirez,antirez@gmail.com,Wed Dec 21 17:13:31 2011 +0100,1324484011,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
d334281c802bc94e99475557ed341d356af0ab54,ce6628dae7f1daae774e23302ee755341195e777,diegok,diego@freekeylabs.com,Thu Dec 22 12:22:23 2011 +0100,1324552943,Fixed a config docs typo.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,451.0,76.0,21.887303240740746,0.0,0.0,0.0,Corrective,True,,
d334281c802bc94e99475557ed341d356af0ab54 ce6628dae7f1daae774e23302ee755341195e777,d9b952211c4f4ae46bcd4afda83966fdd5b4c1cd,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 22 07:00:42 2011 -0800,1324566042,Merge pull request #268 from diegok/unstableFixed a config docs typo.,,,,,,,,,,,,,,,Merge,False,,
d334281c802bc94e99475557ed341d356af0ab54,256356ffd83b93abe49911a4b4bae020d5149348,antirez,antirez@gmail.com,Fri Dec 23 09:27:31 2011 +0100,1324628851,Prevent NaN scores in sorted sets resulting from calls to ZUNIONSTORE and ZINTERSTORE.,3.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2141.0,69.0,3.8734375,4355.0,1.2581686163775716,1205.0,None,False,,
256356ffd83b93abe49911a4b4bae020d5149348,9678c37577facb441f3c636c0453eb7a651b2d7d,antirez,antirez@gmail.com,Fri Dec 23 09:34:06 2011 +0100,1324629246,Added regression test for ZUNIONSTORE creating NaN (github issue #264),6.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,755.0,26.0,38.74956018518518,4356.0,1.025806744520995,203.0,Feature Addition,False,,
9678c37577facb441f3c636c0453eb7a651b2d7d d9b952211c4f4ae46bcd4afda83966fdd5b4c1cd,2ebd2720b37dcca3b6e0c18377bd69e9eaf541fc,antirez,antirez@gmail.com,Fri Dec 23 09:34:28 2011 +0100,1324629268,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
2ebd2720b37dcca3b6e0c18377bd69e9eaf541fc,57c0cf8b8571128152ca785f664ee369c5a433a7,Kashif Rasul,kashif@nomad-labs.com,Wed Dec 28 22:14:23 2011 +0100,1325106863,Fixed some typos in redis.conf.,11.0,11.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,451.0,77.0,6.411111111111111,0.0,0.0,0.0,Corrective,True,,
2ebd2720b37dcca3b6e0c18377bd69e9eaf541fc,1824e3a3a37eb9618aa487e6e071395758bdaca8,antirez,antirez@gmail.com,Fri Dec 30 19:34:40 2011 +0100,1325270080,Fixed replication when multiple slaves are attaching at the same time. The output buffer was not copied correctly between slaves. This fixes issue #141.,12.0,2.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.0949143184120975,7.0,931.6666666666664,303.0,9.299560185185186,4358.0,1.0657139799024746,1208.0,Corrective,True,,
1824e3a3a37eb9618aa487e6e071395758bdaca8,35c6032cfab5b6e551672c5f0350d020b78aa70e,antirez,antirez@gmail.com,Sat Dec 31 15:34:02 2011 +0100,1325342042,A few no longer used defines removed from redis.h,1.0,4.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1106.0,192.0,0.8328935185185186,4360.0,2.2006336677691003,1209.0,None,False,,
35c6032cfab5b6e551672c5f0350d020b78aa70e,f42e2f1bd791e4b3fdfa75c620dc9386b7cfea1e,antirez,antirez@gmail.com,Sat Dec 31 15:37:33 2011 +0100,1325342253,Protocol and I/O related defines moved into a separated section of redis.h,6.0,4.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1103.0,193.0,0.0024421296296296296,4361.0,410.478672985782,1210.0,None,False,,
f42e2f1bd791e4b3fdfa75c620dc9386b7cfea1e,11e0c4c55b8edd8d2226ba2e5fde989778695195,antirez,antirez@gmail.com,Sat Dec 31 16:09:46 2011 +0100,1325344186,"Protections against protocol desyncs, leading to infinite query buffer growing, due to nul-terms in specific bytes of the request or indefinitely long multi bulk or bulk count strings without newlines. This bug is related to Issue #141 as well.",24.0,6.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.21084230031853213,7.0,1103.0,280.0,0.4400405092592593,4362.5,2.151078261576156,1212.0,Corrective,True,True,"[""cb4e2ee9e784f23bbef1bb57c6c332dd3d2472bd""]"
2ebd2720b37dcca3b6e0c18377bd69e9eaf541fc,9ea54feef0f2e62f7618da9b0ce3acce9f474db6,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 2 15:24:32 2012 -0800,1325546672,string2* functions take a const pointer,5.0,5.0,"src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,7.0,227.0,9.0,240.91796875,908.5,1.0031990544001572,396.0,None,False,,
9ea54feef0f2e62f7618da9b0ce3acce9f474db6,ebd85e9a455df689c9be02a93354f580df4cafd8,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jan 2 22:14:10 2012 -0800,1325571250,Encode small hashes with a ziplist,606.0,321.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",10.0,2.0,3.0,1.6192905579983043,7.0,766.6,647.0,27.56194675925927,914.5,1.0176290405708357,159.0,None,False,True,"[""c3c856228da2f0d73c608f38395991eecf735606"", ""c3e7441dadf1d287c76c1c0a3cab68f15a875dbd"", ""ee789e157c767be9cbf90af5232bfeacc533e308"", ""8db020e2a1255a2595b5c4215271dcbad3b9aac2"", ""57a0db94956441ac14a252cd09daa45e3f3a9453""]"
ebd85e9a455df689c9be02a93354f580df4cafd8,fe458402014cdd98a10179c85899f1eca0307534,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jan 3 15:48:55 2012 -0800,1325634535,"Implements ziplistFindTo improve the performance of the ziplist implementation, somenfunctions have been converted to macros to avoid unnecessary stacknmovement and duplicate variable assignments.n",169.0,115.0,"src/t_hash.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER",3.0,1.0,1.0,0.8264762185653968,7.0,694.0,38.0,127.58952546296295,921.0,1.4604992990918826,407.0,None,False,True,"[""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70""]"
11e0c4c55b8edd8d2226ba2e5fde989778695195,06f8a473fca79730e519c89571b1a7b227519d62,antirez,antirez@gmail.com,Fri Jan 6 12:54:29 2012 +0100,1325850869,Regression tests for protocol desync bug related to Issue #141,31.0,0.0,"tests/unit/protocol.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,78.0,7.0,161.96832175925925,4364.0,1.0061740468082787,204.0,Corrective,True,,
06f8a473fca79730e519c89571b1a7b227519d62,414c3deac1573ae54325ca6ab629446205774d62,antirez,antirez@gmail.com,Fri Jan 6 17:28:40 2012 +0100,1325867320,Regression test for the main problem causing issue #141. Minor changes/fixes/additions to the test suite itself needed to write the test.,85.0,2.0,"tests/helpers/gen_write_load.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",4.0,1.0,4.0,0.9653477241343508,7.0,155.5,102.0,28.99029513888889,4366.5,0.7577898067709165,208.0,Corrective,True,True,"[""06312eed86c72a4b259de2e78818827dba97b5c3"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
414c3deac1573ae54325ca6ab629446205774d62,68fe1b9b99e36b81298ee4d5181d3b7792146d97,antirez,antirez@gmail.com,Sat Jan 7 12:54:48 2012 +0100,1325937288,version bumped to 2.9.3,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,12.0,19.082835648148148,4369.0,1.0524031133757128,1213.0,None,False,,
68fe1b9b99e36b81298ee4d5181d3b7792146d97,5db904bdc575a75cf4ae6d9585767a6b771c0d9d,antirez,antirez@gmail.com,Tue Jan 10 18:37:16 2012 +0100,1326217036,show GCC version in INFO output.,6.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2122.0,203.0,7.474375,4370.0,1.1337904507065808,1214.0,None,False,,
5db904bdc575a75cf4ae6d9585767a6b771c0d9d,d8bd12f984d3d5f78c0bcc9819fe002a3b379308,antirez,antirez@gmail.com,Wed Jan 11 20:25:41 2012 +0100,1326309941,error in comment fixed,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2144.0,70.0,19.457060185185185,4371.0,1.051395225716648,1215.0,Corrective,True,,
d8bd12f984d3d5f78c0bcc9819fe002a3b379308,00010fa96f2b327ca865e6fdaf94d8924184271a,antirez,antirez@gmail.com,Thu Jan 12 16:02:57 2012 +0100,1326380577,"On crash print information about the current client (if any), command vector, and object associated to first argument assuming it is a key.",64.0,4.0,"src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.4282648898155057,7.0,1180.5,518.0,11.35214988425926,4373.5,1.0310479961264742,1219.0,None,False,True,"[""d4d208595c78d78196c926c55799bc81ae06f230"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509""]"
00010fa96f2b327ca865e6fdaf94d8924184271a,06312eed86c72a4b259de2e78818827dba97b5c3,antirez,antirez@gmail.com,Thu Jan 12 16:24:41 2012 +0100,1326381881,Possible fix for false positives in issue 141 regression test,5.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,135.0,13.0,5.95556712962963,4376.0,1.1679101214433274,209.0,Corrective,True,,
06312eed86c72a4b259de2e78818827dba97b5c3,7faa1f075b14882696af22d0613255018416ac92,antirez,antirez@gmail.com,Mon Jan 16 09:39:04 2012 +0100,1326703144,added a comment on top of the zslRandomLevel() function,4.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2144.0,71.0,4.550960648148148,4377.0,1.2197338270562534,1220.0,Feature Addition,False,,
7faa1f075b14882696af22d0613255018416ac92,bd068b15c25c96200a8288beb5d8bc5331059e33,antirez,antirez@gmail.com,Mon Jan 16 10:03:38 2012 +0100,1326704618,sds.c no longe pre-allocate more than 1MB of free space ahead. This fixes issue #252.,7.0,1.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,7.0,420.0,34.0,55.7705787037037,4378.5,1.0134479508269871,1222.0,Corrective,True,,
bd068b15c25c96200a8288beb5d8bc5331059e33,1596d6a61e4c92fcde30fb2628a242ab01cb5883,antirez,antirez@gmail.com,Mon Jan 16 10:08:33 2012 +0100,1326704913,Obsolete SDS_ABORT_ON_OOM removed from sds.c,3.0,52.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,748.0,23.0,0.003414351851851852,4380.0,293.88135593220335,1223.0,None,False,,
1596d6a61e4c92fcde30fb2628a242ab01cb5883,ebdfad69dce1b3a1a48960328e5f6c3ed8fafa41,antirez,antirez@gmail.com,Mon Jan 16 11:27:22 2012 +0100,1326709642,Don't change the replication state if SLAVE OF is called with arguments specifying the same master we are already connected with. This fixes issues #290.,15.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,598.0,28.0,16.661597222222227,4381.0,1.0600182555527309,1224.0,Corrective,True,,
ebdfad69dce1b3a1a48960328e5f6c3ed8fafa41 57c0cf8b8571128152ca785f664ee369c5a433a7,a11c87477754322863a51c22cb6a7614ba8ebaf0,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 16 03:44:00 2012 -0800,1326714240,Merge pull request #279 from kashif/patch-1Fixed some typos in redis.conf.,,,,,,,,,,,,,,,Merge,False,,
ebdfad69dce1b3a1a48960328e5f6c3ed8fafa41,4aac3ff2473b4e70dd503ff5c65891146dac30fc,antirez,antirez@gmail.com,Mon Jan 16 16:50:24 2012 +0100,1326729024,"It is now posible to flush all the previous saving points in redis.conf by using a save directive with a single empty string argument, like it happens for CONFIG SET save.",16.0,6.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,2.0,2.0,0.8453509366224365,7.0,610.0,128.0,16.087586805555556,4382.5,1.042171073727356,1225.0,None,False,,
4aac3ff2473b4e70dd503ff5c65891146dac30fc a11c87477754322863a51c22cb6a7614ba8ebaf0,f7ccc4830bfd9345452027020c12c100d01090ef,antirez,antirez@gmail.com,Mon Jan 16 16:50:41 2012 +0100,1326729041,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
f7ccc4830bfd9345452027020c12c100d01090ef,3853c168392e01f1790acaaee0a27aa893100e56,antirez,antirez@gmail.com,Sun Dec 25 16:32:54 2011 +0100,1324827174,Track the length of the client pending output buffers (still to transfer) in a new field in the client structure.,31.0,1.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5349547231656377,7.0,1076.0,357.0,-14.856797839506171,4385.0,0.9412799911315264,1228.0,Feature Addition,False,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
3853c168392e01f1790acaaee0a27aa893100e56,498dc5557c31fc9a65a36f2e8da9accfa72fbc5a,antirez,antirez@gmail.com,Tue Jan 17 12:43:01 2012 +0100,1326800581,"Introduced three client limit classes: normal, slave, pubsub",21.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,7.0,1131.5,287.0,22.840358796296297,4387.5,1.0328366120116126,1230.0,None,False,True,"[""f0266532fc82b8ae9a87407adaf4555dddce690e""]"
f7ccc4830bfd9345452027020c12c100d01090ef,bad2b8e6ec81235fae085da1c8394c8ece1ad0ea,Brad Voth,brad.voth@ge.com,Wed Jan 18 10:09:42 2012 -0500,1326899382,updated utils/install_server.sh to support chkconfig boxes (redhat/ centos) as well as debian/ubuntu,30.0,3.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,156.0,7.0,106.00748842592593,0.0,0.0,0.0,None,False,True,"[""b0c6ee1d1d1c7890b36cf008cef9f3ff808b9361"", ""c4286feabef25b417d05251e4a63ef769ac4cfad"", ""34f37fb7d3d685fa737e7195d51ed874a6d496ae"", ""2209d077d397352a11480501a691bd991c05ff36""]"
f7ccc4830bfd9345452027020c12c100d01090ef,d4d208595c78d78196c926c55799bc81ae06f230,antirez,antirez@gmail.com,Fri Jan 20 12:20:45 2012 +0100,1327058445,"all the stack trace related functions are now in debug.c. Now Redis dumps registers and stack content on crash. Currently osx supported, adding Linux right now.",220.0,136.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.0218312514568595,7.0,1222.0,436.0,6.2253086419753085,4390.0,1.0815775111572874,1233.0,Corrective,True,True,"[""ac834d237a1b094eecd6ac2f36aa47b52b49466f"", ""23c0cdd2ad8b15defab56eca89a42c67cadd9a34"", ""a66a4963498d08094fc16c2b0afe6faf8ad512b0"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
d4d208595c78d78196c926c55799bc81ae06f230,eea8c7a4f86785f5b5e325007653ee449d6140cd,antirez,antirez@gmail.com,Fri Jan 20 12:54:15 2012 +0100,1327060455,added support to dump registers on crash on Linux x64,29.0,1.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.21084230031853213,7.0,859.5,233.0,0.02326388888888889,4392.5,33.23880597014925,1235.0,Feature Addition,False,True,"[""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7""]"
eea8c7a4f86785f5b5e325007653ee449d6140cd,632da605831a84fe3d6a17b5d3f4ce7114378f77,antirez,antirez@gmail.com,Fri Jan 20 14:37:50 2012 +0100,1327066670,added support to dump registers on crash on Linux x32,24.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,627.0,34.0,0.07193287037037037,4394.0,14.901850362027352,1236.0,Feature Addition,False,True,"[""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7""]"
632da605831a84fe3d6a17b5d3f4ce7114378f77,447ebf3bc73016a6137a458bf0314109a0128157,antirez,antirez@gmail.com,Fri Jan 20 16:40:43 2012 +0100,1327074043,Better looking registers/stack dump,22.0,19.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,650.0,35.0,0.08533564814814815,4395.0,12.718432117184319,1237.0,Perfective,False,True,"[""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7""]"
447ebf3bc73016a6137a458bf0314109a0128157,a48c8d873bc2a49f66ab398ebed51dc45764ca17,antirez,antirez@gmail.com,Sat Jan 21 23:05:32 2012 +0100,1327183532,Fix for hash table collision attack. We simply randomize hash table initialization value at startup time.,22.0,4.0,"src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.5734024524177668,7.0,902.75,264.0,37.56236111111111,4397.5,1.2039393373020797,1241.0,Corrective,True,True,"[""06c5523a88ec0f76ff932de5240c8d3ad3b1cc19"", ""b362c111daa0939f86123cb6fb82fbb389cffc7b"", ""da920e75d4836897b9a7109b6d4743e201cd8a4f""]"
a48c8d873bc2a49f66ab398ebed51dc45764ca17,06c5523a88ec0f76ff932de5240c8d3ad3b1cc19,antirez,antirez@gmail.com,Sat Jan 21 23:34:06 2012 +0100,1327185246,typo in comment fixed,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2035.0,207.0,0.019837962962962963,4400.0,51.408401400233366,1242.0,Corrective,True,,
06c5523a88ec0f76ff932de5240c8d3ad3b1cc19,b362c111daa0939f86123cb6fb82fbb389cffc7b,antirez,antirez@gmail.com,Sun Jan 22 01:40:23 2012 +0100,1327192823,fixed typo in hahs function seed default value. It is no longer used but fixed to retain the old constant as default anyway.,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,766.0,14.0,0.10753472222222224,4401.0,10.299321924443008,1243.0,Corrective,True,True,"[""da920e75d4836897b9a7109b6d4743e201cd8a4f""]"
498dc5557c31fc9a65a36f2e8da9accfa72fbc5a b362c111daa0939f86123cb6fb82fbb389cffc7b,890da62eea16bbf67be0c92cf16eba191f8e828e,antirez,antirez@gmail.com,Mon Jan 23 10:36:07 2012 +0100,1327311367,Merge branch 'unstable' into limits,,,,,,,,,,,,,,,Merge,False,,
890da62eea16bbf67be0c92cf16eba191f8e828e,7eac2a75a43bace72947fb534db9016707af1a02,antirez,antirez@gmail.com,Mon Jan 23 16:12:37 2012 +0100,1327331557,Implementation of the internals that make possible to terminate clients overcoming configured output buffer (soft and hard) limits.,122.0,0.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.002199088270107,7.0,1329.0,572.0,9.990659722222222,4403.5,1.02878573654606,1247.0,None,False,True,"[""06b3dced99371c68fa9d7bcb0523cc05f3324e06"", ""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""49c1b60bd8cbca6bbec7a171645dfeb67c1a7ddf""]"
7eac2a75a43bace72947fb534db9016707af1a02,8c43e66346bf917ce13b85e79700a2183fa01ab7,antirez,antirez@gmail.com,Mon Jan 23 16:17:22 2012 +0100,1327331842,actually call the function to async free clients in serverCron().,3.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2047.0,209.0,0.003298611111111111,4406.0,304.15789473684214,1248.0,None,False,,
8c43e66346bf917ce13b85e79700a2183fa01ab7,3c0602ff418ff1a1b18440a6994fd73226786251,antirez,antirez@gmail.com,Mon Jan 23 16:19:49 2012 +0100,1327331989,CLIENT LIST test fixed (there is a new omem field in the output),1.0,1.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,5.0,1.0,35.24859953703704,4407.0,1.0283699214474964,210.0,Corrective,True,,
3c0602ff418ff1a1b18440a6994fd73226786251,51669c5ac11b250fcdc91382f52f515a11835a20,antirez,antirez@gmail.com,Mon Jan 23 17:15:49 2012 +0100,1327335349,client buffer handling refactoring and optimization,47.0,23.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1262.0,91.0,0.04388888888888889,4408.0,23.78481012658228,1249.0,None,False,True,"[""739893075675af06b1cc5d782a984e3624e98ff9""]"
51669c5ac11b250fcdc91382f52f515a11835a20,06b3dced99371c68fa9d7bcb0523cc05f3324e06,antirez,antirez@gmail.com,Tue Jan 24 09:32:39 2012 +0100,1327393959,asyncCloseClientOnOutputBufferLimitReached() now ignores clients with REDIS_CLOSE_ASAP flag already set. Return value of the function changed from int to void since it is not used. Fixed logging of the client scheduled to be closed.,6.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,7.0,1209.5,294.0,0.700300925925926,4409.5,2.0940649738533024,1251.0,Corrective,True,,
06b3dced99371c68fa9d7bcb0523cc05f3324e06,7fe8d49a70c8ae87dbcc080872d327d1485c18c5,antirez,antirez@gmail.com,Tue Jan 24 10:43:30 2012 +0100,1327398210,Client output buffer limits: configuration of parameters for the different classes of clients implemented.,106.0,2.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9014750585643264,7.0,1063.3333333333333,347.0,2.6145370370370373,4412.0,1.1283004872612017,1254.0,None,False,True,"[""c715c9b8bfbd83022502e29ae72be7f0eae1a3da"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
7fe8d49a70c8ae87dbcc080872d327d1485c18c5,c8a607f2b6a1253fa7f884dd009bb1f559d76d57,antirez,antirez@gmail.com,Tue Jan 24 11:23:23 2012 +0100,1327400603,client-output-buffer-limit documented in redis.conf,41.0,4.0,"redis.conf,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,2.0,2.0,0.6751914401458716,7.0,1253.5,289.0,4.284375,4414.5,1.1226775819659491,1255.0,Non Functional,False,,
c8a607f2b6a1253fa7f884dd009bb1f559d76d57,7957c676040df062c0ec235fcad9c3ae4437638c,antirez,antirez@gmail.com,Tue Jan 24 12:03:48 2012 +0100,1327403028,after all closing a client for output buffer limit overcoming is a WARNING level message.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1300.0,94.0,0.05576388888888889,4416.0,18.93275217932752,1256.0,None,False,,
7957c676040df062c0ec235fcad9c3ae4437638c,3cbce4f45e0d727e585253ecb5bdb670ad8458f6,antirez,antirez@gmail.com,Tue Jan 24 14:46:23 2012 +0100,1327412783,redis.conf typo fixed in the client-output-buffer-limit documentation,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,494.0,80.0,0.14097222222222222,4417.0,8.0935960591133,1270.0,Corrective,True,,
3cbce4f45e0d727e585253ecb5bdb670ad8458f6,2f0f0d95c05d5df6443a6ffbedb64c18faaeb6cc,antirez,antirez@gmail.com,Tue Jan 24 15:33:15 2012 +0100,1327415595,lenght -> length,2.0,2.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,1148.0,169.0,0.559056712962963,4418.5,1.961234989311727,1258.0,None,False,,
b362c111daa0939f86123cb6fb82fbb389cffc7b,caa63a382154bee2162237330e43eee2944b2c6a,Mukund Sivaraman,muks@banu.com,Wed Jan 25 10:27:37 2012 +0100,1327483657,"If aeApiCreate() fails, there's probably not much one can do, but in the name of consistency...",2.0,0.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,409.0,4.0,40.022638888888885,0.0,0.0,0.0,Corrective,True,,
caa63a382154bee2162237330e43eee2944b2c6a,ecc57021451d1c625fd36c9ba88c60f201f5c098,antirez,antirez@gmail.com,Wed Jan 25 10:35:47 2012 +0100,1327484147,"aeCreateEventLoop() cleanup on error unified in a single block (original patch by Mukund Sivaraman, modified by me to make it simpler and to use my coding style).",11.0,15.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,411.0,5.0,0.005671296296296297,4420.0,177.32653061224488,1259.0,Feature Addition,False,,
2f0f0d95c05d5df6443a6ffbedb64c18faaeb6cc ecc57021451d1c625fd36c9ba88c60f201f5c098,c69ad1f24e379e9708c562cc8cda12691a000595,antirez,antirez@gmail.com,Wed Jan 25 10:41:25 2012 +0100,1327484485,Merge branch 'unstable' into limits,,,,,,,,,,,,,,,Merge,False,,
ecc57021451d1c625fd36c9ba88c60f201f5c098,6710ff24d067d56b6b8d768532a6a7d3c4bc7a80,antirez,antirez@gmail.com,Wed Jan 25 16:46:19 2012 +0100,1327506379,"Fixed a non critical bug signaled by clang static analyzer thanks to Mukund Sivaraman for reporting it: there was a not initialized field populating the cluster message header, but it is always fixed at later time before sending the packet.",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1776.0,58.0,77.985,4421.0,1.01282297877797,1260.0,Corrective,True,,
c69ad1f24e379e9708c562cc8cda12691a000595 6710ff24d067d56b6b8d768532a6a7d3c4bc7a80,9b810f1cde23485ca435bd90754d9a5c1ecfafe7,antirez,antirez@gmail.com,Wed Jan 25 16:46:53 2012 +0100,1327506413,Merge branch 'unstable' into limits,,,,,,,,,,,,,,,Merge,False,,
9b810f1cde23485ca435bd90754d9a5c1ecfafe7,d329031fad1ac8c5d2d0c58a17d08a2de98b7b15,antirez,antirez@gmail.com,Wed Jan 25 16:59:32 2012 +0100,1327507172,Fixed another possible bug in cluster.c found by clang --analyze.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1776.0,59.0,0.00917824074074074,4422.0,109.95334174022699,1261.0,Corrective,True,,
6710ff24d067d56b6b8d768532a6a7d3c4bc7a80,4e97c2c71a3c511165c966769f51d2255d7a7b33,antirez,antirez@gmail.com,Wed Jan 25 16:59:32 2012 +0100,1327507172,Fixed another possible bug in cluster.c found by clang --analyze.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1776.0,60.0,0.0,4423.0,0.0,1262.0,Corrective,True,,
d329031fad1ac8c5d2d0c58a17d08a2de98b7b15 4e97c2c71a3c511165c966769f51d2255d7a7b33,a30a8ae7ba55cd7912dbfb78eef1d3963215ff6c,antirez,antirez@gmail.com,Wed Jan 25 16:59:58 2012 +0100,1327507198,Merge branch 'unstable' into limits,,,,,,,,,,,,,,,Merge,False,,
a30a8ae7ba55cd7912dbfb78eef1d3963215ff6c,c715c9b8bfbd83022502e29ae72be7f0eae1a3da,antirez,antirez@gmail.com,Wed Jan 25 18:07:56 2012 +0100,1327511276,Fixed typo in getClientLimitClassByName(),1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1300.0,96.0,1.1074189814814814,4424.0,1.90300059572956,1263.0,Corrective,True,,
c715c9b8bfbd83022502e29ae72be7f0eae1a3da,efc8f6c1a2366fd374ffd0b39138bea02bda2e9c,antirez,antirez@gmail.com,Wed Jan 25 18:11:04 2012 +0100,1327511464,Added test for client output buffer limit (hard limit).,22.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/obuf-limits.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.26676498780302604,7.0,207.5,65.0,9.514722222222222,4425.5,1.052550141593437,212.0,Feature Addition,False,,
efc8f6c1a2366fd374ffd0b39138bea02bda2e9c,da9c4cc1471f8575d1a4e62955c248e725efc750,antirez,antirez@gmail.com,Wed Jan 25 18:34:56 2012 +0100,1327512896,Added test for client output buffer limit (soft limit).,53.0,1.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,21.0,1.0,0.016574074074074074,4427.0,61.33519553072625,213.0,Feature Addition,False,,
fe458402014cdd98a10179c85899f1eca0307534,80586cb894da69a26f6ab52d6bad0e9e8fa8a6bd,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jan 25 13:26:25 2012 -0800,1327526785,Test that zipmap from RDB is correctly converted,44.0,6.0,"src/rdb.c,CAS_DELIMITER,tests/assets/hash-zipmap.rdb,CAS_DELIMITER,tests/integration/convert-zipmap-hash-on-load.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.904381457724494,7.0,368.33333333333326,61.0,7.5445023148148165,924.0,1.0441822825978568,161.0,Preventative,False,True,"[""512f682340eb74aaedc525e834a943427999508c""]"
80586cb894da69a26f6ab52d6bad0e9e8fa8a6bd,d3ea4c86a8c8efb2ab922db89af915833e437e7e,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jan 25 13:37:43 2012 -0800,1327527463,Update default configuration,5.0,6.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,494.0,81.0,1.3273148148148148,926.0,1.7534007673526335,239.0,None,False,,
da9c4cc1471f8575d1a4e62955c248e725efc750,7f7a13b27b4a09a0df1841c69af35306d4464327,antirez,antirez@gmail.com,Thu Jan 26 16:08:24 2012 +0100,1327590504,Less false positives for obuf-limits.tcl tests,3.0,3.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,73.0,2.0,0.8982407407407408,4428.0,2.1132872899701063,214.0,Preventative,False,,
7f7a13b27b4a09a0df1841c69af35306d4464327,6c29410117b100b13764280bb3c58604b769c4fc,antirez,antirez@gmail.com,Thu Jan 26 16:45:08 2012 +0100,1327592708,"false positive in expire tests mitigated with a sleep, but other solutions exist if needed later.",5.0,0.0,"tests/unit/other.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,287.0,20.0,36.30618055555557,4429.0,1.0275435197175258,215.0,Preventative,False,,
6c29410117b100b13764280bb3c58604b769c4fc,4d776dba3c706aa20fd7d95dd73bff32dc2148a7,Jakub Wieczorek,fawek@fawek.net,Sun Jan 29 14:53:49 2012 +0100,1327845229,Lua reports line numbers off by one in error messages,2.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,781.0,37.0,72.02987268518518,0.0,0.0,0.0,None,False,,
6c29410117b100b13764280bb3c58604b769c4fc,a0bf8d0ad8a6f4414194bc8ec7d067664bd321c2,Michal Kwiatkowski,michal@trivas.pl,Mon Jan 30 07:36:49 2012 +0100,1327905409,SORT with STORE removes key if result is empty. This fixes issue #227.,24.0,2.0,"src/sort.c,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.5696670098234902,7.0,250.0,35.0,49.793456790123464,1.0,0.6719961427247639,1.0,Corrective,True,,
6c29410117b100b13764280bb3c58604b769c4fc a0bf8d0ad8a6f4414194bc8ec7d067664bd321c2,824ea0177f19218d925feefbfe836718c46351d5,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 30 01:25:34 2012 -0800,1327915534,Merge pull request #321 from mkwiatkowski/ticket227SORT with STORE removes key if result is empty. This fixes issue #227.,,,,,,,,,,,,,,,Merge,False,,
824ea0177f19218d925feefbfe836718c46351d5,89f6f6abcf882a1eed882a0d97b1e50c034c9530,antirez,antirez@gmail.com,Mon Jan 30 10:27:50 2012 +0100,1327915670,setKey(): call the higher level wrapper setModifiedKey() instead of touchWatchedKey() even if currently they are exactly the same.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,742.0,67.0,39.92056712962963,4430.0,1.0250497443273492,1264.0,None,False,,
824ea0177f19218d925feefbfe836718c46351d5 4d776dba3c706aa20fd7d95dd73bff32dc2148a7,eb7d19ed69c438b102ef7cb35195281c13a850ee,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 30 01:40:17 2012 -0800,1327916417,Merge pull request #319 from fawek/lua-error-locationLua reports line numbers off by one in error messages,,,,,,,,,,,,,,,Merge,False,,
89f6f6abcf882a1eed882a0d97b1e50c034c9530 eb7d19ed69c438b102ef7cb35195281c13a850ee,d1c4c94ebf918b908691ab7f58f872b04d93f3f9,antirez,antirez@gmail.com,Mon Jan 30 10:40:28 2012 +0100,1327916428,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
d1c4c94ebf918b908691ab7f58f872b04d93f3f9,fc4ed4299bfad004a3230bf6af0de89281bb2d44,antirez,antirez@gmail.com,Mon Jan 30 21:08:10 2012 +0100,1327954090,minimal change to obuf-limits.tcl test to make sure there are no false positives with 32bit instances as well.,1.0,1.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,73.0,3.0,4.208171296296296,4431.0,1.2376329121583338,216.0,Preventative,False,,
fc4ed4299bfad004a3230bf6af0de89281bb2d44,3c08fdae712e79cc7a678a2969c2ac15c5ff8865,antirez,antirez@gmail.com,Tue Jan 31 10:35:52 2012 +0100,1328002552,64 bit instances are no longer limited to have at max 2^32-1 elements in lists.,12.0,18.0,"src/adlist.c,CAS_DELIMITER,src/adlist.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,2.0131324651707385,7.0,923.8,455.0,246.767650462963,4434.0,1.0010087533359786,1269.0,None,False,,
3c08fdae712e79cc7a678a2969c2ac15c5ff8865,8dd19d818f52d27284fd3e3b6e0fc237388e7678,antirez,antirez@gmail.com,Tue Jan 31 11:43:32 2012 +0100,1328006612,Fixed redis-benchmark --help output typo,4.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,654.0,27.0,47.00060185185186,4437.0,1.0212763232937323,1270.0,Corrective,True,,
8dd19d818f52d27284fd3e3b6e0fc237388e7678,548efd91e5a33e1358213a902b8533d88f40f7cf,antirez,antirez@gmail.com,Tue Jan 31 16:09:21 2012 +0100,1328022561,"Order output of commands returning random arrays using table.sort when called from Lua, partially fixing issue #165. The issue is yet not completely fixed since we can't add the REDIS_CMD_SORT_FOR_SCRIPT flag in SORT currently, both because it may contain NULLs and because it is not cool to re-sort everything at every call when instead this should be sorted only if BY <constant> is used.",36.0,9.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,1.1256828315506748,7.0,1322.0,455.0,0.8385416666666666,4439.0,3.2915336131866963,1273.0,Corrective,True,,
548efd91e5a33e1358213a902b8533d88f40f7cf,2c861050c17237a61fdaff4da2777c5d18ce979a,antirez,antirez@gmail.com,Wed Feb 1 15:22:28 2012 +0100,1328106148,"SORT is now more deterministic: does not accept to compare by score items that have scores not representing a valid double. Also items with the same score are compared lexycographically. At the same time the scripting side introduced the ability to sort the output of SORT when sort uses the BY <constant> optimization, resulting in no specific ordering. Since in this case the user may use GET, and the result of GET can be null, converted into false as Lua data type, this commit also introduces the ability to sort Lua tables containining false, only if the first (faster) attempt at using just table.sort with a single argument fails.",52.0,7.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.4300384422909442,7.0,919.8,489.0,1.5098125,4443.0,1.4437720860204084,217.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
2c861050c17237a61fdaff4da2777c5d18ce979a,de79a2ee12ef0e301d05494d64831bc407ba3696,antirez,antirez@gmail.com,Wed Feb 1 17:05:45 2012 +0100,1328112345,"Make SORT BY <constant> STORE ... to always produce the same output by force sorting, so that we have deterministic replication of this command.",16.0,0.0,"src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9886994082884974,7.0,310.5,33.0,0.07172453703703703,4446.5,11.456672583508153,218.0,None,False,,
de79a2ee12ef0e301d05494d64831bc407ba3696,01f75bf352b312cacbba2ae30464894c3c44c4c6,antirez,antirez@gmail.com,Wed Feb 1 17:17:52 2012 +0100,1328113072,New SORT tests checking the new more deterministic behavior of SORT sorting algorithm.,26.0,0.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,219.0,16.0,0.008414351851851852,4448.0,119.8445667125172,219.0,Feature Addition,False,,
01f75bf352b312cacbba2ae30464894c3c44c4c6,44d77bb217b51e287e1f885445440dc85a1aa641,antirez,antirez@gmail.com,Wed Feb 1 17:37:48 2012 +0100,1328114268,A few SORT tests made more resistant to false negatives resulitng from poor randomization of Redis hash function with one byte inputs.,5.0,5.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,245.0,17.0,0.013842592592592592,4449.0,73.2408026755853,220.0,Preventative,False,,
44d77bb217b51e287e1f885445440dc85a1aa641,c17947287afe5b081400679dbe9882cd4e95776b,antirez,antirez@gmail.com,Wed Feb 1 17:49:03 2012 +0100,1328114943,Added tests checking ability of the scripting engine to reorder the output of commands with a random output regarding signle elements position in the multi bulk reply.,24.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,217.0,8.0,93.06939814814815,4450.0,1.010744670320186,221.0,Feature Addition,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
c17947287afe5b081400679dbe9882cd4e95776b,b80b1c5914435c3a013cfe9b19e39f9de35ab06e,antirez,antirez@gmail.com,Wed Feb 1 21:47:41 2012 +0100,1328129261,Only incremnet stats for key miss/hit when the key is semantically accessed in read-only.,8.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,742.0,68.0,2.472118055555556,4451.0,1.404511426043232,1279.0,None,False,True,"[""41d804d9dc48292f61fc1e1efd2241404dc9a6e8""]"
b80b1c5914435c3a013cfe9b19e39f9de35ab06e,75eaac5c7410553b089f11632c5755004a0a6665,antirez,antirez@gmail.com,Thu Feb 2 10:02:40 2012 +0100,1328173360,Added a server.arch_bits field instead of computing it at runtime for INFO.,4.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,7.0,1595.5,421.0,0.7779166666666667,4452.5,1.96411355115158,1281.0,Feature Addition,False,,
75eaac5c7410553b089f11632c5755004a0a6665,d876678b5eb0db0df66a658faeb8fb71e236a634,antirez,antirez@gmail.com,Thu Feb 2 10:17:16 2012 +0100,1328174236,Set a 3.5 GB maxmemory limit with noeviction policy if a 32 bit instance without user-provided memory limits is detected.,10.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2055.0,215.0,0.010138888888888888,4454.0,99.63013698630138,1282.0,None,False,,
d876678b5eb0db0df66a658faeb8fb71e236a634,ce8b772be7dcd0dec767c7bdfa3b8702806d69c4,antirez,antirez@gmail.com,Thu Feb 2 16:30:52 2012 +0100,1328196652,Now Lua scripts dispatch Redis commands properly calling the call() function. In order to make this possible call() was improved with a new flags argument that controls how the Redis command is executed.,34.0,16.0,"src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,1.0,1.0,1.2158259384333745,7.0,1077.0,473.0,11.206510416666667,4456.5,1.0228140304055453,1286.0,Feature Addition,False,True,"[""e85d6f22cf2ddb2a4a5de80b211802bdacbf4a3b""]"
ce8b772be7dcd0dec767c7bdfa3b8702806d69c4,355f859134e6220cb35d7b3fa9ea19ea8d05c02a,antirez,antirez@gmail.com,Sat Feb 4 08:58:37 2012 +0100,1328342317,"Use less memory when emitting the protocol, by using more shared objects for commonly emitted parts of the protocol.",34.0,13.0,"src/db.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,2.2629422449179315,7.0,1107.0,600.0,20.62330787037037,4461.0,1.1035720878623778,1291.0,None,False,True,"[""f892797e1b459ad568df32d891b368302c40b3c9"", ""221d2932b51dc605130130369301c92f34336987""]"
355f859134e6220cb35d7b3fa9ea19ea8d05c02a,f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554,antirez,antirez@gmail.com,Sat Feb 4 14:05:54 2012 +0100,1328360754,"This fixes issue #327, is a very complex fix (unfortunately), details:1) sendReplyToClient() now no longer stops transferring data to a singlenclient in the case we are out of memory (maxmemory-wise).nn2) in processCommand() the idea of we being out of memory is no longernthe naive zmalloc_used_memory() > server.maxmemory. To say if we cannaccept or not write queries is up to the return value ofnfreeMemoryIfNeeded(), that has full control about that.nn3) freeMemoryIfNeeded() now does its math without considering outputnbuffers size. But at the same time it can't let the output buffers tonput us too much outside the max memory limit, so at the same time itnmakes sure there is enough effort into delivering the output buffers tonthe slaves, calling the write handler directly.nnThis three changes are the result of many tests, I found (partiallynempirically) that is the best way to address the problem, but maybenwe'll find better solutions in the future.n",103.0,25.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5368351276280202,7.0,1513.333333333333,526.0,0.2133912037037037,4465.0,3.863806476107827,1294.0,Corrective,True,True,"[""609baba8a2d115f05e8fbc0db742ca60848e3c80"", ""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb"", ""fd8efb7c3615f1a0c78a03388d5b18bc9c4049f8""]"
ce8b772be7dcd0dec767c7bdfa3b8702806d69c4,7441fcdd5639942e9698ab1e20907f0dfb1c9d00,antirez,antirez@gmail.com,Sun Feb 5 09:37:08 2012 +0100,1328431028,Redis Manifesto moved from src to root dir,20.0,20.0,"MANIFESTO,CAS_DELIMITER,src/MANIFESTO,CAS_DELIMITER",2.0,2.0,2.0,1.0,1.0,10.0,1.0,170.38074652777775,4467.5,0.5014673019404763,1295.0,None,False,,
7441fcdd5639942e9698ab1e20907f0dfb1c9d00,3508899944aa0797cf52563493b4bc295b0ec2fd,antirez,antirez@gmail.com,Sun Feb 5 09:38:41 2012 +0100,1328431121,INSTALL now redirects the user to README,1.0,30.0,"INSTALL,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,30.0,3.0,240.68359953703705,4469.0,1.004154832327269,1272.0,None,False,,
3508899944aa0797cf52563493b4bc295b0ec2fd,c2513ecb9877d9976da31bc11f84e1dab68777b5,antirez,antirez@gmail.com,Sun Feb 5 11:08:01 2012 +0100,1328436481,A first (work in progress) release notes for 2.6,81.0,0.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,0.0,9.0,109.66232638888887,4470.0,1.0091189019322258,1273.0,None,False,,
f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554,c1ef6ffe8a53e573b6b9e8d1a02c35e2c62cdad8,antirez,antirez@gmail.com,Mon Feb 6 16:35:43 2012 +0100,1328542543,Also remove size of AOF buffers from used memory when doing the math for freeMemoryIfNeeded(),6.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2153.0,219.0,2.104039351851852,4471.0,1.475276281843236,1296.0,None,False,True,"[""47ca4b6e28af49d1904f40fceacf58bb2907fbf2""]"
c1ef6ffe8a53e573b6b9e8d1a02c35e2c62cdad8,8b7c3455b964d634453cfe7acdb833db10a2fed5,antirez,antirez@gmail.com,Mon Feb 6 16:56:42 2012 +0100,1328543802,freeMemoryIfNeeded() minor refactoring,23.0,23.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.1262192191948015,7.0,1540.666666666667,530.0,1.4172646604938268,4473.0,1.3919950813859732,1299.0,None,False,,
8b7c3455b964d634453cfe7acdb833db10a2fed5,442246dde2d8842caf4c1f4d4694ef5a78a0bad8,antirez,antirez@gmail.com,Tue Feb 7 13:05:36 2012 +0100,1328616336,"Precision of getClientOutputBufferMemoryUsage() greatily improved, see issue #327 for more information.",35.0,8.0,"src/networking.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.3006979255585032,7.0,563.3333333333334,119.0,101.25769675925926,4476.0,1.4021387572271795,1302.0,None,False,True,"[""609baba8a2d115f05e8fbc0db742ca60848e3c80"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
c2513ecb9877d9976da31bc11f84e1dab68777b5,01e95705f8d4b0d21cf892748eaf153f16fbf947,antirez,antirez@gmail.com,Tue Feb 7 15:08:38 2012 +0100,1328623718,Fixes to 2.6 release notes file,9.0,11.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,81.0,10.0,2.1670949074074075,4478.0,1.4614472566853771,1274.0,Corrective,True,,
442246dde2d8842caf4c1f4d4694ef5a78a0bad8,609baba8a2d115f05e8fbc0db742ca60848e3c80,antirez,antirez@gmail.com,Tue Feb 7 17:41:31 2012 +0100,1328632891,"Fixes to c->reply_bytes computation, and debug messages to closely study the behavior of memory pressure + slaves + maxmemory + blocked slaves.",37.0,9.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9321115676166748,7.0,1741.0,322.0,0.6113657407407407,4479.5,4.0184040652547015,1304.0,Corrective,True,True,"[""b129c6df454690e223ac8481a4510313db35e66b""]"
609baba8a2d115f05e8fbc0db742ca60848e3c80,b129c6df454690e223ac8481a4510313db35e66b,antirez,antirez@gmail.com,Wed Feb 8 00:10:20 2012 +0100,1328656220,debugging messages removed from freeMemoryIfNeeded(),1.0,15.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2149.0,222.0,0.2700115740740741,4481.0,4.70354494406104,1305.0,Corrective,True,,
b129c6df454690e223ac8481a4510313db35e66b,cebb7b92ce04c89826a0ebe74fd0c15097fe5230,antirez,antirez@gmail.com,Wed Feb 8 00:17:27 2012 +0100,1328656647,redis.conf updated with new maxmemory semantics,17.0,15.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,493.0,82.0,13.06925925925926,4482.0,1.07651543061184,1275.0,Feature Addition,False,,
cebb7b92ce04c89826a0ebe74fd0c15097fe5230,f9ef912c661a8d0a0690e20dc46f29484e0e4a5e,antirez,antirez@gmail.com,Wed Feb 8 00:20:46 2012 +0100,1328656846,more practical maxmemory+slaves hint in redis.conf,4.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,495.0,83.0,0.002303240740740741,4483.0,435.1708542713568,1276.0,None,False,,
01e95705f8d4b0d21cf892748eaf153f16fbf947,ac834d237a1b094eecd6ac2f36aa47b52b49466f,antirez,antirez@gmail.com,Wed Feb 8 22:24:59 2012 +0100,1328736299,A few small BSD related fixes.,11.0,10.0,"runtest,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/ae.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",4.0,2.0,2.0,1.154222184683522,8.0,334.75,106.0,81.22968171296297,4485.5,1.0036391945441154,1308.0,Corrective,True,,
ac834d237a1b094eecd6ac2f36aa47b52b49466f,56538477143b144f2267ce98805a7b6edc763528,antirez,antirez@gmail.com,Wed Feb 8 22:59:35 2012 +0100,1328738375,ziplist.c fixes for bigendian,51.0,24.0,"src/endian.c,CAS_DELIMITER,src/endian.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",3.0,1.0,1.0,1.1432252418436208,7.0,490.33333333333326,22.0,236.1422453703704,4489.0,1.0019574408439702,1311.0,Corrective,True,True,"[""3fa19b7dfc785aeaa8c1d32782b0b0018a965d13""]"
56538477143b144f2267ce98805a7b6edc763528,8e0ef249a2c1a67e11838ff48329b51c4aa7ccdc,antirez,antirez@gmail.com,Wed Feb 8 23:20:39 2012 +0100,1328739639,more ziplist.c endianess fixes,2.0,2.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1392.0,19.0,0.014629629629629631,4491.0,69.35443037974683,1312.0,Corrective,True,,
8e0ef249a2c1a67e11838ff48329b51c4aa7ccdc,3fa19b7dfc785aeaa8c1d32782b0b0018a965d13,antirez,antirez@gmail.com,Thu Feb 9 16:28:35 2012 +0100,1328801315,"ziplist.c endianess fixes, chapter 3.",21.0,10.0,"src/endian.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.4586858162005403,7.0,709.0,24.0,0.7211574074074074,4492.5,2.033032924235721,1314.0,Corrective,True,True,"[""cab1105c6e4f9f5c3bc82c72a3433e663e9b05cc""]"
3fa19b7dfc785aeaa8c1d32782b0b0018a965d13,cab1105c6e4f9f5c3bc82c72a3433e663e9b05cc,antirez,antirez@gmail.com,Thu Feb 9 16:36:25 2012 +0100,1328801785,"ziplist.c endianess fixes, chapter 4.",1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1400.0,21.0,0.005439814814814815,4494.0,184.82978723404256,1315.0,Corrective,True,,
cab1105c6e4f9f5c3bc82c72a3433e663e9b05cc,66d1b021ec0063c988e837a78356e72d8ed180ca,antirez,antirez@gmail.com,Thu Feb 9 17:09:01 2012 +0100,1328803741,"ziplist.c endianess fixes, chapter 5.",1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1400.0,22.0,0.02263888888888889,4495.0,45.171779141104295,1316.0,Corrective,True,,
01e95705f8d4b0d21cf892748eaf153f16fbf947,2f75bbab0242f5dea4c976d7b3da719616166c75,lsbardel,luca.sbardella@gmail.com,Mon Feb 13 21:05:21 2012 +0000,1329167121,added lua struct c extension,358.0,2.0,"deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/lua_struct.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,2.0,2.0,0.13759652763694952,9.0,338.3333333333333,44.0,36.09235339506173,1.0,0.6731800292860924,1.0,Feature Addition,False,True,"[""61853a9c758bc9d368d4610c0f89387c95b9301d""]"
01e95705f8d4b0d21cf892748eaf153f16fbf947 2f75bbab0242f5dea4c976d7b3da719616166c75,5e985e795dda8a77a87094bd9160c9c48fbf85fd,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 13 15:05:59 2012 -0800,1329174359,Merge pull request #334 from lsbardel/quantredisadded lua struct c extension,,,,,,,,,,,,,,,Merge,False,,
66d1b021ec0063c988e837a78356e72d8ed180ca,6136a16bd1fe4a88ada02e31e597b805d8a86b55,antirez,antirez@gmail.com,Tue Feb 14 15:35:50 2012 +0100,1329230150,intset.c endianess fixes.,56.0,48.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,51.0,6.0,341.84844907407415,4496.0,1.002925272888347,1317.0,Corrective,True,True,"[""297950e8b817dbf3f2dbbbff497fdf3a047cc8f2""]"
6136a16bd1fe4a88ada02e31e597b805d8a86b55 5e985e795dda8a77a87094bd9160c9c48fbf85fd,18aa2b87b6db7fa79b0596590aa385adcbc64e53,antirez,antirez@gmail.com,Tue Feb 14 16:02:04 2012 +0100,1329231724,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
18aa2b87b6db7fa79b0596590aa385adcbc64e53,7a3e372025b2a54486ce52d706b1da95be4b7e7e,antirez,antirez@gmail.com,Tue Feb 14 16:11:46 2012 +0100,1329232306,endian.c/h -> endianconv.c/h to avoid issues with broken libraries search paths.,193.0,117.0,"src/Makefile,CAS_DELIMITER,src/endian.c,CAS_DELIMITER,src/endian.h,CAS_DELIMITER,src/endianconv.c,CAS_DELIMITER,src/endianconv.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",8.0,1.0,1.0,2.1149944134101397,8.0,287.875,106.0,15.779058159722226,4500.5,1.0698976625914065,1325.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
7a3e372025b2a54486ce52d706b1da95be4b7e7e,120a36f22b338e6205a703424cd517e289d5217f,antirez,antirez@gmail.com,Tue Feb 14 16:15:20 2012 +0100,1329232520,"add -f flag to cp when installing, otherwise stopping the server is needed when installing a new Redis version. Thanks to Scott Kevill. Fixes issue #335.",1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,268.0,64.0,0.002476851851851852,4505.0,404.73831775700927,1326.0,Corrective,True,,
120a36f22b338e6205a703424cd517e289d5217f,4a701b3801f0b5362c303b0d477b31d81516d139,antirez,antirez@gmail.com,Tue Feb 14 19:57:31 2012 +0100,1329245851,redis-check-aof is now large files safe also on 32 bit systems.,14.0,11.0,"src/redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,185.0,1.0,602.8678587962962,4506.0,1.0016587382880169,1327.0,None,False,,
4a701b3801f0b5362c303b0d477b31d81516d139,3b0600c7771e97c8dd419b9c4b917aad415cc3ae,antirez,antirez@gmail.com,Wed Feb 15 12:21:04 2012 +0100,1329304864,Add stdint.h in endianconv.h to fix issue #336.,2.0,0.0,"src/endianconv.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,61.0,1.0,0.8397916666666667,4507.0,2.190771520714463,1328.0,Corrective,True,,
3b0600c7771e97c8dd419b9c4b917aad415cc3ae f9ef912c661a8d0a0690e20dc46f29484e0e4a5e,48a32944e6b5e30754701109ff23d85a418d3d4d,antirez,antirez@gmail.com,Thu Feb 16 09:40:27 2012 +0100,1329381627,Merge branch 'issue327' into unstable,,,,,,,,,,,,,,,Merge,False,,
48a32944e6b5e30754701109ff23d85a418d3d4d,6e09ad1c156f10246ccd0f2de5b11a9635e28818,antirez,antirez@gmail.com,Thu Feb 16 12:20:56 2012 +0100,1329391256,Return ASAP from checkClientOutputBufferLimits() if c->reply_bytes is zero.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1361.0,102.0,8.777372685185185,4508.0,1.1139293084464603,1329.0,None,False,,
6e09ad1c156f10246ccd0f2de5b11a9635e28818,a400a9b2d753fcfc90aa234019ab7afd21966509,antirez,antirez@gmail.com,Thu Feb 16 16:09:08 2012 +0100,1329404948,Now HINCRBY can detect overflows too. Fix for issue #330.,6.0,1.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,732.0,20.0,43.639039351851864,4509.0,1.0229152615376618,1330.0,Corrective,True,True,"[""7c96b467c1f882874f80403101ec96ddaf624f1a""]"
a400a9b2d753fcfc90aa234019ab7afd21966509,d347348109c955ebf287aafea5d7b65cd4ec9014,antirez,antirez@gmail.com,Thu Feb 16 16:13:40 2012 +0100,1329405220,Issue #330 regression test.,8.0,0.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,390.0,13.0,44.374652777777776,4510.0,1.022535387600842,222.0,Preventative,False,,
d347348109c955ebf287aafea5d7b65cd4ec9014,cb598cdd59f48ffa1cb2f3d82d95b8b9eaee7195,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Jan 13 17:49:16 2012 -0800,1326505756,"Don't expire keys when loading an RDB after a SYNCThe cron is responsible for expiring keys. When keys are expired atnload time, it is possible that the snapshot of a master node getsnmodified. This can in turn lead to inconsistencies in the data set.nnA more concrete example of this behavior follows. A user reported anslave that would show an monotonically increase input buffer length,nshortly after completing a SYNC. Also, `INFO` output showed a singlenblocked client, which could only be the master link. Investigationnshowed that indeed the `BRPOP` command was fed by the master. Thisncommand can only end up in the stream of write operations when it didnNOT block, and effectively executed `RPOP`. However, when the keyninvolved in the `BRPOP` is expired BEFORE the command is executed, thenclient executing it will block. The client in this case, is the masternlink.n",6.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1109.0,62.0,-11.817465277777774,927.0,0.9153794848138496,409.0,None,False,,
cb598cdd59f48ffa1cb2f3d82d95b8b9eaee7195,b66e5add82bf6785421111f505f41ed8bf09a6f7,antirez,antirez@gmail.com,Sun Feb 19 20:26:36 2012 +0100,1329679596,The hiredis lib shipped with Redis was updated to latest version.,1262.0,735.0,"deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/COPYING,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/TODO,CAS_DELIMITER,deps/hiredis/adapters/ae.h,CAS_DELIMITER,deps/hiredis/adapters/libev.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/example-ae.c,CAS_DELIMITER,deps/hiredis/example-libev.c,CAS_DELIMITER,deps/hiredis/example-libevent.c,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/util.h,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",22.0,2.0,3.0,3.0636259318206265,7.0,247.63636363636363,97.0,326.4014546506733,4521.5,0.954955947868996,1331.0,Preventative,False,True,"[""3a82b8ac641120c231f4f7e8a2edc0bd1c40a399""]"
b66e5add82bf6785421111f505f41ed8bf09a6f7,8e65b6a33d01f48f469735798806877e3168cb2c,antirez,antirez@gmail.com,Sun Feb 19 20:33:59 2012 +0100,1329680039,Applied a few modifications to hiredis to tune it for speed (redis-benchmark) and ability to read more deeply nested replies (redis-cli).,6.0,4.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,7.0,816.0,17.0,0.005127314814814815,4533.5,147.27539503386004,224.0,None,False,,
8e65b6a33d01f48f469735798806877e3168cb2c,ad0df18fdc965183533515aae5e4e01009616c86,antirez,antirez@gmail.com,Sun Feb 19 20:49:20 2012 +0100,1329680960,Fix 32bit build of hiredis,2.0,2.0,"deps/hiredis/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,158.0,6.0,0.015787037037037037,4535.0,64.34310850439883,225.0,Corrective,True,,
ad0df18fdc965183533515aae5e4e01009616c86,fe7be460257627848987d7bf6d80ce8540b01628,antirez,antirez@gmail.com,Tue Feb 21 10:06:04 2012 +0100,1329815164,bzero -> memset,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2148.0,72.0,36.01875,4536.0,1.0277633177164671,1332.0,None,False,,
fe7be460257627848987d7bf6d80ce8540b01628,7c96b467c1f882874f80403101ec96ddaf624f1a,antirez,antirez@gmail.com,Tue Feb 21 18:25:49 2012 +0100,1329845149,Fixed undefined behavior in *INCR style functions overflow detection. Sorry clang!,6.0,4.0,"src/t_hash.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,600.5,55.0,52.21780671296296,4537.5,1.1029246262701082,1334.0,Corrective,True,,
7c96b467c1f882874f80403101ec96ddaf624f1a,57be47758e3203fe5e01c15895c4351206415024,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Feb 21 10:05:46 2012 -0800,1329847546,Also force SIGSEGV without HAVE_BACKTRACE,2.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,655.0,38.0,12.861655092592592,928.0,1.0777504911149367,410.0,None,False,,
57be47758e3203fe5e01c15895c4351206415024,ca2344f9916f048667304bfa1e476fc52d1bc15d,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Feb 21 10:11:20 2012 -0800,1329847880,Solaris has backtrace(3),1.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,99.0,10.0,246.35822916666663,929.0,1.004059129680314,411.0,None,False,,
7c96b467c1f882874f80403101ec96ddaf624f1a ca2344f9916f048667304bfa1e476fc52d1bc15d,30c06ae6b43a5909d842011cc6dd1443d056c684,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 21 10:29:55 2012 -0800,1329848995,Merge pull request #347 from pietern/unstable-segvForce SIGSEGV without HAVE_BACKTRACE (unstable),,,,,,,,,,,,,,,Merge,False,,
7c96b467c1f882874f80403101ec96ddaf624f1a,feb282883b171c7bba13551f82c7049d36d81ead,antirez,antirez@gmail.com,Wed Feb 22 09:52:10 2012 +0100,1329900730,zzlIsInRange() now is capable of handling empty sorted sets that may end inside the data set when loading very old RDB files produced by early-stage versions of Redis.,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2148.0,73.0,0.9903472222222224,4539.0,2.0097468620713834,1335.0,None,False,,
feb282883b171c7bba13551f82c7049d36d81ead 30c06ae6b43a5909d842011cc6dd1443d056c684,467d703eadd1578f93544bb5a7b6e40685a3b8ac,antirez,antirez@gmail.com,Wed Feb 22 09:52:29 2012 +0100,1329900749,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
467d703eadd1578f93544bb5a7b6e40685a3b8ac,fcdeb98568708b8d9ef1415aaeef75ee5fe488f2,antirez,antirez@gmail.com,Wed Feb 22 11:25:30 2012 +0100,1329906330,even less false positive on obuf-limits test.,1.0,1.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,73.0,4.0,22.595370370370368,4540.0,1.044256853665533,223.0,Preventative,False,,
fcdeb98568708b8d9ef1415aaeef75ee5fe488f2,4eb3b3e970506152b0977c2c73c0aad5b97148f6,antirez,antirez@gmail.com,Wed Feb 22 15:16:11 2012 +0100,1329920171,Redis-cli should accept help command even if there is no connection to the server.,5.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,924.0,57.0,70.95396990740741,4541.0,1.0140936441090609,1336.0,None,False,True,"[""d3d1fa9437314082b3e18dedd48c768e097a9d61""]"
4eb3b3e970506152b0977c2c73c0aad5b97148f6,a5bd08487ff22156cbaae9286ab8820172b35df7,antirez,antirez@gmail.com,Wed Feb 22 16:07:06 2012 +0100,1329923226,"Fix for issue #306, thanks to tchajed (on github) for the pull request. The original patch was reworked a bit.",13.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,925.0,58.0,0.0353587962962963,4542.0,29.281505728314237,1337.0,Corrective,True,,
a5bd08487ff22156cbaae9286ab8820172b35df7 bad2b8e6ec81235fae085da1c8394c8ece1ad0ea,dbb27a0a90ca3800f5be1d8170e404b9e7b9bc44,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 22 08:19:54 2012 -0800,1329927594,Merge pull request #304 from bradvoth/unstableSimple install script changes,,,,,,,,,,,,,,,Merge,False,,
dbb27a0a90ca3800f5be1d8170e404b9e7b9bc44,92e984dbcdea9c60b0e615c882e9796ab0cd9390,antirez,antirez@gmail.com,Wed Feb 22 17:22:40 2012 +0100,1329927760,"The universe is 80 columns wide, accept it.",17.0,23.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,183.0,8.0,35.050671296296294,4543.0,1.0285301240466018,24.0,None,False,,
92e984dbcdea9c60b0e615c882e9796ab0cd9390,62c394e2195187a271ce9be81e913b37ee281c47,antirez,antirez@gmail.com,Wed Feb 22 17:44:18 2012 +0100,1329929058,unstable version called 2.9.4,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,13.0,46.20104166666667,4544.0,1.0216445336279394,1338.0,None,False,,
62c394e2195187a271ce9be81e913b37ee281c47,b9474282f82f84baee730271bd86109ed1c95fe6,antirez,antirez@gmail.com,Thu Feb 23 15:02:43 2012 +0100,1330005763,redis-benchmark: Initial support for pipelining.,34.0,14.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,656.0,29.0,3.7750810185185184,4545.0,1.2648949771129514,1339.0,None,False,,
b9474282f82f84baee730271bd86109ed1c95fe6,f6da155bde4c187325deee8b40fe41d45f40468d,antirez,antirez@gmail.com,Thu Feb 23 15:39:26 2012 +0100,1330007966,redis-benchmark: a few fixes to pipelining implementation.,4.0,6.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,676.0,30.0,0.025497685185185186,4546.0,40.219246482069906,1340.0,None,False,,
f6da155bde4c187325deee8b40fe41d45f40468d,63505e0b59f5584f87ebe2f0d711c6d405b85b4b,antirez,antirez@gmail.com,Fri Feb 24 15:45:16 2012 +0100,1330094716,Lua_cmsgpack added to Redis scripting.,3.0,1.0,"deps/lua/src/Makefile,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,2.0,2.0,1.0,9.0,508.5,46.0,10.73605324074074,4547.5,1.069858073836103,1341.0,Feature Addition,False,,
63505e0b59f5584f87ebe2f0d711c6d405b85b4b,36e6637dfd766eaa6b73438e2363f40c23cdadaa,antirez,antirez@gmail.com,Fri Feb 24 15:46:25 2012 +0100,1330094785,lua_cmsgpack.c added,729.0,0.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,4549.0,0.0,227.0,Feature Addition,False,True,"[""9bb91d198cd6130efbdde7406b3f603cc5d0c648"", ""606437108570db1b74850a0ba2ea1e722055083c"", ""66e2bdf21021a787e959c943ba453e56f9787093""]"
36e6637dfd766eaa6b73438e2363f40c23cdadaa,59132e42125c43299c428e86f9107493e173883e,Premysl Hruby,dfenze@gmail.com,Sun Feb 26 10:01:27 2012 +0100,1330246887,fix redis-benchmark memory leak,2.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,674.0,31.0,2.7652893518518518,0.0,0.0,0.0,Corrective,True,,
59132e42125c43299c428e86f9107493e173883e,80ff1fc6d0e3da53ae7bea0354216a38f7303971,Premysl Hruby,dfenze@gmail.com,Sun Feb 26 09:59:32 2012 +0100,1330246772,use gcc sync builtins for memory counter when possible,42.0,9.0,"src/config.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.6722948170756379,7.0,193.0,24.0,11.743796296296294,1.5,1.1295878261598502,2.0,None,False,True,"[""1d6628c0887c49a053f8a3fd407c2b53e8984b23"", ""705874e31db0196d8e1b23a28e8265dbdd2dc136""]"
80ff1fc6d0e3da53ae7bea0354216a38f7303971,1d6628c0887c49a053f8a3fd407c2b53e8984b23,Jakub Wieczorek,fawek@fawek.net,Sun Feb 26 15:10:42 2012 +0100,1330265442,"Fix the build on Mac OS X, where features.h is non-existent",4.0,5.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,108.0,12.0,0.21608796296296293,1.0,5.627745045527584,1.0,Corrective,True,,
80ff1fc6d0e3da53ae7bea0354216a38f7303971 1d6628c0887c49a053f8a3fd407c2b53e8984b23,64ef44d56835d068592e10eb588a8daad2168a08,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 26 07:18:43 2012 -0800,1330269523,"Merge pull request #362 from fawek/mac-build-fixFix the build on Mac OS X, where features.h is non-existent",,,,,,,,,,,,,,,Merge,False,,
64ef44d56835d068592e10eb588a8daad2168a08,ad08d059d01ecae5e8c0eae3f31a202896bec4dc,antirez,antirez@gmail.com,Tue Feb 28 16:17:00 2012 +0100,1330442220,Added command propagation API.,40.0,7.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4889085914405152,7.0,1642.0,435.0,21.321863425925926,4550.5,1.0359131838968896,1343.0,Feature Addition,False,True,"[""a1b1c1ea3adb864c8c2e3feb4eaed890a9b505cf"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""514a23472262de499005a31b1af3cca08a1c84ba""]"
ad08d059d01ecae5e8c0eae3f31a202896bec4dc,edba65d09084dfaa6f44a6f182c6d519e249a0c4,antirez,antirez@gmail.com,Tue Feb 28 16:17:55 2012 +0100,1330442275,Var renamed into pushGenericCommand() to better reflect what it means.,3.0,3.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1011.0,39.0,28.237534722222215,4552.0,1.0354138564091089,1344.0,Perfective,False,,
edba65d09084dfaa6f44a6f182c6d519e249a0c4,d8b1228bf6cbe2969a93b5f48b8cffba2d9772ae,antirez,antirez@gmail.com,Tue Feb 28 16:20:41 2012 +0100,1330442441,propagate() prototype added to redis.h,1.0,0.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1154.0,213.0,0.0025578703703703705,4553.0,391.95022624434387,1345.0,Feature Addition,False,,
d8b1228bf6cbe2969a93b5f48b8cffba2d9772ae,eeb34eff52eb77ff387ea7b316b157aa4337bb7f,antirez,antirez@gmail.com,Tue Feb 28 18:03:08 2012 +0100,1330448588,"Added a new API to replicate an additional command after the replication of the currently executed command, in order to propagte the LPUSH originating from RPOPLPUSH and indirectly by BRPOPLPUSH.",71.0,22.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.4262004765680891,7.0,1443.0,478.0,0.07263888888888889,4555.0,9.353488290391164,1348.0,Feature Addition,False,,
eeb34eff52eb77ff387ea7b316b157aa4337bb7f,78d6a22dc3e570417a8b8774307059b8d5ad476b,antirez,antirez@gmail.com,Wed Feb 29 00:46:50 2012 +0100,1330472810,"Better system for additional commands replication.The new code uses a more generic data structure to describe redis operations.nThe new design allows for multiple alsoPropagate() calls within the scope of ansingle command, that is useful in different contexts. For instance therenwhen there are multiple clients doing BRPOPLPUSH against the same list,nand a variadic LPUSH is performed against this list, the blocked clientsnwill both be served, and we should correctly replicate multiple LPUSHncommands after the replication of the current command.n",69.0,23.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8991045208483789,7.0,1679.0,440.0,0.28034722222222225,4557.5,3.6752539014119385,1350.0,Feature Addition,False,,
78d6a22dc3e570417a8b8774307059b8d5ad476b,b67feecacd94165a76da6af3a8c4e735f01729b0,antirez,antirez@gmail.com,Wed Feb 29 00:54:52 2012 +0100,1330473292,Version bumped to 2.9.5,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,14.0,6.2990046296296285,4559.0,1.1587552413116418,1351.0,None,False,,
b67feecacd94165a76da6af3a8c4e735f01729b0,cd8bdea31bdd682c811276a56515b65268f42958,antirez,antirez@gmail.com,Wed Feb 29 13:38:30 2012 +0100,1330519110,lpush arguments vector rewrite modified for more speed and to memory leak removal.,2.0,2.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1020.0,41.0,0.8162268518518518,4560.0,2.2251495987067864,1352.0,None,False,,
cd8bdea31bdd682c811276a56515b65268f42958,c1db214eeb2b7385c32889e17748429fcbe5cbae,antirez,antirez@gmail.com,Wed Feb 29 14:41:57 2012 +0100,1330522917,Better implementation for BRPOP/BLPOP in the non blocking case.,18.0,30.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,0.4971501836369671,7.0,1474.666666666667,484.0,0.40131558641975307,4562.0,2.1390221593769843,1355.0,Perfective,False,True,"[""f892797e1b459ad568df32d891b368302c40b3c9""]"
c1db214eeb2b7385c32889e17748429fcbe5cbae,a950a84303038d3365442a48cc2c06f4b5d3f65e,antirez,antirez@gmail.com,Wed Feb 29 16:33:54 2012 +0100,1330529634,Ping the slave using the standard protocol instead of the inline one.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,612.0,29.0,44.21287037037037,4564.0,1.0226178484143422,1356.0,None,False,,
a950a84303038d3365442a48cc2c06f4b5d3f65e,b8283ab2189cf1fcaed8c435f779fa9914210297,antirez,antirez@gmail.com,Wed Feb 29 17:10:21 2012 +0100,1330531821,Initial implementation of redis-cli --slave support.,55.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,932.0,59.0,7.043923611111111,4565.0,1.1419663322899465,1357.0,Feature Addition,False,True,"[""1920cab3bc6b003367634d5583cd2e389d52fe4a"", ""59046a7373215cd535cba7b7864ded34301c2357""]"
b8283ab2189cf1fcaed8c435f779fa9914210297,60893c6cc6b08504d06aaa2e4eee5df29a479da1,antirez,antirez@gmail.com,Wed Feb 29 17:43:03 2012 +0100,1330533783,"redis-cli: CSV output added, used for the --slave mode.",58.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,987.0,60.0,0.02270833333333333,4566.0,45.03669724770642,1358.0,None,False,,
60893c6cc6b08504d06aaa2e4eee5df29a479da1,9494f1f15b128ef8407d118c240d3793aff0ed82,antirez,antirez@gmail.com,Wed Mar 7 10:38:01 2012 +0100,1331113081,TIME command.,14.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,7.0,1703.0,444.0,6.830601851851853,4567.5,1.1097999878000009,1360.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
9494f1f15b128ef8407d118c240d3793aff0ed82,7b845b62285230d9015f80a6c2ea7ecb0b25df6e,antirez,antirez@gmail.com,Wed Mar 7 11:30:30 2012 +0100,1331116230,anetPeerToString() automatically populates ip/port with something that may be provided to the user as output in case of errors.,7.0,6.0,"src/anet.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.9957274520849256,7.0,860.5,111.0,84.31903356481482,4569.5,1.0063280130052192,1362.0,None,False,True,"[""2ea41242f669c1afe03af7c8befb140a7a80fc4e""]"
7b845b62285230d9015f80a6c2ea7ecb0b25df6e,e31b615e6201fccda3f2e036c449646e3cfbac25,antirez,antirez@gmail.com,Wed Mar 7 12:12:15 2012 +0100,1331118735,"Better MONITOR output, now includes client ip:port or the lua string if the command was executed by the scripting engine.",11.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.061278124459133,7.0,1343.6666666666667,476.0,2.3163927469135803,4572.0,8.688575721107473,1365.0,Perfective,False,True,"[""2ea41242f669c1afe03af7c8befb140a7a80fc4e""]"
e31b615e6201fccda3f2e036c449646e3cfbac25,c25e7eafef350a985ae236987131c5d56b30cfef,antirez,antirez@gmail.com,Wed Mar 7 13:05:46 2012 +0100,1331121946,"Refuse writes if can't persist on disk.Redis now refuses accepting write queries if RDB persistence isnconfigured, but RDB snapshots can't be generated for some reason.nThe status of the latest background save operation is now exposednin the INFO output as well. This fixes issue #90.n",22.0,4.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.4452458201097458,7.0,1510.666666666667,511.0,17.834151234567898,4575.0,1.0187037297327517,1368.0,Corrective,True,True,"[""4d3bbf3590af7b575dd90512aa12706cea7ed899"", ""f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""79a0ef62db890c007166a2c09d11691923236716""]"
c25e7eafef350a985ae236987131c5d56b30cfef,4d3bbf3590af7b575dd90512aa12706cea7ed899,antirez,antirez@gmail.com,Wed Mar 7 18:02:26 2012 +0100,1331139746,"By default Redis refuses writes with an error if the latest BGSAVE failed (and at least one save point is configured). However people having good monitoring systems may prefer a server that continues to work, since they are notified that there are problems by their monitoring systems. This commit implements the ability to turn the feature on or off via redis.conf and CONFIG SET.",34.0,1.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.600255350734365,7.0,1197.75,586.0,18.11353009259259,4578.5,1.0190804564491112,1371.0,Corrective,True,,
4d3bbf3590af7b575dd90512aa12706cea7ed899,44f508f1a81941f298bdb0f2f87c4469094beeb6,antirez,antirez@gmail.com,Thu Mar 8 10:08:44 2012 +0100,1331197724,clusterGetRandomName() generalized into getRandomHexChars() so that we can use it for the run_id field as well.,52.0,15.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER",3.0,1.0,1.0,1.0387296749834596,7.0,1134.3333333333333,291.0,36.26381944444445,4582.0,1.0185506884409599,1374.0,None,False,True,"[""7dd4432798ddf48a02f1ce1296aa142cf57e3703""]"
44f508f1a81941f298bdb0f2f87c4469094beeb6,91d664d6ce3d85a5b282a3945153d78e2474640f,antirez,antirez@gmail.com,Thu Mar 8 10:13:12 2012 +0100,1331197992,"run_id added to INFO output.The Run ID is a field that identifies a single execution of the Redisnserver. It can be useful for many purposes as it makes easy to detect ifnthe instance we are talking about is the same, or if it is a differentnone or was rebooted. An application of run_id will be in the partialnsynchronization of replication, where a slave may request a partial syncnfrom a given offset only if it is talking with the same master. Anothernapplication is in failover and monitoring scripts.n",5.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,7.0,1720.0,453.0,0.3386226851851852,4584.5,2.4799666871353407,1376.0,Corrective,True,,
91d664d6ce3d85a5b282a3945153d78e2474640f,0823e48fb9a7a43af3d108223a9c8952ac9dfc7a,antirez,antirez@gmail.com,Thu Mar 8 12:14:23 2012 +0100,1331205263,Support for all the redis.conf fields in CONFIG GET. config.c refactored a bit.,108.0,111.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,873.0,53.0,0.7582986111111111,4586.0,2.318741700627318,1377.0,None,False,True,"[""79a13b46fbad91418a223ee1a2846dad8bd9117e""]"
0823e48fb9a7a43af3d108223a9c8952ac9dfc7a,250e7f690825f506306e3c091ba4465c206726bd,antirez,antirez@gmail.com,Thu Mar 8 16:15:37 2012 +0100,1331219737,Instantaneous ops/sec figure in INFO output.,40.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6690158350565576,7.0,1722.5,455.0,0.25167824074074074,4587.5,3.979995401241665,1379.0,None,False,True,"[""94343492361a04301a48fc56490d6113ff97aba9""]"
250e7f690825f506306e3c091ba4465c206726bd d3ea4c86a8c8efb2ab922db89af915833e437e7e,8562798308391d489016b3995d438b6187b5980a,antirez,antirez@gmail.com,Fri Mar 9 22:07:45 2012 +0100,1331327265,Merge conflicts resolved.,,,,,,,,,,,,,,,Merge,False,,
8562798308391d489016b3995d438b6187b5980a,addc032756e338731c528d5868cf73b71ea2598e,antirez,antirez@gmail.com,Sat Mar 10 10:36:51 2012 +0100,1331372211,Added a top-function comment to rioWriteHashIteratorCursor() to better specify what the function does. Not immediately clear from the name.,6.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,996.0,75.0,45.79416666666667,4589.0,1.02183684239259,1380.0,Feature Addition,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
addc032756e338731c528d5868cf73b71ea2598e,d22248ae99543e74a93c88b9311f23a56231c83c,antirez,antirez@gmail.com,Sat Mar 10 10:38:53 2012 +0100,1331372333,Removed handling of deprecated hash-max-zipmap-entries nad hash-map-zipmap-value. Pieter is too good with users ;). Better to have them switch to a saner configuration ASAP after the 2.6 upgrade.,6.0,8.0,"00-RELEASENOTES,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,2.0,2.0,0.9852281360342516,7.0,474.5,65.0,16.873177083333335,4590.5,1.030533421918635,1381.0,Perfective,False,,
d22248ae99543e74a93c88b9311f23a56231c83c,c0caa1cf542d452fdc1eb74a7e5511c683ec5d5d,antirez,antirez@gmail.com,Sat Mar 10 11:09:43 2012 +0100,1331374183,Minor code aesthetic change to use Redis code base style rule of saving vertical space when possible.,1.0,4.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,738.0,22.0,17.697152777777774,4592.0,1.0565062647396983,1382.0,None,False,,
c0caa1cf542d452fdc1eb74a7e5511c683ec5d5d,753bb3dcbda2fbb91539057e300b999bc750c9e0,antirez,antirez@gmail.com,Sat Mar 10 11:11:28 2012 +0100,1331374288,More vertical space saved.,4.0,21.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,735.0,23.0,0.0012152777777777778,4593.0,823.8571428571429,1383.0,None,False,,
753bb3dcbda2fbb91539057e300b999bc750c9e0,87faf90696d549e69a8864026dfe6fc435eeec0d,antirez,antirez@gmail.com,Sat Mar 10 12:14:17 2012 +0100,1331378057,hash-max-zipmap-... renamed hash-max-ziplist-... in defalt conf for tests.,2.0,2.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,344.0,6.0,259.0362731481481,4594.0,1.0038604632001793,224.0,Preventative,False,,
87faf90696d549e69a8864026dfe6fc435eeec0d,c7d7d0a80ff90f2daac71df648dbce09c34d4ef2,antirez,antirez@gmail.com,Sat Mar 10 12:35:15 2012 +0100,1331379315,"RDB version is no 4, because small hashes are now encoded as ziplists, so older versions of Redis will not understand this format.",2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1117.0,64.0,2.97880787037037,4595.0,1.3357047663082966,1384.0,None,False,,
c7d7d0a80ff90f2daac71df648dbce09c34d4ef2,f12d0224f34e1aa680aeebf581dc4d90a4d7d47e,antirez,antirez@gmail.com,Sat Mar 10 12:38:42 2012 +0100,1331379522,RDB4 support in redis-check-dump.,3.0,1.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,691.0,7.0,144.0140740740741,4596.0,1.0069437657842084,1385.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
f12d0224f34e1aa680aeebf581dc4d90a4d7d47e,64b4c33c0b144a8a3d3600dd056f4c6bfd379098,antirez,antirez@gmail.com,Sat Mar 10 12:40:03 2012 +0100,1331379603,Build dependencies updated.,34.0,27.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,268.0,65.0,24.850497685185186,4597.0,1.0402406427697486,1386.0,None,False,,
64b4c33c0b144a8a3d3600dd056f4c6bfd379098,96e9f8d5e3dc862e4590375de5ca9770e151ea84,quiver,george@alpamayo.(none),Sat Mar 10 21:06:08 2012 +0900,1331381168,fix typo of redis.conf,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,514.0,85.0,2.794236111111111,0.0,0.0,0.0,Corrective,True,,
64b4c33c0b144a8a3d3600dd056f4c6bfd379098 96e9f8d5e3dc862e4590375de5ca9770e151ea84,79642420b0bc343f29738340d2da5444e5d2d241,Salvatore Sanfilippo,antirez@gmail.com,Sat Mar 10 04:22:29 2012 -0800,1331382149,Merge pull request #378 from quiver/unstablefix typo of redis.conf,,,,,,,,,,,,,,,Merge,False,,
79642420b0bc343f29738340d2da5444e5d2d241,c3c856228da2f0d73c608f38395991eecf735606,antirez,antirez@gmail.com,Tue Mar 13 09:49:11 2012 +0100,1331628551,RDB hashes loading fixed removing the assertion that failed every time an HT-encoded hash was loaded.,4.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1117.0,65.0,2.8846759259259267,4598.0,1.346659391099199,1387.0,Corrective,True,,
c3c856228da2f0d73c608f38395991eecf735606,c3e7441dadf1d287c76c1c0a3cab68f15a875dbd,antirez,antirez@gmail.com,Tue Mar 13 10:59:29 2012 +0100,1331632769,"RDB hashes loading, fixed another bug in the loading of HT-encoded hashes: when the hash entry is too big for ziplist, add the field, then convert. The code used to break before the new entry was inserted, resulting into missing fields in the loaded Hash object.",4.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1119.0,66.0,0.048819444444444436,4599.0,21.483641536273108,1388.0,Corrective,True,True,"[""58e34e6cb1499a00b9dfa51307e4188f8107fbe3""]"
c3e7441dadf1d287c76c1c0a3cab68f15a875dbd,573373802ef8699503a90d5559c54d9e03ff2244,antirez,antirez@gmail.com,Tue Mar 13 12:59:27 2012 +0100,1331639967,c->bufpos initialization moved for aesthetics.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1357.0,104.0,6.061770833333332,4600.0,1.1649682951557747,1389.0,Feature Addition,False,,
573373802ef8699503a90d5559c54d9e03ff2244,e74dca73d9818b42e7ee34c0a686133813e8d3a3,antirez,antirez@gmail.com,Tue Mar 13 13:05:08 2012 +0100,1331640308,Client creation time in redisClient structure. New age field in CLIENT LIST output.,4.0,2.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,7.0,1276.5,329.0,2.435833333333333,4601.5,127.78885128864712,1391.0,Feature Addition,False,,
e74dca73d9818b42e7ee34c0a686133813e8d3a3,bbaeda402cac1b66b52a869bfc419001d79ffcc0,antirez,antirez@gmail.com,Tue Mar 13 13:26:33 2012 +0100,1331641593,Added a qbuf-free field to CLIENT LIST output.,2.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1358.0,106.0,0.014872685185185185,4603.0,68.23735408560312,1392.0,Feature Addition,False,,
bbaeda402cac1b66b52a869bfc419001d79ffcc0,d19015be12c98f329cdaab039b843c3bf8931916,antirez,antirez@gmail.com,Tue Mar 13 18:05:11 2012 +0100,1331658311,Process async client checks like client timeouts and BLPOP timeouts incrementally using a circular list.,63.0,31.0,"src/adlist.c,CAS_DELIMITER,src/adlist.h,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.5149428923238275,7.0,1016.25,344.0,22.47340856481481,4605.5,1.014591296526354,1396.0,None,False,True,"[""94343492361a04301a48fc56490d6113ff97aba9"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""58713c6b13ebe736ad33ff48fba13a1db5d58e68""]"
d19015be12c98f329cdaab039b843c3bf8931916,6df450b77c34729aa7a1138051bbaf0acd48563c,antirez,antirez@gmail.com,Tue Mar 13 18:06:29 2012 +0100,1331658389,CLIENT LIST test modified to reflect the new output.,1.0,1.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,5.0,2.0,50.074074074074076,4608.0,1.0199704142011834,225.0,Feature Addition,False,,
6df450b77c34729aa7a1138051bbaf0acd48563c,529bde82ecf1e566f2db103e5c49402262d3638c,antirez,antirez@gmail.com,Wed Mar 14 09:56:22 2012 +0100,1331715382,Call all the helper functions needed by clientsCron() as clientsCronSomething() for clarity.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2332.0,234.0,0.6605439814814815,4609.0,2.513903733945436,1397.0,None,False,True,"[""c9d3dda29c9db6fca34599d0cf2c1243e73abfbd""]"
529bde82ecf1e566f2db103e5c49402262d3638c,9555f8f21b9f1780de307c19da268ef63f7c2ae9,antirez,antirez@gmail.com,Wed Mar 14 10:13:23 2012 +0100,1331716403,"sds.c new function sdsRemoveFreeSpace().The new function is used in order to resize the string allocation sonthat only the minimal allocation possible is used, removing all the freenspace at the end of the string normally used to improve efficiency ofnconcatenation operations.n",12.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,699.0,24.0,58.003356481481475,4610.0,1.0172403816030762,1398.0,Feature Addition,False,,
9555f8f21b9f1780de307c19da268ef63f7c2ae9,739803c06403481f32534a4ab5f5735fa1b52e6f,antirez,antirez@gmail.com,Wed Mar 14 14:58:26 2012 +0100,1331733506,sds.c: sdsAllocSize() function added.,8.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,7.0,404.5,38.0,29.20133680555556,4611.5,3.5344339058132044,1400.0,None,False,,
739803c06403481f32534a4ab5f5735fa1b52e6f,ae22bf1ef6dbfa07a485f61c119eb2e275a7916f,antirez,antirez@gmail.com,Wed Mar 14 15:32:30 2012 +0100,1331735550,Reclaim space from the client querybuf if needed.,33.0,3.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.6699250014423125,7.0,1465.5,644.0,1.608761574074074,4614.5,1.1942053733491034,1404.0,None,False,True,"[""c9d3dda29c9db6fca34599d0cf2c1243e73abfbd"", ""94343492361a04301a48fc56490d6113ff97aba9"", ""cec404f099e3a1a3ce6e94c01ce45d851bd3e843""]"
ae22bf1ef6dbfa07a485f61c119eb2e275a7916f,9448ddb0c63b8a00cd3cc9638a1bf5567e07bf78,huangz1990,huangz1990@gmail.com,Thu Mar 15 14:27:14 2012 +0800,1331792834,fix typo,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,766.0,15.0,53.24086805555554,0.0,0.0,0.0,Corrective,True,,
ae22bf1ef6dbfa07a485f61c119eb2e275a7916f,c9d3dda29c9db6fca34599d0cf2c1243e73abfbd,antirez,antirez@gmail.com,Thu Mar 15 20:51:35 2012 +0100,1331841095,Fix for issue #391.Use a simple protocol between clientsCron() and helper functions tonunderstand if the client is still valind and clientsCron() shouldncontinue processing or if the client was freed and we should continuenwith the next one.n,14.0,5.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,2358.0,236.0,1.2215856481481482,4617.0,1.8186081766071345,1405.0,Corrective,True,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
c9d3dda29c9db6fca34599d0cf2c1243e73abfbd,c5166e3fc5f906b501528d2ae9a986f854c0e497,antirez,antirez@gmail.com,Fri Mar 16 17:17:39 2012 +0100,1331914659,First implementation of --test-memory. Still a work in progress.,16.0,2.0,"src/Makefile,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,8.0,1321.0,303.0,3.5221064814814813,4618.5,1.1517194627466787,1407.0,Preventative,False,,
c5166e3fc5f906b501528d2ae9a986f854c0e497,54e0fa1c2703dda5147e80318adf6929af921eb7,antirez,antirez@gmail.com,Fri Mar 16 17:21:49 2012 +0100,1331914909,Hem... actual memtest.c file added.,91.0,0.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,4620.0,0.0,1408.0,Feature Addition,False,True,"[""a5801142a410b8e61867413c132f772484740a7e"", ""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
54e0fa1c2703dda5147e80318adf6929af921eb7,fb068dc91de40e308d78859c03db69a73e881f0e,antirez,antirez@gmail.com,Fri Mar 16 21:19:53 2012 +0100,1331929193,Memory test function now less boring thanks to screen-wide progress bar.,48.0,5.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,91.0,1.0,0.16532407407407407,4621.0,7.048725847101653,1409.0,Preventative,False,True,"[""93f61bb2a492cf008e353db951275ba0b12490dc""]"
fb068dc91de40e308d78859c03db69a73e881f0e,525be599a82fcdcb4231c9438106b31a0b01a2f5,antirez,antirez@gmail.com,Sun Mar 18 11:35:35 2012 +0100,1332066935,On crash suggest to give --test-memory a try.,3.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,655.0,39.0,25.687372685185185,4622.0,1.0389296333360218,1410.0,Preventative,False,True,"[""b187c591e39e072fa169bf60a1a46bebc855973b""]"
525be599a82fcdcb4231c9438106b31a0b01a2f5,1a197a3c1ae8c1014ca3f5ce0b0e436c550b52bb,antirez,antirez@gmail.com,Sun Mar 18 17:24:48 2012 +0100,1332087888,Number of iteration of --test-memory is now 300 (several minutes per gigabyte). Memtest86 and Memtester links are also displayed while running the test.,5.0,3.0,"src/memtest.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,8.0,1257.5,240.0,1.9208564814814808,4623.5,1.4023705721599804,1412.0,Preventative,False,,
1a197a3c1ae8c1014ca3f5ce0b0e436c550b52bb,a5801142a410b8e61867413c132f772484740a7e,antirez,antirez@gmail.com,Sun Mar 18 17:27:56 2012 +0100,1332088076,Fixed typo.,1.0,1.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,136.0,3.0,0.0021759259259259253,4625.0,460.5744680851063,1413.0,Corrective,True,,
a5801142a410b8e61867413c132f772484740a7e,d033ccb0afa4d9b32c20bce2dd073650d3439479,antirez,antirez@gmail.com,Sun Mar 18 18:03:27 2012 +0100,1332090207,More memory tests implemented. Default number of iterations lowered to a more acceptable value of 50.,67.0,10.0,"src/memtest.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.173781322679433,8.0,1258.5,243.0,0.025752314814814808,4626.5,30.980037857417788,1415.0,Preventative,False,True,"[""ffe003dcbe9e719659f9a9d690f5bc5fd7b0615e""]"
d033ccb0afa4d9b32c20bce2dd073650d3439479,d4a515c56d911517c7f44330723db9cc7b6f4c0f,antirez,antirez@gmail.com,Mon Mar 19 14:02:34 2012 +0100,1332162154,Memory addressing test implemented.,32.0,0.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,193.0,5.0,0.8327199074074074,4628.0,2.20088398404381,1416.0,Feature Addition,False,,
d4a515c56d911517c7f44330723db9cc7b6f4c0f,bb0aadbe215f878221693175492d1a0cae888abc,antirez,antirez@gmail.com,Mon Mar 19 19:16:41 2012 +0100,1332181001,Read-only flag removed from PUBLISH command.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,2381.0,240.0,1.0508564814814816,4629.0,1.9516047315901928,1417.0,None,False,,
bb0aadbe215f878221693175492d1a0cae888abc,0d44d507925a97e55ca2352544b1bf6a1b78fa81,antirez,antirez@gmail.com,Mon Mar 19 19:29:06 2012 +0100,1332181746,Suppress warnings compiling redis-cli with certain gcc versions.,7.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1035.0,61.0,19.073645833333334,4630.0,1.0524283615590884,1418.0,None,False,,
0d44d507925a97e55ca2352544b1bf6a1b78fa81,7a0c72f34550c3811324464661f1b463ccfd362b,antirez,antirez@gmail.com,Tue Mar 20 13:06:50 2012 +0100,1332245210,redis_init_script template updated.,153.0,41.0,"utils/redis.conf.tpl,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,402.0,3.0,167.8804976851852,4631.0,1.0059566180335922,25.0,None,False,,
7a0c72f34550c3811324464661f1b463ccfd362b,f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,antirez,antirez@gmail.com,Tue Mar 20 17:32:48 2012 +0100,1332261168,"Support for read-only slaves. Semantical fixes.This commit introduces support for read only slaves via redis.conf and CONFIG GET/SET commands. Also various semantical fixes are implemented here:nn1) MULTI/EXEC with only read commands now work where the server is into a state where writes (or commands increasing memory usage) are not allowed. Before this patch everything inside a transaction would fail in this conditions.nn2) Scripts just calling read-only commands will work against read onlynslaves, when the server is out of memory, or when persistence is into annerror condition. Before the patch EVAL always failed in this condition.n",85.0,17.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",6.0,2.0,2.0,2.2871124269940832,9.0,1010.8333333333336,661.0,16.600285493827162,4634.5,1.03331790674904,1423.0,Corrective,True,True,"[""f892797e1b459ad568df32d891b368302c40b3c9"", ""a1b1c1ea3adb864c8c2e3feb4eaed890a9b505cf"", ""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9""]"
f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,7dcdd281f529dea2389509f90b101c0471f7f2bd,antirez,antirez@gmail.com,Tue Mar 20 17:53:47 2012 +0100,1332262427,DEBUG should not be flagged as w otherwise we can not call DEBUG DIGEST and other commands against read only slaves.,2.0,2.0,"src/redis.c,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,9.0,1318.0,248.0,261.070931712963,4638.5,35.31390437732296,226.0,Corrective,True,True,"[""840ac20855855b134662683ca3e7d9e364d4bca8""]"
7dcdd281f529dea2389509f90b101c0471f7f2bd,b22eab8faff94b36ff1474c7e9567778f54e79d5,antirez,antirez@gmail.com,Wed Mar 21 12:11:07 2012 +0100,1332328267,Correctly create shared.oomerr as an sds string.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2395.0,243.0,0.7620370370370371,4640.0,2.312272174969624,1425.0,Feature Addition,False,,
b22eab8faff94b36ff1474c7e9567778f54e79d5,ba864e09d4e24c405ab44ac273381bfdbafff3fd,antirez,antirez@gmail.com,Wed Mar 21 12:26:05 2012 +0100,1332329165,Comments about security of slave-read-only in redis.coinf.,9.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,522.0,87.0,0.7870023148148149,4641.0,2.2706442931305792,1281.0,None,False,,
ba864e09d4e24c405ab44ac273381bfdbafff3fd,1f6146df0ce28667b90432ebf725d4a2b4fb0af7,antirez,antirez@gmail.com,Thu Mar 22 18:14:32 2012 +0100,1332436472,"Result of INCRBYFLOAT and HINCRBYFLOAT should never be in exponential form, and also should never contain trailing zeroes. This is not possible with vanilla printf() format specifiers, so we alter the output.",11.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,528.0,35.0,79.45858796296297,4642.0,1.0125851720454198,1426.0,None,False,,
1f6146df0ce28667b90432ebf725d4a2b4fb0af7,7b558b1d64a29fbb9fea321da75367c0fa38b61d,antirez,antirez@gmail.com,Thu Mar 22 18:16:41 2012 +0100,1332436601,Code style hack.,3.0,3.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,537.0,36.0,0.0014930555555555554,4643.0,670.767441860465,1427.0,None,False,,
7b558b1d64a29fbb9fea321da75367c0fa38b61d,6f0e77ca19278fd37d19c28156d8704754498680,antirez,antirez@gmail.com,Fri Mar 23 10:22:58 2012 +0100,1332494578,Replicate HINCRBYFLOAT as HSET.,14.0,11.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,718.0,24.0,12.966319444444444,4644.0,1.0771228878236885,1428.0,None,False,,
6f0e77ca19278fd37d19c28156d8704754498680,bd376d13f820b168954ac6683b5197a4ed72f03b,antirez,antirez@gmail.com,Fri Mar 23 12:42:20 2012 +0100,1332502940,Big endian fix. The bug was introduced because of a typo.,1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,1400.0,24.0,37.85456018518519,4645.0,1.0264168965405485,1429.0,Corrective,True,,
bd376d13f820b168954ac6683b5197a4ed72f03b,03116904c399cf21db3fe4228af3a795ce20fc46,antirez,antirez@gmail.com,Fri Mar 23 15:22:25 2012 +0100,1332512545,RDB load of different encodings test added.,26.0,0.0,"tests/assets/encodings.rdb,CAS_DELIMITER,tests/integration/rdb.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.2351933818192415,7.0,138.66666666666666,66.0,19.29429398148148,4647.0,0.3390920882905116,229.0,Feature Addition,False,True,"[""1d5949734337fb9873ca0a257c4163add43cb152""]"
03116904c399cf21db3fe4228af3a795ce20fc46,58e34e6cb1499a00b9dfa51307e4188f8107fbe3,antirez,antirez@gmail.com,Fri Mar 23 20:21:19 2012 +0100,1332530479,Fixed memory leak in hash loading.,4.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1119.0,67.0,10.390162037037038,4649.0,1.0962448897750945,1430.0,Corrective,True,,
58e34e6cb1499a00b9dfa51307e4188f8107fbe3,6c658d555487b024f7b9e3d873f0b1541e7197ee,antirez,antirez@gmail.com,Fri Mar 23 20:20:43 2012 +0100,1332530443,Contextualize comment.,1.0,1.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,25.0,1.0,0.2071527777777777,4650.0,5.8273550117331565,230.0,None,False,,
6c658d555487b024f7b9e3d873f0b1541e7197ee,c79373482fad7f6a3c558a133e56e5d614ab79f8,antirez,antirez@gmail.com,Sat Mar 24 11:42:20 2012 +0100,1332585740,convert-zipmap-hash-on-load test enabled,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,417.0,67.0,0.8471643518518519,4651.0,2.1804084978482137,231.0,Preventative,False,,
c79373482fad7f6a3c558a133e56e5d614ab79f8,1b247d133351c747a3c6cce8cac64e6830ccab92,antirez,antirez@gmail.com,Sat Mar 24 11:52:56 2012 +0100,1332586376,Add used allocator in redis-server -v output.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2395.0,244.0,2.987372685185185,4652.0,1.3347422987962452,1431.0,Feature Addition,False,,
64ef44d56835d068592e10eb588a8daad2168a08,74f10793c8b53fac97b44c3bf8d04cdf2d157bd7,antirez,antirez@gmail.com,Sat Mar 24 12:06:56 2012 +0100,1332587216,"When running the test in valgrind mode, pass the right flags to show memory leaks stack traces but only including the definitely lost items.",1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,298.0,28.0,107.76082175925926,4653.0,1.009279810451279,232.0,Preventative,False,,
74f10793c8b53fac97b44c3bf8d04cdf2d157bd7 1b247d133351c747a3c6cce8cac64e6830ccab92,0f9997845af236097c8802771cca3cff84c4e77b,antirez,antirez@gmail.com,Sat Mar 24 12:07:58 2012 +0100,1332587278,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
0f9997845af236097c8802771cca3cff84c4e77b,512f682340eb74aaedc525e834a943427999508c,antirez,antirez@gmail.com,Sun Mar 25 10:57:34 2012 +0200,1332665854,"convert-zipmap-hash-on-load false positive fixed.Apparently because the sample RDB file was not copied before every testnRedis had a chance to replace it with a newly written one, so that thennext test could fail.n",4.0,3.0,"tests/integration/convert-zipmap-hash-on-load.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,34.0,1.0,59.47996527777778,4654.0,1.016812383721643,233.0,Corrective,True,,
512f682340eb74aaedc525e834a943427999508c,c1d01b3c5796ee7e3f466e0db9f55d37e843cbb9,antirez,antirez@gmail.com,Sun Mar 25 11:27:35 2012 +0200,1332667655,"New INFO field aof_delayed_fsync introduced.This new field counts all the times Redis is configured with AOF enabled andnfsync policy 'everysec', but the previous fsync performed by thenbackground thread was not able to complete within two seconds, forcingnRedis to perform a write against the AOF file while the fsync is stillnin progress (likely a blocking operation).n",8.0,2.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.3567796494470397,9.0,1367.75,605.0,5.284600694444444,4656.5,1.0663491787274626,1435.0,Feature Addition,False,,
c1d01b3c5796ee7e3f466e0db9f55d37e843cbb9,ca09ad4d64adc0296f3268e4217f004dd7ada732,antirez,antirez@gmail.com,Sun Mar 25 11:43:19 2012 +0200,1332668599,CONFIG RESETSTAT resets two more fields.,2.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,874.0,57.0,0.010925925925925926,4659.0,92.52542372881358,1436.0,None,False,,
ca09ad4d64adc0296f3268e4217f004dd7ada732,a32387045058d16e346c48157d2b0bf5c3ce67f0,antirez,antirez@gmail.com,Tue Mar 27 10:33:45 2012 +0200,1332837225,SIGSEGV handler refactored so that we can reuse stack trace and current client logging functionalities in other contexts.,62.0,47.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,656.0,40.0,8.915393518518519,4660.0,1.1121655480403485,1437.0,None,False,True,"[""23c0cdd2ad8b15defab56eca89a42c67cadd9a34"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7""]"
a32387045058d16e346c48157d2b0bf5c3ce67f0,39bd025c295974986331ca4cd89ce18cfa50204a,antirez,antirez@gmail.com,Tue Mar 27 11:47:51 2012 +0200,1332841671,Redis software watchdog.,80.0,3.0,"src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.0888120005558886,9.0,1286.5,573.0,1.5206886574074074,4662.5,1.3490261330044686,1441.0,None,False,True,"[""23c0cdd2ad8b15defab56eca89a42c67cadd9a34"", ""7a0c5fdf12d9cd035e41734f518aa4568dc48c9d""]"
39bd025c295974986331ca4cd89ce18cfa50204a,a354da9acd8afbe4e600360ef6502c10dfed3ccb,antirez,antirez@gmail.com,Tue Mar 27 12:11:37 2012 +0200,1332843097,Correctly set the SIGARLM timer for the software watchdog.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,732.0,42.0,0.016504629629629633,4665.0,61.5890603085554,1442.0,None,False,,
a354da9acd8afbe4e600360ef6502c10dfed3ccb,aa96122d968308f77c4d26ba24c6ec9727b4e88b,antirez,antirez@gmail.com,Tue Mar 27 13:48:53 2012 +0200,1332848933,Mask SIGALRM everything but in the main thread.This is required to ensure that the signal will be delivered to the mainnthread when the watchdog timer expires.n,9.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,208.0,15.0,189.86280092592602,4666.0,1.0052669611694507,1443.0,None,False,,
aa96122d968308f77c4d26ba24c6ec9727b4e88b,23c0cdd2ad8b15defab56eca89a42c67cadd9a34,antirez,antirez@gmail.com,Tue Mar 27 15:24:33 2012 +0200,1332854673,Produce the watchlog warning log in a way that is safer from a signal handler. Fix a memory leak in the backtrace generation function.,36.0,10.0,"src/debug.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,0.5744395171582862,9.0,375.33333333333326,65.0,26.45761574074074,4668.0,3.5031001625328018,1446.0,Corrective,True,,
23c0cdd2ad8b15defab56eca89a42c67cadd9a34,d174eed5d7496b6af767f9c814d93832e9be0c3a,antirez,antirez@gmail.com,Tue Mar 27 16:54:53 2012 +0200,1332860093,define zlibc_free() in a way that is not shadowed by jemalloc.,9.0,4.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,315.0,15.0,0.06273148148148149,4670.0,16.940959409594093,1447.0,None,False,,
a32387045058d16e346c48157d2b0bf5c3ce67f0,024f213b12c62ac7421faad8f6dc855c3e0784c7,Premysl Hruby,dfenze@gmail.com,Tue Mar 27 17:19:54 2012 +0200,1332861594,fix time() instead of mstime() in expireIfNeeded,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,748.0,70.0,52.30644675925926,3.0,1.0191181022982216,3.0,Corrective,True,,
024f213b12c62ac7421faad8f6dc855c3e0784c7,d194905449d7de0a104e773f57eaae78bd09a4c6,Premysl Hruby,dfenze@gmail.com,Tue Mar 27 17:39:58 2012 +0200,1332862798,use server.unixtime instead of time(NULL) where possible (cluster.c not checked though),20.0,23.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,1.9535903992437764,9.0,1272.8,508.0,12.563569444444445,6.0,1.1232598655416637,8.0,None,False,True,"[""b237de33d1462e81ac30277033fe2bdffe994784"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509"", ""ee724cac491c6e6f4ee3c9b91be482f163e6d12c"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
d194905449d7de0a104e773f57eaae78bd09a4c6,8af9fe841cb05fb9589899c103fc66efbfbfcce5,Premysl Hruby,dfenze@gmail.com,Tue Mar 27 18:18:57 2012 +0200,1332865137,declare hashDictType as external too,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1205.0,229.0,0.2715972222222222,9.0,4.681922781897214,9.0,None,False,,
8af9fe841cb05fb9589899c103fc66efbfbfcce5,b57dbdbba35474f2fffe969b634788c4408c4542,Premysl Hruby,dfenze@gmail.com,Tue Mar 27 18:46:51 2012 +0200,1332866811,remove disk-store related comments,1.0,27.0,"src/db.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,7.0,642.5,108.0,2.5198321759259263,10.5,9.379834003055699,11.0,None,False,,
a32387045058d16e346c48157d2b0bf5c3ce67f0 b57dbdbba35474f2fffe969b634788c4408c4542,44f26aea0cf05635b3402b82e6d0b8ffd4fe1340,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 27 13:58:24 2012 -0700,1332881904,Merge pull request #407 from anydot/fixesFixes around time usage,,,,,,,,,,,,,,,Merge,False,,
44f26aea0cf05635b3402b82e6d0b8ffd4fe1340 9448ddb0c63b8a00cd3cc9638a1bf5567e07bf78,e4669c045d5bc0f7420814cb66f13f03ac29e29a,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 27 14:00:08 2012 -0700,1332882008,Merge pull request #389 from huangz1990/patch-1fix typo,,,,,,,,,,,,,,,Merge,False,,
e4669c045d5bc0f7420814cb66f13f03ac29e29a,0fefb5bbeb523bcf146dda4ba86872a527059918,antirez,antirez@gmail.com,Wed Mar 28 10:55:17 2012 +0200,1332924917,Redis test: regexp to check if valgrind reported errors modified. Now we no longer look at the total count because this includes possibly lost bytes that are not interesting for Redis (tons of false positives because of how sds.c works).,1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,298.0,29.0,3.9085763888888887,4671.0,1.2558476285234572,234.0,Preventative,False,,
0fefb5bbeb523bcf146dda4ba86872a527059918 d174eed5d7496b6af767f9c814d93832e9be0c3a,1043c8064bce1ffaaa89c9358889bf0ea0b33f51,antirez,antirez@gmail.com,Wed Mar 28 13:16:19 2012 +0200,1332933379,Merge branch 'watchdog' into unstable,,,,,,,,,,,,,,,Merge,False,,
1043c8064bce1ffaaa89c9358889bf0ea0b33f51,a7d12cbaf1425bf86f18b7dfac99f7b1ee1500e2,antirez,antirez@gmail.com,Wed Mar 28 13:45:39 2012 +0200,1332935139,Log from signal handlers is now safer.,33.0,13.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.0494298516573752,9.0,1453.0,522.0,0.8596026234567901,4673.0,1.6756468778636922,1450.0,None,False,True,"[""5471b8babddbb99a50010593483f24187e51981a"", ""0b913c650dae1c744a378a8e153ce2fcb8fe7c6a""]"
a7d12cbaf1425bf86f18b7dfac99f7b1ee1500e2,5471b8babddbb99a50010593483f24187e51981a,antirez,antirez@gmail.com,Wed Mar 28 13:51:23 2012 +0200,1332935483,Fixes for redisLogFromHandler().,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2429.0,249.0,0.003981481481481482,4675.0,252.1627906976744,1451.0,Corrective,True,,
5471b8babddbb99a50010593483f24187e51981a,52ae8af807dd8c4f2c98db5198f9f45ebd946193,Nathan Fritz,fritzy@netflint.net,Wed Mar 28 11:10:24 2012 -0700,1332958224,added redis.sha1hex(string) as lua scripting function.(The original implementation was modified by @antirez to conform Redisncoding standards.)n,33.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,867.0,44.0,8.067777777777778,0.0,0.0,0.0,Feature Addition,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
52ae8af807dd8c4f2c98db5198f9f45ebd946193,6aa2f98938955788c3f56e1ce8fef691233bca35,antirez,antirez@gmail.com,Wed Mar 28 20:47:50 2012 +0200,1332960470,Test for redis.sha1hex().,5.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,241.0,9.0,56.08248842592592,4676.0,1.0178308778384684,235.0,Preventative,False,,
6aa2f98938955788c3f56e1ce8fef691233bca35,179e54d2a9c6545d6f102bf9a3f9506175639743,antirez,antirez@gmail.com,Thu Mar 29 09:24:02 2012 +0200,1333005842,Fix for slaves chains. Force resync of slaves (simply disconnecting them)  when SLAVEOF turns a master into a slave.,17.0,14.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.4096334439772111,9.0,1052.0,373.0,1.3765084876543212,4678.0,1.4167949097107393,1454.0,Corrective,True,True,"[""4cba71e89886b5e7810686b6a6b2e18ab13f1fa1""]"
179e54d2a9c6545d6f102bf9a3f9506175639743,4cba71e89886b5e7810686b6a6b2e18ab13f1fa1,antirez,antirez@gmail.com,Thu Mar 29 09:33:29 2012 +0200,1333006409,Fixed typo in comment: te -> the.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1333.0,111.0,0.0065625,4680.0,153.38095238095238,1455.0,Corrective,True,,
4cba71e89886b5e7810686b6a6b2e18ab13f1fa1,0cdecca1418b0329ede2c43151912d35ea790a51,antirez,antirez@gmail.com,Thu Mar 29 12:02:28 2012 +0200,1333015348,Protect globals access in Lua scripting.,44.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,895.0,45.0,0.6611574074074074,4681.0,2.5124991247111548,1456.0,None,False,True,"[""a63b9c24f03bffb741e819c1752c9cddc0cb7f36""]"
4cba71e89886b5e7810686b6a6b2e18ab13f1fa1,f2305046ef4695cfe60f35aa4a9e8df565fb1811,Xiaochen Wang,wangxiaochen0@gmail.com,Thu Mar 29 18:23:04 2012 +0800,1333016584,fix typos in tests/assets/default.conf,2.0,2.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,344.0,7.0,18.96443287037037,0.0,0.0,0.0,Corrective,True,,
4cba71e89886b5e7810686b6a6b2e18ab13f1fa1,22c9c4076baec3d14b16421ab3b7fe830479fbac,antirez,antirez@gmail.com,Fri Mar 30 10:26:07 2012 +0200,1333095967,Regression test for issue 417 (memory leak when replicating to DB with id >= 10),65.0,0.0,"tests/helpers/bg_complex_data.tcl,CAS_DELIMITER,tests/integration/replication-4.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.7303184889407479,7.0,139.33333333333334,68.0,1.9684683641975311,4683.0,0.3897787978030693,238.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
22c9c4076baec3d14b16421ab3b7fe830479fbac,f892797e1b459ad568df32d891b368302c40b3c9,Joseph Jang,josephjang@gmail.com,Fri Mar 30 02:06:53 2012 +0900,1333040813,Fixed a memory leak with replicationoccurs when two or more dbs are replicated and at least one of them is >db10n,14.0,28.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.5038892873131435,9.0,1418.333333333333,515.0,0.6762037037037038,1.0,1.03625565004724,2.0,Corrective,True,,
f892797e1b459ad568df32d891b368302c40b3c9,c2672a06cdf411d882c6d2a58a6c84fcbc57b4c7,antirez,antirez@gmail.com,Fri Mar 30 10:39:34 2012 +0200,1333096774,Purely aesthetic code change.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,610.0,34.0,0.6476967592592593,4685.0,2.5439323814799595,1457.0,None,False,,
c2672a06cdf411d882c6d2a58a6c84fcbc57b4c7,0a2ff52eaecb8040e105ee9fa87d82c0b0394e2e,Erik Dubbelboer,erik@dubbelboer.com,Fri Mar 30 21:19:51 2012 +0200,1333135191,Added consts keyword where possible,22.0,22.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,408.5,40.0,16.223206018518518,0.5,0.5154100243635339,1.0,Feature Addition,False,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d""]"
c2672a06cdf411d882c6d2a58a6c84fcbc57b4c7,04d360fdcd40d5a669d8cac7144009ce43925a4e,antirez,antirez@gmail.com,Sat Mar 31 11:21:45 2012 +0200,1333185705,Better syncio.c with millisecond resolution.,48.0,19.0,"src/redis.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",2.0,1.0,1.0,0.4349734800747426,9.0,654.0,237.0,161.81258680555555,4686.5,1.299698104381798,1459.0,Perfective,False,True,"[""292fec058a32323d5aa52dddfa86be280e29fe65""]"
04d360fdcd40d5a669d8cac7144009ce43925a4e,9157549fad46025548b6f500a0202d2720779524,antirez,antirez@gmail.com,Sat Mar 31 11:23:30 2012 +0200,1333185810,syncio.c calls in replication.c fixed for the new millisecond timeout API.,4.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,610.0,35.0,1.0305092592592593,4688.0,1.97039399793342,1460.0,Corrective,True,,
9157549fad46025548b6f500a0202d2720779524,609ea08445569e5d3e50d37c515d88e6a76c6974,antirez,antirez@gmail.com,Sat Mar 31 11:28:37 2012 +0200,1333186117,redis-trib: fix the MIGRATE call that now has milliseconds timeout (were seconds before).,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,492.0,28.0,142.34890046296297,4689.0,1.0070249927940973,1461.0,None,False,,
609ea08445569e5d3e50d37c515d88e6a76c6974,d0ace5a3149808d6d3f8fd5c626510756bba3cc7,antirez,antirez@gmail.com,Sat Mar 31 17:08:40 2012 +0200,1333206520,Write RDB magic using a REDIS_RDB_VERSION define that is defined inside rdb.h,7.0,1.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,7.0,603.0,74.0,48.09786458333333,4690.5,1.0690991857169894,1463.0,None,False,,
609ea08445569e5d3e50d37c515d88e6a76c6974,b0c6ee1d1d1c7890b36cf008cef9f3ff808b9361,ThePicard,superrikku@gmail.com,Sat Mar 31 23:39:58 2012 -0700,1333262398,Fixed a typo in install_server.sh,1.0,1.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,177.0,9.0,38.595347222222216,0.0,0.0,0.0,Corrective,True,True,"[""2209d077d397352a11480501a691bd991c05ff36""]"
609ea08445569e5d3e50d37c515d88e6a76c6974 b0c6ee1d1d1c7890b36cf008cef9f3ff808b9361,a7138a4cf8301c1eab82d5881aa831ed38d4028c,Salvatore Sanfilippo,antirez@gmail.com,Sun Apr 1 01:14:52 2012 -0700,1333268092,Merge pull request #425 from ThePicard/unstablechkconfig in install_server.sh doesn't work because of a typo,,,,,,,,,,,,,,,Merge,False,,
d0ace5a3149808d6d3f8fd5c626510756bba3cc7 a7138a4cf8301c1eab82d5881aa831ed38d4028c,2281f90c9b9d9274119493ca7b72daec8a509b95,antirez,antirez@gmail.com,Sun Apr 1 10:15:07 2012 +0200,1333268107,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
2281f90c9b9d9274119493ca7b72daec8a509b95,4de6c9a055c3d7e7964795f56cee27964738642d,antirez,antirez@gmail.com,Sun Apr 1 12:51:40 2012 +0200,1333277500,New DUMP format includes RDB version and truncated SHA1 checksum.,84.0,32.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1762.0,62.0,24.07148148148148,4692.0,1.0415429353930423,1464.0,Feature Addition,False,True,"[""58c8a071a51632c0e337f467e3ca7b2127e3fb43""]"
4de6c9a055c3d7e7964795f56cee27964738642d,bd0446593108865895474edd403783ec9eaf5a34,antirez,antirez@gmail.com,Mon Apr 2 10:46:24 2012 +0200,1333356384,DUMP / RESTORE: store RDB version in little endian.,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1814.0,63.0,0.9130092592592592,4693.0,2.095279144059632,1465.0,None,False,,
bd0446593108865895474edd403783ec9eaf5a34,a149ce6875091f4a6c9e49d73aeb836bbf207773,antirez,antirez@gmail.com,Mon Apr 2 10:52:39 2012 +0200,1333356759,Prettify source code of create/verify DUMP payload.,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1814.0,64.0,0.004340277777777778,4694.0,231.4,1466.0,Feature Addition,False,,
a149ce6875091f4a6c9e49d73aeb836bbf207773,70d848e1faff36e778f8e32c5a86628574c22b00,antirez,antirez@gmail.com,Mon Apr 2 11:14:47 2012 +0200,1333358087,"RESTORE ability to set a TTL fixed, bug introduced with millisecond expires.",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1822.0,65.0,0.015370370370370371,4695.0,66.06024096385542,1467.0,Corrective,True,,
70d848e1faff36e778f8e32c5a86628574c22b00,ab8232d0223a9983e5590998b6c44d9639dc8b56,antirez,antirez@gmail.com,Mon Apr 2 11:44:25 2012 +0200,1333359865,"DUMP, RESTORE, MIGRATE tests.",67.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.11190990870168403,7.0,209.5,69.0,1.5271875,4696.5,1.3273992224268467,240.0,Preventative,False,,
a7138a4cf8301c1eab82d5881aa831ed38d4028c,8918de9202669609442c40af7f7625b5685b8a7c,Premysl Hruby,dfenze@gmail.com,Mon Apr 2 11:56:03 2012 +0200,1333360563,remove mentions of VM in comments,1.0,13.0,"src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.7345299214394703,9.0,828.6666666666665,317.0,4.2208101851851865,13.0,1.125354171972481,14.0,None,False,,
ab8232d0223a9983e5590998b6c44d9639dc8b56,9510d65dc8b0cff77402bd97078636680fe50da0,antirez,antirez@gmail.com,Mon Apr 2 12:31:44 2012 +0200,1333362704,CRC64 implementation added to Redis code base.,194.0,1.0,"src/Makefile,CAS_DELIMITER,src/crc64.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.12880313355236964,9.0,493.66666666666674,302.0,5.594853395061729,4699.0,1.0596372908055596,1470.0,Feature Addition,False,,
9510d65dc8b0cff77402bd97078636680fe50da0,f8ea19e5392cf8582630fdfde5b6bc85c477d6ca,antirez,antirez@gmail.com,Mon Apr 2 13:10:39 2012 +0200,1333365039,DUMP/RESTORE now use CRC64 instead of truncated SHA1.,22.0,24.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1822.0,66.0,0.08046296296296296,4701.0,13.428078250863061,1471.0,None,False,True,"[""46738646d4ef6b6ea97cf933d232177a05722100""]"
f8ea19e5392cf8582630fdfde5b6bc85c477d6ca,31f2ecf436eca8eaf12445c6ed73b1eb49eccf6d,antirez,antirez@gmail.com,Mon Apr 2 16:38:24 2012 +0200,1333377504,MIGRATE now let the client distinguish I/O errors and timeouts from other erros.,3.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1820.0,67.0,0.14427083333333332,4702.0,7.931407942238268,1472.0,None,False,,
31f2ecf436eca8eaf12445c6ed73b1eb49eccf6d,06e178708e46181c30a8ff99107d506ab76185f3,antirez,antirez@gmail.com,Mon Apr 2 16:38:59 2012 +0200,1333377539,MIGRATE test modified because the implementation changed.,1.0,1.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,66.0,1.0,0.2045601851851852,4703.0,5.888536833767116,241.0,Preventative,False,,
06e178708e46181c30a8ff99107d506ab76185f3,e7957ca6286b2d541fe6d47c5b95ec0f2c34e091,antirez,antirez@gmail.com,Tue Apr 3 11:53:45 2012 +0200,1333446825,"When the user-provided 'maxclients' value is too big for the max number of files we can open, at least try to search the max the OS is allowing (in steps of 256 filedes).",12.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2424.0,251.0,4.699212962962963,4704.0,1.2128015920711703,1473.0,None,False,True,"[""e3436dd9b886da95b62c347b68be5366877f7b91""]"
e7957ca6286b2d541fe6d47c5b95ec0f2c34e091,84e5684bca4c737fac6ccc00fd1fa5737ded2cb7,antirez,antirez@gmail.com,Tue Apr 3 12:17:40 2012 +0200,1333448260,Two fixed for MIGRATE: fix TTL propagation and fix transferring of data bigger than 64k.,4.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1814.0,68.0,0.8189351851851852,4705.0,2.2210978574255185,1474.0,Corrective,True,True,"[""12e91892a0ec06c55534753b5e52bf5036450107""]"
84e5684bca4c737fac6ccc00fd1fa5737ded2cb7,7cc17ed8ff71590d5aa5765d306c0814002b6476,Premysl Hruby,dfenze@gmail.com,Tue Apr 3 13:32:49 2012 +0200,1333452769,new option for choosing number of test clients to run,4.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,420.0,70.0,1.0752777777777778,15.0,1.9299922500645827,0.0,Feature Addition,False,,
7cc17ed8ff71590d5aa5765d306c0814002b6476,9184f8fd006ab608b5e6f9b0fa45490d08ff443a,Premysl Hruby,dfenze@gmail.com,Tue Apr 3 14:18:35 2012 +0200,1333455515,"in kill_server send the signal once, then wait for up to 5sec before sending lethal SIGKILL",7.0,2.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,298.0,30.0,6.141180555555558,16.0,1.1628351407280089,1.0,None,False,,
84e5684bca4c737fac6ccc00fd1fa5737ded2cb7,12e91892a0ec06c55534753b5e52bf5036450107,antirez,antirez@gmail.com,Tue Apr 3 15:10:42 2012 +0200,1333458642,Another fix for MIGRATE.,7.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1815.0,69.0,0.12016203703703705,4706.0,9.322095935272587,1475.0,Corrective,True,,
12e91892a0ec06c55534753b5e52bf5036450107,15113dcd3dfb75aa8c046a7c6e8ba1755698c68c,antirez,antirez@gmail.com,Tue Apr 3 15:10:51 2012 +0200,1333458651,More MIGRATE tests.,46.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,66.0,2.0,0.9387962962962964,4707.0,2.0651938060952757,242.0,Preventative,False,True,"[""e0d94a7b017a6600332e94e95799d8af9bda1210""]"
15113dcd3dfb75aa8c046a7c6e8ba1755698c68c,1ad4d5080523b1cdd7ee86f416de6d4b9faa138c,antirez,antirez@gmail.com,Tue Apr 3 15:29:47 2012 +0200,1333459787,redis-cli help.h updated. Script to generate it updated as well.,236.0,149.0,"src/help.h,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER",2.0,2.0,2.0,0.1000009430103235,7.0,390.5,10.0,474.8681365740741,4708.5,1.0015793858173152,26.0,None,False,,
84e5684bca4c737fac6ccc00fd1fa5737ded2cb7,c575766202773c858be0870c20cd495b722927c3,Premysl Hruby,dfenze@gmail.com,Tue Apr 3 17:40:31 2012 +0200,1333467631,"allocate alternate signal stack, change of sigaction flags for sigterm",13.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2432.0,252.0,0.2408101851851852,17.0,5.152648274536191,15.0,None,False,,
1ad4d5080523b1cdd7ee86f416de6d4b9faa138c,9a322ab73093f15726348d08065b6a90c9894860,antirez,antirez@gmail.com,Wed Apr 4 15:11:17 2012 +0200,1333545077,Print milliseconds of the current second in log lines timestamps. Sometimes precise timing is very important for debugging.,6.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2444.0,253.0,0.8963657407407407,4710.0,2.115616042145496,1477.0,Corrective,True,,
9a322ab73093f15726348d08065b6a90c9894860,bb0fbc840d80d30a513cc85cf40848f1b006275c,antirez,antirez@gmail.com,Wed Apr 4 15:11:30 2012 +0200,1333545090,SLAVEOF is not a write command.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2448.0,254.0,0.00015046296296296297,4711.0,6647.153846153847,1478.0,None,False,,
bb0fbc840d80d30a513cc85cf40848f1b006275c,5ad1faa09038b861ac703fecbf731f0637dac715,antirez,antirez@gmail.com,Wed Apr 4 15:38:13 2012 +0200,1333546693,New os field in INFO output providing information about the operating system.,6.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2448.0,255.0,0.01855324074074074,4712.0,54.89893948845914,1479.0,Feature Addition,False,,
5ad1faa09038b861ac703fecbf731f0637dac715,4b8c966140df6df57c47b9a81f7d9f20f8aef34e,antirez,antirez@gmail.com,Wed Apr 4 18:31:37 2012 +0200,1333557097,Structure field controlling the INFO field master_link_down_since_seconds initialized correctly to avoid strange INFO output at startup when a slave has yet to connect to its master.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2454.0,256.0,0.12041666666666667,4713.0,9.304498269896193,1480.0,Feature Addition,False,,
4b8c966140df6df57c47b9a81f7d9f20f8aef34e,459e2975f40b9d4e0ddc488d45d39e0cdd334f5c,antirez,antirez@gmail.com,Wed Apr 4 19:54:23 2012 +0200,1333562063,"On slow computers, 10 seconds are not enough for this heavy replication test.",1.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,139.0,14.0,83.10395833333334,4714.0,1.0120331211660094,243.0,Preventative,False,,
459e2975f40b9d4e0ddc488d45d39e0cdd334f5c,ebba7b3c923793bb63f78aeb867005ebd49acd04,Premysl Hruby,dfenze@gmail.com,Thu Apr 5 08:25:22 2012 +0200,1333607122,future-proof version comparison,2.0,2.0,"src/zmalloc.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,84.0,9.0,8.708900462962964,18.0,1.1148250579109016,16.0,None,False,,
ebba7b3c923793bb63f78aeb867005ebd49acd04 c575766202773c858be0870c20cd495b722927c3,0d5f4ba7cde2efa859a5ea04d59079b5909d537a,Salvatore Sanfilippo,antirez@gmail.com,Thu Apr 5 01:52:40 2012 -0700,1333615960,"Merge pull request #431 from anydot/f-signalallocate alternate signal stack, change of sigaction flags for sigterm",,,,,,,,,,,,,,,Merge,False,,
0d5f4ba7cde2efa859a5ea04d59079b5909d537a 8918de9202669609442c40af7f7625b5685b8a7c,d84f776e873ea93f22dc230e2b10ee70a8a6cd2e,Salvatore Sanfilippo,antirez@gmail.com,Thu Apr 5 01:54:09 2012 -0700,1333616049,Merge pull request #426 from anydot/fix-rm-vm-commentsremove mentions of VM in comments,,,,,,,,,,,,,,,Merge,False,,
d84f776e873ea93f22dc230e2b10ee70a8a6cd2e 9184f8fd006ab608b5e6f9b0fa45490d08ff443a,0934a4df93e6e62e65094142cd01294d9de3087e,Salvatore Sanfilippo,antirez@gmail.com,Thu Apr 5 01:56:12 2012 -0700,1333616172,Merge pull request #430 from anydot/f-testsuiteTwo changes of testsuite (killing redis and new option),,,,,,,,,,,,,,,Merge,False,,
0934a4df93e6e62e65094142cd01294d9de3087e,c35b4e845b2d5d5e1a27ab3a374bb2a3d9ad3c35,Premysl Hruby,dfenze@gmail.com,Wed Apr 4 19:17:32 2012 +0200,1333559852,add support for generation of lcov coverage reports,8.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,275.0,68.0,2.281805555555556,19.0,1.438249436971209,17.0,Feature Addition,False,,
c35b4e845b2d5d5e1a27ab3a374bb2a3d9ad3c35,d48d1309c6712fef8894d4c5eced9bf9164b926a,Premysl Hruby,dfenze@gmail.com,Wed Mar 28 12:03:32 2012 +0200,1332929012,fix mstime() ommited while comparing if key is already expired,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,724.0,72.0,0.7199189814814815,20.0,2.3890451921994824,18.0,Corrective,True,,
d48d1309c6712fef8894d4c5eced9bf9164b926a,c6bf4a003453a273c9d95a1dddd9e0dba274811b,Premysl Hruby,dfenze@gmail.com,Wed Mar 28 11:48:36 2012 +0200,1332928116,"for (p)expireat use absolute time, without double recomputation",6.0,7.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,724.0,73.0,-0.01037037037037037,21.0,-95.42857142857143,19.0,None,False,,
c6bf4a003453a273c9d95a1dddd9e0dba274811b,70381bbf8257f209422faea4f34d1ead7213df21,antirez,antirez@gmail.com,Thu Apr 5 15:52:08 2012 +0200,1333633928,expireGenericCommand(): better variable names and a top-comment that describes the function's behavior.,14.0,7.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,723.0,74.0,8.16912037037037,4715.0,1.1224122004159751,1481.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
70381bbf8257f209422faea4f34d1ead7213df21,3e1e1ac27d650fce6cf69a50c1c2b811b03c7b33,jokea,tfengjun@gmail.com,Fri Jan 6 18:56:07 2012 +0800,1325847367,implement aeWait using poll(2). Fixes issue #267.,10.0,13.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,408.0,7.0,-33.436712962962964,0.0,0.0,0.0,Corrective,True,,
3e1e1ac27d650fce6cf69a50c1c2b811b03c7b33,321a724da54480dec86d263eec3028723e3b0ab9,antirez,antirez@gmail.com,Fri Apr 6 12:27:17 2012 +0200,1333708037,version bumped to 2.9.6,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,15.0,37.439178240740745,4716.0,1.0267099879588657,1482.0,None,False,,
321a724da54480dec86d263eec3028723e3b0ab9,618a922957803cb9f5fc944dd0630d7d61008d06,antirez,antirez@gmail.com,Fri Apr 6 21:12:50 2012 +0200,1333739570,New INFO field in persistence section: bgrewriteaof_scheduled.,4.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2454.0,257.0,2.1119560185185184,4717.0,1.4734947088062342,1483.0,Feature Addition,False,,
618a922957803cb9f5fc944dd0630d7d61008d06,ff79ab71dbb1443edd4273e3b1022b76ccbd3ab5,antirez,antirez@gmail.com,Fri Apr 6 23:52:28 2012 +0200,1333749148,redis.tcl: no longer leave unread replies if an error happens during a MULTI/EXEC block.,7.0,1.0,"tests/support/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,241.0,7.0,17.20741898148148,4718.0,1.0581144680138372,244.0,None,False,,
ff79ab71dbb1443edd4273e3b1022b76ccbd3ab5,0daf7a2d16256a72397d2acd87b25e4e1c76d7ec,antirez,antirez@gmail.com,Fri Apr 6 23:52:53 2012 +0200,1333749173,Two new tests for BGREWRTIEAOF.Check for scheduled rewrite if a BGSAVAE is in progress.nCheck for error if a rewrite is already in progress.n,26.0,0.0,"tests/unit/aofrw.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,107.0,2.0,94.65188657407408,4719.0,1.010565029775898,245.0,Feature Addition,False,,
0daf7a2d16256a72397d2acd87b25e4e1c76d7ec,f02aa7bb79ab571975d25e819dcb2a1c67b2c9c9,antirez,antirez@gmail.com,Sat Apr 7 02:03:29 2012 +0200,1333757009,Removed dead code: function rdbSaveTime() is no longer used since RDB now saves expires in milliseconds.,0.0,5.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1124.0,69.0,6.371400462962963,4720.0,1.1569513650590657,1484.0,None,False,,
f02aa7bb79ab571975d25e819dcb2a1c67b2c9c9,4cb8bb29525a012ef0f1ea1b237dab09c5e9b6c3,antirez,antirez@gmail.com,Sat Apr 7 02:10:48 2012 +0200,1333757448,Never used function stringObjectEqualsMs() removed.,0.0,8.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,730.0,75.0,1.4296296296296296,4721.0,1.699481865284974,1485.0,None,False,,
4cb8bb29525a012ef0f1ea1b237dab09c5e9b6c3,09f66a0be88b3dc846b763785dd258f72bf66d43,antirez,antirez@gmail.com,Sat Apr 7 11:14:52 2012 +0200,1333790092,"New client info field added to CLIENT LIST output: multi, containing the length of the current pipeline. Test modified accordingly.",3.0,2.0,"src/networking.c,CAS_DELIMITER,tests/unit/introspection.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9709505944546686,9.0,669.0,115.0,16.87144675925926,4722.5,1.0699422645227274,246.0,Feature Addition,False,True,"[""1971740f0c8c4bf9a484188f5966e8c2a9369490""]"
09f66a0be88b3dc846b763785dd258f72bf66d43,4ce22375f45e7e1a6f9c9548fe47613b61242e48,antirez,antirez@gmail.com,Sat Apr 7 11:26:24 2012 +0200,1333790784,Tests for MONITOR.,17.0,0.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,5.0,4.0,0.00800925925925926,4724.0,125.85549132947979,247.0,Preventative,False,True,"[""97a2248309937a2cecb8b800af40526e06fc64c4""]"
4ce22375f45e7e1a6f9c9548fe47613b61242e48,2cbdab903fc0a66f246647f4d79e92b3e1778b82,antirez,antirez@gmail.com,Sat Apr 7 12:11:23 2012 +0200,1333793483,For coverage testing use exit() instead of _exit() when termiating saving children.,17.0,4.0,"src/Makefile,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.7723388509380995,9.0,1213.4,712.0,3.901578703703704,4727.0,1.1272190891651197,1491.0,Preventative,False,,
2cbdab903fc0a66f246647f4d79e92b3e1778b82,69e7958918a7e7644654cc00d2846251b3f7b4d5,antirez,antirez@gmail.com,Sat Apr 7 13:22:04 2012 +0200,1333797724,Added new test to check that CONFIG appendonly no actually kills the background AOF operation in progress if any.,11.0,0.0,"tests/unit/aofrw.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,133.0,3.0,0.5619328703703703,4730.0,2.7795719964573338,248.0,Feature Addition,False,,
69e7958918a7e7644654cc00d2846251b3f7b4d5,65fd32ab0a7ff1d3d052e3b70dcceac6719de58c,Erik Dubbelboer,erik@dubbelboer.com,Sat Apr 7 14:40:29 2012 +0200,1333802429,Fixed some spelling errors in the comments,16.0,16.0,"src/dict.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",4.0,1.0,1.0,1.5306390622295662,9.0,703.75,115.0,56.778408564814825,3.5,1.023984981240568,5.0,Corrective,True,,
65fd32ab0a7ff1d3d052e3b70dcceac6719de58c,8d16e7a3c635fe89d9eec207ab630a028150bb7c,Erik Dubbelboer,erik@dubbelboer.com,Sat Apr 7 15:45:53 2012 +0300,1333802753,Update src/dict.c,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,766.0,17.0,0.00375,6.0,267.6666666666667,6.0,None,False,,
8d16e7a3c635fe89d9eec207ab630a028150bb7c,e1d9857b123d41a4c9d03cb8bc05ea62acc0b066,Erik Dubbelboer,erik@dubbelboer.com,Sat Apr 7 15:48:30 2012 +0300,1333802910,Update src/rdb.c,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1119.0,72.0,0.005567129629629629,7.0,180.62577962577961,7.0,None,False,,
69e7958918a7e7644654cc00d2846251b3f7b4d5,a3af8d8e49c9b65f67403ca53dd5b573fadc55b4,antirez,antirez@gmail.com,Sun Apr 8 11:16:40 2012 +0200,1333876600,Test for maxclients.,14.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/limits.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.3712323266408756,7.0,212.0,71.0,2.4527256944444447,4731.5,1.2038548383671794,250.0,Preventative,False,,
a3af8d8e49c9b65f67403ca53dd5b573fadc55b4,5a181d43cbf84f8d4b60bac26b62722e8886bbea,antirez,antirez@gmail.com,Mon Apr 9 11:11:00 2012 +0200,1333962660,rio.c file somewhat documented so that the casual reader can understand what's going on without reading the code.,18.0,0.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,107.0,4.0,169.00971064814811,4733.0,1.0059168197860644,1492.0,Non Functional,False,,
5a181d43cbf84f8d4b60bac26b62722e8886bbea,88c1d9550d198fd7df426b19ea67e9c51c92a811,antirez,antirez@gmail.com,Mon Apr 9 12:20:47 2012 +0200,1333966847,crc64.c modified for incremental computation.,3.0,4.0,"src/crc64.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,9.0,700.0,238.0,4.499461805555557,4734.5,1.1270684500744177,1494.0,None,False,,
88c1d9550d198fd7df426b19ea67e9c51c92a811,736b7c3f04ff34a2487559f01e06218ea8afb8be,antirez,antirez@gmail.com,Mon Apr 9 12:33:09 2012 +0200,1333967589,Add checksum computation to rio.c,43.0,4.0,"src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",3.0,1.0,1.0,1.1357742370456676,9.0,428.0,81.0,67.27298225308641,4737.0,1.3463406432556522,1497.0,Feature Addition,False,True,"[""8491f1d9fdae0966a74bca4e28b653b42c3fcb4a"", ""c44ab51da1b784e126658250b0b345ed8a9e57b4""]"
736b7c3f04ff34a2487559f01e06218ea8afb8be,46738646d4ef6b6ea97cf933d232177a05722100,antirez,antirez@gmail.com,Mon Apr 9 12:33:57 2012 +0200,1333967637,dump/restore fixed to use the new crc64 API.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1818.0,70.0,5.891145833333334,4739.0,1.1697462646980814,1498.0,Corrective,True,,
46738646d4ef6b6ea97cf933d232177a05722100,8491f1d9fdae0966a74bca4e28b653b42c3fcb4a,antirez,antirez@gmail.com,Mon Apr 9 12:36:44 2012 +0200,1333967804,Fixed compilation of new rio.c changes (typos and so forth.),8.0,6.0,"src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",3.0,1.0,1.0,1.5566567074628228,9.0,441.0,84.0,0.002488425925925926,4741.0,246.5813953488372,1501.0,Corrective,True,True,"[""2f62c9663ca48b647d71f21d0cdf499346457f0f""]"
8491f1d9fdae0966a74bca4e28b653b42c3fcb4a,82e32055d8282181ce88146d151db367162b8f3d,antirez,antirez@gmail.com,Mon Apr 9 22:40:41 2012 +0200,1334004041,RDB files now embed a crc64 checksum. Version of RDB bumped to 5.,25.0,2.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.3809465857053901,9.0,603.5,82.0,4.824988425925926,4743.5,2.243965263976037,1503.0,None,False,True,"[""5a86ab47995586f0a0ef18472eafd6e9131644c1"", ""cd87b3c71f79062d9e95abada186e1cac03f5cc6""]"
82e32055d8282181ce88146d151db367162b8f3d,84bcd3aa24eabed2a5295dc3450e6f45aa79049c,antirez,antirez@gmail.com,Tue Apr 10 15:47:10 2012 +0200,1334065630,It is now possible to enable/disable RDB checksum computation from redis.conf or via CONFIG SET/GET. Also CONFIG SET support added for rdbcompression as well.,36.0,5.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,1.803014373368416,9.0,1246.2,720.0,7.854034722222222,4747.0,1.0318448667663145,1507.0,Feature Addition,False,,
84bcd3aa24eabed2a5295dc3450e6f45aa79049c,08827157109fd7e65554e18d3ffbe8cc4f1f52af,antirez,antirez@gmail.com,Tue Apr 10 16:34:33 2012 +0200,1334068473,Version 2.9.7.,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,16.0,4.171712962962963,4750.0,1.2397096849371316,1508.0,None,False,,
08827157109fd7e65554e18d3ffbe8cc4f1f52af,a3fb7fd4f6004883e5a234c512a368c524ac24fc,antirez,antirez@gmail.com,Tue Apr 10 16:46:29 2012 +0200,1334069189,Minor MIGRATE implementation simplification about ttl handling.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1818.0,71.0,1.1753703703703704,4751.0,1.8507956514888924,1509.0,None,False,,
a3fb7fd4f6004883e5a234c512a368c524ac24fc,0b913c650dae1c744a378a8e153ce2fcb8fe7c6a,antirez,antirez@gmail.com,Tue Apr 10 16:48:28 2012 +0200,1334069308,"Check write(2) return value to avoid warnings, because in this context failing write is not critical.",8.0,7.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2469.0,260.0,0.04256944444444445,4752.0,24.491027732463287,1510.0,Corrective,True,,
0b913c650dae1c744a378a8e153ce2fcb8fe7c6a,f2f2ba1b3ab5147684143ebfb2981c14c9a0bd27,antirez,antirez@gmail.com,Wed Apr 11 10:56:55 2012 +0200,1334134615,Comment typo fixed. Clusetr -> Cluster.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2470.0,261.0,0.7558680555555556,4753.0,2.3229822224263863,1511.0,Corrective,True,,
f2f2ba1b3ab5147684143ebfb2981c14c9a0bd27,3f7438ef9b969aa4bb90445b51fd93652a377ea0,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 24 19:33:08 2012 -0700,1332642788,Everything x86 is little endian,5.0,4.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,107.0,13.0,27.515578703703703,930.0,1.036343048088078,412.0,None,False,,
3f7438ef9b969aa4bb90445b51fd93652a377ea0,0a08d2b0e5d2e8a0cbaf7bbf712799ae2778a57a,Pieter Noordhuis,pcnoordhuis@gmail.com,Sat Mar 24 19:25:03 2012 -0700,1332642303,"Clean up MakefilesRemove unused variables. Instead of overriding non-standard variablesnsuch as ARCH and PROF, use standard variables CFLAGS and LDFLAGS tonoverride Makefile settings. Move dependencies generated by `make dep` tona separate file.n",253.0,206.0,"deps/Makefile,CAS_DELIMITER,deps/linenoise/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/Makefile.dep,CAS_DELIMITER",4.0,2.0,3.0,1.5171343054923714,9.0,87.5,73.0,154.88009548611112,932.5,1.003121665030118,414.0,Perfective,False,,
0a08d2b0e5d2e8a0cbaf7bbf712799ae2778a57a,d98b03b791154e92238a91f72d83fe0b01495b08,antirez,antirez@gmail.com,Wed Apr 11 11:32:22 2012 +0200,1334136742,Macros ULONG_ONEZERO / ULONG_ZEROONE were inverted in #ifdef to test 32/64 bit arch.,3.0,3.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,225.0,6.0,22.854027777777766,4754.0,1.0437559632692996,1512.0,Preventative,False,,
d98b03b791154e92238a91f72d83fe0b01495b08,c44ab51da1b784e126658250b0b345ed8a9e57b4,antirez,antirez@gmail.com,Wed Apr 11 11:58:32 2012 +0200,1334138312,Make inline functions rioRead/Write/Tell static. This fixes issue #447.,3.0,3.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,69.0,5.0,1.9734722222222223,4755.0,1.5067210922654657,1513.0,Corrective,True,,
c44ab51da1b784e126658250b0b345ed8a9e57b4,a470689d2e07a696624e9668a360eab4d41fa392,antirez,antirez@gmail.com,Wed Apr 11 12:12:05 2012 +0200,1334139125,make dep: redirect output to Makefile.dep.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,215.0,71.0,17.324328703703706,4756.0,1.0577222943008588,1514.0,None,False,,
a470689d2e07a696624e9668a360eab4d41fa392,ced068955d96ff8e1d6caa6c70eaaec16aa0c301,antirez,antirez@gmail.com,Wed Apr 11 12:12:30 2012 +0200,1334139150,Makefile.dep updated.,72.0,51.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,83.0,1.0,17.324618055555558,4757.0,1.0577213302361563,1515.0,None,False,,
69e7958918a7e7644654cc00d2846251b3f7b4d5,815c06f2f727e8a66372ad71e050165c429d4eac,Erik Dubbelboer,erik@dubbelboer.com,Wed Apr 11 17:04:31 2012 +0200,1334156671,added explanation for the magic 511 backlog number,5.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,365.0,9.0,35.19028935185185,8.0,1.0284169303071495,8.0,Feature Addition,False,,
ced068955d96ff8e1d6caa6c70eaaec16aa0c301 815c06f2f727e8a66372ad71e050165c429d4eac,0d83011a11b42fe1b0d1bebb7b9a3318fd44f0e5,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 11 09:25:44 2012 -0700,1334161544,Merge pull request #449 from ErikDubbelboer/unstableadded explanation for the magic 511 backlog number,,,,,,,,,,,,,,,Merge,False,,
0d83011a11b42fe1b0d1bebb7b9a3318fd44f0e5,9c83aec95567d36b32144b8a7234fbc9fa39238b,antirez,antirez@gmail.com,Thu Apr 12 11:09:38 2012 +0200,1334221778,Makefile now introduces Redis-specific CFLAGS / LDFLAGS. Gcov target fixed. Added comments to describe how it works.,65.0,64.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,215.0,72.0,0.9566319444444444,4758.0,2.0453341076548943,1516.0,Corrective,True,,
9c83aec95567d36b32144b8a7234fbc9fa39238b,91e56965a3c5658d54dd6f4bf87c8932d03e1f99,antirez,antirez@gmail.com,Thu Apr 12 11:51:58 2012 +0200,1334224318,Make gcov fixed.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,73.0,0.02939814814814815,4759.0,35.01574803149606,1517.0,Corrective,True,,
91e56965a3c5658d54dd6f4bf87c8932d03e1f99,4c442e9d88c493a16f4f1197413b063c7205d812,antirez,antirez@gmail.com,Thu Apr 12 11:49:52 2012 +0200,1334224192,memtest.c: integer overflow fixed.,1.0,1.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,225.0,7.0,1.0121527777777777,4760.0,1.9879931389365355,1518.0,Preventative,False,,
4c442e9d88c493a16f4f1197413b063c7205d812,6e05f333a29e379264a6a8949fc2f44d555d632e,antirez,antirez@gmail.com,Thu Apr 12 11:50:18 2012 +0200,1334224218,Print arch bits with redis-server -v,6.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2470.0,262.0,1.037071759259259,4761.0,1.9642534290146527,1519.0,None,False,True,"[""2f62c9663ca48b647d71f21d0cdf499346457f0f""]"
0cdecca1418b0329ede2c43151912d35ea790a51,37b29ef2fa2ce3e6bafcf1d8979504532ed8cc31,antirez,antirez@gmail.com,Fri Apr 13 11:16:50 2012 +0200,1334308610,Scripting: globals protection can now be switched on/off.,83.0,34.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,2.0,2.0,1.3458094634192883,9.0,1211.8,697.0,4.876375,4764.0,1.1664212772964655,1523.0,None,False,True,"[""ffd6637e90d816b7a17a96f144f75153c952d8cf""]"
37b29ef2fa2ce3e6bafcf1d8979504532ed8cc31,2fd7c9efdedd81cfa2909ebbcdb30eb9b58d7094,antirez,antirez@gmail.com,Fri Apr 13 11:48:45 2012 +0200,1334310525,Tests for lua globals protection.,37.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,246.0,10.0,15.625636574074075,4767.0,1.063997392698816,251.0,Preventative,False,,
2fd7c9efdedd81cfa2909ebbcdb30eb9b58d7094,c9edd1b28ae429e6c34462917fcb5c9d616e0ef8,antirez,antirez@gmail.com,Fri Apr 13 12:13:02 2012 +0200,1334311982,Globals protection global() function modified for speed and correctness.,6.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,952.0,47.0,0.03902777777777778,4768.0,26.62277580071175,1524.0,None,False,,
c9edd1b28ae429e6c34462917fcb5c9d616e0ef8,6663653f515285aebe772663a24c381929c3e512,antirez,antirez@gmail.com,Fri Apr 13 13:26:59 2012 +0200,1334316419,"Stop access to global vars. Not configurable.After considering the interaction between ability to delcare globals innscripts using the 'global' function, and the complexities related tonhanlding replication and AOF in a sane way with globals AND ability tonturn protection On and Off, we reconsidered the design. The new designnmakes clear that there is only one good way to write Redis scripts, thatnis not using globals. In the rare cases state must be retained acrossncalls a Redis key can be used.n",4.0,57.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,2.0,2.0,1.8497288214659169,9.0,1222.4,703.0,0.08257638888888888,4771.0,6.094465275619661,1528.0,Feature Addition,False,,
6663653f515285aebe772663a24c381929c3e512,d86c4a7bf0989f2466c3742a09a9c72633b5f0ba,antirez,antirez@gmail.com,Fri Apr 13 13:36:08 2012 +0200,1334316968,"mt.declared is no longer needed.Lua global protection can now be simpified becuase we no longer have thenglobal() function. It's useless to occupy memory with this table, it isnalso not faster because the metamethods we use are only called when anglobal object does not exist or we are trying to create it from anscript.n",2.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,939.0,49.0,0.006354166666666667,4774.0,158.37704918032787,1529.0,Feature Addition,False,True,"[""ffd6637e90d816b7a17a96f144f75153c952d8cf""]"
d86c4a7bf0989f2466c3742a09a9c72633b5f0ba,3cd4ad267c9aa2a94b9f901acd1e29b6653d981d,antirez,antirez@gmail.com,Fri Apr 13 13:40:57 2012 +0200,1334317257,Tests modified to match the new global protection implementation.,3.0,30.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,283.0,11.0,0.07791666666666666,4775.0,13.834224598930485,252.0,Feature Addition,False,,
3cd4ad267c9aa2a94b9f901acd1e29b6653d981d,3a0214041542433895004f2fe97b08a3c4e9cb61,antirez,antirez@gmail.com,Fri Apr 13 14:54:49 2012 +0200,1334321689,Use Lua tostring() before concatenation.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,937.0,50.0,0.054641203703703706,4776.0,19.301207371319638,1530.0,None,False,True,"[""2f3f3fd5e0cb19ea2df5712198dc40f093bd1255""]"
3a0214041542433895004f2fe97b08a3c4e9cb61,6f659f34cf8aa22eb9977a2d38f7a6bd396c4b42,antirez,antirez@gmail.com,Fri Apr 13 15:12:16 2012 +0200,1334322736,EVAL errors are more clear now.,3.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,937.0,51.0,0.012118055555555556,4777.0,83.5214899713467,1531.0,None,False,,
6f659f34cf8aa22eb9977a2d38f7a6bd396c4b42,13a21caae348060f93a04df3603b69d4ba125056,antirez,antirez@gmail.com,Fri Apr 13 15:23:32 2012 +0200,1334323412,New test for scripting engine: DECR_IF_GT.,22.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,256.0,12.0,0.07123842592592593,4778.0,15.03736799350122,253.0,Feature Addition,False,,
6e05f333a29e379264a6a8949fc2f44d555d632e,c18405c909024899935028ca97cc13dbf5ff5fbe,antirez,antirez@gmail.com,Fri Apr 13 16:13:56 2012 +0200,1334326436,A few var names fixed in Makefile.I modified it for error in a previous commit doing search & replace.n,7.0,7.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,74.0,1.1819212962962964,4779.0,1.8460800250690377,1532.0,Corrective,True,,
c18405c909024899935028ca97cc13dbf5ff5fbe 13a21caae348060f93a04df3603b69d4ba125056,93a74949d7bb5d0c4115d1bf45f856c368badf31,antirez,antirez@gmail.com,Fri Apr 13 16:16:13 2012 +0200,1334326573,Merge branch 'strict.lua' into unstable,,,,,,,,,,,,,,,Merge,False,,
93a74949d7bb5d0c4115d1bf45f856c368badf31,631539a5f2a304796a54d79cc38e71625f9f9ffa,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:34:31 2012 -0700,1334363671,"Rename ADD_*FLAGS -> REDIS_*FLAGS, REDIS_*FLAGS -> FINAL_*FLAGSThis reflects that REDIS_*FLAGS will only be used for compilation ofnRedis and not for its dependencies. Similarly, that FINAL_*FLAGS arencomposed of other variables and holds the options that are finallynpassed to the compiler and linker.n",30.0,30.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,75.0,0.43096064814814816,935.0,3.320397475493486,415.0,Feature Addition,False,,
631539a5f2a304796a54d79cc38e71625f9f9ffa,0342dd76476176bcbea1b49c20e49e40adbbe4a2,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:38:12 2012 -0700,1334363892,The lcov target shouldn't cleanThis is not needed because every change in compiler/linker flagsntriggers a cleanup.n,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,76.0,0.0025578703703703705,936.0,391.95022624434387,416.0,Perfective,False,,
0342dd76476176bcbea1b49c20e49e40adbbe4a2,166cf8a3b84c76e0870261dc9b29848ce7fc63aa,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:38:29 2012 -0700,1334363909,Ignore gcov/lcov artifacts,5.0,0.0,"src/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,937.0,0.0,417.0,None,False,,
166cf8a3b84c76e0870261dc9b29848ce7fc63aa,c04278ba3b3cccf1df4d9fc7346c190fc8d0b14a,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:41:40 2012 -0700,1334364100,Question mark assignment is not needed,2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,77.0,0.002407407407407408,938.0,416.3846153846154,418.0,None,False,,
c04278ba3b3cccf1df4d9fc7346c190fc8d0b14a,caba58512127599d49153c1dc100dac7574cda46,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:43:06 2012 -0700,1334364186,"First set defaults, then do composition",16.0,15.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,216.0,78.0,0.0009953703703703704,939.0,1005.6511627906976,419.0,None,False,,
caba58512127599d49153c1dc100dac7574cda46,620357fc8f36c704db0084ecad84f68cec9f170b,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:44:34 2012 -0700,1334364274,Remove unused LIBS variable,2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,217.0,79.0,0.0010185185185185184,940.0,982.8181818181821,420.0,None,False,,
620357fc8f36c704db0084ecad84f68cec9f170b,34c943b39592fb0f811d20d2458b256f52547de2,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:46:28 2012 -0700,1334364388,Don't set flags recursively,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,217.0,80.0,0.0013194444444444445,941.0,758.8947368421052,421.0,None,False,,
34c943b39592fb0f811d20d2458b256f52547de2,7e7b69fee1c87b4802394a8637bb1dc0b474614c,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri Apr 13 17:50:38 2012 -0700,1334364638,Persist `make` settings and trigger rebuild if anything changes,23.0,18.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,217.0,81.0,0.0028935185185185184,942.0,346.6,422.0,None,False,,
93a74949d7bb5d0c4115d1bf45f856c368badf31,0705ff3f04379c4e9f95999f3eefe0282aeb87a5,antirez,antirez@gmail.com,Tue Apr 17 10:04:42 2012 +0200,1334649882,"Less false positives in maxclients test, hopefully.",2.0,1.0,"tests/unit/limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,13.0,1.0,8.950023148148148,4780.0,1.1117315545945723,254.0,Preventative,False,,
0705ff3f04379c4e9f95999f3eefe0282aeb87a5,3c25c4a691aec646cfdc3f840f356ef3bb5840c0,antirez,antirez@gmail.com,Tue Apr 17 13:05:09 2012 +0200,1334660709,"lookupKeyByPattern() used by SORT GET/BY rewritten. Fixes issue #460.lookupKeyByPattern() was implemented with a trick to speedup the lookupnprocess allocating two fake Redis obejcts on the stack. However now thatnwe propagate expires to the slave as DEL operations the lookup of thenkey may result into a call to expireIfNeeded() having the stacknallocated object as argument, that may in turn use it to create thenprotocol to send to the slave. But since this fake obejcts areninherently read-only this is a problem.nnAs a side effect of this fix there are no longer size limits in thenpattern to be used with GET/BY option of SORT.nnSee https://github.com/antirez/redis/issues/460 for bug details.n",42.0,32.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,418.0,19.0,75.79125,4781.0,1.0131941352069005,1533.0,Corrective,True,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
3c25c4a691aec646cfdc3f840f356ef3bb5840c0,6a3f0ac68a0d649b85575dd61ef4bd26efb3ac81,antirez,antirez@gmail.com,Tue Apr 17 16:28:50 2012 +0200,1334672930,Added test for SORT corner case: pattern ending with just ->.,7.0,0.0,"tests/unit/sort.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,245.0,18.0,75.91043981481482,4782.0,1.0131734186027577,255.0,Feature Addition,False,,
6a3f0ac68a0d649b85575dd61ef4bd26efb3ac81,875944a23f37916a419bcf4b69e3b255ef093cde,Michael Schlenker,MichaelSchlenker@gmx.net,Tue Apr 17 22:20:54 2012 +0200,1334694054,"Replace unnecessary calls to echo and catTcl's exec can send data to stdout itself, no need to call cat/echo fornthat usually.n",5.0,5.0,"tests/integration/aof.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.3709505944546687,7.0,196.66666666666663,47.0,51.3457214506173,1.0,0.6711508918479461,2.0,None,False,True,"[""8444b46d20ef9c8de3f7e255e4f3bfa44f509c77"", ""95883313b5a405916fabed34c3af290d6072c817""]"
6a3f0ac68a0d649b85575dd61ef4bd26efb3ac81,a5f8341245aeebd22a2474e92c4ed497eae01545,antirez,antirez@gmail.com,Wed Apr 18 11:31:24 2012 +0200,1334741484,"Two small fixes to maxclients handling.1) Don't accept maxclients set to < 0n2) Allow maxclients < 1024, it is useful for testing.n",3.0,1.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,9.0,1686.0,327.0,4.919733796296296,4783.5,1.1524472727700472,1535.0,Corrective,True,,
a5f8341245aeebd22a2474e92c4ed497eae01545,8ec9b03c6b6bf266c2d16afc0d968181c7baea85,antirez,antirez@gmail.com,Wed Apr 18 11:34:18 2012 +0200,1334741658,More robust maxclients test.,3.0,1.0,"tests/unit/limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,14.0,2.0,1.0622222222222222,4785.0,1.94142259414226,256.0,Preventative,False,,
8ec9b03c6b6bf266c2d16afc0d968181c7baea85,acf41c96cbeb9fcbaefc321b65a6a7c3053be75e,antirez,antirez@gmail.com,Wed Apr 18 11:37:14 2012 +0200,1334741834,"Marginally cleaner lookupKeyByPattern() implementation.just fieldobj itself as sentinel of the fact a field object is used ornnot, instead of using the filed length, that may be confusing both fornpeople and for the compiler emitting a warning.n",3.0,3.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,428.0,20.0,0.9389467592592592,4786.0,2.0650231124807394,1536.0,Perfective,False,,
acf41c96cbeb9fcbaefc321b65a6a7c3053be75e 7e7b69fee1c87b4802394a8637bb1dc0b474614c,d162f9eb64f9f9dbb121929f5f88cdde4b76e816,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 18 07:25:59 2012 -0700,1334759159,Merge pull request #456 from pietern/unstable-mkoptsPersist Makefile flags (unstable),,,,,,,,,,,,,,,Merge,False,,
d162f9eb64f9f9dbb121929f5f88cdde4b76e816,94e5c1d7e5928b53df545a62f91d033754408b43,antirez,antirez@gmail.com,Wed Apr 18 17:17:53 2012 +0200,1334762273,Test LINDEX out of range index.,3.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,745.0,30.0,219.2667129629629,4787.0,1.004560655771626,257.0,Preventative,False,,
94e5c1d7e5928b53df545a62f91d033754408b43,7aa0dfd014b76b368d7b96017c3b11f76401a341,antirez,antirez@gmail.com,Wed Apr 18 17:22:14 2012 +0200,1334762534,Test LINSERT syntax error.,5.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,748.0,31.0,0.003020833333333333,4788.0,332.0344827586207,258.0,Preventative,False,,
7aa0dfd014b76b368d7b96017c3b11f76401a341,79daddd5ba62dc6d1b5e5ca05c73a9f8fb9e80ec,antirez,antirez@gmail.com,Wed Apr 18 17:32:48 2012 +0200,1334763168,Explicit RPOP/LPOP tests.,15.0,2.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,753.0,32.0,0.007337962962962963,4789.0,137.2776025236593,259.0,Preventative,False,,
79daddd5ba62dc6d1b5e5ca05c73a9f8fb9e80ec,5ba79bda7f38b88afc1e93741413bec077c97417,antirez,antirez@gmail.com,Wed Apr 18 17:38:02 2012 +0200,1334763482,Document mostly dead code in RPOPLPUSH implementation.,2.0,0.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1006.0,44.0,21.998657407407407,4790.0,1.045457319575479,1537.0,Non Functional,False,,
5ba79bda7f38b88afc1e93741413bec077c97417,e51a218aaacab92982def45dbc0c90ccb44f30e1,antirez,antirez@gmail.com,Wed Apr 18 17:56:17 2012 +0200,1334764577,New hash fuzzing test.,24.0,0.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,398.0,14.0,62.02959490740741,4791.0,1.0161213369439654,260.0,Feature Addition,False,True,"[""84d9ef4f3178a217eaf62c90b3fdbe240af975b4""]"
e51a218aaacab92982def45dbc0c90ccb44f30e1,88f77a2b7eb7b922a2cba57c0e01c9ecb53c0109,antirez,antirez@gmail.com,Wed Apr 18 18:00:12 2012 +0200,1334764812,Added an SMOVE test where src and dest key are the same.,7.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,355.0,13.0,322.9067476851852,4792.0,1.003096869319606,261.0,Feature Addition,False,,
88f77a2b7eb7b922a2cba57c0e01c9ecb53c0109,f800942f64ac10e4550d5f4e9f74e92e5724d339,antirez,antirez@gmail.com,Wed Apr 18 18:05:02 2012 +0200,1334765102,Test SINTER with non existing key.,7.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,362.0,14.0,0.0033564814814814816,4793.0,298.93103448275866,262.0,Preventative,False,,
f800942f64ac10e4550d5f4e9f74e92e5724d339,4264459141ee8d649dfb905a9d89adfca920728d,antirez,antirez@gmail.com,Wed Apr 18 18:10:48 2012 +0200,1334765448,"Test SINTER against same integer elements, but different set encoding.",10.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,369.0,15.0,0.00400462962962963,4794.0,250.71098265895958,263.0,Preventative,False,,
4264459141ee8d649dfb905a9d89adfca920728d,cddfd67ed43c70c600770ef7020fd131cc1eda50,antirez,antirez@gmail.com,Wed Apr 18 18:13:31 2012 +0200,1334765611,Test SDIFF with first set empty.,7.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,379.0,16.0,0.0018865740740740746,4795.0,531.0613496932515,264.0,Preventative,False,,
cddfd67ed43c70c600770ef7020fd131cc1eda50,f26761aa1052d838be4c424929c41d012511b45c,antirez,antirez@gmail.com,Wed Apr 18 20:33:02 2012 +0200,1334773982,redis-cli --bigkeys,93.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1039.0,62.0,30.00273148148149,4796.0,1.0333302986302173,1538.0,None,False,True,"[""59046a7373215cd535cba7b7864ded34301c2357"", ""b6de51206e8fd79269d05f0fed3f396683d75446""]"
f26761aa1052d838be4c424929c41d012511b45c,5386f72d003c75a7cb25fd87f16d9aa715074a1b,antirez,antirez@gmail.com,Wed Apr 18 20:53:37 2012 +0200,1334775217,redis-cli --bigkeys output modified to be simpler to read..,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1132.0,63.0,0.01429398148148148,4797.0,70.95951417004048,1539.0,None,False,,
5386f72d003c75a7cb25fd87f16d9aa715074a1b,5498e7bc767d39ba368d18074afc5f488088dc20,antirez,antirez@gmail.com,Wed Apr 18 23:50:16 2012 +0200,1334785816,Tests for scripting PRNG.,20.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,278.0,13.0,5.351898148148148,4798.0,1.1868495947266893,265.0,Preventative,False,,
5498e7bc767d39ba368d18074afc5f488088dc20,1e35ae7486aaa5efb24b537607ad3f5b1f8fb33b,antirez,antirez@gmail.com,Wed Apr 18 23:56:07 2012 +0200,1334786167,Currenly not used code in dict.c commented out.,15.0,14.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,766.0,18.0,11.38210648148148,4799.0,1.087857199511091,1540.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
1e35ae7486aaa5efb24b537607ad3f5b1f8fb33b,e3923a3508af010d80736c401cc8083277ea4e53,antirez,antirez@gmail.com,Thu Apr 19 23:35:15 2012 +0200,1334871315,SHUTDOWN NOSAVE now can stop a non returning script. Issue #466.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2473.0,266.0,1.5026736111111112,4800.0,1.6654805092774452,1541.0,None,False,,
e3923a3508af010d80736c401cc8083277ea4e53,47db53c3c3086def9a00c23e67ebdef5899bd746,antirez,antirez@gmail.com,Thu Apr 19 23:49:33 2012 +0200,1334872173,New tests related to scripts max execution time.,38.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,298.0,14.0,0.9995023148148148,4801.0,2.0004979329990618,266.0,Feature Addition,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
47db53c3c3086def9a00c23e67ebdef5899bd746,60e2e5b50dcdb1b9e424b2c571261dad6dcff349,antirez,antirez@gmail.com,Fri Apr 20 00:04:07 2012 +0200,1334873047,redis.conf AOF section comments improved.,21.0,16.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,539.0,91.0,6.442453703703704,4802.0,1.1552203626120137,1285.0,None,False,,
60e2e5b50dcdb1b9e424b2c571261dad6dcff349,fd72fe261dc8ac1f6450dfb6197391bb530ac5a0,antirez,antirez@gmail.com,Sat Apr 21 12:08:26 2012 +0200,1335002906,README now makes clear that our support for solaris derived systems is best effort.,7.0,0.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,124.0,12.0,141.8108449074074,4803.0,1.007051646865604,1286.0,None,False,,
fd72fe261dc8ac1f6450dfb6197391bb530ac5a0 f2305046ef4695cfe60f35aa4a9e8df565fb1811,28d1ee2cda01bccdd2424f8fdbb4a924de37eaa3,Salvatore Sanfilippo,antirez@gmail.com,Sat Apr 21 03:27:15 2012 -0700,1335004035,Merge pull request #414 from chobits/unstablefix typos in tests/assets/default.conf,,,,,,,,,,,,,,,Merge,False,,
28d1ee2cda01bccdd2424f8fdbb4a924de37eaa3 e1d9857b123d41a4c9d03cb8bc05ea62acc0b066,7d3ee4172f52bf94185960799c1d12c16ed96ff7,Salvatore Sanfilippo,antirez@gmail.com,Sat Apr 21 03:31:06 2012 -0700,1335004266,Merge pull request #440 from ErikDubbelboer/spellingFixed some spelling errors in comments,,,,,,,,,,,,,,,Merge,False,,
fd72fe261dc8ac1f6450dfb6197391bb530ac5a0,d3701d27141b8e400ccdf5fbf22c504d112fab63,antirez,antirez@gmail.com,Sat Apr 21 19:20:03 2012 +0200,1335028803,Limit memory used by big SLOWLOG entries.Two limits are added:nn1) Up to SLOWLOG_ENTRY_MAX_ARGV arguments are logged.n2) Up to SLOWLOG_ENTRY_MAX_STRING bytes per argument are logged.n3) slowlog-max-len is set to 128 by default (was 1024).nnThe number of remaining arguments / bytes is logged in the entrynso that the user can understand better the nature of the logged command.n,51.0,8.0,"redis.conf,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER,tests/unit/slowlog.tcl,CAS_DELIMITER",5.0,3.0,3.0,1.5137165850145011,9.0,384.8,341.0,177.46560416666665,4806.0,1.1320582345896515,267.0,Feature Addition,False,,
d3701d27141b8e400ccdf5fbf22c504d112fab63 7d3ee4172f52bf94185960799c1d12c16ed96ff7,92cc20ecfe195e3f08832200b1efc8911fe586f8,antirez,antirez@gmail.com,Sat Apr 21 20:35:51 2012 +0200,1335033351,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
92cc20ecfe195e3f08832200b1efc8911fe586f8,eb6e7eb94df3f29b33dcdf40b1790dadc7f37f50,antirez,antirez@gmail.com,Sat Apr 21 21:49:21 2012 +0200,1335037761,Even inside #if 0 comments are comments.,2.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,767.0,19.0,2.9119675925925925,4809.0,1.343410415192731,1545.0,None,False,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19""]"
eb6e7eb94df3f29b33dcdf40b1790dadc7f37f50,a3f990818d649d16c0a26be4e18845d540875af8,antirez,antirez@gmail.com,Mon Apr 23 10:43:24 2012 +0200,1335170604,Remove loadfile() access from the scripting engine.,9.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,937.0,52.0,9.813287037037037,4810.0,1.1019026546585082,1546.0,None,False,,
a3f990818d649d16c0a26be4e18845d540875af8,4e7cc35f1a1537661b4fc70edf44f760ee3e8674,antirez,antirez@gmail.com,Mon Apr 23 10:57:43 2012 +0200,1335171463,New time limit for protocol desync test set to 30 seconds to reduce false positives.,1.0,1.0,"tests/unit/protocol.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,109.0,8.0,107.87724537037035,4811.0,1.0092697954658254,268.0,Feature Addition,False,,
4e7cc35f1a1537661b4fc70edf44f760ee3e8674 875944a23f37916a419bcf4b69e3b255ef093cde,c22e0eecd5624d498ec6ee10f6b449ec5ff28c8e,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 23 02:07:21 2012 -0700,1335172041,Merge pull request #461 from schlenk/unstableReplace some unnecessary calls to echo and cat in tests,,,,,,,,,,,,,,,Merge,False,,
c22e0eecd5624d498ec6ee10f6b449ec5ff28c8e 0a2ff52eaecb8040e105ee9fa87d82c0b0394e2e,d344228734dccb1dc67a1fe7e80825c5e49a8199,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 23 02:34:19 2012 -0700,1335173659,Merge pull request #421 from ErikDubbelboer/sds-constAdded consts keyword where possible,,,,,,,,,,,,,,,Merge,False,,
d344228734dccb1dc67a1fe7e80825c5e49a8199,c4a4755286f6d7df99ba40f83ffb3874807fe83e,antirez,antirez@gmail.com,Mon Apr 23 17:27:39 2012 +0200,1335194859,Ziplist encoding now tested with negative integers as well.,9.0,0.0,"tests/unit/type/list-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,70.0,2.0,287.21671296296296,4812.0,1.0034816915411495,269.0,Preventative,False,,
c4a4755286f6d7df99ba40f83ffb3874807fe83e,a66a4963498d08094fc16c2b0afe6faf8ad512b0,antirez,antirez@gmail.com,Tue Apr 24 11:07:15 2012 +0200,1335258435,"Fix and refactoring of code used to get registers on crash.This fixes compilation on FreeBSD (and possibly other systems) bynnot using ucontext_t at all if HAVE_BACKTRACE is not defined.nAlso the ifdefs to get the registers are modified to explicitly test for thenoperating system in the first level, and the arch in the second levelnof nesting.n",32.0,20.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,743.0,46.0,21.96611111111111,4813.0,1.0455246718429905,1547.0,Corrective,True,True,"[""d0089cf2082bafabbce15ec35057f403ce881d81""]"
a66a4963498d08094fc16c2b0afe6faf8ad512b0,e54fe9a79f71e97a5beb76dee346c8c0606b02be,antirez,antirez@gmail.com,Tue Apr 24 11:11:55 2012 +0200,1335258715,A few compiler warnings suppressed.,6.0,3.0,"src/cluster.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.3921472236645345,7.0,1699.333333333333,210.0,27.125806327160486,4815.0,1.0455218025388011,1550.0,None,False,True,"[""348ee1a40a4d8105dfaf6fa2ab2dffc15a47d86d""]"
e54fe9a79f71e97a5beb76dee346c8c0606b02be,21661d7acc9ed525c1150f6fa55646d19f5a31d9,antirez,antirez@gmail.com,Tue Apr 24 11:28:10 2012 +0200,1335259690,Fixed a bug in propagation of PUBLISH via the cluster bus.This bug was spotted by clang on FreeBSD.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1819.0,73.0,0.011284722222222222,4817.0,89.61538461538461,1551.0,Corrective,True,,
21661d7acc9ed525c1150f6fa55646d19f5a31d9,5a86ab47995586f0a0ef18472eafd6e9131644c1,Grisha Trubetskoy,grisha@apache.org,Fri Apr 20 10:38:42 2012 -0400,1334932722,Add a 24bit integer to ziplists to save one byte for ints that can fit in 24 bits (thanks to antirez for catching and solving the two's compliment bug).Increment REDIS_RDB_VERSION to 6n,17.0,1.0,"src/rdb.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,9.0,744.0,33.0,19.43554976851852,0.5,0.5128630269263053,1.0,Corrective,True,True,"[""b62bdf1c643ee8ace697621464ee201300ee2f0e""]"
5a86ab47995586f0a0ef18472eafd6e9131644c1,f22cff43a60010644907e750fb3be5e49b9f8698,antirez,antirez@gmail.com,Tue Apr 24 12:51:59 2012 +0200,1335264719,ziplist.c: added comments about the new 24 bit encoding.,4.0,0.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1416.0,26.0,3.84255787037037,4818.0,1.2602433154516457,1552.0,None,False,,
f22cff43a60010644907e750fb3be5e49b9f8698,053d56a1fabc6f0ed5895bd8b3f725a6ee4ffdba,antirez,antirez@gmail.com,Tue Apr 24 12:53:30 2012 +0200,1335264810,rdbLoad() should check REDIS_RDB_VERSION instead of hardcoded number.,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1147.0,77.0,13.879398148148148,4819.0,1.0720492336429894,1553.0,None,False,,
053d56a1fabc6f0ed5895bd8b3f725a6ee4ffdba,a76b9063d0b858fd2c72a92794b4c852005cac30,antirez,antirez@gmail.com,Tue Apr 24 16:54:07 2012 +0200,1335279247,Added two new encodings to ziplist.c1) One integer immediate encoding that can encode from 0 to 12 in thenencoding byte itself.n2) One 8 bit signed integer encoding that can encode 8 bit signed smallnintegers in a single byte.nnThe idea is to exploit all the not used bits we have around in anbackward compatible way.n,46.0,19.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1420.0,27.0,0.16814814814814816,4820.0,6.9471365638766525,1554.0,Feature Addition,False,True,"[""7dbc514de7ee0ccffde321469a16b0a5c64a635c"", ""b62bdf1c643ee8ace697621464ee201300ee2f0e""]"
a76b9063d0b858fd2c72a92794b4c852005cac30,7dbc514de7ee0ccffde321469a16b0a5c64a635c,antirez,antirez@gmail.com,Tue Apr 24 17:15:21 2012 +0200,1335280521,Spurious debugging printf removed.,0.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1447.0,28.0,0.014745370370370369,4821.0,68.81789638932496,1555.0,Corrective,True,,
7dbc514de7ee0ccffde321469a16b0a5c64a635c,29c8cf011657e9f95551be20b20de06c7f7f947d,antirez,antirez@gmail.com,Tue Apr 24 19:05:27 2012 +0200,1335287127,redis-check-dump now is RDB version 6 ready.,36.0,4.0,"src/Makefile,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER",2.0,1.0,1.0,0.28639695711595625,9.0,457.5,90.0,27.95193287037037,4822.5,1.0557737520120316,1557.0,None,False,True,"[""2f62c9663ca48b647d71f21d0cdf499346457f0f"", ""145473acc5798a499a0f37e42df48a014a3955c1""]"
29c8cf011657e9f95551be20b20de06c7f7f947d,d9237055baddbc41d6832ef5e6a516feb738eb95,antirez,antirez@gmail.com,Tue Apr 24 19:14:03 2012 +0200,1335287643,Explicitly use bash for install_server.sh. Fixes issue #397,1.0,1.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,177.0,10.0,23.44033564814815,4824.0,1.0426615051512291,27.0,Corrective,True,True,"[""34f37fb7d3d685fa737e7195d51ed874a6d496ae""]"
d9237055baddbc41d6832ef5e6a516feb738eb95,31788f50b7dfde5755c9964489277449092f9f4b,David Tran,dtran320@gmail.com,Wed Apr 25 12:21:56 2012 -0700,1335381716,Spelling: s/synchrnonization/synchronization,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,610.0,36.0,25.415578703703705,0.0,0.0,0.0,None,False,,
d9237055baddbc41d6832ef5e6a516feb738eb95 31788f50b7dfde5755c9964489277449092f9f4b,d445988c68bd795b1f9b79057513d46b062f4596,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 25 13:39:13 2012 -0700,1335386353,Merge pull request #481 from dtran320/unstableSpelling: s/synchrnonization/synchronization,,,,,,,,,,,,,,,Merge,False,,
d9237055baddbc41d6832ef5e6a516feb738eb95,5080e625d31e5132f952c5132e69aa65c6c2b383,antirez,antirez@gmail.com,Thu Apr 26 11:16:52 2012 +0200,1335431812,"Redis test: scripting EVALSHA replication test more reliable.A new primitive wait_for_condition was introduced in the scriptingnengine that makes waiting for events simpler, so that it is simpler tonwrite tests that are more resistant to timing issues.n",23.0,4.0,"tests/support/test.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9509560484549724,7.0,238.0,42.0,58.58872106481481,4825.5,1.0087837390609191,271.0,Preventative,False,,
5080e625d31e5132f952c5132e69aa65c6c2b383 d445988c68bd795b1f9b79057513d46b062f4596,57356b80cddd203086e932a09a8916a925cb8cf6,antirez,antirez@gmail.com,Thu Apr 26 11:17:47 2012 +0200,1335431867,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
57356b80cddd203086e932a09a8916a925cb8cf6,28ccb53008eed402999d85aa0ac66714b9f5bd03,antirez,antirez@gmail.com,Thu Apr 26 11:25:13 2012 +0200,1335432313,Redis test: More reliable BRPOPLPUSH replication test.Now it uses the new wait_for_condition testing primitive.nAlso wait_for_condition implementation was fixed in this commit to properlynescape the expr command and its argument.n,6.0,3.0,"tests/integration/replication.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.7642045065086203,7.0,148.0,43.0,10.826105324074076,4827.5,1.04619084654058,273.0,Preventative,False,,
28ccb53008eed402999d85aa0ac66714b9f5bd03,3ada43e732678e1f1ed0830c7407eef99ad63c46,antirez,antirez@gmail.com,Thu Apr 26 16:21:19 2012 +0200,1335450079,"Don't use an alternative stack for SIGSEGV & co.This commit reverts most of c575766202773c858be0870c20cd495b722927c3, innorder to use back main stack for signal handling.nnThe main reason is that otherwise it is completely pointless that we dona lot of efforts to print the stack trace on crash, and the content ofnthe stack and registers as well. Using an alternate stack broken thisnfeature completely.n",1.0,13.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2473.0,267.0,6.698657407407408,4829.0,1.1492836458383728,1558.0,None,False,,
3ada43e732678e1f1ed0830c7407eef99ad63c46,11bd247d2b333123402095421d0424f87e7e28c3,antirez,antirez@gmail.com,Thu Apr 26 16:04:53 2012 +0200,1335449093,Produce the stack trace in an async safe way.,25.0,27.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,755.0,47.0,2.206689814814814,4830.0,1.4531674516673836,1559.0,None,False,True,"[""338cd4835dd163c5f54f63db59e41ea1ebbc900f"", ""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
11bd247d2b333123402095421d0424f87e7e28c3,a3eb7ac87d00cbd74b0dd386dba83748cea2465c,antirez,antirez@gmail.com,Thu Apr 26 16:53:11 2012 +0200,1335451991,"Re-introduce -g -rdynamic -ggdb when linking, fixing strack traces.A previous commit removed -g -rdynamic -ggdb as LDFLAGS, not allowingnRedis to produce a stack trace wth symbol names on crash.nThis commit fixes the issue.n",2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,222.0,83.0,1.9081481481481481,4831.0,1.5240683229813663,1560.0,Corrective,True,,
a3eb7ac87d00cbd74b0dd386dba83748cea2465c,0ad10db22098ef1555236719743e02da7cb85e00,antirez,antirez@gmail.com,Fri Apr 27 11:41:25 2012 +0200,1335519685,"Set LUA_MASKCOUNT hook more selectively. Fixes issue #480.An user reported a crash with Redis scripting (see issue #480 onngithub), inspection of the kindly provided strack trace showed thatnserver.lua_caller was probably set to NULL. The stack trace also slowednthat the call to the hook was originating from a point where we justnused to set/get a few global variables in the Lua state.nnWhat was happening is that we did not set the timeout hook selectivelynonly when the user script was called. Now we set it more selectively,nspecifically only in the context of the lua_pcall() call, and make surento remove the hook when the call returns. Otherwise the hook can getncalled in random contexts every time we do something with the Luanstate.n",7.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,946.0,53.0,4.040289351851852,4832.0,1.2475070255900491,1561.0,Corrective,True,True,"[""baee5650295e72fbcfe1f69ca7fa60f64cb5f740"", ""c494db89b5c2ef34758f599ee46ac7265782ad77""]"
0ad10db22098ef1555236719743e02da7cb85e00,841048f2c832b41d168b10cea6d80c1ab3c49dca,antirez,antirez@gmail.com,Fri Apr 27 15:57:17 2012 +0200,1335535037,redis-cli commands description in help.h updated.,3.0,3.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,754.0,6.0,24.019097222222214,4833.0,1.0416335381279365,1562.0,None,False,,
841048f2c832b41d168b10cea6d80c1ab3c49dca,ffe003dcbe9e719659f9a9d690f5bc5fd7b0615e,antirez,antirez@gmail.com,Fri Apr 27 16:28:31 2012 +0200,1335536911,memtest.c fixed to actually use v1 and v2 in memtest_fill_value().,6.0,6.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,225.0,8.0,15.193506944444444,4834.0,1.065817589293672,1563.0,Corrective,True,,
ffe003dcbe9e719659f9a9d690f5bc5fd7b0615e,2d4b55214f9d9f806ef8b63aa66fdc97dcb503c2,antirez,antirez@gmail.com,Sat Apr 28 15:39:00 2012 +0200,1335620340,A more lightweight implementation of issue 141 regression test.,26.0,13.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,142.0,16.0,2.1762384259259258,4835.0,1.4595084748466975,274.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
2d4b55214f9d9f806ef8b63aa66fdc97dcb503c2,d9241b35e5f279682cb0b4bdebaed86be2405d36,antirez,antirez@gmail.com,Mon Apr 30 10:55:03 2012 +0200,1335776103,Properly wait the slave to sync with master in BRPOPLPUSH test.,7.0,3.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,155.0,17.0,1.8028125,4836.0,1.5546888542208357,275.0,Preventative,False,,
d9241b35e5f279682cb0b4bdebaed86be2405d36,2ac546e00cd4000506558e23d11acafb4ce654b7,Harmen,harm@dds.nl,Mon Apr 30 09:57:12 2012 -0600,1335801432,Show problem with 'keys' command with specific command sequence.,11.0,0.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,144.0,11.0,145.17552083333334,0.0,0.0,0.0,Corrective,True,,
2ac546e00cd4000506558e23d11acafb4ce654b7,cc4f65fea4f72ba891b07769d685364f209f5355,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Apr 30 10:16:20 2012 -0700,1335806180,"Use safe dictionary iterator from KEYSEvery matched key in a KEYS call is checked for expiration. When the keynis set to expire, the call to `getExpire` will assert that the key alsonexists in the main dictionary. This in turn causes a rehashing step tonbe executed. Rehashing a dictionary when there is an iterator active maynresult in the iterator emitting duplicate entries, or not emitting somenentries at all. By using a safe iterator, the rehash step is omitted.n",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,722.0,76.0,23.712175925925933,943.0,1.0421724266521926,423.0,Preventative,False,,
cc4f65fea4f72ba891b07769d685364f209f5355,92997d06ea3bd6b24414db0ca51987f48b1a87b8,antirez,antirez@gmail.com,Wed May 2 11:40:46 2012 +0200,1335951646,Test Turning off AOF kills the background writing child if any is now more reliable.,6.0,2.0,"tests/unit/aofrw.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,144.0,5.0,14.555462962962967,4837.0,1.0687027271165848,276.0,Preventative,False,True,"[""95883313b5a405916fabed34c3af290d6072c817""]"
92997d06ea3bd6b24414db0ca51987f48b1a87b8,ae62d29d1db7a174db4e519fa975b7df6f369d4d,antirez,antirez@gmail.com,Wed May 2 17:14:45 2012 +0200,1335971685,"Use specific error if master is down and slave-serve-stale-data is set to no.We used to reply -ERR ... message ..., now the reply isninstead -MASTERDOWN ... message ... so that it can be distinguishedneasily by the other error conditions.n",5.0,3.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,9.0,1835.0,510.0,8.475046296296297,4838.5,1.11231949712582,1565.0,None,False,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9""]"
ae62d29d1db7a174db4e519fa975b7df6f369d4d,299290d3a42e92d73a22169c87aa21d2fe6e3b34,antirez,antirez@gmail.com,Wed May 2 21:45:01 2012 +0200,1335987901,Remove useless trailing space in SYNC command sent to master.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,610.0,37.0,7.016030092592592,4840.0,1.1425307455644729,1566.0,None,False,,
299290d3a42e92d73a22169c87aa21d2fe6e3b34,af3853c3bf6cbb4f4b75afbc56dc2ba0c17c4d5e,antirez,antirez@gmail.com,Wed May 2 22:41:50 2012 +0200,1335991310,"syncio.c read / write functions reworked for correctness and performance.The new implementation start reading / writing before blocking withnaeWait(), likely the descriptor can accept writes or has buffered dataninside and we can go faster, otherwise we get an error and wait.nnThis change has effects on speed but also on correctness: on socketnerrors when we perform non blocking connect(2) write is performed ASAPnand the error is returned ASAP before waiting.nnSo the practical effect is that now a Redis slave is more available if itncan not connect to the master, previously the slave continued to block onnsyncWrite() trying to send SYNC, and serving commands very slowly.n",28.0,14.0,"src/syncio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,130.0,5.0,32.47228009259259,4841.0,1.0307954968714412,1567.0,Feature Addition,False,,
96e9f8d5e3dc862e4590375de5ca9770e151ea84,c4286feabef25b417d05251e4a63ef769ac4cfad,quiver,george@alpamayo.(none),Fri May 4 20:07:00 2012 +0900,1336129620,fix several bugs of init.d scripts- PIDFILE environ variable was not properly retrievedn- chkconfig command failedn,2.0,2.0,"utils/install_server.sh,CAS_DELIMITER,utils/redis_init_script.tpl,CAS_DELIMITER",2.0,1.0,1.0,1.0,8.0,104.0,12.0,111.92077546296295,1.5,1.0535415377292523,1.0,Corrective,True,,
af3853c3bf6cbb4f4b75afbc56dc2ba0c17c4d5e c4286feabef25b417d05251e4a63ef769ac4cfad,abf54ee73c9dcfa26a1caefcb51cd0b0ee9b3afd,Salvatore Sanfilippo,antirez@gmail.com,Fri May 4 04:41:02 2012 -0700,1336131662,Merge pull request #494 from quiver/init-fixesfix several bugs of init.d scripts,,,,,,,,,,,,,,,Merge,False,,
abf54ee73c9dcfa26a1caefcb51cd0b0ee9b3afd,bf219416868479b8324e7bc1552611dfd28a56b9,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 4 17:26:24 2012 -0700,1336177584,"Compare integers in ziplist regardless of encodingBecause of the introduction of new integer encoding types for ziplistsnin the 2.6 tree, the same integer value may have a different encoding inndifferent versions of the ziplist implementation. This means that thenencoding can NOT be used as a fast path in comparing integers.n",4.0,5.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1446.0,29.0,10.382673611111107,944.0,1.0963143056842162,424.0,Feature Addition,False,,
bf219416868479b8324e7bc1552611dfd28a56b9,088c508abc89b66ce14870a2abe06879238a3b21,antirez,antirez@gmail.com,Sun May 6 10:05:31 2012 +0200,1336291531,redis-cli --pipe for mass import.,143.0,3.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.10441907800540784,9.0,677.0,149.0,10.835393518518519,4842.5,1.0745292854762516,1569.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
088c508abc89b66ce14870a2abe06879238a3b21,b26808a532acfc15983745874b4ad213efbf2825,antirez,antirez@gmail.com,Wed May 9 10:34:52 2012 +0200,1336552492,Allow PREFIX to be overrided in Makefile.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,222.0,85.0,3.0203819444444444,4844.0,1.3310839550737468,1570.0,Corrective,True,,
b26808a532acfc15983745874b4ad213efbf2825,8c6301462b506efa1828d71ecac8bac11ceb8986,antirez,antirez@gmail.com,Wed May 9 20:45:00 2012 +0200,1336589100,Fix PREFIX typo in Makefile.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,222.0,86.0,0.4237037037037037,4845.0,3.36013986013986,1571.0,Corrective,True,,
8c6301462b506efa1828d71ecac8bac11ceb8986,f6bd9122c0692bd76e7c1d90062c50551cd898a5,antirez,antirez@gmail.com,Fri May 11 10:45:12 2012 +0200,1336725912,redis-cli pipe mode: handle EAGAIN while writing to socket.,7.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1272.0,66.0,5.02755787037037,4846.0,1.1989037273729743,1572.0,None,False,,
f6bd9122c0692bd76e7c1d90062c50551cd898a5,ea66be60802fea82d88d48e0af87d1e6c20bfee5,antirez,antirez@gmail.com,Fri May 11 16:08:57 2012 +0200,1336745337,redis-cli pipe mode: handle EINTR properly as well so that SIGSTOP/SIGCONT are handled correctly.,2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1276.0,67.0,0.2248263888888889,4847.0,5.447876447876449,1573.0,None,False,,
ea66be60802fea82d88d48e0af87d1e6c20bfee5,27737964c40716d61321cb0101d5ddb641298fff,antirez,antirez@gmail.com,Fri May 11 17:26:09 2012 +0200,1336749969,"If the computer running the Redis test is slow, we revert to --clients 1 to avoid false positives.",17.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,425.0,72.0,33.256585648148146,4848.0,1.0300692323192742,277.0,Preventative,False,,
27737964c40716d61321cb0101d5ddb641298fff,1dcc95d08105167a3a69acc4fd8d3bb725a5ac8f,antirez,antirez@gmail.com,Fri May 11 19:17:31 2012 +0200,1336756651,"More incremental active expired keys collection process.If a large amonut of keys are all expiring about at the same time, thenactive expired keys collection cycle used to block as far as thenpercentage of already expired keys was >= 25% of the total population ofnkeys with an expire set.nnThis could block the server even for many seconds in order to reclaimnmemory ASAP. The new algorithm uses at max a small amount ofnmilliseconds per cycle, even if this means reclaiming the memory lessnpromptly it also means a more responsive server.n",9.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,9.0,1836.0,512.0,9.085254629629633,4849.5,1.0825513461729552,1575.0,Feature Addition,False,True,"[""94343492361a04301a48fc56490d6113ff97aba9""]"
1dcc95d08105167a3a69acc4fd8d3bb725a5ac8f,f333788fbcaf67fa97c509f0f61d557b6669b1fe,antirez,antirez@gmail.com,Fri May 11 22:33:28 2012 +0200,1336768408,Comment improved so that the code goal is more clear. Thx to @agladysh.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2469.0,270.0,0.1360763888888889,4851.0,8.348813472824698,1576.0,None,False,,
f333788fbcaf67fa97c509f0f61d557b6669b1fe,94343492361a04301a48fc56490d6113ff97aba9,antirez,antirez@gmail.com,Sun May 13 16:40:29 2012 +0200,1336920029,"Redis timer interrupt frequency configurable as REDIS_HZ.Redis uses a function called serverCron() that is very similar to thentimer interrupt of an operating system. This function is used to handlena number of asynchronous things, like active expired keys collection,nclients timeouts, update of statistics, things related to the clusternand replication, triggering of BGSAVE and AOF rewrite process, and sonforth.nnIn the past the timer was called 1 time per second. At some point it wasnraised to 10 times per second, but it still was fixed and could not benchanged even at compile time, because different functions called fromnserverCron() assumed a given fixed frequency.nnThis commmit makes the frequency configurable, so that it is simpler tonpick a good tradeoff between overhead of this function (that is usuallynvery small) and the responsiveness of Redis during a few criticalncircumstances where a lot of work is done inside the timer.nnAn example of such a critical condition is mass-expire of a lot of keysnin the same second. Up to a given percentage of CPU time is used tonperform expired keys collection per expire cylce. Now changing thenREDIS_HZ macro it is possible to do less work but more times per secondnin order to block the server for less time.nnIf this patch will work well in our tests it will enter Redis 2.6-final.n",57.0,21.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2351933818192415,9.0,1840.0,515.0,1.8229108796296296,4852.5,1.4220642467397695,1578.0,Corrective,True,True,"[""6b5daa2df2a0711a25746cb025927dc3deb7717e"", ""1dc2d6dc47b9cc70e9eee4501fea5b209b0a22a7"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
94343492361a04301a48fc56490d6113ff97aba9,61daf8914d6c69c65fe37fa2d3914f266b71ea71,antirez,antirez@gmail.com,Sun May 13 21:52:35 2012 +0200,1336938755,"Impovements for: Redis timer, hashes rehashing, keys collection.A previous commit introduced REDIS_HZ define that changes the frequencynof calls to the serverCron() Redis function. This commit improvesndifferent related things:nn1) Software watchdog: now the minimal period can be set according tonREDIS_HZ. The minimal period is two times the timer period, that is:nn(1000/REDIS_HZ)*2 millisecondsnn2) The incremental rehashing is now performed in the expires dictionarynas well.nn3) The activeExpireCycle() function was improved in different ways:nn- Now it checks if it already used too much time using microsecondsn  instead of milliseconds for better precision.n- The time limit is now calculated correctly, in the previous versionn  the division was performed before of the multiplication resulting inn  a timelimit of 0 if HZ was big enough.n- Databases with less than 1% of buckets fill in the hash table aren  skipped, because getting random keys is too expensive in thisn  condition.nn4) tryResizeHashTables() is now called at every timer call, we need ton   match the number of calls we do to the expired keys colleciton cycle.nn5) REDIS_HZ was raised to 100.n",27.0,8.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.069385738534449,9.0,1489.666666666667,565.0,5.891643518518517,4855.0,1.0572855782335715,1581.0,None,False,,
61daf8914d6c69c65fe37fa2d3914f266b71ea71,b3624f5a160c2a3372ef1a0ab1858a804b7cbfc0,antirez,antirez@gmail.com,Mon May 14 16:04:41 2012 +0200,1337004281,"activeExpireCycle(): better precision in max time used.activeExpireCycle() can consume no more than a few milliseconds perniteration. This commit improves the precision of the check for the timenelapsed in two ways:nn1) We check every 16 iterations instead of the main loop instead of 256.n2) We reset iterations at the start of the function and not every timen   we switch to the next database, so the check is correctly performedn   every 16 iterations.n",5.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2517.0,273.0,0.7584027777777778,4857.0,2.3185605713762474,1582.0,None,False,,
b3624f5a160c2a3372ef1a0ab1858a804b7cbfc0,e9f0419c99f12711493e0b0c692acb4ed8f4bc03,antirez,antirez@gmail.com,Mon May 14 17:35:51 2012 +0200,1337009751,"Added time.h include in redis-cli.redis-cli.c uses the time() function to seed the PRNG, but time.h wasnnot included. This was not noticed since sys/time.h is included and wasnenough in most systems (but not correct). With Ubuntu 12.04 GCCngenerates a warning that made us aware of the issue.n",1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1276.0,68.0,3.0603472222222217,4858.0,1.3267603076992898,1583.0,Feature Addition,False,,
e9f0419c99f12711493e0b0c692acb4ed8f4bc03,f16d090c728dd23ce23b0d2b316c02d34bf9b0da,Pieter Noordhuis,pcnoordhuis@gmail.com,Fri May 4 11:54:06 2012 -0700,1336157646,Fix `install` target on OSX (see #495),4.0,0.0,"Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,7.0,60.0,296.0685648148148,945.0,1.003377595999175,240.0,Corrective,True,,
f16d090c728dd23ce23b0d2b316c02d34bf9b0da,05da63da0c391d4cca46cd32dbff7bc8a5266cb7,Dave Pacheco,dap@joyent.com,Mon Mar 26 17:58:19 2012 -0700,1332809899,first cut at event port support,270.0,5.0,"src/ae.c,CAS_DELIMITER,src/ae_evport.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER",3.0,1.0,1.0,0.4593592127635137,9.0,171.0,22.0,27.5063387345679,1.0,0.6748425658419709,2.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
05da63da0c391d4cca46cd32dbff7bc8a5266cb7,6d3127704854ca9985a576ddd107b3f3c72448a2,Dave Pacheco,dap@joyent.com,Mon Mar 26 20:41:58 2012 -0700,1332819718,use port_getn instead of port_get,85.0,50.0,"src/ae_evport.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,254.0,1.0,0.11364583333333332,3.0,9.799266727772686,3.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
6d3127704854ca9985a576ddd107b3f3c72448a2,3c72c94aaeb98b0c4c1a98992539f8839cea1d74,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon May 14 11:06:34 2012 -0700,1337018794,Whitespace,2.0,2.0,"src/ae_evport.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,289.0,2.0,48.60041666666667,946.0,1.0205759552815905,425.0,None,False,,
3c72c94aaeb98b0c4c1a98992539f8839cea1d74,ad4c0b4117ec15c0061b702f230caf1bc5eb4e06,antirez,antirez@gmail.com,Tue May 15 15:27:12 2012 +0200,1337088432,"Jemalloc updated to 3.0.0.Full changelog here:nnhttp://www.canonware.com/cgi-bin/gitweb.cgi?p=jemalloc.git;a=blob_plain;f=ChangeLog;hb=masternnNotable improvements from the point of view of Redis:nn1) Bugfixing.n2) Support for Valgrind.n3) Support for OSX Lion, FreeBSD.n",43430.0,9609.0,"deps/jemalloc.orig/.gitignore,CAS_DELIMITER,deps/jemalloc.orig/COPYING,CAS_DELIMITER,deps/jemalloc.orig/ChangeLog,CAS_DELIMITER,deps/jemalloc.orig/INSTALL,CAS_DELIMITER,deps/jemalloc.orig/Makefile.in,CAS_DELIMITER,deps/jemalloc.orig/README,CAS_DELIMITER,deps/jemalloc.orig/autogen.sh,CAS_DELIMITER,deps/jemalloc.orig/bin/pprof,CAS_DELIMITER,deps/jemalloc.orig/config.guess,CAS_DELIMITER,deps/jemalloc.orig/config.stamp.in,CAS_DELIMITER,deps/jemalloc.orig/config.sub,CAS_DELIMITER,deps/jemalloc.orig/configure.ac,CAS_DELIMITER,deps/jemalloc.orig/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc.orig/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc.orig/doc/manpages.xsl.in,CAS_DELIMITER,deps/jemalloc.orig/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_swap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/prn.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/zone.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc.orig/install-sh,CAS_DELIMITER,deps/jemalloc.orig/src/arena.c,CAS_DELIMITER,deps/jemalloc.orig/src/atomic.c,CAS_DELIMITER,deps/jemalloc.orig/src/base.c,CAS_DELIMITER,deps/jemalloc.orig/src/bitmap.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_swap.c,CAS_DELIMITER,deps/jemalloc.orig/src/ckh.c,CAS_DELIMITER,deps/jemalloc.orig/src/ctl.c,CAS_DELIMITER,deps/jemalloc.orig/src/extent.c,CAS_DELIMITER,deps/jemalloc.orig/src/hash.c,CAS_DELIMITER,deps/jemalloc.orig/src/huge.c,CAS_DELIMITER,deps/jemalloc.orig/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc.orig/src/mb.c,CAS_DELIMITER,deps/jemalloc.orig/src/mutex.c,CAS_DELIMITER,deps/jemalloc.orig/src/prof.c,CAS_DELIMITER,deps/jemalloc.orig/src/rtree.c,CAS_DELIMITER,deps/jemalloc.orig/src/stats.c,CAS_DELIMITER,deps/jemalloc.orig/src/tcache.c,CAS_DELIMITER,deps/jemalloc.orig/src/zone.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocated.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocated.exp,CAS_DELIMITER,deps/jemalloc.orig/test/allocm.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocm.exp,CAS_DELIMITER,deps/jemalloc.orig/test/bitmap.c,CAS_DELIMITER,deps/jemalloc.orig/test/bitmap.exp,CAS_DELIMITER,deps/jemalloc.orig/test/mremap.c,CAS_DELIMITER,deps/jemalloc.orig/test/mremap.exp,CAS_DELIMITER,deps/jemalloc.orig/test/posix_memalign.c,CAS_DELIMITER,deps/jemalloc.orig/test/posix_memalign.exp,CAS_DELIMITER,deps/jemalloc.orig/test/rallocm.c,CAS_DELIMITER,deps/jemalloc.orig/test/rallocm.exp,CAS_DELIMITER,deps/jemalloc.orig/test/thread_arena.c,CAS_DELIMITER,deps/jemalloc.orig/test/thread_arena.exp,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/jemalloc.sh.in,CAS_DELIMITER,deps/jemalloc/bin/pprof,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_swap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prn.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/quarantine.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/size_classes.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/zone.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/inttypes.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/stdbool.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/stdint.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/strings.h,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk_swap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/aligned_alloc.exp,CAS_DELIMITER,deps/jemalloc/test/allocated.c,CAS_DELIMITER,deps/jemalloc/test/allocm.c,CAS_DELIMITER,deps/jemalloc/test/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/mremap.c,CAS_DELIMITER,deps/jemalloc/test/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/rallocm.c,CAS_DELIMITER,deps/jemalloc/test/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/thread_tcache_enabled.exp,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",161.0,2.0,16.0,5.933532165509736,10.0,247.77639751552795,97.0,115.05767059178748,4939.0,0.503244097554724,1584.0,None,False,True,"[""fceef8e0ddfca103b2f0328e3ad9ae522093f2c8""]"
ad4c0b4117ec15c0061b702f230caf1bc5eb4e06,d165f7856183b66700a7d400ccc742c04d4ae865,antirez,antirez@gmail.com,Wed May 16 12:22:29 2012 +0200,1337163749,Deleted jemalloc.orig from /deps.In the commit upgrading jemalloc to version 3.0.0 I added the oldnversion of Jemalloc in the 'jemalloc.orig' directory for an error.nThis commit removes the not useful version of jemalloc.n,0.0,30365.0,"deps/jemalloc.orig/.gitignore,CAS_DELIMITER,deps/jemalloc.orig/COPYING,CAS_DELIMITER,deps/jemalloc.orig/ChangeLog,CAS_DELIMITER,deps/jemalloc.orig/INSTALL,CAS_DELIMITER,deps/jemalloc.orig/Makefile.in,CAS_DELIMITER,deps/jemalloc.orig/README,CAS_DELIMITER,deps/jemalloc.orig/autogen.sh,CAS_DELIMITER,deps/jemalloc.orig/bin/pprof,CAS_DELIMITER,deps/jemalloc.orig/config.guess,CAS_DELIMITER,deps/jemalloc.orig/config.stamp.in,CAS_DELIMITER,deps/jemalloc.orig/config.sub,CAS_DELIMITER,deps/jemalloc.orig/configure.ac,CAS_DELIMITER,deps/jemalloc.orig/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc.orig/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc.orig/doc/manpages.xsl.in,CAS_DELIMITER,deps/jemalloc.orig/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/chunk_swap.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/prn.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/internal/zone.h,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc.orig/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc.orig/install-sh,CAS_DELIMITER,deps/jemalloc.orig/src/arena.c,CAS_DELIMITER,deps/jemalloc.orig/src/atomic.c,CAS_DELIMITER,deps/jemalloc.orig/src/base.c,CAS_DELIMITER,deps/jemalloc.orig/src/bitmap.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc.orig/src/chunk_swap.c,CAS_DELIMITER,deps/jemalloc.orig/src/ckh.c,CAS_DELIMITER,deps/jemalloc.orig/src/ctl.c,CAS_DELIMITER,deps/jemalloc.orig/src/extent.c,CAS_DELIMITER,deps/jemalloc.orig/src/hash.c,CAS_DELIMITER,deps/jemalloc.orig/src/huge.c,CAS_DELIMITER,deps/jemalloc.orig/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc.orig/src/mb.c,CAS_DELIMITER,deps/jemalloc.orig/src/mutex.c,CAS_DELIMITER,deps/jemalloc.orig/src/prof.c,CAS_DELIMITER,deps/jemalloc.orig/src/rtree.c,CAS_DELIMITER,deps/jemalloc.orig/src/stats.c,CAS_DELIMITER,deps/jemalloc.orig/src/tcache.c,CAS_DELIMITER,deps/jemalloc.orig/src/zone.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocated.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocated.exp,CAS_DELIMITER,deps/jemalloc.orig/test/allocm.c,CAS_DELIMITER,deps/jemalloc.orig/test/allocm.exp,CAS_DELIMITER,deps/jemalloc.orig/test/bitmap.c,CAS_DELIMITER,deps/jemalloc.orig/test/bitmap.exp,CAS_DELIMITER,deps/jemalloc.orig/test/mremap.c,CAS_DELIMITER,deps/jemalloc.orig/test/mremap.exp,CAS_DELIMITER,deps/jemalloc.orig/test/posix_memalign.c,CAS_DELIMITER,deps/jemalloc.orig/test/posix_memalign.exp,CAS_DELIMITER,deps/jemalloc.orig/test/rallocm.c,CAS_DELIMITER,deps/jemalloc.orig/test/rallocm.exp,CAS_DELIMITER,deps/jemalloc.orig/test/thread_arena.c,CAS_DELIMITER,deps/jemalloc.orig/test/thread_arena.exp,CAS_DELIMITER",80.0,1.0,7.0,4.815738621325584,10.0,379.5625,80.0,0.8717245370370379,5059.5,1.071201954688333,467.0,Feature Addition,False,,
d165f7856183b66700a7d400ccc742c04d4ae865,d44a36e0060ef4e5f39989b91071a279347eb045,antirez,antirez@gmail.com,Sun May 20 23:47:45 2012 +0200,1337550465,"TODO file removed.The list of things to do is since long time in two places:nn1) Github issues.n2) I've a private TOOD list of random ideas, what makes sense is laternmoved to github issues. So github is anyway the true source of things tondo.n",0.0,45.0,"TODO,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,43.0,168.0,236.31952546296296,5100.0,1.0042315589371675,1288.0,None,False,,
d44a36e0060ef4e5f39989b91071a279347eb045,5a559993044fbfa54c9e666a54b757b847d49549,antirez,antirez@gmail.com,Mon May 21 16:50:05 2012 +0200,1337611805,"Use comments to split aof.c into sections.This makes the code more readable, it is still not the case to split thenfile itself into three different files, but the logical separationnimproves the readability especially since new commits are going tonintroduce an additional section.n",14.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1004.0,80.0,44.19354166666667,5101.0,1.0226277406672355,1585.0,Feature Addition,False,,
5a559993044fbfa54c9e666a54b757b847d49549,2bcd18a2e95ba1278e8ab4671a6987416800e36f,antirez,antirez@gmail.com,Tue May 22 13:13:24 2012 +0200,1337685204,"Redis test: include bug report on crash.Due to a change in the format of the bug report in case of crash ofnfailed assertion the test suite was no longer able to properly log it.nInstead just a protocol error was logged by the Redis TCL client thatnprovided no clue about the actual problem.nnThis commit resolves the issue by logging everything from the first linenof the log including the string REDIS BUG REPORT, till the end of thenfile.n",5.0,1.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,300.0,12.0,187.89761574074075,5102.0,1.0053220473078264,278.0,Preventative,False,,
2bcd18a2e95ba1278e8ab4671a6987416800e36f,348ee1a40a4d8105dfaf6fa2ab2dffc15a47d86d,antirez,antirez@gmail.com,Wed May 23 11:02:38 2012 +0200,1337763758,"Fixed issue #516 (ZINTERSTORE mixing sets and zsets).Weeks ago trying to fix an harmless GCC warning I introduced a bug innthe ziplist-encoded implementations of sorted sets.nnThe bug completely broke zuiNext() iterator, that is used in thenZINTERSTORE and ZUNIONSTORE implementation, so those two commands are nonlonger reliable starting from Redis version 2.4.12 and latest 2.6.0-RCnreleases.nnThis commit fixes the problem and adds a regression test.n",10.0,1.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8453509366224365,7.0,1455.5,102.0,90.50668402777778,5103.5,1.0200074398867942,279.0,Corrective,True,,
348ee1a40a4d8105dfaf6fa2ab2dffc15a47d86d,e150ce3ce6375de2f11784935483e85cf3bbcf59,jokea,tfengjun@gmail.com,Wed May 23 17:19:49 2012 +0800,1337764789,Set fd to writable when poll(2) detects POLLERR or POLLHUP event.,2.0,0.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,409.0,9.0,57.3482638888889,1.0,1.0174373194964974,1.0,None,False,True,"[""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
e150ce3ce6375de2f11784935483e85cf3bbcf59,ef37997608dfa5ad457961e0f3e427315ba4be83,antirez,antirez@gmail.com,Thu May 24 11:35:21 2012 +0200,1337852121,"Dead code removed from replication.c.The user @jokea noticed that the following line of code intonreplication.c made little sense:nnaddReplySds(slave,sdsempty());nnInvestigating a bit I found that this was introduced by commit 6208b3a7nthree years ago in the early stages of Redis. The code apparently is notnuseful at all, so I'm removing it.nnThis change will not be backported into 2.4 so that in the rare casenthis should introduce a bug, we'll have a chance to detect it into thendevelopment branch. However following the code path it seems like thencode is not useful at all, so the risk is truly small.n",0.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,610.0,38.0,21.576620370370367,5105.0,1.046346461254573,1587.0,None,False,,
ef37997608dfa5ad457961e0f3e427315ba4be83,47ca4b6e28af49d1904f40fceacf58bb2907fbf2,antirez,antirez@gmail.com,Tue May 22 13:03:41 2012 +0200,1337684621,"Allow an AOF rewrite buffer > 2GB (Fix for issue #504).During the AOF rewrite process, the parent process needs to accumulatenthe new writes in an in-memory buffer: when the child will terminate thenAOF rewriting process this buffer (that ist the difference between thendataset when the rewrite was started, and the current dataset) isnflushed to the new AOF file.nnWe used to implement this buffer using an sds.c string, but sds.c has an2GB limit. Sometimes the dataset can be big enough, the amount of writesnso high, and the rewrite process slow enough that we overflow the 2GBnlimit, causing a crash, documented on github by issue #504.nnIn order to prevent this from happening, this commit introduces a newnsystem to accumulate writes, implemented by a linked list of blocks ofn10 MB each, so that we also avoid paying the reallocation cost.nnNote that theoretically modern operating systems may implement realloc()nsimply as a remaping of the old pages, thus with very good performances,nsee for instance the mremap() syscall on Linux. However this is notnalways true, and jemalloc by default avoids doing this because there arenissues with the current implementation of mremap().nnFor this reason we are using a linked list of blocks instead of a singlenblock that gets reallocated again and again.nnThe changes in this commit lacks testing, that will be performed beforenmerging into the unstable branch. This fix will not enter 2.4 because itnis too invasive. However 2.4 will log a warning when the AOF rewritenbuffer is near to the 2GB limit.n",121.0,19.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.37313999012128174,9.0,1583.0,601.0,5.7832638888888885,5107.0,1.4529690851651822,1590.0,Corrective,True,True,"[""aacbba2607489e7f36f439b99e0bba3d4bfa9f9d"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35"", ""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
47ca4b6e28af49d1904f40fceacf58bb2907fbf2,6f05a653369fbbb9981449308c9e3f292011f9c5,antirez,antirez@gmail.com,Thu May 24 15:03:23 2012 +0200,1337864603,"Add aof_rewrite_buffer_length INFO field.The INFO output, persistence section, already contained the fieldndescribing the size of the current AOF buffer to flush on disk. Howevernthe other AOF buffer, used to accumulate changes during an AOF rewrite,nwas not mentioned in the INFO output.nnThis commit introduces a new field called aof_rewrite_buffer_length withnthe length of the rewrite buffer.n",2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2519.0,275.0,2.083125,5109.0,1.48004800480048,1591.0,Feature Addition,False,,
6f05a653369fbbb9981449308c9e3f292011f9c5,0bd6d68e34bc41cd80cd7fc44aab9cf3884de8dc,antirez,antirez@gmail.com,Wed May 16 16:23:09 2012 +0200,1337178189,"New commands: BITOP and BITCOUNT.The motivation for this new commands is to be search in the usage ofnRedis for real time statistics. See the article Fast real time metricsnusing Redis.nnhttp://blog.getspool.com/2011/11/29/fast-easy-realtime-metrics-using-redis-bitmaps/nnIn general Redis strings when used as bitmaps using the SETBIT/GETBITncommand provide a very space-efficient and fast way to store statistics.nFor instance in a web application with users, every user can benassociated with a key that shows every day in which the user visited thenweb service. This information can be really valuable to extract usernbehaviour information.nnWith Redis bitmaps doing this is very simple just saying that a givennday is 0 (the data the service was put online) and all the next days aren1, 2, 3, and so forth. So with SETBIT it is possible to set the bitncorresponding to the current day every time the user visits the site.nnIt is possible to take the count of the bit sets on the run, this isnextremely easy using a Lua script. However a fast bit count nativenoperation can be useful, especially if it can operate on ranges, or whennthe string is small like in the case of days (even if you consider manynyears it is still extremely little data).nnFor this reason BITOP was introduced. The command counts the number ofnbits set to 1 in a string, with optional range:nnBITCOUNT key [start end]nnThe start/end parameters are similar to GETRANGE. If omitted the wholenstring is tested.nnPopulation counting is more useful when bit-level operations like AND,nOR and XOR are avaialble. For instance I can test multiple users to seenthe number of days three users visited the site at the same time. To donthis we can take the AND of all the bitmaps, and then count the set bits.nnFor this reason the BITOP command was introduced:nnBITOP [AND|OR|XOR|NOT] dest_key src_key1 src_key2 src_key3 ... src_keyNnnIn the special case of NOT (that inverts the bits) only one source keyncan be passed.nnThe judicious use of BITCOUNT and BITOP combined can lead to interestingnuse cases with very space efficient representation of data.nnThe implementation provided is still not tested and optimized for speed,nnext commits will introduce unit tests. Later the implementation will benprofiled to see if it is possible to gain an important amount of speednwithout making the code much more complex.n",154.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",3.0,1.0,1.0,0.2718914404428693,9.0,1400.0,558.0,23.689020061728396,5111.0,0.9385892812484808,1594.0,Feature Addition,False,,
0bd6d68e34bc41cd80cd7fc44aab9cf3884de8dc,a3f2b4895b979bde1e99d6313d396b62c325ab72,antirez,antirez@gmail.com,Thu May 17 15:50:44 2012 +0200,1337262644,BITOP and BITCOUNT tests.The Redis implementation is tested against Tcl implementations of thensame operation. Both fuzzing and testing of specific aspects of thencommands behavior are performed.n,131.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.06466104967715193,7.0,221.0,73.0,2.966869212962963,5113.5,1.168527819768859,281.0,Preventative,False,True,"[""27fc01a7b864572b85f64aad5efffb7199ec0dba""]"
a3f2b4895b979bde1e99d6313d396b62c325ab72,760e7765263ff4b6d5176830c9e8e8d733744996,antirez,antirez@gmail.com,Sat May 19 10:33:20 2012 +0200,1337416400,"Bit-related string operations moved to bitop.cAll the general string operations are implemented in t_string.c, howevernthe bit operations, while targeting the string type, are better servednin a specific file where we have the implementations of the followingnfour commands and helper functions:nnGETBITnSETBITnBITOPnBITCOUNTnnIn the future this file will probably contain more code related tonmaking the BITOP and BITCOUNT operations faster.n",260.0,249.0,"src/Makefile,CAS_DELIMITER,src/bitop.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",3.0,1.0,1.0,1.032790939421938,9.0,278.6666666666667,123.0,4.11076774691358,5116.0,1.0966533628675574,1597.0,Perfective,False,True,"[""b62bdf1c643ee8ace697621464ee201300ee2f0e"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
760e7765263ff4b6d5176830c9e8e8d733744996,dbbbe49ef57c5c000469e206c81e5da58bf604ba,antirez,antirez@gmail.com,Sat May 19 16:16:25 2012 +0200,1337436985,"BITCOUNT refactoring.The low level popualtion counting function is now separated from thenBITCOUNT command implementation, so that the low level function can benfurther optimized and eventually used in other contexts if needed.n",25.0,12.0,"src/bitop.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,259.0,1.0,0.2382523148148148,5118.0,5.197230993441828,1598.0,None,False,,
dbbbe49ef57c5c000469e206c81e5da58bf604ba,343d3bd287b701ff3900527b5c920092f66fb592,antirez,antirez@gmail.com,Sun May 20 00:49:35 2012 +0200,1337467775,popcount() optimization for speed.We run the array by 32 bit words instead of processing it byte per byte.nIf the code is compiled using GCC __builtin_popcount() builtin functionnis used instead.n,18.0,2.0,"src/bitop.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,272.0,2.0,0.35636574074074073,5119.0,3.8061058785319912,1599.0,None,False,True,"[""746ce35f5f7296fbf829cfde031820ea8dffdc89""]"
343d3bd287b701ff3900527b5c920092f66fb592,01d3a7e7366d3d4c88755516334b182c5e5c2c51,antirez,antirez@gmail.com,Sun May 20 11:03:54 2012 +0200,1337504634,Bit operations tests improved.Fuzzing tests of BITCOUNT / BITOP are iterated multiple times.nThe new BITCOUNT fuzzing test uses random strings in a wider interval ofnlengths including zero-len strings.n,21.0,15.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,130.0,1.0,2.800810185185185,5120.0,1.3570395470887229,282.0,Feature Addition,False,,
01d3a7e7366d3d4c88755516334b182c5e5c2c51,80f8028e3c0d9948c3f1e1eb56cda1dbbf891d02,antirez,antirez@gmail.com,Sun May 20 11:06:29 2012 +0200,1337504789,bitop.c renamed bitops.cbitop.c contains the Bit related string operations so it seems morenlogical to call it bitops instead of bitop.nThis also makes it matching the name of the test (unit/bitops.tcl).n,289.0,289.0,"src/Makefile,CAS_DELIMITER,src/bitop.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER",3.0,1.0,1.0,1.0298101101291013,9.0,170.0,91.0,0.4838078703703704,5122.0,1.7851515550034087,1602.0,Preventative,False,,
80f8028e3c0d9948c3f1e1eb56cda1dbbf891d02,7c34643f154f543e1eef7c9855fb8d657146c646,antirez,antirez@gmail.com,Sun May 20 21:34:58 2012 +0200,1337542498,"BITCOUNT performance improved.At Redis's default optimization level the command is now much faster,nalways using a constant-time bit manipualtion technique to count bitsninstead of GCC builtin popcount, and unrolling the loop.nnThe current implementation performance is 1.5GB/s in a MBA 11 (1.8 Ghzni7) compiled with both GCC and clang.nnThe algorithm used is described here:nnhttp://graphics.stanford.edu/~seander/bithacks.htmln",22.0,13.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,288.0,1.0,0.4364467592592592,5124.0,3.2912302102946254,1603.0,None,False,,
7c34643f154f543e1eef7c9855fb8d657146c646,fa4a5d59220b1c9e7833b563cb7e9e314747bdf7,antirez,antirez@gmail.com,Tue May 22 17:40:20 2012 +0200,1337701220,"BITOP: handle integer encoded objects correctly.A bug in the implementation caused BITOP to crash the server if at leastnone one of the source objects was integer encoded.nnThe new implementation takes an additional array of Redis objectsnpointers and calls getDecodedObject() to get a reference to a stringnencoded object, and then uses decrRefCount() to release the object.nnTests modified to cover the regression and improve coverage.n",34.0,3.0,"src/bitops.c,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9994730201859836,9.0,216.5,4.0,2.0561805555555557,5125.5,1.3937586430579434,283.0,None,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5"", ""9d09ce3981deb58282ae47c87e1080936f04991f""]"
fa4a5d59220b1c9e7833b563cb7e9e314747bdf7,d866803818fb47a851e5730ccff634f993ce6f68,antirez,antirez@gmail.com,Wed May 23 22:12:50 2012 +0200,1337803970,"BITOP command 10x speed improvement.This commit adds a fast-path to the BITOP that can be used for all thenbytes from 0 to the minimal length of the string, and if there arenat max 16 input keys.nnOften the intersected bitmaps are roughly the same size, so thisnoptimization can provide a 10x speed boost to most real world usagesnof the command.nnBytes are processed four full words at a time, in loops specializednfor the specific BITOP sub-command, without the need to check fornlength issues with the inputs (since we run this algorithm only as farnas there is data from all the keys at the same time).nnThe remaining part of the string is intersected in the usual way usingnthe slow but generic algorith.nnIt is possible to do better than this with inputs that are not roughlynthe same size, sorting the input keys by length, by initializing thenresult string in a smarter way, and noticing that the final part of thenoutput string composed of only data from the longest string does notnneed any proecessing since AND, OR and XOR against an empty string doesnnot alter the output (zero in the first case, and the original string innthe other two cases).nnMore implementations will be implemented later likely, but this shouldnbe enough to release Redis 2.6-RC4 with bitops merged in.nnNote: this commit also adds better testing for BITOP NOT command, thatnis currently the faster and hard to optimize further since it justnflips the bits of a single input string.n",80.0,2.0,"src/bitops.c,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6006085754131871,9.0,232.0,6.0,1.1892361111111112,5127.5,1.6306569343065695,284.0,Feature Addition,False,,
d866803818fb47a851e5730ccff634f993ce6f68,33e1db36fa3948c8b9baa3991fd40e7f6b31fb9e,antirez,antirez@gmail.com,Fri May 25 12:11:30 2012 +0200,1337940690,"Four new persistence fields in INFO. A few renamed.The 'persistence' section of INFO output now contains additional fournfields related to RDB and AOF persistence:nn rdb_last_bgsave_time_sec   Duration of latest BGSAVE in sec.n rdb_current_bgsave_time_secDuration of current BGSAVE in sec.n aof_last_rewrite_time_sec  Duration of latest AOF rewrite in sec.n aof_current_rewrite_time_sec   Duration of current AOF rewrite in sec.nnThe 'current' fields are set to -1 if a BGSAVE / AOF rewrite is not innprogress. The 'last' fileds are set to -1 if no previous BGSAVE / AOFnrewrites were performed.nnAdditionally a few fields in the persistence section were renamed fornconsistency:nn changes_since_last_save -> rdb_changes_since_last_saven bgsave_in_progress -> rdb_bgsave_in_progressn last_save_time -> rdb_last_save_timen last_bgsave_status -> rdb_last_bgsave_statusn bgrewriteaof_in_progress -> aof_rewrite_in_progressn bgrewriteaof_scheduled -> aof_rewrite_schedulednnAfter the renaming, fields in the persistence section start with rdb_ ornaof_ prefix depending on the persistence method they describe.nThe field 'loading' and related fields are not prefixed because they arenunique for both the persistence methods.n",33.0,8.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.2609274833883517,9.0,1501.0,685.0,12.896270254629627,5130.5,1.1024123477741297,1609.0,Feature Addition,False,True,"[""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
33e1db36fa3948c8b9baa3991fd40e7f6b31fb9e,bc70b8e5f4a161db0efbc95e3afda884b85b5229,antirez,antirez@gmail.com,Fri May 25 15:20:59 2012 +0200,1337952059,Tests modified to account for INFO fields renaming.Commit 33e1db36fa3948c8b9baa3991fd40e7f6b31fb9e modified the name of anfew INFO fields. This commit changes the Redis test to account for thisnchanges.n,5.0,5.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9709505944546686,7.0,226.0,19.0,13.120763888888893,5133.5,1.1809394369234636,286.0,Preventative,False,,
bc70b8e5f4a161db0efbc95e3afda884b85b5229,1419406e8dd828f12b4810286d701b2b87ccd7ee,antirez,antirez@gmail.com,Thu May 31 21:45:39 2012 +0200,1338493539,"BITOP bug when called against non existing keys fixed.In the issue #529 an user reported a bug that can be triggered with thenfollowing code:nnflushdbnset anu0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000u0000nbitop or x a bnnThe bug was introduced with the speed optimization in commit 8bbc076nthat specializes every BITOP operation loop up to the minimum length ofnthe input strings.nnHowever the computation of the minimum length contained an error when annon existing key was present in the input, after a key that was non zeronlength.nnThis commit fixes the bug and adds a regression test for it.n",7.0,0.0,"src/bitops.c,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,9.0,271.0,8.0,7.981122685185183,5135.5,1.093971741769134,287.0,Corrective,True,,
1419406e8dd828f12b4810286d701b2b87ccd7ee,c7a25200e29f8ea3c1d42152ef22ef2020a1fd06,antirez,antirez@gmail.com,Sat Jun 2 10:21:57 2012 +0200,1338625317,"RDB type loading functions clarified in comments.Improved comments to make clear that rdbLoadType() just loads angeneral TYPE in the context of RDB that can be an object type or annexpire type, end-of-file, and so forth.nnWhile rdbLoadObjectType() enforces that the type is a valid Object Typenotherwise it returns -1.n",5.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1150.0,79.0,7.923923611111111,5137.0,1.1262001060431446,1611.0,None,False,,
c7a25200e29f8ea3c1d42152ef22ef2020a1fd06,51857c7e5cc6479323d53778e37a197f7c140fbf,Alex Mitrofanov,alexm@airg.com,Fri Jun 1 18:48:45 2012 -0700,1338601725,"Fixed RESTORE hash failure (Issue #532)(additional commit notes by antirez@gmail.com):nnThe rdbIsObjectType() macro was not updated when the new RDB object typenof ziplist encoded hashes was added.nnAs a result RESTORE, that uses rdbLoadObjectType(), failed when anziplist encoded hash was loaded.nThis does not affected normal RDB loading because in that case we usenthe lower-level function rdbLoadType().nnThe commit also adds a regression test.n",21.0,1.0,"src/rdb.h,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4394969869215134,9.0,100.0,12.0,50.995815972222225,0.5,0.5049023629729972,0.0,Corrective,True,,
51857c7e5cc6479323d53778e37a197f7c140fbf,80e808b6d6ca40580899bda0397d7c0d9b19b1a8,antirez,antirez@gmail.com,Sat Jun 2 23:29:57 2012 +0200,1338672597,"EVAL replication test: less false positives.wait_for_condition is now used instead of the usual after 1000 (thatnis the way to sleep in Tcl). This should avoid to find the replica inna state where it is loading the RDB in memory, returning -LOADING error.nnThis test used to fail when running the test over valgrind, due to thenadded latencies.n",8.0,4.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.6500224216483541,7.0,321.0,30.0,22.92432291666667,5138.5,1.0708606476403384,289.0,Preventative,False,,
80e808b6d6ca40580899bda0397d7c0d9b19b1a8,c0de45924c4033a8650b627e75b7fd6396c52187,antirez,antirez@gmail.com,Mon Jun 11 15:19:46 2012 +0200,1339420786,New test: hash ziplist -> hashtable encoding conversion.A new stress test was added to stress test the code converting a ziplistninto an hash table.nnIn this commit also randomValue helper function was modified to alsonreturn negative values.n,22.0,3.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9895875212220556,7.0,363.0,30.0,31.27545138888889,5140.5,1.0657329112030274,291.0,Feature Addition,False,,
c0de45924c4033a8650b627e75b7fd6396c52187,ee789e157c767be9cbf90af5232bfeacc533e308,antirez,antirez@gmail.com,Mon Jun 11 23:44:34 2012 +0200,1339451074,"Dump ziplist hex value on failed assertion.The ziplist -> hashtable conversion code is triggered every time an hashnvalue must be promoted to a full hash table because the number or size ofnelements reached the threshold.nnIf a problem in the ziplist causes the same field to be presentnmultiple times, the assertion of successful addition of the elementninside the hash table will fail, crashing server with a failednassertion, but providing little information about the problem.nnThis code adds a new logging function to perform the hex dump of binaryndata, and makes sure that the ziplist -> hashtable conversion code usesnthis new logging facility to dump the content of the ziplist when thenassertion fails.nnThis change was originally made in order to investigate issue #547.n",30.0,1.0,"src/debug.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",3.0,1.0,1.0,0.9042326000115628,9.0,900.0,323.0,42.358020833333335,5143.0,1.0212460198091402,1614.0,Corrective,True,,
ee789e157c767be9cbf90af5232bfeacc533e308,84d9ef4f3178a217eaf62c90b3fdbe240af975b4,antirez,antirez@gmail.com,Tue Jun 12 15:20:16 2012 +0200,1339507216,Added a new hash fuzzy tester.The new fuzzy tester also removes elements from the hash instead of justnadding random fields. This should increase the probability to find bugsnin the implementations of the hash type internal representations.n,38.0,1.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,433.0,16.0,1.0003472222222225,5145.0,1.9996528982992008,292.0,Corrective,True,,
84d9ef4f3178a217eaf62c90b3fdbe240af975b4,d665dd0865e3bfbd51b2bdaf1482edac861ecde1,Ted Nyman,ted@ted.io,Tue Jun 12 22:35:00 2012 -0700,1339565700,"Standardize punctuation in redis-cli help.Right there is a mix of help entries ending with periods ornwithout periods. This standardizes the end of command as withoutnperiods, which seems to be the general custom in most unix tools,nat least.n",6.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1277.0,69.0,29.582743055555557,0.0,0.0,0.0,None,False,,
84d9ef4f3178a217eaf62c90b3fdbe240af975b4 d665dd0865e3bfbd51b2bdaf1482edac861ecde1,96b8ff3760b18d2962410322a56308d8410917c8,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 13 01:25:52 2012 -0700,1339575952,Merge pull request #552 from tnm/unstableStandardize punctuation in redis-cli help.,,,,,,,,,,,,,,,Merge,False,,
96b8ff3760b18d2962410322a56308d8410917c8,ba779119b8b08294cdb776302638ee5b7b9b5b84,antirez,antirez@gmail.com,Thu Jun 14 15:59:25 2012 +0200,1339682365,"ziplistFind(): don't assume that entries are comparable by encoding.Because Redis 2.6 introduced new integer encodings it is no longer truenthat if two entries have a different encoding they are not equal.nnAn old ziplist can be loaded from an RDB file generated with Redis 2.4,nin this case for instance a small unsigned integers is encoded with an16 bit encoding, while in Redis 2.6 a more specific 8 bit encodingnformat is used.nnBecause of this bug hashes ended with duplicated values or fields lookupnfailed, causing many bad behaviors.nThis in turn caused a crash while converting the ziplist encoded hash intona real hash table because an assertion was raised on duplicated elements.nnThis commit fixes issue #547.nnMany thanks to Pinterest's Marty Weiner and colleagues for discoveringnthe problem and helping us in the debugging process.n",10.0,5.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1445.0,30.0,40.56459490740741,5146.0,1.0246520395996213,1615.0,None,False,,
ba779119b8b08294cdb776302638ee5b7b9b5b84,5b63ccce6c5a3b2097c87cc1b6af314c209172ef,antirez,antirez@gmail.com,Fri Jun 15 10:03:25 2012 +0200,1339747405,"Fix c->reply_bytes computation in setDeferredMultiBulkLength()In order to implement reply buffer limits introduced in 2.6 and usefulnto close the connection under user-selected circumastances of big outputnbuffers (for instance slow consumers in pub/sub, a blocked slave, and sonforth) Redis takes a counter with the amount of used memory in objectsninside the output list stored into c->reply.nnThe computation was broken in the function setDeferredMultiBulkLength(),nin the case the object was glued with the next one. This caused thenc->reply_bytes field to go out of sync, be subtracted more than needed,nand wrap back near to ULONG_MAX values.nnThis commit fixes this bug and adds an assertion that is able to trapnthis class of problems.nnThis problem was discovered looking at the INFO output of an unrelatednissue (issue #547).n",4.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1334.0,113.0,68.95038194444443,5147.0,1.0145031828947044,1616.0,Corrective,True,True,"[""dbaa5b0b9a0a68cb44f32b6fcc8d9dbf0b2fc49d""]"
5b63ccce6c5a3b2097c87cc1b6af314c209172ef,31a1439bfd6e24647f023281da65473047b69dfb,antirez,antirez@gmail.com,Thu Jun 21 11:50:01 2012 +0200,1340272201,"Fixed a timing attack on AUTH (Issue #560).The way we compared the authentication password using strcmp() allowednan attacker to gain information about the password using a well knownnclass of attacks called timing attacks.nnThe bug appears to be practically not exploitable in most modern systemsnrunning Redis since even using multiple bytes of differences in theninput at a time instead of one the difference in running time in in thenorder of 10 nanoseconds, making it hard to exploit even on LAN. Howevernattacks always get better so we are providing a fix ASAP.nnThe new implementation uses two fixed length buffers and a constant timencomparison function, with the goal of:nn1) Completely avoid leaking information about the content of thenpassword, since the comparison is always performed between 512ncharacters and without conditionals.n2) Partially avoid leaking information about the length of thenpassword.nnAbout 2 we still have a stage in the code where the real password andnthe user provided password are copied in the static buffers, we also runntwo strlen() operations against the two inputs, so the running timenof the comparison is a fixed amount plus a time proportional tonLENGTH(A)+LENGTH(B). This means that the absolute time of the operationnperformed is still related to the length of the password in some way,nbut there is no way to change the input in order to get a difference innthe execution time in the comparison that is not just proportional tonthe string provided by the user (because the password length is fixed).nnThus in practical terms the user should try to discover LENGTH(PASSWORD)nlooking at the whole execution time of the AUTH command and trying tonguess a proportionality between the whole execution time and thenpassword length: this appears to be mostly unfeasible in the real world.nnAlso protecting from this attack is not very useful in the case of Redisnas a brute force attack is anyway feasible if the password is too short,nwhile with a long password makes it not an issue that the attacker knowsnthe length.n",49.0,1.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6073635558851669,9.0,1553.0,591.0,33.500597993827164,5149.0,1.012187055621134,1619.0,Corrective,True,True,"[""5410168c6ece740e0bd179d5a6fd45739f18ae32""]"
31a1439bfd6e24647f023281da65473047b69dfb,5410168c6ece740e0bd179d5a6fd45739f18ae32,antirez,antirez@gmail.com,Thu Jun 21 14:25:53 2012 +0200,1340281553,Fixed comment typo into time_independent_strcmp().,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2579.0,279.0,0.10824074074074072,5151.0,10.238665526090676,1620.0,Corrective,True,,
5410168c6ece740e0bd179d5a6fd45739f18ae32,3a32897856ec77c77be5dd8e69623dd3624035fc,antirez,antirez@gmail.com,Tue Jun 26 09:47:47 2012 +0200,1340696867,"REPLCONF internal command introduced.The REPLCONF command is an internal command (not designed to be directlynused by normal clients) that allows a slave to set some replicationnrelated state in the master before issuing SYNC to start thenreplication.nnThe initial motivation for this command, and the only reason currentlynit is used by the implementation, is to let the slave instancencommunicate its listening port to the slave, so that the master cannshow all the slaves with their listening ports in the replicationnsection of the INFO output.nnThis allows clients to auto discover and query all the slaves attachedninto a master.nnCurrently only a single option of the REPLCONF command is supported, andnit is called listening-port, so the slave now starts the replicationnprocess with something like the following chat:nnREPLCONF listening-prot 6380nSYNCnnNote that this works even if the master is an older version of Redis andndoes not understand REPLCONF, because the slave ignores the REPLCONFnerror.nnIn the future REPLCONF can be used for partial replication and othernreplication related features where there is the need to exchangeninformation between master and slave.nnNOTE: This commit also fixes a bug: the INFO outout already carriedninformation about slaves, but the port was broken, and was obtainednwith getpeername(2), so it was actually just the ephemeral port usednby the slave to connect to the master as a client.n",110.0,18.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,0.34136841652472194,9.0,1437.0,684.0,13.409108796296294,5153.5,1.055308311363348,1624.0,Feature Addition,False,True,"[""498f65ffb77e7fab9c9085394657ba7b46bedde9"", ""e8d68b6b72c7bbba63120d9024138dacd583d22d""]"
3a32897856ec77c77be5dd8e69623dd3624035fc,36def8fd9a4f562612e00ecbc7b5ff46b5809ba3,antirez,antirez@gmail.com,Wed Jun 27 11:26:37 2012 +0200,1340789197,Typo in comment.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,697.0,40.0,1.0686342592592593,5156.0,1.9357738546517929,1625.0,None,False,,
36def8fd9a4f562612e00ecbc7b5ff46b5809ba3,93b0075d33292bb74bccb60d205da2c2f2041f1d,jokea,tfengjun@gmail.com,Fri Jun 29 12:06:38 2012 +0800,1340942798,mark fd as writable when EPOLLERR or EPOLLHUP is returned by epoll_wait.,2.0,0.0,"src/ae_epoll.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,101.0,4.0,196.71971064814807,2.0,1.0050833746994912,2.0,None,False,,
36def8fd9a4f562612e00ecbc7b5ff46b5809ba3,9edfe63553314fc2258392db94bfce8a4144b303,Saj Goonatilleke,sg@redu.cx,Thu Jul 5 14:29:27 2012 +1000,1341462567,"Bug fix: slaves being pinged every secondREDIS_REPL_PING_SLAVE_PERIOD controls how often the master shouldntransmit a heartbeat (PING) to its slaves.  This period, which defaultsnto 10, is measured in seconds.nnRedis 2.4 masters used to ping their slaves every ten seconds, just likenit says on the tin.nnThe Redis 2.6 masters I have been experimenting with, on the other hand,nping their slaves *every second*.  (master_last_io_seconds_ago nevernapproaches 10.)  I think the ping period was inadvertently slashed tonone-tenth of its nominal value around the time REDIS_HZ was introduced.nThis commit reintroduces correct ping schedule behaviour.n",2.0,2.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,9.0,960.5,293.0,8.32795138888889,0.5,0.5300193875211073,1.0,Corrective,True,,
36def8fd9a4f562612e00ecbc7b5ff46b5809ba3 93b0075d33292bb74bccb60d205da2c2f2041f1d,a2db8e4801968c5a5a163390aec17027810bae38,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 9 03:14:08 2012 -0700,1341828848,Merge pull request #569 from jokea/unstablemark fd as writable when EPOLLERR or EPOLLHUP is returned by epoll_wait.,,,,,,,,,,,,,,,Merge,False,,
b62bdf1c643ee8ace697621464ee201300ee2f0e,e9828cb6f7a13caf57ad6caf861812b687c8339c,Steeve Lennmark,steevel@handeldsbanken.se,Sun Jul 15 14:35:02 2012 +0200,1342355702,Check that we have connection before enabling pipe mode,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1277.0,70.0,32.291689814814816,0.0,0.0,0.0,None,False,,
a2db8e4801968c5a5a163390aec17027810bae38,48553a29e8c56fcc21f77b284a4d3a3448a75e1e,Saj Goonatilleke,sg@redu.cx,Tue Jul 17 12:06:53 2012 +1000,1342490813,New in INFO: aof_last_bgrewrite_statusBehaves like rdb_last_bgsave_status -- even down to reporting 'ok' whennno rewrite has been done yet.  (You might want to check thatnaof_last_rewrite_time_sec is not -1.)n,13.0,3.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.2475562489182657,9.0,1642.0,617.0,28.44257330246913,3.0,1.0147756794008007,4.0,Feature Addition,False,,
a2db8e4801968c5a5a163390aec17027810bae38,55302e9e285d13ae5eda021420d1a3ea6ca21afc,Saj Goonatilleke,sg@redu.cx,Mon Jul 16 15:33:25 2012 +1000,1342416805,"Truncate short write from the AOFIf Redis only manages to write out a partial buffer, the AOF file won'tnload back into Redis the next time it starts up.  It is better tondiscard the short write than waste time running redis-check-aof.n",7.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1128.0,84.0,-0.856574074074074,5.0,-0.1674413576910605,5.0,Perfective,False,,
a2db8e4801968c5a5a163390aec17027810bae38,b62bdf1c643ee8ace697621464ee201300ee2f0e,antirez,antirez@gmail.com,Wed Jul 18 12:01:43 2012 +0200,1342605703,"Don't assume that char is signed.For the C standard char can be either signed or unsigned, it's up to thencompiler, but Redis assumed that it was signed in a few places.nnThe practical effect of this patch is that now Redis 2.6 will runncorrectly in every system where char is unsigned, notably the RaspBerrynPI and other ARM systems with GCC.nnThanks to Georgi Marinov (@eesn on twitter) that reported the problemnand allowed me to use his RaspBerry via SSH to trace and fix the issue!n",7.0,7.0,"src/bitops.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,9.0,915.0,36.0,40.71471064814815,5157.5,1.0166457043766766,1627.0,Corrective,True,,
b62bdf1c643ee8ace697621464ee201300ee2f0e e9828cb6f7a13caf57ad6caf861812b687c8339c,cddf5946fcdf5f9860d0e2a1b90135d8c25b5841,Salvatore Sanfilippo,antirez@gmail.com,Sat Jul 21 11:12:35 2012 -0700,1342894355,Merge pull request #593 from steevel/unstableCheck that we have connection before enabling pipe mode,,,,,,,,,,,,,,,Merge,False,,
b62bdf1c643ee8ace697621464ee201300ee2f0e,5d73073f6eaa391fe01ce202d1de95c27da5ec0b,antirez,antirez@gmail.com,Sun Jul 22 17:13:49 2012 +0200,1342970029,"Allow Pub/Sub in contexts where other commands are blocked.Redis loading data from disk, and a Redis slave disconnected from itsnmaster with serve-stale-data disabled, are two conditions wherencommands are normally refused by Redis, returning an error.nnHowever there is no reason to disable Pub/Sub commands as well, givennthat this layer does not interact with the dataset. To allow Pub/Sub innas many contexts as possible is especially interesting now that RedisnSentinel uses Pub/Sub of a Redis master as a communication channelnbetween Sentinels.nnThis commit allows Pub/Sub to be used in the above two contexts wherenit was previously denied.n",21.0,12.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.32984607020714635,9.0,1904.0,536.0,5.546481481481482,5159.5,1.1352208607392074,1629.0,None,False,,
5d73073f6eaa391fe01ce202d1de95c27da5ec0b cddf5946fcdf5f9860d0e2a1b90135d8c25b5841,03f412ddef44726ac32fa2f33a40037adb1b1b13,antirez,antirez@gmail.com,Sun Jul 22 17:18:42 2012 +0200,1342970322,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
03f412ddef44726ac32fa2f33a40037adb1b1b13,6b5daa2df2a0711a25746cb025927dc3deb7717e,antirez,antirez@gmail.com,Mon Jul 23 12:54:52 2012 +0200,1343040892,"First implementation of Redis Sentinel.This commit implements the first, beta quality implementation of RedisnSentinel, a distributed monitoring system for Redis with notificationnand automatic failover capabilities.nnMore info at http://redis.io/topics/sentineln",2614.0,44.0,".gitignore,CAS_DELIMITER,sentinel.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",8.0,2.0,2.0,0.5880827438195814,9.0,667.5,724.0,55.67922309027777,5164.5,1.0028533207018742,1635.0,Corrective,True,True,"[""f0266532fc82b8ae9a87407adaf4555dddce690e"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""4178a80282ac917a48771da2c2d1ee65bc562161"", ""86a540a66e3a429ada1efe25534c8db255ac9895"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""ae0b7680b38e97d5aca5cb17e25eb380b101fecd"", ""0f8df3df417a22ce8f34e4c21b09f8ff5eb60320"", ""7e63dd23f3faae7a399617128ffef224e0f21754"", ""7a5538d3a90ffbfa618b0f8776564db617616752""]"
6b5daa2df2a0711a25746cb025927dc3deb7717e,be2be3d903409fa48d43488541b4919f4645ac4c,antirez,antirez@gmail.com,Mon Jul 23 15:06:55 2012 +0200,1343048815,Typo.,1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,41.0,1.0,0.09170138888888887,5169.0,11.904960242332447,1291.0,None,False,,
be2be3d903409fa48d43488541b4919f4645ac4c,1bbdf1709ff6b9b3c8ee4b77cefe251be8969707,antirez,antirez@gmail.com,Mon Jul 23 15:08:36 2012 +0200,1343048916,Fixed an error in the example sentinel.conf.,1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,41.0,2.0,0.0011689814814814813,5170.0,856.4455445544554,1292.0,Corrective,True,,
1bbdf1709ff6b9b3c8ee4b77cefe251be8969707,d876d6feacf2ecf4917c558c2d6b4d0e900ae4d7,antirez,antirez@gmail.com,Tue Jul 24 12:42:40 2012 +0200,1343126560,"Sentinel: more robust failover detection as observer.Sentinel observers detect failover checking if a slave attached to thenmonitored master turns into its replication state from slave to master.nHowever while this change may in theory only happen after a SLAVEOF NOnONE command, in practie it is very easy to reboot a slave instance withna wrong configuration that turns it into a master, especially if it wasna past master before a successfull failover.nnThis commit changes the detection policy so that if an instance goesnfrom slave to master, but at the same time the runid has changed, wensense a reboot, and in that case we don't detect a failover at all.nnThis commit also introduces the reboot sentinel event, that is loggednat warning level (so this will trigger an admin notification).nnThe commit also fixes a problem in the disconnect handler that assumednthat the instance object always existed, that is not the case. Now wenno longer assume that redisAsyncFree() will call the disconnectionnhandler before returning.n",31.0,6.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2439.0,1.0,0.9915277777777778,5171.0,2.0085446140916092,1636.0,None,False,,
d876d6feacf2ecf4917c558c2d6b4d0e900ae4d7,2179c269160e4de6b80e83133081cd47b472716e,antirez,antirez@gmail.com,Tue Jul 24 16:35:23 2012 +0200,1343140523,Sentinel: check that instance still exists in reply callbacks.We can't be sure the instance object still exists when the replyncallback is called.n,10.0,10.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2464.0,2.0,0.1616087962962963,5172.0,7.187781995273223,1637.0,None,False,,
2179c269160e4de6b80e83133081cd47b472716e,75fb6e5b8a56cdbc43a6e207db306089fc55aba2,antirez,antirez@gmail.com,Tue Jul 24 18:15:44 2012 +0200,1343146544,"Sentinel: changes to connection handling and redirection.We disconnect the Redis instances hiredis link in a more robust way now.nAlso we change the way we perform the redirection for the +switch-masternevent, that is not just an instance reset with an address change.nnUsing the same system we now implement the +redirect-to-master eventnthat is triggered by an instance that is configured to be master butnfound to be a slave at the first INFO reply. In that case we monitor thenmaster instead, logging the incident as an event.n",87.0,53.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2464.0,3.0,0.0696875,5173.0,15.349775784753366,1638.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
75fb6e5b8a56cdbc43a6e207db306089fc55aba2,d918e6f127f60efd7b9fd23ba3413eb441240e0f,antirez,antirez@gmail.com,Tue Jul 24 18:20:05 2012 +0200,1343146805,Sentinel: debugging message removed.,0.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2498.0,4.0,0.003020833333333333,5174.0,332.0344827586207,1639.0,None,False,,
d918e6f127f60efd7b9fd23ba3413eb441240e0f,a23a5b6c7de0f4fdb22b0d06b06e038004d48546,antirez,antirez@gmail.com,Tue Jul 24 18:46:04 2012 +0200,1343148364,"Prevent a spurious +sdown event on switch.When we reset the master we should start with clean timestamps for pingnreplies otherwise we'll detect a spurious +sdown event, because onn+master-switch event the previous master instance was probably in +sdownncondition. Since we updated the address we should count time fromnscratch again.nnAlso this commit makes sure to explicitly reset the count of pendingncommands, now we can do this because of the new way the hiredis linknis closed.n",3.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2497.0,5.0,0.01804398148148148,5175.0,56.42014111610008,1640.0,Feature Addition,False,,
a23a5b6c7de0f4fdb22b0d06b06e038004d48546,9e5bef38e6cb43d8d5ee12ab1114e424ae69d693,antirez,antirez@gmail.com,Tue Jul 24 18:57:26 2012 +0200,1343149046,Sentinel: reset pending_commands in a more generic way.,4.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2500.0,6.0,0.007893518518518518,5176.0,127.68621700879768,1641.0,None,False,,
9e5bef38e6cb43d8d5ee12ab1114e424ae69d693,672102c2ceb4bfc24fcbec96f0cd79118a873d72,antirez,antirez@gmail.com,Wed Jul 25 11:32:19 2012 +0200,1343208739,"Sentinel: abort failover if no good slave is available.The previous behavior of the state machine was to wait some time andnretry the slave selection, but this is not robust enough against drasticnchanges in the conditions of the monitored instances.nnWhat we do now when the slave selection fails is to abort the failovernand return back monitoring the master. If the ODOWN condition is stillnpresent a new failover will be triggered and so forth.nnThis commit also refactors the code we use to abort a failover.n",45.0,29.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2502.0,7.0,0.6908912037037037,5177.0,2.447405893488349,1642.0,None,False,,
9e5bef38e6cb43d8d5ee12ab1114e424ae69d693,23023fc626ef10a683f1afca0cd0ce7b00c4d8da,mrb,michaelrbernstein@gmail.com,Wed Jul 25 09:52:26 2012 -0400,1343224346,Some cleanup in sentinel.conf,11.0,3.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,41.0,3.0,2.0304398148148146,0.0,0.0,0.0,Perfective,False,,
9e5bef38e6cb43d8d5ee12ab1114e424ae69d693,f1c8661e74ab1b6c45669f4a998484dfe54ed2d3,mrb,michaelrbernstein@gmail.com,Wed Jul 25 09:55:53 2012 -0400,1343224553,Fix warning in redis.c for sentinel config load,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2627.0,284.0,2.1257060185185184,1.0,1.4704319371015078,0.0,Corrective,True,,
672102c2ceb4bfc24fcbec96f0cd79118a873d72 23023fc626ef10a683f1afca0cd0ce7b00c4d8da,7c15dd15965e659f822d1620b006caba06d5e298,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 25 07:15:02 2012 -0700,1343225702,Merge pull request #602 from mrb/sentinel_docsSome cleanup in sentinel.conf,,,,,,,,,,,,,,,Merge,False,,
7c15dd15965e659f822d1620b006caba06d5e298 f1c8661e74ab1b6c45669f4a998484dfe54ed2d3,42c571864e38016d5711e4cd55fb87dd411a064e,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 25 07:15:53 2012 -0700,1343225753,Merge pull request #603 from mrb/fix_sentinel_config_warningFix warning in redis.c for sentinel config load,,,,,,,,,,,,,,,Merge,False,,
42c571864e38016d5711e4cd55fb87dd411a064e,baace5fc42dbe527a452d8864f37716d644f444a,antirez,antirez@gmail.com,Wed Jul 25 16:33:37 2012 +0200,1343226817,Sentinel: ability to execute notification scripts.,95.0,11.0,"sentinel.conf,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,2.0,2.0,0.905200296956048,9.0,1283.5,12.0,0.11891782407407407,5178.5,20.58509256797312,1643.0,None,False,True,"[""d956d809acb848aec0f6524e1337d274a635980d""]"
baace5fc42dbe527a452d8864f37716d644f444a,7617a6f272474c433c1d2e8884c8a174e91ff9bd,Jeremy Zawodny,Jeremy@Zawodny.com,Wed Jul 25 08:29:11 2012 -0700,1343230151,comment fiximprove English a bit. :-),1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,73.0,5.0,0.03858796296296296,2.0,26.91481703659268,2.0,Corrective,True,,
baace5fc42dbe527a452d8864f37716d644f444a 7617a6f272474c433c1d2e8884c8a174e91ff9bd,a3593ee4d09b28142850694a2a0d977eac4819c1,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 25 08:31:57 2012 -0700,1343230317,Merge pull request #604 from jzawodn/patch-1comment fix,,,,,,,,,,,,,,,Merge,False,,
baace5fc42dbe527a452d8864f37716d644f444a,ce7b838fb9a06aae7b0fcac8617577700fc89917,antirez,antirez@gmail.com,Thu Jul 26 12:09:40 2012 +0200,1343297380,Sentinel: don't start a failover as leader if there is no good slave.,6.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2578.0,9.0,0.8167013888888889,5180.0,2.2244377364907955,1644.0,None,False,,
a3593ee4d09b28142850694a2a0d977eac4819c1 48553a29e8c56fcc21f77b284a4d3a3448a75e1e,04950a9e4dfb74a132e523ccbb7932a2394b832a,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 27 03:55:20 2012 -0700,1343386520,Merge pull request #586 from saj/aof_last_bgrewrite_statusNew in INFO: aof_last_bgrewrite_status,,,,,,,,,,,,,,,Merge,False,,
04950a9e4dfb74a132e523ccbb7932a2394b832a 55302e9e285d13ae5eda021420d1a3ea6ca21afc,ed7b308c1c369d7a004b6f7a72e01ad1eddb5ac3,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 27 03:56:48 2012 -0700,1343386608,Merge pull request #587 from saj/truncate-short-write-from-aofTruncate short write from the AOF,,,,,,,,,,,,,,,Merge,False,,
ed7b308c1c369d7a004b6f7a72e01ad1eddb5ac3,c6c19c8372fd9258a35b7d4bdcb454898e6c1413,Jan-Erik Rediger,badboy@archlinux.us,Sat Jul 28 12:33:01 2012 +0300,1343467981,Include sys/wait.h to avoid compiler warninggcc warned about an implicit declaration of function 'wait3'. rnIncluding this header fixes this.,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2583.0,10.0,1.9745486111111108,0.0,0.0,0.0,Corrective,True,,
ed7b308c1c369d7a004b6f7a72e01ad1eddb5ac3 c6c19c8372fd9258a35b7d4bdcb454898e6c1413,f3a61431999ce99b1823de8ba7d8566a22d7566e,Salvatore Sanfilippo,antirez@gmail.com,Sat Jul 28 02:51:56 2012 -0700,1343469116,Merge pull request #606 from badboy/patch-1Include sys/wait.h to avoid compiler warning,,,,,,,,,,,,,,,Merge,False,,
ce7b838fb9a06aae7b0fcac8617577700fc89917,78b606acc2b70c5e97368fb4e72b73043c90c2dc,Jeremy Zawodny,Jeremy@Zawodny.com,Wed Jul 25 08:29:11 2012 -0700,1343230151,comment fiximprove English a bit. :-)n,1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,73.0,6.0,0.0,3.0,0.0,3.0,Corrective,True,,
78b606acc2b70c5e97368fb4e72b73043c90c2dc,3f194a9d2571df21717b635f037040407a51d50d,antirez,antirez@gmail.com,Fri Jul 27 10:39:39 2012 +0200,1343378379,"Sentinel: scripts execution engine improved.We no longer use a vanilla fork+execve but take a queue of jobs ofnscripts to execute, with retry on error, timeouts, and so forth.nnCurrently this is used only for notifications but soon the ability tonalso call clients reconfiguration scripts will be added.n",284.0,47.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2584.0,11.0,-1.0370601851851853,5181.0,0.03573580946853872,1645.0,None,False,,
3f194a9d2571df21717b635f037040407a51d50d f3a61431999ce99b1823de8ba7d8566a22d7566e,7f5bdba4343cf32c8ae7d38a3f6d0d163677c14c,antirez,antirez@gmail.com,Sat Jul 28 20:55:17 2012 +0200,1343501717,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
7f5bdba4343cf32c8ae7d38a3f6d0d163677c14c,75084e057dcbd0cefbd1ee035c367320f2257de6,antirez,antirez@gmail.com,Tue Jul 31 10:14:23 2012 +0200,1343722463,"Sentinel: abort failover when in wait-start if master is back.When we are a Leader Sentinel in wait-start state, starting with thisncommit the failover is aborted if the master returns online.nnThis improves the way we handle a notable case of net split, that is thensplit between Sentinels and Redis servers, that will be a very commonncase of split becase Sentinels will often be installed in the client'snnetwork and servers can be in a differnt arm of the network.nnWhen Sentinels and Redis servers are isolated the master is in ODOWNncondition since the Sentinels can agree about this state, however thenfailover does not start since there are no good slaves to promote (innthis specific case all the slaves are unreachable).nnHowever when the split is resolved, Sentinels may sense the slave backna moment before they sense the master is back, so the failover may startnwithout a good reason (since the master is actually working too).nnNow this condition is reversible, so the failover will be abortednimmediately after if the master is detected to be working again, thatnis, not in SDOWN nor in ODOWN condition.n",18.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2821.0,12.0,3.9824537037037038,5182.0,1.2511014752211669,1646.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
75084e057dcbd0cefbd1ee035c367320f2257de6,ed2a691aba0cea2e789290d8d388cc8091703577,antirez,antirez@gmail.com,Tue Jul 31 11:05:21 2012 +0200,1343725521,Sentinel: sentinel.conf self-documenation improved.,21.0,0.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,73.0,7.0,5.733449074074074,5183.0,1.1744150836748288,1294.0,None,False,,
ed2a691aba0cea2e789290d8d388cc8091703577,f1d187bb3ece6b4b13a6b74e8e5ccab9fe9d40ff,Michael Parker,michael.g.parker@gmail.com,Wed Jul 25 23:51:22 2012 -0700,1343285482,"Use correct variable name for value to convert.Note by @antirez: this code was never compiled because utils.c lacked thenfloat.h include, so we never noticed this variable was mispelled in thenpast.nnThis should provide a noticeable speed boost when saving certain typesnof databases with many sorted sets inside.n",2.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,490.0,10.0,139.9046064814815,0.0,0.0,0.0,None,False,,
f1d187bb3ece6b4b13a6b74e8e5ccab9fe9d40ff,91c15ed1b51a0cd097e5c8b0d77edb07f460a866,antirez,antirez@gmail.com,Tue Jul 31 16:18:15 2012 +0200,1343744295,Sentinel: sentinelRefreshInstanceInfo() comments improved a bit.,6.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2839.0,13.0,0.2526851851851852,5184.0,4.9574935873946515,1647.0,None,False,,
91c15ed1b51a0cd097e5c8b0d77edb07f460a866,fd92b366b0ebe325a2c39e66fecdc2f1cbda6936,antirez,antirez@gmail.com,Tue Jul 31 17:11:26 2012 +0200,1343747486,"Sentinel: when leader in wait-start, sense another leader as race.When we are in wait start, if another leader (or any other externalnentity) turns a slave into a master, abort the failover, and detect itnas an observer.nnNote that the wait-start state is mainly there for this reason but thenabort was yet not implemented.nnThis adds a new sentinel event -failover-abort-race.n",30.0,19.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2841.0,14.0,0.036932870370370366,5185.0,28.07615167659041,1648.0,None,False,,
fd92b366b0ebe325a2c39e66fecdc2f1cbda6936,2dccf1e4ce100312805aea8984ca7a1a9d7a3703,Tobias Schwab,tobstarr@gmail.com,Thu Aug 2 15:10:51 2012 +0300,1343909451,Fix version numbers,1.0,1.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,85.0,12.0,145.1055324074074,0.0,0.0,0.0,Corrective,True,,
fd92b366b0ebe325a2c39e66fecdc2f1cbda6936 2dccf1e4ce100312805aea8984ca7a1a9d7a3703,2990c366e8286a057fb016b078b00af2476c6be1,Salvatore Sanfilippo,antirez@gmail.com,Thu Aug 2 05:37:10 2012 -0700,1343911030,Merge pull request #613 from tobstarr/patch-1Fix version numbers,,,,,,,,,,,,,,,Merge,False,,
2990c366e8286a057fb016b078b00af2476c6be1,6275004ca6c5a127c84158a290e9524c5ef5c410,antirez,antirez@gmail.com,Thu Aug 2 18:40:30 2012 +0200,1343925630,"Sentinel: client reconfiguration script execution.This commit adds support to optionally execute a script when one of thenfollowing events happen:nn* The failover starts (with a slave already promoted).n* The failover ends.n* The failover is aborted.nnThe script is called with enough parameters (documented in the examplensentinel.conf file) to provide information about the old and new ip:portnpair of the master, the role of the sentinel (leader or observer) andnthe name of the master.nnThe goal of the script is to inform clients of the configuration changenin a way specific to the environment Sentinel is running, that can't benimplemented in a genereal way inside Sentinel itself.n",79.0,0.0,"sentinel.conf,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,2.0,2.0,0.9971085167216718,9.0,1473.0,23.0,2.1889641203703705,5186.5,1.3300916167521484,1649.0,None,False,,
6275004ca6c5a127c84158a290e9524c5ef5c410,cada7f9671da8af04400853bed3f3bc1790a522a,antirez,antirez@gmail.com,Fri Aug 3 12:39:13 2012 +0200,1343990353,"Sentinel: SENTINEL FAILOVER command implemented.This command can be used in order to force a Sentinel instance to startna failover for the specified master, as leader, forcing the failoverneven if the master is up.nnThe commit also adds some minor refactoring and other improvements tonfunctions already implemented that make them able to work when thenmaster is not in SDOWN condition. For instance slave selectionnassumed that we ask INFO every second to every slave, this is truenonly when the master is in SDOWN condition, so slave selection did notnworked when the master was not in SDOWN condition.n",65.0,24.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2894.0,16.0,0.7491087962962963,5188.0,2.3349195803655576,1650.0,None,False,,
cada7f9671da8af04400853bed3f3bc1790a522a,5117c20ab5558e5d68b1a3c7751610cd6c4279db,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 13 14:09:40 2012 -0700,1344892180,Add ziplist test for deleting next to last entries,53.0,0.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1450.0,32.0,26.46385416666667,947.0,1.0377873908200257,426.0,Feature Addition,False,True,"[""fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70""]"
5117c20ab5558e5d68b1a3c7751610cd6c4279db,3cc2904e3e0d5a3bb3663737a5601f91226fe67c,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Aug 13 12:39:49 2012 -0700,1344886789,Set p to its new offset before modifying it,8.0,7.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1503.0,33.0,-0.062395833333333324,948.0,-15.026711185308848,427.0,Feature Addition,False,,
cada7f9671da8af04400853bed3f3bc1790a522a,d6704c9bd0f03f277ee23a4e3e1fc86a74e130b3,antirez,antirez@gmail.com,Tue Aug 21 17:27:01 2012 +0200,1345562821,hiredis library updated.This version of hiredis merges modifications of the Redis fork withnlatest changes in the hiredis repository.nnThe same version was pushed on the hiredis repository and will probablynmerged into the master branch in short time.n,90.0,28.0,"deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER",5.0,1.0,1.0,2.009447014066524,7.0,587.2,34.0,183.8315717592593,5191.0,1.0024841398616402,472.0,Non Functional,False,,
d6704c9bd0f03f277ee23a4e3e1fc86a74e130b3,227b4293647d51244771d16f0ad14bc94a2b3ad9,antirez,antirez@gmail.com,Tue Aug 21 17:31:44 2012 +0200,1345563104,redis-benchmark: disable big buffer cleanup in hiredis context.This new hiredis features allows us to reuse a previous context readernbuffer even if already very big in order to maximize performances withnbig payloads (Usually hiredis re-creates buffers when they are too bignand unused in order to save memory).n,2.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,676.0,32.0,177.27103009259258,5194.0,1.0056410796478008,1651.0,None,False,,
227b4293647d51244771d16f0ad14bc94a2b3ad9 3cc2904e3e0d5a3bb3663737a5601f91226fe67c,724371d748b86da4459e42c8d855d07aef20bdb3,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 22 02:32:27 2012 -0700,1345627947,Merge pull request #628 from pietern/unstable-zipFix ziplist edge case,,,,,,,,,,,,,,,Merge,False,,
724371d748b86da4459e42c8d855d07aef20bdb3,01477753e6dae515d31950d94e69e132ef4ed0b4,antirez,antirez@gmail.com,Fri Aug 24 12:10:24 2012 +0200,1345803024,Sentinel: fixed a crash on script execution.The call to sentinelScheduleScriptExecution() lacked the final NULLnargument to signal the end of arguments. This resulted into a crash.n,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2935.0,17.0,20.979988425925924,5195.0,1.0476644686211674,1652.0,None,False,,
01477753e6dae515d31950d94e69e132ef4ed0b4,850789ce73dbb236591692708437e1bd705dbce3,antirez,antirez@gmail.com,Fri Aug 24 12:29:54 2012 +0200,1345804194,"Sentinel: send SCRIPT KILL on -BUSY reply and SDOWN instance.From the point of view of Redis an instance replying -BUSY is down,nsince it is effectively not able to reply to user requests. Howeverna looping script is a recoverable condition in Redis if the script stillndid not performed any write to the dataset. In that case performing anfail over is not optimal, so Sentinel now tries to restore the normal serverncondition killing the script with a SCRIPT KILL command.nnIf the script already performed some write before entering an infiniten(or long enough to timeout) loop, SCRIPT KILL will not work and thenfail over will be triggered anyway.n",13.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2935.0,18.0,0.013541666666666669,5196.0,74.84615384615384,1653.0,None,False,,
850789ce73dbb236591692708437e1bd705dbce3,6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee,antirez,antirez@gmail.com,Fri Aug 24 12:55:37 2012 +0200,1345805737,"Better Out of Memory handling.The previous implementation of zmalloc.c was not able to handle out ofnmemory in an application-specific way. It just logged an error onnstandard error, and aborted.nnThe result was that in the case of an actual out of memory in Redisnwhere malloc returned NULL (In Linux this actually happens undernspecific overcommit policy settings and/or with no or little swapnconfigured) the error was not properly logged in the Redis log.nnThis commit fixes this problem, fixing issue #509.nNow the out of memory is properly reported in the Redis log and a stackntrace is generated.nnThe approach used is to provide a configurable out of memory handlernto zmalloc (otherwise the default one logging the event on thenstandard output is used).n",25.0,18.0,"src/cluster.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",5.0,1.0,1.0,1.6725330217061212,10.0,1126.4,436.0,95.24269212962965,5199.0,1.0045008084504623,1658.0,Corrective,True,,
6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee,1caa627e4e53c479f1ee1f1f80b1b980d55eef7f,antirez,antirez@gmail.com,Fri Aug 24 15:40:22 2012 +0200,1345815622,Fix a forget zmalloc_oom() -> zmalloc_oom_handler() replacement.,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,326.0,17.0,0.11440972222222222,5202.0,9.740515933232171,1659.0,Corrective,True,,
1caa627e4e53c479f1ee1f1f80b1b980d55eef7f,784b93087c622999e225735c0c76d50241941022,antirez,antirez@gmail.com,Fri Aug 24 19:28:44 2012 +0200,1345829324,"Incrementally flush RDB on disk while loading it from a master.This fixes issue #539.nnBasically if there is enough free memory the OS may buffer the RDB filenthat the slave transfers on disk from the master. The file maynactually be flused on disk at once by the operating system when it getsnclosed by Redis, causing the close system call to block for a long time.nnThis patch is a modified version of one provided by yoav-steinberg ofn@garantiadata (the original version was posted in the issue #539ncomments), and tries to flush the OS buffers incrementally (every 8 MBnof loaded data).n",45.0,12.0,"src/config.h,CAS_DELIMITER,src/fmacros.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,1.0,1.0,1.6622419347549162,11.0,939.0,601.0,112.83130092592594,5205.0,1.0029024016584291,1664.0,Corrective,True,True,"[""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""c83a739bd8c9e6451414bcacade98733aeaa9834"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
784b93087c622999e225735c0c76d50241941022,c14e0ecafdaa6b72464d6bcb8953b22899230406,antirez,antirez@gmail.com,Tue Aug 28 12:56:05 2012 +0200,1346151365,Sentinel: suppress harmless warning by initializing 'table' to NULL.Note that the assertion guarantees that one of the if branches settingntable is always entered.n,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2947.0,19.0,4.018182870370372,5208.0,1.2488687131125584,1665.0,None,False,,
c14e0ecafdaa6b72464d6bcb8953b22899230406,169a44cbd6b6a143b282206d754b71cd3af0c963,antirez,antirez@gmail.com,Tue Aug 28 17:20:26 2012 +0200,1346167226,"Sentinel: Redis-side support for slave priority.A Redis slave can now be configured with a priority, that is an integernnumber that is shown in INFO output and can be get and set using thenredis.conf file or the CONFIG GET/SET command.nnThis field is used by Sentinel during slave election. A slave with lowernpriority is preferred. A slave with priority zero is never elected (andnis considered to be impossible to elect even if it is the only slavenavailable).nnA next commit will add support in the Sentinel side as well.n",12.0,2.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.4926140680171258,11.0,1596.0,609.0,14.668742283950614,5210.0,1.0251002745288715,1668.0,None,False,,
169a44cbd6b6a143b282206d754b71cd3af0c963,3ec701e0597cd59d63835fc1b8e1ebeec78e9788,antirez,antirez@gmail.com,Tue Aug 28 17:45:01 2012 +0200,1346168701,"Sentinel: Sentinel-side support for slave priority.The slave priority that is now published by Redis in INFO output isnnow used by Sentinel in order to select the slave with minimum prioritynfor promotion, and in order to consider slaves with priority set to 0 asnnot able to play the role of master (they will never be promoted bynSentinel).nnThe slave-priority field is now one of the fileds that Sentinelnpublishes when describing an instance via the SENTINEL commands such asnSENTINEL slaves mastername.n",10.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2947.0,20.0,0.20064814814814816,5212.0,5.983848638670972,1669.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
3ec701e0597cd59d63835fc1b8e1ebeec78e9788,712656e8481f768470af82503dd84695496cd0a3,antirez,antirez@gmail.com,Tue Aug 28 17:53:18 2012 +0200,1346169198,Sentinel: added documentation about slave-priority in redis.conf,15.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,544.0,93.0,128.93975694444444,5213.0,1.0077555598342791,1296.0,None,False,,
712656e8481f768470af82503dd84695496cd0a3,8246e58abebb7b4421a78d68e81bc8cd1ca536ac,antirez,antirez@gmail.com,Wed Aug 29 11:44:01 2012 +0200,1346233441,"Sentinel: add Redis execution mode to INFO output.The new redis_mode field in the INFO output will show if Redis isnrunning in standalone mode, cluster, or sentinel mode.n",8.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2627.0,288.0,0.7663773148148149,5214.0,2.304840292984973,1670.0,None,False,,
8246e58abebb7b4421a78d68e81bc8cd1ca536ac,58186b9dcf88cd2132ac0ff4bd3a12304819cc4e,antirez,antirez@gmail.com,Wed Aug 29 12:44:24 2012 +0200,1346237064,Sentinel: INFO command implementation.,62.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,2957.0,21.0,0.791238425925926,5215.0,2.2638415517165718,1671.0,None,False,,
58186b9dcf88cd2132ac0ff4bd3a12304819cc4e,6276434ad22ded9f5bf9997137c311e447154908,antirez,antirez@gmail.com,Thu Aug 30 17:57:02 2012 +0200,1346342222,Sentinel: do not crash against slaves not publishing the runid.Older versions of Redis (before 2.4.17) don't publish the runid field innINFO. This commit makes Sentinel able to handle that without crashing.n,13.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,3018.0,22.0,1.2171064814814814,5216.0,1.8216207991783795,1672.0,None,False,,
6276434ad22ded9f5bf9997137c311e447154908,46c31a150a0e6a67eaaf4b1e1146ec815cc1355e,antirez,antirez@gmail.com,Fri Aug 31 10:22:21 2012 +0200,1346401341,Scripting: require at least one argument for redis.call().Redis used to crash with a call like the following:nnEVAL redis.call() 0nnNow the explicit check for at least one argument prevents the problem.nnThis commit fixes issue #655.n,13.0,0.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9957274520849256,9.0,645.0,71.0,107.69907407407408,5217.5,1.006291266704018,293.0,None,False,,
46c31a150a0e6a67eaaf4b1e1146ec815cc1355e,e323635c2d9d9039442cd1014932e4dd314d2d06,antirez,antirez@gmail.com,Fri Aug 31 11:08:53 2012 +0200,1346404133,"Scripting: Reset Lua fake client reply_bytes after command execution.Lua scripting uses a fake client in order to run commands in the contextnof a client, accumulate the reply, and convert it into a Lua objectnto return to the caller. This client is reused again and again, and isnreferenced by the server.lua_client globally accessible pointer.nnHowever after every call to redis.call() or redis.pcall(), that isnhandled by the luaRedisGenericCommand() function, the reply_bytes fieldnof the client was not set back to zero. This filed is used to estimatenthe amount of memory currently used in the reply. Because of the lack ofnreset, script after script executed, this value used to get bigger andnbigger, and in the end on 32 bit systems it triggered the followingnassert:nnredisAssert(c->reply_bytes < ULONG_MAX-(1024*64));nnOn 64 bit systems this does not happen because it takes too much time tonreach values near to 2^64 for users to see the practical effect of thenbug.nnNow in the cleanup stage of luaRedisGenericCommand() we reset thenreply_bytes counter to zero, avoiding the issue. It is not practical tonadd a test for this bug, but the fix was manually tested using andebugger.nnThis commit fixes issue #656.n",1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,955.0,55.0,0.03231481481481482,5219.0,31.945558739255013,1674.0,None,False,,
e323635c2d9d9039442cd1014932e4dd314d2d06,bb66fc312036e444a950df27dd7cb2e3db6b4b05,antirez,antirez@gmail.com,Fri Aug 31 15:32:57 2012 +0200,1346419977,"Send an async PING before starting replication with master.During the first synchronization step of the replication process, a Redisnslave connects with the master in a non blocking way. However once thenconnection is established the replication continues sending the REPLCONFncommand, and sometimes the AUTH command if needed. Those commands arensend in a partially blocking way (blocking with timeout in the order ofnseconds).nnBecause it is common for a blocked master to accept connections even ifnit is actually not able to reply to the slave requests, it was easy forna slave to block if the master had serious issues, but was still able tonaccept connections in the listening socket.nnFor this reason we now send an asynchronous PING request just after thennon blocking connection ended in a successful way, and wait for thenreply before to continue with the replication process. It is verynunlikely that a master replying to PING can't reply to the otherncommands.nnThis solution was proposed by Didier Spezia (Thanks!) so that we don'tnneed to turn all the replication process into a non blocking affair, butnstill the probability of a slave blocked is minimal even in the event ofna failing master.nnAlso we now use getsockopt(SO_ERROR) in order to check errors ASAPnin the event handler, instead of waiting for actual I/O to return annerror.nnThis commit fixes issue #632.n",70.0,11.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.33426813256179383,11.0,981.0,301.0,4.880810185185185,5220.5,1.2221402094733929,1676.0,Corrective,True,,
bb66fc312036e444a950df27dd7cb2e3db6b4b05,8bdde086ac393a22ba80b74f317f882ab6f5e63e,antirez,antirez@gmail.com,Tue Sep 4 15:52:04 2012 +0200,1346766724,"Sentinel: more easy master redirection if master is a slave.Before this commit Sentienl used to redirect master ip/addr if thencurrent instance reported to be a slave only if this was the first INFOnoutput received, and the role was found to be slave.nnNow instead also if we find that the runid is different, and thenreported role is slave, we also redirect to the reported master ip/addr.nnThis unifies the behavior of Sentinel in the case of a reboot (where itnwill see the first INFO output with the wrong role and will perform thenredirection), with the behavior of Sentinel in the case of a change innwhat it sees in the INFO output of the master.n",2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,3030.0,23.0,4.913217592592591,5222.0,1.2035326099759247,1677.0,None,False,,
8bdde086ac393a22ba80b74f317f882ab6f5e63e,9bd0e097aa19b697757cdb73dd447e2c6f4960c6,antirez,antirez@gmail.com,Tue Sep 4 16:06:53 2012 +0200,1346767613,"Sentinel: reply -IDONTKNOW to get-master-addr-by-name on lack of info.If we don't have any clue about a master since it never replied to INFOnso far, reply with an -IDONTKNOW error to SENTINELnget-master-addr-by-name requests.n",2.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,3030.0,24.0,0.010289351851851852,5223.0,98.18785151856018,1678.0,None,False,,
9bd0e097aa19b697757cdb73dd447e2c6f4960c6,36741b2c818a95e8ef167818271614ee6b1bc414,antirez,antirez@gmail.com,Wed Sep 5 01:12:41 2012 +0200,1346800361,"Scripting: Force SORT BY constant determinism inside SORT itself.SORT is able to return (faster than when ordering) unordered output ifnthe BY clause is used with a constant value. However we try to playnwell with scripting requirements of determinism providing always sortednoutputs when SORT (and other similar commands) are called by Luanscripts.nnHowever we used the general mechanism in place in scripting in order tonreorder SORT output, that is, if the command has the S flag set, thenLua scripting engine will take an additional step when converting anmulti bulk reply to Lua value, calling a Lua sorting function.nnThis is suboptimal as we can do it faster inside SORT itself.nThis is also broken as issue #545 shows us: basically when SORT is usednwith a constant BY, and additionally also GET is used, the Lua scriptingnengine was trying to order the output as a flat array, while it wasnactually a list of key-value pairs.nnWhat we do know is to recognized if the caller of SORT is the Lua clientn(since we can check this using the REDIS_LUA_CLIENT flag). If so, and ifna don't sort condition is triggered by the BY option with a constantnstring, we force the lexicographical sorting.nnThis commit fixes this bug and improves the performance, and at the samentime simplifies the implementation. This does not mean I'm smart today,nit means I was stupid when I committed the original implementation ;)n",10.0,11.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.916126946588284,11.0,1122.8,643.0,31.94694212962964,5226.0,1.0641247830724994,294.0,None,False,,
36741b2c818a95e8ef167818271614ee6b1bc414 9edfe63553314fc2258392db94bfce8a4144b303,24bc807b5c781ba0f8d0582d47bde237d6748a5d,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 5 06:59:37 2012 -0700,1346853577,Merge pull request #576 from saj/fix-slave-ping-periodBug fix: slaves being pinged every second,,,,,,,,,,,,,,,Merge,False,,
24bc807b5c781ba0f8d0582d47bde237d6748a5d,749aac72ad980bf08b04655634590b80e2fd014c,Haruto Otake,trapezoid.g@gmail.com,Sun Jul 15 18:38:30 2012 +0900,1342345110,"BITCOUNT: fix segmentation fault.remove unsafe and unnecessary cast.nuntil now, this cast may lead segmentation fault when end > UINT_MAXnnsetbit foo 0 1nbitcount  0 4294967295n=> oknbitcount  0 4294967296n=> cause segmentation fault.nnNote by @antirez: the commit was modified a bit to also change thenstring length type to long, since it's guaranteed to be at max 512 MB innsize, so we can work with the same type across all the code path.nnA regression test was also added.n",8.0,3.0,"src/bitops.c,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9940302114769564,9.0,274.5,11.0,20.781122685185185,0.5,0.512030148889801,0.0,None,False,True,"[""74e57d0ecefaff0f029469bea65edc2e20747ee3"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
749aac72ad980bf08b04655634590b80e2fd014c,74e57d0ecefaff0f029469bea65edc2e20747ee3,antirez,antirez@gmail.com,Wed Sep 5 17:46:06 2012 +0200,1346859966,BITCOUNT regression test for #582 fixed for 32 bit target.Bug #582 was not present in 32 bit builds of Redis asngetObjectFromLong() will return an error for overflow.nnThis commit makes sure that the test does not fail because of the errornreturned when running against 32 bit builds.n,6.0,1.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,175.0,6.0,52.25527777777778,5229.0,1.01913682296844,295.0,Corrective,True,,
74e57d0ecefaff0f029469bea65edc2e20747ee3,978e5177fdd33bfc638b6aa7e82bd61b3487afed,antirez,antirez@gmail.com,Mon Sep 10 12:42:55 2012 +0200,1347273775,Match printf format with actual type in genRedisInfoString().,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2634.0,290.0,5.479328703703704,5230.0,1.1825041084547565,1683.0,None,False,,
978e5177fdd33bfc638b6aa7e82bd61b3487afed,bfc197c3b604baf0dba739ea174d5054284133f0,antirez,antirez@gmail.com,Tue Sep 11 10:32:04 2012 +0200,1347352324,"Make sure that SELECT argument is an integer or return an error.Unfortunately we had still the lame atoi() without any error checking innplace, so SELECT foo would work as SELECT 0. This was not an hugenproblem per se but some people expected that DB can be strings and notnjust numbers, and without errors you get the feeling that they can bennumbers, but not the behavior.nnNow getLongFromObjectOrReply() is used as almost everybody else acrossnthe code, generating an error if the number is not an integer ornoverflows the long type.nnThanks to @mipearson for reporting that on Twitter.n",5.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,722.0,77.0,133.63592592592593,5231.0,1.007483017707037,1684.0,Corrective,True,,
bfc197c3b604baf0dba739ea174d5054284133f0,7eb850ef0e437323e2d84157ddc2e6e82af57bbc,antirez,antirez@gmail.com,Tue Sep 4 10:37:49 2012 +0200,1346747869,"A reimplementation of blocking operation internals.Redis provides support for blocking operations such as BLPOP or BRPOP.nThis operations are identical to normal LPOP and RPOP operations as longnas there are elements in the target list, but if the list is empty theynblock waiting for new data to arrive to the list.nnAll the clients blocked waiting for th same list are served in a FIFOnway, so the first that blocked is the first to be served when there isnmore data pushed by another client into the list.nnThe previous implementation of blocking operations was conceived tonserve clients in the context of push operations. For for instance:nn1) There is a client A blocked on list foo.n2) The client B performs `LPUSH foo somevalue`.n3) The client A is served in the context of the B LPUSH,nsynchronously.nnProcessing things in a synchronous way was useful as if A pushes anvalue that is served by B, from the point of view of the database is anNOP (no operation) thing, that is, nothing is replicated, nothing isnwritten in the AOF file, and so forth.nnHowever later we implemented two things:nn1) Variadic LPUSH that could add multiple values to a list in thencontext of a single call.n2) BRPOPLPUSH that was a version of BRPOP that also provided a PUSHnside effect when receiving data.nnThis forced us to make the synchronous implementation more complex. Ifnclient B is waiting for data, and A pushes three elemnents in ansingle call, we needed to propagate an LPUSH with a missing argumentnin the AOF and replication link. We also needed to make sure tonreplicate the LPUSH side of BRPOPLPUSH, but only if in turn did notnhappened to serve another blocking client into another list ;)nnThis were complex but with a few of mutually recursive functionsneverything worked as expected... until one day we introduced scriptingnin Redis.nnScripting + synchronous blocking operations = Issue #614.nnBasically you can't rewrite a script to have just a partial effect onnthe replicas and AOF file if the script happened to serve a few blockednclients.nnThe solution to all this problems, implemented by this commit, is tonchange the way we serve blocked clients. Instead of serving the blockednclients synchronously, in the context of the command performing the PUSHnoperation, it is now an asynchronous and iterative process:nn1) If a key that has clients blocked waiting for data is the subject ofna list push operation, We simply mark keys as ready and put it into anqueue.n2) Every command pushing stuff on lists, as a variadic LPUSH, a script,nor whatever it is, is replicated verbatim without any rewriting.n3) Every time a Redis command, a MULTI/EXEC block, or a script,ncompleted its execution, we run the list of keys ready to serve blockednclients (as more data arrived), and process this list serving thenblocked clients.n4) As a result of 3 maybe more keys are ready again for other clientsn(as a result of BRPOPLPUSH we may have push operations), so we iteratenback to step 3 if it's needed.nnThe new code has a much simpler semantics, and a simpler to understandnimplementation, with the disadvantage of not being able to optmize outna PUSH+BPOP as a No OP.nnThis commit will be tested with care before the final merge, more testsnwill be added likely.n",347.0,134.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",6.0,2.0,4.0,1.4109398433828455,11.0,1027.0,666.0,66.18434413580246,5234.5,0.950693032435894,298.0,Feature Addition,False,True,"[""c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""33f943b4cddb0bf90b436ccd47d12363e13d0fce""]"
7eb850ef0e437323e2d84157ddc2e6e82af57bbc,b5b2aceaf6889db8b25eac525af10ca7992a936f,antirez,antirez@gmail.com,Mon Sep 17 10:45:56 2012 +0200,1347871556,.gitignore modified to be more general with less entries.,1.0,7.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,28.0,24.0,55.91046296296296,5238.0,1.017885739931405,1297.0,None,False,,
b5b2aceaf6889db8b25eac525af10ca7992a936f,d310fbedabd3101505b694f5c25a2e48480a3c2b,antirez,antirez@gmail.com,Mon Sep 17 12:45:57 2012 +0200,1347878757,Fix compilation on FreeBSD. Thanks to @koobs on twitter.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,773.0,44.0,16.884027777777778,5239.0,1.0592275737259902,1688.0,Corrective,True,,
d310fbedabd3101505b694f5c25a2e48480a3c2b,be90c803e3bb041335ea0b8f40348965846f06b7,antirez,antirez@gmail.com,Wed Sep 19 21:29:40 2012 +0200,1348082980,"Added the SRANDMEMBER key <count> variant.SRANDMEMBER called with just the key argument can just return a singlenrandom element from a Redis Set. However many users need to returnnmultiple unique elements from a Set, this is not a trivial problem tonhandle in the client side, and for truly good performance a Cnimplementation was required.nnAfter many requests for this feature it was finally implemented.nnThe problem implementing this command is the strategy to follow whennthe number of elements the user asks for is near to the number ofnelements that are already inside the set. In this case asking randomnelements to the dictionary API, and trying to add it to a temporary set,nmay result into an extremely poor performance, as most add operationsnwill be wasted on duplicated elements.nnFor this reason this implementation uses a different strategy in thisncase: the Set is copied, and random elements are returned to reach thenspecified count.nnThe code actually uses 4 different algorithms optimized for thendifferent cases.nnIf the count is negative, the command changes behavior and allows fornduplicated elements in the returned subset.n",155.0,1.0,"src/redis.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.0989590953557431,11.0,1552.0,314.0,90.36841435185184,5240.5,1.035123313537148,1690.0,Corrective,True,True,"[""578c94597fda163eb6050ce5e0f832a6587a14b9"", ""002747336a37b72b84503848a3f7f4f8cbc414cf"", ""8063155cd0d0b5b3b0e7d30e9a12e52db7224c0f""]"
be90c803e3bb041335ea0b8f40348965846f06b7,578c94597fda163eb6050ce5e0f832a6587a14b9,antirez,antirez@gmail.com,Thu Sep 20 16:33:36 2012 +0200,1348151616,SRANDMEMBER <count> leak fixed.For CASE 4 (see code) we need to free the element if it's already innthe result dictionary and adding it failed.n,10.0,8.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,617.0,23.0,0.7943981481481481,5242.0,2.2588146162363776,1691.0,Corrective,True,,
578c94597fda163eb6050ce5e0f832a6587a14b9,0ee3f05518e081640c1c6f9ae52c3a414f0feace,antirez,antirez@gmail.com,Fri Sep 21 11:33:06 2012 +0200,1348219986,Test for SRANDMEMBER with <count>.,112.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,386.0,17.0,155.72193287037038,5243.0,1.0064217029776559,299.0,Preventative,False,,
0ee3f05518e081640c1c6f9ae52c3a414f0feace,db100c4671c9576710c762f3fa36ab58757236a6,antirez,antirez@gmail.com,Wed Sep 26 18:59:54 2012 +0200,1348678794,Sentinel: Support for AUTH.,45.0,0.0,"sentinel.conf,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,2.0,2.0,0.9824740868386408,9.0,1581.5,34.0,38.566811342592594,5244.5,1.0155709402687976,1692.0,None,False,,
db100c4671c9576710c762f3fa36ab58757236a6,6dd1693c0e4bfae0ca0983b2a0bf70ae234a6bcb,antirez,antirez@gmail.com,Fri Sep 28 14:19:15 2012 +0200,1348834755,"Scripting: redis.NIL to return nil bulk replies.Lua arrays can't contain nil elements (seenhttp://www.lua.org/pil/19.1.html for more information), so Lua scriptsnwere not able to return a multi-bulk reply containing nil bulknelements inside.nnThis commit introduces a special conversion: a table with justna nilbulk field set to a boolean value is converted by Redis as a nilnbulk reply, but at the same time for Lua this type is not a nil so cannbe used inside Lua arrays.nnThis type is also assigned to redis.NIL, so the following two formsnare equivalent and will be able to return a nil bulk reply as secondnelement of a three elements array:nnEVAL return {1,redis.NIL,3} 0nEVAL return {1,{nilbulk=true},3} 0nnThe result in redis-cli will be:nn1) (integer) 1n2) (nil)n3) (integer) 3n",39.0,4.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4464813468968031,11.0,659.5,77.0,23.85,5246.5,1.0317170050128028,300.0,None,False,,
6dd1693c0e4bfae0ca0983b2a0bf70ae234a6bcb,9c21b72bb9b7844b22b60f63af37aa30dd78f898,antirez,antirez@gmail.com,Fri Sep 28 16:54:57 2012 +0200,1348844097,Scripting: add helper functions redis.error_reply() and redis.status_reply().A previous commit introduced Redis.NIL. This commit adds similar helpernfunctions to return tables with a single field set to the specifiednstring so that instead of using 'return {err=My Error}' it is possiblento use a more idiomatic form:nnreturn redis.error_reply(My Error)nreturn redis.status_reply(OK)n,36.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,985.0,58.0,0.108125,5248.0,10.248554913294797,1694.0,None,False,,
9c21b72bb9b7844b22b60f63af37aa30dd78f898,ece77037e9601f9f5d2321cc5a779aef10a4c563,antirez,antirez@gmail.com,Mon Oct 1 10:10:03 2012 +0200,1349079003,Revert Scripting: redis.NIL to return nil bulk replies.This reverts commit e061d797d739f2beeb22b9e8ac519d1df070e3a8.nnConflicts:nntsrc/scripting.cn,4.0,39.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4464813468968031,11.0,695.0,80.0,2.7728819444444444,5249.5,1.2740622536436583,301.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
ece77037e9601f9f5d2321cc5a779aef10a4c563,4b1f6ad3e7a5c7c28618e43e7539c9a937bf8521,Greg Hurrell,greg@causes.com,Tue Oct 2 21:58:36 2012 -0700,1349240316,Fix (cosmetic) typos in dict.h,4.0,4.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,173.0,10.0,255.28685185185185,0.0,0.0,0.0,Corrective,True,,
ece77037e9601f9f5d2321cc5a779aef10a4c563,9a914a632d38fff012d0fa7ee8469948e286c053,antirez,antirez@gmail.com,Wed Oct 3 11:41:08 2012 +0200,1349257268,"SORT by nosort (skip sorting) respect sorted set ordering.When SORT is called with the option BY set to a string constant notninclduing the wildcard character *, there is no way to sort the outputnso any ordering is valid. This allows the SORT internals to optimize itsnwork and don't really sort the output at all.nnHowever it was odd that this option was not able to retain the naturalnorder of a sorted set. This feature was requested by users multiplentimes as sometimes to call SORT with GET against sorted sets as a way tonmass-fetch objects can be handy.nnThis commit introduces two things:nn1) The ability of SORT to return sorted sets elements in their naturalnordering when `BY nosort` is specified, accordingly to `DESC / ASC` options.n2) The ability of SORT to optimize this case further if LIMIT is passednas well, avoiding to really fetch the whole sorted set, but directlynobtaining the specified range.nnBecause in this case the sorting is always deterministic, nonpost-sorting activity is performed when SORT is called from a Luanscript.nnThis commit fixes issue #98.n",129.0,20.0,"src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8487827323883628,11.0,341.0,41.0,98.61831597222222,5251.5,1.0201181091703957,302.0,None,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5"", ""6c0abc4a0ee1450a7fc13076f5d04a6549286cf3""]"
9a914a632d38fff012d0fa7ee8469948e286c053,f0b9f803455feb5565ae4b799044890aa4de1479,antirez,antirez@gmail.com,Thu Oct 4 11:49:17 2012 +0200,1349344157,"Timeout receiving bulk data error message modified.The new message now contains an hint about modifying the repl-timeoutnconfiguration directive if the problem persists.nnThis should normally not be needed, because while the master generatesnthe RDB file it makes sure to send newlines to the replication channelnto prevent timeouts. However there are times when masters running onnvery slow systems can completely stop for seconds during the RDB savingnprocess. In such a case enlarging the timeout value can fix the problem.nnSee issue #695 for an example of this problem in an EC2 deployment.n",1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,774.0,45.0,16.96064814814815,5253.0,1.0589600109185204,1697.0,Corrective,True,,
f0b9f803455feb5565ae4b799044890aa4de1479,b7b2a1cc5eec13a714b02fc71dff3510a6b72155,Jokea,tfengjun@gmail.com,Thu Aug 30 15:08:19 2012 +0800,1346310499,"Force expire all timer events when system clock skew is detected.When system time changes back, the timer will not worker properlynhence some core functionality of redis will stop working(e.g. replication,nbgsave, etc). See issue #633 for details.nnThe patch saves the previous time and when a system clock skew is detected,nit will force expire all timers.nnModiifed by @antirez: the previous time was moved into the eventLoopnstructure to make sure the library is still thread safe as long as younuse different event loops into different threads (otherwise you neednsome synchronization). More comments added about the reasoning at thenbase of the patch, that's worth reporting here:nn/* If the system clock is moved to the future, and then set back to then * right value, time events may be delayed in a random way. Often thisn * means that scheduled operations will not be performed soon enough.n *n * Here we try to detect system clock skews, and force all the timen * events to be processed ASAP when this happens: the idea is thatn * processing events earlier is less dangerous than delaying themn * indefinitely, and practice suggests it is. */n",20.0,0.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER",2.0,1.0,1.0,0.28639695711595625,9.0,264.0,13.0,178.87991319444444,0.5,0.5013975856513764,1.0,None,False,,
b7b2a1cc5eec13a714b02fc71dff3510a6b72155,2b73b3509ac9d04364a30af141d3092221aa59ce,antirez,antirez@gmail.com,Fri Oct 5 10:10:34 2012 +0200,1349424634,Include time.h in ae.c as we now use time().,1.0,0.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,430.0,11.0,36.04322916666667,5254.0,1.0277444619452911,1698.0,None,False,,
2b73b3509ac9d04364a30af141d3092221aa59ce,c43aea7e9fae10df1f8ad6589800ec14ce184cf7,antirez,antirez@gmail.com,Fri Oct 5 10:48:49 2012 +0200,1349426929,"Warn when configured maxmemory value seems odd.This commit warns the user with a log at warning level if:nn1) After the server startup the maxmemory limit was found to be < 1MB.n2) After a CONFIG SET command modifying the maxmemory setting the limitnis set to a value that is smaller than the currently used memory.nnThe behaviour of the Redis server is unmodified, and this wil not makenthe CONFIG SET command or a wrong configuration in redis.conf lessnlikely to create problems, but at least this will make aware most usersnabout a possbile error they committed without resorting to externalnhelp.nnHowever no warning is issued if, as a result of loading the AOF or RDBnfile, we are very near the maxmemory setting, or key eviction will benneeded in order to go under the specified maxmemory setting. The reasonnis that in servers configured as a cache with an aggressivenmaxmemory-policy most of the times restarting the server will cause thisncondition to happen if persistence is not switched off.nnThis fixes issue #429.n",11.0,1.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9798687566511528,11.0,1782.5,359.0,26.64150462962963,5255.5,1.0226365955073944,1700.0,None,False,True,"[""c241f5160752753c271366547e2ada8617f1e684""]"
c43aea7e9fae10df1f8ad6589800ec14ce184cf7,da920e75d4836897b9a7109b6d4743e201cd8a4f,antirez,antirez@gmail.com,Wed Oct 3 19:14:46 2012 +0200,1349284486,"Hash function switched to murmurhash2.The previously used hash function, djbhash, is not secure againstncollision attacks even when the seed is randomized as there are simplenways to find seed-independent collisions.nnThe new hash function appears to be safe (or much harder to exploit atnleast) in this case, and has better distribution.nnBetter distribution does not always means that's better. For instance inna fast benchmark with DEBUG POPULATE 1000000 I obtained the followingnresults:nn1.6 seconds with djbhashn2.0 seconds with murmurhash2nnThis is due to the fact that djbhash will hash objects that follow thenpattern `prefix:<id>` and where the id is numerically near, to nearnbuckets. This improves the locality.nnHowever in other access patterns with keys that have no relationnmurmurhash2 has some (apparently minimal) speed advantage.nnOn the other hand a better distribution should significantlynimprove the quality of the distribution of elements returned withndictGetRandomKey() that is used in SPOP, SRANDMEMBER, RANDOMKEY, andnother commands.nnEverything considered, and under the suspect that this commit fixes ansecurity issue in Redis, we are switching to the new hash function.nIf some serious speed regression will be found in the future we'll be ablento step back easiliy.nnThis commit fixes issue #663.n",57.0,13.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.18717625687320816,9.0,470.0,31.0,82.70193865740741,5257.5,1.0060551795827903,1702.0,Corrective,True,,
da920e75d4836897b9a7109b6d4743e201cd8a4f,34f37fb7d3d685fa737e7195d51ed874a6d496ae,dvir volk,dvir@doit9.com,Fri Jun 8 16:03:18 2012 +0300,1339160598,"fixed server install script to rewrite the default configuration file and not a template, and removed the old config template Conflicts:tutils/redis.conf.tpln",18.0,521.0,"utils/install_server.sh,CAS_DELIMITER,utils/redis.conf.tpl,CAS_DELIMITER",2.0,1.0,1.0,0.2708252790233377,8.0,345.5,16.0,57.55998842592592,9.5,1.0185961201531646,10.0,Corrective,True,True,"[""2209d077d397352a11480501a691bd991c05ff36""]"
34f37fb7d3d685fa737e7195d51ed874a6d496ae,278304cc4d2a52cd22aa82b89991854a6b9b148e,antirez,antirez@gmail.com,Sat Oct 6 12:04:27 2012 +0200,1349517867,CONTRIBUTING file updated.,17.0,3.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,13.0,3.0,353.65984953703696,5259.0,1.0028275757095668,1299.0,None,False,,
278304cc4d2a52cd22aa82b89991854a6b9b148e,9eb3a7bc6ba041ee8f14427a68087459fc8e66f9,NanXiao,xn212516@163.com,Wed Oct 10 17:08:43 2012 +0800,1349860123,"Update src/redis-benchmark.cThe code of current implementation:rnrnif (c->pending == 0) clientDone(c);rnIn clientDone function, the c's memory has been freed, then the loop will continue: while(c->pending). The memory of c has been freed now, so c->pending is invalid (c is an invalid pointer now), and this will cause memory dump in some platforams(eg: Solaris).rnrnSo I think the code should be modified as:rnif (c->pending == 0)rn{rnclientDone(c);rnbreak;rn}rnand this will not lead to while(c->pending).",4.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,678.0,33.0,49.734016203703696,0.0,0.0,0.0,None,False,,
278304cc4d2a52cd22aa82b89991854a6b9b148e 9eb3a7bc6ba041ee8f14427a68087459fc8e66f9,d10a01bb6d8645f66b66e1fb3d1c52a0dd7bd8fe,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 10 02:18:14 2012 -0700,1349860694,Merge pull request #707 from NanXiao/patch-1Update src/redis-benchmark.c,,,,,,,,,,,,,,,Merge,False,,
d10a01bb6d8645f66b66e1fb3d1c52a0dd7bd8fe,be6cbd3a6e466c43300cba428f8f87a6d272c6f3,antirez,antirez@gmail.com,Thu Oct 11 18:34:05 2012 +0200,1349973245,"Allow AUTH when Redis is busy because of timedout Lua script.If the server is password protected we need to accept AUTH when there isna server busy (-BUSY) condition, otherwise it will be impossible to sendnSHUTDOWN NOSAVE or SCRIPT KILL.nnThis fixes issue #708.n",1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2646.0,294.0,6.323101851851853,5260.0,1.1581502280731295,1703.0,Corrective,True,,
be6cbd3a6e466c43300cba428f8f87a6d272c6f3,a1b1c1ea3adb864c8c2e3feb4eaed890a9b505cf,antirez,antirez@gmail.com,Tue Oct 16 17:35:50 2012 +0200,1350401750,"Fix MULTI / EXEC rendering in MONITOR output.Before of this commit it used to be like this:nnMULTInEXECn... actual commands of the transaction ...nnBecause after all that is the natural order of things. Transactionncommands are queued and executed *only after* EXEC is called.nnHowever this makes debugging with MONITOR a mess, so the code wasnmodified to provide a coherent output.nnWhat happens is that MULTI is rendered in the MONITOR output as far asnpossible, instead EXEC is propagated only after the transaction isnexecuted, or even in the case it fails because of WATCH, so in this casenyou'll simply see:nnMULTInEXECnnAn empty transaction.n",20.0,4.0,"src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.2069084251518172,11.0,1396.666666666667,567.0,85.73675925925926,5262.0,1.0044345219536934,1706.0,Corrective,True,,
a1b1c1ea3adb864c8c2e3feb4eaed890a9b505cf,acfe3675e3c5ab8ee2ca07642334d9468cfc4d39,antirez,antirez@gmail.com,Mon Oct 22 10:28:54 2012 +0200,1350894534,"Differentiate SCRIPT KILL error replies.When calling SCRIPT KILL currently you can get two errors:nn* No script in timeout (busy) state.n* The script already performed a write.nnIt is useful to be able to distinguish the two errors, but right now bothnstart with ERR prefix, so string matching (that is fragile) must be used.nnThis commit introduces two different prefixes.nn-NOTBUSY and -UNKILLABLE respectively to reply with an error when nonscript is busy at the moment, and when the script already executed anwrite operation and can not be killed.n",3.0,3.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,11.0,677.5,82.0,21.013090277777774,5264.5,1.0356920372056442,303.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
acfe3675e3c5ab8ee2ca07642334d9468cfc4d39,c2661ed7612b9534afe9f1c9c6381b430f5dd0c3,antirez,antirez@gmail.com,Mon Oct 22 10:43:39 2012 +0200,1350895419,"Default memory limit for 32bit instanced moved from 3.5 GB to 3 GB.In some system, notably osx, the 3.5 GB limit was too far and not ablento prevent a crash for out of memory. The 3 GB limit works better and itnis still a lot of memory within a 4 GB theorical limit so it's not goingnto bore anyone :-)nnThis fixes issue #711n",4.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2653.0,296.0,5.713761574074074,5266.0,1.17501605326646,1708.0,Perfective,False,,
c2661ed7612b9534afe9f1c9c6381b430f5dd0c3,e5f794ff3abd844a08c0b01faa15550fd7014d7c,Schuster,boazyeah@gmail.com,Mon Oct 22 11:44:20 2012 +0200,1350899060,"redis-check-dump now understands dumps produced by Redis 2.6(Commit message from @antirez as it was missign in the original commits,nalso the patch was modified a bit to still work with 2.4 dumps and tonavoid if expressions that are always true due to checked types range)nnThis commit changes redis-check-dump to account for new encodings andnfor the new MSTIME expire format. It also refactors the test for validntype into a function.nnThe code is still compatible with Redis 2.4 generated dumps.nnThis fixes issue #709.n",21.0,7.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,725.0,9.0,180.69366898148152,0.0,0.0,0.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
e5f794ff3abd844a08c0b01faa15550fd7014d7c 4b1f6ad3e7a5c7c28618e43e7539c9a937bf8521,ecd82f59fe5296de2733154bfcf1a4b95d4547aa,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 22 02:55:23 2012 -0700,1350899723,Merge pull request #693 from ghurrell/dict-h-typosFix (cosmetic) typos in dict.h,,,,,,,,,,,,,,,Merge,False,,
ecd82f59fe5296de2733154bfcf1a4b95d4547aa,89e74abfb6475bace3db518724ecee1fcae9c79e,antirez,antirez@gmail.com,Mon Oct 22 19:21:47 2012 +0200,1350926507,A filed called slave_read_only added in INFO output.This was an important information missing from the INFO output in thenreplication section.nnIt obviously reflects if the slave is read only or not.n,4.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2653.0,297.0,0.3598148148148148,5267.0,3.779207411219763,1709.0,Feature Addition,False,,
89e74abfb6475bace3db518724ecee1fcae9c79e,164d57c60d254d02d816c27f4e80cf33c5061fef,YAMAMOTO Takashi,yamt@mwd.biglobe.ne.jp,Wed Oct 24 17:47:56 2012 +0900,1351068476,fix a typo in a comment,1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,303.0,32.0,189.51877314814809,0.0,0.0,0.0,Corrective,True,,
89e74abfb6475bace3db518724ecee1fcae9c79e,68fc64afd46acef8109a388311730a4712a23e6d,antirez,antirez@gmail.com,Wed Oct 24 12:21:34 2012 +0200,1351074094,Update memory peak stats while loading RDB / AOF.,2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,1154.0,80.0,144.08306712962963,5268.0,1.0069404408159934,1710.0,None,False,,
68fc64afd46acef8109a388311730a4712a23e6d,d2f83d4a764fc155dbe07f5badecd9b65af699a5,antirez,antirez@gmail.com,Thu Oct 25 16:15:55 2012 +0200,1351174555,Fix compilation on Linux kernels or glibc versions lacking sync_file_range().This fixes issue #667.nnMany thanks to Didier Spezia for the fix.n,13.0,0.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,123.0,16.0,61.86609953703704,5269.0,1.0161639412777483,1711.0,Corrective,True,True,"[""c83a739bd8c9e6451414bcacade98733aeaa9834""]"
d2f83d4a764fc155dbe07f5badecd9b65af699a5,4800331bf859f5bb0313a7187963f1cc9b7e2a1c,charsyam,charsyam@gmail.com,Fri Oct 26 04:27:58 2012 +0800,1351196878,patch config.h for sync_file_range,3.0,2.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,136.0,17.0,0.25836805555555553,0.0,0.0,0.0,None,False,True,"[""c83a739bd8c9e6451414bcacade98733aeaa9834""]"
d2f83d4a764fc155dbe07f5badecd9b65af699a5,45fa113d004b98197883ba26a11ccf562a315d62,Adam Baldwin,baldwin@andyet.net,Thu Oct 25 20:27:10 2012 -0700,1351222030,Removed dofile() from Lua,2.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,990.0,61.0,3.790462962962963,0.0,0.0,0.0,None,False,,
4800331bf859f5bb0313a7187963f1cc9b7e2a1c,89423052cab4700291f290819d53f4fbb8dabf95,antirez,antirez@gmail.com,Fri Oct 26 15:38:21 2012 +0200,1351258701,Marginally more robust glibc version test for sync_file_range detection.,1.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,137.0,18.0,0.7155439814814815,5270.0,2.3975381330572763,1712.0,Preventative,False,,
89423052cab4700291f290819d53f4fbb8dabf95,c5cca554d927351d47160874824df864c9dfd0b8,antirez,antirez@gmail.com,Fri Oct 26 16:06:25 2012 +0200,1351260385,Ctrl+w support in linenoise.,37.0,20.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,609.0,6.0,611.892962962963,5271.0,1.0016342727577021,473.0,None,False,,
c5cca554d927351d47160874824df864c9dfd0b8,08a4f12e76c0edd4cdaadf4b4d1b39e1c57ff331,antirez,antirez@gmail.com,Tue Oct 30 18:57:20 2012 +0100,1351619840,"help.h update (adds bitop, bitcount, evalsha...)",28.0,3.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,754.0,7.0,186.1667013888889,5272.0,1.0053715298844506,1713.0,Feature Addition,False,,
08a4f12e76c0edd4cdaadf4b4d1b39e1c57ff331,b16e423430465013c14af1550f29e7c25c3a433c,antirez,antirez@gmail.com,Tue Oct 30 19:10:46 2012 +0100,1351620646,No longer used macro rdbIsOpcode() removed.,0.0,3.0,"src/rdb.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,88.0,10.0,150.68195601851852,5273.0,1.006636494683392,1714.0,None,False,,
b16e423430465013c14af1550f29e7c25c3a433c,973cb21a0152642ec904cf8f8ab238a31e6ebaa9,antirez,antirez@gmail.com,Wed Oct 31 09:23:05 2012 +0100,1351671785,Invert two sides of if expression in SET to avoid a lookup.Because of the short circuit behavior of && inverting the two sides ofnthe if expression avoids an hash table lookup if the non-EX variant ofnSET is called.nnThanks to Weibin Yao (@yaoweibin on github) for spotting this.n,1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,366.0,37.0,164.99288194444443,5274.0,1.0060608675247986,1715.0,None,False,,
973cb21a0152642ec904cf8f8ab238a31e6ebaa9 164d57c60d254d02d816c27f4e80cf33c5061fef,021d16b6430b39f7709a70466007df1ca16867e5,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 31 01:29:04 2012 -0700,1351672144,Merge pull request #726 from yamt/typofix a typo in a comment,,,,,,,,,,,,,,,Merge,False,,
021d16b6430b39f7709a70466007df1ca16867e5,c23c657cdd8696c66295962947b85c793c5d7b93,Runzhen Wang,sea11274@mail.ustc.edu.cn,Thu Nov 1 02:14:22 2012 +0800,1351707262,fix a typo in redis.h line 595 comment,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1268.0,262.0,15.110092592592592,0.0,0.0,0.0,Corrective,True,True,"[""7b190a08cfe9aded4c64b775fa2a2ab24b7b9405""]"
021d16b6430b39f7709a70466007df1ca16867e5,d36fb95a102047278f774955a873da43dec7c0d4,antirez,antirez@gmail.com,Thu Nov 1 15:36:37 2012 +0100,1351780597,"32 bit build fixed on Linux.It failed because of the way jemalloc was compiled (without passing thenright flags to make, but just to configure). Now the same set of flagsnare also passed to the make command, fixing the issue.nnThis fixes issue #744n",1.0,1.0,"deps/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,78.0,2.0,221.50803240740746,5275.0,1.0045145089734748,474.0,Corrective,True,,
d36fb95a102047278f774955a873da43dec7c0d4,2ea41242f669c1afe03af7c8befb140a7a80fc4e,antirez,antirez@gmail.com,Thu Nov 1 22:10:45 2012 +0100,1351804245,Unix socket clients properly displayed in MONITOR and CLIENT LIST.This also fixes issue #745.n,15.0,8.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.0666152167384504,11.0,1127.0,424.0,52.71778163580248,5277.0,1.0072709579433996,1718.0,Corrective,True,True,"[""3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9"", ""1971740f0c8c4bf9a484188f5966e8c2a9369490""]"
2ea41242f669c1afe03af7c8befb140a7a80fc4e,f0266532fc82b8ae9a87407adaf4555dddce690e,Yecheng Fu,cofyc.jackson@gmail.com,Thu Nov 1 18:14:55 2012 +0800,1351764895,"fix typo in comments (redis.c, networking.c)",10.0,10.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,11.0,1999.5,414.0,4.6240625,0.5,0.554065013178347,1.0,Corrective,True,True,"[""d7740fc8f350f6332fee27299c1152ba6c5dc9d0""]"
f0266532fc82b8ae9a87407adaf4555dddce690e,05d8e2c938e3b06efe3573deb97adb767550becc,antirez,antirez@gmail.com,Thu Nov 1 22:39:39 2012 +0100,1351805979,"More robust handling of AOF rewrite child.After the wait3() syscall we used to do something like that:nnif (pid == server.rdb_child_pid) {nbackgroundSaveDoneHandler(exitcode,bysignal);n} else {n....n}nnSo the AOF rewrite was handled in the else branch without actuallynchecking if the pid really matches. This commit makes the check explicitnand logs at WARNING level if the pid returned by wait3() does not matchnneither the RDB or AOF rewrite child.n",5.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2656.0,299.0,0.4755092592592592,5279.0,3.103008470450784,1719.0,None,False,True,"[""c494db89b5c2ef34758f599ee46ac7265782ad77"", ""7be917058560c2281a1ee891cb6ff6a7b8de345b""]"
05d8e2c938e3b06efe3573deb97adb767550becc c23c657cdd8696c66295962947b85c793c5d7b93,06851a93de54c4d9bb0a6c52234ef5bb3db07d96,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 2 04:10:47 2012 -0700,1351854647,Merge pull request #741 from Run/typofix a typo in redis.h line 595 comment,,,,,,,,,,,,,,,Merge,False,,
06851a93de54c4d9bb0a6c52234ef5bb3db07d96,c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5,antirez,antirez@gmail.com,Tue Nov 6 20:25:34 2012 +0100,1352229934,Type mismatch errors are now prefixed with WRONGTYPE.So instead to reply with a generic error like:nn-ERR ... wrong kind of value ...nnnow it replies with:nn-WRONGTYPE ... wrong kind of value ...nnThis makes this particular error easy to check without resorting ton(fragile) pattern matching of the error string (however the error stringnused to be consistent already).nnClient libraries should return a specific exeption type for this error.nnMost of the commit is about fixing unit tests.n,26.0,26.0,"src/redis.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",5.0,2.0,3.0,1.6922474331963004,11.0,981.0,382.0,106.63199074074072,5282.0,1.0425713263872711,307.0,Corrective,True,,
c4b0b6854e543ea1ae75b94ffc59b1285ddce9d5,e5b5763f56d1379069c94ce7196c1a412bb44fba,antirez,antirez@gmail.com,Wed Nov 7 10:57:23 2012 +0100,1352282243,REPLACE option for RESTORE.The REPLACE option deletes an existing key with the same name (if any)nand materializes the new one. The default behavior without RESTORE is tonreturn an error if a key already exists.n,33.0,4.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.2443013992660277,11.0,1537.0,380.0,77.96810570987655,5286.0,1.0102831402936894,308.0,Feature Addition,False,,
e5b5763f56d1379069c94ce7196c1a412bb44fba,1237d71c4e4a9c617d0c8ce8049e16326e647cfe,antirez,antirez@gmail.com,Wed Nov 7 15:32:27 2012 +0100,1352298747,COPY and REPLACE options for MIGRATE.With COPY now MIGRATE does not remove the key from the source instance.nWith REPLACE it uses RESTORE REPLACE on the target host so that even ifnthe key already eixsts in the target instance it will be overwritten.nnThe options can be used together.n,69.0,8.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.1416778550864213,11.0,1546.666666666667,383.0,0.19101851851851856,5289.0,4.199224430441105,309.0,None,False,True,"[""9d09ce3981deb58282ae47c87e1080936f04991f""]"
1237d71c4e4a9c617d0c8ce8049e16326e647cfe,4365e5b2d32798c168a8376fad891c0e5cccb4ec,antirez,antirez@gmail.com,Thu Nov 8 18:25:23 2012 +0100,1352395523,BSD license added to every C source and header file.,1409.0,33.0,"src/adlist.h,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/ae_evport.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER,src/ae_select.c,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/asciilogo.h,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/crc16.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/fmacros.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/memtest.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pqsort.c,CAS_DELIMITER,src/pqsort.h,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rand.c,CAS_DELIMITER,src/rand.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis-check-aof.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/release.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER,src/solarisfixes.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/testhelp.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER",61.0,1.0,1.0,5.659196651485379,11.0,538.8360655737705,1916.0,222.26379117334545,5321.0,1.000357388984318,1785.0,Feature Addition,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1"", ""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
4365e5b2d32798c168a8376fad891c0e5cccb4ec,399669fc6fd928793df48757ad3bf7119ae3bb6e,antirez,antirez@gmail.com,Thu Nov 8 18:43:20 2012 +0100,1352396600,Make clear that contributing code to the Redis project means to release it under the terms of the BSD license.,18.0,0.0,"CONTRIBUTING,CAS_DELIMITER,README,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,7.0,79.0,17.0,117.31728587962965,5352.5,1.01713757512998,1301.0,None,False,,
399669fc6fd928793df48757ad3bf7119ae3bb6e,5513397de7526f0e5e01c1d29a37813008703d6d,antirez,antirez@gmail.com,Thu Nov 8 19:14:29 2012 +0100,1352398469,Copyright date fixed in COPYING file.,1.0,1.0,"COPYING,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,10.0,1.0,1327.364224537037,5354.0,1.00075337272281,1302.0,Corrective,True,,
5513397de7526f0e5e01c1d29a37813008703d6d,e23d281e489c3cda134803b2e6302d1fc27e5948,antirez,antirez@gmail.com,Mon Nov 12 00:45:10 2012 +0100,1352677510,MIGRATE TCP connections caching.By caching TCP connections used by MIGRATE to chat with other Redisninstances a 5x performance improvement was measured withnredis-benchmark against small keys.nnThis can dramatically speedup cluster resharding and other processesnwhere an high load of MIGRATE commands are used.n,139.0,17.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.7193856441631259,11.0,1946.666666666667,647.0,3.2637384259259266,5356.0,1.187242674307681,1788.0,None,False,True,"[""149b527a74a8336e8b0a287472c9ae25e3286fba"", ""12d0195b3013aff008bb492cf59f31d823f024b0"", ""f917e0da4cda8a0e6cd3242180b268706cdd2dd2""]"
e23d281e489c3cda134803b2e6302d1fc27e5948,149b527a74a8336e8b0a287472c9ae25e3286fba,antirez,antirez@gmail.com,Mon Nov 12 14:00:59 2012 +0100,1352725259,"MIGRATE timeout should be in milliseconds.While it is documented that the MIGRATE timeout is in milliseconds, itnwas in seconds instead. This commit fixes the problem.n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1986.0,79.0,0.5526504629629629,5358.0,2.809461978261325,1789.0,Corrective,True,,
149b527a74a8336e8b0a287472c9ae25e3286fba,c8852ebf191387779275a70b5540f30976b9ef1f,antirez,antirez@gmail.com,Mon Nov 12 14:01:56 2012 +0100,1352725316,MIGRATE count of cached sockets in INFO output.,4.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2676.0,305.0,0.5533101851851852,5359.0,2.8073045224448814,1790.0,None,False,,
c8852ebf191387779275a70b5540f30976b9ef1f,05705bc8bb8685827609813fe48a928260c6a21b,antirez,antirez@gmail.com,Mon Nov 12 15:04:54 2012 +0100,1352729094,MIGRATE: fix default timeout to 1000 milliseconds.When a timeout <= 0 is provided we set a default timeout of 1 second.nIt was set to 1 millisecond for an error resulting from a recent change.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1986.0,80.0,0.04438657407407407,5360.0,23.529335071707955,1791.0,None,False,,
5513397de7526f0e5e01c1d29a37813008703d6d,aa2bf6ba8bec776c02d8055ac856d96926137895,antirez,antirez@gmail.com,Mon Nov 12 23:04:36 2012 +0100,1352757876,"TTL API change: TTL returns -2 for non existing keys.The previous behavior was to return -1 if:nn1) Existing key but without an expire set.n2) Non existing key.nnNow the second case is handled in a different, and TTL will return -2nif the key does not exist at all.nnPTTL follows the same behavior as well.n",26.0,1.0,"src/db.c,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8256265261578954,11.0,455.0,91.0,100.22451967592592,5361.5,1.1217151594489017,310.0,None,False,True,"[""ec55df117f0554aaf0d36e2fbb875aea93105b3d""]"
05705bc8bb8685827609813fe48a928260c6a21b,17411f7afd30f76962652e28c408dcd07e213fd9,antirez,antirez@gmail.com,Tue Nov 13 18:11:48 2012 +0100,1352826708,Test: check if MIGRATE is caching connections.,19.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,189.0,6.0,6.110659722222222,5363.0,1.1636484513060623,311.0,Preventative,False,,
17411f7afd30f76962652e28c408dcd07e213fd9,2feef47aa1642df8637522c3d0b8efa16ec4bbc0,antirez,antirez@gmail.com,Wed Nov 14 11:30:24 2012 +0100,1352889024,"MIGRATE: retry one time on I/O error.Now that we cache connections, a retry attempt makes sure that thenoperation don't fail just because there is an existing connection errornon the socket, like the other end closing the connection.nnUnfortunately this condition is not detectable usingngetsockopt(SO_ERROR), so the only option left is to retry.nnWe don't retry on timeouts.n",16.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1986.0,81.0,1.8510416666666667,5364.0,1.5402363534046146,1793.0,None,False,True,"[""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e"", ""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
2feef47aa1642df8637522c3d0b8efa16ec4bbc0,989a7820ca0cb1b88493797fdecd2e7168558859,antirez,antirez@gmail.com,Wed Nov 14 12:12:52 2012 +0100,1352891572,Test: more MIGRATE tests.,24.0,22.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.2580186686648155,11.0,325.5,81.0,90.82055555555556,5365.5,1.0055167859313352,313.0,Preventative,False,,
aa2bf6ba8bec776c02d8055ac856d96926137895 989a7820ca0cb1b88493797fdecd2e7168558859,a779b7e901e9f863dc195d3590b554a917a0b3e2,antirez,antirez@gmail.com,Wed Nov 14 12:21:23 2012 +0100,1352892083,Merge branch 'migrate-cache' into unstable,,,,,,,,,,,,,,,Merge,False,,
a779b7e901e9f863dc195d3590b554a917a0b3e2,af0b220756571bc8faf57a0c7b7389dd86a60376,antirez,antirez@gmail.com,Wed Nov 14 12:52:38 2012 +0100,1352893958,zmalloc: kill unused __size parameter in update_zmalloc_stat_alloc() macro.,7.0,7.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,326.0,18.0,81.92518518518519,5367.0,1.0122062586460998,1794.0,None,False,True,"[""a4f658b2b5d4be9c3592434d74a5de9cd678158c""]"
af0b220756571bc8faf57a0c7b7389dd86a60376,3bfeb9c1a7044cd96c1bd77677dfe8b575c73c5f,antirez,antirez@gmail.com,Mon Nov 19 11:24:56 2012 +0100,1353320696,zmalloc_get_private_dirty() function added (Linux only).For non Linux systmes it just returns 0.nnThis function is useful to estimate copy-on-write because of childsnsaving stuff on disk.n,26.0,0.0,"src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.2351933818192415,10.0,205.0,31.0,45.95889467592593,5368.5,1.1066727185367031,1796.0,Feature Addition,False,,
3bfeb9c1a7044cd96c1bd77677dfe8b575c73c5f,49b645235100fc214468b608c1ba6cdbc320fa88,antirez,antirez@gmail.com,Mon Nov 19 12:02:08 2012 +0100,1353322928,"Children creating AOF or RDB files now report memory used by COW.Finally Redis is able to report the amount of memory used byncopy-on-write while saving an RDB or writing an AOF file in background.nnNote that this information is currently only logged (at NOTICE level)nand not shown in INFO because this is less trivial (but surely doablenwith some minor form of interprocess communication).nnThe reason we can't capture this information on the parent before wencall wait3() is that the Linux kernel will release the child memorynASAP, and only retain the minimal state for the process that is usefulnto report the child termination to the parent.nnThe COW size is obtained by summing all the Private_Dirty fields foundnin the smap file inside the proc filesystem for the process.nnAll this is Linux specific and is not available on other systems.n",16.0,0.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.9886994082884974,11.0,1174.5,168.0,10.733854166666667,5370.5,1.069872385850842,1798.0,None,False,,
49b645235100fc214468b608c1ba6cdbc320fa88,52b52a350818f88c543a224375fbe308bb17cd12,charsyam,charsyam@gmail.com,Tue Nov 20 02:50:31 2012 +0800,1353351031,fix randstring bug,2.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1534.0,35.0,11.059120370370367,1.0,1.0904231047777726,1.0,Corrective,True,,
49b645235100fc214468b608c1ba6cdbc320fa88,3cb432837ce799062c83337e5f590c385e48d4bd,antirez,antirez@gmail.com,Wed Nov 21 13:17:38 2012 +0100,1353500258,Use more fine grained HAVE macros instead of HAVE_PROCFS.,5.0,3.0,"src/config.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,11.0,258.5,40.0,7.432274305555558,5372.5,1.0727414798765789,1800.0,None,False,,
3cb432837ce799062c83337e5f590c385e48d4bd,5a9e3f58428df7d6a7a4d7cc891c95b84517183d,antirez,antirez@gmail.com,Wed Nov 21 13:19:38 2012 +0100,1353500378,Fast memory test on Redis crash.,86.0,0.0,"src/debug.c,CAS_DELIMITER,src/memtest.c,CAS_DELIMITER",2.0,1.0,1.0,0.9430685934712908,11.0,535.0,62.0,12.787673611111117,5374.5,1.0586502301206946,1802.0,Preventative,False,True,"[""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
5a9e3f58428df7d6a7a4d7cc891c95b84517183d,753699172620ef6c36969385c9bd697c6fc2db98,antirez,antirez@gmail.com,Thu Nov 22 10:08:44 2012 +0100,1353575324,"Make bio.c threads killable ASAP if needed.We use this new bio.c feature in order to stop our I/O threads if therenis a memory test to do on crash. In this case we don't want anythingnelse than the main thread to run, otherwise the other threads may messnwith the heap and the memory test will report a false positive.n",25.0,50.0,"src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",3.0,1.0,1.0,0.2040561198526641,11.0,386.0,75.0,9.392546296296297,5377.0,1.0484460559265838,1805.0,Feature Addition,False,,
753699172620ef6c36969385c9bd697c6fc2db98,3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9,antirez,antirez@gmail.com,Thu Nov 15 20:11:05 2012 +0100,1353006665,"Safer handling of MULTI/EXEC on errors.After the transcation starts with a MULIT, the previous behavior was tonreturn an error on problems such as maxmemory limit reached. But stillnto execute the transaction with the subset of queued commands on EXEC.nnWhile it is true that the client was able to check for errorsndistinguish QUEUED by an error reply, MULTI/EXEC in most clientnimplementations uses pipelining for speed, so all the commands and EXECnare sent without caring about replies.nnWith this change:nn1) EXEC fails if at least one command was not queued because of annerror. The EXECABORT error is used.n2) A generic error is always reported on EXEC.n3) The client DISCARDs the MULTI state after a failed EXEC, otherwisenpipelining multiple transactions would be basically impossible:nAfter a failed EXEC the next transaction would be simply queued asnthe tail of the previous transaction.n",44.0,21.0,"src/multi.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.4385604968299197,11.0,1430.666666666667,585.0,4.713140432098767,5380.0,1.1029688745323558,1808.0,Corrective,True,,
3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9,9c00f078978e452d541ddc8a9a2b7704db2cb7f3,antirez,antirez@gmail.com,Sat Nov 17 11:17:54 2012 +0100,1353147474,Test: MULTI/EXEC tests moved into multi.tcl.,214.0,214.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/cas.tcl,CAS_DELIMITER,tests/unit/multi.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER",4.0,1.0,2.0,1.4171320080353946,11.0,225.25,103.0,147.72202835648147,5383.5,1.0865246568393707,317.0,Preventative,False,,
9c00f078978e452d541ddc8a9a2b7704db2cb7f3,4977ab79afdd5de1386a8498c35cde0c48963093,antirez,antirez@gmail.com,Sat Nov 17 12:09:17 2012 +0100,1353150557,Test: make sure EXEC fails after previous transaction errors.,28.0,0.0,"tests/unit/multi.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,213.0,1.0,0.03568287037037037,5386.0,29.02465131365553,318.0,Preventative,False,,
4977ab79afdd5de1386a8498c35cde0c48963093,65606b3bc6fb8698662811ba286be8b5cabacb55,antirez,antirez@gmail.com,Sat Nov 17 12:11:13 2012 +0100,1353150673,Test: MULTI state is cleared after EXECABORT error.,11.0,0.0,"tests/unit/multi.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,241.0,2.0,0.0013425925925925925,5387.0,745.8275862068966,319.0,Preventative,False,,
65606b3bc6fb8698662811ba286be8b5cabacb55,cceb0c5b4a24d9027abfc47924d5f93af87034b4,antirez,antirez@gmail.com,Thu Nov 22 15:28:28 2012 +0100,1353594508,Fix integer overflow in zunionInterGenericCommand().This fixes issue #761.n,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2180.0,77.0,13.877141203703706,5388.0,1.0720609515548567,1809.0,Corrective,True,,
cceb0c5b4a24d9027abfc47924d5f93af87034b4,95f68f7b0fc4ffc700361484b6c792a8e03f3a13,antirez,antirez@gmail.com,Thu Nov 22 15:50:00 2012 +0100,1353595800,EVALSHA is now case insensitive.EVALSHA used to crash if the SHA1 was not lowercase (Issue #783).nFixed using a case insensitive dictionary type for the sha -> scriptnmap used for replication of scripts.n,18.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.4166422780956525,11.0,1343.75,660.0,14.698532986111116,5390.5,1.0683291831719424,320.0,Corrective,True,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
95f68f7b0fc4ffc700361484b6c792a8e03f3a13,d7c7ac4a57dba2169934611c8473816996a5a507,charsyam,charsyam@gmail.com,Fri Nov 23 05:52:39 2012 +0800,1353621159,remove compile warning bioKillThreads,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,872.0,54.0,0.5304976851851851,2.0,2.88502236282317,2.0,None,False,,
95f68f7b0fc4ffc700361484b6c792a8e03f3a13 d7c7ac4a57dba2169934611c8473816996a5a507,23d517d2c4345abb896d58cb6ce6e5accd88d3d5,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 23 03:44:18 2012 -0800,1353671058,Merge pull request #787 from charsyam/remove-warning-bioremove compile warning bioKillThreads,,,,,,,,,,,,,,,Merge,False,,
95f68f7b0fc4ffc700361484b6c792a8e03f3a13,504e5072eb06ee2e1035bc03fa85f46f51ef6f4c,Matt Arsenault,whatmannerofburgeristhis@gmail.com,Tue Nov 27 11:41:33 2012 -0800,1354045293,"It's a watchdog, not a watchdong.",1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,873.0,55.0,4.9089583333333335,0.0,0.0,0.0,None,False,,
504e5072eb06ee2e1035bc03fa85f46f51ef6f4c 23d517d2c4345abb896d58cb6ce6e5accd88d3d5,c87a40897c82c4936563dee24bac481d970dc510,antirez,antirez@gmail.com,Wed Nov 28 11:41:27 2012 +0100,1354099287,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
c87a40897c82c4936563dee24bac481d970dc510,dee0b939fcd6650edfd8705f0685cd8430750085,charsyam,charsyam@gmail.com,Mon Nov 26 07:36:39 2012 +0800,1353886599,Remove unnecessary condition in _dictExpandIfNeeded (dict.c),1.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,811.0,22.0,17.257824074074072,3.0,1.0579447325287243,3.0,None,False,,
dee0b939fcd6650edfd8705f0685cd8430750085,7383c3b12920c6ae20f7c64c5db92f59e2b02aa5,antirez,antirez@gmail.com,Wed Nov 28 18:39:35 2012 +0100,1354124375,Jemalloc updated to version 3.2.0.,1741.0,631.0,"deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/ALLOCM_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/ALLOCM_ARENA.exp,CAS_DELIMITER,deps/jemalloc/test/thread_arena.c,CAS_DELIMITER",40.0,1.0,6.0,3.6265889861771323,10.0,720.425,93.0,205.9260266203703,5412.5,1.0005356497897215,514.0,None,False,True,"[""fceef8e0ddfca103b2f0328e3ad9ae522093f2c8""]"
7383c3b12920c6ae20f7c64c5db92f59e2b02aa5,b1b602a92887f271db3101d67e0319ce31fa68b3,antirez,antirez@gmail.com,Sun Nov 25 16:21:21 2012 +0100,1353856881,"On crash memory test rewrote so that it actaully works.1) We no longer test location by location, otherwise the CPU write cachencompletely makes our business useless.n2) We still need a memory test that operates in steps from the first tonthe last location in order to never hit the cache, but that is stillnable to retain the memory content.nnThis was tested using a Linux box containing a bad memory module with anzingle bit error (always zero).nnSo the final solution does has an error propagation step that is:nn1) Invert bits at every location.n2) Swap adiacent locations.n3) Swap adiacent locations again.n4) Invert bits at every location.n5) Swap adiacent locations.n6) Swap adiacent locations again.nnBefore and after these steps, and after step 4, a CRC64 checksum is computed.nIf the three CRC64 checksums don't match, a memory error was detected.n",70.0,34.0,"src/debug.c,CAS_DELIMITER,src/memtest.c,CAS_DELIMITER",2.0,1.0,1.0,0.9731560354421096,11.0,579.0,67.0,0.9727488425925924,5433.5,1.0277188879016033,1814.0,Preventative,False,True,"[""2f62c9663ca48b647d71f21d0cdf499346457f0f"", ""717e5ffb45acc4e976e44d19d816e320cd2d0662"", ""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
b1b602a92887f271db3101d67e0319ce31fa68b3,2f62c9663ca48b647d71f21d0cdf499346457f0f,antirez,antirez@gmail.com,Thu Nov 29 14:20:08 2012 +0100,1354195208,"Introduced the Build ID in INFO and --version output.The idea is to be able to identify a build in a unique way, so forninstance after a bug report we can recognize that the build is the onenof a popular Linux distribution and perform the debugging in the samenenvironment.n",30.0,9.0,"src/Makefile,CAS_DELIMITER,src/crc64.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/mkreleasehdr.sh,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/release.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER",9.0,1.0,1.0,2.833462400774036,11.0,681.5555555555555,745.0,122.33494598765436,5439.0,1.0031855822046052,1823.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
2f62c9663ca48b647d71f21d0cdf499346457f0f,925090f47628d1916b91baefd4e85633eb31b91f,antirez,antirez@gmail.com,Thu Nov 29 16:12:14 2012 +0100,1354201934,Make an EXEC test more latency proof.,2.0,2.0,"tests/unit/multi.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,252.0,3.0,12.167372685185185,5444.0,1.0821870115984518,321.0,Preventative,False,,
925090f47628d1916b91baefd4e85633eb31b91f,395d663d29e6c3fe8fe7c9a3503b96c9bde211f3,antirez,antirez@gmail.com,Fri Nov 30 01:35:34 2012 +0100,1354235734,SDIFF fuzz test added.,26.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,498.0,19.0,23.215277777777786,5445.0,1.0430750822614419,322.0,Feature Addition,False,,
395d663d29e6c3fe8fe7c9a3503b96c9bde211f3,b4abbaf755d723d33b0e81880fb035ab88f3544f,antirez,antirez@gmail.com,Fri Nov 30 15:41:09 2012 +0100,1354286469,redis-benchmark: seed the PRNG with time() at startup.,2.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,681.0,35.0,21.885949074074073,5446.0,1.045691415831018,1824.0,None,False,,
b4abbaf755d723d33b0e81880fb035ab88f3544f,f50e658455f6455ac443e185e5fc738ef15093b3,antirez,antirez@gmail.com,Fri Nov 30 15:41:26 2012 +0100,1354286486,"SDIFF is now able to select between two algorithms for speed.SDIFF used an algorithm that was O(N) where N is the total numbernof elements of all the sets involved in the operation.nnThe algorithm worked like that:nnALGORITHM 1:nn1) For the first set, add all the members to an auxiliary set.n2) For all the other sets, remove all the members of the set from thenauxiliary set.nnSo it is an O(N) algorithm where N is the total number of elements innall the sets involved in the diff operation.nnCristobal Viedma suggested to modify the algorithm to the following:nnALGORITHM 2:nn1) Iterate all the elements of the first set.n2) For every element, check if the element also exists in all the othernremaining sets.n3) Add the element to the auxiliary set only if it does not exist in anynof the other sets.nnThe complexity of this algorithm on the worst case is O(N*M) where N isnthe size of the first set and M the total number of sets involved in thenoperation.nnHowever when there are elements in common, with this algorithm we stopnthe computation for a given element as long as we find a duplicatednelement into another set.nnI (antirez) added an additional step to algorithm 2 to make it faster,nthat is to sort the set to subtract from the biggest to thensmallest, so that it is more likely to find a duplicate in a larger setsnthat are checked before the smaller ones.nnWHAT IS BETTER?nnNone of course, for instance if the first set is much larger than thenother sets the second algorithm does a lot more work compared to thenfirst algorithm.nnSimilarly if the first set is much smaller than the other sets, thenoriginal algorithm will less work.nnSo this commit makes Redis able to guess the number of operationsnrequired by each algorithm, and select the best at runtime accordingnto the input received.nnHowever, since the second algorithm has better constant times and can donless work if there are duplicated elements, an advantage is given to thensecond algorithm.n",101.0,19.0,"src/t_set.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.32079303554752325,11.0,586.0,45.0,11.236776620370376,5447.5,1.0450938757461241,323.0,None,False,,
f50e658455f6455ac443e185e5fc738ef15093b3,4e6dd7bc86ccb0dcf47c9a6e712ff51a28162cf6,antirez,antirez@gmail.com,Sat Dec 1 12:26:07 2012 +0100,1354361167,"Client should not block multiple times on the same key.Sending a command like:nnBLPOP foo foo foo foo 0nnResulted into a crash before this commit since the client ended beingninserted in the waiting list for this key multiple times.nThis resulted into the function handleClientsBlockedOnLists() to failnbecause we have code like that:nnif (de) {nlist *clients = dictGetVal(de);nint numclients = listLength(clients);nnwhile(numclients--) {nlistNode *clientnode = listFirst(clients);nn/* server clients here... */n}n}nnThe code to serve clients used to remove the served client from thenwaiting list, so if a client is blocking multiple times, eventually thencall to listFirst() will return NULL or worse will access random memorynsince the list may no longer exist as it is removed by the functionnunblockClientWaitingData() if there are no more clients waiting for thisnlist.nnTo avoid making the rest of the implementation more complex, this commitnmodifies blockForKeys() so that a client will be put just a single timeninto the waiting list for a given key.nnSince it is Saturday, I hope this fixes issue #801.n",20.0,6.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1116.0,47.0,22.75050925925926,5449.0,1.0439550600210414,1826.0,None,False,,
4e6dd7bc86ccb0dcf47c9a6e712ff51a28162cf6,c135b856c664f12b0fa3197df603db3039fe92c2,antirez,antirez@gmail.com,Sat Dec 1 23:07:09 2012 +0100,1354399629,Test: regression for issue #801.,21.0,0.0,"tests/unit/type/list.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,852.0,35.0,25.11221064814815,5450.0,1.0398212652008691,324.0,Preventative,False,,
c135b856c664f12b0fa3197df603db3039fe92c2,2f87cf8b0162bd9d78c3a89860c0971cd71d39db,antirez,antirez@gmail.com,Sun Dec 2 20:36:18 2012 +0100,1354476978,"Blocking POP: use a dictionary to store keys clinet side.To store the keys we block for during a blocking pop operation, in thencase the client is blocked for more data to arrive, we used a simplenlinear array of redis objects, in the blockingState structure:nnrobj **keys;nint count;nnHowever in order to fix issue #801 we also use a dictionary in order tonavoid to end in the blocked clients queue for the same key multiplentimes with the same client.nnThe dictionary was only temporary, just to avoid duplicates, but sincenwe create / destroy it there is no point in doing this duplicated work,nso this commit simply use a dictionary as the main structure to storenthe keys we are blocked for. So instead of the previous fields we nownjust have:nndict *keys;nnThis simplifies the code and reduces the work done by the server duringna blocking POP operation.n",20.0,36.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,0.5983801989671903,11.0,1268.6666666666667,435.0,9.564182098765432,5452.0,1.037640630340299,1829.0,None,False,,
f50e658455f6455ac443e185e5fc738ef15093b3,bb58e517a9d7941cf106fae85a35624141357912,Brian J. McManus,bmcmanus@gmail.com,Sun Dec 2 21:46:37 2012 -0700,1354509997,Issue 804 Add Default-Start and Default-Stop LSB tags for RedHat startup and update-rc.d compatability.,2.0,0.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,188.0,13.0,177.65508101851853,0.0,0.0,0.0,Feature Addition,False,,
2f87cf8b0162bd9d78c3a89860c0971cd71d39db,a18ca73681aeabbf5b44796b2c167f8a57e07f6e,antirez,antirez@gmail.com,Mon Dec 3 12:06:38 2012 +0100,1354532798,"Test: fixed osx leaks support in test.Due to changes in recent releases of osx leaks utility, the osx leakndetection no longer worked. Now it is fixed in a way that should benbackward compatible.n",3.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,303.0,33.0,40.096319444444454,5454.0,1.024939944958927,325.0,Preventative,False,,
a18ca73681aeabbf5b44796b2c167f8a57e07f6e,ab2924cff353d7abe293b8f10d032dc466dfd4a4,antirez,antirez@gmail.com,Mon Dec 3 12:12:53 2012 +0100,1354533173,Memory leak fixed: release client's bpop->keys dictionary.Refactoring performed after issue #801 resolution (see commitn2f87cf8b0162bd9d78c3a89860c0971cd71d39db) introduced a memory leak thatnis fixed by this commit.nnI simply forgot to free the new allocated dictionary in the clientnstructure trusting the output of make test on OSX.nnHowever due to changes in the leaks utility the test was no longerntesting memory leaks. This problem was also fixed.nnFortunately the CI test running at ci.redis.io spotted the bug in thenvalgrind run.nnThe leak never ended into a stable release.n,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1371.0,119.0,0.6504050925925926,5455.0,2.5375033365957824,1830.0,Corrective,True,,
ab2924cff353d7abe293b8f10d032dc466dfd4a4 bb58e517a9d7941cf106fae85a35624141357912,bf0852e5ed56dfbe32e19d926f8d5cc76f750cc8,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 3 03:30:13 2012 -0800,1354534213,Merge pull request #807 from bmcmanus/issue-804Resolution for Issue #804 Add Default-Start and Default-Stop LSB tags for RedHat startup...,,,,,,,,,,,,,,,Merge,False,,
bf0852e5ed56dfbe32e19d926f8d5cc76f750cc8,705874e31db0196d8e1b23a28e8265dbdd2dc136,antirez,antirez@gmail.com,Tue Dec 11 17:01:00 2012 +0100,1355241660,"Fix config.h endianess detection to work on Linux / PPC64.Config.h performs endianess detection including OS-specific headers tondefine the endianess macros, or when this is not possible, checking thenprocessor type via ifdefs.nnSometimes when the OS-specific macro is included, only __BYTE_ORDER isndefined, while BYTE_ORDER remains undefined. There is code at the end ofnconfig.h endianess detection in order to define the macros without thenunderscore, but it was not working correctly.nnThis commit fixes endianess detection fixing Redis on Linux / PPC64 andnpossibly other systems.n",16.0,2.0,"src/config.h,CAS_DELIMITER,src/endianconv.h,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,11.0,115.5,23.0,160.17475694444445,5456.5,1.0263683928076457,1832.0,Corrective,True,,
bf0852e5ed56dfbe32e19d926f8d5cc76f750cc8,289942b6259670fe3dcfaffdd0135c27f14c61c0,Patrick TJ McPhee,pmcphee@givex.com,Wed Dec 12 10:49:12 2012 -0500,1355327352,Define _XOPEN_SOURCE appropriately on NetBSD.,2.0,2.0,"deps/hiredis/fmacros.h,CAS_DELIMITER,src/fmacros.h,CAS_DELIMITER",2.0,2.0,2.0,1.0,11.0,32.0,7.0,165.39111689814808,0.5,0.5015115684849868,0.0,None,False,,
705874e31db0196d8e1b23a28e8265dbdd2dc136 289942b6259670fe3dcfaffdd0135c27f14c61c0,a4d68dc5419121660bd8f992d58e1e46075a371a,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 12 09:34:41 2012 -0800,1355333681,Merge pull request #824 from ptjm/unstableDefine _XOPEN_SOURCE appropriately on NetBSD.,,,,,,,,,,,,,,,Merge,False,,
a4d68dc5419121660bd8f992d58e1e46075a371a,f1481d4a03e96c71a664bafadf0241e88794ca60,antirez,antirez@gmail.com,Fri Dec 14 17:10:40 2012 +0100,1355501440,"serverCron() frequency is now a runtime parameter (was REDIS_HZ).REDIS_HZ is the frequency our serverCron() function is called with.nA more frequent call to this function results into less latency when thenserver is trying to handle very expansive background operations likenmass expires of a lot of keys at the same time.nnRedis 2.4 used to have an HZ of 10. This was good enough with almostnevery setup, but the incremental key expiration algorithm was working anbit better under *extreme* pressure when HZ was set to 100 for Redisn2.6.nnHowever for most users a latency spike of 30 milliseconds when millionnof keys are expiring at the same time is acceptable, on the other hand andefault HZ of 100 in Redis 2.6 was causing idle instances to use somenCPU time compared to Redis 2.4. The CPU usage was in the order of 0.3%nfor an idle instance, however this is a shame as more energy is consumednby the server, if not important resources.nnThis commit introduces HZ as a runtime parameter, that can be queried bynINFO or CONFIG GET, and can be modified with CONFIG SET. At the samentime the default frequency is set back to 10.nnIn this way we default to a sane value of 10, but allows users toneasily switch to values up to 500 for near real-time applications ifnneeded and if they are willing to pay this small CPU usage penalty.n",47.0,13.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",6.0,2.0,2.0,2.227214531030602,11.0,1207.1666666666667,847.0,37.00038966049382,5460.5,1.006351775349547,1837.0,Perfective,False,True,"[""55ba77270363400625f4563788d8f842408389a2""]"
f1481d4a03e96c71a664bafadf0241e88794ca60,d01aad329c259a7276c448cee6696b04dfa6f8c1,antirez,antirez@gmail.com,Mon Dec 17 11:11:09 2012 +0100,1355739069,Added missing license and copyright in deps/hiredis.,90.0,0.0,"deps/hiredis/adapters/ae.h,CAS_DELIMITER,deps/hiredis/adapters/libev.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,7.0,136.0,11.0,301.6142708333333,5465.0,1.0020261346037198,517.0,Feature Addition,False,,
d01aad329c259a7276c448cee6696b04dfa6f8c1,ebbc4ebb261f7bcd135000bb5e17e49b548d7b5c,antirez,antirez@gmail.com,Mon Dec 17 11:13:54 2012 +0100,1355739234,CONTRIBUTING updated with request to add BSD license.,2.0,1.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,33.0,5.0,38.68789351851852,5467.0,1.0258478792473242,1304.0,Feature Addition,False,,
ebbc4ebb261f7bcd135000bb5e17e49b548d7b5c,4dc1e0dd3049b6f2efa9b30b078e7dfec714c7ea,antirez,antirez@gmail.com,Thu Dec 20 15:20:55 2012 +0100,1356013255,Fix overflow in mstime() in redis-cli and benchmark.The problem does not exist in the Redis server implementation of mstime()nbut is only limited to redis-cli and redis-benchmark.nnThix fixes issue #839.n,2.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,11.0,980.0,108.0,30.928923611111113,5468.5,1.0331006248415742,1839.0,Corrective,True,,
4dc1e0dd3049b6f2efa9b30b078e7dfec714c7ea,e9261b1e2d5cf0e2838b69442d718784a6f7ab34,antirez,antirez@gmail.com,Thu Jan 3 14:18:03 2013 +0100,1357219083,ae.c: set errno when error is not a failing syscall.In this way the caller is able to perform better error checking or tonuse strerror() without the risk of meaningless error messages beingndisplayed.n,5.0,1.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,431.0,12.0,90.2135300925926,5470.0,1.0110848117679647,1840.0,None,False,,
e9261b1e2d5cf0e2838b69442d718784a6f7ab34,d7740fc8f350f6332fee27299c1152ba6c5dc9d0,antirez,antirez@gmail.com,Thu Jan 3 14:22:55 2013 +0100,1357219375,Better error reporting when fd event creation fails.,6.0,2.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,11.0,1089.5,169.0,25.486903935185186,5471.5,1.025891145093705,1842.0,Corrective,True,,
d7740fc8f350f6332fee27299c1152ba6c5dc9d0,717e5ffb45acc4e976e44d19d816e320cd2d0662,Bilal Husain,bilal@bilalhusain.com,Wed Jan 9 21:46:58 2013 +0530,1357748218,s/adiacent/adjacent/fixed typo in a comment (step 2 memcheck),1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,913.0,59.0,26.004375,0.0,0.0,0.0,Corrective,True,True,"[""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
d7740fc8f350f6332fee27299c1152ba6c5dc9d0,baee5650295e72fbcfe1f69ca7fa60f64cb5f740,antirez,antirez@gmail.com,Thu Jan 10 10:46:05 2013 +0100,1357811165,Multiple fixes for EVAL (issue #872).1) The event handler was no restored after a timeout condition if then   command was eventually executed with success.n2) The command was not converted to EVAL in case of errors in the middlen   of the execution.n3) Terrible duplication of code without any apparent reason.n,21.0,20.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1021.0,64.0,48.78894675925926,5473.0,1.0204964457407604,1843.0,Corrective,True,True,"[""41d3147344da4656b6a21c73373c34d25fe8f24d""]"
baee5650295e72fbcfe1f69ca7fa60f64cb5f740,a5cc063c1714d8d996ce0b1ea6ffaa4a970859e6,antirez,antirez@gmail.com,Thu Jan 10 11:10:31 2013 +0100,1357812631,Test: added regression for issue #872.,27.0,7.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,369.0,24.0,48.80591435185186,5474.0,1.020489320060491,326.0,Preventative,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
a5cc063c1714d8d996ce0b1ea6ffaa4a970859e6,f5fa6824db4810023342a86ad5f9007cdee1bb67,antirez,antirez@gmail.com,Thu Jan 10 11:19:40 2013 +0100,1357813180,Comment in the call() function clarified a bit.,3.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2704.0,310.0,26.75625,5475.0,1.0373744452230786,1844.0,None,False,,
f5fa6824db4810023342a86ad5f9007cdee1bb67,a33869c330b55032b7f042aa72a289c131586f6f,antirez,antirez@gmail.com,Fri Jan 11 23:50:32 2013 +0100,1357944632,Makefile.dep updated.,18.0,9.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,104.0,2.0,275.52641203703706,5476.0,1.003629416115162,1845.0,None,False,,
a33869c330b55032b7f042aa72a289c131586f6f,ef99e146a8038cfd3e35a77c11b3bb97085c9c4c,antirez,antirez@gmail.com,Mon Jan 14 11:39:54 2013 +0100,1358159994,"Undo slave-master handshake when SLAVEOF sets a new slave.Issue #828 shows how Redis was not correctly undoing a non-blockingnconnection attempt with the previous master when the master was set to annew address using the SLAVEOF command.nnThis was also a result of lack of refactoring, so now there is anfunction to cancel the non blocking handshake with the master.nThe new function is now used when SLAVEOF NO ONE is called or whennSLAVEOF is used to set the master to a different address.n",23.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,809.0,50.0,10.886793981481485,5477.0,1.091854406513158,1846.0,Feature Addition,False,,
ef99e146a8038cfd3e35a77c11b3bb97085c9c4c,1971740f0c8c4bf9a484188f5966e8c2a9369490,antirez,antirez@gmail.com,Fri Jan 11 18:43:28 2013 +0100,1357926208,"CLIENT GETNAME and CLIENT SETNAME introduced.Sometimes it is much simpler to debug complex Redis installations if itnis possible to assign clients a name that is displayed in the CLIENTnLIST output.nnThis is the case, for example, for leaked connections. The ability tonprovide a name to the client makes it quite trivial to understand whatnis the part of the code implementing the client not releasing thenresources appropriately.nnBehavior:nnCLIENT SETNAME: set a name for the client, or remove the currentnname if an empty name is set.nCLIENT GETNAME: get the current name, or a nil.nCLIENT LIST: now displays the client name if any.nnThanks to Mark Gravell for pushing this idea forward.n",41.0,2.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.3179012154150879,11.0,1283.6666666666667,479.0,29.84136188271605,5479.0,1.015403414640763,1849.0,Corrective,True,True,"[""9b89ab06c46cbf72df3c0ac89118523faefe0c77""]"
1971740f0c8c4bf9a484188f5966e8c2a9369490,9b89ab06c46cbf72df3c0ac89118523faefe0c77,antirez,antirez@gmail.com,Fri Jan 11 18:50:40 2013 +0100,1357926640,"Typo fixed, ASCI -> ASCII.",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1411.0,122.0,0.005,5481.0,201.0,1850.0,Corrective,True,,
9b89ab06c46cbf72df3c0ac89118523faefe0c77,ea1f503cfe5c690027b4f4bdce465868d36bf6b1,antirez,antirez@gmail.com,Mon Jan 14 10:19:20 2013 +0100,1358155160,Tests for CLIENT GETNAME/SETNAME.,33.0,0.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,22.0,5.0,281.99509259259264,5482.0,1.0035461610016196,327.0,Preventative,False,,
ea1f503cfe5c690027b4f4bdce465868d36bf6b1,1dc2d6dc47b9cc70e9eee4501fea5b209b0a22a7,Hu Weiwei,huww06@gmail.com,Wed Jan 16 18:04:43 2013 +0800,1358330683,fixed some typos.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,2705.0,311.0,5.9896180555555585,0.0,0.0,0.0,Corrective,True,,
ea1f503cfe5c690027b4f4bdce465868d36bf6b1,8937f5e5004e3d5b120cf009efb11c82188d85c4,Alice Ku00c3u00a6rast,alice@kaerast.info,Wed Jan 16 15:02:06 2013 +0000,1358348526,Typo in sentinel.confFixes a minor typo in sentinel.conf,1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,150.0,10.0,111.91819444444445,0.0,0.0,0.0,Corrective,True,,
ea1f503cfe5c690027b4f4bdce465868d36bf6b1,a0c24821e2e18fdc9bf1410018cc2da00e16c255,antirez,antirez@gmail.com,Wed Jan 16 19:42:40 2013 +0100,1358361760,redis-cli: save an RDB dump from remote server to local file.,81.0,8.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1277.0,73.0,27.18177083333333,5483.0,1.036789361742896,1851.0,None,False,True,"[""59046a7373215cd535cba7b7864ded34301c2357"", ""9d09ce3981deb58282ae47c87e1080936f04991f"", ""c85ae56edc982d28df5cb29eedcd9d8bc9840a05""]"
ea1f503cfe5c690027b4f4bdce465868d36bf6b1,e3962366519e171aff0c7ae1253edb554fc85c5d,charsyam,charsyam@gmail.com,Wed Jan 16 17:20:54 2013 -0800,1358385654,redis-cli prompt bug fix,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1350.0,74.0,0.27655092592592595,4.0,4.615970536536368,4.0,Corrective,True,,
a0c24821e2e18fdc9bf1410018cc2da00e16c255,1920cab3bc6b003367634d5583cd2e389d52fe4a,Nathan Parry,nparry@gmail.com,Thu Jan 17 23:55:43 2013 -0500,1358484943,"redis-cli --rdb fails if server sends a pingRedis pings slaves in pre-synchronization stage with newlines. (Seenhttps://github.com/antirez/redis/blob/2.6.9/src/replication.c#L814)nHowever, redis-cli does not expect this - it sees the newline as the endnof the bulk length line, and ends up returning 0 as bulk the length.nThis manifests as the following when running redis-cli:nn$ ./src/redis-cli --rdb some_filenSYNC sent to master, writing 0 bytes to 'some_file'nTransfer finished with success.nnWith this commit, we just ignore leading newlines while reading the bulknlength line.nnTo reproduce the problem, load enough data into Redis so that thenpreparation of the RDB snapshot takes long enough for a ping to occurnwhile redis-cli is waiting for the data.n",2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1351.0,75.0,1.1491782407407407,0.0,0.0,0.0,Corrective,True,,
a0c24821e2e18fdc9bf1410018cc2da00e16c255,59046a7373215cd535cba7b7864ded34301c2357,Jan-Erik Rediger,badboy@archlinux.us,Fri Jan 18 10:13:10 2013 +0100,1358500390,Always exit if connection fails.This avoids unnecessary core dumps. Fixes antirez/redis#894n,4.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1351.0,76.0,0.17878472222222222,1.0,6.593319091085648,1.0,Corrective,True,,
a0c24821e2e18fdc9bf1410018cc2da00e16c255 1920cab3bc6b003367634d5583cd2e389d52fe4a,21b3ff9ba0f182f1f25e419b5c84f0833d746255,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 18 02:41:29 2013 -0800,1358505689,Merge pull request #893 from nparry/fix-redis-cli-rdbredis-cli --rdb fails if server sends a ping,,,,,,,,,,,,,,,Merge,False,,
21b3ff9ba0f182f1f25e419b5c84f0833d746255,c2dc172a9d9f76cacdad0a62f889a9bbd885ad58,bitterb,bitterb7@gmail.com,Sat Jan 19 14:11:33 2013 +0900,1358572293,Fix an error reply for CLIENT command,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,1411.0,123.0,7.472835648148147,0.0,0.0,0.0,Corrective,True,,
21b3ff9ba0f182f1f25e419b5c84f0833d746255 c2dc172a9d9f76cacdad0a62f889a9bbd885ad58,947f1689d3071ff9e7a91f50347ec226fd20366e,Salvatore Sanfilippo,antirez@gmail.com,Sat Jan 19 01:25:01 2013 -0800,1358587501,Merge pull request #896 from bitterb/fix-client-command-error-messageFix an error reply for CLIENT command,,,,,,,,,,,,,,,Merge,False,,
947f1689d3071ff9e7a91f50347ec226fd20366e 59046a7373215cd535cba7b7864ded34301c2357,74f137308e67684091fb099e10b3434a676d6f85,Salvatore Sanfilippo,antirez@gmail.com,Sat Jan 19 01:27:56 2013 -0800,1358587676,Merge pull request #895 from badboy/catch_con_errorredis-cli: always exit if connection fails.,,,,,,,,,,,,,,,Merge,False,,
74f137308e67684091fb099e10b3434a676d6f85 e3962366519e171aff0c7ae1253edb554fc85c5d,61dfc2e5217361b21258ae0cc408e9b719c8565e,Salvatore Sanfilippo,antirez@gmail.com,Sat Jan 19 01:32:28 2013 -0800,1358587948,Merge pull request #887 from charsyam/redis-cli-promptredis-cli prompt bug fix,,,,,,,,,,,,,,,Merge,False,,
61dfc2e5217361b21258ae0cc408e9b719c8565e,9d09ce3981deb58282ae47c87e1080936f04991f,guiquanz,nantangguyun@gmail.com,Thu Jan 17 01:00:20 2013 +0800,1358355620,Fixed many typos.,154.0,154.0,"00-RELEASENOTES,CAS_DELIMITER,redis.conf,CAS_DELIMITER,sentinel.conf,CAS_DELIMITER,src/adlist.c,CAS_DELIMITER,src/ae.c,CAS_DELIMITER,src/ae_evport.c,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/crc16.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/lzfP.h,CAS_DELIMITER,src/mkreleasehdr.sh,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis-trib.rb,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/release.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/sha1.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",42.0,3.0,3.0,4.835740562018558,12.0,759.7380952380953,2008.0,94.17739473104055,20.5,0.9770693832683452,37.0,Corrective,True,True,"[""e50cdbe461263db87f910ce963c3e6a222c91835"", ""50d43a9823be553a393127bc45e507d3a60982d7"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""145473acc5798a499a0f37e42df48a014a3955c1"", ""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""218e522c82fc1e05b3db8ba5f59856e2c29ccdc0""]"
9d09ce3981deb58282ae47c87e1080936f04991f,08d200baeb816ecc7725a9252d0442fb8337b734,antirez,antirez@gmail.com,Sat Jan 19 12:52:05 2013 +0100,1358596325,"Slowlog: don't log EXEC but just the executed commands.The Redis Slow Log always used to log the slow commands executed insidena MULTI/EXEC block. However also EXEC was logged at the end, which isnperfectly useless.nnNow EXEC is no longer logged and a test was added to test this behavior.nnThis fixes issue #759.n",13.0,1.0,"src/redis.c,CAS_DELIMITER,tests/unit/slowlog.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,12.0,1381.5,316.0,137.77909143518517,5484.5,1.181287297482447,328.0,None,False,,
08d200baeb816ecc7725a9252d0442fb8337b734,ab247fc1763be83781c14336ebd11a2a42e7ad20,antirez,antirez@gmail.com,Sat Jan 19 13:19:41 2013 +0100,1358597981,Clear server.shutdown_asap on failed shutdown.When a SIGTERM is received Redis schedules a shutdown. However if itnfails to perform the shutdown it must be clear the shutdown_asap flagnotehrwise it will try again and again possibly making the servernunusable.n,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2705.0,314.0,0.019166666666666658,5486.0,53.17391304347826,1853.0,Corrective,True,,
ab247fc1763be83781c14336ebd11a2a42e7ad20,79a0ef62db890c007166a2c09d11691923236716,antirez,antirez@gmail.com,Mon Jan 14 10:29:14 2013 +0100,1358155754,"Whitelist SIGUSR1 to avoid auto-triggering errors.This commit fixes issue #875 that was caused by the following events:nn1) There is an active child doing BGSAVE.n2) flushall is called (or any other condition that makes Redis killingnthe saving child process).n3) An error is sensed by Redis as the child exited with an error (killednby a singal), that stops accepting write commands until a BGSAVE happensnto be executed with success.nnWhitelisting SIGUSR1 and making sure Redis always uses this signal innorder to kill its own children fixes the issue.n",8.0,5.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.884313527799799,12.0,1458.5,569.0,-3.0145399305555562,5488.5,0.7811344024511973,1857.0,Corrective,True,True,"[""c494db89b5c2ef34758f599ee46ac7265782ad77"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
79a0ef62db890c007166a2c09d11691923236716,e50cdbe461263db87f910ce963c3e6a222c91835,antirez,antirez@gmail.com,Sat Jan 19 13:46:14 2013 +0100,1358599574,Additionally two typos fixed thanks to @jodal,2.0,2.0,"src/networking.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,903.0,165.0,2.823541666666667,5491.5,1.2656238471187191,1859.0,Corrective,True,,
e50cdbe461263db87f910ce963c3e6a222c91835,cd892d015d3c870f0fb4e8449cfceeacc1191966,antirez,antirez@gmail.com,Mon Jan 21 12:06:54 2013 +0100,1358766414,Not every __sun has backtrace().I don't know how to test for Open Solaris that has support fornbacktrace() so for now removing the #ifdef that breaks compilation undernother Solaris flavors.n,1.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,181.0,22.0,40.795763888888885,5493.0,1.0245123489469052,1860.0,Preventative,False,,
cd892d015d3c870f0fb4e8449cfceeacc1191966 8937f5e5004e3d5b120cf009efb11c82188d85c4,4698f6756bc9cdb78dc2841ec33871ecf6b20372,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 03:11:25 2013 -0800,1358766685,Merge pull request #884 from kaerast/patch-1Typo in sentinel.conf,,,,,,,,,,,,,,,Merge,False,,
4698f6756bc9cdb78dc2841ec33871ecf6b20372 1dc2d6dc47b9cc70e9eee4501fea5b209b0a22a7,6db93e6740936f6ee6f8bf90d04a30f77dbf265d,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 03:12:03 2013 -0800,1358766723,Merge pull request #883 from deepsolo9/fix-typos-deepsolo9fixed some typos in Redis.c,,,,,,,,,,,,,,,Merge,False,,
6db93e6740936f6ee6f8bf90d04a30f77dbf265d 717e5ffb45acc4e976e44d19d816e320cd2d0662,442235fe40162632f3ac27b575b3fd11fc59a560,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 03:19:02 2013 -0800,1358767142,Merge pull request #869 from bilalhusain/patch-2s/adiacent/adjacent/,,,,,,,,,,,,,,,Merge,False,,
442235fe40162632f3ac27b575b3fd11fc59a560,93f61bb2a492cf008e353db951275ba0b12490dc,antirez,antirez@gmail.com,Mon Jan 21 12:34:22 2013 +0100,1358768062,"Fixed a bug in memtest progress bar, that had no actual effects.This closes issue #859, thanks to @erbenmo.n",2.0,4.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,281.0,12.0,56.842372685185175,5494.0,1.017592509826048,1861.0,Corrective,True,,
93f61bb2a492cf008e353db951275ba0b12490dc,2039f1a38ac23311abc71fc7d862d9e5b22598c6,antirez,antirez@gmail.com,Mon Jan 21 18:50:16 2013 +0100,1358790616,"UNSUBSCRIBE and PUNSUBSCRIBE: always provide a reply.UNSUBSCRIBE and PUNSUBSCRIBE commands are designed to mass-unsubscribenthe client respectively all the channels and patters if called withoutnarguments.nnHowever when these functions are called without arguments, but there arenno channels or patters we are subscribed to, the old behavior was tondon't reply at all.nnThis behavior is broken, as every command should always reply.nAlso it is possible that we are no longer subscribed to a channels but wenare subscribed to patters or the other way around, and the client shouldnbe notified with the correct number of subscriptions.nnAlso it is not pretty that sometimes we did not receive a reply at allnin a redis-cli session from these commands, blocking redis-cli tryingnto read the reply.nnThis fixes issue #714.n",27.0,1.0,"src/pubsub.c,CAS_DELIMITER,tests/unit/pubsub.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9852281360342516,12.0,246.0,13.0,477.7002835648148,5495.5,1.0998345987329008,329.0,None,False,,
2039f1a38ac23311abc71fc7d862d9e5b22598c6,88015b89a0578a1d96fbd8890505c7f4469374fe,antirez,antirez@gmail.com,Mon Jan 21 19:15:51 2013 +0100,1358792151,redis-cli --bigkeys output is now simpler to understand.,4.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1351.0,78.0,5.05244212962963,5497.0,1.1979240878654671,1863.0,None,False,,
88015b89a0578a1d96fbd8890505c7f4469374fe,61853a9c758bc9d368d4610c0f89387c95b9301d,antirez,antirez@gmail.com,Wed Jan 23 10:48:59 2013 +0100,1358934539,Lua struct library updated to version 0.2.There was a bug in the previous version of this library that caused ancrash under the circumstances described in issue #901.nnThe newer version of the library appears to be fixed (I tested itnmanually with valgrind and everything seems fine now).nnFor more information about this library please visit this web site:nnhttp://www.inf.puc-rio.br/~roberto/struct/n,119.0,52.0,"deps/lua/src/lua_struct.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,354.0,1.0,344.5303009259259,5498.0,1.002902502326537,518.0,Corrective,True,,
61853a9c758bc9d368d4610c0f89387c95b9301d,a405979f5f6b4bbf36ab30543bd418461794918a,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Thu Jan 24 09:25:47 2013 +1100,1358979947,Check available tcl versions,10.0,5.0,"runtest,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,9.0,2.0,350.0422222222222,0.0,0.0,0.0,None,False,,
a405979f5f6b4bbf36ab30543bd418461794918a,acb046773d5fe08f4c457c25e8a3eb71bb398d08,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Thu Jan 24 09:36:59 2013 +1100,1358980619,Enforce tcl 8.5 or newer,2.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,443.0,76.0,67.51325231481482,1.0,1.014811906784419,0.0,Feature Addition,False,,
acb046773d5fe08f4c457c25e8a3eb71bb398d08,1154283577e94eb487df725196e17847ae684497,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Thu Jan 24 09:37:18 2013 +1100,1358980638,Use `info nameofexectuable`  to find current executable,6.0,3.0,"tests/integration/replication-4.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.584962500721156,11.0,220.66666666666663,97.0,147.0580979938272,3.0,1.002623746567325,3.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
61853a9c758bc9d368d4610c0f89387c95b9301d,50d43a9823be553a393127bc45e507d3a60982d7,Pierre Chapuis,catwell@archlinux.us,Mon Jan 28 11:07:17 2013 +0100,1359367637,fix comments forgotten in #285 (zipmap -> ziplist),3.0,3.0,"src/redis.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2120.5,352.0,41.83153356481482,2.5,1.0416233582620604,1.0,Corrective,True,True,"[""9aba616866a113174366f53b6354f23c80766c37""]"
61853a9c758bc9d368d4610c0f89387c95b9301d,4cdbce341ebff64d392a42011f4a9258f8aa834f,antirez,antirez@gmail.com,Wed Jan 23 16:23:33 2013 +0100,1358954613,Keyspace events notification API.,108.0,3.0,"redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/Makefile.dep,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",7.0,2.0,2.0,1.4852839343689577,12.0,843.1428571428571,850.0,11.827614087301589,5502.0,1.0319992883493059,1869.0,None,False,True,"[""08d8bb57df97f9ab206dbc229a64c4f9fe7ffc4d""]"
4cdbce341ebff64d392a42011f4a9258f8aa834f,08d8bb57df97f9ab206dbc229a64c4f9fe7ffc4d,antirez,antirez@gmail.com,Wed Jan 23 16:38:47 2013 +0100,1358955527,Two fixes to initial keyspace notifications API.,3.0,1.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,77.0,1.0,0.010578703703703705,5506.0,95.52954048140043,1870.0,Corrective,True,,
08d8bb57df97f9ab206dbc229a64c4f9fe7ffc4d,2ea9518a530bf64cfe3b6e124f67efc1d355240f,antirez,antirez@gmail.com,Wed Jan 23 16:44:45 2013 +0100,1358955885,Fixed over-80-cols comment in db.c,2.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,762.0,82.0,9.260775462962963,5507.0,1.1079823178954449,1871.0,Corrective,True,,
2ea9518a530bf64cfe3b6e124f67efc1d355240f,5b9357a6b3b22bad794931bb71f56c612d6e7aac,antirez,antirez@gmail.com,Wed Jan 23 17:04:18 2013 +0100,1358957058,Initial test events for the new keyspace notification API.,11.0,0.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",3.0,1.0,1.0,1.4353713907745331,12.0,1288.3333333333333,442.0,1.3931404320987657,5509.0,33.59238453094981,1874.0,Feature Addition,False,,
5b9357a6b3b22bad794931bb71f56c612d6e7aac,2d20e68fe492b65fcf36af070b9701a9009e57f0,antirez,antirez@gmail.com,Thu Jan 24 11:24:40 2013 +0100,1359023080,notifyKeyspaceEvent(): release channel names using the right pointers.,2.0,2.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,79.0,2.0,0.781863425925926,5511.0,2.27899575148402,1875.0,None,False,,
2d20e68fe492b65fcf36af070b9701a9009e57f0,8766e81079dd4e26b0f5e1b04b8fc319b8d13eb7,antirez,antirez@gmail.com,Thu Jan 24 11:27:10 2013 +0100,1359023230,Fix decrRefCount() prototype from void to robj pointer.decrRefCount used to get its argument as a void* pointer in order to benused as destructor where a 'void free_object(void*)' prototype isnexpected. However this made simpler to introduce bugs by freeing thenwrong pointer. This commit fixes the argument type and introduces a newnwrapper called decrRefCountVoid() that can be used when the void*nargument is needed.n,15.0,9.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,1.9883620710752947,12.0,1112.6,581.0,6.238354166666667,5514.0,1.0570608044157326,1880.0,Corrective,True,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
8766e81079dd4e26b0f5e1b04b8fc319b8d13eb7,da04e6ed44bf80c5e2fe282522f924e8f55921cb,antirez,antirez@gmail.com,Thu Jan 24 16:20:53 2013 +0100,1359040853,Keyspace events added for more commands.,134.0,51.0,"src/bitops.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",8.0,1.0,1.0,2.0803742517414068,12.0,860.5,344.0,13.847620081018515,5520.5,1.043465769171683,1888.0,Feature Addition,False,,
da04e6ed44bf80c5e2fe282522f924e8f55921cb,40f822da739a061597139770f355ec8db45cade7,antirez,antirez@gmail.com,Thu Jan 24 16:27:48 2013 +0100,1359041268,Enable keyspace events notification when testing.,3.0,0.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,344.0,8.0,301.2116203703704,5525.0,1.0033199250373224,330.0,Preventative,False,,
40f822da739a061597139770f355ec8db45cade7,1c0c551776bf2afae9314373012985db9b19bb03,antirez,antirez@gmail.com,Fri Jan 25 11:16:00 2013 +0100,1359108960,decrRefCount -> decrRefCountVoid in list constructor.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,560.0,42.0,0.9922453703703704,5526.0,2.0078152338737896,1889.0,None,False,,
1c0c551776bf2afae9314373012985db9b19bb03,fce016d31bc11ff19de1f1ff216e4a0588fea3ac,antirez,antirez@gmail.com,Fri Jan 25 13:19:08 2013 +0100,1359116348,"Keyspace events: it is now possible to select subclasses of events.When keyspace events are enabled, the overhead is not sever butnnoticeable, so this commit introduces the ability to select subclassesnof events in order to avoid to generate events the user is notninterested in.nnThe events can be selected using redis.conf or CONFIG SET / GET.n",237.0,108.0,"redis.conf,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER",14.0,3.0,3.0,3.1809700730881523,12.0,927.2142857142856,1126.0,1.1145717592592592,5533.5,1.1587521127535598,331.0,None,False,True,"[""ad297a1a6782905394cb56b00ed6dbd08707fb04"", ""e1ab2991c3daefd9482ab589539f184141166648"", ""f4dc736ccadedefe156a3b9c278e06cb2c55f0a1""]"
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,562b2bd6a7d6e8ee893d68059360b593ed43352f,antirez,antirez@gmail.com,Fri Jan 25 17:34:52 2013 +0100,1359131692,Keyspace notifications: fixed a leak and a bug introduced in the latest commit.,7.0,5.0,"src/notify.c,CAS_DELIMITER,tests/assets/default.conf,CAS_DELIMITER",2.0,2.0,2.0,0.6500224216483541,12.0,236.5,14.0,0.17759259259259258,5541.5,5.223149113660064,332.0,None,False,,
562b2bd6a7d6e8ee893d68059360b593ed43352f,4dfb5752e0714228ff6fb0a2728ee03638ac232f,antirez,antirez@gmail.com,Mon Jan 28 13:00:03 2013 +0100,1359374403,Send 'expired' events when a key expires by lookup.,2.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,771.0,86.0,2.9867476851851853,5543.0,1.3348123462052663,1903.0,None,False,,
4dfb5752e0714228ff6fb0a2728ee03638ac232f,d2b27f1d96a60bcfad48c5ae659741241559662b,antirez,antirez@gmail.com,Mon Jan 28 13:04:23 2013 +0100,1359374663,Tests for keyspace notifications.,155.0,1.0,"tests/unit/pubsub.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,205.0,3.0,6.759803240740743,5544.0,1.1479332998885363,333.0,Preventative,False,,
d2b27f1d96a60bcfad48c5ae659741241559662b,e41d1d77e3f731cfe9133a94ea441de7ebc9f105,antirez,antirez@gmail.com,Tue Jan 29 13:43:13 2013 +0100,1359463393,Generate del events when S*STORE commands delete the destination key.,8.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,753.0,29.0,4.016724537037037,5545.0,1.248959068708669,1904.0,None,False,,
e41d1d77e3f731cfe9133a94ea441de7ebc9f105,ad297a1a6782905394cb56b00ed6dbd08707fb04,antirez,antirez@gmail.com,Tue Jan 29 13:50:01 2013 +0100,1359463801,Z*STORE event fixed: generate del only if resulting sorted set is empty.,2.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2203.0,81.0,4.021446759259258,5546.0,1.2486667261471336,1905.0,Corrective,True,True,"[""9682b616a21b5e675a1ca82109a11d6f4de1d2de""]"
ad297a1a6782905394cb56b00ed6dbd08707fb04 50d43a9823be553a393127bc45e507d3a60982d7,aca005c246bdf6ba294c743d115d1c5b8bfbcc98,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 31 03:37:48 2013 -0800,1359632268,Merge pull request #914 from catwell/unstablefix comments forgotten in #285 (zipmap -> ziplist),,,,,,,,,,,,,,,Merge,False,,
aca005c246bdf6ba294c743d115d1c5b8bfbcc98,089cbe643f3922aec26d483548e14c8d10f74e0c,antirez,antirez@gmail.com,Thu Jan 31 17:19:21 2013 +0100,1359649161,Sentinel: advertise the promoted slave address only after successful setup.,9.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3057.0,28.0,14.971539351851852,5547.0,1.0667933988949712,1906.0,None,False,,
089cbe643f3922aec26d483548e14c8d10f74e0c,81144645b478bcc04cb79b6651df72c148ba3c53,David Celis,me@davidcel.is,Sun Feb 3 11:40:07 2013 -0800,1359920407,Fix a few typos and improve grammar of redis.confMake several edits to the example redis.conf configuration file fornimproved flow and grammar.nnSigned-off-by: David Celis <me@davidcel.is>n,20.0,20.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,622.0,98.0,9.306238425925926,0.0,0.0,0.0,Corrective,True,,
089cbe643f3922aec26d483548e14c8d10f74e0c,002747336a37b72b84503848a3f7f4f8cbc414cf,Gengliang Wang,ltnwgl@gmail.com,Mon Feb 4 14:01:08 2013 +0800,1359957668,"Fix a bug in srandmemberWithCountCommand()In CASE 2, the callu00c2u00a0sunionDiffGenericCommand will involve the string srandmember rn> sadd foo onern(integer 1)rn> sadd srandmember tworn(integer 2)rn> srandmember foo 3rn1)onern2)two",1.0,1.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,759.0,30.0,5.720775462962963,0.0,0.0,0.0,Corrective,True,,
089cbe643f3922aec26d483548e14c8d10f74e0c 002747336a37b72b84503848a3f7f4f8cbc414cf,74f4f29880b4a41e01554c7d5119c5ad50aa3f5b,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 4 01:21:18 2013 -0800,1359969678,Merge pull request #929 from ltnwgl/unstableFix a bug in srandmemberWithCountCommand(),,,,,,,,,,,,,,,Merge,False,,
74f4f29880b4a41e01554c7d5119c5ad50aa3f5b 81144645b478bcc04cb79b6651df72c148ba3c53,f95b393603acb9a19ceb1814bded19c417e07c9d,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 4 01:32:31 2013 -0800,1359970351,Merge pull request #928 from davidcelis/unstableFix a few typos and improve grammar of redis.conf,,,,,,,,,,,,,,,Merge,False,,
f95b393603acb9a19ceb1814bded19c417e07c9d,8063155cd0d0b5b3b0e7d30e9a12e52db7224c0f,Rock Li,rock@appannie.com,Tue Feb 5 15:56:04 2013 +0800,1360050964,"retval doesn't initalizedIf each if conditions are all fail, variable retval will under uninitlizedn",1.0,1.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,759.0,31.0,1.0798148148148148,0.0,0.0,0.0,Corrective,True,,
f95b393603acb9a19ceb1814bded19c417e07c9d 8063155cd0d0b5b3b0e7d30e9a12e52db7224c0f,58463e05051ef30afdb20eac28b3344b3132ba94,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 5 01:48:49 2013 -0800,1360057729,Merge pull request #933 from RockLi/unstableretval doesn't initalized,,,,,,,,,,,,,,,Merge,False,,
58463e05051ef30afdb20eac28b3344b3132ba94 1154283577e94eb487df725196e17847ae684497,bb7aa1772c69ed128f8f33a9dce457736a67031f,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 5 02:43:56 2013 -0800,1360061036,"Merge pull request #906 from jbergstroem/tclsh-agnosticMake redis test suite tcl version agnostic, v2",,,,,,,,,,,,,,,Merge,False,,
bb7aa1772c69ed128f8f33a9dce457736a67031f,fd7350b0846065ae1b92eb5f30db7d3b7a8c6847,antirez,antirez@gmail.com,Tue Feb 5 12:02:36 2013 +0100,1360062156,Test: No clients timeout while testing.,1.0,1.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,347.0,11.0,10.76925925925926,5548.0,1.0928568972039756,334.0,Preventative,False,,
fd7350b0846065ae1b92eb5f30db7d3b7a8c6847,c85647f35428770518ccf7f95ae5913f20fe1898,charsyam,charsyam@gmail.com,Thu Jan 31 12:09:16 2013 +0900,1359601756,"Turn off TCP_NODELAY on the slave socket after SYNC.Further details from @antirez:nnIt was reported by @StopForumSpam on Twitter that the Redis replicationnlink was strangely using multiple TCP packets for multiple commands.nThis wastes a lot of bandwidth and is due to the TCP_NODELAY option wenenable on the socket after accepting a new connection.nnHowever the master -> slave channel is a one-way channel since Redisnreplication is asynchronous, so there is no point in trying to reducenthe latency, we should aim to reduce the bandwidth. For this reason thisncommit introduces the ability to disable the nagle algorithm on thensocket after a successful SYNC.nnThis feature is off by default because the delay can be up to 40nmilliseconds with normally configured Linux kernels.n",30.0,2.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",6.0,1.0,1.0,1.9701733323996973,12.0,1049.1666666666667,741.0,21.517609953703708,7.5,1.0191428863780156,10.0,None,False,,
c85647f35428770518ccf7f95ae5913f20fe1898,b70b459b0eeea3158984ad89345a461cfe9f2818,antirez,antirez@gmail.com,Thu Jan 31 11:14:15 2013 +0100,1359627255,TCP_NODELAY after SYNC: changes to the implementation.,40.0,26.0,"redis.conf,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",9.0,2.0,2.0,2.7159599262100915,12.0,1150.4444444444443,1056.0,2.2318698559670778,5553.0,0.93279691389758,1914.0,None,False,,
b70b459b0eeea3158984ad89345a461cfe9f2818,46dd4c62b39d1c8a22647da3dda8bae2c4999036,antirez,antirez@gmail.com,Thu Feb 7 19:13:00 2013 +0100,1360260780,LASTSAVE is a random command.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2712.0,322.0,7.332465277777778,5558.0,1.1363797798034805,1915.0,None,False,,
46dd4c62b39d1c8a22647da3dda8bae2c4999036,a6c2f9012fb3668a583a84db4fb6e0c5b42d757a,antirez,antirez@gmail.com,Fri Feb 8 10:26:19 2013 +0100,1360315579,Make all WATCHers dirty when the slave reloads the DB.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,828.0,54.0,7.966712962962962,5559.0,1.1255222831108609,1916.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
a6c2f9012fb3668a583a84db4fb6e0c5b42d757a,ee21c18e5d2e897204a92eb75469307a9ca8ba1e,antirez,antirez@gmail.com,Fri Feb 8 16:30:21 2013 +0100,1360337421,Add SO_KEEPALIVE support to anet.c.,44.0,0.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.15649106290570153,12.0,226.5,25.0,8.219513888888889,5560.5,1.091246271998378,1918.0,Feature Addition,False,,
ee21c18e5d2e897204a92eb75469307a9ca8ba1e,124a635bc533f24fc4ff29c0e98c4657ab83cace,antirez,antirez@gmail.com,Fri Feb 8 16:40:59 2013 +0100,1360338059,Set SO_KEEPALIVE on client sockets if configured to do so.,14.0,0.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.2916919971380596,12.0,1613.0,803.0,6.393781828703704,5563.5,1.0697680009444959,1922.0,None,False,,
124a635bc533f24fc4ff29c0e98c4657ab83cace,98b1a852b401a719e76343ec2ae260e257dfd9b6,antirez,antirez@gmail.com,Fri Feb 8 17:03:11 2013 +0100,1360339391,tcp-keepalive option documented in redis.conf.,11.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,637.0,100.0,8.242314814814815,5566.0,1.1213251401417708,1308.0,Non Functional,False,,
98b1a852b401a719e76343ec2ae260e257dfd9b6,76a5b21c3a319ae1ba4ef8f4f12207a813e43b51,antirez,antirez@gmail.com,Fri Feb 8 17:06:01 2013 +0100,1360339561,Tcp keep-alive: send three probes before detectin an error.Otherwise we end with less reliable connections because it's too easynthat a single packet gets lost.n,8.0,4.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,437.0,16.0,0.02476851851851852,5567.0,41.373831775700936,1923.0,None,False,,
76a5b21c3a319ae1ba4ef8f4f12207a813e43b51,3244d8bc0cd37b0d68c191ed35dafa26596f9e7e,Steven Penny,svnpenn@gmail.com,Fri Feb 8 12:11:06 2013 -0600,1360347066,Format to fit 80 columnsThis makes it readable on GitHub and editors without auto wrapping.,55.0,8.0,"MANIFESTO,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,20.0,1.0,369.39858796296295,0.0,0.0,0.0,None,False,,
76a5b21c3a319ae1ba4ef8f4f12207a813e43b51,93ae95de744d46953540ea960b9e89b2d177556e,antirez,antirez@gmail.com,Sat Feb 9 01:17:59 2013 +0100,1360369079,TCP keep-alive. Better documentation in redis.conf.,11.0,6.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,648.0,101.0,0.3436111111111111,5568.0,3.9102667744543256,1309.0,Non Functional,False,,
93ae95de744d46953540ea960b9e89b2d177556e,1a27d411563767ba94a940c56cfc044debeb7539,antirez,antirez@gmail.com,Mon Feb 11 12:11:21 2013 +0100,1360581081,Makefile: valgrind target added (forces -O0 and libc malloc).,4.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,229.0,92.0,18.824861111111108,5569.0,1.0531212418565874,1924.0,None,False,,
1a27d411563767ba94a940c56cfc044debeb7539 3244d8bc0cd37b0d68c191ed35dafa26596f9e7e,3043f890a5581d0847cb03f12d3e85039a15cd95,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 12 01:30:39 2013 -0800,1360661439,Merge pull request #941 from svnpenn/patch-1Format to fit 80 columns,,,,,,,,,,,,,,,Merge,False,,
1a27d411563767ba94a940c56cfc044debeb7539,7465ac7ab131c56ed3ed9f576e80758421eb03f5,antirez,antirez@gmail.com,Fri Nov 2 16:31:28 2012 +0100,1351870288,"Emit SELECT to slaves in a centralized way.Before this commit every Redis slave had its own selected database IDnstate. This was not actually useful as the emitted stream of commandsnis identical for all the slaves.nnNow the the currently selected database is a global state that is set ton-1 when a new slave is attached, in order to force the SELECT command tonbe re-emitted for all the slaves.nnThis change is useful in order to implement replication partialnresynchronization in the future, as makes sure that the stream ofncommands received by slaves, including SELECT commands, are exactly thensame for every slave connected, at any time.nnIn this way we could have a global offset that can identify a specificnpiece of the master -> slaves stream of commands.n",5.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.3709505944546687,12.0,1624.333333333333,658.0,-97.91988040123456,5571.0,0.9937635886948036,1927.0,Feature Addition,False,,
7465ac7ab131c56ed3ed9f576e80758421eb03f5,4b83ad4e1f92ec9ccc4db7cf4c6c1ac949bf5bca,antirez,antirez@gmail.com,Sat Nov 3 11:56:28 2012 +0100,1351940188,"Use replicationFeedSlaves() to send PING to slaves.A Redis master sends PING commands to slaves from time to time: doingnthis ensures that even if absence of writes, the master->slave channelnremains active and the slave can feel the master presence, instead ofnclosing the connection for timeout.nnThis commit changes the way PINGs are sent to slaves in order to use thenstandard interface used to replicate all the other commands, that is,nthe function replicationFeedSlaves().nnWith this change the stream of commands sent to every slave is exactlynthe same regardless of their exact state (Transferring RDB for firstnsynchronization or slave already online). With the previousnimplementation the PING was only sent to online slaves, with the resultnthat the output stream from master to slaves was not identical for allnthe slaves: this is a problem if we want to implement partial resyncs innthe future using a global replication stream offset.nnTL;DR: this commit should not change the behaviour in practical terms,nbut is just something in preparation for partial resynchronizationnsupport.n",22.0,22.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9940302114769564,12.0,1080.0,336.0,0.8090277777777778,5573.5,1.927038626609442,1929.0,None,False,True,"[""55ba77270363400625f4563788d8f842408389a2""]"
4b83ad4e1f92ec9ccc4db7cf4c6c1ac949bf5bca,e34a35a51194650ce7ef7df1047012c7eaad2957,antirez,antirez@gmail.com,Sat Nov 3 12:15:29 2012 +0100,1351941329,"Use the new unified protocol to send SELECT to slaves.SELECT was still transmitted to slaves using the inline protocol, thatnis conceived mostly for humans to type into telnet sessions, and isnnotably not understood by redis-cli --slave.nnNow the new protocol is used instead.n",14.0,2.0,"src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1771.0,382.0,0.4177199074074073,5575.5,2.206586705611332,1931.0,Feature Addition,False,,
e34a35a51194650ce7ef7df1047012c7eaad2957,078882025ea50e0ed888713fba8ce28299de626a,antirez,antirez@gmail.com,Wed Jan 30 18:33:16 2013 +0100,1359567196,"PSYNC: work in progress, preview #2, rebased to unstable.",758.0,73.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",8.0,2.0,2.0,1.259758577144937,12.0,1132.375,1073.0,31.74117766203704,5580.5,0.8990598938791601,1938.0,None,False,True,"[""3d588b37cedc49d29628da7d66e35fbf05aa440b"", ""f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7"", ""a31693417dba3b2ddad46386778e191daef85e21"", ""c151eb6d92ae69a8fecf14f7429d38929e0c75d0"", ""aa05128f51baf8063606770b608432e9ffd96981"", ""9f98b29cefc337d607016cea57216cde1c25dd47"", ""3a82b8ac641120c231f4f7e8a2edc0bd1c40a399"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509"", ""292fec058a32323d5aa52dddfa86be280e29fe65"", ""55ba77270363400625f4563788d8f842408389a2"", ""104584b95e900bd52a754d7a2480b8768d1bae63"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
078882025ea50e0ed888713fba8ce28299de626a,41d64a75169a6ddfb9f27a720579f3615c13610f,antirez,antirez@gmail.com,Thu Jan 31 16:33:26 2013 +0100,1359646406,After SLAVEOF <newslave> don't allow chained slaves to PSYNC.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1396.0,59.0,0.9167824074074076,5585.0,2.0907713672516097,1939.0,Feature Addition,False,,
41d64a75169a6ddfb9f27a720579f3615c13610f,da315d3325eae646b88f49cac3bd4b4f2bd582aa,antirez,antirez@gmail.com,Fri Feb 1 13:01:01 2013 +0100,1359720061,Log the unexpected string received in place of the SYNC payload length.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1397.0,60.0,0.8524884259259259,5586.0,2.173036453737017,1940.0,None,False,,
da315d3325eae646b88f49cac3bd4b4f2bd582aa,d2a0348a490ab2f3edc07f9ba4098f6e06bfefd1,antirez,antirez@gmail.com,Fri Feb 1 15:05:43 2013 +0100,1359727543,SYNC not allowed with pending data on the static output buffer.,2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1397.0,61.0,0.08659722222222223,5587.0,12.547714514835606,1941.0,None,False,,
d2a0348a490ab2f3edc07f9ba4098f6e06bfefd1,0ed6daa48bf221de231b6ed953c0f230a3bfacb8,antirez,antirez@gmail.com,Fri Feb 1 15:16:56 2013 +0100,1359728216,"PSYNC: don't use the client buffer to send +CONTINUE and +FULLRESYNC.When we are preparing an handshake with the slave we can't touch thenconnection buffer as it'll be used to accumulate differences betweennthe sent RDB file and what arrives next from clients.nnSo in short we can't use addReply() family functions.nnHowever we just use write(2) because we know that the socket buffer isnempty, since a prerequisite for SYNC to work is that the static buffernand the output list are empty, and in general it is not expected that anclient SYNCs after doing some heavy I/O with the master.nnHowever a short write connection is explicitly handled to avoidnfragility (we simply close the connection and the slave will retry).n",17.0,5.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1397.0,62.0,0.007789351851851852,5588.0,129.38038632986627,1942.0,None,False,True,"[""3a82b8ac641120c231f4f7e8a2edc0bd1c40a399"", ""292fec058a32323d5aa52dddfa86be280e29fe65""]"
0ed6daa48bf221de231b6ed953c0f230a3bfacb8,89b48f0825eb042e08043b6e11847ff9d3b15e46,antirez,antirez@gmail.com,Fri Feb 1 15:28:02 2013 +0100,1359728882,Remove harmless warning in slaveTryPartialResynchronization().,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1409.0,63.0,0.007708333333333333,5589.0,130.72972972972974,1943.0,None,False,,
89b48f0825eb042e08043b6e11847ff9d3b15e46,3af478e9ef7657297241b5203a1ecc318e223a14,antirez,antirez@gmail.com,Sat Feb 9 16:33:57 2013 +0100,1360424037,PSYNC: debugging printf() calls are now logs at DEBUG level.,14.0,9.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1409.0,64.0,8.045775462962963,5590.0,1.1242888276715264,1944.0,None,False,,
3af478e9ef7657297241b5203a1ecc318e223a14,04bdb3a2a4483ee58d17403bb5387c34c3d3cbf6,antirez,antirez@gmail.com,Tue Feb 12 12:56:32 2013 +0100,1360670192,Add missing bracket removed for error after rebase of PSYNC.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1029.0,76.0,12.766157407407407,5591.0,1.0783321063720992,1945.0,Feature Addition,False,,
04bdb3a2a4483ee58d17403bb5387c34c3d3cbf6 3043f890a5581d0847cb03f12d3e85039a15cd95,7f9bc42f1717ba2b6f8cabf2d196b0d906859dca,antirez,antirez@gmail.com,Tue Feb 12 12:59:15 2013 +0100,1360670355,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
7f9bc42f1717ba2b6f8cabf2d196b0d906859dca,ac8c89cb20203b9e0545f2306565efe6381546bb,antirez,antirez@gmail.com,Tue Feb 12 13:27:24 2013 +0100,1360672044,Test: avoid false positives in CLIENT SETNAME closed connection test.,6.0,2.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,55.0,6.0,29.13060185185185,5592.0,1.0343281613296442,335.0,Preventative,False,,
ac8c89cb20203b9e0545f2306565efe6381546bb,24f258360b622ab361674f7bc2878a8fda0eb8e1,antirez,antirez@gmail.com,Tue Feb 12 15:24:25 2013 +0100,1360679065,Replication: added new stats counting full and partial resynchronizations.,29.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.2769435597232492,12.0,1838.666666666667,674.0,9.563140432098765,5594.0,1.0504721824873096,1948.0,None,False,,
24f258360b622ab361674f7bc2878a8fda0eb8e1,dc24a6b132f268c83e42683340223ce6e970f340,antirez,antirez@gmail.com,Tue Feb 12 16:25:41 2013 +0100,1360682741,Return a specific NOAUTH error if authentication is required.,7.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.918295834054489,12.0,1111.5,649.0,140.514927662037,5597.5,9.817881009373519,337.0,None,False,,
dc24a6b132f268c83e42683340223ce6e970f340,3419c8ce70ea17783dd681b9c51e82b28ddb6aa9,antirez,antirez@gmail.com,Tue Feb 12 16:53:27 2013 +0100,1360684407,Replication: more strict error checking for master PING reply.,10.0,5.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1429.0,66.0,0.0618287037037037,5600.0,17.173717708723323,1951.0,None,False,,
3419c8ce70ea17783dd681b9c51e82b28ddb6aa9,7404b958339ebe2101965d8c890b38dcc0e4abfd,antirez,antirez@gmail.com,Wed Feb 13 13:38:20 2013 +0100,1360759100,Avoid compiler warning by casting to match printf() specifier.,2.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,913.0,61.0,27.81805555555556,5601.0,1.0359478755804084,1952.0,None,False,True,"[""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
7404b958339ebe2101965d8c890b38dcc0e4abfd,0e1be5347bc30f10f6a7e2190e6c1cb13304f465,antirez,antirez@gmail.com,Wed Feb 13 18:33:33 2013 +0100,1360776813,PSYNC: More robust handling of unexpected reply to PSYNC.,8.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1434.0,67.0,1.0695138888888889,5602.0,1.9350042205051616,1953.0,None,False,,
0e1be5347bc30f10f6a7e2190e6c1cb13304f465,072c91fe133a9aec0439c2aa3d4045d86676224a,antirez,antirez@gmail.com,Wed Feb 13 18:43:40 2013 +0100,1360777420,PSYNC: another change to unexpected reply from PSYNC.,1.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1442.0,68.0,0.007025462962962963,5603.0,143.33937397034597,1954.0,None,False,,
072c91fe133a9aec0439c2aa3d4045d86676224a,ebd666db472982391ad8663ddc95e55ed730775b,antirez,antirez@gmail.com,Thu Feb 14 12:49:16 2013 +0100,1360842556,Cluster: from 4096 to 16384 hash slots.,4.0,4.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,1679.0,368.0,7.957847222222222,5604.5,1.0669622808135368,1956.0,None,False,,
ebd666db472982391ad8663ddc95e55ed730775b,a26690e8b574aa60153655fb555004c7d48a299e,antirez,antirez@gmail.com,Thu Feb 14 12:55:34 2013 +0100,1360842934,Cluster: redis-trib updated to use 16384 hash slots.,6.0,6.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,492.0,30.0,28.78835648148149,5606.0,1.034736265706702,1957.0,None,False,,
a26690e8b574aa60153655fb555004c7d48a299e,9dfd11c3da4caf068f3cd08047a1094714d9c247,antirez,antirez@gmail.com,Thu Feb 14 13:01:28 2013 +0100,1360843288,Cluster: Initialize ip and port in createClusterNode().,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1998.0,85.0,0.008472222222222223,5607.0,119.03278688524591,1958.0,None,False,,
9dfd11c3da4caf068f3cd08047a1094714d9c247,1649e509c303adc5e17ff31d61203db901488e58,antirez,antirez@gmail.com,Thu Feb 14 13:20:56 2013 +0100,1360844456,Cluster: the cluster state structure is now heap allocated.,98.0,96.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,0.7090887501033956,12.0,1583.6,865.0,3.741451388888889,5610.0,15.926310067799056,1963.0,None,False,,
1649e509c303adc5e17ff31d61203db901488e58,1a32d99b28a8d8cd43e1550b2fbe75b4c53b9fc0,antirez,antirez@gmail.com,Thu Feb 14 15:20:02 2013 +0100,1360851602,"Cluster: move cluster config file out of config state.This makes us able to avoid allocating the cluster state structure ifncluster is not enabled, but still we can handle the configurationndirective that sets the cluster config filename.n",2.0,3.0,"src/config.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,12.0,1195.5,364.0,0.08270833333333333,5613.5,10.06801007556675,1965.0,None,False,,
1a32d99b28a8d8cd43e1550b2fbe75b4c53b9fc0,e0e15bd06dc3ea129403ae54b9acc3969bc87024,antirez,antirez@gmail.com,Thu Feb 14 15:36:33 2013 +0100,1360852593,Cluster: with 16384 slots we need bigger buffers.,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2001.0,87.0,0.09417824074074074,5615.0,11.618163942484946,1966.0,None,False,,
e0e15bd06dc3ea129403ae54b9acc3969bc87024,6b641f3aeb03b1608eb8b435f9e06c3f8b04773e,antirez,antirez@gmail.com,Thu Feb 14 18:49:08 2013 +0100,1360864148,redis-cli: update prompt on cluster redirection.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1353.0,79.0,23.981446759259267,5616.0,1.0416989020737,1967.0,None,False,,
6b641f3aeb03b1608eb8b435f9e06c3f8b04773e,20f52b5b78499a1bc35cb7176434c510fe3ef1e3,antirez,antirez@gmail.com,Fri Feb 15 11:50:54 2013 +0100,1360925454,Top comment for getNodeByQuery() improved.,5.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2001.0,88.0,0.8432986111111112,5617.0,2.1858195742578332,1968.0,None,False,,
20f52b5b78499a1bc35cb7176434c510fe3ef1e3,7371d5e2489e355e2209db157cc774a8dc1be9f4,antirez,antirez@gmail.com,Fri Feb 15 11:57:53 2013 +0100,1360925873,Remove wrong decrRefCount() from getNodeByQuery().This fixes issue #607.n,0.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2001.0,89.0,0.004849537037037037,5618.0,207.20525059665871,1969.0,Corrective,True,,
7371d5e2489e355e2209db157cc774a8dc1be9f4,6b9c6618384ef9fe8ea8054ec82c094ba1f69369,antirez,antirez@gmail.com,Fri Feb 15 12:58:35 2013 +0100,1360929515,Cluster: make valgrind happy initializing all the bytes of the node IP.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2000.0,90.0,0.042152777777777775,5619.0,24.723228995057664,1970.0,None,False,,
6b9c6618384ef9fe8ea8054ec82c094ba1f69369,8853698a6fededba4db8b8c2dc1bc94f425db823,antirez,antirez@gmail.com,Fri Feb 15 13:12:55 2013 +0100,1360930375,Removed useless newlines from hashTypeCurrentObject().,0.0,3.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,764.0,29.0,20.99568287037037,5620.0,1.0476288390415358,1971.0,Feature Addition,False,,
6b9c6618384ef9fe8ea8054ec82c094ba1f69369,02796ba7a78fbc9b98926dbbdc981266780dc297,antirez,antirez@gmail.com,Fri Feb 15 16:44:39 2013 +0100,1360943079,Cluster: sanity checks on the cluster bus message length.,25.0,8.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.32984607020714635,12.0,1680.0,378.0,0.6078761574074074,5621.5,4.596169190156923,1973.0,None,False,,
02796ba7a78fbc9b98926dbbdc981266780dc297 8853698a6fededba4db8b8c2dc1bc94f425db823,522c3255db7642d97ed823ec1b3bab66771f5167,antirez,antirez@gmail.com,Fri Feb 15 16:45:04 2013 +0100,1360943104,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
522c3255db7642d97ed823ec1b3bab66771f5167,455da35c7f34a6f1e36d862ed6466a34948f3b4f,antirez,antirez@gmail.com,Fri Feb 15 16:53:24 2013 +0100,1360943604,Cluster: specific error code for cluster down condition.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2756.0,330.0,1.1475462962962963,5623.0,1.8714245370557148,1974.0,None,False,,
455da35c7f34a6f1e36d862ed6466a34948f3b4f,917dd532161981fef8e7e180a95086c4180eda72,antirez,antirez@gmail.com,Fri Feb 15 17:11:55 2013 +0100,1360944715,redis-trib: make a few comments 80-cols friendly.,11.0,8.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,492.0,31.0,1.1780208333333333,5624.0,1.8488814218763816,1975.0,None,False,,
917dd532161981fef8e7e180a95086c4180eda72,9a04e12cc08623c0fbf6c704ea3a60b3be0b96f5,antirez,antirez@gmail.com,Wed Feb 20 13:18:51 2013 +0100,1361362731,Cluster: I/O errors are now logged at DEBUG level.,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2015.0,92.0,4.857083333333334,5625.0,1.2058848760401475,1976.0,None,False,,
9a04e12cc08623c0fbf6c704ea3a60b3be0b96f5,b8d8b9ec4130fcb275d3b63b733f1bb8050a579d,antirez,antirez@gmail.com,Wed Feb 20 15:29:44 2013 +0100,1361370584,redis-trib: set the migrating slot in the correct way when resharding.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,495.0,32.0,4.929039351851851,5626.0,1.2028792891710829,1977.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456""]"
b8d8b9ec4130fcb275d3b63b733f1bb8050a579d,9ec1b709f51b05df6e4ca1637bd5143d585418ab,antirez,antirez@gmail.com,Wed Feb 20 17:07:52 2013 +0100,1361376472,"Cluster: ASKING command fixed, state was not retained.",6.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1445.0,130.0,20.940694444444443,5627.0,1.0477539081931115,1978.0,None,False,,
9ec1b709f51b05df6e4ca1637bd5143d585418ab,ea7fc82a4a89d5d28217bcc751675d5f91e06db0,antirez,antirez@gmail.com,Wed Feb 20 17:28:35 2013 +0100,1361377715,Cluster: new command flag forcing implicit ASKING.Also using this new flag the RESTORE-ASKING command was implemented thatnwill be used by MIGRATE.n,6.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.3787834934861756,12.0,2044.333333333333,712.0,3.4094560185185188,5629.0,3.018768259691043,1981.0,None,False,,
ea7fc82a4a89d5d28217bcc751675d5f91e06db0,786b8d6c87a5e4d17b709df8095f0e7c45638944,antirez,antirez@gmail.com,Wed Feb 20 17:36:54 2013 +0100,1361378214,Use RESTORE-ASKING for MIGRATE when in cluster mode.,5.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2015.0,94.0,0.005775462962962963,5631.0,174.14629258517033,1982.0,None,False,,
786b8d6c87a5e4d17b709df8095f0e7c45638944,fdb57233e2ab021329fd18f1a1f94819e54f4744,antirez,antirez@gmail.com,Thu Feb 21 11:44:58 2013 +0100,1361443498,Cluster: always use cluster(Add|Del)Slot to modify the cluster slots table.,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2019.0,95.0,0.7556018518518518,5632.0,2.3234483181177623,1983.0,None,False,,
fdb57233e2ab021329fd18f1a1f94819e54f4744,dc4af6062897abb8b2b4dc8c754e64a640992ce0,antirez,antirez@gmail.com,Thu Feb 21 11:51:17 2013 +0100,1361443877,Cluster: clusterAddSlot() was not doing what stated in the comment.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2021.0,96.0,0.004386574074074074,5633.0,228.96833773087073,1984.0,None,False,,
dc4af6062897abb8b2b4dc8c754e64a640992ce0,7898bf4b7ec636bf2c61a0d56e13ce63a781781b,antirez,antirez@gmail.com,Thu Feb 21 13:00:41 2013 +0100,1361448041,redis-trib: some refactoring and skeleton of the fix command.,36.0,12.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,495.0,33.0,0.8964930555555556,5634.0,2.115457608737751,1985.0,None,False,,
7898bf4b7ec636bf2c61a0d56e13ce63a781781b,5fd9f701da8612f70fd120fde26e39df89924452,antirez,antirez@gmail.com,Thu Feb 21 13:06:59 2013 +0100,1361448419,redis-trib: move instance vars in the right class.,2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,519.0,34.0,0.004375,5635.0,229.57142857142856,1986.0,None,False,,
5fd9f701da8612f70fd120fde26e39df89924452,3a99d1228ae1d15897bbdd713d72e6394e0684c0,antirez,antirez@gmail.com,Thu Feb 21 16:24:48 2013 +0100,1361460288,Aesthetic change to make a line more 80-cols friendly.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2021.0,97.0,0.18994212962962964,5636.0,6.264761440497228,1987.0,None,False,,
3a99d1228ae1d15897bbdd713d72e6394e0684c0,c6da9d9fac86a239e1381e9aa90cfedd08fa5511,antirez,antirez@gmail.com,Thu Feb 21 16:31:22 2013 +0100,1361460682,Call clusterUpdateState() after CLUSTER SETSLOT too.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2021.0,98.0,0.004560185185185185,5637.0,220.28934010152284,1988.0,Preventative,False,,
c6da9d9fac86a239e1381e9aa90cfedd08fa5511,07b63227358164dc872d9a869af38ec71b6529fc,antirez,antirez@gmail.com,Thu Feb 21 16:52:06 2013 +0100,1361461926,Cluster: more correct update of slots state when PONG is received.,14.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2022.0,99.0,0.014398148148148146,5638.0,70.45337620578778,1989.0,None,False,,
07b63227358164dc872d9a869af38ec71b6529fc,619d3945f88a6574014692af5c50825b02d20ace,antirez,antirez@gmail.com,Thu Feb 21 16:58:27 2013 +0100,1361462307,redis-trib: fixed typo in method name.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,519.0,35.0,0.16074074074074074,5639.0,7.221198156682028,1990.0,None,False,,
619d3945f88a6574014692af5c50825b02d20ace,915e81335e773aca5b0e16c4268ddab1ed9314ad,antirez,antirez@gmail.com,Thu Feb 21 18:10:06 2013 +0100,1361466606,redis-trib: ability to fix uncovered slots for the trivial case.,37.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,519.0,36.0,0.04975694444444445,5640.0,21.097697138869506,1991.0,None,False,,
915e81335e773aca5b0e16c4268ddab1ed9314ad,efe51dfff51caf81c4731ea41cb14bfc55b411f2,antirez,antirez@gmail.com,Fri Feb 22 10:05:07 2013 +0100,1361523907,redis-trib: specify single node address when fixing coverage.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,554.0,37.0,0.6632060185185186,5641.0,2.507827088532486,1992.0,None,False,,
efe51dfff51caf81c4731ea41cb14bfc55b411f2,d04770988d5cbbf5134935245ea720d176a11fd4,antirez,antirez@gmail.com,Fri Feb 22 10:15:32 2013 +0100,1361524532,Cluster: empty the internal sorted set mapping keys to slots on FLUSHDB/ALL.,8.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,772.0,89.0,7.87125,5642.0,1.127044624424329,1993.0,None,False,,
d04770988d5cbbf5134935245ea720d176a11fd4,392e0fa7eba81eb54a64dfc275592bf2086608ee,antirez,antirez@gmail.com,Fri Feb 22 10:16:21 2013 +0100,1361524581,Cluster: fix case of slotToKey...() functions.,10.0,10.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,780.0,90.0,0.0005671296296296298,5643.0,1764.2653061224494,1994.0,None,False,,
392e0fa7eba81eb54a64dfc275592bf2086608ee,a81c598f9550a83f32981cdf1026b0bd2c8d19e6,antirez,antirez@gmail.com,Fri Feb 22 10:23:53 2013 +0100,1361525033,redis-trib: handle slot coverage fix in the no nodes with keys case.,15.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,554.0,38.0,0.013032407407407407,5644.0,77.73179396092362,1995.0,None,False,,
a81c598f9550a83f32981cdf1026b0bd2c8d19e6,51b5058d04233bce24927ac233d68cfdfda2cfb9,antirez,antirez@gmail.com,Fri Feb 22 11:33:10 2013 +0100,1361529190,redis-trib: skeleton of coverage fix for keys in multiple nodes case.,17.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,566.0,39.0,0.048113425925925934,5645.0,21.78421938898244,1996.0,None,False,,
51b5058d04233bce24927ac233d68cfdfda2cfb9,36af851550b7aedf7a3fafaaa1331ffb9747b16e,antirez,antirez@gmail.com,Fri Feb 22 12:25:16 2013 +0100,1361532316,redis-trib: check that all the nodes agree about the slots configuration.,27.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,583.0,40.0,0.03618055555555556,5646.0,28.63915547024952,1997.0,None,False,,
36af851550b7aedf7a3fafaaa1331ffb9747b16e,974929770b49491d108da4ab1a0f7134b4011697,antirez,antirez@gmail.com,Fri Feb 22 17:43:35 2013 +0100,1361551415,"Cluster: introduced a failure reports system.A u00c2u00a7Redis Cluster node used to mark a node as failing when itselfndetected a failure for that node, and a single acknowledge was receivednabout the possible failure state.nnThe new API will be used in order to possible to require that N othernnodes have a PFAIL or FAIL state for a given node for a node to set itnas failing.n",72.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4558314584408234,12.0,1698.5,389.0,1.5230844907407408,5647.5,1.6468814941103067,1999.0,None,False,,
974929770b49491d108da4ab1a0f7134b4011697,5c55ed9388988fe4bb1035a98b5e6821fa256c49,antirez,antirez@gmail.com,Fri Feb 22 17:45:49 2013 +0100,1361551549,Cluster: remove warning adding clusterNodeSetSlotBit() prototype.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2098.0,101.0,0.001550925925925926,5649.0,645.776119402985,2000.0,None,False,,
5c55ed9388988fe4bb1035a98b5e6821fa256c49,d218a4e2447feb18af59e702df8ea3815d55a375,antirez,antirez@gmail.com,Fri Feb 22 19:18:30 2013 +0100,1361557110,"Cluster: new state information, cluster size.The definition of cluster size is: the number of known nodes in thencluster that are masters and serving at least an hash slot.n",21.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4537163391869448,12.0,1734.5,392.0,0.06513888888888889,5650.5,12.606340072443292,2002.0,None,False,,
d218a4e2447feb18af59e702df8ea3815d55a375,f4093753e495799d2473f40cee29d5e47878372a,antirez,antirez@gmail.com,Fri Feb 22 19:20:38 2013 +0100,1361557238,Cluster: add cluster_size field in CLUSTER INFO output.,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2118.0,103.0,0.0014814814814814814,5652.0,676.0,2003.0,None,False,,
f4093753e495799d2473f40cee29d5e47878372a,825e07f2fd8949cffabcc0d5800ea46778dddafd,antirez,antirez@gmail.com,Fri Feb 22 19:24:01 2013 +0100,1361557441,"Cluster: if no previous config exists, create the myself node as master.",2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2120.0,104.0,0.002349537037037037,5653.0,426.615763546798,2004.0,None,False,,
825e07f2fd8949cffabcc0d5800ea46778dddafd,977035b7b509310497cad25e0256d6d3bdafbc63,0x20h,kohj@informatik.uni-marburg.de,Sun Feb 24 17:43:56 2013 +0100,1361724236,suppress external diff program when using git diff.,1.0,1.0,"src/mkreleasehdr.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,11.0,3.0,38.98861111111111,0.0,0.0,0.0,None,False,,
825e07f2fd8949cffabcc0d5800ea46778dddafd,1abce14611e01b38e0b461a12a01ce71b35a6342,antirez,antirez@gmail.com,Mon Feb 25 11:15:03 2013 +0100,1361787303,"Cluster: added new API countKeysInSlot().This is similar to getKeysInSlot() but just returns the number of keysnfound in a given hash slot, without returning the keys.n",16.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,780.0,91.0,3.040763888888889,5654.0,1.3288647315413251,2005.0,None,False,,
1abce14611e01b38e0b461a12a01ce71b35a6342,ad3bca1fdf68db5276d5b7457d542bcdd72e7622,antirez,antirez@gmail.com,Mon Feb 25 11:20:17 2013 +0100,1361787617,Cluster: added stub for verifyClusterConfigWithData().See the top-comment for the function in this commit for details aboutnwhat the function is supposed to do.n,35.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9518135120401552,12.0,2084.333333333333,728.0,3.3587384259259268,5656.0,1.2031973663560802,2008.0,None,False,,
ad3bca1fdf68db5276d5b7457d542bcdd72e7622,c2eb4a606f5bf534de6b6f68ed4051afdd5e3aa1,antirez,antirez@gmail.com,Mon Feb 25 11:23:04 2013 +0100,1361787784,Cluster: use CountKeysInSlot() when we just need the count.,2.0,7.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,12.0,1760.0,398.0,0.0019328703703703704,5658.5,389.02395209580834,2010.0,None,False,,
c2eb4a606f5bf534de6b6f68ed4051afdd5e3aa1,d2154254be252e34c441f22a43c69cba01e2fcaf,antirez,antirez@gmail.com,Mon Feb 25 11:24:42 2013 +0100,1361787882,Cluster: fix case for getKeysInSlot() and countKeysInSlot().Redis functions start in low case. A few functions about cluster werencapitalized the wrong way.n,6.0,6.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,12.0,1437.0,492.0,0.0029899691358024685,5661.0,374.57946172703606,2013.0,None,False,,
d2154254be252e34c441f22a43c69cba01e2fcaf,9947b0d96d733d411622186e6db835967270ad48,antirez,antirez@gmail.com,Mon Feb 25 11:40:21 2013 +0100,1361788821,A comment in main() clarified.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2768.0,333.0,0.013935185185185186,5663.0,72.76079734219269,2014.0,None,False,,
9947b0d96d733d411622186e6db835967270ad48,a517c89321527d030c4cfed768444e4c49ad3cf4,antirez,antirez@gmail.com,Mon Feb 25 11:43:49 2013 +0100,1361789029,Cluster: verifyClusterConfigWithData() implemented.,37.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2141.0,108.0,0.013275462962962965,5664.0,76.32693984306887,2015.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
a517c89321527d030c4cfed768444e4c49ad3cf4,d4fa40655dfdbc9bbff9299f773812452875c6c8,antirez,antirez@gmail.com,Mon Feb 25 12:04:31 2013 +0100,1361790271,Cluster: new sub-command CLUSTER COUNTKEYSINSLOT.The new sub-command uses the new countKeysInSlot() API and allows ancluster client to get the number of keys for a given hashslot.n,6.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2178.0,109.0,0.014375,5665.0,70.56521739130434,2016.0,None,False,,
d4fa40655dfdbc9bbff9299f773812452875c6c8,996a643752b311b26228c2044b29d9034ee910d5,antirez,antirez@gmail.com,Mon Feb 25 12:37:50 2013 +0100,1361792270,Cluster: use O(log(N)) algo for countKeysInSlot().,23.0,8.0,"src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,12.0,1085.0,387.0,0.05078703703703704,5666.5,15.767547857793982,2018.0,None,False,,
996a643752b311b26228c2044b29d9034ee910d5,544bbe5387b9c4fd925693b947fce574bd9854a5,antirez,antirez@gmail.com,Mon Feb 25 12:40:32 2013 +0100,1361792432,Cluster: validate slot number in CLUSTER COUNTKEYSINSLOT.,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2184.0,110.0,0.025011574074074075,5668.0,40.98149005090236,2019.0,None,False,,
544bbe5387b9c4fd925693b947fce574bd9854a5,18f537083aaf54b35e2a5aa0a683d031ac54e253,antirez,antirez@gmail.com,Mon Feb 25 12:41:13 2013 +0100,1361792473,"Cluster: no limits for the count parameter of CLUSTER GETKEYSINSLOT.Not sure why I set a limit to 1 million keys, there is no reason fornthis artificial limit, and anyway this is s a stupid limit because it isnalready high enough to create latency issues. So let's the users shootnon their feet because maybe they just actually know what they are doing.n",1.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2188.0,111.0,0.00047453703703703693,5669.0,2108.3170731707323,2020.0,None,False,,
18f537083aaf54b35e2a5aa0a683d031ac54e253,3d588b37cedc49d29628da7d66e35fbf05aa440b,Arnaud Granal,serphen@gmail.com,Mon Feb 25 19:25:48 2013 +0200,1361813148,Fix error repl-backlog-size must be 1 or greaterThe parameteru00c2u00a0repl-backlog-size is not parsed correctly in the configuration file. argv[0] is parsed instead of argv[1].,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1030.0,79.0,11.12900462962963,0.0,0.0,0.0,Corrective,True,,
18f537083aaf54b35e2a5aa0a683d031ac54e253 3d588b37cedc49d29628da7d66e35fbf05aa440b,b26bb768bcb83627e5cbc035d6355f1c0f6c818f,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 25 09:38:15 2013 -0800,1361813895,Merge pull request #969 from serphen/unstableFix error repl-backlog-size must be 1 or greater,,,,,,,,,,,,,,,Merge,False,,
b26bb768bcb83627e5cbc035d6355f1c0f6c818f,9cb578ced0c8ffb3b2a5ae2927cadb83b66726f8,antirez,antirez@gmail.com,Mon Feb 25 19:13:22 2013 +0100,1361816002,Cluster: new function clusterNodeDelFailureReport() for failure reports.This is the missing part of the API that will be used to reimplementnfailure detection of Cluster nodes.n,26.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2187.0,112.0,0.2723263888888889,5670.0,4.6720642611245715,2021.0,None,False,,
9cb578ced0c8ffb3b2a5ae2927cadb83b66726f8,d5e8b0a47fa84debb9b0b5b2ce617b3739c04245,antirez,antirez@gmail.com,Tue Feb 26 11:08:03 2013 +0100,1361873283,"Cluster: cleanup idle failure reports every time we remove one.This is not very important as anyway when the function counting thennumber of reports is called the cleanup is performed. However with thisnchange if only part of the nodes that reported the failure will reportnthe node is back ok, we'll cleanup the older entries ASAP. In complexnsplit net split scenarios, and when we are dealing with clusters havingnnodes in the order of ~ 1000, this can save some CPU.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2213.0,113.0,0.662974537037037,5671.0,2.5083535552801104,2022.0,None,False,,
d5e8b0a47fa84debb9b0b5b2ce617b3739c04245,1b1b3f6c068eab655c5c5e84891fe1970f36c923,antirez,antirez@gmail.com,Tue Feb 26 11:19:48 2013 +0100,1361873988,Cluster: invert two functions declarations in more natural order.,20.0,20.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2214.0,114.0,0.008159722222222223,5672.0,123.55319148936172,2023.0,None,False,,
1b1b3f6c068eab655c5c5e84891fe1970f36c923,6356cf6808be9ea88ab97be33ebf1576eeb57da6,antirez,antirez@gmail.com,Tue Feb 26 11:52:12 2013 +0100,1361875932,"Set process name in ps output to make operations safer.This commit allows Redis to set a process name that includes the bindingnaddress and the port number in order to make operations simpler.nnRedis children processes doing AOF rewrites or RDB saving change thenname into redis-aof-rewrite and redis-rdb-bgsave respectively.nnThis in general makes harder to kill the wrong process because of annerror and makes simpler to identify saving children.nnThis feature was suggested by Arnaud GRANAL in the Redis Google Group,nArnaud also pointed me to the setproctitle.c implementation includeed innthis commit.nnThis feature should work on all the Linux, OSX, and all the three majornBSD systems.n",284.0,1.0,"src/Makefile,CAS_DELIMITER,src/Makefile.dep,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/setproctitle.c,CAS_DELIMITER",8.0,1.0,1.0,0.6271939107381694,12.0,880.25,925.0,20.354949363425924,5676.5,1.0165757212921105,2031.0,Corrective,True,True,"[""62689ef0cf3c805b100ff5260485368e1c9b683c""]"
6356cf6808be9ea88ab97be33ebf1576eeb57da6,97ffcd351b7e43b48cce0e89ff26d5517156f9cd,antirez,antirez@gmail.com,Tue Feb 26 14:58:39 2013 +0100,1361887119,Cluster: use the failure report API to reimplement failure detection.The new system detects a failure only when there is quorum from masters.n,82.0,21.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2214.0,115.0,0.15197916666666667,5681.0,7.579849211788898,2032.0,None,False,True,"[""303dde3757b75f9ce529ad804abf7e6d6ae5e793""]"
97ffcd351b7e43b48cce0e89ff26d5517156f9cd,f288b07563c833ae7c3748692ea7e35d299c0082,antirez,antirez@gmail.com,Tue Feb 26 15:03:27 2013 +0100,1361887407,Cluster: log the event when we clear the FAIL flag.,3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2275.0,116.0,0.0033333333333333327,5682.0,301.0,2033.0,None,False,,
f288b07563c833ae7c3748692ea7e35d299c0082,d0992d6e8b883d6f04fa4da21611180766fd8df7,antirez,antirez@gmail.com,Tue Feb 26 15:15:44 2013 +0100,1361888144,Cluster: a few random fixes to the new failure detection.,14.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2278.0,117.0,0.008530092592592594,5683.0,118.23202170963366,2034.0,None,False,,
d0992d6e8b883d6f04fa4da21611180766fd8df7,deb1f4d841d402508d27a5bda0bf3a7c19cc0a6d,antirez,antirez@gmail.com,Tue Feb 26 15:51:15 2013 +0100,1361890275,setproctitle.c: declar tmp as static so valgrind will not detect a leak.,1.0,1.0,"src/setproctitle.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,259.0,1.0,0.16600694444444444,5684.0,7.023844384020079,2035.0,None,False,,
deb1f4d841d402508d27a5bda0bf3a7c19cc0a6d,9c8be6cab9e4ec6c4fad2e1dd01fb13f7032205b,Stam He,stamhe@163.com,Wed Feb 27 11:53:11 2013 +0800,1361937191,Set proctitle: avoid the use of __attribute__((constructor)).This cased a segfault in some Linux system and was GCC-specific.nnCommit modified by @antirez:nn1) Stripped away the part to set the proc title via config for now.n2) Handle initialization of setproctitle only when the replacementn   is used.n3) Don't require GCC now that the attribute constructor is non   longer used.n,15.0,4.0,"src/config.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/setproctitle.c,CAS_DELIMITER",3.0,1.0,1.0,1.359992492218488,12.0,1076.0,361.0,0.6536805555555555,1.0,1.0717118573804705,2.0,None,False,,
9c8be6cab9e4ec6c4fad2e1dd01fb13f7032205b,e431a9766074aa5a74845f7dd3680079d4ef404e,Stam He,stamhe@163.com,Wed Feb 27 18:00:47 2013 +0800,1361959247,add a check for aeCreateTimeEvent1) Add a check for aeCreateTimeEvent in function initServer.n,4.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2783.0,336.0,0.25527777777777777,3.0,4.9173014145810665,3.0,Feature Addition,False,True,"[""c35b065a642ca02ec550c6eaa54df53f113aa124""]"
e431a9766074aa5a74845f7dd3680079d4ef404e,c35b065a642ca02ec550c6eaa54df53f113aa124,antirez,antirez@gmail.com,Wed Feb 27 12:00:11 2013 +0100,1361962811,Better panic message for failed time event creation.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2786.0,337.0,0.04125,5685.0,25.24242424242424,2036.0,Corrective,True,,
c35b065a642ca02ec550c6eaa54df53f113aa124,f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7,antirez,antirez@gmail.com,Wed Feb 27 12:27:15 2013 +0100,1361964435,Use GCC printf format attribute for redisLog().This commit also fixes redisLog() statements producing warnings.n,93.0,84.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",6.0,1.0,1.0,0.8175467492561791,12.0,1662.833333333333,975.0,5.106618441358023,5688.5,1.2863964956388598,2042.0,Corrective,True,,
f9b5ca29fd4a1e72d1bb00afc74f76dc14b383d7,e4682c82e325718bd74ef3b2881a1b3ed10208df,antirez,antirez@gmail.com,Wed Feb 27 12:29:20 2013 +0100,1361964560,Remove too agressive/spamming log in rdb.c.,0.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1198.0,86.0,1.025787037037037,5692.0,1.974861217673873,2043.0,None,False,,
e4682c82e325718bd74ef3b2881a1b3ed10208df,f7dac639a907f7186920075f462d0cb15e2c5804,antirez,antirez@gmail.com,Wed Feb 27 12:33:27 2013 +0100,1361964807,Remove warning when printing redisBuildId().,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2786.0,339.0,0.004305555555555556,5693.0,233.25806451612902,2044.0,None,False,,
f7dac639a907f7186920075f462d0cb15e2c5804,96dd2109708b09b3434b1d595e6de4cbc580ed7f,antirez,antirez@gmail.com,Wed Feb 27 15:58:41 2013 +0100,1361977121,redis-trib: initial implementation of addnode command.,24.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,610.0,41.0,5.148206018518519,5694.0,1.1942424208360969,2045.0,None,False,,
96dd2109708b09b3434b1d595e6de4cbc580ed7f,2dcb5ab72b01d170915a8527dc11d8d021caff39,antirez,antirez@gmail.com,Wed Feb 27 16:12:59 2013 +0100,1361977979,Cluster: add comments in sub-sections of CLUSTER command.,6.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2288.0,119.0,0.15675925925925924,5695.0,7.379208505611341,2046.0,None,False,,
2dcb5ab72b01d170915a8527dc11d8d021caff39,d20dea3eb7dc830c49c48988e1318039d1735e11,antirez,antirez@gmail.com,Wed Feb 27 17:09:33 2013 +0100,1361981373,Cluster: blank node address when flagging it as NOADDR.,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2294.0,120.0,0.039282407407407405,5696.0,26.45668827342369,2047.0,None,False,,
d20dea3eb7dc830c49c48988e1318039d1735e11,7ddc0fe652bfb4dc09702c98c95082626a66cd03,antirez,antirez@gmail.com,Wed Feb 27 17:23:11 2013 +0100,1361982191,redis-trib: skip noaddr and disconnected nodes while loading cluster info.,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,631.0,42.0,0.05868055555555556,5697.0,18.041420118343197,2048.0,None,False,,
7ddc0fe652bfb4dc09702c98c95082626a66cd03,d2b8281b3f2c19d6510bb066bca6d8ebd04a38dd,antirez,antirez@gmail.com,Wed Feb 27 17:53:48 2013 +0100,1361984028,Cluster: added a missing return on CLUSTER SETSLOT.,5.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2296.0,121.0,0.03072916666666666,5698.0,33.54237288135593,2049.0,None,False,,
d2b8281b3f2c19d6510bb066bca6d8ebd04a38dd,d45d184118326bb33c0768338f801f7cbab2d363,antirez,antirez@gmail.com,Wed Feb 27 17:55:59 2013 +0100,1361984159,Cluster: CLUSTER FORGET implemented.,47.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2299.0,122.0,0.0015162037037037034,5699.0,660.5419847328244,2050.0,None,False,,
d45d184118326bb33c0768338f801f7cbab2d363,64942fca01c67d36a28bfe1703e75d0dbfc19272,antirez,antirez@gmail.com,Wed Feb 27 18:02:22 2013 +0100,1361984542,redis-trib help.,13.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,632.0,43.0,0.027210648148148147,5700.0,37.75031901318588,2051.0,None,False,,
64942fca01c67d36a28bfe1703e75d0dbfc19272,bc922dc688ed22a8dc3f5fd8a765beb3e230a836,antirez,antirez@gmail.com,Thu Feb 28 13:12:56 2013 +0100,1362053576,redis-trib: skip nodes without slots when creating the config signature.,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,642.0,44.0,0.7990046296296296,5701.0,2.2515572036967293,2052.0,None,False,,
bc922dc688ed22a8dc3f5fd8a765beb3e230a836,a2566d66188a96562b4f9238497cd35bb14ea029,antirez,antirez@gmail.com,Thu Feb 28 15:00:09 2013 +0100,1362060009,Cluster: don't gossip about nodes that are not useful to the cluster.,10.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2346.0,123.0,0.8778935185185185,5702.0,2.1390903098220173,2053.0,None,False,,
a2566d66188a96562b4f9238497cd35bb14ea029,4521115b1767081f17acf67d154c69e1a589c0bb,antirez,antirez@gmail.com,Thu Feb 28 15:11:05 2013 +0100,1362060665,"Cluster: new field in cluster node structure, numslots.Before a relatively slow popcount() operation was needed every time wenneeded to get the number of slots served by a given cluster node.nNow we just need to check an integer that is taken in sync with thenbitmap.n",6.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,12.0,1867.5,421.0,0.5606828703703703,5703.5,67.29954339095029,2055.0,None,False,True,"[""4fdde78c72ac18f51460be9ac96d1d638a969c9d""]"
4521115b1767081f17acf67d154c69e1a589c0bb,d21d6b666f868d1eeffc366fc8c08f2219fd882b,antirez,antirez@gmail.com,Thu Feb 28 15:13:32 2013 +0100,1362060812,Cluster: use node->numslots instead of popcount() where possible.,2.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2358.0,125.0,0.0017013888888888886,5705.0,588.7551020408164,2056.0,None,False,,
d21d6b666f868d1eeffc366fc8c08f2219fd882b,5f8fd27ace0d1f98c480fa7b2b6b293cbbcf921f,antirez,antirez@gmail.com,Thu Feb 28 15:23:09 2013 +0100,1362061389,Cluster: refactoring of clusterNode*Bit to use helper bitmap functions.,27.0,11.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2356.0,126.0,0.006678240740740741,5706.0,150.7400346620451,2057.0,None,False,,
5f8fd27ace0d1f98c480fa7b2b6b293cbbcf921f,0d77440b2698b693cc31a0ee59df88b63cc704e7,antirez,antirez@gmail.com,Thu Feb 28 15:41:54 2013 +0100,1362062514,Cluster: better handling of slots changes in PONG packets.The new code makes sure that the node slots bitmap is always consistentnwith the cluster->slots array.n,5.0,10.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2372.0,127.0,0.013020833333333334,5707.0,77.8,2058.0,None,False,,
0d77440b2698b693cc31a0ee59df88b63cc704e7,caf9b24a7d5f59be45fde702e074589af0eeec85,antirez,antirez@gmail.com,Thu Feb 28 15:54:29 2013 +0100,1362063269,Cluster: don't set the slot as unassigned because of PONG info.As stated in the comment this is usually due to a resharding in progressnso the client should be still redirected to the old node that willnhandle the redirection elsewhere.n,4.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2367.0,128.0,0.008738425925925927,5708.0,115.43708609271522,2059.0,None,False,,
caf9b24a7d5f59be45fde702e074589af0eeec85,d783860457f30d54a8c207b8ea952b14d19ca509,Stam He,stamhe@163.com,Sat Mar 2 17:16:46 2013 +0800,1362215806,point 2 of slave-serve-stale-data miss '-' between 'stale' and 'data',1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,675.0,103.0,30.65520833333333,4.0,1.0326208841618811,0.0,None,False,,
d783860457f30d54a8c207b8ea952b14d19ca509 977035b7b509310497cad25e0256d6d3bdafbc63,174e51cb75323f2d81e71af16f961a3679d1a0ad,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 4 01:57:01 2013 -0800,1362391021,Merge pull request #967 from 0x20h/fix-git-diffsuppress external diff program when using git diff.,,,,,,,,,,,,,,,Merge,False,,
174e51cb75323f2d81e71af16f961a3679d1a0ad,3b3974410ed12899ae244aefd0fe4dc4f669d6a2,antirez,antirez@gmail.com,Mon Mar 4 11:14:32 2013 +0100,1362392072,redis-cli: use keepalive socket option.This should improve things in two ways:nn1) Prevent timeouts caused by the execution of long commands.n2) Improve detection of real connection errors.nnThis is mostly effective only on Linux because of the bogus defaultnkeepalive settings. In Linux we have OS-specific calls to set thenkeepalive interval to reasonable values.n,7.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1354.0,80.0,17.684305555555557,5709.0,1.056547315180598,2060.0,None,False,,
3b3974410ed12899ae244aefd0fe4dc4f669d6a2,bc84c399f8b7ab891f72cf3920214a6fd5037f41,charsyam,charsyam@gmail.com,Thu Feb 21 01:22:24 2013 -0800,1361438544,adding check error codeadding check error coden,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2365.0,129.0,-7.230613425925926,11.0,0.8616991476249549,11.0,Feature Addition,False,,
bc84c399f8b7ab891f72cf3920214a6fd5037f41,0c01088b511e794218ab226541cfacdf75b4b744,antirez,antirez@gmail.com,Mon Mar 4 13:15:09 2013 +0100,1362399309,Cluster: REPLICATE subcommand and stub for clusterSetMaster().,52.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2367.0,130.0,11.119965277777775,5710.0,1.089928338355373,2061.0,None,False,,
0c01088b511e794218ab226541cfacdf75b4b744,7bead003e267a852a514e6deaf05c1b5b37cd412,antirez,antirez@gmail.com,Mon Mar 4 13:22:21 2013 +0100,1362399741,SLAVEOF command refactored into a proper API.We now have replicationSetMaster() and replicationUnsetMaster() that cannbe called in other contexts (for instance Redis Cluster).n,28.0,15.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.27138958750811115,12.0,1411.5,368.0,4.481377314814815,5711.5,1.18319148618647,2063.0,None,False,,
7bead003e267a852a514e6deaf05c1b5b37cd412,b8a28bf4422b95d99527b6c73023621d1d350758,antirez,antirez@gmail.com,Mon Mar 4 15:27:58 2013 +0100,1362407278,Cluster: actually setup replication in CLUSTER REPLICATE.,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2419.0,131.0,0.0922337962962963,5713.0,11.842012799598448,2064.0,None,False,,
b8a28bf4422b95d99527b6c73023621d1d350758,3be893123f495efb7239f802549f82bd248033de,antirez,antirez@gmail.com,Mon Mar 4 15:39:43 2013 +0100,1362407983,Make sure replicationSetMaster() works when ip argument is not an sds.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1451.0,71.0,0.09539351851851853,5714.0,11.482892501819947,2065.0,None,False,,
3be893123f495efb7239f802549f82bd248033de,d334897e80d026b0b7b66b4c8b1ff318c2caebce,antirez,antirez@gmail.com,Mon Mar 4 19:45:36 2013 +0100,1362422736,Cluster: fix maximum line length when loading config.There are pathological cases where the line can be even longer a singlennode may contain all the slots in importing/migrating state.n,6.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2421.0,132.0,0.17891203703703706,5715.0,6.589338853668004,2066.0,None,False,,
d334897e80d026b0b7b66b4c8b1ff318c2caebce,d6457577d4a1378f15fb4c2965c1d5862117290d,antirez,antirez@gmail.com,Mon Mar 4 19:47:00 2013 +0100,1362422820,Cluster: don't perform startup slots sanity check for slaves.If we are a cluster node the DB content will not match our configurednslots. Don't do the check at all.n,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2424.0,133.0,0.0009722222222222224,5716.0,1029.5714285714287,2067.0,None,False,,
d6457577d4a1378f15fb4c2965c1d5862117290d,e7628be2a7307ee4f3b8b8e307436bc2d1a6f551,antirez,antirez@gmail.com,Tue Mar 5 11:50:11 2013 +0100,1362480611,Cluster: set node->slaveof correctly when a node state is updated.,4.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2428.0,134.0,0.6688773148148148,5717.0,2.495042480663079,2068.0,None,False,,
e7628be2a7307ee4f3b8b8e307436bc2d1a6f551,d728ec6deefa10c4bdb99b190e47368f7f1747f2,antirez,antirez@gmail.com,Tue Mar 5 12:13:39 2013 +0100,1362482019,"Cluster: send a ping to every node we never contacted in timeout/2 seconds.Usually we try to send just 1 ping every second, however when we detectnwe are going to have unreliable failure detection because we can't pingnsome node in time, send an additional ping.nnThis should only happen with very large clusters or when the the nodentimeout is set to a very low value.n",13.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2431.0,135.0,0.0162962962962963,5718.0,62.36363636363637,2069.0,None,False,,
d728ec6deefa10c4bdb99b190e47368f7f1747f2,e4b481a5f652bd0390e64f9276fcc1312caff614,antirez,antirez@gmail.com,Tue Mar 5 12:17:30 2013 +0100,1362482250,Cluster: A comment updated in clusterCron().,2.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2442.0,136.0,0.002673611111111111,5719.0,375.02597402597405,2070.0,None,False,,
e4b481a5f652bd0390e64f9276fcc1312caff614,b7d085fc0dea44bb614da7edce2370521802250d,antirez,antirez@gmail.com,Tue Mar 5 12:39:11 2013 +0100,1362483551,Cluster: SLAVEOF command not allowed in cluster mode.,9.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1451.0,72.0,0.8746296296296296,5720.0,2.1433410967605333,2071.0,None,False,,
b7d085fc0dea44bb614da7edce2370521802250d,31ac376051c3b92c917d3e042fd94bd3b9b20ef4,antirez,antirez@gmail.com,Tue Mar 5 12:58:22 2013 +0100,1362484702,Cluster: slaveof not allowed in redis.conf as well.,6.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1030.0,80.0,7.772615740740743,5721.0,1.1286568168754858,2072.0,None,False,,
31ac376051c3b92c917d3e042fd94bd3b9b20ef4,d3b4662347a1099d90339328ef6df7bc939cf42a,antirez,antirez@gmail.com,Tue Mar 5 13:02:44 2013 +0100,1362484964,"Cluster: don't check keys hash slots when the source is our master.Usually we redirect clients to the right hash slot, however we don'tnwant to do that with our master, we want just to mirror it.n",7.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2786.0,340.0,6.020335648148147,5722.0,1.1661036956149775,2073.0,None,False,True,"[""d827dbfda770d040d23802fb462487eea3699f0b""]"
d3b4662347a1099d90339328ef6df7bc939cf42a,1a02b7440aa02cb24c845d8bda48b98c4a60eb4c,antirez,antirez@gmail.com,Tue Mar 5 13:15:05 2013 +0100,1362485705,"Cluster: new node field fail_time.This is the unix time at which we set the FAIL flag for the node.nIt is only valid if FAIL is set.nnThe idea is to use it in order to make the cluster more robust, forninstance in order to revert a FAIL state if it is long-standing butnstill slots are assigned to this node, that is, no one is going to fixnthese slots apparently.n",5.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,12.0,1912.0,436.0,0.5174710648148149,5723.5,13.986736745262215,2075.0,None,False,,
1a02b7440aa02cb24c845d8bda48b98c4a60eb4c,bac57ad14b6902e822c94a21857810e917bd07d3,antirez,antirez@gmail.com,Tue Mar 5 15:05:32 2013 +0100,1362492332,"Cluster: more robust FAIL flag cleaup.If we have a master in FAIL state that's reachable again, and apparentlynno one is going to serve its slots, clear the FAIL flag and let thencluster continue with its operations again.n",29.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2443.0,138.0,0.07670138888888889,5725.0,14.037573562698054,2076.0,None,False,,
bac57ad14b6902e822c94a21857810e917bd07d3,1025dd778686b23168bcedbdaf3b1d02508ceb37,antirez,antirez@gmail.com,Tue Mar 5 16:12:08 2013 +0100,1362496328,Cluster: connect to our master ASAP after startup if we are a slave node.,12.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2470.0,139.0,0.04625,5726.0,22.621621621621625,2077.0,None,False,,
1025dd778686b23168bcedbdaf3b1d02508ceb37,304ef5e283c4309c3d5d75d17b98f9e77fcfeca9,antirez,antirez@gmail.com,Wed Mar 6 11:50:38 2013 +0100,1362567038,Allow AUTH while loading the DB in memory.While Redis is loading the AOF or RDB file in memory only a subset ofncommands are allowed. This commit adds AUTH to this subset.n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2791.0,341.0,0.9499305555555556,5727.0,2.052708531325389,2078.0,Feature Addition,False,,
304ef5e283c4309c3d5d75d17b98f9e77fcfeca9,1303f02be63a88b13c5bf4f6b14ab59526f562a2,charsyam,charsyam@gmail.com,Tue Feb 5 21:47:14 2013 -0800,1360129634,Don't segfault on unbalanced quotes.,4.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1036.0,81.0,-27.257731481481482,12.0,0.9633131612335608,12.0,None,False,,
1303f02be63a88b13c5bf4f6b14ab59526f562a2,5cabae84e60fa4b9ae0de00984ad0e9c08190532,antirez,antirez@gmail.com,Wed Mar 6 12:14:42 2013 +0100,1362568482,sdssplitargs(): now returns NULL only on error.An empty input string also resulted into the function returning NULLnmaking it harder for the caller to distinguish between error and emptynstring without checking the original input string length.n,8.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,717.0,29.0,48.75997685185185,5728.0,1.02050862335391,2079.0,None,False,,
5cabae84e60fa4b9ae0de00984ad0e9c08190532,4ea89e64c03e33ef9f1f2b338fa654f15e5a7f52,antirez,antirez@gmail.com,Wed Mar 6 12:19:38 2013 +0100,1362568778,sdssplitargs(): on error set *argc to 0.This makes programs not checking the return value for NULL much safernsince with this change:nn1) It is still possible to iterate the zero-length result withoutncrashes.n2) sdssplitargs_free will work against NULL and 0 count.n,1.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,725.0,30.0,0.003425925925925926,5729.0,292.8918918918919,2080.0,None,False,,
4ea89e64c03e33ef9f1f2b338fa654f15e5a7f52,cf4d7737bb198af008c076a02d85acc22b380ef9,antirez,antirez@gmail.com,Wed Mar 6 12:24:12 2013 +0100,1362569052,More specific error message in loadServerConfigFromString().,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1040.0,82.0,28.23400462962963,5730.0,1.0354182841972963,2081.0,None,False,,
cf4d7737bb198af008c076a02d85acc22b380ef9,729a3432ba000c50fd6875600df62f4ef1a768ab,antirez,antirez@gmail.com,Wed Mar 6 12:34:43 2013 +0100,1362569683,sds.c: sdssplitargs_free() removed as it was a duplicate.,5.0,12.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.3227569588973983,12.0,413.0,46.0,170.34373263888892,5731.5,48.7362742506039,2083.0,None,False,,
729a3432ba000c50fd6875600df62f4ef1a768ab,011fa89ac957091f5652475e88758093a80dcd5e,antirez,antirez@gmail.com,Wed Mar 6 12:36:07 2013 +0100,1362569767,Cluster: sdssplitargs_free() -> sdsfreesplitres().,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2482.0,140.0,0.8499884259259259,5733.0,2.1764866079331138,2084.0,None,False,,
011fa89ac957091f5652475e88758093a80dcd5e,8c193af6969ed3e24f0d4ba9e3780f8b51b44ce0,antirez,antirez@gmail.com,Wed Mar 6 12:38:32 2013 +0100,1362569912,redis-cli: use sdsfreesplitres() instead of hand-coding it.,1.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1361.0,81.0,2.058333333333333,5734.0,1.4858299595141702,2085.0,None,False,,
8c193af6969ed3e24f0d4ba9e3780f8b51b44ce0,bfa25441e74e931e6f582b3e578faa9cec0fe3a8,antirez,antirez@gmail.com,Wed Mar 6 12:40:48 2013 +0100,1362570048,"Handle a non-impossible empty argv in loadServerConfigFromString().Usually this does not happens since we trim for  trn, but if therenare other chars that return true with isspace(), we may end with annempty argv. Better to handle the condition in an explicit way.n",7.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1040.0,83.0,0.011527777777777777,5735.0,87.74698795180723,2086.0,Perfective,False,True,"[""5d0f408d429d4ef0eedcff66bba1464ff0e5a01a""]"
bfa25441e74e931e6f582b3e578faa9cec0fe3a8,4d62912619d10667bf06d683290fd0d33c1fcf6c,antirez,antirez@gmail.com,Wed Mar 6 15:47:16 2013 +0100,1362581236,Add a warning about command renaming in redis.conf.,3.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,675.0,104.0,4.229513888888889,5736.0,1.2364337903292013,1311.0,Feature Addition,False,,
4d62912619d10667bf06d683290fd0d33c1fcf6c,7b190a08cfe9aded4c64b775fa2a2ab24b7b9405,antirez,antirez@gmail.com,Wed Mar 6 16:28:26 2013 +0100,1362583706,"API to lookup commands with their original name.A new server.orig_commands table was added to the server structure, thisncontains a copy of the commant table unaffected by rename-commandnstatements in redis.conf.nnA new API lookupCommandOrOriginal() was added that checks both tables,nnew first, old later, so that rewriteClientCommandVector() and friendsncan lookup commands with their new or original name in order to fix thenclient->cmd pointer when the argument vector is renamed.nnThis fixes the segfault of issue #986, but does not fix a wider range ofnproblems resulting from renaming commands that actually operate on datanand are registered into the AOF file or propagated to slaves... That isncommand renaming should be handled with care.n",26.0,6.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.061278124459133,12.0,1875.333333333333,773.0,5.099934413580248,5738.0,1.0691742553137644,2089.0,Corrective,True,,
7b190a08cfe9aded4c64b775fa2a2ab24b7b9405,042ed270c83d91c3dfd6f63db092f4ef8fb0c1a8,Gengliang Wang,ltnwgl@gmail.com,Tue Mar 5 00:47:05 2013 +0800,1362415625,Removed useless return statements in pubsub.c(original commit message edited)n,0.0,2.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,313.0,12.0,41.95612268518519,1.0,1.0238344235835,1.0,None,False,,
042ed270c83d91c3dfd6f63db092f4ef8fb0c1a8,3dad8196b7325105b7edbfe9dd09bcd7ab60de8b,antirez,antirez@gmail.com,Wed Mar 6 18:24:43 2013 +0100,1362590683,Cluster: clusterUpdateState() function simplified.Also the NEEDHELP Cluster state was removed as it will no longer benused by Redis Cluster.n,5.0,14.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2974722489192897,12.0,1935.0,442.0,0.16141782407407407,5740.5,4.614180153528672,2091.0,None,False,,
3dad8196b7325105b7edbfe9dd09bcd7ab60de8b,abf06fd5ff27be9d73e39c1e6bd53e8e47c528a9,antirez,antirez@gmail.com,Thu Mar 7 15:22:32 2013 +0100,1362666152,Cluster: log global cluster state change.,6.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2474.0,142.0,0.8734837962962962,5742.0,2.1448409280631786,2092.0,None,False,,
abf06fd5ff27be9d73e39c1e6bd53e8e47c528a9,299b8f76c2fcb87f7030aae6eeb15e894bdf72cb,antirez,antirez@gmail.com,Thu Mar 7 15:36:59 2013 +0100,1362667019,Cluster: mark cluster state as fail of majority of masters is unreachable.,19.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2479.0,143.0,0.010034722222222223,5743.0,100.65397923875432,2093.0,None,False,,
299b8f76c2fcb87f7030aae6eeb15e894bdf72cb,f0b807cd475151bcd67a10c8e7906e88f46a28de,antirez,antirez@gmail.com,Thu Mar 7 15:40:53 2013 +0100,1362667253,Cluster: update cluster state on PFAIL flag set/cleared on nodes.,5.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2496.0,144.0,0.002708333333333333,5744.0,370.23076923076917,2094.0,None,False,,
f0b807cd475151bcd67a10c8e7906e88f46a28de,cd9dcd1835f94a8540c4bf929546cff0a2716411,antirez,antirez@gmail.com,Fri Mar 8 11:54:33 2013 +0100,1362740073,Move Redis databases background processing to databasesCron().,21.0,16.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2809.0,343.0,1.8098032407407407,5745.0,1.55254625336548,2095.0,None,False,True,"[""32a83c8206a501f300e971f46cb6cd469731e74f""]"
cd9dcd1835f94a8540c4bf929546cff0a2716411,dfd732dff397d77df4d3dd23e9beb2fb9650d031,antirez,antirez@gmail.com,Fri Mar 8 13:59:50 2013 +0100,1362747590,Actually call databasesCron() inside serverCron().,3.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2814.0,344.0,0.08700231481481481,5746.0,12.49394705334575,2096.0,None,False,,
dfd732dff397d77df4d3dd23e9beb2fb9650d031,7ac3b3a486f637fb1331c0c81ae1e2b2c8e70664,antirez,antirez@gmail.com,Fri Mar 8 14:01:12 2013 +0100,1362747672,Only resize/rehash a few databases per cron iteration.This is the first step to lower the CPU usage when many databases arenconfigured. The other is to also process a limited number of DBs perncall in the active expire cycle.n,51.0,35.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.09140162014739274,12.0,2102.0,647.0,0.9089756944444444,5747.5,528.1043031495311,2098.0,None,False,,
7ac3b3a486f637fb1331c0c81ae1e2b2c8e70664,40a2da159cbbfbee5f858f1cede378caea9376fc,antirez,antirez@gmail.com,Fri Mar 8 17:41:20 2013 +0100,1362760880,"Use unsigned integers for DB ids, for defined wrap-to-zero.",3.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2832.0,346.0,0.15287037037037038,5749.0,7.541490006056935,2099.0,None,False,,
40a2da159cbbfbee5f858f1cede378caea9376fc,db29d71a300f6ca7fd58541ea3c3b8ca7c27a03f,antirez,antirez@gmail.com,Fri Mar 8 17:48:58 2013 +0100,1362761338,"activeExpireCycle(): process only a small number of DBs per iteration.This small number of DBs is set to 16 so actually in the defaultnconfiguraiton Redis should behave exactly like in the past.nHowever the difference is that when the user configures a very largennumber of DBs we don't do an O(N) operation, consuming a non trivialnamount of CPU per serverCron() iteration.n",13.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2832.0,347.0,0.005300925925925926,5750.0,189.64628820960698,2100.0,None,False,,
db29d71a300f6ca7fd58541ea3c3b8ca7c27a03f,5f5aa487f9263762b399c0fa5ad49753b259ced6,antirez,antirez@gmail.com,Sat Mar 9 11:44:20 2013 +0100,1362825860,REDIS_DBCRON_DBS_PER_SEC -> REDIS_DBCRON_DBS_PER_CALL,5.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,12.0,2114.5,651.0,0.8258680555555555,5751.5,1.9722508650913944,2102.0,None,False,,
5f5aa487f9263762b399c0fa5ad49753b259ced6,1f7d2c1e27a5378c5db438cb9d1a00fc30f1d598,antirez,antirez@gmail.com,Sat Mar 9 11:48:54 2013 +0100,1362826134,Optimize inner loop of activeExpireCycle() for no-expires case.,7.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2841.0,349.0,0.003171296296296296,5753.0,316.3284671532847,2103.0,None,False,,
1f7d2c1e27a5378c5db438cb9d1a00fc30f1d598,4b1ccdfd4935d842ff465f8686b085cdcd3ebc1c,antirez,antirez@gmail.com,Mon Mar 11 10:42:14 2013 +0100,1362994934,Make comment name match var name in activeExpireCycle().,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2845.0,350.0,1.9537037037037042,5754.0,1.5118483412322274,2104.0,None,False,,
4b1ccdfd4935d842ff465f8686b085cdcd3ebc1c,08b107e4057d76aa7e3a4bb5bceb75b8fcaf3c2a,antirez,antirez@gmail.com,Mon Mar 11 10:51:03 2013 +0100,1362995463,In databasesCron() never test more DBs than we have.,11.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2845.0,351.0,0.006122685185185185,5755.0,164.32703213610588,2105.0,Preventative,False,,
08b107e4057d76aa7e3a4bb5bceb75b8fcaf3c2a,2d851333a649fb20f3bbfdebdde499920d61d4cd,antirez,antirez@gmail.com,Mon Mar 11 11:10:33 2013 +0100,1362996633,"activeExpireCycle() smarter with many DBs and under expire pressure.activeExpireCycle() tries to test just a few DBs per iteration so thatnit scales if there are many configured DBs in the Redis instance.nHowever this commit makes it a bit smarter when one a few of those DBsnare under expiration pressure and there are many many keys to expire.nnWhat we do is to remember if in the last iteration had to return becausenwe ran out of time. In that case the next iteration we'll test all thenconfigured DBs so that we are sure we'll test again the DB undernpressure.nnBefore of this commit after some mass-expire in a given DB the functionntested just a few of the next DBs, possibly empty, a few per iteration,nso it took a long time for the function to reach again the DB undernpressure. This resulted in a lot of memory being used by already expirednkeys and never accessed by clients.n",20.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2853.0,352.0,0.013541666666666669,5756.0,74.84615384615384,2106.0,Preventative,False,,
2d851333a649fb20f3bbfdebdde499920d61d4cd,91d3b487e7d27454a0562e4131f9ab79c8288074,antirez,antirez@gmail.com,Tue Mar 12 09:57:49 2013 +0100,1363078669,redis-cli --bigkeys: don't crash with empty DBs.,4.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1360.0,82.0,5.888391203703704,5757.0,1.169825673160271,2107.0,None,False,,
91d3b487e7d27454a0562e4131f9ab79c8288074,215bfaea164350762ce5917acfb10269f63bfa68,antirez,antirez@gmail.com,Tue Mar 12 18:34:08 2013 +0100,1363109648,"Set default for stop_writes_on_bgsave_err in initServerConfig().It was placed for error in initServer() that's called after thenconfiguation is already loaded, causing issue #1000.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2869.0,353.0,1.3080439814814817,5758.0,1.7645002875724465,2108.0,None,False,,
91d3b487e7d27454a0562e4131f9ab79c8288074,4178a80282ac917a48771da2c2d1ee65bc562161,Damian Janowski,damian.janowski@gmail.com,Tue Mar 12 14:37:50 2013 -0300,1363109870,"Abort when opening the RDB file results in an error other than ENOENT.This fixes cases where the RDB file does exist but can't be accessed fornany reason. For instance, when the Redis process doesn't have enoughnpermissions on the file.n",1.0,2.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2033.0,441.0,6.629236111111113,3.5,1.0754307811812334,2.0,Corrective,True,,
215bfaea164350762ce5917acfb10269f63bfa68 4178a80282ac917a48771da2c2d1ee65bc562161,9925c7c670067684db883876fd6cb0b3dc78ba61,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 11:40:36 2013 -0700,1363113636,Merge pull request #1001 from djanowski/fatal-errors-rdb-loadAbort when opening the RDB file results in an error other than ENOENT.,,,,,,,,,,,,,,,Merge,False,,
9925c7c670067684db883876fd6cb0b3dc78ba61,79a6844e44ca4a2773f2b971b3c692d6ffff34b5,antirez,antirez@gmail.com,Tue Mar 12 19:46:33 2013 +0100,1363113993,rdbLoad(): rework code to save vertical space.,2.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1196.0,88.0,0.047719907407407405,5759.0,21.955614843560515,2109.0,None,False,,
79a6844e44ca4a2773f2b971b3c692d6ffff34b5,0b74a85678f96be8980de3dbdf4316137587b4b9,antirez,antirez@gmail.com,Tue Mar 12 19:55:33 2013 +0100,1363114533,Test: check that Redis starts empty without an RDB file.,7.0,0.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,25.0,2.0,353.9825231481482,5760.0,1.002824998226202,338.0,Preventative,False,,
0b74a85678f96be8980de3dbdf4316137587b4b9,82b0eae690bfb9a08fa516215252bf81f5371488,antirez,antirez@gmail.com,Wed Mar 13 10:04:33 2013 +0100,1363165473,Test: more RDB loading checks.A test for issue #1001 is included.n,32.0,0.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,32.0,3.0,0.5895833333333333,5761.0,2.6961130742049466,339.0,Preventative,False,,
82b0eae690bfb9a08fa516215252bf81f5371488,ae94fe7e48f6a18577c51d6ef5e646f26d80089a,antirez,antirez@gmail.com,Wed Mar 13 11:12:45 2013 +0100,1363169565,Test: make sure broken RDB checksum is detected.,19.0,0.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,64.0,4.0,0.04736111111111111,5762.0,22.114369501466275,340.0,Preventative,False,,
ae94fe7e48f6a18577c51d6ef5e646f26d80089a,3d448bda39e3ec922849211f22a26609789ce1d5,antirez,antirez@gmail.com,Wed Mar 13 12:44:02 2013 +0100,1363175042,Cluster: call clusterHandleSlaveFailover() when our master is down.,26.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2500.0,145.0,5.8771875,5763.0,1.17014941245281,2110.0,None,False,,
3d448bda39e3ec922849211f22a26609789ce1d5,1902a9c5320f4dfdb3151324c2e64548addbcb4d,antirez,antirez@gmail.com,Wed Mar 13 12:51:10 2013 +0100,1363175470,Replication: master_link_down_since_seconds initial value should be huge.server.repl_down_since used to be initialized to the current time atnstartup. This is wrong since the replication never started. Clientsntesting this filed to check if data is uptodate should never believendata is recent if we never ever connected to our master.n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2869.0,355.0,0.7592592592592593,5764.0,2.3170731707317067,2111.0,None,False,,
1902a9c5320f4dfdb3151324c2e64548addbcb4d,575cbc9990f18e7f1048efd96c93ec652e5fcf9b,antirez,antirez@gmail.com,Wed Mar 13 13:10:49 2013 +0100,1363176649,Cluster: clusterHandleSlaveFailover() stub.,31.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,12.0,1957.0,450.0,2.039328703703704,5765.5,28.004978905435014,2113.0,None,False,,
575cbc9990f18e7f1048efd96c93ec652e5fcf9b,db7c17e969cb09cd2a03a13036c2aaa80e1485a4,antirez,antirez@gmail.com,Wed Mar 13 17:21:20 2013 +0100,1363191680,Cluster: FAILOVER_AUTH_REQUEST message type introduced.This message is sent by a slave that is ready to failover its master tonother nodes to get the authorization from the majority of masters.n,18.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,12.0,1972.5,452.0,0.17396990740740742,5767.5,5.3110904131461645,2115.0,None,False,,
db7c17e969cb09cd2a03a13036c2aaa80e1485a4,66144337bfb924f1ad2e189cd562f2516b381f9a,antirez,antirez@gmail.com,Wed Mar 13 17:27:06 2013 +0100,1363192026,Cluster: use 'else if' for mutually exclusive conditionals.,2.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2572.0,148.0,0.00400462962962963,5769.0,250.71098265895958,2116.0,None,False,,
66144337bfb924f1ad2e189cd562f2516b381f9a,ece95b2deae80409596bbb0e5502f1ed778cd1d8,antirez,antirez@gmail.com,Wed Mar 13 17:31:19 2013 +0100,1363192279,Cluster: sanity check FAILOVER_AUTH_REQUEST messages for proper length.,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2570.0,149.0,0.002928240740740741,5770.0,342.501976284585,2117.0,None,False,,
ece95b2deae80409596bbb0e5502f1ed778cd1d8,44f6fdab6024592b085904b1993cbaf3bafcb982,antirez,antirez@gmail.com,Wed Mar 13 18:38:08 2013 +0100,1363196288,Cluster: handle FAILOVER_AUTH_REQUEST in clusterProcessPacket().However currently the control is passed to a function doing nothing atnall.n,19.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2574.0,150.0,0.04640046296296296,5771.0,22.551509104514842,2118.0,None,False,,
44f6fdab6024592b085904b1993cbaf3bafcb982,f59ff6fe61dacf79be3200ec3fd1628711df2438,antirez,antirez@gmail.com,Wed Mar 13 19:08:03 2013 +0100,1363198083,Cluster: clusterSendFailoverAuthIfNeeded() work in progress.,31.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2593.0,151.0,0.02077546296296296,5772.0,49.13370473537604,2119.0,None,False,,
f59ff6fe61dacf79be3200ec3fd1628711df2438,79a13b46fbad91418a223ee1a2846dad8bd9117e,NanXiao,xn212516@163.com,Thu Mar 14 13:52:43 2013 +0800,1363240363,Update config.cFix bug in configGetCommand function: get correct masterauth value.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1046.0,84.0,7.758275462962962,1.0,1.128894624169234,1.0,Corrective,True,,
f59ff6fe61dacf79be3200ec3fd1628711df2438,7fa42b801de4607734ad9f76b799ce7948a610bb,antirez,antirez@gmail.com,Thu Mar 14 16:31:57 2013 +0100,1363275117,Cluster: clusterSendFailoverAuth() implementation.,14.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2620.0,152.0,0.8915972222222223,5773.0,2.121582677778643,2120.0,None,False,,
7fa42b801de4607734ad9f76b799ce7948a610bb,c2595500ac6f9075b8a4f872e3c83ae1b0aee9c3,antirez,antirez@gmail.com,Thu Mar 14 16:39:02 2013 +0100,1363275542,"Cluster: request failover authorization, log if we have quorum.However the failover is yet not really performed.n",4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2631.0,153.0,0.004918981481481482,5774.0,204.29411764705884,2121.0,None,False,,
c2595500ac6f9075b8a4f872e3c83ae1b0aee9c3,35f05c66b6ae9cd0e81672ce67942a25589d2c2e,antirez,antirez@gmail.com,Thu Mar 14 16:42:56 2013 +0100,1363275776,Cluster: handle FAILOVER_AUTH_ACK messages.That's trivial as we just need to increment the count of masters thatnreceived with an ACK.n,9.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,12.0,2012.0,460.0,0.4880208333333334,5775.5,186.12765782776455,2123.0,None,False,,
35f05c66b6ae9cd0e81672ce67942a25589d2c2e,aeacaa57e6727e20719aebf311192b77898049cc,antirez,antirez@gmail.com,Thu Mar 14 21:21:58 2013 +0100,1363292518,Cluster: code to process messages moved in the right if-else chain.,11.0,11.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2640.0,155.0,0.19377314814814814,5777.0,6.160673754629077,2124.0,None,False,,
aeacaa57e6727e20719aebf311192b77898049cc,90e99a208277d976a7682f4249fa873295c65de8,antirez,antirez@gmail.com,Thu Mar 14 21:27:12 2013 +0100,1363292832,Cluster: two lame bugs fixed in FAILOVER AUTH messages generation.,4.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2640.0,156.0,0.0036342592592592594,5778.0,276.15923566878985,2125.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
90e99a208277d976a7682f4249fa873295c65de8,76a3954f4ad4fe138bc77c36d3f1f78528551dbb,antirez,antirez@gmail.com,Fri Mar 15 13:20:23 2013 +0100,1363350023,Cluster: fix clusterHandleSlaveFailover() conditional: quorum is enough.,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2640.0,157.0,0.6619328703703704,5779.0,2.5107272123236166,2126.0,None,False,,
76a3954f4ad4fe138bc77c36d3f1f78528551dbb,892e98548a46bfa5a0c93f04b6d057cd96afe7fe,antirez,antirez@gmail.com,Fri Mar 15 15:36:36 2013 +0100,1363358196,Cluster: don't broadcast messages to HANDSHAKE nodes.Also don't check for NOADDR as we check that node->link is not NULLnthat's enough.n,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2640.0,158.0,0.0945949074074074,5780.0,11.571393613116358,2127.0,None,False,,
892e98548a46bfa5a0c93f04b6d057cd96afe7fe,bf821954672121c592ced7454b6de182ddb0d4b7,antirez,antirez@gmail.com,Fri Mar 15 15:43:53 2013 +0100,1363358633,Cluster: added function to broadcast pings.See the function top-comment for info why this is useful sometimes.n,21.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2642.0,159.0,0.0050578703703703706,5781.0,198.7116704805492,2128.0,None,False,,
bf821954672121c592ced7454b6de182ddb0d4b7,1d8f302e0d7f6b09ed365197cef7d9ec7d7000a1,antirez,antirez@gmail.com,Fri Mar 15 15:44:49 2013 +0100,1363358689,Cluster: election -> promotion in two comments.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2663.0,160.0,0.0006481481481481481,5782.0,1543.857142857143,2129.0,None,False,,
1d8f302e0d7f6b09ed365197cef7d9ec7d7000a1,44c92f5aeb909aade90769c0660831e043861b4f,antirez,antirez@gmail.com,Fri Mar 15 16:11:34 2013 +0100,1363360294,Cluster: slave failover implemented.,14.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2663.0,161.0,0.01857638888888889,5783.0,54.83177570093458,2130.0,None,False,,
44c92f5aeb909aade90769c0660831e043861b4f,004fbef8475b0af006e52ac65f0c8e3356c55445,antirez,antirez@gmail.com,Fri Mar 15 16:15:40 2013 +0100,1363360540,"Cluster: remove node from master slaves when it turns into a master.Also, a few nearby comments improved.n",7.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2675.0,162.0,0.002847222222222223,5784.0,352.21951219512187,2131.0,None,False,,
004fbef8475b0af006e52ac65f0c8e3356c55445,d512a09c201a9aa2e1c233b30a9732249e9e2cce,antirez,antirez@gmail.com,Fri Mar 15 16:35:16 2013 +0100,1363361716,Cluster: a bit more serious node role change handling.,31.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2679.0,163.0,0.013611111111111109,5785.0,74.46938775510205,2132.0,None,False,True,"[""9e7a8c0207bab8045dc2938a21657d711a9c4953""]"
d512a09c201a9aa2e1c233b30a9732249e9e2cce,1375b0611b7a2e030426f6bc23ab905a2e1c0da4,antirez,antirez@gmail.com,Fri Mar 15 16:39:49 2013 +0100,1363361989,"Cluster: slaves start failover with a small delay.Redis Cluster can cope with a minority of nodes not informed about thenfailure of a master in time for some reason (netsplit or node notnfunctioning properly, blocked, ...) however to wait a few seconds beforento start the failover will make most normal failovers simpler as thenFAIL message will propagate before the slave election happens.n",8.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,12.0,2050.5,471.0,0.5004976851851852,5786.5,159.74126105146155,2134.0,None,False,,
1375b0611b7a2e030426f6bc23ab905a2e1c0da4,dd091661d43316fe319d254a0e6d99fb8c5448bf,antirez,antirez@gmail.com,Fri Mar 15 16:44:08 2013 +0100,1363362248,Cluster: log when a slave asks for failover authorization.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2715.0,165.0,0.0029976851851851853,5788.0,334.59073359073363,2135.0,None,False,,
dd091661d43316fe319d254a0e6d99fb8c5448bf,b8127e337a96d87acb7d3fc7721ac78595037ce4,antirez,antirez@gmail.com,Fri Mar 15 16:45:45 2013 +0100,1363362345,Version incremented to 2.9.8 after major cluster progresses.,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,17.0,339.04944444444436,5789.0,1.0029494223228668,2136.0,None,False,,
b8127e337a96d87acb7d3fc7721ac78595037ce4,e28e61e839ba8cbc5db8a3661329ee5a613350b6,antirez,antirez@gmail.com,Fri Mar 15 16:53:41 2013 +0100,1363362821,Cluster: when failing over claim master slots.,16.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2716.0,166.0,0.006631944444444446,5790.0,151.78534031413608,2137.0,None,False,,
e28e61e839ba8cbc5db8a3661329ee5a613350b6,bea60bec750a458d69c6f42c080d9ffa1daeea2b,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sat Mar 16 18:33:42 2013 +1100,1363419222,"Slightly refactor CFLAGS/LDFLAGS/LIBSThis way, we can avoid -rdynamic and -pthread warnings on darwin.n",12.0,8.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,232.0,94.0,17.862152777777773,5.0,1.0559842932954921,0.0,None,False,,
bea60bec750a458d69c6f42c080d9ffa1daeea2b,ada7aa7ac930a50e0f860c3028554a0c6c775cd2,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sat Mar 16 18:35:20 2013 +1100,1363419320,Spaces to tabs,14.0,14.0,"deps/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,12.0,157.0,98.0,67.35428819444445,6.5,1.0074234635751549,1.0,None,False,,
ada7aa7ac930a50e0f860c3028554a0c6c775cd2,a66195629b297bf670d351a52304b1a10cf71c71,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sat Mar 16 18:38:37 2013 +1100,1363419517,Inherit CC for Lua,1.0,1.0,"deps/lua/src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,182.0,5.0,385.7037152777778,8.0,1.002592663644113,1.0,None,False,,
a66195629b297bf670d351a52304b1a10cf71c71,978c895b69f2aa330eb704d8b5b0bb792f0dd8ae,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sat Mar 16 18:40:22 2013 +1100,1363419622,make check is a common naming convention for tests,2.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,236.0,96.0,0.0034953703703703705,9.0,287.09271523178813,2.0,Preventative,False,,
978c895b69f2aa330eb704d8b5b0bb792f0dd8ae,33a4bc2c70a04c33b10779e163625b150d69eb6f,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sat Mar 16 18:44:38 2013 +1100,1363419878,Remove extra spaces,16.0,16.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,238.0,97.0,0.002962962962962963,10.0,338.5,3.0,None,False,,
33a4bc2c70a04c33b10779e163625b150d69eb6f,348be19b5f42da0f61044a0cbbe5eecaaa257c6d,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sun Mar 17 17:49:57 2013 +1100,1363502997,Only pass -rdynamic as linker option,0.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,238.0,98.0,0.962025462962963,11.0,2.0394735259086367,4.0,None,False,,
348be19b5f42da0f61044a0cbbe5eecaaa257c6d,dc4003be715e4ed024ec7c95594c08ba8ddd006c,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Sun Mar 17 18:03:14 2013 +1100,1363503794,Silence mkdir output,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,237.0,99.0,0.009224537037037036,12.0,109.40652446675031,5.0,None,False,,
e28e61e839ba8cbc5db8a3661329ee5a613350b6,7d3e32d526b72f41ed35fd129e137d8de51cacf4,antirez,antirez@gmail.com,Tue Mar 19 09:46:12 2013 +0100,1363682772,redis-trib: don't load cluster config from nodes in FAIL state.,3.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,643.0,45.0,18.856435185185184,5791.0,1.0530322932292984,2138.0,None,False,,
7d3e32d526b72f41ed35fd129e137d8de51cacf4,88221f88c05bd9b0ff6e7941006661e630507659,antirez,antirez@gmail.com,Tue Mar 19 09:58:05 2013 +0100,1363683485,"Cluster: new command CLUSTER FLUSHSLOTS.It's just a simpler way to CLUSTER DELSLOTS with all the slots asnarguments, in order to obtain a node without assigned slots fornreconfiguration.n",10.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2731.0,167.0,3.711388888888889,5792.0,1.2694409101115185,2139.0,None,False,,
88221f88c05bd9b0ff6e7941006661e630507659,4d626230154122bae919125aecedc699b4200a81,antirez,antirez@gmail.com,Tue Mar 19 16:01:30 2013 +0100,1363705290,Cluster: node replication role change handle improved.The code handling a master that turns into a slave or the contrary wasnimproved in order to avoid repeating the same operations. Alsonthe readability and conceptual simplicity was improved.n,14.0,15.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2741.0,168.0,0.2523726851851852,5793.0,4.962393946342582,2140.0,None,False,,
4d626230154122bae919125aecedc699b4200a81,d15b027d91f833eddbee47de26fadd9ff6c782ec,antirez,antirez@gmail.com,Wed Mar 20 00:30:47 2013 +0100,1363735847,"Cluster: turn old master into a replica of node that failed over.So when the failing master node is back in touch with the cluster,ninstead of remaining unused it is converted into a replica of thennew master, ready to perform the fail over if the new master nodenwill fail at some point.nnNote that as a side effect clients with stale configuration are nownnot an issue as well, as the node converted into a slave will notnaccept queries but will redirect clients accordingly.n",19.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2740.0,169.0,0.35366898148148146,5794.0,3.82750269987237,2141.0,None,False,,
d15b027d91f833eddbee47de26fadd9ff6c782ec,026b9483db2dd1f99deb1f4b398f93f7edc0404d,antirez,antirez@gmail.com,Wed Mar 20 10:32:00 2013 +0100,1363771920,"Cluster: add sender flags in cluster bus messages header.Sender flags were not propagated for the sender, but only for nodes innthe gossip section. This is odd and in the next commits we'll need tonget updated flags for the sender node, so this commit adds a new fieldnin the cluster messages header.nnThe message header is the same size as we reused some free space thatnwas marked as 'unused' because of alignment concerns.n",3.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,2075.0,478.0,2.5810416666666667,5795.5,2.2944317087870694,2143.0,None,False,,
026b9483db2dd1f99deb1f4b398f93f7edc0404d,506f9a42b07649d793b9c3245da14aa0fecd2d59,antirez,antirez@gmail.com,Wed Mar 20 10:48:42 2013 +0100,1363772922,"Cluster: new flag PROMOTED introduced.A slave node set this flag for itself when, after receiving authorizationnfrom the majority of nodes, it turns itself into a master.nnAt the same time now this flag is tested by nodes receiving a PINGnmessage before reconfiguring after a failover event. This makes thensystem more robust: even if currently there is no way to manually turnna slave into a master it is possible that we'll have such a feature innthe future, or that simply because of misconfiguration a node joins thencluster as master while others believe it's a slave. This alone is nownno longer enough to trigger reconfiguration as other nodes will checknfor the PROMOTED flag.nnThe PROMOTED flag is cleared every time the node is turned back into anreplica of some other node.n",13.0,3.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3372900666170139,12.0,2076.0,480.0,0.011597222222222222,5797.5,65.67065868263474,2145.0,None,False,,
506f9a42b07649d793b9c3245da14aa0fecd2d59,e006407fd08bb2b0a7f0aac703e367786ae85168,antirez,antirez@gmail.com,Wed Mar 20 11:32:35 2013 +0100,1363775555,"Cluster: master node must clear its hash slots when turning into a slave.When a master turns into a slave after a failover event, make sure tonclear the assigned slots before setting up the replication, as a slavenshould never claim slots in an explicit way, but just take over thenmaster slots when replacing its master.n",4.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2767.0,172.0,0.030474537037037036,5799.0,33.81428028864413,2146.0,None,False,,
e006407fd08bb2b0a7f0aac703e367786ae85168,8c1bc8e8659d29d98315e3d8d6cc482667afc001,antirez,antirez@gmail.com,Wed Mar 20 11:50:55 2013 +0100,1363776655,Cluster: clear the PROMOTED slave directly into clusterSetMaster().This way we make sure every time a master is turned into a replicanthe flag will be cleared.n,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2770.0,173.0,0.012731481481481479,5800.0,79.54545454545455,2147.0,None,False,,
dc4003be715e4ed024ec7c95594c08ba8ddd006c,8080e1cfbe13503bea8fc7b5933ebd461f787ba8,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Wed Mar 20 22:05:59 2013 +1100,1363777559,use `install`  as default installer (except on SunOS),5.0,4.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,237.0,100.0,3.168576388888889,13.0,1.3155991452523148,6.0,None,False,,
8c1bc8e8659d29d98315e3d8d6cc482667afc001,a8b09faf3de7105c11f005be7acd684215bec12c,antirez,antirez@gmail.com,Thu Mar 21 10:47:10 2013 +0100,1363859230,Cluster: comment no longer in sync with code removed.,1.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2772.0,174.0,0.9557291666666666,5801.0,2.046321525885559,2148.0,None,False,,
a8b09faf3de7105c11f005be7acd684215bec12c,1a6df1049d4b212908f8873424ad6fdfedb71d1a,antirez,antirez@gmail.com,Thu Mar 21 16:31:53 2013 +0100,1363879913,redis-trib: load info about importing/migrating slots from node.,9.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,645.0,46.0,2.281724537037037,5802.0,1.4382649981485334,2149.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456""]"
1a6df1049d4b212908f8873424ad6fdfedb71d1a,ed47f77977a62043266e8e12de6e1af97a2edb54,antirez,antirez@gmail.com,Thu Mar 21 17:11:54 2013 +0100,1363882314,redis-trib: initial support to fix open slots.Open slots are slots found in importing or migrating slot when ancluster check is performed.n,57.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,653.0,47.0,0.027789351851851853,5803.0,36.98500624739693,2150.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456"", ""d5aa7e2abe0d832fcad348caff99d006f2ab7740""]"
ed47f77977a62043266e8e12de6e1af97a2edb54,a89d435d8ea2369617a951a975f13a4a639a0eba,antirez,antirez@gmail.com,Thu Mar 21 17:13:08 2013 +0100,1363882388,"Cluster: move slotToKeyFlush() to emptyDb().This way we are sure to destroy the slot->key map every time we destroynthe DB, for instance when reloading a DB due to replication.n",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,809.0,94.0,24.191180555555555,5804.0,1.04133737903793,2151.0,None,False,,
a89d435d8ea2369617a951a975f13a4a639a0eba,47da76576e1e509466fc55aec9bdcbf01c154aa5,antirez,antirez@gmail.com,Thu Mar 21 17:22:14 2013 +0100,1363882934,redis-trib: fix conditional otherwise always true.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,708.0,48.0,0.007175925925925927,5805.0,140.3548387096774,2152.0,None,False,,
47da76576e1e509466fc55aec9bdcbf01c154aa5,4dded0c187e89b65e67f87ef6f94866ceaebf4e0,antirez,antirez@gmail.com,Thu Mar 21 18:17:06 2013 +0100,1363886226,redis-trib: ignore slaves when resharding.,6.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,708.0,49.0,0.03810185185185185,5806.0,27.245443499392465,2153.0,None,False,,
4dded0c187e89b65e67f87ef6f94866ceaebf4e0,77bba91b4827f81088092dee22b360fc4b822be3,antirez,antirez@gmail.com,Fri Mar 22 12:28:06 2013 +0100,1363951686,redis-trib: fixed type has_flags? -> has_flag.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,710.0,50.0,0.7576388888888889,5807.0,2.3198900091659027,2154.0,None,False,,
77bba91b4827f81088092dee22b360fc4b822be3,1baa15302853d3f1a9fc74c040def8c2ee393c59,antirez,antirez@gmail.com,Fri Mar 22 12:47:49 2013 +0100,1363952869,redis-trib: added some more output for check.,3.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,710.0,51.0,0.01369212962962963,5808.0,74.03465765004226,2155.0,None,False,,
1baa15302853d3f1a9fc74c040def8c2ee393c59,d7eae8d8d7c4fd2c5cf4f8a6c31a9a2d2c876877,antirez,antirez@gmail.com,Fri Mar 22 12:53:37 2013 +0100,1363953217,redis-trib: fixed ClusterNode migrating/importing slots detection.,2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,712.0,52.0,0.004027777777777778,5809.0,249.27586206896552,2156.0,None,False,,
d7eae8d8d7c4fd2c5cf4f8a6c31a9a2d2c876877,813d7cbdd13ef4d332843eefef1b5ef78bf78c7c,antirez,antirez@gmail.com,Fri Mar 22 12:59:18 2013 +0100,1363953558,redis-trib: added cluster_error method to add errors.,11.0,5.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,712.0,53.0,0.003946759259259259,5810.0,254.37243401759534,2157.0,None,False,,
813d7cbdd13ef4d332843eefef1b5ef78bf78c7c,be7bdd376e62e9a2788cf2b2f7cf43eda02eeeca,antirez,antirez@gmail.com,Fri Mar 22 13:03:33 2013 +0100,1363953813,redis-trib: fix open slot correction.Slot zero was hardcoded (!)n,1.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,718.0,54.0,0.0029513888888888892,5811.0,339.8235294117647,2158.0,None,False,True,"[""56161ca0a444ff6653f884561ab95bd09ecbc1af""]"
be7bdd376e62e9a2788cf2b2f7cf43eda02eeeca,c195289e5ec49d52ea93e258facfb2f9bc070e05,antirez,antirez@gmail.com,Fri Mar 22 17:39:43 2013 +0100,1363970383,"redis-trib: All output wrapped by a specific function.This is needed in order to colorize it as next step.nWe use conventions in output messages such asnn>>> This is an actionn*** This is a warningn[ERR] This is an errorn[OK] That's finennAnd so forth, so that a color will be associated checking the firstnthree chars.n",45.0,46.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,717.0,55.0,0.1917824074074074,5812.0,6.214242607121304,2159.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
c195289e5ec49d52ea93e258facfb2f9bc070e05,09aa55a3343d72a35fe77279eb35c3be5bc92342,antirez,antirez@gmail.com,Fri Mar 22 17:54:32 2013 +0100,1363971272,"redis-cli --stat, stolen from redis-tools.Redis-tools is a connection of tools no longer mantained that wasnintented as a way to economically make sense of Redis in the pre-vmwarensponsorship era. However there was a nice redis-stat utility, thisncommit imports one of the functionalities of this tool here in redis-clinas it seems to be pretty useful.nnUsage: redis-cli --statnnThe output is similar to vmstat in the format, but with Redis specificnstuff of course.nnFrom the point of view of the monitored instance, only INFO is used innorder to grab data.n",180.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1364.0,83.0,10.33105324074074,5813.0,1.0967955518858887,2160.0,None,False,True,"[""96628cc40df778716b70f4b661ceb1bd329591dd""]"
09aa55a3343d72a35fe77279eb35c3be5bc92342,797d98e906f4ca8e994356279afa94bf87241137,antirez,antirez@gmail.com,Mon Mar 25 11:56:08 2013 +0100,1364208968,Test: obuf-limits test false positive removed.Fixes #621.n,1.0,1.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,73.0,5.0,397.02127314814817,5814.0,1.002518756720693,341.0,Preventative,False,True,"[""4f4676a1420a446e4233c04a80f2009aa819b21f""]"
797d98e906f4ca8e994356279afa94bf87241137,4286d8b979f77d63346d4f4bbc43318eed29488f,antirez,antirez@gmail.com,Mon Mar 25 12:50:38 2013 +0100,1364212238,redis-trib: initial output colorization,17.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,716.0,56.0,2.7992476851851853,5815.0,1.3572388414545906,2161.0,None,False,,
4286d8b979f77d63346d4f4bbc43318eed29488f,cda0cdfb700f8bb22475f2f4a93c94e1902af5bc,antirez,antirez@gmail.com,Mon Mar 25 12:51:53 2013 +0100,1364212313,redis-trib: Don't use colorization if TERM != xterm.,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,732.0,57.0,0.0008680555555555555,5816.0,1153.0,2162.0,None,False,,
cda0cdfb700f8bb22475f2f4a93c94e1902af5bc,34c1871e9f80d9f23fb7add614dfb49ee1bd056a,antirez,antirez@gmail.com,Mon Mar 25 13:03:01 2013 +0100,1364212981,Cluster: set node role on successful handshake.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2769.0,175.0,4.0943402777777775,5817.0,1.2442395922555696,2163.0,None,False,,
34c1871e9f80d9f23fb7add614dfb49ee1bd056a,70091a2f633f9ed1231d4f013ffc17253c9a68f7,antirez,antirez@gmail.com,Mon Mar 25 13:14:17 2013 +0100,1364213657,redis-trib: wait cluster join after cluster creation.,23.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,733.0,58.0,0.015555555555555557,5818.0,65.28571428571429,2164.0,None,False,,
70091a2f633f9ed1231d4f013ffc17253c9a68f7,c39e34d007491dbb5be8f6c1fe48934c6aaebf49,antirez,antirez@gmail.com,Mon Mar 25 15:01:25 2013 +0100,1364220085,"Cluster: when slave changes master, remove it from the old master.",2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2770.0,176.0,0.08222222222222222,5819.0,13.162162162162161,2165.0,None,False,,
c39e34d007491dbb5be8f6c1fe48934c6aaebf49 79a13b46fbad91418a223ee1a2846dad8bd9117e,afce0106391213721775d6c0888dba26db7793fa,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 25 11:30:59 2013 -0700,1364236259,Merge pull request #1003 from NanXiao/patch-3Update config.c,,,,,,,,,,,,,,,Merge,False,,
afce0106391213721775d6c0888dba26db7793fa,2f49734029bb94c74466e13f517a480cdcf548df,antirez,antirez@gmail.com,Tue Mar 26 10:27:45 2013 +0100,1364290065,"Transactions: use the propagate() API to propagate MULTI.The behavior is the same, but the code is now cleaner and uses thenproper interface instead of dealing directly with AOF/replicationnfunctions.n",5.0,6.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,325.0,16.0,54.662835648148146,5820.0,1.0182939649607048,2166.0,None,False,,
2f49734029bb94c74466e13f517a480cdcf548df,02c269e27e846b904db80636d321686fa11695d4,antirez,antirez@gmail.com,Tue Mar 26 10:48:15 2013 +0100,1364291295,Transactions: use discardTransaction() in EXEC implementation.,2.0,7.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,324.0,17.0,0.014236111111111109,5821.0,71.24390243902441,2167.0,None,False,,
02c269e27e846b904db80636d321686fa11695d4,71f3e7431700f55b88582301d5b36b52b37a0740,antirez,antirez@gmail.com,Tue Mar 26 10:58:10 2013 +0100,1364291890,"Transactions: propagate MULTI/EXEC only when needed.MULTI/EXEC is now propagated to the AOF / Slaves only once we encounternthe first command that is not a read-only one inside the transaction.nnThe old behavior was to always propagate an empty MULTI/EXEC block whennthe transaction was composed just of read only commands, or evenncompletely empty. This created two problems:nn1) It's a bandwidth waste in the replication link and a space wasten   inside the AOF file.nn2) We used to always increment server.dirty to force the propagation ofn   the EXEC command, resulting into triggering RDB saves more oftenn   than needed.nnNote: even read-only commands may also trigger writes that will benpropagated, when we access a key that is found expired and Redis willnsynthesize a DEL operation. However there is no need for this to stayninside the transaction itself, but only to be ordered.nnSo for instance something like:nnMULTInGET foonSET key zapnEXECnnMay be propagated into:nnDEL foonMULTInSET key zapnEXECnnWhile the DEL is outside the transaction, the commands are delivered innthe right order and it is not possible for other commands to be insertednbetween DEL and MULTI.n",14.0,10.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,319.0,18.0,0.0068865740740740745,5822.0,146.21008403361344,2168.0,None,False,True,"[""e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947""]"
71f3e7431700f55b88582301d5b36b52b37a0740,8bb5eb7357e089564838dbb75ca709f33697b618,antirez,antirez@gmail.com,Tue Mar 26 11:09:22 2013 +0100,1364292562,Flag PUBLISH as read-only in the command table.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2869.0,356.0,12.929305555555556,5823.0,1.077343674469068,2169.0,None,False,,
8bb5eb7357e089564838dbb75ca709f33697b618,873f328fd84aea9b3b7ac0ae9621383ec84e0eb3,antirez,antirez@gmail.com,Tue Mar 26 11:42:14 2013 +0100,1364294534,"TTL / PTTL commands: two bugs fixed.This commit fixes two corner cases for the TTL command.nn1) When the key was already logically expired (expire time oldernthan current time) the command returned -1 instead of -2.nn2) When the key was existing and the expire was found to be exactly 0n(the key was just about to expire), the command reported -1 (that is, nonexpire) instead of a TTL of zero (that is, about to expire).n",3.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,809.0,95.0,4.770208333333334,5824.0,1.209634449927938,2170.0,None,False,True,"[""41d804d9dc48292f61fc1e1efd2241404dc9a6e8""]"
873f328fd84aea9b3b7ac0ae9621383ec84e0eb3,df69155e8a75b433217487d2806bd854cde2f6f7,antirez,antirez@gmail.com,Tue Mar 26 13:51:17 2013 +0100,1364302277,Allow SELECT while loading the DB.Fixes issue #1024.n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2869.0,357.0,0.11244212962962964,5825.0,9.893463715903245,2171.0,Corrective,True,,
df69155e8a75b433217487d2806bd854cde2f6f7,4fa30b781ea31a9f0d3d509438190ed5cea8b981,antirez,antirez@gmail.com,Tue Mar 26 18:16:03 2013 +0100,1364318163,redis-trib: ClusterNode #info_string output modified.The hope is that the new one is more readable.n,4.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,752.0,59.0,1.2095601851851852,5826.0,1.82674678965801,2172.0,None,False,,
4fa30b781ea31a9f0d3d509438190ed5cea8b981,7572dc47da38f5527472935f1f7289fab9c0703f,antirez,antirez@gmail.com,Wed Mar 27 11:29:47 2013 +0100,1364380187,Test: new functions to capture and analyze the replication stream.,53.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,446.0,78.0,62.49478009259259,5827.0,1.0160013364079108,342.0,Preventative,False,,
7572dc47da38f5527472935f1f7289fab9c0703f,40b692e82275ae5a17b23c2ddd74b9b2edd69c25,antirez,antirez@gmail.com,Wed Mar 27 11:30:23 2013 +0100,1364380223,Test: Restore DB back to 9 after testing MULTI/EXEC with DB 5.,4.0,1.0,"tests/unit/multi.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,252.0,4.0,117.80427083333332,5828.0,1.0084886565905131,343.0,Preventative,False,,
40b692e82275ae5a17b23c2ddd74b9b2edd69c25,252cf3052dedbfd7a74d076898762e8ad0f265a0,antirez,antirez@gmail.com,Wed Mar 27 11:31:27 2013 +0100,1364380287,Test: test replication of MULTI/EXEC.,54.0,0.0,"tests/unit/multi.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,255.0,5.0,0.0007407407407407407,5829.0,1351.0,344.0,Preventative,False,,
252cf3052dedbfd7a74d076898762e8ad0f265a0,32a83c8206a501f300e971f46cb6cd469731e74f,antirez,antirez@gmail.com,Wed Mar 27 17:55:02 2013 +0100,1364403302,DEBUG set-active-expire added.We need the ability to disable the activeExpireCycle() (activenexpired key collection) call for testing purposes.n,11.0,3.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.198117421130403,12.0,1727.0,731.0,12.230987654320984,5831.0,1.0322322208504928,2175.0,Corrective,True,True,"[""3816e7bda90422283884a1e738701e526ca7fdd3""]"
32a83c8206a501f300e971f46cb6cd469731e74f,1b13adf38875fe4a25be4e51ea59fd82a437509d,antirez,antirez@gmail.com,Thu Mar 28 11:36:49 2013 +0100,1364467009,Test: verify that lazy-expire works.,18.0,0.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,173.0,13.0,135.52237268518522,5833.0,1.0073788554626546,345.0,Preventative,False,,
1b13adf38875fe4a25be4e51ea59fd82a437509d,3816e7bda90422283884a1e738701e526ca7fdd3,antirez,antirez@gmail.com,Thu Mar 28 11:39:02 2013 +0100,1364467142,Better DEBUG error message when num of arguments is wrong.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,922.0,64.0,0.7388888888888889,5834.0,2.3533834586466167,2176.0,Corrective,True,,
3816e7bda90422283884a1e738701e526ca7fdd3,601cea665d63bb7b5e335ce922dc4c01905e04e7,antirez,antirez@gmail.com,Thu Mar 28 11:46:14 2013 +0100,1364467574,Test: regression test for issue #1026.,10.0,0.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,191.0,14.0,0.0065393518518518535,5835.0,153.92035398230092,346.0,Preventative,False,,
601cea665d63bb7b5e335ce922dc4c01905e04e7,140260409eef36dd4d155e488eb9531cf119728e,antirez,antirez@gmail.com,Thu Mar 28 12:45:07 2013 +0100,1364471107,EXPIRE should not resurrect keys. Issue #1026.,3.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,809.0,96.0,2.0436689814814817,5836.0,1.4893160335951705,2177.0,None,False,,
140260409eef36dd4d155e488eb9531cf119728e,30d5d416e6022b7ffdf72926a631d216a448e579,antirez,antirez@gmail.com,Thu Mar 28 15:40:19 2013 +0100,1364481619,Extended SET command implemented (issue #931).,59.0,9.0,"src/redis.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",2.0,1.0,1.0,0.19143325481419346,12.0,1638.0,403.0,31.502245370370368,5837.5,1.5595403193327355,2179.0,None,False,,
30d5d416e6022b7ffdf72926a631d216a448e579,dfc31a1ee8d89c962616e30c0f51fe90a81a7407,antirez,antirez@gmail.com,Thu Mar 28 16:25:17 2013 +0100,1364484317,Test: Extended SET tests.,42.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,715.0,24.0,141.8331365740741,5839.0,1.007050538570567,347.0,Preventative,False,,
dfc31a1ee8d89c962616e30c0f51fe90a81a7407,86d87e355483314fdaa620e35c2804fe888f4094,charsyam,charsyam@gmail.com,Thu Mar 28 14:41:46 2013 -0700,1364506906,Support for case unsensitive SET options.,8.0,4.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,455.0,45.0,0.2926736111111111,13.0,4.416775418199076,13.0,None,False,,
86d87e355483314fdaa620e35c2804fe888f4094 8080e1cfbe13503bea8fc7b5933ebd461f787ba8,63457d1a5d366b89405e057960d4d8d985cbdbba,Salvatore Sanfilippo,antirez@gmail.com,Tue Apr 2 02:24:52 2013 -0700,1364894692,Merge pull request #1017 from jbergstroem/build-improvementsBuild improvements,,,,,,,,,,,,,,,Merge,False,,
63457d1a5d366b89405e057960d4d8d985cbdbba,b14fda7deb8a1f66f1f388fdf12b904cd6315822,antirez,antirez@gmail.com,Tue Apr 2 11:55:23 2013 +0200,1364896523,Version bumped to 2.9.9.,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,18.0,17.756689814814816,5840.0,1.056316802874243,2180.0,None,False,,
b14fda7deb8a1f66f1f388fdf12b904cd6315822,b237de33d1462e81ac30277033fe2bdffe994784,antirez,antirez@gmail.com,Tue Apr 2 14:05:50 2013 +0200,1364904350,"Throttle BGSAVE attempt on saving error.When a BGSAVE fails, Redis used to flood itself trying to BGSAVE atnevery next cron call, that is either 10 or 100 times per secondndepending on configuration and server version.nnThis commit does not allow a new automatic BGSAVE attempt to benperformed before a few seconds delay (currently 5).nnThis avoids both the auto-flood problem and filling the disk withnlogs at a serious rate.nnThe five seconds limit, considering a log entry of 200 bytes, will usenless than 4 MB of disk space per day that is reasonable, the sysadminnshould notice before of catastrofic events especially since by defaultnRedis will stop serving write queries after the first failed BGSAVE.nnThis fixes issue #849n",14.0,2.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8683927290103626,12.0,1820.333333333333,760.0,10.471203703703702,5842.0,1.0397107794804483,2183.0,Corrective,True,,
b237de33d1462e81ac30277033fe2bdffe994784,8419397665432f7933dfe244938147e6dc4174eb,antirez,antirez@gmail.com,Wed Apr 3 12:41:14 2013 +0200,1364985674,Make rio.c comment 80-columns friendly.,5.0,4.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,100.0,7.0,145.71934027777775,5844.0,1.0068625070501538,2184.0,None,False,,
8419397665432f7933dfe244938147e6dc4174eb,00bab23c4188bea8bfed9b232fc2c771d9734276,antirez,antirez@gmail.com,Thu Apr 4 12:02:48 2013 +0200,1365069768,Cluster: turn hardcoded node timeout multiplicators into defines.Most Redis Cluster time limits are expressed in terms of the configurednnode timeout. Turn them into defines.n,25.0,6.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.869137580612638,12.0,2085.0,489.0,5.874427083333334,5845.5,1.0933998322547789,2186.0,None,False,,
00bab23c4188bea8bfed9b232fc2c771d9734276,05fa4f403460d8121de05dfc0d377dbcbd3ab264,antirez,antirez@gmail.com,Thu Apr 4 12:29:10 2013 +0200,1365071350,Cluster: node timeout is now configurable.,14.0,1.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,1.965596230357602,12.0,1758.6,1042.0,10.396446759259259,5849.0,1.0255682864573246,2190.0,None,False,,
05fa4f403460d8121de05dfc0d377dbcbd3ab264,3cc6e7d01da2d95c45cead068a85df079a269948,antirez,antirez@gmail.com,Thu Apr 4 14:21:01 2013 +0200,1365078061,Cluster: CONFIG GET cluster-node-timeout.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1051.0,86.0,0.07767361111111111,5852.0,13.874385337505588,2191.0,None,False,,
3cc6e7d01da2d95c45cead068a85df079a269948,d5b383477ef805281de8888b0ad0ddb648df1afc,antirez,antirez@gmail.com,Thu Apr 4 14:23:34 2013 +0200,1365078214,Cluster: move REDIS_CLUSTER_FAILOVER_DELAY near other timing defines.,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1408.0,314.0,0.07944444444444444,5853.0,13.587412587412588,2192.0,None,False,,
d5b383477ef805281de8888b0ad0ddb648df1afc,ace86cfaefa5f182535b748803cc8d8a3eb96794,antirez,antirez@gmail.com,Thu Apr 4 14:30:05 2013 +0200,1365078605,Test: remove useless statements and comments from test default config.,1.0,324.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,347.0,12.0,58.06075231481481,5854.0,1.0172233386604748,348.0,Preventative,False,,
ace86cfaefa5f182535b748803cc8d8a3eb96794,f09b2508f42fcaa14b0fb36a013747611ee2159d,antirez,antirez@gmail.com,Mon Apr 8 19:40:20 2013 +0200,1365442820,Cluster: properly send ping to nodes not pinged foro too much time.In commit d728ec6 it was introduced the concept of sending a ping tonevery node not receiving a ping since node_timeout/2 seconds.nHowever the code was located in a place that was not executed because ofna previous conditional causing the loop to re-iterate.nnThis caused false positives in nodes availability detection.nnThe current code is still not perfect as a node may be detected to be innPFAIL state even if it does not reply for just node_timeout/2 secondsnthat is not correct. There is a plan to improve this code ASAP.n,5.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2782.0,179.0,4.2994212962962965,5855.0,1.2325894419468597,2193.0,None,False,,
f09b2508f42fcaa14b0fb36a013747611ee2159d,ef4f25ff6ec9749549b009b515a272ebd0710707,antirez,antirez@gmail.com,Tue Apr 9 11:07:25 2013 +0200,1365498445,Cluster: configdigest field no longer used. Removed.,2.0,7.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2095.0,495.0,2.7537962962962963,5856.5,1.867412980000748,2195.0,None,False,,
ef4f25ff6ec9749549b009b515a272ebd0710707,68cf249f81045371c6fd5a04e1e860eab9d2c935,antirez,antirez@gmail.com,Tue Apr 9 11:24:18 2013 +0200,1365499458,"Cluster: use server.cluster_node_timeout directly.We used to copy this value into the server.cluster structure, however thisnwas not necessary.nnThe reason why we don't directly use server.cluster->node_timeout isnthat things that can be configured via redis.conf need to be directlynavailable in the server structure as server.cluster is allocated laternonly if needed in order to reduce the memory footprint of non-clusterninstances.n",6.0,8.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,12.0,2092.5,497.0,0.011724537037037037,5858.5,64.96841066140178,2197.0,None,False,,
68cf249f81045371c6fd5a04e1e860eab9d2c935,d1aee359c08b6fcac31a76a2e4a9b9bef81d2947,antirez,antirez@gmail.com,Tue Apr 9 11:29:51 2013 +0200,1365499791,Cluster: CONFIG SET cluster-node-timeout.,4.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1052.0,87.0,4.88113425925926,5860.0,1.2048704147203186,2198.0,None,False,,
d1aee359c08b6fcac31a76a2e4a9b9bef81d2947,b84570dece33e43a08be87d1e05c79095aa56d8a,antirez,antirez@gmail.com,Tue Apr 9 12:13:26 2013 +0200,1365502406,Cluster: reconfigure additonal slaves on failover.,12.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2778.0,182.0,0.03412037037037037,5861.0,30.30800542740841,2199.0,None,False,,
b84570dece33e43a08be87d1e05c79095aa56d8a,0280c2f25250536192d5a71f49c170cd5708ab7e,antirez,antirez@gmail.com,Thu Apr 11 13:11:41 2013 +0200,1365678701,redis-cli: --latency-history mode implemented.,41.0,21.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1544.0,84.0,19.761909722222214,5862.0,1.0506023969371494,2200.0,None,False,,
0280c2f25250536192d5a71f49c170cd5708ab7e,f8ae70cf7c514c14ca3d2b4d82d959b717d257af,antirez,antirez@gmail.com,Thu Apr 11 13:15:20 2013 +0200,1365678920,"redis-cli: raise error on bad command line switch.Previously redis-cli never tried to raise an error when an unrecognizednswitch was encountered, as everything after the initial options is to bentransmitted to the server.nnHowever this is too liberal, as there are no commands starting with -.nSo the new behavior is to produce an error if there is an unrecognizednswitch starting with -. This should not break past redis-cli usagesnbut should prevent broken options to be silently discarded.nnAs far the first token not starting with - is encountered, all thenrest is considered to be part of the command, so you cna still usenstrings starting with - as values, like in:nnredis-cli --port 6380 set foo --my-valuen",9.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1564.0,85.0,0.002534722222222222,5863.0,395.5205479452055,2201.0,None,False,,
f8ae70cf7c514c14ca3d2b4d82d959b717d257af,d04afd62d69306361fd4dfe9fee8ac99c16dee72,antirez,antirez@gmail.com,Thu Apr 18 16:21:32 2013 +0200,1366294892,Redis/Jemalloc Gitignore were too aggressive.Redis gitignore was too aggressive since simply broken.nnJemalloc gitignore was too agressive because it is conceived to justnkeep the files that allow to generate all the rest in developmentnenvironments (so for instance the configure file is excluded).n,7.0,7.0,".gitignore,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER",2.0,2.0,2.0,0.9402859586706308,10.0,23.5,29.0,177.04776041666668,5864.5,1.003756900564143,519.0,None,False,,
d04afd62d69306361fd4dfe9fee8ac99c16dee72,ecdbaf4695e55a59e5f9425e7c603507b2017f49,xiaost7,xiaost7@gmail.com,Fri Apr 19 12:42:22 2013 +0800,1366346542,"Cluster: fix clusterNode.name print format on debug message.It was %40s instead of %.40s, and since the string is not nullnterminated it caused random garbage to be displayed, and possibly ancrash.n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2790.0,183.0,9.770092592592592,0.0,0.0,0.0,None,False,,
ecdbaf4695e55a59e5f9425e7c603507b2017f49,9d823fc2221a289ba20a599ea50e318084fb2dd5,antirez,antirez@gmail.com,Fri Apr 19 15:11:34 2013 +0200,1366377094,More explicit panic message on out of memory.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2881.0,362.0,15.112777777777774,5866.0,1.066169172517737,2202.0,None,False,,
9d823fc2221a289ba20a599ea50e318084fb2dd5,8e222c888fd115eb1cdfbb98d5bb2b625be23afb,antirez,antirez@gmail.com,Fri Apr 19 16:34:07 2013 +0200,1366382047,Sentinel: turn old master into a slave when it comes back.,40.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3065.0,29.0,77.9269212962963,5867.0,1.012832535706085,2203.0,None,False,,
8e222c888fd115eb1cdfbb98d5bb2b625be23afb,4ed2581a9284de0c77ccf31857cdbe27733428c4,antirez,antirez@gmail.com,Mon Apr 22 11:25:44 2013 +0200,1366622744,Test: split conceptually unrelated comments in RDB test.,3.0,1.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,83.0,5.0,39.96734953703704,5868.0,1.0250204232100335,349.0,Preventative,False,,
4ed2581a9284de0c77ccf31857cdbe27733428c4,c4656119b6d64f0777c9a3113b1908ac581fecf5,antirez,antirez@gmail.com,Tue Apr 23 14:08:42 2013 +0200,1366718922,"Test: fix RDB test checking file permissions.When the test is executed using the root account, setting the permissionnto 222 does not work as expected, as root can read files with 222npermission.nnNow we skip the test if root is detected.nnThis fixes issue #1034 and the duplicated #1040 issue.nnThanks to Jan-Erik Rediger (@badboy on Github) for finding a way to reproduce the issue.n",24.0,11.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,85.0,6.0,1.1131712962962963,5869.0,1.8983343384141904,350.0,Preventative,False,True,"[""2ac7b5a8b41bb71fce52c86f9ba420769663609e"", ""95883313b5a405916fabed34c3af290d6072c817""]"
c4656119b6d64f0777c9a3113b1908ac581fecf5,91f4213ddf489be1ecba99ed7c40716a8f9852a7,antirez,antirez@gmail.com,Wed Apr 3 15:31:40 2013 +0200,1364995900,rio.c: added ability to fdatasync() from time to time while writing.,33.0,1.0,"src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",2.0,1.0,1.0,0.4305518670104394,11.0,135.0,17.0,62.56318287037037,5870.5,1.0079957041001777,2205.0,None,False,,
91f4213ddf489be1ecba99ed7c40716a8f9852a7,336d722fbaa6beb3ef65a7a7df8bbda73dcc9fe9,antirez,antirez@gmail.com,Wed Apr 3 18:55:38 2013 +0200,1365008138,"AOF: sync data on disk every 32MB when rewriting.This prevents the kernel from putting too much stuff in the outputnbuffers, doing too heavy I/O all at once. So the goal of this commit isnto split the disk pressure due to the AOF rewrite process into smallernspikes.nnPlease see issue #1019 for more information.n",2.0,0.0,"src/aof.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1289.0,410.0,14.770734953703707,5872.5,1.0311185972012142,2207.0,None,False,,
336d722fbaa6beb3ef65a7a7df8bbda73dcc9fe9,d264122f6af7082755efa624e36ad199851d1c7f,antirez,antirez@gmail.com,Wed Apr 24 10:57:07 2013 +0200,1366793827,Config option to turn AOF rewrite incremental fsync on/off.,23.0,1.0,"redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,1.736196715624298,12.0,1440.2,969.0,16.214407407407407,5876.0,1.0243340263458254,2211.0,None,False,,
d264122f6af7082755efa624e36ad199851d1c7f,1965e22aa1daf2321579dc0e2d14ac7e0cf31dbe,antirez,antirez@gmail.com,Wed Apr 24 11:30:17 2013 +0200,1366795817,"Sentinel: always redirect on master->slave transition.Sentinel redirected to the master if the instance changed runid or itnwas the first time we got INFO, and a role change was detected fromnmaster to slave.nnWhile this is a good idea in case of slave->master, since otherwise wencould detect a failover without good reasons just after a reboot with anslave with a wrong configuration, in the case of master->slaventransition is much better to always perform the redirection for thenfollowing reasons:nn1) A Sentinel may go down for some time. When it is back online there isnno other way to understand there was a failover.n2) Pointing clients to a slave seems to be always the wrong thing to do.n3) There is no good rationale about handling things differently once anninstance is rebooted (runid change) in that case.n",9.0,13.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3103.0,30.0,4.78900462962963,5879.0,1.2088116586509414,2212.0,None,False,,
1965e22aa1daf2321579dc0e2d14ac7e0cf31dbe,48ede0d84d43cc40addaa7de5e88daafe717abba,antirez,antirez@gmail.com,Fri Apr 26 11:11:21 2013 +0200,1366967481,"Sentinel: only demote old master into slave under certain conditions.We used to always turn a master into a slave if the DEMOTE flag was set,nas this was a resurrecting master instance.nnHowever the following race condition is possible for a Sentinel thatngot partitioned or internal issues (tilt mode), and was not able tonrefresh the state in the meantime:nn1) Sentinel X is running, master is instance A.n3) A fails, sentinels will promote slave B as master.n2) Sentinel X goes down because of a network partition.n4) A returns available, Sentinels will demote it as a slave.n5) B fails, other Sentinels will promote slave A as master.n6) At this point Sentinel X comes back.nnWhen X comes back he thinks that:nnB is the master.nA is the slave to demote.nnWe want to avoid that Sentinel X will demote A into a slave.nWe also want that Sentinel X will detect that the conditions changednand will reconfigure itself to monitor the right master.nnThere are two main ways for the Sentinel to reconfigure itself afternthis event:nn1) If B is reachable and already configured as a slave by othernsentinels, X will perform a redirection to A.n2) If there are not the conditions to demote A, the fact that Anreports to be a master will trigger a failover detection in X, thatnwill end into a reconfiguraiton to monitor A.nnHowever if the Sentinel was not reachable, its state may not be updated,nso in case it titled, or was partiitoned from the master instance of thenslave to demote, the new implementation waits some time (enough tonguarantee we can detect the new INFO, and new DOWN conditions).nnIf after some time still there are not the right condiitons to demotenthe instance, the DEMOTE flag is cleared.n",46.0,11.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3099.0,31.0,1.9868518518518519,5880.0,1.503308789262746,2213.0,None,False,,
48ede0d84d43cc40addaa7de5e88daafe717abba,214adc50512b6410e2aab1c93e8401ac67afaf90,antirez,antirez@gmail.com,Mon Apr 29 12:00:54 2013 +0200,1367229654,Lua updated to version 5.1.5.,194.0,136.0,"deps/lua/COPYRIGHT,CAS_DELIMITER,deps/lua/Makefile,CAS_DELIMITER,deps/lua/doc/amazon.gif,CAS_DELIMITER,deps/lua/doc/contents.html,CAS_DELIMITER,deps/lua/doc/lua.css,CAS_DELIMITER,deps/lua/doc/manual.css,CAS_DELIMITER,deps/lua/doc/manual.html,CAS_DELIMITER,deps/lua/doc/readme.html,CAS_DELIMITER,deps/lua/etc/lua.pc,CAS_DELIMITER,deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/lbaselib.c,CAS_DELIMITER,deps/lua/src/lcode.c,CAS_DELIMITER,deps/lua/src/ldblib.c,CAS_DELIMITER,deps/lua/src/ldo.c,CAS_DELIMITER,deps/lua/src/lgc.c,CAS_DELIMITER,deps/lua/src/liolib.c,CAS_DELIMITER,deps/lua/src/llex.c,CAS_DELIMITER,deps/lua/src/loadlib.c,CAS_DELIMITER,deps/lua/src/lparser.c,CAS_DELIMITER,deps/lua/src/lstrlib.c,CAS_DELIMITER,deps/lua/src/lua.h,CAS_DELIMITER,deps/lua/src/lvm.c,CAS_DELIMITER",22.0,1.0,4.0,2.8150339788181316,9.0,814.8181818181819,28.0,689.9157296927609,5891.5,1.0002446820216544,541.0,None,False,,
214adc50512b6410e2aab1c93e8401ac67afaf90,ef05a78e7ee8dd179022157d09072d92ae966c55,antirez,antirez@gmail.com,Tue Apr 30 15:08:22 2013 +0200,1367327302,Sentinel: more sensible delay in master demote after tilt.,11.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3134.0,32.0,4.164594907407406,5903.0,1.2401193926980358,2214.0,None,False,,
ef05a78e7ee8dd179022157d09072d92ae966c55,e5ef85c4441b8cdfdbd39dc2626376311f36e4ec,antirez,antirez@gmail.com,Tue Apr 30 12:24:46 2013 +0200,1367317486,"Sentinel: changes to tilt mode.Tilt mode was too aggressive (not processing INFO output), thisnresulted in a few problems:nn1) Redirections were not followed when in tilt mode. This opened an   window to misinform clients about the current master when a Sentineln   was in tilt mode and a fail over happened during the time it was notn   able to update the state.nn2) It was possible for a Sentinel exiting tilt mode to detect a falsen   fail over start, if a slave rebooted with a wrong configurationn   about at the same time. This used to happen since in tilt mode wen   lose the information that the runid changed (reboot).nn   Now instead the Sentinel in tilt mode will still remove the instancen   from the list of slaves if it changes state AND runid at the samen   time.nnBoth are edge conditions but the changes should overall improve thenreliability of Sentinel.n",26.0,15.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3136.0,33.0,-0.11361111111111112,5904.0,-7.8019559902200495,2215.0,None,False,,
e5ef85c4441b8cdfdbd39dc2626376311f36e4ec,9cd06e4406377254c4d788299d11e4a040c200d6,charsyam,charsyam@gmail.com,Tue Apr 30 12:07:58 2013 +0900,1367291278,"Fix AOF bug: expire could be removed from key on AOF rewrite.There was a race condition in the AOF rewrite code that, with bad enoughntiming, could cause a volatile key just about to expire to be turnedninto a non-volatile key. The bug was never reported to cause actualynissues, but was found analytically by an user in the Redis mailing list:nnhttps://groups.google.com/forum/?fromgroups=#!topic/redis-db/Kvh2FAGK4UknnThis commit fixes issue #1079.n",3.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1175.0,95.0,5.757534722222222,14.0,1.1736854484160248,14.0,Corrective,True,,
9cd06e4406377254c4d788299d11e4a040c200d6,649b304e0f01d59e9ee3eb6fb522e1cc9c8e1940,Michel Martens,michel@soveran.com,Thu Apr 25 11:06:10 2013 -0300,1366898770,Reset masterauth if an empty string is configured.,5.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1069.0,89.0,1.2146180555555557,4.0,1.8233040793573647,0.0,None,False,,
649b304e0f01d59e9ee3eb6fb522e1cc9c8e1940,0d9c1f536bd26244f94add211138568135ed623a,antirez,antirez@gmail.com,Thu May 2 17:20:49 2013 +0200,1367508049,CONFIG SET server.masterauth aesthetic change.This is just to make the code exactly like the above instance used fornrequirepass. No actual change nor the original code violated the Redisncoding style.n,1.0,5.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1073.0,90.0,7.051840277777778,5905.0,1.1418069554342098,2216.0,None,False,,
0d9c1f536bd26244f94add211138568135ed623a,8a51c067adf56996644a4fadab10d9ce4f05b370,antirez,antirez@gmail.com,Thu Apr 11 17:02:39 2013 +0200,1365692559,Cluster: createClusterLink() comment fixed for grammar.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2790.0,184.0,-7.569247685185185,5906.0,0.8678864741132415,2217.0,None,False,,
8a51c067adf56996644a4fadab10d9ce4f05b370,a120560f700a1cd59bcd52568e113c03e2da31a3,antirez,antirez@gmail.com,Thu Apr 11 18:19:48 2013 +0200,1365697188,Cluster: process config from PING packets as we do for PONG.Also clusterBroadcastPing() was renamed into clusterBroadcastPong()nthat's what the function is actually doing.n,15.0,10.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2790.0,185.0,0.05357638888888889,5907.0,19.664938431626695,2218.0,None,False,,
a120560f700a1cd59bcd52568e113c03e2da31a3,ae71731019317e171781300f67b81e9857551dc2,antirez,antirez@gmail.com,Thu Apr 11 18:55:58 2013 +0200,1365699358,Cluster: PING/PONG handling redesigned.,61.0,40.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2795.0,186.0,0.02511574074074074,5908.0,40.815668202764975,2219.0,None,False,,
ae71731019317e171781300f67b81e9857551dc2,1315b9f2463b59b8dae440e62657be91363e29c7,antirez,antirez@gmail.com,Thu Apr 11 19:12:29 2013 +0200,1365700349,Cluster: restore PING sent time on reconnections.,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2816.0,187.0,0.011469907407407408,5909.0,88.18466195761856,2220.0,None,False,,
1315b9f2463b59b8dae440e62657be91363e29c7,5c9f6d4f55c321aa22a4a51f9046f762fbb1655d,antirez,antirez@gmail.com,Fri May 3 12:37:45 2013 +0200,1367577465,"Cluster: link reconnection on delayed PONG reply.When the PONG delay is half the cluster node timeout, the link getsndisconnected (and later automatically reconnected) in order to ensurenthat it's not just a dead connection issue.nnHowever this operation is only performed if the link is old enough, innorder to avoid to disconnect the same link again and again (and amongnthe other problems, never receive the PONG because of that).nnNote: when the link is reconnected, the 'ping_sent' field is not updatedneven if a new ping is sent using the new connection, so we can stillnreliably detect a node ping timeout.n",4.0,3.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,2115.5,507.0,15.397881944444444,5910.5,1.039250027171758,2222.0,None,False,,
5c9f6d4f55c321aa22a4a51f9046f762fbb1655d,e3ed78d43ba1329b9f736d3141b1e90ef071d5fa,Jiahao Huang,july2993@gmail.com,Tue May 7 19:55:57 2013 +0800,1367927757,"in 32bit machine, popcount don't work with a input string length up to 512 MB, bitcount commant may return negtive integer with string length more than 256 MB",3.0,3.0,"src/bitops.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,910.0,331.0,53.01910300925926,0.5,0.5047152815836273,1.0,None,False,,
e3ed78d43ba1329b9f736d3141b1e90ef071d5fa,2c75f2cf1aa0d9cc8256517bd6f3d8a82088ee1a,Jiahao Huang,july2993@gmail.com,Tue May 7 23:37:22 2013 +0800,1367941042,use long long instead of size_t make it more safe,3.0,3.0,"src/bitops.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,910.0,333.0,0.15376157407407404,2.5,5.87768159578472,3.0,None,False,,
5c9f6d4f55c321aa22a4a51f9046f762fbb1655d,5885a34b671ed873f529dd9798d2b0904e3f5428,antirez,antirez@gmail.com,Wed May 8 09:48:38 2013 +0200,1367999318,Added more info about 32 bit builds into README.,14.0,3.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,143.0,14.0,180.5870138888889,5912.0,1.0055374967361457,1315.0,Feature Addition,False,,
5885a34b671ed873f529dd9798d2b0904e3f5428 2c75f2cf1aa0d9cc8256517bd6f3d8a82088ee1a,c1ae7d2377d716bec7d064fff71ea37a66293f48,Salvatore Sanfilippo,antirez@gmail.com,Wed May 8 00:49:33 2013 -0700,1367999373,"Merge pull request #1093 from july2993/unstablein 32bit machine, popcount don't work with a input string length up to 5...",,,,,,,,,,,,,,,Merge,False,,
c1ae7d2377d716bec7d064fff71ea37a66293f48,0ae1b5b0a197154167a895f1188f1822a78732e4,antirez,antirez@gmail.com,Wed May 8 09:59:51 2013 +0200,1367999991,"Revert use long long instead of size_t make it more safeThis reverts commit 2c75f2cf1aa0d9cc8256517bd6f3d8a82088ee1a.nnAfter further analysis, it is very unlikely that we'll raise thenstring size limit to > 512MB, and at the same time such big stringsnwill be used in 32 bit systems.nnBetter to revert to size_t so that 32 bit processors will not benforced to use a 64 bit counter in normal operations, that is currentlyncompletely useless.n",3.0,3.0,"src/bitops.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,910.0,335.0,0.6822800925925926,5913.5,2.099255288469694,2224.0,Perfective,False,,
0ae1b5b0a197154167a895f1188f1822a78732e4,c87dd0fe494fc258f941c43c6843c4ed11b95c00,antirez,antirez@gmail.com,Wed May 8 11:58:26 2013 +0200,1368007106,"Test: various issues with the replication-4.tcl test fixed.The test actually worked, but vars for master and slave were invertednand sometimes used incorrectly.n",8.0,7.0,"tests/integration/replication-4.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,55.0,2.0,104.47300925925926,5915.0,1.009571850251948,351.0,Preventative,False,,
c87dd0fe494fc258f941c43c6843c4ed11b95c00,16f2c3ea144384e7713e9e10b48da129f9b67d1e,antirez,antirez@gmail.com,Wed May 8 13:01:42 2013 +0200,1368010902,Test: check that replication partial sync works if we break the link.The test checks both successful syncs and unsuccessful ones by changingnthe backlog size.n,80.0,0.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.09694460606247317,11.0,249.5,79.0,21.011082175925925,5916.5,0.5118984828057284,353.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
16f2c3ea144384e7713e9e10b48da129f9b67d1e,a7486a659291d946de652d22c8730d8046198ebe,antirez,antirez@gmail.com,Wed May 8 15:24:40 2013 +0200,1368019480,Version bumped to 2.9.10,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,19.0,36.14533564814815,5918.0,1.0276660869810248,2225.0,None,False,,
a7486a659291d946de652d22c8730d8046198ebe,e938575220c1b925dcdc608f46dc24e42aa6b2ed,antirez,antirez@gmail.com,Thu May 9 12:52:04 2013 +0200,1368096724,Test: more PSYNC tests (backlog TTL).,37.0,11.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,79.0,1.0,0.9933101851851852,5919.0,2.006734869846892,354.0,Preventative,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
e938575220c1b925dcdc608f46dc24e42aa6b2ed,5947f170f91f1985eb316a9fd59c9ca8f2ea73f9,antirez,antirez@gmail.com,Thu May 9 16:57:59 2013 +0200,1368111479,"Obtain absoute path of configuration file, expose it in INFO.",59.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.12068101401352382,12.0,2145.0,687.0,8.270486111111111,5920.5,1.063013560607978,2227.0,None,False,True,"[""ede33fb91259000950db667b1e92dd6e398a01f7""]"
5947f170f91f1985eb316a9fd59c9ca8f2ea73f9,7e049fafd38a602b9689f4311183c3968a3fa182,antirez,antirez@gmail.com,Fri May 10 00:15:18 2013 +0200,1368137718,CONFIG REWRITE: Initial support code and design.,428.0,4.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.16522541332960486,12.0,1805.333333333333,780.0,2.6317399691358023,5923.0,1.1318665522934308,2230.0,None,False,True,"[""cd4ff9992b4ab734cc49e5658ab53fc487c977fa"", ""5e8b7e4f356c2908bb3389e2df09473e290acae8"", ""48d591a010bbe4cf0c09a4d84a55ee3f31e5664f"", ""d50ae36e178db2dfb48d1ef551b9bac2731eb994""]"
7e049fafd38a602b9689f4311183c3968a3fa182,2bc31e55eedf24b7ecac0172c47006e79231dcde,antirez,antirez@gmail.com,Mon May 13 11:11:35 2013 +0200,1368436295,CONFIG REWRITE: support for save and syslog-facility.,40.0,15.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1490.0,92.0,3.4557523148148146,5925.0,1.2893725906550069,2231.0,None,False,,
2bc31e55eedf24b7ecac0172c47006e79231dcde,d95592b11689130382d7bf71aedf8963cc7f7431,antirez,antirez@gmail.com,Mon May 13 11:26:43 2013 +0200,1368437203,CONFIG REWRITE: support for dir and slaveof.,12.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1515.0,93.0,0.01050925925925926,5926.0,96.15418502202644,2232.0,None,False,,
d95592b11689130382d7bf71aedf8963cc7f7431,c184f36d21cae47a4b9b4484b657d2e58fdc4f58,antirez,antirez@gmail.com,Mon May 13 18:34:18 2013 +0200,1368462858,CONFIG REWRITE: support for client-output-buffer-limit.,50.0,11.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9440231356865456,12.0,1959.0,785.0,2.6077739197530865,5928.0,2.247295068366804,2235.0,None,False,,
c184f36d21cae47a4b9b4484b657d2e58fdc4f58,ee721f1e5c703dd5a674239e17384be66a9fd544,antirez,antirez@gmail.com,Tue May 14 10:22:55 2013 +0200,1368519775,CONFIG REWRITE: strip multiple empty lines.,10.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1569.0,95.0,0.6587615740740741,5930.0,2.5179998945833404,2236.0,None,False,,
ee721f1e5c703dd5a674239e17384be66a9fd544,78f94d90eb5b750c3aa38a17ee390bfa4238e91c,antirez,antirez@gmail.com,Tue May 14 11:17:18 2013 +0200,1368523038,CONFIG REWRITE: remove orphaned lines.,43.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1578.0,96.0,0.037766203703703705,5931.0,27.478700582286237,2237.0,None,False,True,"[""c3d252d9955ee4d9b4be296cb2cf8560c9caf00c""]"
e938575220c1b925dcdc608f46dc24e42aa6b2ed,25e049cc6859d154ece478246f7e6703b4e57cdb,antirez,antirez@gmail.com,Tue May 14 11:22:50 2013 +0200,1368523370,redis-cli: help.h updated.,13.0,3.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,779.0,8.0,195.64270833333333,5932.0,1.0051113583967373,2238.0,None,False,,
78f94d90eb5b750c3aa38a17ee390bfa4238e91c,e252045454bfa90cd5c9d937e249821969c7425f,antirez,antirez@gmail.com,Tue May 14 12:32:25 2013 +0200,1368527545,"CONFIG REWRITE: actually rewrite the config file, atomically.",63.0,3.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1620.0,97.0,0.05216435185185185,5933.0,20.170179720434877,2239.0,None,False,,
e252045454bfa90cd5c9d937e249821969c7425f,9e74d216e1385dd7d45880b14c12100599e38cfb,antirez,antirez@gmail.com,Tue May 14 12:45:04 2013 +0200,1368528304,CONFIG REWRITE: Use sane perms when creating redis.conf from scratch.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1680.0,98.0,0.008784722222222222,5934.0,114.83399209486169,2240.0,None,False,,
9e74d216e1385dd7d45880b14c12100599e38cfb,310dbba01cf694a13d077a5156be756bba5eac8b,antirez,antirez@gmail.com,Wed May 15 10:12:29 2013 +0200,1368605549,"Added a define for most configuration defaults.Also the logfile option was modified to always have an explicit valuenand to log to stdout when an empty string is used as log file.nnPreviously there was special handling of the string stdout that setnthe logfile to NULL, this always required some special handling.n",73.0,55.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.6227710187986797,12.0,1679.25,899.0,6.291519097222222,5936.5,1.0439228986894236,2243.0,Feature Addition,False,,
310dbba01cf694a13d077a5156be756bba5eac8b,86a6aad98424434a4d0ed80f3a8db059608a8b14,antirez,antirez@gmail.com,Wed May 15 10:14:36 2013 +0200,1368605676,Test default config modified to set logfile to empty string.Required because of recent changes in the way logfile is set to standardnoutput.n,1.0,1.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,24.0,13.0,40.82258101851853,5939.0,1.0244962463188294,355.0,Preventative,False,,
86a6aad98424434a4d0ed80f3a8db059608a8b14,72e980231c9595bde6b14a810b2380fdba805681,antirez,antirez@gmail.com,Wed May 15 11:04:53 2013 +0200,1368608693,CONFIG REWRITE: repl-disable-tcp-nodelay is a boolean option.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1678.0,100.0,0.03638888888888889,5940.0,28.480916030534353,2244.0,None,False,,
72e980231c9595bde6b14a810b2380fdba805681,402a0f1ca0c317cf1ba374c633984c7fefb07be1,antirez,antirez@gmail.com,Wed May 15 11:06:56 2013 +0200,1368608816,CONFIG REWRITE: fixed typo in AOF fsync policy.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1678.0,101.0,0.0014236111111111116,5941.0,703.4390243902437,2245.0,None,False,,
402a0f1ca0c317cf1ba374c633984c7fefb07be1,328843849f070c5cbdf154b7a96da6dcd317bdd6,antirez,antirez@gmail.com,Wed May 15 11:09:19 2013 +0200,1368608959,CONFIG REWRITE: active-rehashing -> activerehashing.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1678.0,102.0,0.0016550925925925926,5942.0,605.1958041958042,2246.0,None,False,,
328843849f070c5cbdf154b7a96da6dcd317bdd6,c590e18d15bed4dc576c86bc4b10eed2b0997e15,antirez,antirez@gmail.com,Wed May 15 11:15:18 2013 +0200,1368609318,CONFIG REWRITE: correctly escape the notify-keyspace-events option.,3.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1678.0,103.0,0.004155092592592592,5943.0,241.66852367688026,2247.0,None,False,,
c590e18d15bed4dc576c86bc4b10eed2b0997e15,8a44e6c4905b4cf59ffca92d80ff4b9560850e49,antirez,antirez@gmail.com,Wed May 15 11:33:02 2013 +0200,1368610382,"CONFIG REWRITE: when rewriting amount of bytes use GB, MB, KB if possible.",31.0,7.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1680.0,104.0,0.012314814814814815,5944.0,82.203007518797,2248.0,None,False,,
8a44e6c4905b4cf59ffca92d80ff4b9560850e49,cd48e4fc4022b8110111e621654781fee08b88c3,antirez,antirez@gmail.com,Wed May 15 11:38:43 2013 +0200,1368610723,CONFIG REWRITE: bindaddr -> bind.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1704.0,105.0,0.003946759259259259,5945.0,254.37243401759534,2249.0,None,False,,
cd48e4fc4022b8110111e621654781fee08b88c3,25f2be6267f0a0a91154f44099653a2d561d8df7,antirez,antirez@gmail.com,Wed May 15 11:39:29 2013 +0200,1368610769,CONFIG REWRITE: backlog size is a bytes option.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1704.0,106.0,0.0005324074074074074,5946.0,1879.2608695652173,2250.0,None,False,,
25f2be6267f0a0a91154f44099653a2d561d8df7,78167807beab6f34967a7310a93211a1efbbcff9,antirez,antirez@gmail.com,Wed May 15 11:55:14 2013 +0200,1368611714,Use memtoll() when parsing the backlog-size option.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1704.0,107.0,0.0109375,5947.0,92.42857142857143,2251.0,None,False,,
25e049cc6859d154ece478246f7e6703b4e57cdb 78167807beab6f34967a7310a93211a1efbbcff9,92f18d04a04918651825e34caa7372c6790aff7e,antirez,antirez@gmail.com,Wed May 15 11:58:21 2013 +0200,1368611901,Merge branch 'config-rewrite' into unstable,,,,,,,,,,,,,,,Merge,False,,
92f18d04a04918651825e34caa7372c6790aff7e,0a20ad40de3395eb5e71b163e1bd4119ab099709,YAMAMOTO Takashi,yamt@mwd.biglobe.ne.jp,Thu Jul 19 21:25:30 2012 +0900,1342700730,"don't define _XOPEN_SOURCE for NetBSDon NetBSD, defining _XOPEN_SOURCE hides extensionsnlike inet_aton, strcasecmp, etc.n",6.0,2.0,"src/fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,48.0,5.0,-146.14145833333333,1.0,0.9931573147592444,0.0,None,False,,
0a20ad40de3395eb5e71b163e1bd4119ab099709,b2dd0849ce7f229ea5eb9fb88a112b7ad2c31642,YAMAMOTO Takashi,yamt@mwd.biglobe.ne.jp,Thu Jul 19 21:28:11 2012 +0900,1342700891,rename popcount to popcount_binary to avoid a conflict with NetBSD libcNetBSD-current's libc has a function named popcount.nhiding these extensions using feature macros is not possible becausenredis uses other extensions covered by the same feature macro.neg. inet_atonn,3.0,3.0,"src/bitops.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,923.0,341.0,-296.31804398148154,2.5,0.9974487413003444,2.0,None,False,,
b2dd0849ce7f229ea5eb9fb88a112b7ad2c31642,ae828676649f05feb113078fa166c78dd0ad0266,YAMAMOTO Takashi,yamt@mwd.biglobe.ne.jp,Thu Jul 19 21:37:34 2012 +0900,1342701454,"use nanosleep instead of usleepSUSv3 says that:ntThe useconds argument shall be less than one million. If the value ofntuseconds is 0, then the call has no effect.nand actually NetBSD's implementation rejects such a value with EINVAL.nuse nanosleep which has no such a limitation instead.n",4.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,922.0,65.0,-251.9176851851852,4.0,0.9960304493935592,3.0,None,False,,
ae828676649f05feb113078fa166c78dd0ad0266,9fcead7a5967f31cc391fbed25c256406247b638,YAMAMOTO Takashi,yamt@mwd.biglobe.ne.jp,Sun Oct 28 13:33:04 2012 +0900,1351398784,don't assume time_t == longtime_t is always 64bit on recent versions of NetBSD.n,24.0,24.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,12.0,2318.5,476.0,-199.18804976851848,5.5,0.9962351634014956,5.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
92f18d04a04918651825e34caa7372c6790aff7e,5d0f408d429d4ef0eedcff66bba1464ff0e5a01a,antirez,antirez@gmail.com,Sat May 18 16:21:52 2013 +0200,1368886912,Don't stop reading redis.conf if line has no args.Should be continue and was return.nnThis fixes issue #1110n,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1704.0,109.0,202.4088888888889,5948.0,1.004940494488604,2252.0,Corrective,True,,
5d0f408d429d4ef0eedcff66bba1464ff0e5a01a,c3229c33b1cd6cf21180c9a44ddd67a5ecd39503,ioddly,ioddly@ioddly.com,Wed May 22 18:17:58 2013 -0500,1369264678,Try to report source of bad Lua API calls,14.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1022.0,66.0,126.26224537037035,0.0,0.0,0.0,None,False,True,"[""41d3147344da4656b6a21c73373c34d25fe8f24d""]"
5d0f408d429d4ef0eedcff66bba1464ff0e5a01a,c853239a5e803f413163ee4080a6a7667c0eb446,antirez,antirez@gmail.com,Fri May 24 18:41:43 2013 +0200,1369413703,Top comment for prepareClientToWrite() clarified.We don't write the output buffer to the client socket for slaves only ifnthe slave is not online.n,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1449.0,132.0,79.0508912037037,5949.0,1.0126500787628456,2253.0,None,False,,
c853239a5e803f413163ee4080a6a7667c0eb446,dd937030f02f4c3100b05fa0a9d40257b52f1eb0,antirez,antirez@gmail.com,Fri May 24 18:58:57 2013 +0200,1369414737,"Replication: don't even queue replies to master commands.When master send commands, there is no need for the slave to reply.nRedis used to queue the reply in the output buffer and discard the replynlater, this is a waste of work and it is not clear why it was this wayn(I sincerely don't remember).nnThis commit changes it in order to don't queue the reply at all.nnAll tests passing.n",7.0,17.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1449.0,133.0,0.011967592592592592,5950.0,84.55899419729207,2254.0,None,False,True,"[""a950f48906a7699314d2f1c3e2dee522a29e97fb""]"
dd937030f02f4c3100b05fa0a9d40257b52f1eb0,a950f48906a7699314d2f1c3e2dee522a29e97fb,antirez,antirez@gmail.com,Sat May 25 01:00:07 2013 +0200,1369436407,Fixed a bug in no queueing replies to master.,2.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1439.0,134.0,0.2508101851851852,5951.0,4.987078910936778,2255.0,Corrective,True,,
a950f48906a7699314d2f1c3e2dee522a29e97fb,6b4635f4f5fe296f07325a2b61a0706b8fc91f8c,antirez,antirez@gmail.com,Sat May 25 00:37:56 2013 +0200,1369435076,"REPLCONF ACK command.This special command is used by the slave to inform the master thenamount of replication stream it currently consumed.nnit does not return anything so that we not need to consume additionalnbandwidth needed by the master to reply something.nnThe master can do a number of things knowing the amount of streamnprocessed, such as understanding the lag in bytes of the slave, verifynif a given command was already processed by the slave, and so forth.n",17.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.022420703848328,12.0,1444.666666666667,536.0,129.95516589506173,5953.0,-20.635933944191944,2258.0,Feature Addition,False,,
6b4635f4f5fe296f07325a2b61a0706b8fc91f8c,0292c5f7aeae7f43e1116a8e668bd00f3357c53b,antirez,antirez@gmail.com,Sat May 25 00:54:00 2013 +0200,1369436040,Replication: send REPLCONF ACK to master.,15.0,3.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9444885341662052,12.0,1937.0,834.0,69.59561728395062,5956.0,30.87871180660768,2261.0,None,False,,
0292c5f7aeae7f43e1116a8e668bd00f3357c53b,dd0adbb777f37b38bc647c15837ba53ed9edc9d4,antirez,antirez@gmail.com,Sat May 25 01:22:27 2013 +0200,1369437747,Make sure that REPLCONF ACK really has no return value.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1473.0,74.0,0.03091435185185185,5958.0,33.34743541744665,2262.0,None,False,,
dd0adbb777f37b38bc647c15837ba53ed9edc9d4,efd87031d06aadada48a6f04fbb031d2155bb2c4,antirez,antirez@gmail.com,Mon May 27 10:41:53 2013 +0200,1369644113,Don't ACK the master after every command.Sending an ACK is now moved into the replicationSendAck() function.n,17.0,9.0,"src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9305861291319928,12.0,2208.5,445.0,2.3983738425925925,5959.5,1.3118567355238762,2264.0,None,False,True,"[""3a82b8ac641120c231f4f7e8a2edc0bd1c40a399""]"
efd87031d06aadada48a6f04fbb031d2155bb2c4,e06a560466e53b3a8a8e2b2fa232635ef962b1db,antirez,antirez@gmail.com,Mon May 27 10:45:37 2013 +0200,1369644337,Send ACK to master once every second.ACKs can be also used as a base for synchronous replication. However innthat case they'll be explicitly requested by the master when the clientnsends a request that needs to be replicated synchronously.n,4.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1491.0,76.0,0.0025925925925925925,5961.0,386.71428571428567,2265.0,None,False,True,"[""90a81b4ebb155c8c07a30f0a0562e7a05fea4294""]"
e06a560466e53b3a8a8e2b2fa232635ef962b1db,3c82c85fcfb7e80b6177a080f5d4be64c1506245,antirez,antirez@gmail.com,Mon May 27 11:17:17 2013 +0200,1369646237,"Close connection with timedout slaves.Now masters, using the time at which the last REPLCONF ACK was received,nare able to explicitly disconnect slaves that are no longer responding.nnPreviously the only chance was to see a very long output buffer, thatnwas highly suboptimal.n",27.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1495.0,77.0,0.02199074074074074,5962.0,46.47368421052632,2266.0,None,False,True,"[""90038906f44be7adef9ac656f24f2f32889e1975""]"
3c82c85fcfb7e80b6177a080f5d4be64c1506245,c9b55a29d644d6703c00daa0da31c0eec8143dfc,antirez,antirez@gmail.com,Mon May 27 11:24:05 2013 +0200,1369646645,redis.conf updated: repl-timeout now uesd by masters as well.,5.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,690.0,108.0,12.049722222222226,5963.0,1.0829894649484777,1317.0,None,False,,
c9b55a29d644d6703c00daa0da31c0eec8143dfc,1909b8753d246e55aee7c76dd974d2c49321998e,antirez,antirez@gmail.com,Mon May 27 11:44:04 2013 +0200,1369647844,Version bumped to 2.9.11,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,20.0,18.846805555555555,5964.0,1.0530593896696316,2267.0,None,False,,
1909b8753d246e55aee7c76dd974d2c49321998e,a864cae2a55e708e094a879c604841a9d396a07c,antirez,antirez@gmail.com,Mon May 27 19:33:03 2013 +0200,1369675983,A comment about BLPOP timeout did not reflected actual behavior.,3.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1437.0,330.0,2.7771180555555555,5965.0,1.360085520311074,2268.0,None,False,,
a864cae2a55e708e094a879c604841a9d396a07c,091ed386f7557cd8feeead6cfa8ac851dba1306b,antirez,antirez@gmail.com,Tue May 28 15:23:42 2013 +0200,1369747422,Accept REPLCONF in any state.,3.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2934.0,371.0,1.1957060185185184,5966.0,1.836325973535704,2269.0,None,False,,
091ed386f7557cd8feeead6cfa8ac851dba1306b,37c29e037b08159e901227f0184973442bb86c2d,antirez,antirez@gmail.com,Wed May 29 19:52:54 2013 +0200,1369849974,"Slaves list in INFO output: lag added, format changed.There is a new 'lag' information in the list of slaves, in thenreplication section of the INFO output.nnAlso the format was changed in a backward incompatible way in order tonmake it more easy to parse if new fields are added in the future, as thennew format is comma separated but has named fields (no longer positionalnfields).n",8.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2935.0,372.0,1.1869444444444444,5967.0,1.842499414930962,2270.0,None,False,,
37c29e037b08159e901227f0184973442bb86c2d,888400ebd57c85682edc147bb0f666af29c76d5b,antirez,antirez@gmail.com,Wed May 29 19:56:33 2013 +0200,1369850193,repl_offset field in INFO replication is now just offset.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2941.0,373.0,0.002534722222222222,5968.0,395.5205479452055,2271.0,None,False,,
888400ebd57c85682edc147bb0f666af29c76d5b,cbdb2153c5f6d5b7543ae4ebd22a9b3ce5379ef2,antirez,antirez@gmail.com,Tue May 28 16:48:21 2013 +0200,1369752501,min-slaves-to-write: initial description of the feature in redis.conf,16.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,693.0,109.0,1.2251851851851852,5969.0,1.8162031438935915,1318.0,None,False,,
cbdb2153c5f6d5b7543ae4ebd22a9b3ce5379ef2,ed599d3aca723d46984871131610f623f09cf0cd,antirez,antirez@gmail.com,Wed May 29 11:36:44 2013 +0200,1369820204,min-slaves-to-write: don't accept writes with less than N replicas.This feature allows the user to specify the minimum number ofnconnected replicas having a lag less or equal than the specifiednamount of seconds for writes to be accepted.n,77.0,2.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",6.0,2.0,2.0,2.2351239964012968,12.0,1626.333333333333,1140.0,3.227928240740741,5972.5,1.2663106046275252,2276.0,None,False,,
ed599d3aca723d46984871131610f623f09cf0cd,2ec7875cbf649a52c2e82e10810fac3fe1ba7fb2,antirez,antirez@gmail.com,Wed May 29 11:45:40 2013 +0200,1369820740,min-replicas-to-write: only deny write commands.I guess I needed another coffee...n,3.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2956.0,375.0,0.006203703703703704,5976.0,162.19402985074626,2277.0,None,False,True,"[""14fb0ac649062d250659a153aa576870e151cb4b""]"
2ec7875cbf649a52c2e82e10810fac3fe1ba7fb2,d64d2e21c93df54a7b39bcb7a46e34824edff75d,antirez,antirez@gmail.com,Thu May 30 11:43:43 2013 +0200,1369907023,Make tests compatible with new INFO replication output.,1.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,164.0,20.0,126.46278935185184,5977.0,1.0079074643626411,356.0,Feature Addition,False,,
d64d2e21c93df54a7b39bcb7a46e34824edff75d,1a54d5963e8c50ed90dbcc72b55e01d91589ea2f,antirez,antirez@gmail.com,Thu May 30 12:13:25 2013 +0200,1369908805,Refresh good slaves count when setting slave state as online.,2.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1549.0,79.0,1.025474537037037,5978.0,1.975158293924448,2278.0,None,False,,
1a54d5963e8c50ed90dbcc72b55e01d91589ea2f,88441bf18f554b965eaf83cfce5eeaeff35c3ed4,antirez,antirez@gmail.com,Thu May 30 12:18:31 2013 +0200,1369909111,"New INFO field min_slaves_good_slaves.When min-slaves-to-write feature is active, this field reports thennumber of slaves considered good (online state, lag within the specifiednrange).n",11.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2958.0,376.0,1.0228125,5979.0,1.977696303085854,2279.0,Feature Addition,False,,
88441bf18f554b965eaf83cfce5eeaeff35c3ed4,915c06a96ca7d96818321da5e0a8201c11bbac22,antirez,antirez@gmail.com,Thu May 30 12:23:28 2013 +0200,1369909408,Refresh good slaves count after CONFIG SET min-slaves-...This way just after the CONFIG SET enabling the min-slaves feature it isnpossible to write to the database without delays.n,2.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1724.0,111.0,1.0324537037037036,5980.0,1.9685664319985647,2280.0,None,False,,
915c06a96ca7d96818321da5e0a8201c11bbac22,434a86dbd879e7feeea6c939899565717bf9d913,antirez,antirez@gmail.com,Thu May 30 18:54:28 2013 +0200,1369932868,Tests added for min-slaves feature.,46.0,0.0,"tests/integration/replication-4.tcl,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.4262286569981449,11.0,151.5,11.0,220.5409837962963,5981.5,1.0235662547498785,358.0,Feature Addition,False,,
434a86dbd879e7feeea6c939899565717bf9d913,ca35de1d1f876c167af311e5d275f287c2c5b45e,antirez,antirez@gmail.com,Fri May 31 11:43:23 2013 +0200,1369993403,Test: avoid a false positive in min-slaves test.,2.0,2.0,"tests/integration/replication-4.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,98.0,4.0,0.7006365740740741,5983.0,2.4272734781531344,359.0,Preventative,False,,
ca35de1d1f876c167af311e5d275f287c2c5b45e,b6a2878aa536c476264bf8903a6ac9daef9cfd1a,antirez,antirez@gmail.com,Fri May 31 19:31:36 2013 +0200,1370021496,"CONFIG SET: accept slave-priority zero, it is valid.",1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1726.0,112.0,1.2973148148148148,5984.0,1.7708229248447647,2281.0,None,False,,
b6a2878aa536c476264bf8903a6ac9daef9cfd1a,cf71b82111e8e099b2667fc0126fe9624a1f69f7,antirez,antirez@gmail.com,Tue Jun 4 15:53:53 2013 +0200,1370354033,Binary safe dump of object content in redisLogObjectDebugInfo().,5.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,925.0,66.0,320.0529976851852,5985.0,1.0031244825301828,2282.0,Corrective,True,,
cf71b82111e8e099b2667fc0126fe9624a1f69f7,d427373f0186aa23596ac9b9e9ad92c3dad32f8b,antirez,antirez@gmail.com,Tue Jun 11 21:33:00 2013 +0200,1370979180,clusterProcessPacket() comments improved for correctness.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2824.0,189.0,39.37170138888889,5986.0,1.0253989531750896,2283.0,None,False,,
d427373f0186aa23596ac9b9e9ad92c3dad32f8b,dfc98dccf45c639cff45e84bb78a5a2d41a214bb,antirez,antirez@gmail.com,Wed Jun 12 10:50:07 2013 -0700,1371059407,Cluster: detect nodes address change.,51.0,8.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2899860470332091,12.0,2134.5,522.0,7.635590277777778,5987.5,1.5712134965213829,2285.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0"", ""72b8574cca7480f8d4a318727c6dacad891733d6""]"
dfc98dccf45c639cff45e84bb78a5a2d41a214bb,edd7eb9b7d4d8c8a7dbdf7b847c3e0025796e2d7,Marc-Antoine Perennou,Marc-Antoine@Perennou.com,Mon Dec 10 18:21:10 2012 +0100,1355160070,test-server: only listen to 127.0.0.1Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>n,2.0,1.0,"tests/assets/default.conf,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,12.0,262.0,94.0,-152.1784606481481,0.5,0.4983571919512445,1.0,Preventative,False,,
dfc98dccf45c639cff45e84bb78a5a2d41a214bb edd7eb9b7d4d8c8a7dbdf7b847c3e0025796e2d7,82d782d3b56b19f4969b045b3195ea6853290d1e,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 17 03:08:14 2013 -0700,1371463694,Merge pull request #819 from Keruspe/unstabletest-server: only listen to 127.0.0.1,,,,,,,,,,,,,,,Merge,False,,
82d782d3b56b19f4969b045b3195ea6853290d1e c3229c33b1cd6cf21180c9a44ddd67a5ecd39503,b96ba52cfabc97496cf9485394ab5cec5d2162c0,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 17 03:14:31 2013 -0700,1371464071,Merge pull request #1124 from ioddly/fix-issue-1121Try to report source of bad Lua API calls,,,,,,,,,,,,,,,Merge,False,,
b96ba52cfabc97496cf9485394ab5cec5d2162c0,51adc6e1bcc2ef43f668ba156f65213068117553,antirez,antirez@gmail.com,Tue Jun 18 17:33:35 2013 +0200,1371569615,Lua scripting: improve error reporting.When calling Lua scripts we try to report not just the error butninformation about the code line causing the error.n,27.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1034.0,67.0,26.677511574074074,5989.0,1.0374847555486333,2286.0,None,False,True,"[""ffd6637e90d816b7a17a96f144f75153c952d8cf""]"
51adc6e1bcc2ef43f668ba156f65213068117553,9c2c878e45a7bed90154c682b3e3ce915b372aba,antirez,antirez@gmail.com,Tue Jun 18 19:30:56 2013 +0200,1371576656,Lua script errors format more unified.lua_pcall error handler now formats errors in a way more similar tonluaPushError() so that errors generated in different contexts look alike.n,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1058.0,68.0,0.08149305555555555,5990.0,13.270984235193865,2287.0,None,False,,
9c2c878e45a7bed90154c682b3e3ce915b372aba,338cd4835dd163c5f54f63db59e41ea1ebbc900f,antirez,antirez@gmail.com,Wed Jun 19 14:44:40 2013 +0200,1371645880,"Fix logStackTrace() when logging to stdout.When the semantics changed from logfile = NULL to logfile =  to logninto standard output, no proper change was made to logStackTrace() tonmake it able to work with the new setup.nnThis commit fixes the issue.n",5.0,4.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,928.0,67.0,14.951932870370367,5991.0,1.0668809851321404,2288.0,Corrective,True,True,"[""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
338cd4835dd163c5f54f63db59e41ea1ebbc900f,d363299af33fefb8753c44ed554f313d0203b803,antirez,antirez@gmail.com,Wed Jun 19 18:25:03 2013 +0200,1371659103,Allow writes from scripts called by AOF loading in read-only slaves.This fixes issue #1163n,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1058.0,69.0,0.9542476851851852,5992.0,2.047945953157786,2289.0,Corrective,True,,
d363299af33fefb8753c44ed554f313d0203b803,f8ba3b566890f994aec4d0fb1a14d4a8851955e1,antirez,antirez@gmail.com,Wed Jun 19 18:31:33 2013 +0200,1371659493,Fix comment typo in integration/aof.tcl.,1.0,1.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,143.0,13.0,427.84072916666673,5993.0,1.0023373183800144,360.0,Corrective,True,,
f8ba3b566890f994aec4d0fb1a14d4a8851955e1,b02bb47e67858bcac25c3d2e4f726e5aa164c9f6,antirez,antirez@gmail.com,Wed Jun 19 18:53:07 2013 +0200,1371660787,Test: regression test for #1163.,17.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,389.0,26.0,153.9949884259259,5994.0,1.0064937178165445,361.0,Preventative,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
b02bb47e67858bcac25c3d2e4f726e5aa164c9f6,4c0f8c4e5aecaf7176122b3e9671caa090ad4f87,antirez,antirez@gmail.com,Thu Jun 20 10:21:38 2013 +0200,1371716498,Sentinel: parse new INFO replication output correctly.Sentinel was not able to detect slaves when connected to a very recentnversion of Redis master since a previos non-backward compatible changento INFO broken the parsing of the slaves ip:port INFO output.nnThis fixes issue #1164n,21.0,8.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3147.0,34.0,50.91449074074074,5995.0,1.0196407738828628,2290.0,None,False,,
4c0f8c4e5aecaf7176122b3e9671caa090ad4f87,455563faec4b904c8ee9a1a16eac2a5bae532dc7,antirez,antirez@gmail.com,Thu Jun 20 15:32:00 2013 +0200,1371735120,PUBSUB command implemented.Currently it implements three subcommands:nnPUBSUB CHANNELS [<pattern>]List channels with non-zero subscribers.nPUBSUB NUMSUB [channel_1 ...]  List number of subscribers for channels.nPUBSUB NUMPAT  Return number of subscribed patterns.n,49.0,0.0,"src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.2868389047509439,12.0,1575.333333333333,723.0,45.60654706790123,5997.0,1.00811059516606,2293.0,None,False,,
455563faec4b904c8ee9a1a16eac2a5bae532dc7,519c9e11d195336240ec586c61a640250a1a11ef,antirez,antirez@gmail.com,Thu Jun 20 15:34:56 2013 +0200,1371735296,Allow PUBSUB NUMSUB without channels.The result is an empty list but it is handy to call it programmatically.n,2.0,2.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,358.0,14.0,0.0020370370370370373,5999.0,491.9090909090909,2294.0,None,False,,
519c9e11d195336240ec586c61a640250a1a11ef,5ac7ca9c946e0f30442414112068dbe1a70e0265,Jan-Erik Rediger,badboy@archlinux.us,Thu Jun 20 17:53:35 2013 +0300,1371740015,Initialize char* to NULL to remove compiler warning,2.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1726.0,113.0,19.890266203703703,2.0,1.0502758479830598,2.0,Feature Addition,False,,
519c9e11d195336240ec586c61a640250a1a11ef 5ac7ca9c946e0f30442414112068dbe1a70e0265,b0c2cdd6a788e736ef7b24d2a7e96e174f76365b,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 20 07:56:31 2013 -0700,1371740191,Merge pull request #1167 from badboy/patch-1Initialize char* to NULL to remove compiler warning,,,,,,,,,,,,,,,Merge,False,,
b0c2cdd6a788e736ef7b24d2a7e96e174f76365b,515a26bbc157ca76d6e2441dd21fbac32e37bbd6,antirez,antirez@gmail.com,Fri Jun 21 12:07:53 2013 +0200,1371809273,"New API to force propagation.The old REDIS_CMD_FORCE_REPLICATION flag was removed from thenimplementation of Redis, now there is a new API to force specificnexecutions of a command to be propagated to AOF / Replication link:nnvoid forceCommandPropagation(int flags);nnThe new API is also compatible with Lua scripting, so a script that willnexecute commands that are forced to be propagated, will also benpropagated itself accordingly even if no change to data is operated.nnAs a side effect, this new design fixes the issue with scripts not ablento propagate PUBLISH to slaves (issue #873).n",34.0,5.0,"src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,1.0,1.0,0.8851550272100224,12.0,1458.5,797.0,1.0776996527777778,6001.5,1.5929678235426137,2298.0,Feature Addition,False,True,"[""0d434a446a440b645b4538094f96434e974be767""]"
515a26bbc157ca76d6e2441dd21fbac32e37bbd6,94ec7db47067ce8644e800b669ced032095747f3,antirez,antirez@gmail.com,Mon Jun 24 10:26:04 2013 +0200,1372062364,"Replication of scripts as EVALSHA: sha1 caching implemented.This code is only responsible to take an LRU-evicted fixed length cachenof SHA1 that we are sure all the slaves received.nnIn this commit only the implementation is provided, but the Redis corendoes not use it to actually send EVALSHA to slaves when possible.n",96.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.822763996062595,12.0,1998.333333333333,794.0,10.261346450617284,6005.0,1.1815177158478103,2301.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
94ec7db47067ce8644e800b669ced032095747f3,f0bf5fd8c779d70a853de7b5eb165c6b3d863f69,antirez,antirez@gmail.com,Mon Jun 24 18:57:31 2013 +0200,1372093051,Use the RSC to replicate EVALSHA unmodified.This commit uses the Replication Script Cache in order to avoidntranslating EVALSHA into EVAL whenever possible for both the AOF andnslaves.n,60.0,22.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,1.0,1.0,1.5363065200531634,12.0,1665.2,964.0,11.985212962962965,6009.0,1.0175961637674948,2306.0,None,False,,
f0bf5fd8c779d70a853de7b5eb165c6b3d863f69,82ea1c6f5d05cb016e1eb85c54fa5105be2ac0b6,antirez,antirez@gmail.com,Mon Jun 24 19:27:49 2013 +0200,1372094869,"Move Replication Script Cache initialization in safer place.It should be called just one time at startup and not every time the Luanscripting engine is re-initialized, otherwise memory is leaked.n",1.0,4.0,"src/redis.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,12.0,2038.0,453.0,0.02104166666666667,6012.5,36.64356435643565,2308.0,Feature Addition,False,,
82ea1c6f5d05cb016e1eb85c54fa5105be2ac0b6,e27b13606927b28437cea8be625624335a38f05b,antirez,antirez@gmail.com,Tue Jun 25 10:56:59 2013 +0200,1372150619,SCRIPT FLUSH comment minor pedantic improvement.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1066.0,73.0,0.6452546296296297,6014.0,2.549775784753363,2309.0,None,False,,
e27b13606927b28437cea8be625624335a38f05b,fb67468813a4bbb8f43ee739e54f3f0c8658dd56,antirez,antirez@gmail.com,Tue Jun 25 12:49:56 2013 +0200,1372157396,Force propagation of SCRIPT LOAD to AOF.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1066.0,74.0,0.0784375,6015.0,13.749003984063744,2310.0,None,False,,
fb67468813a4bbb8f43ee739e54f3f0c8658dd56,7e5be50cbf8a03d3bd2e45d72f0e6b1d7c31bf06,antirez,antirez@gmail.com,Tue Jun 25 15:13:14 2013 +0200,1372165994,Test: replication-3 test speedup in master-slave setup.,6.0,3.0,"tests/integration/replication-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,31.0,2.0,715.1233680555556,6016.0,1.0013983601217211,362.0,Preventative,False,,
7e5be50cbf8a03d3bd2e45d72f0e6b1d7c31bf06,d1f2d0733c8b893811938c60bf110a2a7e19f208,antirez,antirez@gmail.com,Tue Jun 25 15:32:37 2013 +0200,1372167157,Test: randomInt() behavior commented.,2.0,0.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,312.0,16.0,379.00892361111113,6017.0,1.0026384603045022,363.0,Preventative,False,,
d1f2d0733c8b893811938c60bf110a2a7e19f208,882e36366f64ba34d02a95191e54baed6a0ef040,antirez,antirez@gmail.com,Tue Jun 25 15:35:48 2013 +0200,1372167348,Test: EVALSHA replication.,50.0,0.0,"tests/integration/replication-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,34.0,3.0,0.015671296296296298,6018.0,64.81093057607089,364.0,Preventative,False,,
882e36366f64ba34d02a95191e54baed6a0ef040,73d7955c6f53edf7597303bbdc605c84ba7a5954,antirez,antirez@gmail.com,Tue Jun 25 15:36:48 2013 +0200,1372167408,Flush the replication script cache after SCRIPT FLUSH.,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1066.0,75.0,0.11587962962962962,6019.0,9.629644426687976,2311.0,None,False,,
73d7955c6f53edf7597303bbdc605c84ba7a5954,d5f1e4b0b5845b31b147569f1086d4375c32a919,antirez,antirez@gmail.com,Tue Jun 25 15:49:07 2013 +0200,1372168147,Test: add some AOF testing to EVALSHA replication test.,17.0,0.0,"tests/integration/replication-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,84.0,4.0,0.009247685185185185,6020.0,109.1351689612015,365.0,Preventative,False,,
d5f1e4b0b5845b31b147569f1086d4375c32a919,8ca265cdb728799ecec27c2bb5e0d2092a62aa03,antirez,antirez@gmail.com,Wed Jun 26 10:11:20 2013 +0200,1372234280,"Don't disconnect pre PSYNC replication clients for timeout.Clients using SYNC to replicate are older implementations, such asnredis-cli --slave, and are not designed to acknowledge the master withnREPLCONF ACK commands, so we don't have any feedback and should notndisconnect them on timeout.n",7.0,0.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,1555.5,419.0,1.6345949074074069,6021.5,1.4588292772730809,2313.0,None,False,True,"[""90a81b4ebb155c8c07a30f0a0562e7a05fea4294""]"
8ca265cdb728799ecec27c2bb5e0d2092a62aa03 9fcead7a5967f31cc391fbed25c256406247b638,bae60ede1d60687f1240258c9298d3515b24b091,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 26 06:17:02 2013 -0700,1372252622,Merge pull request #1111 from yamt/netbsd3netbsd support,,,,,,,,,,,,,,,Merge,False,,
bae60ede1d60687f1240258c9298d3515b24b091,13585dd677ab3401a395858e86cd2dbc626a211b,antirez,antirez@gmail.com,Wed Jun 26 15:19:06 2013 +0200,1372252746,function renamed: popcount_binary -> redisPopcount.,3.0,3.0,"src/bitops.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,936.0,353.0,171.1245428240741,6023.5,1.0029227614500744,2315.0,None,False,,
13585dd677ab3401a395858e86cd2dbc626a211b,3130670b978e0d4baa805016386e5ca56af08123,antirez,antirez@gmail.com,Thu Jun 27 12:14:23 2013 +0200,1372328063,Allow SHUTDOWN in loading state.,7.0,1.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,1908.0,479.0,46.817997685185176,6025.5,1.0108381394045014,2317.0,None,False,,
3130670b978e0d4baa805016386e5ca56af08123,8e2d082066e5b9892ead6cd30e8d3852d02fbc04,antirez,antirez@gmail.com,Fri Jun 28 16:39:49 2013 +0200,1372430389,ae.c event loop: API to resize the fd set size on the run.,57.0,1.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/ae_evport.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER,src/ae_select.c,CAS_DELIMITER",6.0,1.0,1.0,2.0652634468271835,12.0,204.8333333333333,36.0,208.8908217592593,6029.5,1.002218457172619,2323.0,None,False,,
8e2d082066e5b9892ead6cd30e8d3852d02fbc04,de9a221749b10af3a408385056bb51255ca860f6,antirez,antirez@gmail.com,Fri Jun 28 17:08:03 2013 +0200,1372432083,CONFIG SET maxclients.,34.0,4.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8481978793270082,12.0,2064.333333333333,836.0,3.763213734567902,6034.0,1.1073169043074012,2326.0,None,False,True,"[""c138631cd16e5a28cf7f5169bee28ed4c6dae598"", ""c241f5160752753c271366547e2ada8617f1e684""]"
de9a221749b10af3a408385056bb51255ca860f6,0781ad68991171360becfc472c492861ba119c01,antirez,antirez@gmail.com,Tue Jul 2 11:56:52 2013 +0200,1372759012,getAbsolutePath() moved into utils.c,55.0,52.0,"src/redis.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",3.0,1.0,1.0,1.1564144799634173,12.0,1189.3333333333333,399.0,158.38698688271606,6037.0,1.0901859869635504,2329.0,None,False,True,"[""cabc06076bcdb51d01be0e9596c2bc3241535b94""]"
0781ad68991171360becfc472c492861ba119c01,6978aeb3bf2c44bdfe2422847a52f22d61ed034b,antirez,antirez@gmail.com,Tue Jul 2 12:08:07 2013 +0200,1372759687,"pathIsBaseName() added to utils.cThe function is used to test that the specified string looks like justnas the basename of a path, without any absolute or relative path.n",9.0,0.0,"src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,12.0,308.0,17.0,0.0078125,6039.5,97.0,2331.0,Feature Addition,False,,
6978aeb3bf2c44bdfe2422847a52f22d61ed034b,1b10522a08284d563b2876e9deb827dbc6697742,antirez,antirez@gmail.com,Tue Jul 2 12:14:28 2013 +0200,1372760068,Only allow basenames for dbfilename and appendfilename.This fixes issue #1094.n,12.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1751.0,115.0,3.796122685185185,6041.0,1.2634266810982209,2332.0,Corrective,True,,
1b10522a08284d563b2876e9deb827dbc6697742 52b52a350818f88c543a224375fbe308bb17cd12,7d626d49753672147792070bf290d8ff470b14cf,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 2 03:18:18 2013 -0700,1372760298,Merge pull request #776 from charsyam/ziplist-bugfix randstring bug in ziplist.c,,,,,,,,,,,,,,,Merge,False,,
7d626d49753672147792070bf290d8ff470b14cf,7e63167d27d8dc9ceb96bd595e010115285c4b89,antirez,antirez@gmail.com,Tue Jul 2 17:44:42 2013 +0200,1372779882,pqsort.c: remove the switch to insertion sort optimization.It causes catastrophic performance for certain inputs.nnRelevant NetBSD commit:nnhttp://cvsweb.netbsd.org/bsdweb.cgi/src/lib/libc/stdlib/qsort.c?rev=1.20&content-type=text/x-cvsweb-markup&only_with_tag=MAINnnThis fixes issue #968.n,1.0,12.0,"src/pqsort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,197.0,2.0,235.93008101851848,6042.0,1.0042385438757235,2333.0,None,False,,
7e63167d27d8dc9ceb96bd595e010115285c4b89,fbb97c6b13308df876f277117b74b58f4a717e4f,antirez,antirez@gmail.com,Wed Jul 3 11:59:44 2013 +0200,1372845584,"redis-cli --pipe: send final ECHO in a safer way.If the protocol read from stdin happened to contain grabage (invalidnrandom chars), in the previous implementation it was possible to endnwith something like:nndksfjdksjflskfjl*2rn$4rnECHO....nnThat is invalid as the *2 should start into a new line. Now we prefixnthe ECHO with a CRLF that has no effects on the server but prevents thisnissues most of the times.nnOf course if the offending wrong sequence is something like:nn$3248772349rnnnNo one is going to save us as Redis will wait for data in the context ofna big argument, so this fix does not cover all the cases.nnThis partially fixes issue #681.n",6.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1572.0,86.0,82.9475,6043.0,1.0120558184393742,2334.0,None,False,,
fbb97c6b13308df876f277117b74b58f4a717e4f,1135e9faa253789a6d6e67fd6a44d7395af8fb35,antirez,antirez@gmail.com,Wed Jul 3 12:18:55 2013 +0200,1372846735,"redis-cli: introduced --pipe-timeout.When in --pipe mode, after all the data transfer to the server isncomplete, now redis-cli waits at max the specified amount ofnseconds (30 by default, use 0 to wait forever) without receiving anynreply at all from the server. After this time limit the operation isnaborted with an error.nnThat's related to issue #681.n",49.0,25.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1576.0,87.0,0.013321759259259259,6044.0,76.06516072980018,2335.0,None,False,,
1135e9faa253789a6d6e67fd6a44d7395af8fb35,585b0a61ce0cc7ddf136c1c4e462a0d4ad2a8fc7,antirez,antirez@gmail.com,Thu Jul 4 18:30:59 2013 +0200,1372955459,sds.c: new function sdsjoin() to join strings.,14.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,12.0,409.5,48.0,120.20574074074074,6045.5,1.006239302677046,2337.0,None,False,,
585b0a61ce0cc7ddf136c1c4e462a0d4ad2a8fc7,bd234d62bbfe9feb735fd6d1cdb8f5ce811f54b4,antirez,antirez@gmail.com,Thu Jul 4 18:48:46 2013 +0200,1372956526,anet.c: Allow creation of TCP listening sockets bound to N addresses.,16.0,9.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.4021791902022729,12.0,250.5,28.0,146.04207175925927,6047.5,1.0051357967891672,2339.0,None,False,,
bd234d62bbfe9feb735fd6d1cdb8f5ce811f54b4,016ac38a216d1b701991a451e637ca584f804f93,antirez,antirez@gmail.com,Thu Jul 4 18:49:49 2013 +0200,1372956589,Cluster: use new anet.c listening socket creation API.,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2866.0,191.0,21.958125,6049.0,1.0455412290439188,2340.0,None,False,,
016ac38a216d1b701991a451e637ca584f804f93,90b0d66cce97aaac3a6437ac77b5dad9064136d1,antirez,antirez@gmail.com,Thu Jul 4 18:50:15 2013 +0200,1372956615,Ability to bind multiple addresses.,43.0,8.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9043977499387824,12.0,2061.0,841.0,3.5442978395061733,6051.0,1.2509477253888346,2343.0,Feature Addition,False,,
90b0d66cce97aaac3a6437ac77b5dad9064136d1,c978b864f74a86dcffc54d66873f7eae6c2c7121,antirez,antirez@gmail.com,Fri Jul 5 11:07:55 2013 +0200,1373015275,"Revert anet.c: Allow creation of TCP listening sockets bound to N addresses.Bind() can't be called multiple times against the same socket, multiplensockets are required to bind multiple interfaces, silly me.nnThis reverts commit bd234d62bbfe9feb735fd6d1cdb8f5ce811f54b4.n",9.0,16.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.4021791902022729,12.0,254.0,30.0,0.6799652777777778,6053.5,2.10299749782975,2345.0,None,False,,
c978b864f74a86dcffc54d66873f7eae6c2c7121,2160effc78463d6602082302486beb51eb6a999d,antirez,antirez@gmail.com,Fri Jul 5 11:08:44 2013 +0200,1373015324,Revert Cluster: use new anet.c listening socket creation API.This reverts commit 016ac38a216d1b701991a451e637ca584f804f93.n,1.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2867.0,192.0,0.6798032407407407,6055.0,2.4710138758832043,2346.0,None,False,,
2160effc78463d6602082302486beb51eb6a999d,98eecb70ebd215d4bc5a9a6917cd9ef04f9e01cf,antirez,antirez@gmail.com,Fri Jul 5 11:47:20 2013 +0200,1373017640,Binding multiple IPs done properly with multiple sockets.,79.0,31.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.4358620988407416,12.0,1932.0,1107.0,21.20890046296297,6058.0,1.04302818284737,2351.0,None,False,,
98eecb70ebd215d4bc5a9a6917cd9ef04f9e01cf,64b3b9b1d48527f2b16b44be983a9b8735c15273,antirez,antirez@gmail.com,Mon Jul 8 10:42:16 2013 +0200,1373272936,Example redis.conf: bind to multiple interfaces documented.,7.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,715.0,111.0,39.96217592592593,6061.0,1.0250236624215259,1320.0,None,False,,
64b3b9b1d48527f2b16b44be983a9b8735c15273,071963c8555451116abf288382ecd1057393a6ae,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 00:29:49 2011 +0100,1308266989,Use getaddrinfo(3) in anetResolve. #apichangeChange anetResolve() function to use getaddrinfo(3) to resolve hostnames.nResolved hostnames are limited to those reachable by the AF_INET addressnfamily.nnAPI Change: anetResolve requires additional argument.n  additional argument required to specify the length of the charactern  buffer the IP address is written to in order to comply withn  inet_ntop(3) function semantics. inet_ntop(3) replaces inet_ntoa(3)n  as it has been designed to be compatible with more address families.n,17.0,13.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.35335933502142136,12.0,250.5,32.0,-749.4014583333334,0.5,0.49966640043568106,1.0,Feature Addition,False,,
071963c8555451116abf288382ecd1057393a6ae,580b7dce9b1d7adac1d0bfe33e5023f8fbf91158,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 00:55:00 2011 +0100,1308268500,"Add anetSetReuseAddr(err, fd) static function.Extract setting SO_REUSEADDR socket option into separate functionnso the same code can be more easily used by anetCreateSocket andnother functions.n",14.0,3.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,445.0,20.0,0.017488425925925925,2.0,58.18067504963601,2.0,Feature Addition,False,True,"[""447b373fc9d8d7cd3f66de42f7a809fb40941bfc""]"
580b7dce9b1d7adac1d0bfe33e5023f8fbf91158,0e01ce1b13c4e0a974dc4009dc78811a234f0244,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 01:06:19 2011 +0100,1308269179,"Use getaddrinfo(3) in anetTcpGenericConnect.Change anetTcpGenericConnect() function to use getaddrinfo(3) tonperform address resolution, socket creation and connection. Resolvednaddresses are limited to those reachable by the AF_INET family.n",37.0,23.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,456.0,21.0,0.007858796296296296,3.0,128.2459499263623,3.0,Feature Addition,False,True,"[""491f68108868baed5b60045b75099b5475eddd35"", ""a2a900356e62628588742dd6b2de8c8d55b86784""]"
0e01ce1b13c4e0a974dc4009dc78811a234f0244,e0cb24351cb2ebbfdda5d1b4bdc2e83ca14c09a2,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 01:49:21 2011 +0100,1308271761,"Use getaddrinfo(3) in a anetTcpServer.Change anetTcpServer() function to use getaddrinfo(3) to performnaddress resolution, socket creation and binding. Resolved addressesnare limited to those reachable by the AF_INET address family.n",27.0,13.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,470.0,22.0,0.029884259259259263,4.0,34.46243222308288,4.0,Feature Addition,False,True,"[""92038286e8c047966f779e8d7eefa6d2786bfa43"", ""02d02a3754d1af26a02504b95104e9f1227e681a""]"
e0cb24351cb2ebbfdda5d1b4bdc2e83ca14c09a2,ef839f9006ad1d6a05bed69f58bdf7d4af7f2901,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 19:47:49 2011 +0100,1308336469,Use inet_ntop(3) in anet. #apichangeReplace inet_ntoa(3) calls with the more future proof inet_ntop(3)nfunction which is capable of handling additional address families.nnAPI Change: anetTcpAccept() & anetPeerToString() additional argumentn  additional argument required to specify the length of the charactern  buffer the IP address is written to in order to comply withn  inet_ntop(3) function semantics.n,8.0,8.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,272.0,37.0,0.776550925925926,5.5,1.989550902188567,6.0,Feature Addition,False,,
ef839f9006ad1d6a05bed69f58bdf7d4af7f2901,f5494a427e448502713c3d5a8990b37c1b1e096a,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 19:54:17 2011 +0100,1308336857,Update anetTcpAccept & anetPeerToString calls.Add the additional ip buffer length argument to function calls ofnanetTcpAccept and anetPeerToString in network.c and cluster.cn,4.0,4.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,2160.0,332.0,-730.1164930555556,7.5,0.9989896934487088,8.0,Feature Addition,False,,
f5494a427e448502713c3d5a8990b37c1b1e096a,a6ea707cec9d31a3e30594f1a0b3ae8c8597602a,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 20:35:56 2011 +0100,1308339356,Use inet_ntop(3) in nodeIp2String & clusterCommandReplace inet_ntoa(3) calls with the more future proof inet_ntop(3)nfunction which is capable of handling additional address families.n,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2876.0,195.0,0.028923611111111112,9.0,35.57382953181273,9.0,Feature Addition,False,True,"[""6e894f02cf305ac0e86413e96f51b03571fdbebf""]"
a6ea707cec9d31a3e30594f1a0b3ae8c8597602a,693b640510cb8e09b69e42205ec87a104fa79b57,Geoff Garside,geoff@geoffgarside.co.uk,Fri Jun 17 20:37:45 2011 +0100,1308339465,Use inet_pton(3) in clusterCommand.Replace inet_aton(3) call with the more future proof inet_pton(3)nfunction which is capable of handling additional address families.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2876.0,196.0,0.001261574074074074,10.0,793.6605504587156,10.0,Feature Addition,False,,
693b640510cb8e09b69e42205ec87a104fa79b57,6e894f02cf305ac0e86413e96f51b03571fdbebf,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 18:59:07 2011 +0100,1308419947,Fix cluster.c inet_ntop use of sizeof(n->ip).Using sizeof with an array will only return expected results if thenarray is created in the scope of the function where sizeof is used. Thisncommit changes the inet_ntop calls so that they use the fixed buffernvalue as defined in redis.h which is 16.n,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2876.0,197.0,0.9315046296296297,11.0,2.073531969881464,11.0,Corrective,True,,
6e894f02cf305ac0e86413e96f51b03571fdbebf,9cfa02fe734cce966385169427511e8d282fb5a7,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:06:26 2011 +0100,1308420386,Add macro to define clusterNode.ip buffer size.Add REDIS_CLUSTER_IPLEN macro to define the size of the clusterNode ipncharacter array. Additionally use this macro in inet_ntop(3) calls wherenthe size of the array was being defined manually.nnThe REDIS_CLUSTER_IPLEN is defined as INET_ADDRSTRLEN which defines thencorrect size of a buffer to store an IPv4 address in. ThenINET_ADDRSTRLEN macro itself is defined in the <netinet/in.h> headernfile and should be portable across the majority of systems.n,4.0,3.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,12.0,2173.0,540.0,-373.8241608796296,12.5,99.40479820676478,13.0,Feature Addition,False,,
9cfa02fe734cce966385169427511e8d282fb5a7,b39e827d22cbec5752a2a70d7b350f2215c385e2,Geoff Garside,geoff@geoffgarside.co.uk,Tue Sep 20 00:00:14 2011 +0100,1316473214,Add missing includes for getpeername.getpeername(2) requires <sys/socket.h> which on some systems alsonrequires <sys/types.h>. Include both to avoid compilation warnings.n,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2876.0,199.0,93.20402777777778,14.0,1.0107291500575948,14.0,Feature Addition,False,,
b39e827d22cbec5752a2a70d7b350f2215c385e2,ee5a6df101ae27f2209ae358d2b5e0e0ada1cb36,Geoff Garside,geoff@geoffgarside.co.uk,Wed Oct 17 22:32:21 2012 +0100,1350509541,Update calls to anetPeerToString to include ip_len.,3.0,3.0,"src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2325.0,470.0,-255.9770717592593,15.5,0.9971040408938541,16.0,None,False,,
ee5a6df101ae27f2209ae358d2b5e0e0ada1cb36,2345cee33572cc5485f0b8ea190c1d8cb226bc3f,Geoff Garside,geoff@geoffgarside.co.uk,Wed Oct 17 22:32:48 2012 +0100,1350509568,Update calls to anetResolve to include buffer size,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3160.0,35.0,-245.45057870370368,17.0,0.9959258600844156,17.0,None,False,True,"[""7e63dd23f3faae7a399617128ffef224e0f21754""]"
2345cee33572cc5485f0b8ea190c1d8cb226bc3f,e7b34e8dc3569b5e1065013e46357b5085967cbe,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 13:25:31 2011 +0100,1308399931,Update anetResolve to resolve AF_INET6 as well.Change the getaddrinfo(3) hints family from AF_INET to AF_UNSPEC tonallow resolution of IPv6 addresses as well as IPv4 addresses. Thenfunction will return the IP address of whichever address family isnpreferenced by the operating system. Most current operating systemsnwill preference AF_INET6 over AF_INET.nnUnfortunately without attempting to establish a connection to thenremote address we can't know if the host is capable of using thenreturned IP address. It might be desirable to have anetResolvenaccept an additional argument specifying the AF_INET/AF_INET6 addressnthe caller would like to receive. Currently though it does not appearnas though the anetResolve function is ever used within Redis.n,6.0,4.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,484.0,24.0,0.7345138888888889,18.0,2.3614446440389525,18.0,Feature Addition,False,,
e7b34e8dc3569b5e1065013e46357b5085967cbe,fa723d98d6d4a76a8c64fdc4324f2a25cd4c104b,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 14:47:38 2011 +0100,1308404858,Update anetTcpAccept to handle AF_INET6 addresses.Change the sockaddr_in to sockaddr_storage which is capable of storingnboth AF_INET and AF_INET6 sockets. Uses the sockaddr_storage ss_familynto correctly return the printable IP address and port.n,10.0,3.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,486.0,25.0,0.057025462962962965,19.0,18.536025979297744,19.0,Feature Addition,False,,
fa723d98d6d4a76a8c64fdc4324f2a25cd4c104b,23f4d905ceb35aaa84a5d851842f6ab98f25d8a6,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 16:20:08 2011 +0100,1308410408,Update anetPeerToString to handle AF_INET6 addrs.Change the sockaddr_in to sockaddr_storage which is capable of storingnboth AF_INET and AF_INET6 sockets. Uses the sockaddr_storage ss_familynto correctly return the printable IP address and port.n,20.0,6.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,493.0,26.0,0.0642361111111111,20.0,16.567567567567572,20.0,Feature Addition,False,,
23f4d905ceb35aaa84a5d851842f6ab98f25d8a6,6181455ac614356fcc13a09e532d5ee65857c528,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:17:22 2011 +0100,1308421042,Update REDIS_CLUSTER_IPLEN to INET6_ADDRSTRLEN.Change REDIS_CLUSTER_IPLEN to INET6_ADDRSTRLEN so that the clusterNodenip character buffer is big enough to hold an IPv6 address.n,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1471.0,343.0,0.0075925925925925935,21.0,132.70731707317074,21.0,Feature Addition,False,,
6181455ac614356fcc13a09e532d5ee65857c528,5be83eecacb8b4a23e1822e81f77d765afbdb7b1,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:19:10 2011 +0100,1308421150,Update node2IpString to handle AF_INET6 addresses.Change the sockaddr_in to sockaddr_storage which is capable of storingnboth AF_INET and AF_INET6 sockets. Uses the sockaddr_storage ss_familynto correctly return the printable IP address and port.nnFunction makes the assumption that the buffer is of at leastnREDIS_CLUSTER_IPLEN bytes in size.n,10.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2878.0,200.0,-93.19518518518518,22.0,0.989269831933775,22.0,Feature Addition,False,,
5be83eecacb8b4a23e1822e81f77d765afbdb7b1,e6bf4c2676cf4e81dea57200310187329d96db49,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:21:43 2011 +0100,1308421303,Update clusterCommand to handle AF_INET6 addressesChanges the sockaddr_in to a sockaddr_storage. Attempts to convert thenIP address into an AF_INET or AF_INET6 before returning an Invalid IPnaddress error. Handles converting the sockaddr from either AF_INET ornAF_INET6 back into a string for storage in the clusterNode ip field.n,6.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2885.0,201.0,0.0017708333333333332,23.0,565.7058823529413,23.0,Feature Addition,False,,
e6bf4c2676cf4e81dea57200310187329d96db49,f7d9a92d4e57e7a7960e2f0c0e1f5efc3ed102cc,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:34:16 2011 +0100,1308422056,Mark ip string buffers which could be reduced.In two places buffers have been created with a size of 128 bytes whichncould be reduced to INET6_ADDRSTRLEN to still hold a full IP address.nThese places have been marked as they are presently big enough to handlenthe needs of storing a printable IPv6 address.n,2.0,2.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,2166.0,341.0,0.4974074074074074,24.5,58.87312403402029,25.0,Feature Addition,False,,
f7d9a92d4e57e7a7960e2f0c0e1f5efc3ed102cc,96b02dc0556417800b566ae105d55ee5b23b9a95,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:37:45 2011 +0100,1308422265,Expand ip char buffers which are too small for v6.Increase the size of character buffers being used to store printable IPnaddresses so that they can safely store IPv6 addresses.n,3.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1444.0,140.0,0.0024189814814814816,26.0,414.39712918660285,26.0,Feature Addition,False,,
96b02dc0556417800b566ae105d55ee5b23b9a95,ca78446c55a09e9e871d55f8421da35016b7bda1,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:43:47 2011 +0100,1308422627,Mark places that might want changing for IPv6.Any places which I feel might want to be updated to work differentlynwith IPv6 have been marked with a comment starting IPV6:.nnCurrently the only comments address places where an IP address isncombined with a port using the standard : separated form. These may wantnto be changed when printing IPv6 addresses to wrap the address in []nsuch asnnt[2001:db8::c0:ffee]:6379nninstead ofnnt2001:db8::c0:ffee:6379nnas the latter format is a technically valid IPv6 address and it is hardnto distinguish the IPv6 address component from the port unless you knownthe port is supposed to be there.n,2.0,0.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,2166.5,344.0,0.005399305555555557,27.5,122.95899336077619,28.0,None,False,,
ca78446c55a09e9e871d55f8421da35016b7bda1,62a3b7e3d9229870d550ef5c93bf17a81c67172e,Geoff Garside,geoff@geoffgarside.co.uk,Sat Jun 18 19:54:05 2011 +0100,1308423245,Change anetTcpGenericConnect to use AF_UNSPEC.This allows anetTcpGenericConnect to try to connect to AF_INET6naddresses in addition to any resolved AF_INET addresses.n,1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,507.0,27.0,0.14857638888888888,29.0,7.730544519747605,29.0,Feature Addition,False,,
62a3b7e3d9229870d550ef5c93bf17a81c67172e,72a39226178d49a7574f805190ba2fb190a0ca2e,Geoff Garside,geoff@geoffgarside.co.uk,Mon Sep 19 23:31:41 2011 +0100,1316471501,Add static anetV6Only() function.This function sets the IPV6_V6ONLY option to 1 to use separate stacknIPv6 sockets.n,10.0,0.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,507.0,28.0,93.15111111111106,30.0,1.010735245002147,30.0,Feature Addition,False,,
72a39226178d49a7574f805190ba2fb190a0ca2e,56df82719879cdec95507d0f06365156310c09a7,Geoff Garside,geoff@geoffgarside.co.uk,Mon Sep 19 23:32:41 2011 +0100,1316471561,Add anetTcp6Server() function.Refactor the common code from anetTcpServer into internal function whichncan be used by both anetTcpServer and anetTcp6Server.n,16.0,2.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,12.0,288.5,44.0,47.07842592592594,31.5,721.0053102879947,32.0,Feature Addition,False,,
56df82719879cdec95507d0f06365156310c09a7,93570e179e96dc096b85aa0fcd5021b05208594a,Geoff Garside,geoff@geoffgarside.co.uk,Mon Sep 19 23:41:39 2011 +0100,1316472099,Document port6 and bind6 config options.Add commented port6 and bind6 options to default redis.conf file.n,2.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,112.0,-657.4170949074074,33.0,0.9984788956543016,0.0,Feature Addition,False,,
93570e179e96dc096b85aa0fcd5021b05208594a,1ca4008d149af10a3a388e949299c680a03540ac,Geoff Garside,geoff@geoffgarside.co.uk,Thu Jun 7 19:01:51 2012 +0100,1339092111,Fix calls to anetPeerToString() missing buffer size.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2992.0,388.0,-132.14618055555556,34.0,0.9924326227531064,33.0,Corrective,True,,
1ca4008d149af10a3a388e949299c680a03540ac,a68e3d4c6ae0079c7aed3f11510e50e2dcb8f7cb,Geoff Garside,geoff@geoffgarside.co.uk,Wed Oct 17 23:26:30 2012 +0100,1350512790,Cleanup main() and BACKTRACE mistaken pulled while rebasing.,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2992.0,389.0,132.18378472222219,35.0,1.0075652244494395,34.0,Perfective,False,True,"[""90038906f44be7adef9ac656f24f2f32889e1975""]"
a68e3d4c6ae0079c7aed3f11510e50e2dcb8f7cb,e04fdf26fe929b4f80312f29ead449cf1295c17b,Geoff Garside,geoff@geoffgarside.co.uk,Wed Oct 17 23:45:44 2012 +0100,1350513944,Add IPv6 support to sentinel.c.This has been done by exposing the anetSockName() function anet.cnto be used when the sentinel is publishing its existence to the masters.nnThis implementation is very unintelligent as it will likely break if usednwith IPv6 as the nested colons will break any parsing of the PUBLISH stringnby the master.n,5.0,5.0,"src/anet.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,12.0,1610.5,52.0,197.0298553240741,36.5,1.0025378495842074,36.0,Feature Addition,False,,
e04fdf26fe929b4f80312f29ead449cf1295c17b,c76df730109f770793403cd9fb9b68b945c210f6,antirez,antirez@gmail.com,Mon Jul 8 16:08:43 2013 +0200,1373292523,"Revert Document port6 and bind6 config options.IPv6 support is not going to use IPv6 specific options, just it will benpossible to specify all the ipv4 / ipv6 addresses of the interfaces tonbind, otherwise connections will be accepted from all the interfaces innboth IPv4 and IPv6 addresses.nnThis reverts commit 93570e179e96dc096b85aa0fcd5021b05208594a.n",0.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,722.0,113.0,657.6437962962963,6062.0,1.0015205799942641,1321.0,Feature Addition,False,,
c76df730109f770793403cd9fb9b68b945c210f6,90038906f44be7adef9ac656f24f2f32889e1975,antirez,antirez@gmail.com,Mon Jul 8 16:11:52 2013 +0200,1373292712,Fix old anetPeerToString() API call in replication.c,2.0,4.0,"src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2326.0,474.0,263.675306712963,6063.5,1.0028445426526649,2353.0,Corrective,True,,
90038906f44be7adef9ac656f24f2f32889e1975,f19e267e9a422e2c791489e5d46ec16e966f55d6,antirez,antirez@gmail.com,Tue Jul 9 10:47:17 2013 +0200,1373359637,IPv6: bind IPv4 and IPv6 interfaces by default.,13.0,2.0,"src/anet.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,12.0,1761.0,421.0,329.60070023148154,6065.5,1.001517879385132,2355.0,None,False,True,"[""1e7cff23b34041f2be8a208841ae398091683790"", ""cba7a4e69a9fbfadf0e0206a0a3859abf26ef0f8""]"
f19e267e9a422e2c791489e5d46ec16e966f55d6,631d656a94bdc8e23bcfaad3e64cb8210cc03aa9,antirez,antirez@gmail.com,Tue Jul 9 11:32:52 2013 +0200,1373362372,All IP string repr buffers are now REDIS_IP_STR_LEN bytes.,5.0,6.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",4.0,1.0,1.0,1.8585552118703144,12.0,2624.25,775.0,441.928972800926,6068.5,1.000806653993989,2359.0,None,False,,
631d656a94bdc8e23bcfaad3e64cb8210cc03aa9,5cdc5da990d10b211f3554afa62395f1f0a41655,antirez,antirez@gmail.com,Tue Jul 9 12:49:20 2013 +0200,1373366960,"getClientPeerID introduced.The function returns an unique identifier for the client, as ip:port fornIPv4 and IPv6 clients, or as path:0 for Unix socket clients.nnSee the top comment in the function for more info.n",36.0,7.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.27138958750811115,12.0,1458.0,487.0,375.8709837962963,6071.5,10.416532602222693,2361.0,None,False,True,"[""fa8786f17af6175ca6ab6d76308e21be290e25ea""]"
5cdc5da990d10b211f3554afa62395f1f0a41655,e4c019e7a8617e4fdc776611001c42683f4b25e0,antirez,antirez@gmail.com,Tue Jul 9 15:28:30 2013 +0200,1373376510,getClientPeerId() now reports errors.We now also use it in CLIENT KILL implementation.n,14.0,14.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,12.0,1472.5,489.0,0.1105324074074074,6073.5,7.785340314136125,2363.0,None,False,,
e4c019e7a8617e4fdc776611001c42683f4b25e0,d0001fe810150edbbf25e188e949d7de494c9327,antirez,antirez@gmail.com,Tue Jul 9 15:46:34 2013 +0200,1373377594,getClientPeerId() refactored into two functions.,13.0,4.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3227569588973983,12.0,1472.5,491.0,0.012546296296296295,6075.5,60.77859778597785,2365.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
d0001fe810150edbbf25e188e949d7de494c9327,d1cbad6d1404c62d90921280f5d180bb5d67f097,antirez,antirez@gmail.com,Tue Jul 9 16:21:21 2013 +0200,1373379681,Use getClientPeerId() for MONITOR implementation.,4.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1658.0,85.0,1.006585648148148,6077.0,1.993457438857524,2366.0,None,False,,
d1cbad6d1404c62d90921280f5d180bb5d67f097,d83dca4c79850cd8a271f534fa651b0c46666c6a,antirez,antirez@gmail.com,Wed Jul 10 14:34:58 2013 +0200,1373459698,"anet.c: use SO_REUSEADDR when creating listening sockets.It used to be ok, but the socket option was removed when adding IPv6nsupport.n",3.0,5.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,530.0,31.0,1.158113425925926,6078.0,1.8634732812984085,2367.0,None,False,,
d83dca4c79850cd8a271f534fa651b0c46666c6a,bd3c897e9fa86ec0e1ddd80986fc704858129897,antirez,antirez@gmail.com,Wed Jul 10 14:37:13 2013 +0200,1373459833,anet.c: save some vertical space.,3.0,10.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,528.0,32.0,0.0015625,6079.0,641.0,2368.0,None,False,True,"[""491f68108868baed5b60045b75099b5475eddd35""]"
bd3c897e9fa86ec0e1ddd80986fc704858129897,5c5ebb0b9a70d428f982ed7aec5d5a60de605e42,antirez,antirez@gmail.com,Wed Jul 10 14:44:38 2013 +0200,1373460278,"Sentinel: make sure published addr/id buffer is large enough.With ipv6 support we need more space, so we account for the IP addressnmax size plus what we need for the Run ID, port, flags.n",1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3159.0,38.0,1.1331712962962963,6080.0,1.8824791126182256,2369.0,None,False,,
5c5ebb0b9a70d428f982ed7aec5d5a60de605e42,4735f03c5ab4ee3518943576e2ebf8e4d463abcc,antirez,antirez@gmail.com,Thu Jul 11 13:11:27 2013 +0200,1373541087,hiredis: minimal IPv6 support.,10.0,2.0,"deps/hiredis/net.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,294.0,6.0,323.8225231481481,6081.0,1.0030881113218382,542.0,None,False,,
4735f03c5ab4ee3518943576e2ebf8e4d463abcc,3fc7f324d243c718d8076e9dcc71e0990deb8192,antirez,antirez@gmail.com,Thu Jul 11 16:31:39 2013 +0200,1373553099,"Sentinel: use comma as separator to publish hello messages.We use comma to play well with IPv6 addresses, but the implementation isnstill able to parse the old messages separated by colons.n",6.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3159.0,39.0,1.0743171296296297,6082.0,1.9308238437422567,2370.0,None,False,,
3fc7f324d243c718d8076e9dcc71e0990deb8192,73ae8558c17a486a694f49dede5a6febed99e9e5,antirez,antirez@gmail.com,Thu Jul 11 16:38:30 2013 +0200,1373553510,Sentinel: embed IPv6 address into [] when naming slave/sentinel instance.,6.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3162.0,40.0,0.0047569444444444465,6083.0,211.2189781021897,2371.0,None,False,,
73ae8558c17a486a694f49dede5a6febed99e9e5,1b696dc07ce137c4e5bfc7c7e35e0f9b751099fc,Jan-Erik Rediger,badboy@archlinux.us,Thu Jul 11 17:47:55 2013 +0200,1373557675,Wrap IPv6 in brackets in the prompt.,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1600.0,88.0,8.228472222222223,3.0,1.1215292429740906,3.0,None,False,,
73ae8558c17a486a694f49dede5a6febed99e9e5 1b696dc07ce137c4e5bfc7c7e35e0f9b751099fc,2ed64e1f7a1724ee57e92a1a502f32134ac4d99a,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 12 01:55:09 2013 -0700,1373619309,Merge pull request #1192 from badboy/ipv6-rediscliWrap IPv6 in brackets in the prompt.,,,,,,,,,,,,,,,Merge,False,,
2ed64e1f7a1724ee57e92a1a502f32134ac4d99a,81e55ec0f399d5bb2b75e5b2ffa5a62d60a31bc2,antirez,antirez@gmail.com,Fri Jul 12 11:56:52 2013 +0200,1373623012,"Fixed compareStringObject() and introduced collateStringObject().compareStringObject was not always giving the same result when comparingntwo exact strings, but encoded as integers or as sds strings, since itnswitched to strcmp() when at least one of the strings were not sdsnencoded.nnFor instance the two strings 123 and 123u0000456, where the firstnstring was integer encoded, would result into the old implementation ofncompareStringObject() to return 0 as if the strings were equal, whileninstead the second string is greater than the first in a binaryncomparison.nnThe same compasion, but with 123 encoded as sds string, would insteadnreturn a value < 0, as it is correct. It is not impossible that thenabove caused some obscure bug, since the comparison was not alwaysndeterministic, and compareStringObject() is used in the implementationnof skiplists, hash tables, and so forth.nnAt the same time, collateStringObject() was introduced by this commit, sonthat can be used by SORT command to return sorted strings usignncollation instead of binary comparison. See next commit.n",34.0,8.0,"src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.1623261801753929,12.0,1017.0,390.0,85.41359953703704,6084.5,1.005903360248483,2373.0,Corrective,True,,
81e55ec0f399d5bb2b75e5b2ffa5a62d60a31bc2,cf1579a798f3dbc6274b2d0b662e3254465707fb,antirez,antirez@gmail.com,Fri Jul 12 12:02:36 2013 +0200,1373623356,"SORT ALPHA: use collation instead of binary comparison.Note that we only do it when STORE is not used, otherwise we want annabsolutely locale independent and binary safe sorting in order to ensurenAOF / replication consistency.nnThis is probably an unexpected behavior violating the least surprisenrule, but there is currently no other simple / good alternative.n",15.0,3.0,"src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER",2.0,1.0,1.0,0.3095434291503252,12.0,1002.5,375.0,83.95458333333333,6086.5,126.58437314933451,2375.0,None,False,,
cf1579a798f3dbc6274b2d0b662e3254465707fb,123b221dc94627f9776e880956b629a8144a04a2,antirez,antirez@gmail.com,Fri Jul 12 12:06:05 2013 +0200,1373623565,Use the environment locale for strcoll() collation.,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3003.0,393.0,3.0230671296296285,6088.0,1.3307898756857957,2376.0,None,False,,
123b221dc94627f9776e880956b629a8144a04a2,f39a0bdb7744314c0b999c996ae43be1768877c7,Ted Nyman,ted@ted.io,Fri Jul 12 14:06:27 2013 -0700,1373663187,Make sure the log standardizes on 'timeout',1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1658.0,86.0,3.281319444444444,1.0,1.3047554549110072,1.0,None,False,,
123b221dc94627f9776e880956b629a8144a04a2 f39a0bdb7744314c0b999c996ae43be1768877c7,34e20658307ae47bba4b4e14198534b361f4a642,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 12 14:12:04 2013 -0700,1373663524,Merge pull request #1193 from tnm/patch-1Make sure the log standardizes on 'timeout',,,,,,,,,,,,,,,Merge,False,,
34e20658307ae47bba4b4e14198534b361f4a642,9d520a7f70d24ea663b8de9c7178624d76a8d846,antirez,antirez@gmail.com,Tue Jul 16 15:05:13 2013 +0200,1373979913,"Make sure that ZADD can accept the full range of double values.This fixes issue #1194, that contains many details.nnHowever in short, it was possible for ZADD to not accept as score valuesnthat was however possible to obtain with multiple calls to ZINCRBY, likenin the following example:nnredis 127.0.0.1:6379> zadd k 2.5e-308 mn(integer) 1nredis 127.0.0.1:6379> zincrby k -2.4e-308 mn9.9999999999999694e-310nredis 127.0.0.1:6379> zscore k mn9.9999999999999694e-310nredis 127.0.0.1:6379> zadd k 9.9999999999999694e-310 m1n(error) ERR value is not a valid floatnnThe problem was due to strtod() returning ERANGE in the following casenspecified by POSIX:nnIf the correct value would cause an underflow, a value whose magnitudenis no greater than the smallest normalized positive number in the returnntype shall be returned and errno set to [ERANGE]..nnNow instead the returned value is accepted even when ERANGE is returnednas long as the return value of the function is not negative or positivenHUGE_VAL or zero.n",6.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,585.0,44.0,4.1307986111111115,6089.0,1.2420839392436558,2377.0,Corrective,True,True,"[""de474186bdb1a595bb77ccec577754134884bb52"", ""adf2701cc95085a4a9980da7b7367b1836c5a0f2"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
9d520a7f70d24ea663b8de9c7178624d76a8d846,63d15dfc879489ebe811064886d69a347cca544d,yoav,yoav@monfort.co.il,Wed Dec 12 15:59:22 2012 +0200,1355320762,Chunked loading of RDB to prevent redis from stalling reading very large keys.,45.0,15.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",5.0,1.0,1.0,1.4798570854201114,12.0,1195.4,853.0,-170.49201620370368,2.0,0.7986970666206425,4.0,None,False,True,"[""f590dd82cec9e06a2bdc5bd80f643705103a3e1b"", ""27db38d0696580cb6538f893ab090603ccb5bf95""]"
63d15dfc879489ebe811064886d69a347cca544d,f590dd82cec9e06a2bdc5bd80f643705103a3e1b,antirez,antirez@gmail.com,Tue Jul 16 15:43:36 2013 +0200,1373982216,"Fixed typo in rio.h, simgle -> single.",1.0,1.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,123.0,10.0,215.98905092592602,6090.0,1.0046298643181824,2378.0,Corrective,True,,
f590dd82cec9e06a2bdc5bd80f643705103a3e1b,b9cc90a1192a3ac2edbdac63540f889843f37284,antirez,antirez@gmail.com,Wed Jul 17 15:04:22 2013 +0200,1374066262,"addReplyDouble(): format infinite in a libc agnostic way.There are systems that when printing +/- infinte with printf-familynfunctions will not use the usual inf -inf, but different strings.nHandle that explicitly.nnFixes issue #930.n",10.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1480.0,146.0,7.9706944444444465,6091.0,1.125459582846887,2379.0,Feature Addition,False,,
b9cc90a1192a3ac2edbdac63540f889843f37284,894eba07c8484c0f34b09d54a84e69314c37c427,antirez,antirez@gmail.com,Tue Jun 5 21:50:10 2012 +0200,1338925810,"Introduction of a new string encoding: EMBSTRPreviously two string encodings were used for string objects:nn1) REDIS_ENCODING_RAW: a string object with obj->ptr pointing to an sdsnstirng.nn2) REDIS_ENCODING_INT: a string object where the obj->ptr void pointernis casted to a long.nnThis commit introduces a experimental new encoding callednREDIS_ENCODING_EMBSTR that implements an object represented by an sdsnstring that is not modifiable but allocated in the same memory chunk asnthe robj structure itself.nnThe chunk looks like the following:nn+--------------+-----------+------------+--------+----+n| robj data... | robj->ptr | sds header | string | 0 |n+--------------+-----+-----+------------+--------+----+n |   ^n +-----------------------+nnThe robj->ptr points to the contiguous sds string data, so the objectncan be manipulated with the same functions used to manipulate plannstring objects, however we need just on malloc and one free in order tonallocate or release this kind of objects. Moreover it has better cachenlocality.nnThis new allocation strategy should benefit both the memory usage andnthe performances. A performance gain between 60 and 70% was observednduring micro-benchmarks, however there is more work to do to evaluatenthe performance impact and the memory usage behavior.n",157.0,71.0,"src/aof.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",17.0,1.0,1.0,2.70168253623786,12.0,1235.4117647058827,1810.0,-303.37160743464057,6100.0,0.99945990287556,2396.0,Feature Addition,False,True,"[""40671320928502b9e798d67e6246ba0c8c6e8a24"", ""f86df924b01db43eb68f5c4b4cac4c44c1507390"", ""297950e8b817dbf3f2dbbbff497fdf3a047cc8f2""]"
894eba07c8484c0f34b09d54a84e69314c37c427,a31693417dba3b2ddad46386778e191daef85e21,antirez,antirez@gmail.com,Mon Jul 22 10:36:27 2013 +0200,1374482187,Fix replicationFeedSlaves() to use sdsEncodedObject() macro.,3.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1658.0,87.0,9.479166666666666,6109.0,1.1054945054945056,2397.0,Corrective,True,,
a31693417dba3b2ddad46386778e191daef85e21,7ed7652846a0cb5f3db25e98b323ba75a31ebcb5,antirez,antirez@gmail.com,Mon Jul 22 11:05:55 2013 +0200,1374483955,Fixed a possible bug in client->reply_bytes computation.,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1499.0,148.0,411.55260416666664,6110.0,1.0024298230405442,2398.0,Corrective,True,,
7ed7652846a0cb5f3db25e98b323ba75a31ebcb5,dbaa5b0b9a0a68cb44f32b6fcc8d9dbf0b2fc49d,antirez,antirez@gmail.com,Mon Jul 22 23:27:56 2013 +0200,1374528476,Fix setDeferredMultiBulkLength() c->reply_bytes handling with EMBSTRThis function missed proper handling of reply_bytes when gluing to thenprevious object was used. The issue was introduced with the EMBSTR newnstring object encoding.nnThis fixes issue #1208.n,4.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1500.0,149.0,0.5152893518518519,6111.0,2.9406572179420944,2399.0,Corrective,True,,
dbaa5b0b9a0a68cb44f32b6fcc8d9dbf0b2fc49d,ddccd0ed58eafaa7394965156dd0e95cf035dcae,antirez,antirez@gmail.com,Mon Jul 22 23:40:03 2013 +0200,1374529203,Test: regression test for issue #1208.,7.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,757.0,25.0,116.26025462962966,6112.0,1.0086013917927992,366.0,Preventative,False,,
ddccd0ed58eafaa7394965156dd0e95cf035dcae,ec7f480e11e1b697c05ac40d69a6a9fca88fc439,antirez,antirez@gmail.com,Tue Jul 23 11:50:17 2013 +0200,1374573017,"getStringObjectSdsUsedMemory() function added.Now that EMBSTR encoding exists we calculate the amount of memory usednby the SDS part of a Redis String object in two different ways:nn1) For raw string object, the size of the allocation is considered.n2) For embstr objects, the length of the string itself is used.nnThe new function takes care of this logic.n",17.0,19.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1503.0,150.0,0.5155208333333333,6113.0,2.9397858153162257,2400.0,Feature Addition,False,,
ec7f480e11e1b697c05ac40d69a6a9fca88fc439,076c2623aceadfc9247515841fa0970ce56e3081,antirez,antirez@gmail.com,Tue Jul 23 16:35:55 2013 +0200,1374590155,Every function inside sds.c is now commented.,145.0,7.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,733.0,33.0,18.920092592592603,6114.0,1.052853863960027,2401.0,None,False,True,"[""0f06f8df079073263974110643ddbebe8c3447ac"", ""39be4bf496fc0b045b7d8d1ff58f109c05f163da"", ""42b36c5ce9071ebdfd5580fa0499a7bf354f1841"", ""239494db645c6ed87e605cc4b0a10db78b50e5cd"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""b1e35d324404a5017cd925f701211692ed62d495""]"
076c2623aceadfc9247515841fa0970ce56e3081,75b760a72d916a91d86f5cf9531d95e0f524ec40,antirez,antirez@gmail.com,Wed Jul 24 10:37:55 2013 +0200,1374655075,Inline protocol improved to accept quoted strings.,4.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1501.0,151.0,0.9497453703703704,6115.0,2.052913792683224,2402.0,None,False,,
75b760a72d916a91d86f5cf9531d95e0f524ec40,6ea8e0949c6cc6cd222c13f4a13d39fe8652f65e,antirez,antirez@gmail.com,Wed Jul 24 11:21:39 2013 +0200,1374657699,"sdsrange() does not need to return a value.Actaully the string is modified in-place and a reallocation is nevernneeded, so there is no need to return the new sds string pointer asnreturn value of the function, that is now just void.n",10.0,11.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",5.0,1.0,1.0,1.9718925930973112,12.0,1705.8,450.0,89.37149537037037,6118.0,1.0023581387965173,2407.0,Feature Addition,False,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d"", ""d55598988b3381afff87bc974f5cfda0e8ae77e0""]"
6ea8e0949c6cc6cd222c13f4a13d39fe8652f65e,1e7cff23b34041f2be8a208841ae398091683790,Allan,kaoshi.juan@163.com,Wed Jul 24 21:34:55 2013 +0800,1374672895,fixed bug issue of #1213,6.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3006.0,396.0,413.7394097222222,0.0,0.0,0.0,Corrective,True,True,"[""cba7a4e69a9fbfadf0e0206a0a3859abf26ef0f8"", ""35a977c4990bf5cad3f9f9c73ecdf26d11a2e430""]"
6ea8e0949c6cc6cd222c13f4a13d39fe8652f65e,3ccc17a4a5d00fafcbd9b385689837e94682c010,antirez,antirez@gmail.com,Wed Jul 24 18:59:36 2013 +0200,1374685176,Ignore sdsrange return value.,2.0,2.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,580.0,14.0,22.28575231481481,6121.0,1.044871718301169,2408.0,None,False,,
1e7cff23b34041f2be8a208841ae398091683790,cba7a4e69a9fbfadf0e0206a0a3859abf26ef0f8,Allan,kaoshi.juan@163.com,Thu Jul 25 15:28:33 2013 +0800,1374737313,fixed initServer failed if no IPV4 or no IPV6,11.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3009.0,397.0,0.7455787037037037,1.0,2.341240026079668,1.0,Corrective,True,True,"[""a0e986d7f28d79ba0d6fcf7d5a4104e5d5398916"", ""35a977c4990bf5cad3f9f9c73ecdf26d11a2e430""]"
cba7a4e69a9fbfadf0e0206a0a3859abf26ef0f8,a0e986d7f28d79ba0d6fcf7d5a4104e5d5398916,Allan,kaoshi.juan@163.com,Thu Jul 25 15:36:00 2013 +0800,1374737760,fixed initServer fail while having no IPv6 nor IPv4,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3016.0,398.0,0.0051736111111111115,2.0,194.28859060402684,2.0,Corrective,True,True,"[""35a977c4990bf5cad3f9f9c73ecdf26d11a2e430""]"
3ccc17a4a5d00fafcbd9b385689837e94682c010,320fa02b9b48ee1c63d88db6344fc0d328e24853,antirez,antirez@gmail.com,Thu Jul 25 10:32:19 2013 +0200,1374741139,Use latest sds.c in the hiredis library under deps.,422.0,120.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/zmalloc.h,CAS_DELIMITER",4.0,1.0,1.0,0.5319675503709549,7.0,527.25,17.0,421.68328703703696,6123.5,1.001327655531722,546.0,Preventative,False,True,"[""610224d0d0409b337ee3435ac77720dc59f5fd80""]"
320fa02b9b48ee1c63d88db6344fc0d328e24853,bf56948fd0c9dfd3bf7ac63e8dc50b47a4f6e98c,antirez,antirez@gmail.com,Sun Jul 28 11:00:09 2013 +0200,1375002009,"Remove dead variable bothsds from object.c.Thanks to @run and @badboy for spotting this.nTriva: clang was not able to provide me a warning about that whenncompiling.nnThis closes #1024 and #1207, committing the change myself as the pullnrequests no longer apply cleanly after other changes to the samenfunction.n",0.0,3.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,664.0,46.0,417.548599537037,6126.0,1.0023949307963402,2409.0,None,False,,
bf56948fd0c9dfd3bf7ac63e8dc50b47a4f6e98c,c151eb6d92ae69a8fecf14f7429d38929e0c75d0,antirez,antirez@gmail.com,Sun Jul 28 12:49:07 2013 +0200,1375008547,Fix replicationFeedSlaves() off-by-one bug.This fixes issue #1221.n,2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1659.0,88.0,6.0921296296296275,6127.0,1.1641462117182158,2410.0,Corrective,True,,
c151eb6d92ae69a8fecf14f7429d38929e0c75d0,cd0ea1f20210839be4234a43716ee7200622edf1,antirez,antirez@gmail.com,Mon Jul 29 17:39:19 2013 +0200,1375112359,Test: regression test for issue #1221.,38.0,0.0,"tests/integration/replication-4.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,98.0,5.0,59.24717592592592,6128.0,1.0168784416197365,367.0,Preventative,False,,
cd0ea1f20210839be4234a43716ee7200622edf1,b09ea1bd90c96ad26f0eb109ffcd36e2e7cb21e1,antirez,antirez@gmail.com,Mon Aug 5 12:05:22 2013 +0200,1375697122,"Draft #1 of a new expired keys collection algorithm.The main idea here is that when we are no longer to expire keys at thenrate the are created, we can't block more in the normal expire cycle asnthis would result in too big latency spikes.nnFor this reason the commit introduces a fast expire cycle that doesnnot run for more than 1 millisecond but is called in the beforeSleep()nhook of the event loop, so much more often, and with a frequency boundnto the frequency of executed commnads.nnThe fast expire cycle is only called when the standard expirationnalgorithm runs out of time, that is, consumed more thannREDIS_EXPIRELOOKUPS_TIME_PERC of CPU in a given cycle without being ablento take the number of already expired keys that are yet not collectednto a number smaller than 25% of the number of keys.nnYou can test this commit with different loads, but a simple way is tonuse the following:nnExtreme load with pipelining:nnredis-benchmark -r 100000000 -n 100000000  n-P 32 set ele:rand:000000000000 foo ex 2nnRemove the -P32 in order to avoid the pipelining for a more real-worldnload.nnIn another terminal tab you can monitor the Redis behavior with:nnredis-cli -i 0.1 -r -1 info keyspacennandnnredis-cli --latency-historynnNote: this commit will make Redis printing a lot of debug messages, itnis not a good idea to use it in production.n",100.0,21.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2483224446362873,12.0,2248.5,750.0,218.3488078703704,6129.5,1.0461748831566733,2412.0,Feature Addition,False,True,"[""d398f38879a3d29f74fd2cea61f9ae93a3a2af50"", ""51bd9da1fdf3d4bb0d4f81234f33003c16db9a51""]"
b09ea1bd90c96ad26f0eb109ffcd36e2e7cb21e1,66a26471dc829bb60641781cbf8e74f40d2b7bb0,antirez,antirez@gmail.com,Mon Aug 5 16:11:56 2013 +0200,1375711916,"Darft #2 for key collection algo: more improvements.This commit makes the fast collection cycle time configurable, atnthe same time it does not allow to run a new fast collection cyclenfor the same amount of time as the max duration of the fastncollection cycle.n",14.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3094.0,400.0,0.17122685185185185,6131.0,6.840205488711638,2413.0,None,False,True,"[""d398f38879a3d29f74fd2cea61f9ae93a3a2af50""]"
66a26471dc829bb60641781cbf8e74f40d2b7bb0,d398f38879a3d29f74fd2cea61f9ae93a3a2af50,antirez,antirez@gmail.com,Tue Aug 6 12:36:13 2013 +0200,1375785373,Remove dead code and fix comments for new expire code.,10.0,56.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3106.0,401.0,0.8501967592592593,6132.0,2.17619832010564,2414.0,Corrective,True,,
d398f38879a3d29f74fd2cea61f9ae93a3a2af50,6500fabfb881a7ffaadfbff74ab801c55d4591fc,antirez,antirez@gmail.com,Tue Aug 6 12:55:49 2013 +0200,1375786549,Some activeExpireCycle() refactoring.,32.0,21.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6121961274908339,12.0,2271.0,754.0,0.5243229166666666,6133.5,38.2114992813456,2416.0,None,False,,
6500fabfb881a7ffaadfbff74ab801c55d4591fc,4befe73b60f7e02dd304ea0c19febce8fea0bd13,antirez,antirez@gmail.com,Tue Aug 6 12:59:04 2013 +0200,1375786744,"activeExpireCycle(): fix about fast cycle early start.We don't want to repeat a fast cycle too soon, the previous code wasnbroken, we need to wait two times the period *since* the start of thenprevious cycle in order to avoid there is an even space between cycles:nn.-> start   .-> second startn|   |n+-------------+-------------+--------------+n| first cycle |pause| second cycle |n+-------------+-------------+--------------+nnThe second and first start must be PERIOD*2 useconds apart hence the *2nin the new code.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3067.0,403.0,0.0022569444444444442,6135.0,444.0769230769232,2417.0,None,False,,
4befe73b60f7e02dd304ea0c19febce8fea0bd13,112fa479783e8975848ab79d695a65363d330f18,antirez,antirez@gmail.com,Tue Aug 6 15:00:43 2013 +0200,1375794043,"Add per-db average TTL information in INFO output.Example:nndb0:keys=221913,expires=221913,avg_ttl=655nnThe algorithm uses a running average with only two samples (current andnprevious). Keys found to be expired are considered at TTL zero even ifnthe actual TTL can be negative.nnThe TTL is reported in milliseconds.n",30.0,4.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.19143325481419346,12.0,2276.5,757.0,0.08560763888888889,6136.5,9.838919130861623,2419.0,Feature Addition,False,,
112fa479783e8975848ab79d695a65363d330f18,d52c9b6cdb1d885e647cf9be0114d481133ec485,antirez,antirez@gmail.com,Tue Aug 6 18:50:54 2013 +0200,1375807854,redis-benchmark: ability to SELECT a specifid db number.,43.0,3.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,683.0,37.0,229.10415509259255,6138.0,1.0043648269914436,2420.0,None,False,True,"[""087b19237cbdda4a1c082a9cf1aaf6cd0a2b9066""]"
d52c9b6cdb1d885e647cf9be0114d481133ec485,6cbfdd95205cf81b098a48d6331dcc7f04f5680a,antirez,antirez@gmail.com,Tue Aug 6 19:01:54 2013 +0200,1375808514,redis-benchmark: fix db selection when :rand: feature is used.,6.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,723.0,38.0,0.007638888888888889,6139.0,131.9090909090909,2421.0,None,False,,
6cbfdd95205cf81b098a48d6331dcc7f04f5680a,346256f933d2e5f0c2559e15f3ecfbe55fb79965,antirez,antirez@gmail.com,Wed Aug 7 15:58:51 2013 +0200,1375883931,redis-benchmark: max pipeline length hardcoded limit removed.,15.0,7.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,729.0,39.0,0.8728819444444444,6140.0,2.145630295556705,2422.0,None,False,,
346256f933d2e5f0c2559e15f3ecfbe55fb79965,36a0947185973f7c90fa4c54d2747d220981d222,antirez,antirez@gmail.com,Wed Aug 7 15:59:59 2013 +0200,1375883999,redis-benchmark: fix memory leak introduced by 346256f,1.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,737.0,40.0,0.000787037037037037,6141.0,1271.5882352941173,2423.0,None,False,,
36a0947185973f7c90fa4c54d2747d220981d222,74c0af21f506b84882ea425801b4c3c2c0aea9db,Jan-Erik Rediger,badboy@archlinux.us,Wed Aug 7 16:05:09 2013 +0200,1375884309,Little typo,1.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,500.0,81.0,239.86387731481483,4.0,1.0041690312488676,0.0,None,False,,
36a0947185973f7c90fa4c54d2747d220981d222 74c0af21f506b84882ea425801b4c3c2c0aea9db,de698798bc20dee17840ed2ba75fb609d42c8eb1,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 7 07:08:04 2013 -0700,1375884484,Merge pull request #1234 from badboy/patch-2Little typo,,,,,,,,,,,,,,,Merge,False,,
de698798bc20dee17840ed2ba75fb609d42c8eb1,92ab77f8d5ae12e938a07be2280d558360c25e09,antirez,antirez@gmail.com,Thu Aug 8 14:31:54 2013 +0200,1375965114,"redis-benchmark: replace snprintf()+memcpy with faster code.This change was profiler-driven, but the actual effect is hard tonmeasure in real-world redis benchmark runs.n",10.0,5.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,738.0,41.0,0.9388310185185184,6142.0,2.0651544104049813,2424.0,None,False,,
92ab77f8d5ae12e938a07be2280d558360c25e09,db862e8ef0a7f857beb8b7db1a5c70093832033b,antirez,antirez@gmail.com,Thu Aug 8 16:42:08 2013 +0200,1375972928,"redis-benchmark: changes to random arguments substitution.Before this commit redis-benchmark supported random argumetns in thenform of :rand:000000000000. In every string of that form, the zeros werenreplaced with a random number of 12 digits at every command invocation.nnHowever this was far from perfect as did not allowed to generate simplynrandom numbers as arguments, there was always the :rand: prefix.nnNow instead every argument in the form __rand_int__ is replaced with an12 digits number. Note that __rand_int__ is 12 characters itself.nnIn order to implement the new semantic, it was needed to change a fewnthigns in the internals of redis-benchmark, as new clients are createdncloning old clients, so without a stable prefix such as :rand: the oldnway of cloning the client was no longer able to understand, from the oldncommand line, what was the position of the random strings to substitute.nnNow instead a client structure is passed as a reference for cloning, sonthat we can directly clone the offsets inside the command line.n",80.0,28.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,743.0,42.0,0.09043981481481482,6143.0,12.057077041208089,2425.0,None,False,,
db862e8ef0a7f857beb8b7db1a5c70093832033b,89ffba9133bc78f6c797d248f22335da490d20d0,antirez,antirez@gmail.com,Mon Aug 12 10:29:14 2013 +0200,1376296154,"Replication: better way to send a preamble before RDB payload.During the replication full resynchronization process, the RDB file isntransfered from the master to the slave. However there is a shortnpreamble to send, that is currently just the bulk payload length of thenfile in the usual Redis form $..length..<CR><LF>.nnThis preamble used to be sent with a direct write call, assuming thatnthere was alway room in the socket output buffer to hold the few bytesnneeded, however this does not scale in case we'll need to send morenstuff, and is not very robust code in general.nnThis commit introduces a more general mechanism to send a preamble up ton2GB in size (the max length of an sds string) in a non blocking way.n",26.0,15.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.7603931849390965,12.0,1549.666666666667,596.0,13.225976080246914,6145.0,1.0394328966261754,2428.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
89ffba9133bc78f6c797d248f22335da490d20d0,610224d0d0409b337ee3435ac77720dc59f5fd80,antirez,antirez@gmail.com,Mon Aug 12 11:38:21 2013 +0200,1376300301,Fix sdsempty() prototype in sds.h.,2.0,2.0,"deps/hiredis/sds.h,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,2.0,2.0,1.0,12.0,100.0,21.0,18.52872685185185,6147.5,1.041199753652263,2429.0,Corrective,True,,
610224d0d0409b337ee3435ac77720dc59f5fd80,aa05128f51baf8063606770b608432e9ffd96981,antirez,antirez@gmail.com,Mon Aug 12 11:50:54 2013 +0200,1376301054,Fix a PSYNC bug caused by a variable name typo.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1667.0,90.0,0.056712962962962965,6149.0,18.632653061224488,2430.0,Corrective,True,,
aa05128f51baf8063606770b608432e9ffd96981,dcc48a81436c08128a15f88170eee1287122e87a,antirez,antirez@gmail.com,Mon Aug 12 12:10:38 2013 +0200,1376302238,"replicationFeedSlave() reworked for correctness and speed.The previous code using a static buffer as an optimization was lame:nn1) Premature optimization, actually it was *slower* than naive coden   because resulted into the creation / destruction of the objectn   encapsulating the output buffer.n2) The code was very hard to test, since it was needed to have specificn   tests for command lines exceeding the size of the static buffer.n3) As a result of 2 the code was bugged as the current tests were notn   able to stress specific corner cases.nnIt was replaced with easy to understand code that is safer and faster.n",42.0,98.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1667.0,91.0,0.013703703703703704,6150.0,73.97297297297297,2431.0,None,False,True,"[""70e82e5c79affb255d57e88474e254f1ccee56cf""]"
dcc48a81436c08128a15f88170eee1287122e87a,c06de115af0871464c52662355d4b2b107d4f1c8,antirez,antirez@gmail.com,Mon Aug 12 12:38:52 2013 +0200,1376303932,replicationFeedSlaves() func name typo: feedReplicationBacklogWithObject -> feedReplicationBacklog.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1611.0,92.0,0.01960648148148148,6151.0,52.00354191263282,2432.0,None,False,,
c06de115af0871464c52662355d4b2b107d4f1c8,739893075675af06b1cc5d782a984e3624e98ff9,antirez,antirez@gmail.com,Mon Aug 12 12:43:26 2013 +0200,1376304206,Use precomptued objects for bulk and mbulk prefixes.,9.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1505.0,154.0,0.09319444444444444,6152.0,11.730253353204171,2433.0,Corrective,True,,
739893075675af06b1cc5d782a984e3624e98ff9,48cde3fe4710b43be6537854ab464b8568616fb8,antirez,antirez@gmail.com,Fri Aug 16 14:08:04 2013 +0200,1376654884,"dict.c iterator API misuse protection.dict.c allows the user to create unsafe iterators, that are iteratorsnthat will not touch the dictionary data structure in any way, preventingncopy on write, but at the same time are limited in their usage.nnThe limitation is that when itearting with an unsafe iterator, no callnto other dictionary functions must be done inside the iteration loop,notherwise the dictionary may be incrementally rehashed resulting intonmissing elements in the set of the elements returned by the iterator.nnHowever after introducing this kind of iterators a number of bugs werenfound due to misuses of the API, and we are still findingnbugs about this issue. The bugs are not trivial to track because theneffect is just missing elements during the iteartion.nnThis commit introduces auto-detection of the API misuse. The idea isnthat an unsafe iterator has a contract: from initialization to thenrelease of the iterator the dictionary should not change.nnSo we take a fingerprint of the dictionary state, xoring a few importantndict properties when the unsafe iteartor is initialized. We later checknwhen the iterator is released if the fingerprint is still the same. If itnis not, we found a misuse of the iterator, as not allowed API callsnchanged the internal state of the dictionary.nnThis code was checked against a real bug, issue #1240.nnThis is what Redis prints (aborting) when a misuse is detected:nnAssertion failed: (iter->fingerprint == dictFingerprint(iter->d)),nfunction dictReleaseIterator, file dict.c, line 587.n",31.0,4.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.18717625687320816,12.0,491.5,36.0,264.2920254629629,6153.5,1.0033066740409162,2435.0,Corrective,True,True,"[""064d5c96ac0545e2115edd7d4153433a99aaa707""]"
48cde3fe4710b43be6537854ab464b8568616fb8,cfb9d025c6d489a72fa444f74345131fbb68a4ea,antirez,antirez@gmail.com,Fri Aug 16 15:26:44 2013 +0200,1376659604,"Properly init/release iterators in zunionInterGenericCommand().This commit does mainly two things:nn1) It fixes zunionInterGenericCommand() by removing mass-initializationnof all the iterators used, so that we don't violate the unsafe iteratornAPI of dictionaries. This fixes issue #1240.nn2) Since the zui* APIs required the allocator to be initialized in thenzsetopsrc structure in order to use non-iterator related APIs, thisncommit fixes this strict requirement by accessing objects directly vianthe op->subject->ptr pointer we have to the object.n",18.0,19.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2207.0,83.0,436.7337268518518,6155.0,1.002289724696117,2436.0,None,False,,
cfb9d025c6d489a72fa444f74345131fbb68a4ea,3039e806d84518773b157fe26068b5527db78981,antirez,antirez@gmail.com,Fri Aug 16 15:31:25 2013 +0200,1376659885,Fix comments for correctness in zunionInterGenericCommand().Related to issue #1240.n,5.0,3.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2206.0,84.0,0.0032523148148148147,6156.0,308.47330960854094,2437.0,Corrective,True,,
3039e806d84518773b157fe26068b5527db78981,905d4822daa7befde5a70fb7d2b84d8428ad127c,antirez,antirez@gmail.com,Mon Aug 19 11:29:18 2013 +0200,1376904558,"dictFingerprint() fingerprinting made more robust.The previous hashing used the trivial algorithm of xoring the integersntogether. This is not optimal as it is very likely that differentnhash table setups will hash the same, for instance an hash table at thenstart of the rehashing process, and at the end, will have the samenfingerprint.nnNow we hash N integers in a smarter way, by summing every integer to thenprevious hash, and taking the integer hashing again (see the code fornfurther details). This way it is a lot less likely that we get ancollision. Moreover this way of hashing explicitly protects from thensame set of integers in a different order to hash to the same number.nnThis commit is related to issue #1240.n",29.0,9.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,836.0,25.0,2.8897453703703704,6157.0,1.3460512508310838,2438.0,None,False,True,"[""6253180abd9fd11a385c644fe1dee932ef83d86f""]"
905d4822daa7befde5a70fb7d2b84d8428ad127c,ca294c6b1e515a7da42f8106ed4e596e649165ba,antirez,antirez@gmail.com,Mon Aug 19 14:53:38 2013 +0200,1376916818,Added redisassert.h as drop in replacement for assert.h.By using redisassert.h version of assert() you get stack traces in thenlog instead of a process disappearing on assertions.n,45.0,0.0,"src/redisassert.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6158.0,0.0,2439.0,Feature Addition,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
ca294c6b1e515a7da42f8106ed4e596e649165ba,1c75408457841d94b2e9f6730861516555796341,antirez,antirez@gmail.com,Mon Aug 19 14:54:31 2013 +0200,1376916871,assert.h replaced with redisassert.h when appropriate.Also a warning was suppressed by including unistd.h in redisassert.hn(needed for _exit()).n,5.0,5.0,"src/dict.c,CAS_DELIMITER,src/pqsort.c,CAS_DELIMITER,src/redisassert.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",5.0,1.0,1.0,2.121928094887362,12.0,617.8,75.0,150.03016435185185,6161.0,2.412786822742208,2444.0,Preventative,False,,
1c75408457841d94b2e9f6730861516555796341,6253180abd9fd11a385c644fe1dee932ef83d86f,antirez,antirez@gmail.com,Mon Aug 19 15:10:33 2013 +0200,1376917833,Fixed type in dict.c comment: 265 -> 256.,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,856.0,27.0,0.011134259259259259,6164.0,90.81288981288981,2445.0,Corrective,True,True,"[""00ddc3500c2679e473c3a7769470887a38489fb0""]"
6253180abd9fd11a385c644fe1dee932ef83d86f,00ddc3500c2679e473c3a7769470887a38489fb0,antirez,antirez@gmail.com,Mon Aug 19 17:25:48 2013 +0200,1376925948,Revert Fixed type in dict.c comment: 265 -> 256.This reverts commit 6253180abd9fd11a385c644fe1dee932ef83d86f.n,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,856.0,28.0,0.09392361111111112,6165.0,11.646950092421445,2446.0,Corrective,True,,
00ddc3500c2679e473c3a7769470887a38489fb0,1c08302edc4f635df6eaf99e2257294dabf7628e,antirez,antirez@gmail.com,Tue Aug 20 11:49:55 2013 +0200,1376992195,dictFingerprint(): cast pointers to integer of same size.,2.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,856.0,29.0,0.7667476851851852,6166.0,2.3042100019623533,2447.0,None,False,,
1c08302edc4f635df6eaf99e2257294dabf7628e,7e9929e12e6e20ef100ac55be659e8df8e2800ef,antirez,antirez@gmail.com,Tue Aug 20 12:04:57 2013 +0200,1376993097,Use printf %zu specifier to print private_dirty.,2.0,2.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1187.0,192.0,440.59359953703705,6167.5,1.0017022489677292,2449.0,None,False,,
7e9929e12e6e20ef100ac55be659e8df8e2800ef a0e986d7f28d79ba0d6fcf7d5a4104e5d5398916,038e356dbc9b33a52bc1e4eb432665d2274f7a27,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 21 02:18:41 2013 -0700,1377076721,Merge pull request #1214 from kaoshijuan/unstablefixed initServer fail problem,,,,,,,,,,,,,,,Merge,False,,
038e356dbc9b33a52bc1e4eb432665d2274f7a27,35a977c4990bf5cad3f9f9c73ecdf26d11a2e430,antirez,antirez@gmail.com,Wed Aug 21 11:36:09 2013 +0200,1377077769,Fix for issue #1214 simplified.,12.0,14.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3092.0,405.0,14.857939814814815,6169.0,1.067304082023734,2450.0,Corrective,True,,
35a977c4990bf5cad3f9f9c73ecdf26d11a2e430,b804afcf01db8096889c2756c0752fa5b40aea3c,antirez,antirez@gmail.com,Wed Aug 21 15:51:10 2013 +0200,1377093070,Use a safe dict.c iterator in clusterCron().,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2889.0,207.0,28.187164351851848,6170.0,1.0354771408545145,2451.0,None,False,,
b804afcf01db8096889c2756c0752fa5b40aea3c,9cf30132cc8972b59ca2e8f01325a99ba0a915b0,antirez,antirez@gmail.com,Thu Aug 22 11:53:28 2013 +0200,1377165208,Cluster: process MEET packets as PING packets.Somewhat a previous commit broken this so CLUSTER MEET was no longernworking.n,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2889.0,208.0,0.8349305555555555,6171.0,2.1977043999001906,2452.0,None,False,,
9cf30132cc8972b59ca2e8f01325a99ba0a915b0,042776aff78833a2c8885a2a76db361c75105203,antirez,antirez@gmail.com,Thu Aug 22 11:54:25 2013 +0200,1377165265,Cluster: fix CLUSTER MEET ip address validation.This was broken by the IPv6 support patches.n,20.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2891.0,209.0,0.0006597222222222222,6172.0,1516.7894736842104,2453.0,None,False,,
042776aff78833a2c8885a2a76db361c75105203,0f0cc88589aea634cd66121fd0f473520f86e143,antirez,antirez@gmail.com,Thu Aug 22 13:02:59 2013 +0200,1377169379,Print error message when can't bind * on any address.,5.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3090.0,406.0,1.060300925925926,6173.0,1.9431284794236439,2454.0,Feature Addition,False,,
0f0cc88589aea634cd66121fd0f473520f86e143,4f310e05c0adbded9c077b0634355fa9b8b47985,antirez,antirez@gmail.com,Thu Aug 22 14:01:16 2013 +0200,1377172876,Opening TCP listening ports refactored into a function.,58.0,38.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3092.0,407.0,0.04047453703703704,6174.0,25.70689162138976,2455.0,None,False,True,"[""7e9433cee16364f9352cc95f36fbad056eadd964"", ""b20ae393f1129f97eea4d9b70f44bf2309cfbd65"", ""c77b95fd01cb6959005121b91e21037cd3da1c88""]"
4f310e05c0adbded9c077b0634355fa9b8b47985,81a6a9639a5650082fcc78f5c83c4dfee79eaeb2,antirez,antirez@gmail.com,Thu Aug 22 14:05:07 2013 +0200,1377173107,Use listenToPort() in cluster.c as well.,10.0,18.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.22228483068568802,12.0,2197.0,565.0,5.1203414351851855,6175.5,6.557623644859954,2457.0,None,False,,
81a6a9639a5650082fcc78f5c83c4dfee79eaeb2,6ae37b0e1de3b0255b667edc9efdaf436a3edb6b,antirez,antirez@gmail.com,Thu Aug 22 14:53:53 2013 +0200,1377176033,Cluster: set event handler in cluster bus listening socket.The commit using listenToPort() introduced this bug by no longerncreating the event handler to handle incoming messages from the clusternbus.n,9.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2897.0,211.0,0.03386574074074074,6177.0,30.52836637047164,2458.0,None,False,,
6ae37b0e1de3b0255b667edc9efdaf436a3edb6b,303dde3757b75f9ce529ad804abf7e6d6ae5e793,antirez,antirez@gmail.com,Mon Aug 26 16:16:25 2013 +0200,1377526585,"Don't update node pong time via gossip.This feature was implemented in the initial days of the Redis Clusternimplementaiton but is not a good idea at all.nn1) It depends on clocks to be synchronized, that is already very bad.n2) Moreover it adds a bug where the pong time is updated via gossip sonno new PING is ever sent by the current node, with the effect of no PONGnreceived, no update of tables, no clearing of PFAIL flag.nnIn general to trust other nodes about the reachability of other nodes isna broken distributed programming model.n",2.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2906.0,212.0,4.057314814814815,6178.0,1.2464684269380863,2459.0,Corrective,True,,
303dde3757b75f9ce529ad804abf7e6d6ae5e793,003cc8a4f575cdff6a79ce5c856bf0e24fe497df,antirez,antirez@gmail.com,Tue Aug 27 09:31:43 2013 +0200,1377588703,Only run the fast active expire cycle if master & enabled.,4.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3112.0,408.0,4.8128125,6179.0,1.2077787156678137,2460.0,None,False,,
003cc8a4f575cdff6a79ce5c856bf0e24fe497df,b34126e37850f70d55ee441a54e28be18e9141c4,antirez,antirez@gmail.com,Tue Aug 27 10:16:01 2013 +0200,1377591361,Update server.lastbgsave_status when fork() fails.,1.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1198.0,94.0,6.924351851851853,6180.0,1.1444178489763717,2461.0,Corrective,True,,
b34126e37850f70d55ee441a54e28be18e9141c4,e21803348a1c707c5fe36524a589b2475d5ad791,antirez,antirez@gmail.com,Tue Aug 27 11:52:12 2013 +0200,1377597132,DEBUG SDSLEN added.This command is only useful for low-level debugging of memory issues duento sds wasting memory as empty buffer at the end of the string.n,23.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,927.0,69.0,447.5847453703704,6181.0,1.0022342137669873,2462.0,Corrective,True,True,"[""309c2bcd1bf00ac6a224a76aad9c05733d2f4a18""]"
e21803348a1c707c5fe36524a589b2475d5ad791,ff9d66c4a9a6fc91233034bfbcaf5c65379a3bed,antirez,antirez@gmail.com,Tue Aug 27 11:54:38 2013 +0200,1377597278,"Don't over-allocate the sds string for large bulk requests.The call to sdsMakeRoomFor() did not accounted for the amount of datanalready present in the query buffer, resulting into over-allocation.n",2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1512.0,155.0,14.966111111111116,6182.0,1.0668176250046402,2463.0,None,False,True,"[""e29e426b4368b68f23c5b6f78b072d1126824653""]"
ff9d66c4a9a6fc91233034bfbcaf5c65379a3bed,6672bc8b3bfbcb6a0d6f643063be296d3acfda3b,antirez,antirez@gmail.com,Tue Aug 27 11:56:47 2013 +0200,1377597407,"tryObjectEncoding(): don't call stringl2() for too big strings.We are sure that a string that is longer than 21 chars cannot benrepresented by a 64 bit signed integer, as -(2^64) is 21 chars:nnstrlen(-18446744073709551616) => 21n",6.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,661.0,47.0,30.039328703703703,6183.0,1.0332896919855836,2464.0,None,False,,
6672bc8b3bfbcb6a0d6f643063be296d3acfda3b,38b2e65e15b5be11ebefbaedeb761ece2066c747,antirez,antirez@gmail.com,Tue Aug 27 11:59:34 2013 +0200,1377597574,"tryObjectEncoding(): optimize sds strings if possible.When no encoding is possible, at least try to reallocate the sds stringnwith one that does not waste memory (with free space at the end of thenbuffer) when the string is large enough.n",16.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,665.0,48.0,0.0019328703703703704,6184.0,518.3652694610778,2465.0,None,False,,
38b2e65e15b5be11ebefbaedeb761ece2066c747,8811d49009fd0bbf8ce0877e6d5bf3e54c29e85a,antirez,antirez@gmail.com,Tue Aug 27 12:36:52 2013 +0200,1377599812,"Remove useful check from tryObjectEncoding().We are sure the string is large, since when the sds optimization branchnis entered it means that it was not possible to encode it as EMBSTR fornsize concerns.n",1.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,680.0,49.0,0.02590277777777777,6185.0,39.6058981233244,2466.0,None,False,,
8811d49009fd0bbf8ce0877e6d5bf3e54c29e85a,e29e426b4368b68f23c5b6f78b072d1126824653,antirez,antirez@gmail.com,Tue Aug 27 13:00:06 2013 +0200,1377601206,Fix an hypothetical issue in processMultibulkBuffer().,5.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1512.0,156.0,0.04546296296296296,6186.0,22.9959266802444,2467.0,Corrective,True,,
e29e426b4368b68f23c5b6f78b072d1126824653,9bb91d198cd6130efbdde7406b3f603cc5d0c648,yihuang,yi.codeplayer@gmail.com,Tue Aug 13 17:47:42 2013 +0800,1376387262,fix lua_cmsgpack pack map as array,1.0,1.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,729.0,1.0,535.7925578703704,0.0,0.0,0.0,Corrective,True,,
9bb91d198cd6130efbdde7406b3f603cc5d0c648,41d3147344da4656b6a21c73373c34d25fe8f24d,antirez,antirez@gmail.com,Thu Aug 29 11:49:23 2013 +0200,1377769763,"Fixed critical memory leak from EVAL.Multiple missing calls to lua_pop prevented the error handler functionnpushed on the stack for lua_pcall() to be popped before returning,ncausing a memory leak in almost all the code paths of EVAL (bothnsuccessful calls and calls returning errors).nnThis caused two issues: Lua leaking memory (and this was very visiblenfrom INFO memory output, as the 'used_memory_lua' field reported annalways increasing amount of memory used), and as a result slower andnslower GC cycles resulting in all the CPU being used.nnThanks to Tanguy Le Barzic for noticing something was wrong with his 2.8nslave, and for creating a testing EC2 environment where I was able toninvestigate the issue.n",9.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1067.0,76.0,64.84207175925926,6187.0,1.0154220858906655,2468.0,Corrective,True,,
41d3147344da4656b6a21c73373c34d25fe8f24d,f79b1cb49e8dec1cb21bd4d7ccdee21931114429,antirez,antirez@gmail.com,Thu Aug 29 16:23:57 2013 +0200,1377786237,Test: added a memory efficiency test.,33.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.19590927087360493,12.0,250.0,82.0,11.006527777777775,6188.5,1.045427587164183,369.0,Preventative,False,True,"[""fcebd9b0f9a7b1f78abaf556e9d1a8f3b857e614"", ""5e3dcc522b13d5441d6cdf4ee6ff48bd25df13cb""]"
f79b1cb49e8dec1cb21bd4d7ccdee21931114429,e9d97b453e6f62938d6a89150110a67e0d0a216b,antirez,antirez@gmail.com,Fri Aug 30 08:59:11 2013 +0200,1377845951,Test: Lua stack leak regression test added.,15.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,406.0,27.0,71.5875462962963,6190.0,1.0139689101210574,370.0,Preventative,False,,
e9d97b453e6f62938d6a89150110a67e0d0a216b,f6efb6cdec292f5f4891445346e9125965874f30,antirez,antirez@gmail.com,Tue Sep 3 11:27:01 2013 +0200,1378200421,Cluster: fixed a bug in clusterSendPublish() due to inverted statements.The code used to copy the header *after* the 'hdr' pointer was alreadynswitched to the new buffer. Of course we need to do the reverse.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2899.0,213.0,7.799027777777778,6191.0,1.1282211101811124,2469.0,None,False,,
f6efb6cdec292f5f4891445346e9125965874f30,1036b4b21b0edb8a9075827f7b1d33918b7557a6,antirez,antirez@gmail.com,Tue Sep 3 11:42:09 2013 +0200,1378201329,Cluster: use non-blocking I/O for the cluster bus.,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2899.0,214.0,0.01050925925925926,6192.0,96.15418502202644,2470.0,None,False,,
1036b4b21b0edb8a9075827f7b1d33918b7557a6,354a5de27069ac841c15e34ed87943d416f53762,antirez,antirez@gmail.com,Tue Sep 3 11:43:07 2013 +0200,1378201387,Cluster: clusterReadHandler() reworked to be more correct and simpler to follow.,42.0,43.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2903.0,215.0,0.0006712962962962962,6193.0,1490.6551724137933,2471.0,None,False,,
354a5de27069ac841c15e34ed87943d416f53762,70e82e5c79affb255d57e88474e254f1ccee56cf,Maxim Zakharov,dp.maxime@gmail.com,Wed Aug 28 15:44:40 2013 +1000,1377668680,A mistype fixed,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1611.0,93.0,15.795694444444445,0.0,0.0,0.0,Corrective,True,,
70e82e5c79affb255d57e88474e254f1ccee56cf,43fe2d0d979b23b18d3ebe0f52299c42b9708ec1,Maxim Zakharov,dp.maxime@gmail.com,Wed Aug 28 15:34:52 2013 +1000,1377668092,mistype fixed,1.0,1.0,"src/zipmap.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,49.0,2.0,911.8597685185184,1.0,1.0010966598533289,1.0,Corrective,True,,
43fe2d0d979b23b18d3ebe0f52299c42b9708ec1,e5d5da6f7c3f40ccf3ea3d1cbf72fbd3943f0ee9,antirez,antirez@gmail.com,Wed Sep 4 10:07:50 2013 +0200,1378282070,Cluster: always use safe iteartors to iterate server.cluster->nodes.,6.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2902.0,216.0,0.9338310185185184,6194.0,2.0708575536358342,2472.0,None,False,,
e5d5da6f7c3f40ccf3ea3d1cbf72fbd3943f0ee9,528201ad6c2b2f9758003f8676d400a5f94fa1f0,antirez,antirez@gmail.com,Wed Sep 4 10:25:26 2013 +0200,1378283126,Cluster: don't save HANDSHAKE nodes in nodes.conf.,18.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2902.0,217.0,0.012222222222222223,6195.0,82.81818181818181,2473.0,None,False,,
528201ad6c2b2f9758003f8676d400a5f94fa1f0,8eff339ca43c403615a7821be054221274cb113f,antirez,antirez@gmail.com,Wed Sep 4 10:32:09 2013 +0200,1378283529,Cluster: CLUSTER SAVECONFIG command added.,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2916.0,218.0,0.0046643518518518536,6196.0,215.39205955334987,2474.0,None,False,,
8eff339ca43c403615a7821be054221274cb113f,2debce325bf52b45ec8c0ee274cd9af63e4d2957,antirez,antirez@gmail.com,Wed Sep 4 10:35:53 2013 +0200,1378283753,"redis-cli: fix big keys search when the key no longer exist.The code freed a reply object that was never created, resulting in ansegfault every time randomkey returned a key that was deleted before wenqueried it for size.n",0.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1601.0,89.0,54.699976851851865,6197.0,1.0182815433854455,2475.0,None,False,,
2debce325bf52b45ec8c0ee274cd9af63e4d2957,72587e6cc5857d4314e045baa1f424e59d6ab0ce,antirez,antirez@gmail.com,Wed Sep 4 12:41:21 2013 +0200,1378291281,"Cluster: free HANDSHAKE nodes after node_timeout.Handshake nodes should turn into normal nodes or be freed in anreasonable amount of time, otherwise they'll keep accumulating if thenaddress they are associated with is not reachable for some reason.n",12.0,0.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,12.0,2206.5,575.0,6.515775462962964,6198.5,6.611123836485048,2477.0,None,False,,
72587e6cc5857d4314e045baa1f424e59d6ab0ce,d0e327413be157e1eab25751458a7d362bf49a23,antirez,antirez@gmail.com,Wed Sep 4 15:52:16 2013 +0200,1378302736,Cluster: don't add an handshake node for the same ip:port pair multiple times.,21.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2935.0,220.0,0.13258101851851853,6200.0,8.542557835006548,2478.0,None,False,,
d0e327413be157e1eab25751458a7d362bf49a23,7bec743e66e260b54f000edc5f39340d4d2a9d9c,antirez,antirez@gmail.com,Tue Sep 17 09:46:01 2013 +0200,1379403961,Allow AUTH / PING when disconnected from slave and serve-stale-data is no.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3114.0,409.0,21.00993055555556,6201.0,1.0475965399959677,2479.0,None,False,,
7bec743e66e260b54f000edc5f39340d4d2a9d9c,925ea9f8583a34ecb3d46bd773957ec98ce39bfa,antirez,antirez@gmail.com,Fri Sep 20 09:22:21 2013 +0200,1379661741,"Cluster: added time field in cluster bus messages.The time is sent in requests, and copied back in reply packets.nThis way the receiver can compare the time field in a reply with itsnlocal clock and check the age of the request associated with this reply.nnThis is an easy way to discard delayed replies. Note that only a clocknis used here, that is the one of the node sending the packet. Thenreceiver only copies the field back into the reply, so nonsynchronization is needed between clocks of different hosts.n",15.0,6.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,2222.5,578.0,15.795515046296293,6202.5,1.0476152400234584,2481.0,None,False,,
925ea9f8583a34ecb3d46bd773957ec98ce39bfa,3c9bb8751a440c9f4bde69ceb54b624f52f589f6,antirez,antirez@gmail.com,Fri Sep 20 11:26:44 2013 +0200,1379669204,"Cluster: PFAIL -> FAIL transition allowed for slaves.First change: now there is no need to be a master in order to detect anfailure, however the majority of masters signaling PFAIL or FAIL is needed.nnThis change is important because it allows slaves rejoining the clusternafter a partition to sense the FAIL condition so that eventually all thennodes agree on failures.n",23.0,10.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2961.0,222.0,0.08637731481481481,6204.0,12.577113761222027,2482.0,None,False,,
3c9bb8751a440c9f4bde69ceb54b624f52f589f6,da257afe5777e1bcf3b6b01e2355252be956b511,antirez,antirez@gmail.com,Wed Sep 25 09:26:36 2013 +0200,1380093996,htonu64() and ntohu64 added to endianconv.h.,10.0,0.0,"src/endianconv.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,64.0,3.0,287.64277777777784,6205.0,1.003476534358782,2483.0,Feature Addition,False,,
da257afe5777e1bcf3b6b01e2355252be956b511,12483b0061e0755d17730f24a976d61301450216,antirez,antirez@gmail.com,Wed Sep 25 11:47:13 2013 +0200,1380102433,Cluster: configEpoch added in cluster nodes description.,31.0,2.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6136190195993708,12.0,2233.5,581.0,5.057413194444443,6206.5,1.1491487020779276,2485.0,None,False,,
12483b0061e0755d17730f24a976d61301450216,d426ada891bfe8b1e35d667f4357c14fb357c9af,antirez,antirez@gmail.com,Wed Sep 25 11:53:35 2013 +0200,1380102815,Cluster: broadcast currentEpoch and configEpoch in packets header.,9.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2998.0,224.0,0.004421296296296296,6208.0,227.17801047120412,2486.0,None,False,,
d426ada891bfe8b1e35d667f4357c14fb357c9af,6ec795d2cf3147fb8541aed45b9b53cef6e4c627,antirez,antirez@gmail.com,Wed Sep 25 12:36:29 2013 +0200,1380105389,Cluster: update our currentEpoch when a greater one is seen.,10.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3006.0,225.0,0.029791666666666668,6209.0,34.56643356643357,2487.0,None,False,,
6ec795d2cf3147fb8541aed45b9b53cef6e4c627,32b5410af928b9d651a837f79c6c6002615a3048,antirez,antirez@gmail.com,Wed Sep 25 12:38:36 2013 +0200,1380105516,Cluster: add currentEpoch to CLUSTER INFO.,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3015.0,226.0,0.0014699074074074074,6210.0,681.3149606299213,2488.0,None,False,,
32b5410af928b9d651a837f79c6c6002615a3048,341ed1d1a88bfea230a04066f6b496e4457277c0,antirez,antirez@gmail.com,Wed Sep 25 12:44:47 2013 +0200,1380105887,Cluster: fix redis-trib for added configEpoch field in CLUSTER NODES.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,755.0,60.0,182.72828703703703,6211.0,1.0054726064377617,2489.0,None,False,,
341ed1d1a88bfea230a04066f6b496e4457277c0,656c3ffe4a6fe5fb07243cd755d4b0112e636204,antirez,antirez@gmail.com,Wed Sep 25 12:51:01 2013 +0200,1380106261,Cluster: fix redis-trib node config fingerprinting for new nodes format.,2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,755.0,61.0,0.0043287037037037035,6212.0,232.01604278074868,2490.0,None,False,,
3c9bb8751a440c9f4bde69ceb54b624f52f589f6,347ab78e90c481e6273a8410beb73358603e8db0,Michel Martens,michel@soveran.com,Sat Sep 21 21:36:32 2013 +0200,1379792192,Document the redis-cli --csv option.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1600.0,90.0,17.458784722222227,5.0,1.0572777553484098,1.0,Non Functional,False,,
656c3ffe4a6fe5fb07243cd755d4b0112e636204,fb9b76fe1435c83d84a3144f1c06ddb1378899b8,antirez,antirez@gmail.com,Thu Sep 26 11:13:17 2013 +0200,1380186797,Cluster: slave node now uses the new protocol to get elected.,48.0,17.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",3.0,1.0,1.0,0.8458045338231149,12.0,2560.333333333333,628.0,21.970459104938264,6214.0,1.5332494424943022,2493.0,None,False,,
fb9b76fe1435c83d84a3144f1c06ddb1378899b8,a445aa30a0fb72bc54da083998b3458fad92820f,antirez,antirez@gmail.com,Thu Sep 26 13:00:41 2013 +0200,1380193241,Cluster: master node now uses new protocol to vote.,37.0,35.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.2498822928331855,12.0,2274.0,588.0,0.07458333333333332,6216.5,11.05586592178771,2495.0,None,False,,
a445aa30a0fb72bc54da083998b3458fad92820f,42fa46e49a9b71d38f4410b3376f3f2bec8d716d,antirez,antirez@gmail.com,Thu Sep 26 13:28:19 2013 +0200,1380194899,Cluster: removed an old source of delay to start the slave failover.,2.0,8.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3044.0,229.0,0.019189814814814816,6218.0,53.110977080820255,2496.0,None,False,,
42fa46e49a9b71d38f4410b3376f3f2bec8d716d,7c4b8f29e76ec24f41a0180df54057701345cf54,antirez,antirez@gmail.com,Thu Sep 26 16:54:43 2013 +0200,1380207283,Cluster: react faster when a slave wins an election.,45.0,15.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6346460690416349,12.0,2552.6666666666665,1001.0,3.201188271604938,6220.0,3.3955975672782936,2499.0,None,False,,
7c4b8f29e76ec24f41a0180df54057701345cf54,026e63392e29b2d4d66bc833d2194e0679df55f2,antirez,antirez@gmail.com,Fri Sep 27 09:55:41 2013 +0200,1380268541,Cluster: update the node configEpoch when newer is detected.,13.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3063.0,231.0,0.7090046296296296,6222.0,2.410428025727252,2500.0,None,False,,
026e63392e29b2d4d66bc833d2194e0679df55f2,03ca9039835872b5ea14c361a6a970e7646cecb8,antirez,antirez@gmail.com,Mon Sep 30 10:13:07 2013 +0200,1380528787,Cluster: fsync data when saving the cluster config.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3072.0,232.0,3.012106481481481,6223.0,1.331993575309515,2501.0,None,False,,
03ca9039835872b5ea14c361a6a970e7646cecb8,b1875177198959710d9c9a348eb9f116b797b6bc,antirez,antirez@gmail.com,Mon Sep 30 10:13:33 2013 +0200,1380528813,"Cluster: when upading the configEpoch for a node, save config on disk ASAP.",3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3073.0,233.0,0.000300925925925926,6224.0,3324.0769230769233,2502.0,None,False,,
b1875177198959710d9c9a348eb9f116b797b6bc,62b1591439901557b3a177469ed8d54da77e7503,antirez,antirez@gmail.com,Mon Sep 30 10:13:58 2013 +0200,1380528838,Cluster: re-order failover operations to make it safer.We need to:nn1) Increment the configEpoch.n2) Save it to disk and fsync the file.n3) Broadcast the PONG with the new configuration.nnIf other nodes will receive the updated configuration we need to be surento restart with this new config in the event of a crash.n,6.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3075.0,234.0,0.00028935185185185184,6225.0,3457.0,2503.0,None,False,,
62b1591439901557b3a177469ed8d54da77e7503,4dc247eb31e697228d9de0298397dfc582b470aa,antirez,antirez@gmail.com,Mon Sep 30 11:44:23 2013 +0200,1380534263,"Cluster: detect cluster reconfiguration when master slots drop to 0.The old algorithm used a PROMOTED flag and explicitly checks aboutnslave->master convertions. Wit the new cluster meta-data propagationnalgorithm we just look at the configEpoch to check if we need tonreconfigure slots, then:nn1) If a node is a master but it reaches zero served slots becuase ofnreconfiguration.n2) If a node is a slave but the master reaches zero served slots becausenof a reconfiguration.nnWe switch as a replica of the new slots owner.n",36.0,41.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3075.0,235.0,0.06278935185185185,6226.0,16.926267281105993,2504.0,None,False,,
4dc247eb31e697228d9de0298397dfc582b470aa,707ff0f714dd19391c52ecb0e6a1264c1a9f1de4,antirez,antirez@gmail.com,Mon Sep 30 11:48:09 2013 +0200,1380534489,Make clear that runids are not cluster node IDs.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1611.0,94.0,33.16908564814815,6227.0,1.0301485549106726,2505.0,None,False,,
707ff0f714dd19391c52ecb0e6a1264c1a9f1de4,2d0844ee3762fa49f71a983cb0acad40bfc7e469,antirez,antirez@gmail.com,Mon Sep 30 11:51:58 2013 +0200,1380534718,Cluster: log message shortened.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3070.0,236.0,0.0052662037037037035,6228.0,190.8901098901099,2506.0,None,False,,
2d0844ee3762fa49f71a983cb0acad40bfc7e469,2b93a195374665d8bc74b33b4c769bdf9db97014,antirez,antirez@gmail.com,Mon Sep 30 11:53:18 2013 +0200,1380534798,Add REWRITE to CONFIG subcommands help message.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1796.0,118.0,481.58550925925925,6229.0,1.0020764744386477,2507.0,Feature Addition,False,,
2b93a195374665d8bc74b33b4c769bdf9db97014,1dedf9aa36b69d8721be19b7eb37b0c1b4f8e917,antirez,antirez@gmail.com,Mon Sep 30 16:19:44 2013 +0200,1380550784,Cluster: time field removed from cluster messages header.The new algorithm does not check replies time as checking for thencurrentEpoch in the reply ensures that the reply is about the currentnelection process.n,3.0,10.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.7793498372920852,12.0,2289.0,599.0,2.0808275462962964,6230.5,3.8090527605978144,2509.0,None,False,,
1dedf9aa36b69d8721be19b7eb37b0c1b4f8e917,f1bfd8233bac4b8e07b1f3f89cb3790d05445b11,antirez,antirez@gmail.com,Tue Oct 1 15:40:20 2013 +0200,1380634820,Cluster: fix typo in clusterProcessPacket() comment.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3066.0,238.0,0.9726388888888888,6232.0,2.028130801085249,2510.0,None,False,,
f1bfd8233bac4b8e07b1f3f89cb3790d05445b11,7970ebd80a735f6c73c8be1bda0e77f4bcc47a34,antirez,antirez@gmail.com,Tue Oct 1 17:21:28 2013 +0200,1380640888,Cluster: senderCurrentEpoch == node currentEpoch was too strict.We can accept a vote as long as its epoch is >= the epoch at which wenstarted the voting process. There is no need for it to be exactly thensame.n,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3066.0,239.0,0.07023148148148148,6233.0,15.238628872775214,2511.0,None,False,,
7970ebd80a735f6c73c8be1bda0e77f4bcc47a34,abe81781aeaeb0d7d3837df6c5cba71f0fae5161,antirez,antirez@gmail.com,Wed Oct 2 09:42:35 2013 +0200,1380699755,Cluster: FAIL messages from unknown senders are handled better.Previously the event was not logged but instead the node reported annunknown packet type received.n,16.0,10.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3066.0,240.0,0.6813310185185185,6234.0,2.4677153583501794,2512.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
abe81781aeaeb0d7d3837df6c5cba71f0fae5161,6c4d904baf7d5c8717cce04ec69fc491f710823a,antirez,antirez@gmail.com,Wed Oct 2 10:10:08 2013 +0200,1380701408,Cluster: bus messages stats in CLUSTER info.,11.0,1.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,12.0,2288.5,604.0,0.8812326388888889,6235.5,27.417994802598912,2514.0,None,False,,
6c4d904baf7d5c8717cce04ec69fc491f710823a,211dcbe339be00b84dcbbd8afdb6578ddc793df6,antirez,antirez@gmail.com,Wed Oct 2 12:27:12 2013 +0200,1380709632,Cluster: update cluster config when slave changes master.,3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3080.0,242.0,0.0951851851851852,6237.0,11.505836575875485,2515.0,None,False,,
211dcbe339be00b84dcbbd8afdb6578ddc793df6,7afc0dd59a7ac0a76b35d6589f83f4fce1f69a0f,antirez,antirez@gmail.com,Thu Oct 3 09:55:20 2013 +0200,1380786920,"Cluster: new clusterDoBeforeSleep() API.The new API is able to remember operations to perform before returningnto the event loop, such as checking if there is the failover quorum forna slave, save and fsync the configuraiton file, and so forth.nnBecause this operations are performed before returning on the eventnloop we are sure that messages that are sent in the same event loop runnwill be delivered *after* the configuration is already saved, that is anrequirement sometimes. For instance we want to publish a new epoch onlynwhen it is already stored in nodes.conf in order to avoid returning backnin the logical clock when a node is restarted.nnThis new API provides a big performance advantage compared to saving andnpossibly fsyncing the configuration file multiple times in the samenevent loop run, especially in the case of big clusters with tens ornhundreds of nodes.n",72.0,63.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3244974102355341,12.0,2295.0,607.0,0.9421296296296297,6238.5,1.8243046143884565,2517.0,None,False,,
7afc0dd59a7ac0a76b35d6589f83f4fce1f69a0f,37e06bd95262f69144aae7c85401a9e7d9411b3f,antirez,antirez@gmail.com,Fri Oct 4 12:25:09 2013 +0200,1380882309,"PSYNC: safer handling of PSYNC requests.There was a bug that over-esteemed the amount of backlog available,nhowever this could only happen when a slave was asking for an offsetnthat was in the future compared to the master replication backlog.nnNow this case is handled well and logged as an incident in the masternlog file.n",5.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1611.0,95.0,4.0256944444444445,6240.0,1.248404347076074,2518.0,None,False,,
347ab78e90c481e6273a8410beb73358603e8db0,4f9a69399bc2751f8fc658f998f895ddd280cf45,antirez,antirez@gmail.com,Mon Sep 30 11:53:18 2013 +0200,1380534798,Add REWRITE to CONFIG subcommands help message.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1796.0,119.0,0.0,6241.0,0.0,2519.0,Feature Addition,False,,
4f9a69399bc2751f8fc658f998f895ddd280cf45,d62ae1ec059942a39060a3dcb18fd171372a6100,antirez,antirez@gmail.com,Fri Oct 4 12:25:09 2013 +0200,1380882309,"PSYNC: safer handling of PSYNC requests.There was a bug that over-esteemed the amount of backlog available,nhowever this could only happen when a slave was asking for an offsetnthat was in the future compared to the master replication backlog.nnNow this case is handled well and logged as an incident in the masternlog file.n",5.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1615.0,96.0,0.0,6242.0,0.0,2520.0,None,False,,
37e06bd95262f69144aae7c85401a9e7d9411b3f,b41570f7193b3c3bd81a420cfa234512725a0700,antirez,antirez@gmail.com,Fri Oct 4 12:59:24 2013 +0200,1380884364,"Replication: fix master timeout.Since we started sending REPLCONF ACK from slaves to masters, thenlastinteraction field of the client structure is always refreshed asnsoon as there is room in the socket output buffer, so masters in timeoutnare detected with too much delay (the socket buffer takes a lot of timento be filled by small REPLCONF ACK <number> entries).nnThis commit only counts data received as interactions with a master,nsolving the issue.n",7.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1516.0,157.0,37.99951388888889,6243.0,1.0263161261200344,2521.0,None,False,,
d62ae1ec059942a39060a3dcb18fd171372a6100,6d8c2a484840b625353bb1252b35a61d5782f409,antirez,antirez@gmail.com,Fri Oct 4 12:59:24 2013 +0200,1380884364,"Replication: fix master timeout.Since we started sending REPLCONF ACK from slaves to masters, thenlastinteraction field of the client structure is always refreshed asnsoon as there is room in the socket output buffer, so masters in timeoutnare detected with too much delay (the socket buffer takes a lot of timento be filled by small REPLCONF ACK <number> entries).nnThis commit only counts data received as interactions with a master,nsolving the issue.n",7.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1522.0,158.0,0.0,6244.0,0.0,2522.0,None,False,,
b41570f7193b3c3bd81a420cfa234512725a0700,1461422ce66056eb79231e8240dde01db2260fa0,antirez,antirez@gmail.com,Fri Oct 4 16:12:25 2013 +0200,1380895945,"Replication: install the write handler when reusing a cached master.Sometimes when we resurrect a cached master after a successful partialnresynchronization attempt, there is pending data in the output buffersnof the client structure representing the master (likely REPLCONF ACKncommands).nnIf we don't reinstall the write handler, it will never be installednagain by addReply*() family functions as they'll assume that if there isnalready data pending, the write handler is already installed.nnThis bug caused some slaves after a successful partial sync to nevernsend REPLCONF ACK, and continuously being detected as timing out by thenmaster, with a disconnection / reconnection loop.n",10.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1619.0,97.0,0.15782407407407406,6245.0,7.33616896450572,2523.0,None,False,,
6d8c2a484840b625353bb1252b35a61d5782f409,0150c70b2bc50ab4d29680619115bd1629801f5d,antirez,antirez@gmail.com,Fri Oct 4 16:12:25 2013 +0200,1380895945,"Replication: install the write handler when reusing a cached master.Sometimes when we resurrect a cached master after a successful partialnresynchronization attempt, there is pending data in the output buffersnof the client structure representing the master (likely REPLCONF ACKncommands).nnIf we don't reinstall the write handler, it will never be installednagain by addReply*() family functions as they'll assume that if there isnalready data pending, the write handler is already installed.nnThis bug caused some slaves after a successful partial sync to nevernsend REPLCONF ACK, and continuously being detected as timing out by thenmaster, with a disconnection / reconnection loop.n",10.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1629.0,98.0,0.0,6246.0,0.0,2524.0,None,False,,
1461422ce66056eb79231e8240dde01db2260fa0,72f38cd70f680fcc8b6f952b2592404a80af46c9,antirez,antirez@gmail.com,Mon Oct 7 11:30:58 2013 +0200,1381138258,Cluster: slave nodes advertise master slots bitmap and configEpoch.,13.0,8.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3086.0,244.0,4.066412037037037,6247.0,1.2459170371551045,2525.0,None,False,,
72f38cd70f680fcc8b6f952b2592404a80af46c9,2c3301b9f539e3cab9f41d684eba3e12bbd0dadb,antirez,antirez@gmail.com,Mon Oct 7 15:44:58 2013 +0200,1381153498,Cluster: log message improved when FAIL is cleared from a slave node.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3091.0,245.0,0.1763888888888889,6248.0,6.669291338582678,2526.0,None,False,,
2c3301b9f539e3cab9f41d684eba3e12bbd0dadb,f7d6ad436681963f6bbada2552e67f2c5233495a,antirez,antirez@gmail.com,Mon Oct 7 16:07:13 2013 +0200,1381154833,Cluster: fix slave data age computation when master is still connected.,8.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3091.0,246.0,0.015451388888888891,6249.0,65.71910112359551,2527.0,None,False,,
f7d6ad436681963f6bbada2552e67f2c5233495a,ae2763f564589c1b68b085ad6f9e68f657ba93d7,antirez,antirez@gmail.com,Tue Oct 8 12:45:35 2013 +0200,1381229135,"Cluster: masters don't vote for a slave with stale config.When a slave requests our vote, the configEpoch he claims for its masternand the set of served slots must be greater or equal to the configEpochnof the nodes serving these slots in the current configuraiton of thenmaster granting its vote.nnIn other terms, masters don't vote for slaves having a stalenconfiguration for the slots they want to serve.n",19.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3098.0,247.0,0.8599768518518518,6250.0,2.1628219967161044,2528.0,None,False,,
0150c70b2bc50ab4d29680619115bd1629801f5d ae2763f564589c1b68b085ad6f9e68f657ba93d7,6fa9b1a420769e8cce2e337628b4f9ce730c2909,antirez,antirez@gmail.com,Tue Oct 8 13:04:33 2013 +0200,1381230273,Merge branch 'bettercluster' into unstable,,,,,,,,,,,,,,,Merge,False,,
6fa9b1a420769e8cce2e337628b4f9ce730c2909,929b6a44805e31936b607ac656455dd48298670d,antirez,antirez@gmail.com,Wed Oct 9 15:37:20 2013 +0200,1381325840,Cluster: cluster stuff moved from redis.h to cluster.h.,258.0,244.0,"src/Makefile.dep,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",7.0,1.0,1.0,1.6676490317443469,12.0,1496.0,1247.0,51.24488921957671,6254.0,1.00372870129847,2535.0,None,False,True,"[""d769cad4bf37ac913bf41d3b555b2b3d765dc829"", ""12d0195b3013aff008bb492cf59f31d823f024b0""]"
929b6a44805e31936b607ac656455dd48298670d,ba4242863351a1ba3794532844545860c77ba6f6,antirez,antirez@gmail.com,Wed Oct 9 16:18:33 2013 +0200,1381328313,Cluster: time switched from seconds to milliseconds.All the internal state of cluster involving time is now using mstime_tnand mstime() in order to use milliseconds resolution.nnAlso the clusterCron() function is called with a 10 hz frequency insteadnof 1 hz.nnThe cluster node_timeout must be also configured in milliseconds by thenuser in redis.conf.n,43.0,47.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.114658949607196,12.0,1910.2,1149.0,0.02862268518518519,6260.0,16.95471087747675,2540.0,None,False,True,"[""47815d38e0f39476494c5da8dcd90c9ba24aefd8""]"
ba4242863351a1ba3794532844545860c77ba6f6,e5864c73b646d7974baa86496fde00fdb0b898a7,antirez,antirez@gmail.com,Wed Oct 9 16:21:27 2013 +0200,1381328487,Cluster: example redis.conf updated from sec to ms for cluster-node-timeout.,3.0,3.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,114.0,93.0088425925926,6263.0,1.0107516658860094,1322.0,None,False,,
e5864c73b646d7974baa86496fde00fdb0b898a7,573c2fea91c6bf6e9007d8ccc98598b140f99c68,antirez,antirez@gmail.com,Wed Oct 9 16:29:14 2013 +0200,1381328954,"Cluster: clusterCron() freq is now 10h. Still ping 1 node every sec.After the change in clusterCron() frequency of call, we still want tonping just one random node every second.n",23.0,16.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3113.0,250.0,0.007418981481481481,6264.0,135.78939157566302,2541.0,None,False,,
573c2fea91c6bf6e9007d8ccc98598b140f99c68,1447d28c0f2659a7a3df769c8426a6ee8a5b4552,antirez,antirez@gmail.com,Wed Oct 9 16:36:00 2013 +0200,1381329360,Cluster: data_age conversion to milliseconds fixed.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3120.0,251.0,0.004699074074074074,6265.0,213.807881773399,2542.0,None,False,,
1447d28c0f2659a7a3df769c8426a6ee8a5b4552,0c9f60a628941cfc07ae65d5f7fc9ac754f47552,antirez,antirez@gmail.com,Fri Oct 11 10:34:32 2013 +0200,1381480472,Cluster: there is a lower limit for the handshake timeout.,9.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3120.0,252.0,1.7489814814814817,6266.0,1.5717613425803378,2543.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
0c9f60a628941cfc07ae65d5f7fc9ac754f47552,85f52ebcd85341485d3286b7f99cd03576abae1e,antirez,antirez@gmail.com,Fri Oct 11 17:33:19 2013 +0200,1381505599,Cluster: rough support for sub-command options in redis-trib.,51.0,15.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,755.0,62.0,16.196041666666666,6267.0,1.0617434815605664,2544.0,None,False,,
85f52ebcd85341485d3286b7f99cd03576abae1e,7f490b197ffbb27f0c655acb9aaf4adaa698d978,Pieter Noordhuis,pcnoordhuis@gmail.com,Mon Jul 9 01:00:26 2012 -0700,1341820826,Add SCAN command,251.0,0.0,"src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",6.0,2.0,2.0,1.6764354601112958,12.0,1177.6666666666667,948.0,-426.7627160493828,951.5,0.9990730584901631,162.0,Feature Addition,False,True,"[""b63fbea5e4b86e21ce80f20d2649b407f5741495"", ""43fdf3b404413f6e3b2c39ac491238c70ecee81c"", ""8fc85a1218e76e26620ba6c19aaf5a5f5bf5d3ce"", ""8d93f924ea44c4139d690a914af662b6f059709a""]"
7f490b197ffbb27f0c655acb9aaf4adaa698d978,7a6cfb18f31b18303e822ce3ad887fdf8c2138e9,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Jul 10 15:51:43 2012 -0700,1341960703,SCAN requires at least 1 argument,3.0,1.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,2017.5,514.0,1.6189467592592592,955.5,1.463264153506295,434.0,None,False,,
7a6cfb18f31b18303e822ce3ad887fdf8c2138e9,b63fbea5e4b86e21ce80f20d2649b407f5741495,Pieter Noordhuis,pcnoordhuis@gmail.com,Tue Apr 23 10:02:36 2013 -0700,1366736556,Fix error in scan algorithmThe irrelevant bits shouldn't be masked to 1. This can result in slots beingnskipped when the hash table is resized between calls to the iterator.n,0.0,8.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,948.0,31.0,288.3765046296296,957.0,1.003467688885696,435.0,Corrective,True,,
b63fbea5e4b86e21ce80f20d2649b407f5741495,9c88ace9274d3291119204c98a1dc31384abcb56,antirez,antirez@gmail.com,Fri Oct 25 11:45:32 2013 +0200,1382694332,SCAN option name changed: pattern -> match.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,918.0,101.0,471.45403935185203,6268.0,1.002121097533441,2545.0,None,False,,
9c88ace9274d3291119204c98a1dc31384abcb56,43fdf3b404413f6e3b2c39ac491238c70ecee81c,antirez,antirez@gmail.com,Fri Oct 25 11:45:56 2013 +0200,1382694356,Fixed typo in SCAN comment. iff -> if.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,918.0,102.0,0.00027777777777777783,6269.0,3601.0,2546.0,Corrective,True,True,"[""df13adb037cfdd590ec5a833c1b22b043fe6affb""]"
43fdf3b404413f6e3b2c39ac491238c70ecee81c,64722b0946716a524528462379416ed212c971f2,antirez,antirez@gmail.com,Fri Oct 25 11:48:18 2013 +0200,1382694498,SCAN: use define REDIS_LONGSTR_SIZE instead of fixed len.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,918.0,103.0,0.0016435185185185185,6270.0,609.4507042253521,2547.0,None,False,,
64722b0946716a524528462379416ed212c971f2,6e55e543c6424eb6d5e4942a10a57a18dd58379a,antirez,antirez@gmail.com,Fri Oct 25 11:49:08 2013 +0200,1382694548,"SCAN: remove useless assertion, already enforced by command table.",0.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,918.0,104.0,0.0005787037037037037,6271.0,1729.0,2548.0,None,False,,
6e55e543c6424eb6d5e4942a10a57a18dd58379a,908eba5a8fd88354e9254cc312b0013ccf60121c,antirez,antirez@gmail.com,Fri Oct 25 11:51:08 2013 +0200,1382694668,SCAN: remove additional newlines to conform to Redis code base.,0.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,916.0,105.0,0.0013888888888888892,6272.0,721.0,2549.0,None,False,,
908eba5a8fd88354e9254cc312b0013ccf60121c,fd1b0ad07c945954b35a2577b113ddc03da67744,antirez,antirez@gmail.com,Fri Oct 25 11:54:37 2013 +0200,1382694877,SCAN: improve variable names for readability.,13.0,13.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,913.0,106.0,0.0024189814814814816,6273.0,414.39712918660285,2550.0,None,False,,
fd1b0ad07c945954b35a2577b113ddc03da67744,0471b908448682d7a9b19cdede6056648cdfd631,antirez,antirez@gmail.com,Fri Oct 25 11:55:28 2013 +0200,1382694928,SCAN: Fix test after option renamed from PATTERN to MATCH.,2.0,2.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,818.0,27.0,473.07988425925925,6274.0,1.002113807907021,371.0,None,False,,
0471b908448682d7a9b19cdede6056648cdfd631,a25fe0b28d72b715300d96dcd9fa687e31030da2,antirez,antirez@gmail.com,Fri Oct 25 11:58:03 2013 +0200,1382695083,SCAN: simplify keys list cleanup using listSetFreeMethod().,1.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,913.0,107.0,0.002384259259259259,6275.0,420.41747572815535,2551.0,None,False,,
a25fe0b28d72b715300d96dcd9fa687e31030da2,df13adb037cfdd590ec5a833c1b22b043fe6affb,antirez,antirez@gmail.com,Fri Oct 25 12:00:13 2013 +0200,1382695213,Revert Fixed typo in SCAN comment. iff -> if.Probably here Pieter means if and only if.nnThis reverts commit 43fdf3b404413f6e3b2c39ac491238c70ecee81c.n,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,909.0,108.0,0.0015046296296296294,6276.0,665.6153846153846,2552.0,Corrective,True,,
df13adb037cfdd590ec5a833c1b22b043fe6affb,48ea8a0a11d6525c2edcde23863bffc735f9ad31,antirez,antirez@gmail.com,Fri Oct 25 12:01:49 2013 +0200,1382695309,SCAN: stay inside 80 cols.,5.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,909.0,109.0,0.0011111111111111113,6277.0,901.0,2553.0,None,False,True,"[""8fc85a1218e76e26620ba6c19aaf5a5f5bf5d3ce""]"
48ea8a0a11d6525c2edcde23863bffc735f9ad31,34c207227c3700149bb7cb0d894a4c3c5980cdf7,antirez,antirez@gmail.com,Fri Oct 25 17:01:30 2013 +0200,1382713290,dictScan() algorithm documented.,84.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,940.0,32.0,184.91590277777772,6278.0,1.0054078637098172,2554.0,Non Functional,False,True,"[""7bd45659b9e7dc9efc4e939e211971be2f9ee528"", ""fc8f7ec7656487b8f7dea14d33dbdbb2c6b6f470""]"
34c207227c3700149bb7cb0d894a4c3c5980cdf7,7bd45659b9e7dc9efc4e939e211971be2f9ee528,antirez,antirez@gmail.com,Fri Oct 25 17:05:55 2013 +0200,1382713555,Fixed typos in dictScan() comment.,2.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1024.0,33.0,0.0030671296296296297,6279.0,327.0377358490566,2555.0,Corrective,True,,
7bd45659b9e7dc9efc4e939e211971be2f9ee528,442ae833b217dd986ebd1677fb9cc0c1fdfe84a6,antirez,antirez@gmail.com,Mon Oct 28 11:11:34 2013 +0100,1382955094,"SCAN: refactored into scanGenericCommand.The new implementation is capable of iterating the keyspace but alsonsets, hashes, and sorted sets, and can be used to implement SSCAN, ZSCANnand HSCAN.n",126.0,14.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,912.0,110.0,3.0067708333333334,6280.0,1.33258271262775,2556.0,None,False,True,"[""8fc85a1218e76e26620ba6c19aaf5a5f5bf5d3ce"", ""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
442ae833b217dd986ebd1677fb9cc0c1fdfe84a6,cd8cb49dc4ed54a059ee10fba22df2b1e1c059f4,antirez,antirez@gmail.com,Mon Oct 28 11:13:43 2013 +0100,1382955223,"SCAN is a random command and does not require output sorting.Sorting the output helps when we want to turn a non-deterministic into andeterministic command, in that case this is not possible.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3119.0,415.0,474.4736111111112,6281.0,1.0021075987717385,2557.0,None,False,,
cd8cb49dc4ed54a059ee10fba22df2b1e1c059f4,dfeaa84d462a93070ee63ec87278a30d3105fa8d,antirez,antirez@gmail.com,Mon Oct 28 11:17:18 2013 +0100,1382955438,dictScan(): empty hash table requires special handling.,2.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1024.0,34.0,2.79957175925926,6282.0,1.3571974880417392,2558.0,None,False,,
dfeaa84d462a93070ee63ec87278a30d3105fa8d,4a1f1cc0d74bc58dc5b2514bfda7fc445a4cb446,antirez,antirez@gmail.com,Mon Oct 28 11:17:32 2013 +0100,1382955452,SSCAN implemented.,13.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",3.0,1.0,1.0,1.3787834934861756,12.0,1737.333333333333,817.0,328.56673225308634,6284.0,126.76523044499676,2561.0,None,False,,
4a1f1cc0d74bc58dc5b2514bfda7fc445a4cb446,e50090aa06c21ce039df39211b62183217b7f648,antirez,antirez@gmail.com,Mon Oct 28 11:32:34 2013 +0100,1382956354,HSCAN implemented.,11.0,1.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",4.0,1.0,1.0,1.4182958340544896,12.0,1561.75,928.0,127.41206018518518,6287.5,35.183705338558305,2565.0,None,False,True,"[""9b2d44e63fb36096750664072b68d1f2002df3ac""]"
e50090aa06c21ce039df39211b62183217b7f648,2c643ffa8d08daa06dd7abc7a07223851115a58a,antirez,antirez@gmail.com,Mon Oct 28 11:36:42 2013 +0100,1382956602,ZSCAN implemented.,10.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.9219280948873624,12.0,2224.0,873.0,24.294803240740727,6291.0,175.19812183887612,2568.0,None,False,True,"[""9b2d44e63fb36096750664072b68d1f2002df3ac""]"
2c643ffa8d08daa06dd7abc7a07223851115a58a,9b2d44e63fb36096750664072b68d1f2002df3ac,antirez,antirez@gmail.com,Mon Oct 28 13:20:03 2013 +0100,1382962803,Aesthetic fix (missing space) into HSCAN and ZSCAN implementations.Thanks to @badboy for reporting.n,2.0,2.0,"src/t_hash.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1492.5,118.0,0.07320601851851853,6293.5,11.113732741602245,2570.0,Corrective,True,,
9b2d44e63fb36096750664072b68d1f2002df3ac,3c7a0677b0f226ba09c9c68c6902b9cca864088d,antirez,antirez@gmail.com,Mon Oct 28 18:13:39 2013 +0100,1382980419,redis-benchmark: update help for new __rand_int__ form.,5.0,6.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,795.0,43.0,81.1052199074074,6295.0,1.0123296626424494,2571.0,None,False,,
3c7a0677b0f226ba09c9c68c6902b9cca864088d,a881827b6ed3db807fb0d4a7f60765d34600aec2,antirez,antirez@gmail.com,Wed Oct 30 11:34:01 2013 +0100,1383129241,SCAN: tests moved to unit/scan.tcl.,56.0,54.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/scan.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.0655532647911723,12.0,439.66666666666674,111.0,22.28903163580247,6297.0,1.0153602520511875,374.0,None,False,,
a881827b6ed3db807fb0d4a7f60765d34600aec2,5fdb94fd98dcd9e4a73bcf24b03c97923058a0d1,antirez,antirez@gmail.com,Wed Oct 30 11:36:12 2013 +0100,1383129372,SCAN test keys sorting turned into more idiomatic Tcl.,6.0,6.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,55.0,1.0,0.0015162037037037034,6299.0,660.5419847328244,375.0,Preventative,False,,
5fdb94fd98dcd9e4a73bcf24b03c97923058a0d1,ddc80e026f27e217e53f5051df0c6f787edea484,antirez,antirez@gmail.com,Wed Oct 30 11:58:04 2013 +0100,1383130684,Test: added SSCAN test.,34.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,55.0,2.0,0.015185185185185184,6300.0,66.85365853658537,376.0,Preventative,False,,
ddc80e026f27e217e53f5051df0c6f787edea484,1b960378e8a78996d373e9e5744c3d21aa4f629e,antirez,antirez@gmail.com,Wed Oct 30 16:24:39 2013 +0100,1383146679,Test: added HSCAN test.,40.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,89.0,3.0,0.1851273148148148,6301.0,6.401688027508596,377.0,Preventative,False,,
1b960378e8a78996d373e9e5744c3d21aa4f629e,6cb52256c9b1e52858ae9d3e90821612fa9223ba,antirez,antirez@gmail.com,Wed Oct 30 16:25:47 2013 +0100,1383146747,Test: added ZSCAN test.,40.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,129.0,4.0,0.000787037037037037,6302.0,1271.5882352941173,378.0,Preventative,False,,
6cb52256c9b1e52858ae9d3e90821612fa9223ba,0b8a0ca4bcd45cc0ba89261e427612be118dd18a,antirez,antirez@gmail.com,Wed Oct 30 16:50:25 2013 +0100,1383148225,Test: added a SCAN test trying to trigger HT resize.,29.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,169.0,5.0,0.017106481481481483,6303.0,59.4573748308525,379.0,Preventative,False,,
0b8a0ca4bcd45cc0ba89261e427612be118dd18a,e6bb738b873e9922437c918426dd3c7b18968552,antirez,antirez@gmail.com,Thu Oct 31 09:43:21 2013 +0100,1383209001,Regression test added for [SHZ]SCAN issue #1354.,8.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,198.0,6.0,0.7034259259259259,6304.0,2.421613794919047,380.0,Feature Addition,False,,
e6bb738b873e9922437c918426dd3c7b18968552,8fc85a1218e76e26620ba6c19aaf5a5f5bf5d3ce,antirez,antirez@gmail.com,Thu Oct 31 10:32:33 2013 +0100,1383211953,scanGenericCommand() refactoring and handling of integer encoded elements.This commit fixes issue #1354.n,21.0,8.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1024.0,112.0,2.9583217592592583,6305.0,1.3380294915081827,2572.0,Corrective,True,,
8fc85a1218e76e26620ba6c19aaf5a5f5bf5d3ce,c4ca5f99bf4ce0c2424b870128c3f398f8675b36,antirez,antirez@gmail.com,Thu Oct 31 10:35:56 2013 +0100,1383212156,Inverted variable boolean value and name after scanGenericCommand() refactoring.,5.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1037.0,113.0,0.002349537037037037,6306.0,426.615763546798,2573.0,None,False,,
c4ca5f99bf4ce0c2424b870128c3f398f8675b36,9fba193a5995208f911b7184017df780d155c685,antirez,antirez@gmail.com,Thu Oct 31 10:37:27 2013 +0100,1383212247,SSCAN with integer encoded object test improved.,2.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,206.0,7.0,0.03756944444444445,6307.0,27.617375231053604,381.0,Preventative,False,,
9fba193a5995208f911b7184017df780d155c685,6cf230ea91619f1a90f1df2ffd0de023458bf9e5,antirez,antirez@gmail.com,Tue Nov 5 11:24:24 2013 +0100,1383647064,Initial support for --replicas in redis-trib.,109.0,14.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,791.0,63.0,24.78547453703704,6308.0,1.0403462115887956,2574.0,Feature Addition,False,True,"[""b55f742e46a755e96c92eded47d9c69327f774e8""]"
6cf230ea91619f1a90f1df2ffd0de023458bf9e5,20fb91fd31e1de9ca687e302f0f05d229713c9ed,antirez,antirez@gmail.com,Tue Nov 5 11:56:11 2013 +0100,1383648971,removed not used vars in dictScan().,0.0,3.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1026.0,35.0,8.027002314814817,6309.0,1.1245795081128078,2575.0,None,False,,
20fb91fd31e1de9ca687e302f0f05d229713c9ed,eb95d288984d19fe7caf259708f4b8770662b2e7,antirez,antirez@gmail.com,Tue Nov 5 11:57:30 2013 +0100,1383649050,Pass int64_t to intsetGet() instead of long long.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1038.0,114.0,5.056643518518519,6310.0,1.19775963963799,2576.0,None,False,,
eb95d288984d19fe7caf259708f4b8770662b2e7,1a0cea33a046324a16846f0abadcff9f61e67d10,antirez,antirez@gmail.com,Tue Nov 5 12:01:07 2013 +0100,1383649267,Cluster: initialize senderConfigEpoch and senderCurrentEpoch for warnings suppression.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3128.0,253.0,25.10179398148148,6311.0,1.039837790109254,2577.0,None,False,,
1a0cea33a046324a16846f0abadcff9f61e67d10,f56f78d15932ea219cfe62e7d07f17034b11a504,antirez,antirez@gmail.com,Tue Nov 5 12:16:29 2013 +0100,1383650189,HSCAN/ZSCAN: skip value when matching.This fixes issue #1360 and #1362.n,9.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1038.0,115.0,0.01318287037037037,6312.0,76.85601404741,2578.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
f56f78d15932ea219cfe62e7d07f17034b11a504,bf79c0cda240f7cad95955de9e4119bc24f50d80,antirez,antirez@gmail.com,Tue Nov 5 15:19:44 2013 +0100,1383661184,Added tests for [SHZ]SCAN with MATCH.,21.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,208.0,8.0,5.196030092592593,6313.0,1.1924546205815072,382.0,Feature Addition,False,,
bf79c0cda240f7cad95955de9e4119bc24f50d80,101d4bf86724faf9a5abb251f6cc212546cc6c65,antirez,antirez@gmail.com,Tue Nov 5 15:30:21 2013 +0100,1383661821,Use strtoul() instead of sscanf() in SCAN implementation.,7.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1043.0,116.0,0.13462962962962965,6314.0,8.427785419532324,2579.0,None,False,,
101d4bf86724faf9a5abb251f6cc212546cc6c65,b4048dfec07eba76304140241f6c923271f7b396,antirez,antirez@gmail.com,Tue Nov 5 15:32:21 2013 +0100,1383661941,"SCAN: when iterating ziplists or intsets always return cursor of 0.The previous implementation assumed that the first call always happensnwith cursor set to 0, this may not be the case, and we want to return 0nanyway otherwise the (broken) client code will loop forever.n",2.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1046.0,117.0,0.0013888888888888892,6315.0,721.0,2580.0,None,False,,
b4048dfec07eba76304140241f6c923271f7b396,ebcb6251e6311622edb7dc1100a9c7cadb8842e8,antirez,antirez@gmail.com,Tue Nov 5 15:47:50 2013 +0100,1383662870,"SCAN code refactored to parse cursor first.The previous implementation of SCAN parsed the cursor in the genericnfunction implementing SCAN, SSCAN, HSCAN and ZSCAN.nnThe actual higher-level command implementation only checked for emptynkeys and return ASAP in that case. The result was that inverting thenarguments of, for instance, SSCAN for example and write:nnSSCAN 0 keynnInstead ofnnSSCAN key 0nnResulted into no error, since 0 is a non-existing key name very likely.nJust the iterator returned no elements at all.nnIn order to fix this issue the code was refactored to extract thenfunction to parse the cursor and return the error. Every higher levelncommand implementation now parses the cursor and later checks if the keynexist or not.n",35.0,18.0,"src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",5.0,1.0,1.0,1.4227103977137705,12.0,1227.6,643.0,6.515622685185184,6318.0,19.65167002675934,2585.0,None,False,True,"[""5fd6dee0e633cc3c2f4cb6f33741e6cb1eed9653""]"
ebcb6251e6311622edb7dc1100a9c7cadb8842e8,5fd6dee0e633cc3c2f4cb6f33741e6cb1eed9653,antirez,antirez@gmail.com,Tue Nov 5 17:23:11 2013 +0100,1383668591,Fixed typo in parseScanCursorOrReply(): ad -> at.Thanks to @badboy for reporting it.n,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1058.0,119.0,0.06621527777777778,6321.0,16.102254850550597,2586.0,Corrective,True,,
5fd6dee0e633cc3c2f4cb6f33741e6cb1eed9653,ae8642fb79867ef7a6a672567e66a43dab94fcbc,Ryan Biesemeyer,ryan@simplymeasured.com,Wed Nov 6 08:31:57 2013 +0000,1383726717,Deprecate utils/redis-copy.rb in favor of redis-copy gem,12.0,55.0,"utils/redis-copy.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,78.0,2.0,1170.0152314814816,0.0,0.0,0.0,None,False,,
5fd6dee0e633cc3c2f4cb6f33741e6cb1eed9653 ae8642fb79867ef7a6a672567e66a43dab94fcbc,b5ec3ede7a9714e32f08ef9b9c13dbcf3612c738,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 6 00:42:03 2013 -0800,1383727323,Merge pull request #1365 from yaauie/deprecate-redis-copy-scriptDeprecate utils/redis-copy.rb in favor of redis-copy gem,,,,,,,,,,,,,,,Merge,False,,
ebcb6251e6311622edb7dc1100a9c7cadb8842e8,671c1dfb5629e32f3addfe865e5e5a04f35b007d,antirez,antirez@gmail.com,Tue Nov 5 17:23:11 2013 +0100,1383668591,"Sentinel: always send CONFIG REWRITE when changing instance role.This change makes Sentinel less fragile about a number of failure modes.nnThis commit also fixes a different bug as a side effect, SLAVEOF commandnwas sent multiple times without incrementing the pending commands count.n",41.0,25.0,"src/db.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.19590927087360493,12.0,2111.0,163.0,20.149270833333333,6322.5,0.5124073968764379,2588.0,None,False,,
671c1dfb5629e32f3addfe865e5e5a04f35b007d,23800d9e496a582760a35573cb33e0431d077808,antirez,antirez@gmail.com,Wed Nov 6 11:21:44 2013 +0100,1383733304,Sentinel: increment pending_commands counter in two more places.AUTH and SCRIPT KILL were sent without incrementing the pending commandsncounter. Clearly this needs some kind of wrapper doing it for the callernin order to be less bug prone.n,8.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3180.0,44.0,0.7489930555555555,6324.0,2.3351258634277503,2589.0,None,False,,
23800d9e496a582760a35573cb33e0431d077808,80da056c291108e13ab96ec281e8f541e6a21c68,antirez,antirez@gmail.com,Wed Nov 6 11:23:49 2013 +0100,1383733429,Sentinel: sentinelSendSlaveOf() was missing a var and the prototype.,2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3183.0,45.0,0.0014467592592592592,6325.0,692.2,2590.0,None,False,,
80da056c291108e13ab96ec281e8f541e6a21c68 b5ec3ede7a9714e32f08ef9b9c13dbcf3612c738,e1a1d904dec30ccec2ee17d634d97b72f1b23fb0,antirez,antirez@gmail.com,Wed Nov 6 11:30:44 2013 +0100,1383733844,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e1a1d904dec30ccec2ee17d634d97b72f1b23fb0,d75ab87226cfaf80a6aa83c7ec9fe9a55316984d,antirez,antirez@gmail.com,Thu Nov 7 16:12:06 2013 +0100,1383837126,redis-trib: fixed slot allocation when --replicas is used.,2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,886.0,64.0,2.1997916666666666,6326.0,1.4545885026991192,2591.0,None,False,,
d75ab87226cfaf80a6aa83c7ec9fe9a55316984d,d3588dc1943277b698f4cad284c9f88dda8dd8fc,antirez,antirez@gmail.com,Thu Nov 7 23:53:18 2013 +0100,1383864798,Fix broken rdbWriteRaw() return value check in rdb.c.Thanks to @PhoneLi for reporting.n,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1199.0,95.0,72.60922453703705,6327.0,1.0137723547713955,2592.0,Corrective,True,,
d3588dc1943277b698f4cad284c9f88dda8dd8fc,6c6572be9575914d43cc2011563c7726d2a1df48,antirez,antirez@gmail.com,Fri Nov 8 10:32:16 2013 +0100,1383903136,Cluster: refactoring of slots update code and more.The commit also introduces detection of nodes publishing not updatednconfiguration. More work in progress to send an UPDATE packet to informnof the config change.n,101.0,57.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3128.0,254.0,2.938298611111111,6328.0,1.340333006393061,2593.0,None,False,,
6c6572be9575914d43cc2011563c7726d2a1df48,dc43f66eacb0e5d5957f05c5974d016e7351b2d2,antirez,antirez@gmail.com,Fri Nov 8 16:26:50 2013 +0100,1383924410,Cluster: UPDATE msg data structure and sending function.,36.0,3.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.9418285354475155,12.0,1676.5,257.0,15.146822916666665,6329.5,3.0471528504508565,2595.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
dc43f66eacb0e5d5957f05c5974d016e7351b2d2,94a07d59019ee9aea583bc9eebed0818dc597c79,antirez,antirez@gmail.com,Fri Nov 8 17:02:10 2013 +0100,1383926530,Cluster: slots update refactored + UPDATE msg processing.Now there is a function that handles the update of the local slotnconfiguration every time we have some new info about a node and its setnof served slots and configEpoch.nnMoreoever the UPDATE packets are now processed when received (it was anwork in progress in the previous commit).n,103.0,65.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3193.0,256.0,0.02453703703703704,6331.0,41.75471698113208,2596.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0"", ""e0f22df9950b584569771d486fd4e933432fe395""]"
94a07d59019ee9aea583bc9eebed0818dc597c79,d289c628b1130988c69b55fd65d23fdbe385396b,antirez,antirez@gmail.com,Fri Nov 8 17:19:19 2013 +0100,1383927559,Cluster: replace hardcoded 4096 for bus msg len with sizeof().,7.0,7.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3231.0,257.0,0.011909722222222223,6332.0,84.96501457725947,2597.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
d289c628b1130988c69b55fd65d23fdbe385396b,28071caf3841085cbadcf151fdcff42b17f8cd38,antirez,antirez@gmail.com,Fri Nov 8 17:25:49 2013 +0100,1383927949,Cluster: send a single UPDATE packet for now.,5.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3231.0,258.0,0.004513888888888889,6333.0,222.5384615384616,2598.0,None,False,,
28071caf3841085cbadcf151fdcff42b17f8cd38,a5e7358a120bf6f1a2c7b928584555483fceb6f4,antirez,antirez@gmail.com,Fri Nov 8 17:27:59 2013 +0100,1383928079,Cluster: removed not needed newline at end of redisLog() msg.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3236.0,259.0,0.0015046296296296294,6334.0,665.6153846153846,2599.0,None,False,,
a5e7358a120bf6f1a2c7b928584555483fceb6f4,b2f834390ce6adc5763e91e8c49cf1b85fe348a3,antirez,antirez@gmail.com,Mon Nov 11 09:25:36 2013 +0100,1384158336,Log to what master a slave is going to connect to.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1639.0,99.0,37.75915509259259,6335.0,1.0264836434382023,2600.0,None,False,,
b2f834390ce6adc5763e91e8c49cf1b85fe348a3,b93b0adc89fff22349623b9fec9d1b9aeb0d1f12,antirez,antirez@gmail.com,Mon Nov 11 11:05:58 2013 +0100,1384164358,"Sentinel: epoch introduced.Sentinel state now includes the idea of current epoch and config epoch.nIn the Hello message, that is now published both on masters and slaves,na Sentinel no longer just advertises itself but also broadcasts itsncurrent view of the configuration: the master name / ip / port and itsncurrent epoch.nnSentinels receiving such information switch to the new master if thenconfiguration epoch received is newer and the ip / port of the masternare indeed different compared to the previos ones.n",62.0,25.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3184.0,46.0,4.987604166666666,6336.0,1.2004970656419038,2601.0,None,False,,
b93b0adc89fff22349623b9fec9d1b9aeb0d1f12,9e1b27d49ea362bf97fca51734c9628289b4fb50,antirez,antirez@gmail.com,Mon Nov 11 12:05:16 2013 +0100,1384167916,Sentinel: remove code not useful in the new design.,33.0,138.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3221.0,47.0,0.04118055555555555,6337.0,25.283305227655987,2602.0,None,False,,
9e1b27d49ea362bf97fca51734c9628289b4fb50,0bac36d0a1832453df156e7e7493aa0ad17baf0d,antirez,antirez@gmail.com,Mon Nov 11 17:10:28 2013 +0100,1384186228,"Sentinel: handle Hello messages received via slaves correctly.Even when messages are received via the slave, we should performnoperations (like adding a new Sentinel) in the context of the master.n",17.0,14.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3116.0,48.0,0.21194444444444446,6338.0,5.718217562254258,2603.0,None,False,,
0bac36d0a1832453df156e7e7493aa0ad17baf0d,8c1bf9a2bdf2059a13f614a924ff226c86aa4b79,antirez,antirez@gmail.com,Mon Nov 11 18:30:11 2013 +0100,1384191011,"Sentinel: leadership handling changes WIP.Changes to leadership handling.nnNow the leader gets selected by every Sentinel, for a specified epoch,nwhen the SENTINEL is-master-down-by-addr is sent.nnThis command now includes the runid and the currentEpoch of the instancenseeking for a vote. The Sentinel only votes a single time in a givennepoch.nnStill a work in progress, does not even compile at this stage.n",80.0,57.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3119.0,49.0,0.055358796296296295,6339.0,19.06397658373405,2604.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
8c1bf9a2bdf2059a13f614a924ff226c86aa4b79,90ab62fd5e3a7cfe82919d47376dda1a7366e519,antirez,antirez@gmail.com,Tue Nov 12 11:09:35 2013 +0100,1384250975,Sentinel: epoch introduced in leader vote.,67.0,146.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3142.0,50.0,0.6940277777777778,6340.0,2.4408645187112272,2605.0,None,False,,
90ab62fd5e3a7cfe82919d47376dda1a7366e519,b6b65b29c0f5021f2f7845e53ebc1641f2de1615,antirez,antirez@gmail.com,Tue Nov 12 11:10:10 2013 +0100,1384251010,Sentinel: fix PUBLISH to masters and slaves.,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3063.0,51.0,0.00040509259259259264,6341.0,2469.5714285714284,2606.0,None,False,,
b6b65b29c0f5021f2f7845e53ebc1641f2de1615,ab4b2ec88f192ea894bcf9ce3a7ba2c1a5765aff,antirez,antirez@gmail.com,Tue Nov 12 11:32:40 2013 +0100,1384252360,Sentinel: allow to vote for myself.,3.0,23.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3063.0,52.0,0.015625,6342.0,65.0,2607.0,None,False,,
ab4b2ec88f192ea894bcf9ce3a7ba2c1a5765aff,54c447be52d89389f31c0794690f51db27d88cd5,antirez,antirez@gmail.com,Tue Nov 12 13:30:31 2013 +0100,1384259431,Sentinel: wait some time between failover attempts.,7.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3043.0,53.0,0.08184027777777778,6343.0,13.218922358930845,2608.0,None,False,,
54c447be52d89389f31c0794690f51db27d88cd5,e6b9d5e97ead58ce819d33edfbfce55ffdd63568,antirez,antirez@gmail.com,Tue Nov 12 13:35:25 2013 +0100,1384259725,Sentinel: +new-epoch events.,14.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3048.0,54.0,0.003402777777777777,6344.0,294.8775510204082,2609.0,None,False,,
e6b9d5e97ead58ce819d33edfbfce55ffdd63568,4a128b949df68d24517e3692b456b460377b7790,antirez,antirez@gmail.com,Tue Nov 12 16:38:02 2013 +0100,1384270682,Sentinel: when starting failover seek for votes ASAP.,16.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3057.0,55.0,0.12681712962962965,6345.0,8.885370083051932,2610.0,None,False,,
4a128b949df68d24517e3692b456b460377b7790,d2bc6dc39a50a412234ed05147b1e92e68fbe8aa,antirez,antirez@gmail.com,Tue Nov 12 17:07:31 2013 +0100,1384272451,"Sentinel: new failover algo, desync slaves and update config epoch.",21.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3064.0,56.0,0.02047453703703704,6346.0,49.841153193894854,2611.0,None,False,,
d2bc6dc39a50a412234ed05147b1e92e68fbe8aa,24158d1488654cd5bfd2a66ab49ff7c8d0f4ad96,antirez,antirez@gmail.com,Tue Nov 12 17:21:48 2013 +0100,1384273308,Sentinel: added config-epoch to SENTINEL masters output.,4.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3084.0,57.0,0.009918981481481482,6347.0,101.81680280046676,2612.0,None,False,,
24158d1488654cd5bfd2a66ab49ff7c8d0f4ad96,dfa5f8b777cefdfcdad3665dd1eade734022636b,antirez,antirez@gmail.com,Tue Nov 12 23:00:14 2013 +0100,1384293614,Sentinel: change event name when converting master to slave.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3088.0,58.0,0.2350231481481481,6348.0,5.254900029547917,2613.0,None,False,,
dfa5f8b777cefdfcdad3665dd1eade734022636b,1569af1f2390fa746e8ad363949cfc23a3407199,antirez,antirez@gmail.com,Tue Nov 12 23:07:33 2013 +0100,1384294053,Sentinel: receive Pub/Sub messages from slaves.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3088.0,59.0,0.0050810185185185186,6349.0,197.81093394077442,2614.0,None,False,,
1569af1f2390fa746e8ad363949cfc23a3407199,6bd4f6bffe96878cee454ade8595aae3e2913477,antirez,antirez@gmail.com,Wed Nov 13 10:30:45 2013 +0100,1384335045,Sentinel: sentinelResetMaster() new flag to avoid removing set of sentinels.This commit also removes some dead code and cleanup generic flags.n,14.0,22.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3088.0,60.0,0.4744444444444445,6350.0,3.1077283372365336,2615.0,None,False,,
6bd4f6bffe96878cee454ade8595aae3e2913477,ae35b7e2405c8e68298d658f6793d545e3dc03ad,antirez,antirez@gmail.com,Wed Nov 13 13:01:11 2013 +0100,1384344071,Sentinel: readd slaves back after a master reset.,44.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3080.0,61.0,0.1044675925925926,6351.0,10.572346554398404,2616.0,None,False,,
ae35b7e2405c8e68298d658f6793d545e3dc03ad,9e40c46f5e2e4799f072cb91ab7e5af46cccdc18,antirez,antirez@gmail.com,Wed Nov 13 13:43:59 2013 +0100,1384346639,Sentinel: fix no-down check in master->slave conversion code.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3124.0,62.0,0.029722222222222226,6352.0,34.64485981308411,2617.0,None,False,,
9e40c46f5e2e4799f072cb91ab7e5af46cccdc18,46a053d34bedeccba7523fb4756aab7245e86da3,antirez,antirez@gmail.com,Wed Nov 13 16:18:23 2013 +0100,1384355903,Sentinel: track role change time. Wait before reconfigurations.,24.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3124.0,63.0,0.10722222222222222,6353.0,10.326424870466322,2618.0,None,False,,
46a053d34bedeccba7523fb4756aab7245e86da3,17718fdcbae91bb47a370962fd87e660f5452b06,antirez,antirez@gmail.com,Wed Nov 13 16:21:58 2013 +0100,1384356118,Sentinel: make sure role_reported is always updated.,10.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3147.0,64.0,0.002488425925925926,6354.0,402.86046511627904,2619.0,None,False,,
17718fdcbae91bb47a370962fd87e660f5452b06,a0afa66f4b3353072879cf87bcc8cc1129a812ac,antirez,antirez@gmail.com,Wed Nov 13 16:28:52 2013 +0100,1384356532,Sentinel: being a master and reporting as slave is considered SDOWN.,12.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3148.0,65.0,0.0047916666666666646,6355.0,209.69565217391303,2620.0,None,False,,
a0afa66f4b3353072879cf87bcc8cc1129a812ac,ddaad9fe2d9100f9ccbd6aa3515157ecbf7e413e,antirez,antirez@gmail.com,Wed Nov 13 16:36:40 2013 +0100,1384357000,Sentinel: role reporting fixed and added in SENTINEL output.,13.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3158.0,66.0,0.005416666666666667,6356.0,185.61538461538456,2621.0,None,False,,
ddaad9fe2d9100f9ccbd6aa3515157ecbf7e413e,76a88f56e5799140d316aaaaabd51b23b2461826,antirez,antirez@gmail.com,Wed Nov 13 17:02:09 2013 +0100,1384358529,"Sentinel: safer slave reconfig, master reported role should match.",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3167.0,67.0,0.01769675925925926,6357.0,57.507521255722686,2622.0,None,False,,
76a88f56e5799140d316aaaaabd51b23b2461826,8297745fa6dab7a9a73964ab2ee2c8eca17bd41a,antirez,antirez@gmail.com,Wed Nov 13 17:03:42 2013 +0100,1384358622,Sentinel: redirect-to-master is not ok with new algorithm.Now Sentinel believe the current configuration is always the winner andnshould be applied by Sentinels instead of trying to adapt our view ofnthe cluster based on what we observe.nnSo the only way to modify what a Sentinel believe to be the truth is tonwin an election and advertise the new configuration via Pub / Sub with angreater configuration epoch.n,1.0,13.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3168.0,68.0,0.0010763888888888887,6358.0,930.032258064516,2623.0,None,False,,
8297745fa6dab7a9a73964ab2ee2c8eca17bd41a,3e27d678da8ea0e3aeeadf93f39e45d184bf778d,antirez,antirez@gmail.com,Thu Nov 14 00:08:13 2013 +0100,1384384093,Sentinel: remember last time slave changed master.,18.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3156.0,69.0,0.2948032407407408,6359.0,4.39209296847395,2624.0,None,False,,
3e27d678da8ea0e3aeeadf93f39e45d184bf778d,64ad6648a8595bfd265b3eb3e80a45189ade25b7,antirez,antirez@gmail.com,Thu Nov 14 00:29:38 2013 +0100,1384385378,Sentinel: reconfigure slaves to right master.,27.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3170.0,70.0,0.014872685185185185,6360.0,68.23735408560312,2625.0,None,False,,
64ad6648a8595bfd265b3eb3e80a45189ade25b7,dfbd9c5aeb9f18cff20f450b6643ab476a3624a9,antirez,antirez@gmail.com,Thu Nov 14 00:36:43 2013 +0100,1384385803,Sentinel: simplify and refactor slave reconfig code.,21.0,22.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3196.0,71.0,0.004918981481481482,6361.0,204.29411764705884,2626.0,None,False,,
dfbd9c5aeb9f18cff20f450b6643ab476a3624a9,c0d72293645eeef2da73080d1f77cf9944947b45,antirez,antirez@gmail.com,Thu Nov 14 10:23:05 2013 +0100,1384420985,Sentinel: fix conditional to only affect slaves with wrong master.,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3195.0,72.0,0.4071990740740741,6362.0,3.4558012620089817,2627.0,None,False,,
c0d72293645eeef2da73080d1f77cf9944947b45,e4c65e72c60c4d25ed1521609cd3f55030a5aada,antirez,antirez@gmail.com,Thu Nov 14 10:23:54 2013 +0100,1384421034,Sentinel: master address selection in get-master-address refactored.,20.0,12.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3196.0,73.0,0.0005671296296296298,6363.0,1764.2653061224494,2628.0,None,False,,
e4c65e72c60c4d25ed1521609cd3f55030a5aada,69d826a354f69918e3887bac1d11c208917f0b4e,antirez,antirez@gmail.com,Thu Nov 14 10:25:55 2013 +0100,1384421155,"Sentinel: fix address of master in Hello messages.Once we switched configuration during a failover, we should advertisenthe new address.nnThis was a serious race condition as the Sentinel performing thenfailover for a moment advertised the old address with the newnconfiguration epoch: once trasmitted to the other Sentinels the brokennconfiguration would remain there forever, until the next failovern(because a greater configuration epoch is required to overwrite an oldernone).n",2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3204.0,74.0,0.0014004629629629634,6364.0,715.0495867768594,2629.0,None,False,,
69d826a354f69918e3887bac1d11c208917f0b4e,4be53b1c5d9b566f2994e8445b6a5300a8eabdb6,antirez,antirez@gmail.com,Mon Nov 18 10:08:06 2013 +0100,1384765686,Sentinel: election timeout define.,2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3205.0,75.0,3.987627314814815,6365.0,1.250775692172838,2630.0,None,False,,
4be53b1c5d9b566f2994e8445b6a5300a8eabdb6,3a56013acb7e07eb314cea6606418355d4a452d4,antirez,antirez@gmail.com,Mon Nov 18 11:12:58 2013 +0100,1384769578,Sentinel: state machine and timeouts simplified.,48.0,47.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3206.0,76.0,0.0450462962962963,6366.0,23.19938335046249,2631.0,None,False,,
3a56013acb7e07eb314cea6606418355d4a452d4,83316f515c94f3e4c13c82df1b25fa63435645b8,antirez,antirez@gmail.com,Mon Nov 18 11:30:08 2013 +0100,1384770608,"Sentinel: failover restart time is now multiple of failover timeout.Also defaulf failover timeout changed to 3 minutes as the failover is anfairly fast procedure most of the times, unless there are a very bignnumber of slaves and the user picked to configure them sequentially (innthat case the user should change the failover timeout accordingly).n",2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3207.0,77.0,0.011921296296296296,6367.0,84.88349514563106,2632.0,None,False,,
83316f515c94f3e4c13c82df1b25fa63435645b8,e0750acf11576588a8421b3f60fb4b8f813f772c,antirez,antirez@gmail.com,Mon Nov 18 11:37:24 2013 +0100,1384771044,"Sentinel: slaves reconfig delay modified.The time Sentinel waits since the slave is detected to be configured tonthe wrong master, before reconfiguring it, is now the failover_timeoutntime as this makes more sense in order to give the Sentinel performingnthe failover enoung time to reconfigure the slaves slowly (if requirednby the configuration).nnAlso we now PUBLISH more frequently the new configuraiton as this allowsnto switch the reapprearing master back to slave faster.n",2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3207.0,78.0,0.005046296296296296,6368.0,199.1651376146789,2633.0,None,False,,
e0750acf11576588a8421b3f60fb4b8f813f772c,3a374b05117250c19e9786a01ccc6ab9528181dd,antirez,antirez@gmail.com,Mon Nov 18 11:43:35 2013 +0100,1384771415,Sentinel: failover abort function simplified.,2.0,27.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3207.0,79.0,0.004293981481481481,6369.0,233.88409703504044,2634.0,None,False,,
3a374b05117250c19e9786a01ccc6ab9528181dd,232cdb95ab9b5ea92c3351fcac4a414b35a3ec55,antirez,antirez@gmail.com,Mon Nov 18 16:02:58 2013 +0100,1384786978,"Sentinel: added config options useful to take state on config rewrite.We'll use CONFIG REWRITE (internally) in order to store the newnconfiguration of a Sentinel after the internal state changes. In ordernto do so, we need configuration options (that usually the user will notntouch at all) about config epoch of the master, Sentinels and Slavesnknown for this master, and so forth.n",29.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3182.0,80.0,0.1801273148148148,6370.0,6.551628863329692,2635.0,None,False,,
b2f834390ce6adc5763e91e8c49cf1b85fe348a3,cd4ff9992b4ab734cc49e5658ab53fc487c977fa,antirez,antirez@gmail.com,Mon Nov 18 18:18:04 2013 +0100,1384795084,Fix typo 'configuraiton' in rewriteConfigRewriteLine() comment.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1797.0,122.0,40.12466435185185,6371.0,1.0249223268568937,2636.0,Corrective,True,,
232cdb95ab9b5ea92c3351fcac4a414b35a3ec55,47df12d5d9ab45a2603e1b16e862e8d0e29c0f2c,antirez,antirez@gmail.com,Tue Nov 19 09:28:47 2013 +0100,1384849727,"Sentinel: can-failover option removed, many comments fixed.",29.0,76.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3211.0,81.0,0.7262615740740741,6372.0,2.3769143731374207,2637.0,None,False,,
47df12d5d9ab45a2603e1b16e862e8d0e29c0f2c,5998769c2803ded68b56b8f5836c57c895e0e807,antirez,antirez@gmail.com,Tue Nov 19 09:48:12 2013 +0100,1384850892,Sentinel: CONFIG REWRITE support for Sentinel config.,112.0,4.0,"src/config.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",3.0,1.0,1.0,0.3808970996523842,12.0,2101.6666666666665,577.0,4.8032214506172854,6374.0,1.5623419584674758,2640.0,None,False,,
5998769c2803ded68b56b8f5836c57c895e0e807,e257ab2bfeabfec5b4af562a5f0bbc28983ce26d,antirez,antirez@gmail.com,Tue Nov 19 10:13:04 2013 +0100,1384852384,Sentinel: sentinelFlushConfig() to CONFIG REWRITE + fsync.,23.0,0.0,"src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.2580186686648155,12.0,2305.5,456.0,0.01726851851851852,6376.5,44.43163538873994,2642.0,None,False,True,"[""5f5118bdad709c5eef10140130ba1329b6a5e661"", ""35667d75c38af8f7fc523dd47fa0751cb7afadac""]"
e257ab2bfeabfec5b4af562a5f0bbc28983ce26d,16237d78c83ed7c7182b60b9e66d29db44465986,antirez,antirez@gmail.com,Tue Nov 19 10:55:43 2013 +0100,1384854943,"Sentinel: call sentinelFlushConfig() to persist state when needed.Also the sentinel configuration rewriting was modified in order tonaccount for failover in progress, where we need to provide the promotednslave address as master address, and the old master address as one ofnthe slaves address.n",22.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3287.0,84.0,0.029618055555555564,6378.0,34.76318874560375,2643.0,None,False,,
16237d78c83ed7c7182b60b9e66d29db44465986,b8a94463b751e55c9b3dfe08646738a13974c274,antirez,antirez@gmail.com,Tue Nov 19 10:59:47 2013 +0100,1384855187,Sentinel: rewriteConfigSentinelOption() sub-iterators var typo fixed.,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3307.0,85.0,0.002824074074074074,6379.0,355.09836065573774,2644.0,None,False,,
b8a94463b751e55c9b3dfe08646738a13974c274,5450833d025bbe84a2da1bbb1df38d3fad70856f,antirez,antirez@gmail.com,Tue Nov 19 11:03:47 2013 +0100,1384855427,Sentinel: arity of known-sentinel/slave is 4 not 3.,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3307.0,86.0,0.0027777777777777783,6380.0,361.0,2645.0,None,False,,
5450833d025bbe84a2da1bbb1df38d3fad70856f,0a35f65301481a6165f34c1c3e38e2b805ba595e,antirez,antirez@gmail.com,Tue Nov 19 11:11:43 2013 +0100,1384855903,"Sentinel: when writing config on disk, remember sentinels runid.",8.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3307.0,87.0,0.00550925925925926,6381.0,182.51260504201684,2646.0,None,False,,
0a35f65301481a6165f34c1c3e38e2b805ba595e,90635488ce6b6f48cc0fd767cdb34b1c8c9eab79,antirez,antirez@gmail.com,Tue Nov 19 11:24:36 2013 +0100,1384856676,Sentinel: no longer used defines removed.,1.0,8.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3311.0,88.0,0.008946759259259258,6382.0,112.77231565329883,2647.0,None,False,,
90635488ce6b6f48cc0fd767cdb34b1c8c9eab79,1f9728cb20f7eaed3f613e7b8c49292edd1edc34,antirez,antirez@gmail.com,Tue Nov 19 12:34:39 2013 +0100,1384860879,Sentinel: failover script execution fixed.,21.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3304.0,89.0,0.04864583333333333,6383.0,21.556745182012854,2648.0,None,False,,
1f9728cb20f7eaed3f613e7b8c49292edd1edc34,b22d1beea07383eaaf19ed1ab304224c5829a83a,antirez,antirez@gmail.com,Tue Nov 19 16:20:42 2013 +0100,1384874442,Sentinel: various fixes to leader election implementation.,40.0,28.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3316.0,90.0,0.15697916666666667,6384.0,7.370272063702719,2649.0,None,False,,
b22d1beea07383eaaf19ed1ab304224c5829a83a,37a51a2568ed8558c60920e1bc08dd5265e74efe,antirez,antirez@gmail.com,Tue Nov 19 16:50:04 2013 +0100,1384876204,"Sentinel: distinguish between is-master-down-by-addr requests.Some are just to know if the master is down, and in this case the runidnin the request is set to *, others are actually in order to seek for anvote and get elected. In the latter case the runid is set to the runidnof the instance seeking for the vote.n",15.0,7.0,"src/redis.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,12.0,3225.5,510.0,11.119004629629627,6385.5,1.0449886920020268,2651.0,None,False,,
37a51a2568ed8558c60920e1bc08dd5265e74efe,b1f5a0b3ece05de66b22e7544c63ac7659b6d06b,antirez,antirez@gmail.com,Tue Nov 19 17:58:11 2013 +0100,1384880291,"CONFIG REWRITE: don't add the signature if it already exists.At the end of the file, CONFIG REWRITE adds a comment line that:nn# Generated by CONFIG REWRITEnnFollowed by the additional config options required. However this wasnadded again and again at every rewrite in praticular conditions (when angiven set of options change in a given time during the time).nnNow if it was alrady encountered, it is not added a second time.nnThis is especially important for Sentinel that rewrites the config atnevery state change.n",5.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1802.0,124.0,0.3402662037037037,6387.0,3.9388754719548285,2652.0,None,False,,
b1f5a0b3ece05de66b22e7544c63ac7659b6d06b,a6ebd910d80c0ecfb6c510e06b63dcee926ff07c,antirez,antirez@gmail.com,Wed Nov 20 15:52:44 2013 +0100,1384959164,Sentinel: take the replication offset in slaves state.,11.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3334.0,92.0,0.9601851851851853,6388.0,2.0414657666345226,2653.0,None,False,,
a6ebd910d80c0ecfb6c510e06b63dcee926ff07c,0101c2bcfe6f03db10a4ee625209cc46ad4f8c8b,antirez,antirez@gmail.com,Wed Nov 20 16:05:36 2013 +0100,1384959936,Sentinel: select slave with best (greater) replication offset.,13.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3344.0,93.0,0.008935185185185185,6389.0,112.91709844559584,2654.0,None,False,True,"[""2a57ad5d90e38969e8b821a4d44b75cf8ceb3aca"", ""93a09877fe9295206b48febd6520fef02f92e1b3""]"
0101c2bcfe6f03db10a4ee625209cc46ad4f8c8b,8810167d13cb5d7aef12c2ee1d7c48895cb79626,antirez,antirez@gmail.com,Thu Nov 21 11:31:06 2013 +0100,1385029866,Sentinel: Hello message sending code refactored.,41.0,21.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3355.0,94.0,0.809375,6390.0,2.2355212355212357,2655.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
8810167d13cb5d7aef12c2ee1d7c48895cb79626,d920177f8ddadc4af7fbc8a02438340eea5ca1f3,antirez,antirez@gmail.com,Thu Nov 21 11:35:50 2013 +0100,1385030150,"Sentinel: check for disconnected links in sentinelSendHello().Does not fix any bug as the test is performed by the caller, but betternto have the check.n",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3375.0,95.0,0.003287037037037037,6391.0,305.22535211267603,2656.0,None,False,,
d920177f8ddadc4af7fbc8a02438340eea5ca1f3,297de1ab26789f8a30a5d4c8a188636a5b9ea821,antirez,antirez@gmail.com,Thu Nov 21 12:27:14 2013 +0100,1385033234,Sentinel: test for writable config file.This commit introduces a funciton called when Sentinel is ready fornnormal operations to avoid putting Sentinel specific stuff in redis.c.n,14.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",3.0,1.0,1.0,0.8683927290103626,12.0,2616.0,890.0,1.3154475308641975,6393.0,1.3531082026669499,2659.0,None,False,,
297de1ab26789f8a30a5d4c8a188636a5b9ea821,f55ad3038fa4c7130fe59392e2a256432b546f5d,antirez,antirez@gmail.com,Thu Nov 21 12:39:47 2013 +0100,1385033987,Sentinel: manual failover works again.,5.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3387.0,97.0,0.008715277777777778,6395.0,115.7410358565737,2660.0,None,False,,
cd4ff9992b4ab734cc49e5658ab53fc487c977fa f55ad3038fa4c7130fe59392e2a256432b546f5d,1ca56ea7962e9c0b25a9d77745ddcf046fd07804,antirez,antirez@gmail.com,Thu Nov 21 15:01:25 2013 +0100,1385042485,Merge branch 'newsentinel' into unstable,,,,,,,,,,,,,,,Merge,False,,
1ca56ea7962e9c0b25a9d77745ddcf046fd07804,489d889726cfb0b9e84f5de7b32251fb44d0418d,antirez,antirez@gmail.com,Thu Nov 21 15:43:48 2013 +0100,1385045028,Sentinel: removed mem leak and useless code.,0.0,8.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3390.0,98.0,0.12778935185185186,6396.0,8.825378136038402,2661.0,None,False,,
489d889726cfb0b9e84f5de7b32251fb44d0418d,685e79998c079ba514f1824804509ba153274f04,antirez,antirez@gmail.com,Thu Nov 21 16:05:41 2013 +0100,1385046341,Sentinel: cleanup around SENTINEL_INFO_VALIDITY_TIME.,25.0,15.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3382.0,99.0,0.015196759259259259,6397.0,66.80350342726581,2662.0,None,False,,
685e79998c079ba514f1824804509ba153274f04,cc6053681fba524d35831447bb83841bb4a2d2b0,antirez,antirez@gmail.com,Thu Nov 21 16:22:59 2013 +0100,1385047379,Sentinel: different comments updated to new implementation.,18.0,21.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3392.0,100.0,0.012013888888888888,6398.0,84.23699421965318,2663.0,None,False,,
cc6053681fba524d35831447bb83841bb4a2d2b0,37b43c8a245984d1249ed4ffbb604cef2ddc69e4,antirez,antirez@gmail.com,Thu Nov 21 17:07:00 2013 +0100,1385050020,Sentinel: example sentinel.conf updated.,27.0,31.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,150.0,12.0,308.962962962963,6399.0,1.0032366339007432,1323.0,None,False,,
37b43c8a245984d1249ed4ffbb604cef2ddc69e4,fcebd9b0f9a7b1f78abaf556e9d1a8f3b857e614,antirez,antirez@gmail.com,Mon Nov 25 10:21:18 2013 +0100,1385371278,Fix false positive in memory efficiency test.Fixes issue #1298.n,1.0,1.0,"tests/unit/memefficiency.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,32.0,1.0,87.78982638888887,6400.0,1.011390841526104,383.0,Corrective,True,,
fcebd9b0f9a7b1f78abaf556e9d1a8f3b857e614,8d547ebd5696ed2e6943e74990f51f9c9204861c,antirez,antirez@gmail.com,Mon Nov 25 10:24:34 2013 +0100,1385371474,Sentinel: fix type specifier for Hello msg generation.This fixes issue #1395.n,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3389.0,101.0,3.751099537037037,6401.0,1.2665885002854098,2664.0,None,False,,
8d547ebd5696ed2e6943e74990f51f9c9204861c,6f4fd5576242cc98829dbf0f4683adc703188a71,antirez,antirez@gmail.com,Mon Nov 25 10:57:20 2013 +0100,1385373440,"Sentinel: fixes inverted strcmp() test preventing config updates.The result of this one-char bug was pretty serious, if the new masternhad the same port of the previous master, but just a different IPnaddress, non-leader Sentinels would not be able to recognize thenconfiguration change.nnThis commit fixes issue #1394.nnMany thanks to @shanemadden that reported the bug and helpedninvestigating it.n",1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3389.0,102.0,0.022754629629629628,6402.0,44.9471007121058,2665.0,None,False,,
6f4fd5576242cc98829dbf0f4683adc703188a71,86a540a66e3a429ada1efe25534c8db255ac9895,huangz1990,huangz1990@gmail.com,Tue Nov 26 19:55:51 2013 +0800,1385466951,fix a bug in sentinel.c about pub/sub link,2.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3389.0,103.0,1.0823032407407407,1.0,1.9239554704794088,1.0,Corrective,True,,
6f4fd5576242cc98829dbf0f4683adc703188a71 86a540a66e3a429ada1efe25534c8db255ac9895,c7136269c6fee1fa5a704f7f157f73ba74380965,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 26 06:15:25 2013 -0800,1385475325,Merge pull request #1401 from huangz1990/fix_sentinel_bugfix a bug in sentinel.c about pub/sub link,,,,,,,,,,,,,,,Merge,False,,
c7136269c6fee1fa5a704f7f157f73ba74380965,0addf8aff1d2569abc9bc7664755e01b34f5b206,antirez,antirez@gmail.com,Thu Nov 28 15:23:46 2013 +0100,1385648626,Sentinel: log vote received from other Sentinels.,5.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3388.0,104.0,2.1027199074074074,6403.0,1.4755745149305075,2666.0,None,False,,
0addf8aff1d2569abc9bc7664755e01b34f5b206,60817bb2628af20f6a02e156a3437631478a0a26,antirez,antirez@gmail.com,Thu Nov 28 16:16:58 2013 +0100,1385651818,Reply to PING with error when there is a MISCONF state.,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3125.0,421.0,7.159537037037038,6404.0,1.1396738357280498,2667.0,None,False,,
60817bb2628af20f6a02e156a3437631478a0a26,55f90b11c9ad7850ca5ea9b6504b691ebf065c3c,antirez,antirez@gmail.com,Thu Nov 28 16:25:49 2013 +0100,1385652349,Stop writes on MISCONF only if instance is a master.From the point of view of the slave not accepting writes from the masterncan only create a bigger consistency issue.n,4.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3126.0,422.0,0.006145833333333333,6405.0,163.71186440677968,2668.0,Feature Addition,False,True,"[""72f1715e45c8e8418e158fb676b7e491d51ab9e7""]"
55f90b11c9ad7850ca5ea9b6504b691ebf065c3c,3db825fde4f8af8fd3ba56438b4af3b58c1dbb04,antirez,antirez@gmail.com,Fri Nov 29 16:17:05 2013 +0100,1385738225,"Cluster: some code about clusterHandleSlaveFailover() marginally improved.80 cols friendly, some minor change to the code to make it simpler.n",15.0,13.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,1714.5,263.0,20.971996527777776,6406.5,1.0357861363407923,2670.0,None,False,,
3db825fde4f8af8fd3ba56438b4af3b58c1dbb04,8f18345ef0fe3adacb4be4434210b939a7198bed,antirez,antirez@gmail.com,Fri Nov 29 17:37:06 2013 +0100,1385743026,Cluster: basic data structures for nodes black list.,16.0,0.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.186278124459133,12.0,1976.75,1063.0,2.3439554398148146,6409.5,7.990657409018345,2674.0,None,False,,
8f18345ef0fe3adacb4be4434210b939a7198bed,6fa42b75070b96e23d169b3df747a979a0db487b,antirez,antirez@gmail.com,Mon Dec 2 11:12:23 2013 +0100,1385979143,Cluster: nodes re-addition blacklist API.,69.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3240.0,262.0,2.732835648148148,6412.0,1.3659202852822965,2675.0,None,False,True,"[""11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176""]"
6fa42b75070b96e23d169b3df747a979a0db487b,dffebbc90447a2fa5835cde61b09bf9e0c6c70e2,antirez,antirez@gmail.com,Mon Dec 2 12:22:17 2013 +0100,1385983337,"Sentinel: better time desynchronization.Sentinels are now desynchronized in a better way changing the timenhandler frequency between 10 and 20 HZ. This way on average andesynchronization of 25 milliesconds is produced that should be largernenough compared to network latency, avoiding most split-brain conditionnduring the vote.nnNow that the clocks are desynchronized, to have larger random delays whennperforming operations can be easily achieved in the following way.nTake as example the function that starts the failover, that isncalled with a frequency between 10 and 20 HZ and will start thenfailover every time there are the conditions. By just adding as annadditional condition something like rand()%4 == 0, we can amplify thendesynchronization between Sentinel instances easily.nnSee issue #1419.n",10.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3393.0,105.0,3.873969907407407,6413.0,1.2581331357499457,2676.0,None,False,,
dffebbc90447a2fa5835cde61b09bf9e0c6c70e2,f80cf7363abbd51f43d9d6f15a273fc11356f6c6,antirez,antirez@gmail.com,Mon Dec 2 15:55:19 2013 +0100,1385996119,Sentinel: don't write HZ when flushing config.See issue #1419.n,11.0,7.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3398.0,106.0,0.1479398148148148,6414.0,7.759505554686277,2677.0,None,False,,
f80cf7363abbd51f43d9d6f15a273fc11356f6c6,e4025ea9262a507d6e63021a081e8caaeb38fbd6,antirez,antirez@gmail.com,Tue Dec 3 13:40:41 2013 +0100,1386074441,Grammar fix in freeClient().,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1528.0,159.0,60.070335648148145,6415.0,1.0166471518630649,2678.0,Corrective,True,,
e4025ea9262a507d6e63021a081e8caaeb38fbd6,2e027c48e5ab5e43e547bc4fb091574d1c7ed52b,antirez,antirez@gmail.com,Tue Dec 3 13:54:06 2013 +0100,1386075246,Removed old comments and dead code from freeClient().,14.0,14.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,12.0,1438.5,536.0,1.9272280092592595,6416.5,54.79431626428359,2680.0,None,False,,
2e027c48e5ab5e43e547bc4fb091574d1c7ed52b,82b672f6335ac2db32a724ba5dc10398c949a4a8,antirez,antirez@gmail.com,Tue Dec 3 17:43:53 2013 +0100,1386089033,BLPOP blocking code refactored to be generic & reusable.,169.0,61.0,"src/Makefile,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",7.0,1.0,1.0,1.9164268366288693,12.0,1225.7142857142858,1217.0,130.52945436507937,6421.0,1.0026652722117848,2687.0,None,False,True,"[""58713c6b13ebe736ad33ff48fba13a1db5d58e68"", ""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509""]"
82b672f6335ac2db32a724ba5dc10398c949a4a8,c2f305545aa9b2c9f68bc537363c73f8b831e055,antirez,antirez@gmail.com,Tue Dec 3 18:03:15 2013 +0100,1386090195,blocked.c API commented.,33.0,0.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,121.0,1.0,0.013449074074074072,6425.0,75.35456110154904,2688.0,None,False,,
c2f305545aa9b2c9f68bc537363c73f8b831e055,c5618e7fdd1db874b785c19f53f01e78ea56007a,antirez,antirez@gmail.com,Wed Dec 4 15:52:20 2013 +0100,1386168740,WAIT command: synchronous replication for Redis.,177.0,4.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,1.0,1.0,1.1212208861264907,12.0,1564.2,1067.0,5.389050925925926,6428.0,1.4636309712794595,2693.0,None,False,True,"[""13a92a5bb1bed9dc34442613b65d6bc1b43a6b7e""]"
c5618e7fdd1db874b785c19f53f01e78ea56007a,58713c6b13ebe736ad33ff48fba13a1db5d58e68,antirez,antirez@gmail.com,Thu Dec 5 14:55:07 2013 +0100,1386251707,"Fix clients timeout handling.During the refactoring of blocking operations, commitn82b672f6335ac2db32a724ba5dc10398c949a4a8, a bug was introduced wherena milliseconds time is compared to a seconds time, so all the clientsnalways appear to timeout if timeout is set to non-zero value.nnThanks to Jonathan Leibiusky for finding the bug and helping verifyingnthe cause and fix.n",7.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3150.0,426.0,0.9602662037037036,6431.0,2.0413778972362504,2694.0,Corrective,True,,
58713c6b13ebe736ad33ff48fba13a1db5d58e68,74da4a574ffa39c09f1ff85fc27c0614bc23d532,antirez,antirez@gmail.com,Thu Dec 5 16:28:35 2013 +0100,1386257315,Fixed typos in redis.conf file.,8.0,8.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,115.0,57.04662037037037,6432.0,1.0175295222312486,1324.0,Corrective,True,,
74da4a574ffa39c09f1ff85fc27c0614bc23d532,11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176,antirez,antirez@gmail.com,Thu Dec 5 16:35:32 2013 +0100,1386257732,"Fixed grammar: before H the article is a, not an.",32.0,32.0,"src/ae_epoll.c,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",19.0,1.0,1.0,3.988608500731241,12.0,1360.9473684210527,1800.0,101.30213145711502,6442.0,1.0026012279482202,2713.0,Corrective,True,True,"[""145473acc5798a499a0f37e42df48a014a3955c1"", ""89ad0ca566f222368f2346a539dff0a057985a83""]"
11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176,74431b80a3ea5981bd465a953000476851b023a3,Anurag Ramdasan,anuragr@live.com,Thu Dec 5 21:09:31 2013 +0530,1386257971,Fixed grammar: 'usually' to 'usual',1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,116.0,0.0075925925925925935,0.0,0.0,0.0,Corrective,True,,
11e81a1e9ad1d1b4639aa8ed3fd2616ed8d1f176 74431b80a3ea5981bd465a953000476851b023a3,cbaad0b26f959b71e8585c34daf6ed9f12747462,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 5 07:42:05 2013 -0800,1386258125,Merge pull request #1437 from AnuragRamdasan/patch-1Fixed grammar: 'usually' to 'usual',,,,,,,,,,,,,,,Merge,False,,
cbaad0b26f959b71e8585c34daf6ed9f12747462,fb6b9b14bde7a2227ac0ee5c4f03ce2afa7a878a,Anurag Ramdasan,anuragr@live.com,Thu Dec 5 21:47:17 2013 +0530,1386260237,fixed typo,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,117.0,0.02622685185185185,1.0,39.12886142983231,1.0,Corrective,True,,
cbaad0b26f959b71e8585c34daf6ed9f12747462 fb6b9b14bde7a2227ac0ee5c4f03ce2afa7a878a,026e561446453b928244c380639266a3e7c795b3,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 5 08:18:20 2013 -0800,1386260300,Merge pull request #1438 from AnuragRamdasan/patch-2fixed typo,,,,,,,,,,,,,,,Merge,False,,
026e561446453b928244c380639266a3e7c795b3,839ed7a60baae4cb86ac4c37021412acf7d98191,Anurag Ramdasan,anuragr@live.com,Thu Dec 5 23:15:47 2013 +0530,1386265547,Grammar fix.,1.0,1.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,34.0,6.0,353.3138078703704,2.0,1.0028303450862213,2.0,Corrective,True,,
026e561446453b928244c380639266a3e7c795b3 839ed7a60baae4cb86ac4c37021412acf7d98191,2ef57f8d47b43bb80baf6b3fd7e148a06d64f008,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 5 09:53:45 2013 -0800,1386266025,Merge pull request #1439 from AnuragRamdasan/patch-3Grammar fix.,,,,,,,,,,,,,,,Merge,False,,
2ef57f8d47b43bb80baf6b3fd7e148a06d64f008,8534a290d3b3bc4021c99b27f8df63514c39f8ce,antirez,antirez@gmail.com,Fri Dec 6 10:48:40 2013 +0100,1386323320,Fixed typo in redis.conf.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,118.0,0.7301273148148149,6452.0,2.369624145966425,1325.0,Corrective,True,,
8534a290d3b3bc4021c99b27f8df63514c39f8ce,2b414a4b5f280216c5d97564506ae3ee742ef673,antirez,antirez@gmail.com,Fri Dec 6 11:37:46 2013 +0100,1386326266,"Sentinel: fix reported role fields when master is reset.When there is a master address switch, the reported role must be set tonmaster so that we have a chance to re-sample the INFO output to check ifnthe new address is reporting the right role.nnOtherwise if the role was wrong, it will be sensed as wrong even afternthe address switch, and for enough time according to the role changentime, for Sentinel consider the master SDOWN.nnThis fixes isue #1446, that describes the effects of this bug innpractice.n",2.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3402.0,108.0,0.7932175925925926,6453.0,2.2606881256018907,2714.0,None,False,,
2b414a4b5f280216c5d97564506ae3ee742ef673,c590549e40e9a38bc052d68073d6ba9a995599b0,antirez,antirez@gmail.com,Fri Dec 6 12:46:56 2013 +0100,1386330416,"Sentinel: fix reported role info sampling.The way the role change was recoded was not sane and too muchnconvoluted, causing the role information to be not always updated.nnThis commit fixes issue #1445.n",10.0,10.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3404.0,109.0,0.048032407407407406,6454.0,21.819277108433734,2715.0,None,False,,
c590549e40e9a38bc052d68073d6ba9a995599b0,6e70c011484018ca9946cc536b7ab4531580b8de,Yossi Gottlieb,yossigo@gmail.com,Sun Dec 8 12:57:03 2013 +0200,1386500223,Return proper error on requests with an unbalanced number of quotes.,13.0,0.0,"src/networking.c,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.961236604722876,12.0,821.0,173.0,298.44473958333333,0.5,0.5008376760144911,0.0,None,False,,
c590549e40e9a38bc052d68073d6ba9a995599b0,eaf1bfb88bdd6e7f4f4a7015280572cc234088c4,antirez,antirez@gmail.com,Mon Dec 9 13:28:39 2013 +0100,1386592119,Handle inline requested terminated with just n.,8.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1538.0,165.0,1.0636111111111108,6455.0,1.9401932619482896,2716.0,None,False,True,"[""d55598988b3381afff87bc974f5cfda0e8ae77e0""]"
eaf1bfb88bdd6e7f4f4a7015280572cc234088c4,27db38d0696580cb6538f893ab090603ccb5bf95,antirez,antirez@gmail.com,Mon Dec 9 13:32:44 2013 +0100,1386592364,"Slaves heartbeat while loading RDB files.Starting with Redis 2.8 masters are able to detect timed out slaves,nwhile before 2.8 only slaves were able to detect a timed out master.nnNow that timeout detection is bi-directional the following problemnhappens as described in the field by issue #1449:nn1) Master and slave setup with big dataset.n2) Slave performs the first synchronization, or a full syncn   after a failed partial resync.n3) Master sends the RDB payload to the slave.n4) Slave loads this payload.n5) Master detects the slave as timed out since does not receive back then   REPLCONF ACK acknowledges.nnHere the problem is that the master has no way to know how much thenslave will take to load the RDB file in memory. The obvious solution isnto use a greater replication timeout setting, but this is a shame sincenfor the 0.1% of operation time we are forced to use a timeout that isnnot what is suited for 99.9% of operation time.nnThis commit tries to fix this problem with a solution that is a bit ofnan hack, but that modifies little of the replication internals, in ordernto be back ported to 2.8 safely.nnDuring the RDB loading time, we send the master newlines to avoidnbeing sensed as timed out. This is the same that the master already doesnwhile saving the RDB file to still signal its presence to the slave.nnThe single newline is used because:nn1) It can't desync the protocol, as it is only transmitted all ornnothing.n2) It can be safely sent while we don't have a client structure for thenmaster or in similar situations just with write(2).n",18.0,1.0,"src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.8997437586982626,12.0,1372.0,263.0,1.937945601851852,6456.5,177.45553320125518,2718.0,Corrective,True,True,"[""11120689c4c59b0fdde5446ea40f6abdc215d7c9""]"
27db38d0696580cb6538f893ab090603ccb5bf95,7c531eb5ad3310e4b25262dfdc2b43cf665bb975,antirez,antirez@gmail.com,Tue Dec 10 17:49:45 2013 +0100,1386694185,Don't send more than 1 newline/sec while loading RDB.,6.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1210.0,98.0,1.1784837962962964,6458.0,1.848547941976606,2719.0,Feature Addition,False,True,"[""11120689c4c59b0fdde5446ea40f6abdc215d7c9""]"
7c531eb5ad3310e4b25262dfdc2b43cf665bb975,2c4ab8a534f9c1452ea07e51fa1215d8b617b27b,antirez,antirez@gmail.com,Tue Dec 10 17:51:14 2013 +0100,1386694274,Log empty DB + Loading data into two separated messages.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1775.0,102.0,5.052569444444444,6459.0,1.197919100567643,2720.0,None,False,,
2c4ab8a534f9c1452ea07e51fa1215d8b617b27b,2eb781b35bfa9bde5ab88b192cd3e666e7872625,antirez,antirez@gmail.com,Tue Dec 10 18:18:24 2013 +0100,1386695904,"dict.c: added optional callback to dictEmpty().Redis hash table implementation has many non-blocking features likenincremental rehashing, however while deleting a large hash table therenwas no way to have a callback called to do some incremental work.nnThis commit adds this support, as an optiona callback argument tondictEmpty() that is currently called at a fixed interval (one time everyn65k deletions).n",22.0,21.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",8.0,1.0,1.0,2.504801756032757,12.0,1361.375,891.0,81.2827662037037,6463.5,1.0278359042407057,2728.0,None,False,True,"[""11120689c4c59b0fdde5446ea40f6abdc215d7c9""]"
2eb781b35bfa9bde5ab88b192cd3e666e7872625,11120689c4c59b0fdde5446ea40f6abdc215d7c9,antirez,antirez@gmail.com,Tue Dec 10 18:38:26 2013 +0100,1386697106,"Slaves heartbeats during sync improved.The previous fix for false positive timeout detected by master was notncomplete. There is another blocking stage while loading data for thenfirst synchronization with the master, that is, flushing away thencurrent data from the DB memory.nnThis commit uses the newly introduced dict.c callback in order to makensome incremental work (to send n heartbeats to the master) whilenflushing the old data from memory.nnIt is hard to write a regression test for this issue unfortunately. Morensupport for debugging in the Redis core would be needed in terms ofnfunctionalities to simulate a slow DB loading / deletion.n",29.0,15.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.0871142877642597,12.0,1456.0,583.0,0.020543981481481486,6469.0,23.253292762657427,2731.0,Corrective,True,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
11120689c4c59b0fdde5446ea40f6abdc215d7c9,6d5fa2e06ce8b35a85715b9960ff5a5e14bc1bdd,Yubao Liu,Yubao.Liu@gmail.com,Sat Nov 30 14:14:28 2013 +0800,1385792068,fix typo in redis.conf and sentinel.conf,4.0,4.0,"redis.conf,CAS_DELIMITER,sentinel.conf,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,12.0,433.0,132.0,1.2198842592592598,0.5,0.7049374750944041,1.0,Corrective,True,,
11120689c4c59b0fdde5446ea40f6abdc215d7c9,88a5cede882ee4268685acae5ef6c8660f7f4e44,Yossi Gottlieb,yossigo@gmail.com,Mon Dec 24 23:10:41 2012 +0200,1356383441,Fix wrong repldboff type which causes dropped replication in rare cases.,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1379.0,381.0,-350.85260416666665,2.0,0.9971498002633464,1.0,Corrective,True,,
88a5cede882ee4268685acae5ef6c8660f7f4e44 6e70c011484018ca9946cc536b7ab4531580b8de,0a89d9a0b1abcbd91e7c8a83d6fa9e3aaefbb556,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 11 03:06:18 2013 -0800,1386759978,Merge pull request #1451 from yossigo/unbalanced-quotes-fixReturn proper error on requests with an unbalanced number of quotes.,,,,,,,,,,,,,,,Merge,False,,
0a89d9a0b1abcbd91e7c8a83d6fa9e3aaefbb556,a5ec247f13f70d4d60337460ab2b3eb583f7f5e7,antirez,antirez@gmail.com,Wed Dec 11 15:23:10 2013 +0100,1386771790,"Replication: publish the slave_repl_offset when disconnected from master.When a slave was disconnected from its master the replication offset wasnreported as -1. Now it is reported as the replication offset of thenprevious master, so that failover can be performed using this value innorder to try to select a slave with more processed data from a set ofnslaves of the old master.n",8.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3155.0,428.0,5.94974537037037,6471.0,1.1680744196180195,2732.0,None,False,,
c590549e40e9a38bc052d68073d6ba9a995599b0,0f06f8df079073263974110643ddbebe8c3447ac,codeeply,codeeply@gmail.com,Thu Dec 12 16:33:29 2013 +0800,1386837209,comment mistake fixed,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,870.0,36.0,6.706909722222222,0.0,0.0,0.0,Corrective,True,,
a5ec247f13f70d4d60337460ab2b3eb583f7f5e7 0f06f8df079073263974110643ddbebe8c3447ac,a99c751d6c136f3ada83c1c8fd2b0d3c2c6cf297,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 02:23:44 2013 -0800,1386843824,Merge pull request #1460 from codeeply/simplify2comment mistake fixed,,,,,,,,,,,,,,,Merge,False,,
a99c751d6c136f3ada83c1c8fd2b0d3c2c6cf297 6d5fa2e06ce8b35a85715b9960ff5a5e14bc1bdd,62e4956936717aaf192e2ca8b42d6eed464edba5,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 02:30:11 2013 -0800,1386844211,Merge pull request #1415 from Dieken/fix-typofix typo in redis.conf and sentinel.conf,,,,,,,,,,,,,,,Merge,False,,
62e4956936717aaf192e2ca8b42d6eed464edba5,452dea30f6414709855d6bb96302d69bc737c566,antirez,antirez@gmail.com,Thu Dec 12 15:19:08 2013 +0100,1386857948,Makefile: remove odd syntax not compatible with some make versions.See issue #1448.n,6.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,238.0,102.0,8.899479166666667,6472.0,1.112366126294844,2733.0,None,False,,
452dea30f6414709855d6bb96302d69bc737c566,53201488832f17b659133b18fdd7fd78e48e05ea,antirez,antirez@gmail.com,Fri Dec 13 11:01:13 2013 +0100,1386928873,Sentinel: dead code removed.,0.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3404.0,111.0,2.6964004629629628,6473.0,1.3708647931699067,2734.0,None,False,,
53201488832f17b659133b18fdd7fd78e48e05ea,c00453da1d01dbd2de40d26602c979b516f8a47f,antirez,antirez@gmail.com,Fri Dec 13 11:29:59 2013 +0100,1386930599,"SDIFF iterator misuse fixed in diff algorithm #1.The bug could be easily triggered by:nnSADD foo a b c 1 2 3 4 5 6nSDIFF foo foonnWhen the key was the same in two sets, an unsafe iterator was used toncheck existence of elements in the same set we were iterating.nUsually this would just result into a wrong output, however with thendict.c API misuse protection we have in place, the result was actuallynan assertion failed that was triggered by the CI test, while creatingnrandom datasets for the MASTER and SLAVE consistency test.n",1.0,0.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,764.0,35.0,37.8209375,6474.0,1.0264403810719922,2735.0,Corrective,True,,
c00453da1d01dbd2de40d26602c979b516f8a47f,b1ba58f3417728dfb768890eb1075c90a028d63a,antirez,antirez@gmail.com,Fri Dec 13 11:37:03 2013 +0100,1386931023,SDIFF iterator misuse bug regression test added.See commit c00453d for more info about the bug.n,6.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,525.0,21.0,377.83028935185183,6475.0,1.0026466909302467,384.0,Corrective,True,,
b1ba58f3417728dfb768890eb1075c90a028d63a,2dfc5e35a9773c0a9982ec5147159053eb763c6e,antirez,antirez@gmail.com,Fri Dec 13 13:10:05 2013 +0100,1386936605,Makefile.dep updated.,4.0,1.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,119.0,6.0,64.93940972222222,6476.0,1.0153989696592176,2736.0,None,False,,
2dfc5e35a9773c0a9982ec5147159053eb763c6e,e88e6a633414bb66d58e23f2df8f91eed5bb5aec,antirez,antirez@gmail.com,Tue Dec 17 09:38:11 2013 +0100,1387269491,Cluster: use long long for timestamps in clusterGenNodesDescription().Ping sent and pong received fields need to be casted to long long to benprinted correctly into 32 bit systems.n,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3309.0,264.0,11.710173611111117,6477.0,1.085395830429974,2737.0,None,False,,
e88e6a633414bb66d58e23f2df8f91eed5bb5aec,47815d38e0f39476494c5da8dcd90c9ba24aefd8,antirez,antirez@gmail.com,Tue Dec 17 09:45:42 2013 +0100,1387269942,Fixed clearNodeFailureIfNeeded() time type to mstime_t.This prevented 32bit cluster instances from clearing the FAIL flag whennneeded.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3309.0,265.0,0.0052199074074074075,6478.0,192.57427937915745,2738.0,Corrective,True,,
47815d38e0f39476494c5da8dcd90c9ba24aefd8,7c1cbdceb2aa1ed3c6ae346dad04e5afb6eba973,antirez,antirez@gmail.com,Tue Dec 17 10:00:33 2013 +0100,1387270833,Cluster: use an hardcoded 60 sec timeout in redis-trib connections.Later this should be configurable from the command line but at least nownwe use something more appropriate for our use case compared to thenredis-rb default timeout.n,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,886.0,65.0,39.74197916666667,6479.0,1.0251623100049014,2739.0,None,False,,
7c1cbdceb2aa1ed3c6ae346dad04e5afb6eba973,c70c0c6db74616e892995ee87b0bcd2f7102cbf9,antirez,antirez@gmail.com,Tue Dec 17 10:27:12 2013 +0100,1387272432,Cluster: use proper type mstime_t for ping delay var.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3309.0,266.0,0.02881944444444445,6480.0,35.69879518072289,2740.0,None,False,,
c70c0c6db74616e892995ee87b0bcd2f7102cbf9,f57bb36ce7c17958df6bcabfbd3b41037ae74c2f,antirez,antirez@gmail.com,Tue Dec 17 12:22:02 2013 +0100,1387279322,Cluster: initialize todo_before_sleep flags to 0.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3309.0,267.0,0.07974537037037037,6481.0,13.539912917271408,2741.0,None,False,,
f57bb36ce7c17958df6bcabfbd3b41037ae74c2f,fda91dbde38e0a384aaf731559683c67561eef52,antirez,antirez@gmail.com,Tue Dec 17 12:28:37 2013 +0100,1387279717,Cluster: check link is valid before sending UPDATE.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3310.0,268.0,0.00457175925925926,6482.0,219.7341772151899,2742.0,None,False,,
fda91dbde38e0a384aaf731559683c67561eef52,7a666ac4194997363f6098996ddda141e78e315a,antirez,antirez@gmail.com,Tue Dec 17 14:50:24 2013 +0100,1387288224,"Cluster: set n->slaves to NULL in clusterNodeResetSlaves().The value was otherwise undefined, so next time the node was promotednagain from slave to master, adding a slave to the list of slavesnwould likely crash the server or result into undefined behavior.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3311.0,269.0,0.09846064814814814,6483.0,11.156341836134946,2743.0,None,False,,
7a666ac4194997363f6098996ddda141e78e315a,6d184e02be362d2c4e5ac56d4fdc6dbf9acbda0b,antirez,antirez@gmail.com,Thu Dec 19 10:18:45 2013 +0100,1387444725,Example redis.conf formatted to better show appendfilename option.,3.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,720.0,120.0,19.127974537037037,6484.0,1.052279450605903,1326.0,Perfective,False,,
6d184e02be362d2c4e5ac56d4fdc6dbf9acbda0b,b221e13dac3ac1878a365b0b4d4573429e5bc5e2,antirez,antirez@gmail.com,Thu Dec 19 15:25:45 2013 +0100,1387463145,"CONFIG REWRITE: don't wipe unknown options.With this commit options not explicitly rewritten by CONFIG REWRITE arennot touched at all. These include new options that may not have supportnfor REWRITE, and other special cases like rename-command and include.n",50.0,9.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1806.0,125.0,29.89414351851852,6485.0,1.0334513681377266,2744.0,None,False,,
b221e13dac3ac1878a365b0b4d4573429e5bc5e2,3b9cf3ed3a7e7ba518f9410f9764bf89aac335ff,antirez,antirez@gmail.com,Thu Dec 19 15:30:06 2013 +0100,1387463406,CONFIG REWRITE: old development comments removed.,4.0,32.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1847.0,126.0,0.003020833333333333,6486.0,332.0344827586207,2745.0,None,False,True,"[""e78938425536748e63932ccebb7248f6389db102""]"
3b9cf3ed3a7e7ba518f9410f9764bf89aac335ff,7da423f79fee78b002b7e25f27cf1698c08974ed,Yubao Liu,Yubao.Liu@gmail.com,Sat Nov 30 23:57:48 2013 +0800,1385827068,"CONFIG REWRITE: don't throw some options on config rewriteThose options will be thrown without this patch:n  include, rename-command, min-slaves-to-write, min-slaves-max-lag,nappendfilename.n",35.0,24.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.2849581100887355,12.0,1770.5,1059.0,73.04661458333334,3.5,0.9757205499462059,2.0,None,False,,
7da423f79fee78b002b7e25f27cf1698c08974ed,b3632319a47321393e36c627f6c59e08773c07ff,antirez,antirez@gmail.com,Thu Dec 19 15:55:25 2013 +0100,1387464925,CONFIG REWRITE: no special handling or include and rename-command.CONFIG REWRITE is now wiser and does not touch what it does notnunderstand inside redis.conf.n,1.0,12.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1822.0,128.0,18.95667824074074,6487.0,1.0527518580681952,2746.0,None,False,,
b3632319a47321393e36c627f6c59e08773c07ff,305d7f29f348cc98590b3cf985550b5f51365664,antirez,antirez@gmail.com,Thu Dec 19 16:02:24 2013 +0100,1387465344,Clarify include directive behavior in example redis.conf.,6.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,729.0,122.0,18.961527777777786,6488.0,1.0527383664291,1327.0,None,False,,
305d7f29f348cc98590b3cf985550b5f51365664,a2c938c83450c8be4e4c39874fd6f467b86db273,antirez,antirez@gmail.com,Fri Dec 20 09:56:18 2013 +0100,1387529778,"Redis Cluster: delay state change when in the majority again.As specified in the Redis Cluster specification, when a node can reachnthe majority again after a period in which it was partitioend away withnthe minorty of masters, wait some time before accepting queries, tonprovide a reasonable amount of time for other nodes to upgrade itsnconfiguration.nnThis lowers the probabilities of both a client and a master with notnupdated configuration to rejoin the cluster at the same time, with anstale master accepting writes.n",33.0,14.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3312.0,270.0,2.7957638888888887,6489.0,1.3576839961250902,2747.0,None,False,,
a2c938c83450c8be4e4c39874fd6f467b86db273,d7374032c0d9d87d9169139b0182c49891504d7c,antirez,antirez@gmail.com,Fri Dec 20 12:37:18 2013 +0100,1387539438,"Redis Cluster: handshake code refactoring + Gossip IP switch detection.This commit makes it simple to start an handshake with a specific nodenaddress, and uses this in order to detect a node IP change and start annew handshake in order to fix the IP if possible.n",80.0,48.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3331.0,271.0,0.11180555555555556,6490.0,9.944099378881988,2748.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
d7374032c0d9d87d9169139b0182c49891504d7c,fda4cba912dd8483bd4a991555e179ca5fcce8a2,antirez,antirez@gmail.com,Fri Dec 20 12:47:13 2013 +0100,1387540033,Redis Cluster: reconfigure replication when master changes address.,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3363.0,272.0,0.0068865740740740745,6491.0,146.21008403361344,2749.0,None,False,,
fda4cba912dd8483bd4a991555e179ca5fcce8a2,5a404c87c19c6fca8b7f096902f954df5b6188fd,antirez,antirez@gmail.com,Fri Dec 20 14:40:11 2013 +0100,1387546811,Redis Cluster: remove no longer relevant comment.,0.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3371.0,273.0,0.07844907407407407,6492.0,13.74712304514606,2750.0,None,False,,
5a404c87c19c6fca8b7f096902f954df5b6188fd,658aff9d29f3846b5b60868b767fdc2c2cc1d4af,antirez,antirez@gmail.com,Sat Dec 21 00:04:53 2013 +0100,1387580693,Redis Cluster: move node failure reports logging from VERBOSE to NOTICE level.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3366.0,274.0,0.3921527777777778,6493.0,3.5500265627766963,2751.0,None,False,,
658aff9d29f3846b5b60868b767fdc2c2cc1d4af,b2dedd9da8afad8e86b32d2d0e7c5e7bbbf92c8c,antirez,antirez@gmail.com,Sat Dec 21 00:23:37 2013 +0100,1387581817,Log when a slave lose the connection with its master.,10.0,9.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1551.0,167.0,11.452002314814816,6494.0,1.087320974316112,2752.0,None,False,,
b2dedd9da8afad8e86b32d2d0e7c5e7bbbf92c8c,66ec1412fec9ef60a0158832ed82e8ef490efe69,antirez,antirez@gmail.com,Sun Dec 22 10:05:16 2013 +0100,1387703116,"Redis Cluster: add repl_ping_slave_period to slave data validity time.When the configured node timeout is very small, the data validity timen(maximum data age for a slave to try a failover) is too little (tenntimes the configured node timeout) when the replication link with thenmaster is mostly idle. In this case we'll receive some data from thenmaster only every server.repl_ping_slave_period to refresh the lastninteraction with the master.nnThis commit adds to the max data validity time the slave ping period tonavoid this problem of slaves sensing too old data without a good reason.nHowever this max data validity time is likely a setting that should benconfigurable by the Redis Cluster user in a way completely independentnfrom the node timeout.n",2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3366.0,275.0,1.4169328703703703,6495.0,1.7057497365691088,2753.0,None,False,,
66ec1412fec9ef60a0158832ed82e8ef490efe69,ba5eb44d144c6503c5da21057c126997f6ab662f,antirez,antirez@gmail.com,Sun Dec 22 10:15:35 2013 +0100,1387703735,Slave disconnection is an event worth logging.,10.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1552.0,168.0,1.4110879629629631,6496.0,1.7086730425367869,2754.0,None,False,,
ba5eb44d144c6503c5da21057c126997f6ab662f,94e8c9e77eeb5498286da060691db5f51537b61b,antirez,antirez@gmail.com,Sun Dec 22 11:43:25 2013 +0100,1387709005,"Make new masters inherit replication offsets.Currently replication offsets could be used into a limited way in ordernto understand, out of a set of slaves, what is the one with the mostnupdated data. For example this comparison is possible of N slavesnwere replicating all with the same master.nnHowever the replication offset was not transferred from master to slavesn(that are later promoted as masters) in any way, so for instance ifnthere were three instances A, B, C, with A master and B and Cnreplication from A, the following could happen:nnC disconnects from A.nB is turned into master.nA is switched to master of B.nB receives some write.nnIn this context there was no way to compare the offset of A and C,nbecause B would use its own local master replication offset asnreplication offset to initialize the replication with A.nnWith this commit what happens is that when B is turned into master itninherits the replication offset from A, making A and C comparable.nIn the above case assuming no inconsistencies are created during thendisconnection and failover process, A will show to have a replicationnoffset greater than C.nnNote that this does not mean offsets are always comparable to understandnwhat is, in a set of instances, since in more complex examples thenreplica with the higher replication offset could be partitioned awaynwhen picking the instance to elect as new master. However this inngeneral improves the ability of a system to try to pick a good replicanto promote to master.n",12.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1801.0,105.0,11.711793981481481,6497.0,1.0853840155983947,2755.0,Feature Addition,False,,
94e8c9e77eeb5498286da060691db5f51537b61b,7e9433cee16364f9352cc95f36fbad056eadd964,antirez,antirez@gmail.com,Mon Dec 23 11:31:35 2013 +0100,1387794695,Configuring port to 0 disables IP socket as specified.This was no longer the case with 2.8 becuase of a bug introduced withnthe IPv6 support. Now it is fixed.nnThis fixes issue #1287 and #1477.n,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3162.0,430.0,22.773460648148152,6498.0,1.0439107615416947,2756.0,Corrective,True,,
7e9433cee16364f9352cc95f36fbad056eadd964,e78938425536748e63932ccebb7248f6389db102,antirez,antirez@gmail.com,Mon Dec 23 12:48:39 2013 +0100,1387799319,"Fix CONFIG REWRITE handling of unknown options.There were two problems with the implementation.nn1) save was not correctly processed when no save point was configured,n   as reported in issue #1416.n2) The way the code checked if an option existed in the processedn   dictionary was wrong, as we add the element with as a key associatedn   with a NULL value, so dictFetchValue() can't be used to check forn   existance, but dictFind() must be used, that returns NULL only if then   entry does not exist at all.n",3.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1811.0,129.0,3.8703009259259264,6499.0,1.258377841707686,2757.0,Corrective,True,,
e78938425536748e63932ccebb7248f6389db102,f510549044623d4a17d6b2618f90da85edc40796,antirez,antirez@gmail.com,Wed Dec 25 17:57:36 2013 +0100,1387990656,Cluster: clusterProcessPacket() was not 80 cols friendly.The function actually needs to be split into sub-functions at somenpoint in the future.n,47.0,25.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3367.0,276.0,3.3280092592592587,6500.0,1.3004799332266814,2758.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
f510549044623d4a17d6b2618f90da85edc40796,491f68108868baed5b60045b75099b5475eddd35,antirez,antirez@gmail.com,Wed Dec 25 18:13:27 2013 +0100,1387991607,"anetTcpGenericConnect() code improved + 1 bug fix.Now the socket is closed if anetNonBlock() fails, and in general thencode structure makes it harder to introduce this kind of bugs in thenfuture.nnReference: pull request #1059.n",17.0,8.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,521.0,33.0,168.1918287037037,6501.0,1.0059455920522848,2759.0,Corrective,True,True,"[""a2a900356e62628588742dd6b2de8c8d55b86784""]"
491f68108868baed5b60045b75099b5475eddd35,cb23d510f49ce0930a55bb07915853a83b7f9867,antirez,antirez@gmail.com,Wed Dec 25 18:24:04 2013 +0100,1387992244,Remove useless goto from anetTcpGenericConnect().,1.0,3.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,530.0,34.0,0.007372685185185184,6502.0,136.63579277864991,2760.0,None,False,,
cb23d510f49ce0930a55bb07915853a83b7f9867,a2a900356e62628588742dd6b2de8c8d55b86784,antirez,antirez@gmail.com,Wed Dec 25 18:28:30 2013 +0100,1387992510,anetTcpGenericConnect() bug introduced in 9d19977 fixed.Durign a refactoring I mispelled _port for port.nThis is one of the reasons I never used _varname myself.n,3.0,3.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,528.0,35.0,0.0030787037037037037,6503.0,325.812030075188,2761.0,Corrective,True,,
a2a900356e62628588742dd6b2de8c8d55b86784,20418822867065cdbbeffc05a0bd0abae64284ff,antirez,antirez@gmail.com,Wed Dec 25 18:39:49 2013 +0100,1387993189,anetPeerToString / SockName: port can be NULL on errors too.,2.0,2.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,528.0,36.0,0.007858796296296296,6504.0,128.2459499263623,2762.0,None,False,,
20418822867065cdbbeffc05a0bd0abae64284ff,fdf50e1e3dc3e9e3ce9bedd2b41b9fc5f0aab220,antirez,antirez@gmail.com,Wed Dec 25 18:41:10 2013 +0100,1387993270,Log disconnection with slave only when ip:port is available.,4.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1562.0,169.0,3.351099537037037,6505.0,1.2984095187110367,2763.0,None,False,,
fdf50e1e3dc3e9e3ce9bedd2b41b9fc5f0aab220,3f92e056375ecf1bb1ca03e8af3dab730a32f3b9,antirez,antirez@gmail.com,Wed Jan 8 14:11:02 2014 +0100,1389186662,Clarify a comment in slaveTryPartialResynchronization().,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1812.0,106.0,17.102511574074075,6506.0,1.0584709442042368,2764.0,None,False,,
3f92e056375ecf1bb1ca03e8af3dab730a32f3b9,90a81b4ebb155c8c07a30f0a0562e7a05fea4294,antirez,antirez@gmail.com,Wed Jan 8 14:25:06 2014 +0100,1389187506,"Don't send REPLCONF ACK to old masters.Masters not understanding REPLCONF ACK will reply with errors to ournrequests causing a number of possible issues.nnThis commit detects a global replication offest set to -1 at the end ofnthe replication, and marks the client representing the master with thenREDIS_PRE_PSYNC flag.nnNote that this flag was called REDIS_PRE_PSYNC_SLAVE but now it is justnREDIS_PRE_PSYNC as it is used for both slaves and masters starting withnthis commit.nnThis commit fixes issue #1488.n",12.0,5.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,12.0,1596.0,490.0,19.451863425925925,6507.5,1.0257077061710962,2766.0,Corrective,True,,
90a81b4ebb155c8c07a30f0a0562e7a05fea4294,a2f99478271e0ec9b224ee3aec23b3328ff87713,antirez,antirez@gmail.com,Wed Jan 8 17:16:04 2014 +0100,1389197764,Test: stress events flags to/from string conversion.,11.0,0.0,"tests/unit/pubsub.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,359.0,4.0,345.17478009259264,6509.0,1.002897083036402,385.0,Preventative,False,,
a2f99478271e0ec9b224ee3aec23b3328ff87713,e1ab2991c3daefd9482ab589539f184141166648,antirez,antirez@gmail.com,Wed Jan 8 17:18:00 2014 +0100,1389197880,Fix keyspace events flags-to-string conversion.Fixes issue #1491 on Github.n,12.0,10.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,128.0,5.0,347.98828703703697,6510.0,1.0028736599398629,2767.0,Corrective,True,,
e1ab2991c3daefd9482ab589539f184141166648,58c8a071a51632c0e337f467e3ca7b2127e3fb43,antirez,antirez@gmail.com,Thu Jan 9 11:09:23 2014 +0100,1389262163,Fix RESTORE ttl handling in 32 bit archs.long was used instead of long long in order to handle a 64 bitnresolution millisecond timestamp.nnThis fixes issue #1483.n,4.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3389.0,277.0,14.716516203703707,6511.0,1.06795086460397,2768.0,Corrective,True,,
58c8a071a51632c0e337f467e3ca7b2127e3fb43,5d08413b13252cef928aedae242f3b60310278bc,antirez,antirez@gmail.com,Thu Jan 9 11:19:03 2014 +0100,1389262743,Test: regression for issues #1483.,10.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,210.0,8.0,420.9626273148148,6512.0,1.0023755077888474,386.0,Preventative,False,,
5d08413b13252cef928aedae242f3b60310278bc,5a7d04ee7b77d686c8bf433907064391dff8b42a,antirez,antirez@gmail.com,Fri Jan 10 14:13:04 2014 +0100,1389359584,Trip comment to 80 cols in SentinelCommand().,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3395.0,112.0,28.133229166666666,6513.0,1.0355451553064103,2769.0,None,False,,
5a7d04ee7b77d686c8bf433907064391dff8b42a,2bb9cd464e4b6a7f59525fced6ad60fd9c11fcae,antirez,antirez@gmail.com,Fri Jan 10 14:31:41 2014 +0100,1389360701,Add all the configurable fields to addReplySentinelRedisInstance().Note: the auth password with the master is voluntarily not exposed.n,24.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3395.0,113.0,0.01292824074074074,6514.0,78.35004476275739,2770.0,Feature Addition,False,,
2bb9cd464e4b6a7f59525fced6ad60fd9c11fcae,c42e4bd0b62d5e542d9ff100b2a9ab374f84fb1a,antirez,antirez@gmail.com,Fri Jan 10 14:41:44 2014 +0100,1389361304,"Sentinel: added SENTINEL MASTER <name> command.With SENTINEL MASTERS it was already possible to list all the configurednmasters, but not a specific one.n",7.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3419.0,114.0,0.006979166666666666,6515.0,144.28358208955225,2771.0,None,False,,
c42e4bd0b62d5e542d9ff100b2a9ab374f84fb1a,774f0bd45e04caf606c09ca774283f36252998c6,antirez,antirez@gmail.com,Fri Jan 10 15:02:39 2014 +0100,1389362559,anetResolveIP() added to anet.c.The new function is used when we want to normalize an IP address withoutnperforming a DNS lookup if the string to resolve is not a valid IP.nnThis is useful every time only IPs are valid inputs or when we want tonskip DNS resolution that is slow during runtime operations if we arenrequired to block.n,22.0,1.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.6665783579949205,12.0,295.0,54.0,232.74296875,6516.5,1.0326215001981065,2773.0,Feature Addition,False,,
774f0bd45e04caf606c09ca774283f36252998c6,39f9f449b08b5838144160dcea1b9e0b5923e43b,antirez,antirez@gmail.com,Fri Jan 10 15:16:55 2014 +0100,1389363415,Sentinel: SENTINEL MONITOR command implemented.It allows to add new masters to monitor at runtime.n,34.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3425.0,115.0,0.02443287037037037,6518.0,41.92846991946945,2774.0,None,False,True,"[""7e63dd23f3faae7a399617128ffef224e0f21754""]"
39f9f449b08b5838144160dcea1b9e0b5923e43b,d4f296bc1d9a9d64830825a789ce44e5234f0b12,antirez,antirez@gmail.com,Fri Jan 10 15:18:41 2014 +0100,1389363521,anetResolveIP() prototype added to anet.h.,1.0,0.0,"src/anet.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,66.0,18.0,0.011134259259259259,6519.0,90.81288981288981,2775.0,Feature Addition,False,,
d4f296bc1d9a9d64830825a789ce44e5234f0b12,9d0f46c6f536379a549a393682432f14751bd8a0,antirez,antirez@gmail.com,Fri Jan 10 15:22:06 2014 +0100,1389363726,Sentinel: flush config on disk when new master is added.,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3459.0,116.0,0.0035995370370370365,6520.0,278.8135048231511,2776.0,None,False,,
9d0f46c6f536379a549a393682432f14751bd8a0,cf2835519eab7d4695ead10a771fa2f3847f6d05,antirez,antirez@gmail.com,Fri Jan 10 15:33:42 2014 +0100,1389364422,"Sentinel: releaseSentinelRedisInstance() top comment fixed.The claim about unlinking the instance from the connected hash tablesnwas the opposite of the reality. Also the current actual behavior isnsafer in most cases, so it is better to manually unlink when needed.n",1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3460.0,117.0,0.008055555555555555,6521.0,125.13793103448276,2777.0,None,False,,
cf2835519eab7d4695ead10a771fa2f3847f6d05,964f6b17e9c9bf7b20efb56ac922c29985d9f31d,antirez,antirez@gmail.com,Fri Jan 10 15:39:10 2014 +0100,1389364750,Sentinel: SENTINEL REMOVE command added.The command totally removes a monitored master.n,9.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3460.0,118.0,0.003796296296296296,6522.0,264.41463414634154,2778.0,None,False,,
964f6b17e9c9bf7b20efb56ac922c29985d9f31d,3cdcaff0699a7d0737260c519ccf28510f5d9131,antirez,antirez@gmail.com,Mon Jan 13 11:05:13 2014 +0100,1389607513,Sentinel: fix wrong arity error message.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3469.0,119.0,2.8097569444444446,6523.0,1.355902670505802,2779.0,None,False,,
3cdcaff0699a7d0737260c519ccf28510f5d9131,f822516e43b8fadcfbb97cee281eee19fdcfe2ad,antirez,antirez@gmail.com,Mon Jan 13 11:50:38 2014 +0100,1389610238,"SENTINEL SET implemented.The new command allows to change master-specific configurationsnat runtime. All the settable parameters can be retrivied via thenSENTINEL MASTER command, so there is no equivalent GET command.n",78.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3469.0,120.0,0.03153935185185185,6524.0,32.706422018348626,2780.0,Feature Addition,False,,
f822516e43b8fadcfbb97cee281eee19fdcfe2ad,fe86f890b07a124afdc0417bb0089677a892d454,antirez,antirez@gmail.com,Mon Jan 13 11:55:57 2014 +0100,1389610557,SENTINEL SET: error on bad option name + flush config on error.,7.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3547.0,121.0,0.00369212962962963,6525.0,271.84639498432597,2781.0,None,False,,
fe86f890b07a124afdc0417bb0089677a892d454,d5763dceaffcd2347e588352cceaf3a1615a4601,antirez,antirez@gmail.com,Tue Jan 14 09:23:26 2014 +0100,1389687806,SENTINEL SET master quorum implemented.,6.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3554.0,122.0,0.8940856481481482,6526.0,2.1184610804023354,2782.0,None,False,,
d5763dceaffcd2347e588352cceaf3a1615a4601,5189485625d9b3e6b3d38a465e9b4555a50e073e,antirez,antirez@gmail.com,Tue Jan 14 11:27:28 2014 +0100,1389695248,Set REDIS_AOF_REWRITE_MIN_SIZE to 64mb.64mb is the default value in redis.conf. For some reason instead thenhard-coded default was 1mb that is too small.n,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1380.0,384.0,5.876643518518517,6527.0,1.1701651626219616,2783.0,None,False,,
5189485625d9b3e6b3d38a465e9b4555a50e073e,aacbba2607489e7f36f439b99e0bba3d4bfa9f9d,antirez,antirez@gmail.com,Tue Jan 14 15:37:49 2014 +0100,1389710269,Fix typo in aofRewriteBufferAppend() comment.,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1177.0,102.0,39.95991898148148,6528.0,1.0250250757631272,2784.0,Corrective,True,,
aacbba2607489e7f36f439b99e0bba3d4bfa9f9d,28273394cb37a3fabc5869bb5e2725a401e04c6f,antirez,antirez@gmail.com,Tue Jan 14 16:33:14 2014 +0100,1389713594,"Cluster: support to read from slave nodes.A client can enter a special cluster read-only mode using the READONLYncommand: if the client read from a slave instance after this command,nfor slots that are actually served by the instance's master, the queriesnwill be processed without redirection, allowing clients to read fromnslaves (but without any kind fo read-after-write guarantee).nnThe READWRITE command can be used in order to exit the readonly state.n",37.0,3.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.8287124922704872,12.0,2373.75,1264.0,11.889467592592592,6530.5,1.0683307998507912,2788.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
28273394cb37a3fabc5869bb5e2725a401e04c6f,6c63df3031ee8908757b4f016f4df2e7591a0a20,antirez,antirez@gmail.com,Wed Jan 15 10:31:12 2014 +0100,1389778272,"Cluster: atomic update of nodes.conf file.The way the file was generated was unsafe and leaded to nodes.conf filencorruption (zero length file) on server stop/crash during the creationnof the file.nnThe previous file update method was as simple as open with O_TRUNCnfollowed by the write call. While the write call was a single one withnthe full payload, ensuring no half-written files for POSIX semantics,nstopping the server just after the open call resulted into a zero-lengthnfile (all the nodes information lost!).n",28.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3418.0,279.0,0.7485879629629629,6533.0,2.335848356473608,2789.0,None,False,,
6c63df3031ee8908757b4f016f4df2e7591a0a20,fb659cd334fde195cc86a4cb8cbecacc9b7358f5,antirez,antirez@gmail.com,Wed Jan 15 11:23:34 2014 +0100,1389781414,"Cluster: ignore empty lines in nodes.conf.Even without the user messing manually with the file, it is stillnpossible to have blank lines (just a single n per line) because ofnhow the nodes.conf update/write process works.n",10.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3444.0,280.0,0.03636574074074074,6534.0,28.498408656906427,2790.0,None,False,,
fb659cd334fde195cc86a4cb8cbecacc9b7358f5,25ddefdea300958f356365ab8830a9676193df70,antirez,antirez@gmail.com,Wed Jan 15 11:33:41 2014 +0100,1389782021,Cluster: range checking in getSlotOrReply() fixed.See issue #1426 on Github.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3451.0,281.0,0.007025462962962963,6535.0,143.33937397034597,2791.0,None,False,,
25ddefdea300958f356365ab8830a9676193df70,a687cbc19c3aab75c49d1bfa593f9327afe44e03,antirez,antirez@gmail.com,Wed Jan 15 12:26:12 2014 +0100,1389785172,"Cluster: periodically call clusterUpdateState() when cluster is down.Usually we update the cluster state (to understand if we should acceptnqueries or reply with an error) only when there is a change in the statenof the nodes. However for the delayed rejoin feature to work, that is,nfor a master to wait some time before accepting queries again after itnrejoins the majority, we need to periodically update the last time whennthe node was partitioned away from the majority.nnWith this commit if the cluster is down we update the state ten timesnper second.n",2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3451.0,282.0,0.03646990740740741,6536.0,28.419866708981274,2792.0,None,False,,
a687cbc19c3aab75c49d1bfa593f9327afe44e03,a81340abaf16006ac78a9b6aecb44d50cb589822,antirez,antirez@gmail.com,Wed Jan 15 12:34:33 2014 +0100,1389785673,"Cluster: set a minimum rejoin delay if node_timeout is too small.The rejoin delay usually is the node timeout. However if the nodentimeout is too small, we set it to 500 milliseconds, that is a valuenchosen to be greater than most setups RTT / instances latency figuresnso that likely communication with other nodes happen before rejoining.n",3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3452.0,283.0,0.005798611111111111,6537.0,173.45508982035932,2793.0,None,False,,
a81340abaf16006ac78a9b6aecb44d50cb589822,b51be7b34feaab78b6a382f9dc55b6fbc38813a7,antirez,antirez@gmail.com,Wed Jan 15 16:06:54 2014 +0100,1389798414,Cluster: clusterBlacklistExists() requires blacklist cleanup before lookup.,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3455.0,284.0,0.14746527777777774,6538.0,7.781257358135153,2794.0,None,False,,
b51be7b34feaab78b6a382f9dc55b6fbc38813a7,4e1861155f2dfc52e357b9253ea894c6f7959a06,antirez,antirez@gmail.com,Wed Jan 15 16:44:06 2014 +0100,1389800646,Cluster: clusterBlacklistAddNode() key lookup fixed.We can't lookup by node->name that's not an SDS string but a plain Cnarray in the node structure.n,7.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3456.0,285.0,0.02583333333333333,6539.0,39.709677419354854,2795.0,None,False,,
4e1861155f2dfc52e357b9253ea894c6f7959a06,ccf268fa17a4debbd40256470940ddcbb8875e88,antirez,antirez@gmail.com,Wed Jan 15 16:49:31 2014 +0100,1389800971,Cluster: fix clusterBlacklistAddNode() by setting right expire time.The hash table value should be set to now + 60 seconds otherwise itnexpires immediately.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3460.0,286.0,0.0037615740740740734,6540.0,266.84615384615387,2796.0,None,False,,
ccf268fa17a4debbd40256470940ddcbb8875e88,3e948970fe81d2a209c5f9731123ca5cebfe1458,antirez,antirez@gmail.com,Wed Jan 15 16:50:45 2014 +0100,1389801045,Cluster: use the node blacklist in CLUSTER FORGET.CLUSTER FORGET is not useful if we can't remove a node from all thennodes of our cluster because of the Gossip protocol that keeps addingna given node to nodes where we already tried to remove it.nnSo now CLUSTER FORGET implements a nodes blacklist that is set andnchecked by the Gossip section processing function. This way before annode is re-added at least 60 seconds must elapse since the FORGETnexecution.nnThis means that redis-trib has some time to remove a node from a wholencluster. It is possible that in the future it will be uesful to raisenthe 60 sec figure to something bigger.n,6.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3460.0,287.0,0.0008564814814814815,6541.0,1168.5675675675675,2797.0,None,False,,
3e948970fe81d2a209c5f9731123ca5cebfe1458,0c373207fa5092bb0f7cdaef5ac78b8e64614bfd,antirez,antirez@gmail.com,Thu Jan 16 09:46:23 2014 +0100,1389861983,Cluster: don't forget yourself with CLUSTER FORGET.,4.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3465.0,288.0,0.705300925925926,6542.0,2.4178345203321414,2798.0,None,False,,
0c373207fa5092bb0f7cdaef5ac78b8e64614bfd,9531c84807910e0d85e34e6bbadecec587371355,antirez,antirez@gmail.com,Thu Jan 16 16:23:28 2014 +0100,1389885808,Cluster: redis-trib help output improved.Show options if any. Clarify that for some command any node address isnok.n,10.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,886.0,66.0,30.26591435185185,6543.0,1.0330404688381345,2799.0,None,False,,
9531c84807910e0d85e34e6bbadecec587371355,3d455393a6a874e49abe51543fb442d38073f07d,antirez,antirez@gmail.com,Thu Jan 16 17:49:35 2014 +0100,1389890975,Cluster: don't let a node forget its own master.redis-trib should make sure to reconfigure slaves of a node to removenfrom the cluster to replicate with other nodes before sending CLUSTERnFORGET.n,8.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3468.0,289.0,0.33555555555555555,6544.0,3.9801324503311264,2800.0,None,False,,
3d455393a6a874e49abe51543fb442d38073f07d,17d0c3e85aceb12b87bc35d98d2768671f03d719,antirez,antirez@gmail.com,Thu Jan 16 18:02:16 2014 +0100,1389891736,Cluster: redis-trib delnode implementation.,41.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,892.0,67.0,0.06861111111111111,6545.0,15.574898785425102,2801.0,None,False,,
17d0c3e85aceb12b87bc35d98d2768671f03d719,30d9c1dc32f9028ed80b0e20237ba201d7bfcbb5,antirez,antirez@gmail.com,Fri Jan 17 10:29:40 2014 +0100,1389950980,Cluster: fix redis-trib help subcommand.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,932.0,68.0,0.6856944444444445,6546.0,2.4583755316994127,2802.0,None,False,,
30d9c1dc32f9028ed80b0e20237ba201d7bfcbb5,b4511767342b18335faaf37e5780711e57f88616,antirez,antirez@gmail.com,Fri Jan 17 11:48:42 2014 +0100,1389955722,Cluster: redis-trib addnode is now able to add replicas.,60.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,932.0,69.0,0.05488425925925928,6547.0,19.2201602699283,2803.0,None,False,,
b4511767342b18335faaf37e5780711e57f88616,a68c9ba97eb8ea7b475df354fc505ca4634a8e0a,antirez,antirez@gmail.com,Fri Jan 17 12:06:06 2014 +0100,1389956766,Cluster: redis-trib shows what a slave replicates + fixes.Also the :replicates info field in the node object is now correctlynpopulated. This also fixes the :replicas field computation.n,10.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,990.0,70.0,0.012083333333333331,6548.0,83.75862068965517,2804.0,None,False,,
a68c9ba97eb8ea7b475df354fc505ca4634a8e0a,27ed9da3834850233d6a793556f06ce9d6834c1b,antirez,antirez@gmail.com,Fri Jan 17 12:32:49 2014 +0100,1389958369,Cluster: redis-trib help output format modified.,2.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,996.0,71.0,0.01855324074074074,6549.0,54.89893948845914,2805.0,None,False,,
27ed9da3834850233d6a793556f06ce9d6834c1b,36c24bcca0855004bcbdb9b51b0ae83b26e671ca,antirez,antirez@gmail.com,Fri Jan 17 17:56:45 2014 +0100,1389977805,Cluster: redis-trib shows number of replicas of masters.,2.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,995.0,72.0,0.2249537037037037,6550.0,5.445359127392467,2806.0,None,False,,
36c24bcca0855004bcbdb9b51b0ae83b26e671ca,abd6308d273cd214a67645d28b2c329ea43e9bd6,antirez,antirez@gmail.com,Fri Jan 17 18:20:31 2014 +0100,1389979231,"Set server.repl_down_since to 0 when changing master.When an instance is potentially set to replicate with another master, itnis conceptually disconnected forever, since we have no old copy of thendataset for this master in memory.n",1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1819.0,108.0,9.163483796296298,6551.0,1.1091288010357132,2807.0,None,False,True,"[""2e167f7d0e9abb5c49f8f0fb22a3fe2340ad0e31""]"
abd6308d273cd214a67645d28b2c329ea43e9bd6,ac3850cabd3944c06a07ece83ad44f3dc6ad50c3,antirez,antirez@gmail.com,Fri Jan 17 18:22:35 2014 +0100,1389979355,Cluster: allow CLUSTER REPLICATE to switch master.The code was doing checks for slaves that should be done only when theninstance is currently a master. Switching a slave from a master tonanother one should just work.n,6.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3472.0,290.0,1.0229166666666667,6552.0,1.9775967413441955,2808.0,None,False,,
ac3850cabd3944c06a07ece83ad44f3dc6ad50c3,437fc2cb56102b753579420e2bcf1065c09bd2b3,antirez,antirez@gmail.com,Mon Jan 20 11:08:14 2014 +0100,1390212494,Cluster: fix error reporting when slaveof is found in config.,6.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1813.0,130.0,27.930266203703702,6553.0,1.035803453955888,2809.0,None,False,,
437fc2cb56102b753579420e2bcf1065c09bd2b3,e4a5605c9a7e5b8c425e46b6f12dddefbaff3e73,antirez,antirez@gmail.com,Mon Jan 20 11:10:42 2014 +0100,1390212642,Cluster: don't rewrite slaveof config directive in cluster mode.,3.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1818.0,131.0,0.001712962962962963,6554.0,584.7837837837837,2810.0,None,False,,
e4a5605c9a7e5b8c425e46b6f12dddefbaff3e73,e6970e204f8f05572d5500297905ef68a6f38b41,antirez,antirez@gmail.com,Mon Jan 20 11:19:04 2014 +0100,1390213144,Cluster: debug printf statemets removed.These were committed for error after being inserted in order to fix annissue.n,3.0,18.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3474.0,291.0,2.7058912037037035,6555.0,1.369564008571832,2811.0,None,False,,
e6970e204f8f05572d5500297905ef68a6f38b41,80e80668f47698320bff4fe45ce2ecd2a463d787,antirez,antirez@gmail.com,Mon Jan 20 11:52:52 2014 +0100,1390215172,"Cluster: master nodes wait before rejoining the cluster after reboot.One of the simple heuristics used by Redis Cluster in order to avoidnlosing data in the typical failure modes created by the asynchronousnreplication with the slaves (a master is unable, when accepting anwrite, to immediately tell if it should be really accepted or refusednbecause of a configuration change), is to wait some time before tonrejoin the cluster after being partitioned away from the majority ofninstances.nnA similar condition happens when a master is restarted. It does not knownif it was already failed over, nor if all the clients have already annupdated configuration about the cluster map, so it is possible thatnclients will try to write to stale masters that were restarted.nnIn a similar way this commit changes masters behavior so they waitn2000 milliseconds before accepting writes after a reboot. There isnnothing special about 2 seconds if not to be a value supposedly largerna few orders of magnitude compared to the cluster bus communicationnlatencies.n",16.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3459.0,292.0,0.023472222222222217,6556.0,43.60355029585799,2812.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
80e80668f47698320bff4fe45ce2ecd2a463d787,172f14d48c26d35435a77cafbb49458a1a788887,antirez,antirez@gmail.com,Wed Jan 22 09:54:43 2014 +0100,1390380883,"Use fflush() before fsync() in rio.c.Incremental flushing in rio.c is only used to avoid huge kernel buffersnsynched to slow disks creating big latency spikes, so this fix has nondurability implications, however it is certainly more correct to makensure that the FILE buffers are flushed to the kernel before callingnfsync on the file descriptor.nnThanks to Li Shao Kai for reporting this issue in the Redis mailingnlist.n",1.0,0.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,202.0,11.0,405.7884375,6557.0,1.0024643383290093,2813.0,Corrective,True,,
172f14d48c26d35435a77cafbb49458a1a788887,994c5b26dd1f66e4db728f3760a9cff79ff1f756,antirez,antirez@gmail.com,Wed Jan 22 12:04:08 2014 +0100,1390388648,redis-cli: support for --scan option.,46.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1601.0,91.0,122.64416666666666,6558.0,1.0081536694910072,2814.0,None,False,,
994c5b26dd1f66e4db728f3760a9cff79ff1f756,1cf532dc37a5f853e87790087ea357b78b1b6796,antirez,antirez@gmail.com,Wed Jan 22 12:07:42 2014 +0100,1390388862,redis-cli --help output improved with --scan and periods.,24.0,22.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1647.0,92.0,0.002476851851851852,6559.0,404.73831775700927,2815.0,None,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
1cf532dc37a5f853e87790087ea357b78b1b6796,603e480fd5e209f41fd042cfd6e1ef5e2860ddc2,antirez,antirez@gmail.com,Wed Jan 22 18:09:06 2014 +0100,1390410546,Cluster: clusterGenNodesDescription() refactored into two functions.,80.0,68.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3474.0,293.0,2.261273148148148,6560.0,1.4422287510108818,2816.0,None,False,True,"[""a69178fdd2df5a0045a49f89ac24e4f91c2a89cf""]"
603e480fd5e209f41fd042cfd6e1ef5e2860ddc2,5383ab0bc6abeda0c8c10ecf1797bbff238315da,antirez,antirez@gmail.com,Wed Jan 22 18:38:42 2014 +0100,1390412322,Cluster: CLUSTER SLAVES subcommand added.,22.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3486.0,294.0,0.02055555555555556,6561.0,49.64864864864865,2817.0,None,False,,
5383ab0bc6abeda0c8c10ecf1797bbff238315da,0f9422d5756da2b05814cb24f235fc0fa9f5044b,antirez,antirez@gmail.com,Wed Jan 22 18:46:06 2014 +0100,1390412766,Cluster: update slaves lists in clusterSetMaster().,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3508.0,295.0,0.005138888888888889,6562.0,195.59459459459458,2818.0,None,False,,
0f9422d5756da2b05814cb24f235fc0fa9f5044b,40377fa522383ec73036ba07fe95a1e315e1c19e,antirez,antirez@gmail.com,Fri Jan 24 15:06:01 2014 +0100,1390572361,Cluster: redis-trib set-timeout implemented.,34.0,5.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,997.0,73.0,6.881435185185183,6563.0,1.145318523402337,2819.0,None,False,,
40377fa522383ec73036ba07fe95a1e315e1c19e,23f4e9f0d91ee5845a9edab298c4b4a3c00d5f07,antirez,antirez@gmail.com,Sat Jan 25 11:53:53 2014 +0100,1390647233,Don't log MONITOR clients as disconnecting slaves.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1563.0,171.0,10.806006944444444,6564.0,1.0925411213541851,2820.0,None,False,,
23f4e9f0d91ee5845a9edab298c4b4a3c00d5f07,72f1715e45c8e8418e158fb676b7e491d51ab9e7,antirez,antirez@gmail.com,Tue Jan 28 10:10:56 2014 +0100,1390900256,Fixed inverted if condition in MISCONF error code path.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3165.0,432.0,13.734513888888893,6565.0,1.0728092750926548,2821.0,Corrective,True,,
72f1715e45c8e8418e158fb676b7e491d51ab9e7,0b1b25c51cb6e4ed4469d413284d2a8a9051cf0d,antirez,antirez@gmail.com,Tue Jan 28 16:28:07 2014 +0100,1390922887,"Cluster: introduced repl_offset fields in clusterNode.The two fields are used in order to remember the latest knownnreplication offset and the time we received it from other slave nodes.nnThis will be used by slaves in order to start the election procedurenwith a delay that is proportional to the rank of the slave among thenother slaves for this master, when sorted for replication offset.nnUsually this allows the slave with the most updated offset to win thenelection and replace the failing master in the cluster.n",8.0,4.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,12.0,1853.0,301.0,32.928136574074074,6566.5,1.0922780813871995,2823.0,None,False,,
0b1b25c51cb6e4ed4469d413284d2a8a9051cf0d,8b32bd483aecb3271aa3527ac869b87342a8a9b6,antirez,antirez@gmail.com,Tue Jan 28 16:34:23 2014 +0100,1390923263,Cluster: limit cluster.h to 80 cols.,4.0,3.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,196.0,6.0,0.004351851851851852,6568.0,230.78723404255317,2824.0,None,False,,
8b32bd483aecb3271aa3527ac869b87342a8a9b6,befcf6259e1596661a454d1a1013e84178ac9426,antirez,antirez@gmail.com,Tue Jan 28 16:51:50 2014 +0100,1390924310,Cluster: broadcast master/slave replication offset in bus header.,25.0,10.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.3159971329784247,12.0,1855.5,304.0,0.01429398148148148,6569.5,48.84827629373992,2826.0,None,False,,
befcf6259e1596661a454d1a1013e84178ac9426,f1e09d8c41f66cf8e2de644da889ee1b2f92e8e6,antirez,antirez@gmail.com,Wed Jan 29 11:08:52 2014 +0100,1390990132,Cluster: clusterBroadcastPong() improved with target selection.Now we can broadcast a pong to all the instances or just the localnslaves (that is useful for replication offset propagation).n,20.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3527.0,298.0,0.7618287037037037,6571.0,2.312631035216189,2827.0,None,False,,
f1e09d8c41f66cf8e2de644da889ee1b2f92e8e6,e36bd8b43e6e99b0e4936d4a5d326424b13d6107,antirez,antirez@gmail.com,Wed Jan 29 11:22:22 2014 +0100,1390990942,"Cluster: added a global myself pointer in cluster.c.Accessing to the 'myself' node, the node representing the currentlynrunning instance, is handy without the need to typenserver.cluster->myself every time.n",8.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3544.0,299.0,0.009375,6572.0,107.66666666666669,2828.0,None,False,,
e36bd8b43e6e99b0e4936d4a5d326424b13d6107,099bd336db69b0195b2b151bbd690f7373ad1665,antirez,antirez@gmail.com,Wed Jan 29 11:38:14 2014 +0100,1390991894,Cluster: use myself instead of server->cluster.myself.,52.0,67.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3546.0,300.0,0.01101851851851852,6573.0,91.75630252100842,2829.0,None,False,,
099bd336db69b0195b2b151bbd690f7373ad1665,9d4ded7ec6cc38f1576cc34e6f30d24c202a5963,antirez,antirez@gmail.com,Wed Jan 29 12:17:16 2014 +0100,1390994236,Cluster: refactoring: new macros to check node flags.,54.0,62.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.42368057157091055,12.0,1865.0,309.0,0.4182175925925926,6574.5,20.043547792525,2831.0,None,False,,
9d4ded7ec6cc38f1576cc34e6f30d24c202a5963,40cd38f0c4988838a2b0e31799ddfc5a96537b95,antirez,antirez@gmail.com,Wed Jan 29 16:01:00 2014 +0100,1391007660,Cluster: update node replication offset from bus packets headers.,3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3515.0,302.0,0.15537037037037038,6576.0,7.4362336114421925,2832.0,None,False,,
40cd38f0c4988838a2b0e31799ddfc5a96537b95,6f54032080d03c8e0145f9f816ce21879b2c98df,antirez,antirez@gmail.com,Wed Jan 29 16:39:04 2014 +0100,1391009944,"Cluster: function clusterGetSlaveRank() added.Return the number of slaves for the same master having a betternreplication offset of the current slave, that is, the slave rank usednto pick a delay before the request for election.n",52.0,9.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.0239228180015465,12.0,2240.333333333333,798.0,8.98667824074074,6578.0,13.643998222159238,2835.0,None,False,,
6f54032080d03c8e0145f9f816ce21879b2c98df,940531e9b71dc1538cdaf96744a2b87e339ce836,antirez,antirez@gmail.com,Wed Jan 29 16:51:11 2014 +0100,1391010671,"Cluster: added progressive election delay according to slave rank.Note that when we compute the initial delay, there are probably stillnmore up to date information to receive from slaves with new offsets, sonthe delay is recomputed when new data is available.n",28.0,3.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.20559250818508304,12.0,1873.5,313.0,0.09931712962962964,6580.5,62.93947249505361,2837.0,None,False,,
940531e9b71dc1538cdaf96744a2b87e339ce836,e2b59621a84a852577cbb4597dbd7d7240f1a917,antirez,antirez@gmail.com,Wed Jan 29 17:16:10 2014 +0100,1391012170,Cluster: log offset when announcing the failover election delay.,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3564.0,305.0,0.017349537037037042,6582.0,58.63842561707805,2838.0,None,False,,
e2b59621a84a852577cbb4597dbd7d7240f1a917,35820549825791a8f188c2870a9069d36edd019d,antirez,antirez@gmail.com,Wed Jan 29 17:19:55 2014 +0100,1391012395,"Cluster: broadcast pong to other slaves in the same ring.When we schedule a failover, broadcast a PONG to the slaves.nThe other slaves that plan to get elected will do the same too, this waynit is likely that every slave will have a good picture of its own rank.nnNote that this is N*N messages where N is the number of slaves for thenfailing master, however usually even large clusters have many masternnodes but a limited number of replicas per node, so this is harmless.n",4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3566.0,306.0,0.0026041666666666665,6583.0,385.0,2839.0,None,False,,
35820549825791a8f188c2870a9069d36edd019d,4beaaff8eabcf709e81004bb5d125c1a7dce885e,antirez,antirez@gmail.com,Wed Jan 29 17:28:46 2014 +0100,1391012926,Cluster: remove not needed return statement breaking failover.,0.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3570.0,307.0,0.006145833333333333,6584.0,163.71186440677968,2840.0,None,False,,
4beaaff8eabcf709e81004bb5d125c1a7dce885e,5b4020fb425f04c1aa18d9bd00931d5d05d81c81,antirez,antirez@gmail.com,Thu Jan 30 16:34:23 2014 +0100,1391096063,Cluster: swap two code blocks to have a more obvious flow.,8.0,8.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3569.0,308.0,0.9622337962962964,6585.0,2.039248469393892,2841.0,None,False,,
5b4020fb425f04c1aa18d9bd00931d5d05d81c81,c2507b0ff6346f4443e1753ca8e565214a09d6dd,antirez,antirez@gmail.com,Thu Jan 30 18:05:11 2014 +0100,1391101511,"Cluster: replica migration implementation.This feature allows slaves to migrate to orphaned masters (mastersnwithout working slaves), as long as a set of conditions are met,nincluding the fact that the migrating slave needs to be in anmaster-slaves ring with at least another slave working.n",130.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3569.0,309.0,0.06305555555555556,6586.0,16.859030837004404,2842.0,None,False,True,"[""e0f22df9950b584569771d486fd4e933432fe395"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
c2507b0ff6346f4443e1753ca8e565214a09d6dd,6c9359add1aace9680c03b9992705dbf5f25edaf,antirez,antirez@gmail.com,Thu Jan 30 18:23:31 2014 +0100,1391102611,Cluster: perform orphaned masters check before continue statements.The check was placed in a way that conflicted with the continuenstatements used by the node hearth beat code later that needs to skipnthe current node sometimes. Moved at the start of the function so that'snalways executed.n,11.0,11.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3696.0,310.0,0.012731481481481479,6587.0,79.54545454545455,2843.0,None,False,,
6c9359add1aace9680c03b9992705dbf5f25edaf,3ff1bb4b2e146f94672967f1a37bd01b83cd6150,antirez,antirez@gmail.com,Fri Jan 31 10:13:36 2014 +0100,1391159616,Sentinel: check arity for SENTINEL MASTER command.This fixes issue #1530.n,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3560.0,123.0,17.034837962962968,6588.0,1.0587032293570502,2844.0,None,False,,
3ff1bb4b2e146f94672967f1a37bd01b83cd6150,a7d30681c9977511951432a17a1e0805d303aa4b,antirez,antirez@gmail.com,Fri Jan 31 11:12:34 2014 +0100,1391163154,"Cluster: configurable replicas migration barrier.It is possible to configure the min number of additional working slavesna master should be left with, for a slave to migrate to an orphanednmaster.n",39.0,2.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,1.805765854894392,12.0,1834.166666666667,1396.0,10.180277777777778,6591.5,1.0199086378665172,2849.0,None,False,,
a7d30681c9977511951432a17a1e0805d303aa4b,cbfdd13b3a2ab7a5fcefaba93b4cc4e9e069a695,antirez,antirez@gmail.com,Fri Jan 31 11:30:49 2014 +0100,1391164249,Cluster: barrer -> barrier in redis.conf.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,752.0,124.0,0.012673611111111113,6595.0,79.90410958904108,1329.0,None,False,,
cbfdd13b3a2ab7a5fcefaba93b4cc4e9e069a695,b8bfbf46c5e3771c11fc26571510f4b59814423a,antirez,antirez@gmail.com,Fri Jan 31 11:31:50 2014 +0100,1391164310,Cluster: fix an error in migration-barrier comment in redis.conf.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,752.0,125.0,0.0007060185185185185,6596.0,1417.393442622951,1330.0,None,False,,
b8bfbf46c5e3771c11fc26571510f4b59814423a,d76aa96d1afa556b0adb74b901831cf13134cf1d,Nenad Merdanovic,nimzo@nimzo.info,Fri Nov 8 20:55:48 2013 +0100,1383940548,"Add support for listen(2) backlog definitionIn high RPS environments, the default listen backlog is not sufficient, songiving users the power to configure it is the right approach, especiallynsince it requires only minor modifications to the code.n",31.0,21.0,"redis.conf,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,2.161750876694646,12.0,1291.3333333333333,1138.0,-76.6523225308642,2.5,0.8300230187264579,4.0,Feature Addition,False,,
d76aa96d1afa556b0adb74b901831cf13134cf1d,7be946fde2df23bc983d97e099b8955fc0f69bfb,antirez,antirez@gmail.com,Fri Jan 31 14:55:43 2014 +0100,1391176543,Option backlog renamed tcp-backlog.This is especially important since we already have a concept of backlogn(the replication backlog).n,19.0,14.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.6290562632939265,12.0,1787.25,1085.0,83.74994212962962,6598.5,1.0062189097698382,2852.0,None,False,True,"[""c77b95fd01cb6959005121b91e21037cd3da1c88""]"
7be946fde2df23bc983d97e099b8955fc0f69bfb,e40d3e28e8ac63f840473f15c8b7a640cd314598,antirez,antirez@gmail.com,Fri Jan 31 14:59:50 2014 +0100,1391176790,Redis.conf comment about tcp-backlog option improved.,7.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,755.0,128.0,0.0028587962962962963,6601.0,350.7975708502024,1332.0,None,False,,
e40d3e28e8ac63f840473f15c8b7a640cd314598,331de6930a562777d8c2ddd554c3691964ce61a9,antirez,antirez@gmail.com,Fri Jan 31 16:25:13 2014 +0100,1391181913,"Test: fixed osx msg passing issue in testing framework.The Redis test uses a server-clients model in order to parallelize thenexecution of different tests. However in recent versions of osx notnsetting the channel to a binary encoding caused issues even if AFAIK nonbinary data is really sent via this channel. However now the channelsnare deliberately set to a binary encoding and this solves the issue.nnThe exact issue was the test not terminating and giving the impressionnof running forever, since test clients or servers were unable tonexchange the messages to continue.n",23.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,502.0,84.0,93.20222222222222,6602.0,1.0107293579075367,387.0,Preventative,False,,
331de6930a562777d8c2ddd554c3691964ce61a9,79270cae649e48a3c4d0d7fdbb4f2312f41912df,PatrickJS,github@gdi2290.com,Mon Feb 3 02:10:54 2014 -0800,1391422254,update copyright year,1.0,1.0,"COPYING,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,10.0,2.0,451.6641782407408,0.0,0.0,0.0,None,False,,
331de6930a562777d8c2ddd554c3691964ce61a9 79270cae649e48a3c4d0d7fdbb4f2312f41912df,b0335287ac1ff54c302a2eb1bcfc0df99f1360af,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 3 02:18:24 2014 -0800,1391422704,Merge pull request #1534 from gdi2290/patch-1update copyright year,,,,,,,,,,,,,,,Merge,False,,
b0335287ac1ff54c302a2eb1bcfc0df99f1360af,89884e8f6ea1271801e70d9d7c9c91a585a656b6,antirez,antirez@gmail.com,Mon Feb 3 15:45:40 2014 +0100,1391438740,"Scripting: use mstime() and mstime_t for lua_time_start.server.lua_time_start is expressed in milliseconds. Use mstime_t insteadnof long long, and populate it with mstime() instead of ustime()/1000.nnFunctionally identical but more natural.n",4.0,4.0,"src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1229.5,468.0,31.500028935185185,6603.5,1.1726981111909618,2854.0,None,False,,
89884e8f6ea1271801e70d9d7c9c91a585a656b6,b770079f2c9177daef571f76fec21059bea7dbca,antirez,antirez@gmail.com,Mon Feb 3 15:51:03 2014 +0100,1391439063,Allow CONFIG and SHUTDOWN while in stale-slave state.,2.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3172.0,436.0,3.0384259259259268,6605.0,1.3291177815023616,2855.0,None,False,,
b770079f2c9177daef571f76fec21059bea7dbca,b089ba98cc9f638d79895535c6ae6aed25651a03,antirez,antirez@gmail.com,Mon Feb 3 16:15:53 2014 +0100,1391440553,"Scripting: expire keys in scripts only at first access.Keys expiring in the middle of the execution of Lua scripts are toncreate inconsistencies in masters and / or AOF files. See the followingnexample:nnif redis.call(exists,KEYS[1]) == 1nthennredis.call(incr,mycounter)nendnnif redis.call(exists,KEYS[1]) == 1nthennreturn redis.call(incr,mycounter)nendnnThe script executes two times the same *if key exists then incrementcounter*nlogic. However the two executions will work differently in the master andnthe slaves, provided some unlucky timing happens.nnIn the master the first time the key may still exist, while the second timenthe key may no longer exist. This will result in the key incremented just onentime. However as a side effect the master will generate a syntheticn`DEL` command in the replication channel in order to force the slaves tonexpire the key (given that key expiration is master-driven).nnWhen the same script will run in the slave, the key will no longer benthere, so the script will not increment the key.nnThe key idea used to implement the expire-at-first-lookup semantics wasnprovided by Marc Gravell.n",11.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1058.0,123.0,54.91491898148149,6606.0,1.0182099877145812,2856.0,None,False,,
b089ba98cc9f638d79895535c6ae6aed25651a03,4919a13f503ab4ac5ad5611987996c4432c8de08,antirez,antirez@gmail.com,Tue Feb 4 15:52:09 2014 +0100,1391525529,"CLIENT PAUSE and related API implemented.The API is one of the bulding blocks of CLUSTER FAILOVER command thatnexecutes a manual failover in Redis Cluster. However exposed as ancommand that the user can call directly, it makes much simpler tonupgrade a standalone Redis instance using a slave in a safer way.nnThe commands works like that:nnCLIENT PAUSE <milliesconds>nnAll the clients that are not slaves and not in MONITOR state are pausednfor the specified number of milliesconds. This means that slaves arennormally served in the meantime.nnAt the end of the specified amount of time all the clients are unblockednand will continue operations normally. This command has no effects onnthe population of the slow log, since clients are not blocked in thenmiddle of operations but only when there is to process new data.nnNote that while the clients are unblocked, still new commands arenaccepted and queued in the client buffer, so clients will likely notnblock while writing to the server while the pause is active.n",64.0,0.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6685644431995964,12.0,2040.666666666667,1000.0,4.056909722222222,6608.0,1.0900308048753862,2859.0,Corrective,True,True,"[""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509"", ""ede6e22cd398a048a0c25543017dbb9b477b9963""]"
4919a13f503ab4ac5ad5611987996c4432c8de08,4cf0cd57192d07735a1ddd3aeb84151665929f5c,antirez,antirez@gmail.com,Wed Feb 5 13:01:24 2014 +0100,1391601684,Cluster: manual failover initial implementation.,180.0,5.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.4941829348497887,12.0,1953.0,323.0,5.0755787037037035,6610.5,1.14776640138645,2861.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0"", ""d1a005ab3963c16b65e805675a76f0e40c723158""]"
4cf0cd57192d07735a1ddd3aeb84151665929f5c,b7402bcad58cfcc78beb3f7119aa556b87d985d1,antirez,antirez@gmail.com,Wed Feb 5 13:10:03 2014 +0100,1391602203,"Cluster: force AUTH ACK on manual failover.When a slave requests masters vote for a manual failover, thenREQUEST_AUTH message is flagged in a special way in order to force thenmasters to give the authorization even if the master is not marked asnfailing.n",12.0,2.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,2040.5,325.0,0.006006944444444444,6612.5,125.85549132947979,2863.0,None,False,,
b7402bcad58cfcc78beb3f7119aa556b87d985d1,c72449af30af7d8607163bbe4da2153c4a912bdc,antirez,antirez@gmail.com,Wed Feb 5 15:45:15 2014 +0100,1391611515,Cluster: check that a MF is in progress in manualFailoverCheckTimeout().Otherwise it is always detected as a manual failover timed out.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3862.0,314.0,0.10777777777777778,6614.0,10.278350515463918,2864.0,None,False,,
c72449af30af7d8607163bbe4da2153c4a912bdc,c6f02fd67a6a51e127003acf9a6ee14299dfa9a0,antirez,antirez@gmail.com,Wed Feb 5 15:52:38 2014 +0100,1391611958,Cluster: CLUSTER FAILOVER replies with OK and logs the event.,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3862.0,315.0,0.005127314814814815,6615.0,196.03386004514672,2865.0,None,False,,
c6f02fd67a6a51e127003acf9a6ee14299dfa9a0,04fe000bf8e53d12a329b7e7f761f3eeb821ea6f,antirez,antirez@gmail.com,Wed Feb 5 16:01:52 2014 +0100,1391612512,"Cluster: fixed MF condition in clusterHandleSlaveFailover().For manual failover we need a manual failover in progress, and thatnmf_can_start is true (master offset received and matched).n",5.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3864.0,316.0,0.0064120370370370355,6616.0,156.956678700361,2866.0,None,False,,
04fe000bf8e53d12a329b7e7f761f3eeb821ea6f,970de3e9c0f4e4b0ac56d1710e3b66f4a0cd06a5,antirez,antirez@gmail.com,Wed Feb 5 16:38:10 2014 +0100,1391614690,"Check for EAGAIN in sendBulkToSlave().Sometime an osx master with a Linux server over a slow link causedna strange error where osx called the writable function fornthe socket but actually apparently there was no room in the socketnbuffer to accept the write: write(2) call returned an EAGAIN error,nthat was not checked, so we considered write(2) == 0 always as a connectionnreset, which was unfortunate since the bulk transfer has to start again.nnAlso more errors are logged with the WARNING level in the same code pathnnow.n",6.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1840.0,110.0,6.999375,6617.0,1.142869899098134,2867.0,None,False,,
970de3e9c0f4e4b0ac56d1710e3b66f4a0cd06a5,2d6eb6899319276c0071b922b9458caa909040e1,antirez,antirez@gmail.com,Fri Feb 7 11:22:24 2014 +0100,1391768544,Sentinel: allow SHUTDOWN command in Sentinel mode.,10.0,6.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",3.0,1.0,1.0,1.3294340029249652,12.0,2600.333333333333,686.0,4.55221450617284,6619.0,1.1626527306395742,2870.0,None,False,,
2d6eb6899319276c0071b922b9458caa909040e1,142281dc79a1428a8deae4f531e7340851e66797,antirez,antirez@gmail.com,Fri Feb 7 16:59:24 2014 +0100,1391788764,"Cluster: keys slot computation now supports hash tags.Currently this is marginally useful, only to make sure two keys are innthe same hash slot when the cluster is stable (no rehashing innprogress).nnIn the future it is possible that support will be added to runnmutli-keys operations with keys in the same hash slot.n",23.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3868.0,317.0,2.0399537037037043,6621.0,1.4902072033225156,2871.0,None,False,True,"[""2e6f28500941d7a6f24f3831e9cabcb576d290fd""]"
142281dc79a1428a8deae4f531e7340851e66797,6df4ffe639e1a773855d5c8e87f14fb459a2e4e7,antirez,antirez@gmail.com,Fri Feb 7 18:29:20 2014 +0100,1391794160,Don't count time to feed MONITORs in SLOWLOG.,3.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3177.0,439.0,0.29648148148148146,6622.0,4.372891942535915,2872.0,None,False,,
6df4ffe639e1a773855d5c8e87f14fb459a2e4e7,dca95f241cf71bd030cb5c788349970f34f5f11f,antirez,antirez@gmail.com,Mon Feb 10 12:34:21 2014 +0100,1392032061,Cluster: redis-trib: options table entry for add-node fixed.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1026.0,74.0,16.894675925925927,6623.0,1.059190244570802,2873.0,None,False,,
dca95f241cf71bd030cb5c788349970f34f5f11f,b1c3c6e5181e5ff4200155036bea48c935566054,antirez,antirez@gmail.com,Mon Feb 10 15:19:12 2014 +0100,1392041952,Old Changelog file removed from unstable branch.,0.0,1032.0,"Changelog,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,1032.0,51.0,1320.064988425926,6624.0,1.0007575384611878,1333.0,None,False,,
b1c3c6e5181e5ff4200155036bea48c935566054,100cd7b21efa965637c5e95cd3bf72f211c00122,antirez,antirez@gmail.com,Mon Feb 10 15:38:54 2014 +0100,1392043134,Added a release notes file good for unstable.,11.0,80.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,85.0,14.0,389.9017824074074,6625.0,1.0025647484703086,1334.0,Feature Addition,False,,
100cd7b21efa965637c5e95cd3bf72f211c00122,007e1c7cb27045f8c6693ba62680beda3eb86e75,antirez,antirez@gmail.com,Mon Feb 10 15:53:09 2014 +0100,1392043989,Cluster: added signature + version in bus packets.,10.0,1.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.8453509366224365,12.0,2059.0,331.0,4.0336284722222215,6626.5,1.2312413512857452,2875.0,None,False,True,"[""591dba80553ef5f629bde45df6375dc80bf1c77c""]"
007e1c7cb27045f8c6693ba62680beda3eb86e75,dced9c06198d6b80caf7aa6fe8cb865a562c12db,antirez,antirez@gmail.com,Mon Feb 10 15:54:19 2014 +0100,1392044059,Cluster: discard bus messages with version != 0.,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3895.0,319.0,0.0008101851851851853,6628.0,1235.2857142857142,2876.0,None,False,,
dced9c06198d6b80caf7aa6fe8cb865a562c12db,7bf7b7350cb16d2bc5084d41469f96c9565bf089,antirez,antirez@gmail.com,Mon Feb 10 15:55:21 2014 +0100,1392044121,Cluster: signature changed to RCmb (Redis Cluster message bus).Sounds better after all.n,3.0,3.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2064.0,334.0,0.0011226851851851851,6629.5,920.4546059195212,2878.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
7bf7b7350cb16d2bc5084d41469f96c9565bf089,344a065d51aa79a96c58c490cf202d5950cb60da,antirez,antirez@gmail.com,Mon Feb 10 16:00:27 2014 +0100,1392044427,"Cluster: don't propagate PUBLISH two times.PUBLISH both published messages via Cluster bus and replication whenncluster was enabled, resulting in duplicated message in the slave.n",4.0,2.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,359.0,16.0,234.20317129629632,6631.0,1.0042697970077223,2879.0,None,False,,
344a065d51aa79a96c58c490cf202d5950cb60da,f885fa8bac6e476e4ca9ad8be80707ac74a320af,antirez,antirez@gmail.com,Mon Feb 10 16:27:33 2014 +0100,1392046053,Cluster: clusterReadHandler() fixed to work with new message header.,13.0,11.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,12.0,2064.0,336.0,0.02236111111111111,6632.5,34.540372670807464,2881.0,None,False,,
f885fa8bac6e476e4ca9ad8be80707ac74a320af,f106a79309c540aa49989e53ab8cba66c94b9349,antirez,antirez@gmail.com,Mon Feb 10 16:59:09 2014 +0100,1392047949,Cluster: redis-trib del-node variable typo fixed.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1026.0,75.0,0.18388888888888888,6634.0,6.438066465256799,2882.0,None,False,,
f106a79309c540aa49989e53ab8cba66c94b9349,5b2082ead3489523c336e3047550bad5cad25d98,antirez,antirez@gmail.com,Mon Feb 10 17:08:37 2014 +0100,1392048517,Cluster: replica migration should only work for masters serving slots.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3898.0,322.0,0.02851851851851852,6635.0,36.064935064935064,2883.0,None,False,,
6df4ffe639e1a773855d5c8e87f14fb459a2e4e7,21648473aad5c3d09c6e9a9ed440564c8135ef6f,Matt Stancliff,matt@genges.com,Mon Feb 10 11:06:13 2014 -0500,1392048373,"Auto-enter slaveMode when SYNC from redis-cliIf someone asks for SYNC or PSYNC from redis-cli,nautomatically enter slaveMode (as if they rannredis-cli --slave) and continue printing the replicationnstream until either they Ctrl-C or the master gets disconnected.n",12.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1649.0,93.0,19.207303240740746,0.0,0.0,0.0,None,False,,
5b2082ead3489523c336e3047550bad5cad25d98,32563b4a5f44bee87da2bbe431b6bf3a375dd939,antirez,antirez@gmail.com,Mon Feb 10 17:18:16 2014 +0100,1392049096,"Cluster: clear the FAIL status for masters without slots.Masters without slots don't participate to the cluster but just donredirections, no need to take them in FAIL state if they are backnreachable.n",3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3898.0,323.0,0.006701388888888889,6636.0,150.22279792746116,2884.0,None,False,,
32563b4a5f44bee87da2bbe431b6bf3a375dd939,1a73c992a3aeedab3c7fd57ab538722327f3fc99,antirez,antirez@gmail.com,Mon Feb 10 17:21:10 2014 +0100,1392049270,Cluster: fixed inverted arguments in logging function call.,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3899.0,324.0,0.002013888888888889,6637.0,497.5517241379312,2885.0,None,False,,
1a73c992a3aeedab3c7fd57ab538722327f3fc99,be0bb19fd3f7159a63a889ecc8db4a06bda2cf15,antirez,antirez@gmail.com,Mon Feb 10 17:44:16 2014 +0100,1392050656,"Cluster: redis-trib, more info about open slots error.",2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1026.0,76.0,0.03133101851851852,6638.0,32.917251570003685,2886.0,None,False,,
be0bb19fd3f7159a63a889ecc8db4a06bda2cf15,6fc53e16adba5a3f096bf4f242f883c95d2b12de,antirez,antirez@gmail.com,Mon Feb 10 18:01:58 2014 +0100,1392051718,Cluster: update configEpoch after manually messing with slots.,14.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3899.0,325.0,0.028333333333333325,6639.0,36.29411764705883,2887.0,None,False,,
6fc53e16adba5a3f096bf4f242f883c95d2b12de,a3755ae9ee6391b0ebb6fa0a26e0f38f00574654,antirez,antirez@gmail.com,Mon Feb 10 18:04:43 2014 +0100,1392051883,Cluster: ignore slot config changes if we are importing it.,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3910.0,326.0,0.0019097222222222226,6640.0,524.6363636363636,2888.0,None,False,,
a3755ae9ee6391b0ebb6fa0a26e0f38f00574654,bf670e0745100e1214e5d1ff74ff2e0d869a31ad,antirez,antirez@gmail.com,Mon Feb 10 18:33:34 2014 +0100,1392053614,Cluster: don't update slave's master if we don't know it.There is no way we can update the slave's node->slaveof pointer if wendon't know the master (no node with such an ID in our tables).n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3912.0,327.0,0.020034722222222214,6641.0,50.91334488734836,2889.0,None,False,,
bf670e0745100e1214e5d1ff74ff2e0d869a31ad,59e03a8f3521dddfab5dcbe99f20cf68e69791ad,antirez,antirez@gmail.com,Mon Feb 10 18:48:36 2014 +0100,1392054516,redis-trib: log event after we have reference to 'master'.,2.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1026.0,77.0,0.04467592592592592,6642.0,23.383419689119172,2890.0,None,False,,
59e03a8f3521dddfab5dcbe99f20cf68e69791ad,1ae50a9b1dd0ac9cebb694a184b7da67543d1d60,antirez,antirez@gmail.com,Mon Feb 10 19:10:21 2014 +0100,1392055821,"Cluster: redis-trib fix: cover new case of open slot.The case is the trivial one a single node claiming the slot asnmigrating, without nodes claiming it as importing.n",3.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1027.0,78.0,0.015104166666666669,6643.0,67.20689655172414,2891.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456""]"
1ae50a9b1dd0ac9cebb694a184b7da67543d1d60,3107e7ca60a126ba096e785b575dd0980e9ae29f,antirez,antirez@gmail.com,Mon Feb 10 19:14:05 2014 +0100,1392056045,Cluster: remove debugging xputs from redis-trib.,0.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1030.0,79.0,0.0025925925925925925,6644.0,386.71428571428567,2892.0,None,False,,
3107e7ca60a126ba096e785b575dd0980e9ae29f,218358bbbd6ed9b717db50868ca069a3731e08b2,antirez,antirez@gmail.com,Mon Feb 10 23:48:42 2014 +0100,1392072522,"Cluster: conditions to clear migrating on slot for SETSLOT ... NODE changed.If the slot is manually assigned to another node, clear the migratingnstatus regardless of the fact it was previously assigned to us or not,nas long as we no longer have keys for this slot.nnThis avoid a race during slots migration that may leave the slot innmigrating status in the source node, since it received an update messagenfrom the destination node that is already claiming the slot.nnThis way we are sure that redis-trib at the end of the slot migration isnalways able to close the slot correctly.n",3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3912.0,328.0,0.2188425925925926,6645.0,5.569494393907341,2893.0,None,False,,
218358bbbd6ed9b717db50868ca069a3731e08b2,6dc26795aa949d6cacad4f7c6ab2df0f18f670e4,antirez,antirez@gmail.com,Mon Feb 10 23:54:08 2014 +0100,1392072848,"Cluster: fsync at every SETSLOT command puts too pressure on disks.During slots migration redis-trib can send a number of SETSLOT commands.nFsyncing every time is a bit too much in production as verifiednempirically.nnTo make sure configs are fsynced on all nodes after a reshardingnredis-trib may send something like CLUSTER CONFSYNC.nnIn this case fsyncs were not providing too much value since anywaynprocesses can crash in the middle of the resharding of an hash slot, andnredis-trib should be able to recover from this condition anyway.n",4.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3912.0,329.0,0.003773148148148148,6646.0,266.0306748466257,2894.0,None,False,,
6dc26795aa949d6cacad4f7c6ab2df0f18f670e4,a1349728ea1281977e1dd2b82d65465165137390,antirez,antirez@gmail.com,Tue Feb 11 00:32:39 2014 +0100,1392075159,"Cluster: on resharding upgrade version of receiving node.The node receiving the hash slot needs to have a version that wins overnthe other versions in order to force the ownership of the slot.nnHowever the current code is far from perfect since a failover can happennduring the manual resharding. The fix is a work in progress but thenbottom line is that the new version must either be voted as usually,nset by redis-trib manually after it makes sure can't be used by othernnodes, or reserved configEpochs could be used for manual operations (fornexample odd versions could be never used by slaves and are always usednby CLUSTER SETSLOT NODE).n",8.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3912.0,330.0,0.026747685185185187,6647.0,38.386412808308094,2895.0,None,False,,
a1349728ea1281977e1dd2b82d65465165137390,44f7afe28a6483c048155098d0606b968264b511,antirez,antirez@gmail.com,Tue Feb 11 09:48:53 2014 +0100,1392108533,Cluster: always increment the configEpoch in SETNODE after import.Removed a stale conditional preventing the configEpoch from incrementingnafter the import in certain conditions. Since the master got a new slotnit should always claim a new configuration.n,3.0,7.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3916.0,331.0,0.38627314814814817,6648.0,3.588841613231857,2896.0,None,False,,
44f7afe28a6483c048155098d0606b968264b511,72f7abf6a2e9a6fc2b6e710e049b48ba6c3cdfa6,antirez,antirez@gmail.com,Tue Feb 11 10:00:11 2014 +0100,1392109211,"Cluster: clusterSetStartupEpoch() made more generally useful.The actual goal of the function was to get the max configEpoch found innthe cluster, so make it general by removing the assignment of the maxnepoch to currentEpoch that is useful only at startup.n",9.0,8.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3912.0,332.0,0.007847222222222222,6649.0,128.43362831858406,2897.0,None,False,,
72f7abf6a2e9a6fc2b6e710e049b48ba6c3cdfa6,4a64286c363267acff39b1f2ec9d4b47640871c0,antirez,antirez@gmail.com,Tue Feb 11 10:06:10 2014 +0100,1392109570,Cluster: configEpoch assignment in SETNODE improved.Avoid to trash a configEpoch for every slot migrated if this node hasnalready the max configEpoch across the cluster.nnStill work to do in this area but this avoids both ending with a verynhigh configEpoch without any reason and to flood the system with fsyncs.n,7.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3913.0,333.0,0.004155092592592592,6650.0,241.66852367688026,2898.0,None,False,True,"[""8dea2029a4ec3382b7d80de82d793ef2ba2773e5""]"
4a64286c363267acff39b1f2ec9d4b47640871c0,8251d2d150e454b2783d394eb3f131423b5b89d0,antirez,antirez@gmail.com,Tue Feb 11 10:13:18 2014 +0100,1392109998,Cluster: redis-trib fix: handling of another trivial case.,3.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1029.0,80.0,0.6244560185185185,6651.0,2.601393805719793,2899.0,None,False,True,"[""c68c78719f3e790fe655d1dd2a6b8ae1de4ae456""]"
8251d2d150e454b2783d394eb3f131423b5b89d0,5e0e03be41e7b07455f9f502fbaaa3dbd9e2daaf,antirez,antirez@gmail.com,Tue Feb 11 10:18:24 2014 +0100,1392110304,Cluster: UPDATE messages are the norm and verbose.Logging them at WARNING level was of little utility and of sure disturb.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3917.0,334.0,0.00849537037037037,6652.0,118.71117166212534,2900.0,None,False,,
5e0e03be41e7b07455f9f502fbaaa3dbd9e2daaf,db6d628c3ee9f39a196026b5bb5ac47cb8551aef,antirez,antirez@gmail.com,Tue Feb 11 10:34:14 2014 +0100,1392111254,Cluster: clusterDelNode(): remove node from master's slaves.,5.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3917.0,335.0,0.01099537037037037,6653.0,91.94736842105264,2901.0,None,False,,
db6d628c3ee9f39a196026b5bb5ac47cb8551aef,fe8352540fa5d6157648427b0651de9d5574e48d,antirez,antirez@gmail.com,Wed Feb 12 12:47:10 2014 +0100,1392205630,"AOF: don't abort on write errors unless fsync is 'always'.A system similar to the RDB write error handling is used, in which whennwe can't write to the AOF file, writes are no longer accepted until wenare able to write again.nnFor fsync == always we still abort on errors since there is currently noneasy way to avoid replying with success to the user otherwise, and thisnwould violate the contract with the user of only acknowledging datanalready secured on disk.n",91.0,24.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.9827139332937844,12.0,1915.333333333333,935.0,13.838472222222226,6655.0,1.0294782587835318,2904.0,None,False,True,"[""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35""]"
fe8352540fa5d6157648427b0651de9d5574e48d,fc08c8599f36761530b3ba40c31d4e8efb2e7113,antirez,antirez@gmail.com,Wed Feb 12 16:27:59 2014 +0100,1392218879,AOF write error: retry with a frequency of 1 hz.,11.0,6.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3193.0,441.0,0.15334490740740742,6657.0,7.521246886557478,2905.0,None,False,,
fc08c8599f36761530b3ba40c31d4e8efb2e7113,21e6b0fbe9810a37844bbdf86e5aba655cfa5fe9,antirez,antirez@gmail.com,Thu Feb 13 12:10:43 2014 +0100,1392289843,"Fix script cache bug in the scripting engine.This commit fixes a serious Lua scripting replication issue, describednby Github issue #1549. The root cause of the problem is that scriptsnwere put inside the script cache, assuming that slaves and AOF alreadyncontained it, even if the scripts sometimes produced no changes in thendata set, and were not actaully propagated to AOF/slaves.nnExample:nneval if tonumber(KEYS[1]) > 0 then redis.call('incr', 'x') end 1 0nnThen:nnevalsha <sha1 step 1 script> 1 0nnAt this step sha1 of the script is added to the replication script cachen(the script is marked as known to the slaves) and EVALSHA command isntransformed to EVAL. However it is not dirty (there is no changes to db),nso it is not propagated to the slaves. Then the script is called again:nnevalsha <sha1 step 1 script> 1 1nnAt this step master checks that the script already exists in thenreplication script cache and doesn't transform it to EVAL command. It isndirty and propagated to the slaves, but they fail to evaluate the scriptnas they don't have it in the script cache.nnThe fix is trivial and just uses the new API to force the propagation ofnthe executed command regardless of the dirty state of the data set.nnThank you to @minus-infinity on Github for finding the issue,nunderstanding the root cause, and fixing it.n",1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1072.0,79.0,9.850729166666667,6658.0,1.1015153277570402,2906.0,Corrective,True,,
21e6b0fbe9810a37844bbdf86e5aba655cfa5fe9,f2bdf601bee92972bad7493950a72391b9278606,antirez,antirez@gmail.com,Thu Feb 13 12:25:44 2014 +0100,1392290744,"Test: regression for issue #1549.It was verified that reverting the commit that fixes the bug, the testnno longer passes.n",12.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,421.0,28.0,167.18510416666666,6659.0,1.005981394125897,388.0,Preventative,False,True,"[""4930d903fc341faf4c5dce7197f4f81af941dfa5""]"
f2bdf601bee92972bad7493950a72391b9278606,7e8abcf6932120b5f9c8a7dadafbd5a8045c2bb6,antirez,antirez@gmail.com,Thu Feb 13 14:32:44 2014 +0100,1392298364,Log when CONFIG REWRITE goes bad.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1840.0,135.0,12.984039351851852,6660.0,1.0770176347206908,2907.0,None,False,,
7e8abcf6932120b5f9c8a7dadafbd5a8045c2bb6,51bd9da1fdf3d4bb0d4f81234f33003c16db9a51,antirez,antirez@gmail.com,Thu Feb 13 15:09:41 2014 +0100,1392300581,"Update cached time in rdbLoad() callback.server.unixtime and server.mstime are cached less precise timestampsnthat we use every time we don't need an accurate time representation andna syscall would be too slow for the number of calls we require.nnSuch an example is the initialization and update process of the lastninteraction time with the client, that is used for timeouts.nnHowever rdbLoad() can take some time to load the DB, but at the samentime it did not updated the time during DB loading. This resulted in thenbug described in issue #1535, where in the replication process the slavenloads the DB, creates the redisClient representation of its master, butnthe timestamp is so old that the master, under certain conditions, isnsensed as already timed out.nnThanks to @yoav-steinberg and Redis Labs Inc for the bug report andnanalysis.n",17.0,8.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8663137138648348,12.0,1931.0,935.0,22.299876543209876,6662.0,1.0151880617553477,2910.0,Corrective,True,,
51bd9da1fdf3d4bb0d4f81234f33003c16db9a51,e1b77b61f320077dd41d8ea2a7fd74561084d75f,antirez,antirez@gmail.com,Mon Feb 17 12:10:12 2014 +0100,1392635412,"Sentinel: better specify startup errors due to config file.Now it logs the file name if it is not accessible. Also there is andifferent error for the missing config file case, and for the nonnwritable file case.n",7.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3562.0,125.0,10.033194444444444,6664.0,1.0996691537811984,2911.0,None,False,,
e1b77b61f320077dd41d8ea2a7fd74561084d75f,ede33fb91259000950db667b1e92dd6e398a01f7,antirez,antirez@gmail.com,Mon Feb 17 12:14:19 2014 +0100,1392635659,"Get absoulte config file path before processig 'dir'.The code tried to obtain the configuration file absolute path afternprocessing the configuration file. However if config file was a relativenpath and a dir statement was processed reading the config, the absolutenpath obtained was wrong.nnWith this fix the absolute path is obtained before processing thenconfiguration while the server is still in the original directory wherenit was executed.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3202.0,443.0,3.8782175925925935,6665.0,1.2578504109490924,2912.0,Corrective,True,,
ede33fb91259000950db667b1e92dd6e398a01f7,a1dca2efab3e5b18054072e487f6f54814fd8992,antirez,antirez@gmail.com,Mon Feb 17 12:29:54 2014 +0100,1392636594,Test: code to test server availability refactored.Some inline test moved into server_is_up procedure.nAlso find_available_port was moved into util since it is goingnto be used for the Sentinel test as well.n,33.0,27.0,"tests/support/server.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.5,12.0,381.0,137.0,207.8625424382716,6667.0,1.0019852151891806,391.0,Preventative,False,,
a1dca2efab3e5b18054072e487f6f54814fd8992,34c404e069644336325fb568860cb8248d054089,antirez,antirez@gmail.com,Mon Feb 17 17:36:50 2014 +0100,1392655010,Test: colorstr moved to util.tcl.,30.0,30.0,"tests/support/test.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,243.0,47.0,331.25644097222215,6669.5,1.0015096474988294,393.0,Preventative,False,True,"[""5afe1e37c7f04224831d6e0e34579e4ce496d006""]"
34c404e069644336325fb568860cb8248d054089,af788b585268deeb0f58767e8832add87d12fec1,antirez,antirez@gmail.com,Mon Feb 17 17:37:56 2014 +0100,1392655076,Sentinel: initial testing framework.Nothing tested at all so far... Just the infrastructure spawning NnSentinels and N Redis instances that the test will use again and again.n,127.0,0.0,"tests/sentinel-tests/base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.27457266539773384,1.0,0.0,0.0,0.0,6671.5,0.0,395.0,None,False,True,"[""19b863c7fadbfd9c0c11340a75337c86234ea104""]"
af788b585268deeb0f58767e8832add87d12fec1,18b8bad53cf380471ec28ec097fd38960a246077,antirez,antirez@gmail.com,Tue Feb 18 08:50:57 2014 +0100,1392709857,"Sentinel: fix slave promotion timeout.If we can't reconfigure a slave in time during failover, go forward asnanyway the slave will be fixed by Sentinels in the future, once theyndetect it is misconfigured.nnOtherwise a failover in progress may never terminate if for some reasonnthe slave is uncapable to sync with the master while at the same timenit is not disconnected.n",5.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3567.0,126.0,0.8616319444444445,6673.0,2.160588353818256,2913.0,None,False,,
18b8bad53cf380471ec28ec097fd38960a246077,7cec9e48cea8caf3d03685f017ca51510ead7f7c,antirez,antirez@gmail.com,Tue Feb 18 10:27:38 2014 +0100,1392715658,Sentinel: SENTINEL_SLAVE_RECONF_RETRY_PERIOD -> RECONF_TIMEOUTRename define to match the new meaning.n,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3570.0,127.0,0.0671412037037037,6674.0,15.89398379589726,2914.0,None,False,,
7cec9e48cea8caf3d03685f017ca51510ead7f7c,141bac4c79917675c8b1dd0692413f520ed3b474,antirez,antirez@gmail.com,Tue Feb 18 11:04:01 2014 +0100,1392717841,Sentinel test: provide basic commands to access instances.,39.0,7.0,"tests/sentinel-tests/base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.7131467486384921,1.0,63.5,2.0,0.7264467592592593,6675.5,2.032422528479248,397.0,Preventative,False,True,"[""19b863c7fadbfd9c0c11340a75337c86234ea104""]"
141bac4c79917675c8b1dd0692413f520ed3b474,19b863c7fadbfd9c0c11340a75337c86234ea104,antirez,antirez@gmail.com,Tue Feb 18 11:07:25 2014 +0100,1392718045,Prefix test file names with numbers to force exec order.,5.0,5.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/base.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,1.0,2.5,2.0,0.0011805555555555556,6677.5,212.2647058823529,399.0,Corrective,True,,
19b863c7fadbfd9c0c11340a75337c86234ea104,c4fbc1d3368734838fd3004dc0b38a8c862e080d,antirez,antirez@gmail.com,Tue Feb 18 11:38:49 2014 +0100,1392719929,"Sentinel test: info fields, master-slave setup, fixes.",60.0,1.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.3491843735073079,1.0,79.5,3.0,0.02298611111111111,6679.5,34.806069236246074,401.0,Preventative,False,,
c4fbc1d3368734838fd3004dc0b38a8c862e080d,c7b7439528a9eaf693664fc5c543b19438870e01,antirez,antirez@gmail.com,Tue Feb 18 11:53:54 2014 +0100,1392720834,Sentinel test: basic tests for MONITOR and auto-discovery.,24.0,1.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,9.0,2.0,0.010474537037037036,6681.0,96.4696132596685,402.0,Preventative,False,,
c7b7439528a9eaf693664fc5c543b19438870e01,8e553ec67cdc1d2720b2c37d5ccbacf1924bd3a9,antirez,antirez@gmail.com,Tue Feb 18 16:31:52 2014 +0100,1392737512,Sentinel test: basic failover tested. Framework improvements.,71.0,12.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9695235828220428,1.0,120.5,6.0,0.19826967592592595,6682.5,4.851147542895488,404.0,Preventative,False,,
8e553ec67cdc1d2720b2c37d5ccbacf1924bd3a9,136537dcb06ec19fe62c4c7c13e17cbf7fad867a,antirez,antirez@gmail.com,Tue Feb 18 17:03:56 2014 +0100,1392739436,Sentinel test: check reconfig of slaves and old master.,20.0,0.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,74.0,4.0,0.022268518518518517,6684.0,45.906444906444904,405.0,Preventative,False,,
136537dcb06ec19fe62c4c7c13e17cbf7fad867a,2a08c7e5ac86b9f0c38e844af5ecb35091df74e5,antirez,antirez@gmail.com,Wed Feb 19 09:44:38 2014 +0100,1392799478,Sentinel test: ODOWN and agreement.,69.0,0.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,94.0,5.0,0.6949305555555556,6685.0,2.4389927051064246,406.0,Preventative,False,,
2a08c7e5ac86b9f0c38e844af5ecb35091df74e5,a88a057a1faff1ffe6296b305cca4f0936c29ed8,antirez,antirez@gmail.com,Wed Feb 19 10:08:49 2014 +0100,1392800929,Sentinel test: check that role matches at end of 00-base.,4.0,0.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,163.0,6.0,0.016793981481481483,6686.0,60.545141281874564,407.0,Preventative,False,,
a88a057a1faff1ffe6296b305cca4f0936c29ed8,e087d8a20df0867c611a85361257bbed758f7448,antirez,antirez@gmail.com,Wed Feb 19 10:26:23 2014 +0100,1392801983,Sentinel test: some reliability fixes to 00-base tests.,4.0,2.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,167.0,7.0,0.012199074074074074,6687.0,82.97343453510436,408.0,Preventative,False,,
e087d8a20df0867c611a85361257bbed758f7448,b20ae393f1129f97eea4d9b70f44bf2309cfbd65,Matt Stancliff,matt@genges.com,Wed Feb 19 17:26:33 2014 -0500,1392848793,"Fix can't bind to address error reporting.Report the actual port used for the listening attempt instead ofnserver.port.nnOriginally, Redis would just listen on server.port.nBut, with clustering, Redis uses a Cluster Port too,nso we can't say server.port is always where we are listening.nnIf you tried to launch Redis with a too-high port number (anynport where Port+10000 > 65535), Redis would refuse to start, butnonly print an error saying it can't connect to the Redis port.nnThis patch fixes much confusions.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3202.0,444.0,2.466828703703704,1.0,1.4053787757936322,1.0,Corrective,True,,
b20ae393f1129f97eea4d9b70f44bf2309cfbd65,ce68caea371cc75378c2261927c953fbd27147c7,Matt Stancliff,matt@genges.com,Wed Feb 19 17:30:07 2014 -0500,1392849007,"Cluster: error out quicker if port is unusableThe default cluster control port is 10,000 ports higher thannthe base Redis port.  If Redis is started on a too-high port,nCluster can't start and everything will exit later anyway.n",13.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3921.0,336.0,8.53880787037037,2.0,1.1171123668761769,2.0,None,False,,
e087d8a20df0867c611a85361257bbed758f7448,7d7b3810e7080cceeb58d39a193f06ac4585c8e7,antirez,antirez@gmail.com,Thu Feb 20 12:13:52 2014 +0100,1392894832,Sentinel: report instances role switch events.This is useful mostly for debugging of issues.n,8.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3570.0,128.0,2.073773148148148,6688.0,1.4822128210566266,2915.0,None,False,,
7d7b3810e7080cceeb58d39a193f06ac4585c8e7,57654444542b54e178b07fa904aee8b019f3a9c9,antirez,antirez@gmail.com,Thu Feb 20 16:28:38 2014 +0100,1392910118,Sentinel test: ability to run just a subset of test files.,26.0,0.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.2351933818192415,1.0,197.5,12.0,1.6246585648148146,6689.5,1.5533791100839207,410.0,Preventative,False,,
57654444542b54e178b07fa904aee8b019f3a9c9,d7da507683028e6bb7b53220f85b574e4a51dce9,antirez,antirez@gmail.com,Thu Feb 20 16:57:51 2014 +0100,1392911871,Sentinel test: move init tests as includes.Most units will start with these two basic tests to create annenvironment where the real tests are ran.n,25.0,25.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.1187890365551307,1.0,140.33333333333334,14.0,0.013526234567901236,6692.0,42.07244723331432,413.0,Preventative,False,,
d7da507683028e6bb7b53220f85b574e4a51dce9,2c273e359130f6546aa471ffd0f1855d415a05c5,Matt Stancliff,matt@genges.com,Thu Feb 20 23:45:56 2014 -0500,1392957956,"Add cluster or sentinel to proc titleIf you launch redis with `redis-server --sentinel` thennin a ps, your output only says redis-server IP:Port u00e2u0080u0094 thisnpatch changes the proc title to include [sentinel] orn[cluster] depending on the current server mode:ne.g.  redis-server IP:Port [sentinel]n  redis-server IP:Port [cluster]n",7.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3202.0,445.0,1.2634606481481478,3.0,1.7914769656385403,3.0,Feature Addition,False,,
d7da507683028e6bb7b53220f85b574e4a51dce9 2c273e359130f6546aa471ffd0f1855d415a05c5,1d7d1d9b1fb27b23321c7a9e8adac7d6c1122d2a,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 21 09:32:13 2014 +0100,1392971533,Merge pull request #1559 from mattsta/more-detailed-process-titleAdd cluster or sentinel to proc title,,,,,,,,,,,,,,,Merge,False,,
1d7d1d9b1fb27b23321c7a9e8adac7d6c1122d2a,8c254415f7caa392b750131e3f37ccf123e03cd3,antirez,antirez@gmail.com,Sat Feb 22 17:26:30 2014 +0100,1393086390,"Sentinel test: framework improved and conf-update unit added.It is now possible to kill and restart sentinel or redis instances fornmore real-world testing.nnThe 01 unit tests the capability of Sentinel to update the configurationnof Sentinels rejoining the cluster, however the test is pretty trivialnand more tests should be added.n",112.0,20.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/01-conf-update.tcl,CAS_DELIMITER,tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER",5.0,1.0,4.0,2.0035379208643493,12.0,109.6,47.0,2.210502314814815,6696.0,1.2986379542935806,418.0,Preventative,False,,
8c254415f7caa392b750131e3f37ccf123e03cd3,b1c1386374aabd085a6d2c9659cc8d50bc0b866a,antirez,antirez@gmail.com,Sat Feb 22 17:34:46 2014 +0100,1393086886,"Sentinel: IDONTKNOW error removed.This error was conceived for the older version of Sentinel that workednvia master redirection and that was not able to get configurationnupdates from other Sentinels via the Pub/Sub channel of masters ornslaves.nnThis reply does not make sense today, every Sentinel should reply withnthe best information it has currently. The error will make even morensense in the future since the plan is to allow Sentinels to update thenconfiguration of other Sentinels via gossip with a direct chat withoutnthe prerequisite that they have at least a monitored instance in common.n",0.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3578.0,129.0,2.2228472222222218,6699.0,1.4498734730856946,2916.0,None,False,,
b1c1386374aabd085a6d2c9659cc8d50bc0b866a 21648473aad5c3d09c6e9a9ed440564c8135ef6f,e16333285813c8dc5d1af3a55aeb7e81e91f01cb,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 23 17:47:28 2014 +0100,1393174048,Merge pull request #1545 from mattsta/fix-redis-cli-syncDeny SYNC and PSYNC in redis-cli,,,,,,,,,,,,,,,Merge,False,,
e16333285813c8dc5d1af3a55aeb7e81e91f01cb,a929867cca5c31c5923ff97ab4ddbc35a094bbc6,antirez,antirez@gmail.com,Sun Feb 23 17:50:59 2014 +0100,1393174259,Sentinel test: added empty units to fill later.,2.0,0.0,"tests/sentinel-tests/02-slaves-reconf.tcl,CAS_DELIMITER,tests/sentinel-tests/03-runtime-reconf.tcl,CAS_DELIMITER",2.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,6700.5,0.0,420.0,Preventative,False,,
a929867cca5c31c5923ff97ab4ddbc35a094bbc6,afd3db17a01fd2fa8b2d1b85edcae389b3e7f647,antirez,antirez@gmail.com,Sun Feb 23 17:57:53 2014 +0100,1393174673,Sentinel test: --pause-on-error option added.Pause the test with running instances available for state inspection onnerror.n,17.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,300.0,7.0,1.0217939814814814,6702.0,1.9786708652855023,421.0,Preventative,False,,
afd3db17a01fd2fa8b2d1b85edcae389b3e7f647,09dec3613e7af60a084704eb2e80c5cf4ecd1b09,antirez,antirez@gmail.com,Sun Feb 23 18:01:30 2014 +0100,1393174890,Sentinel test: minor fixes to --pause-on-error.,5.0,3.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,317.0,8.0,0.0025115740740740736,6703.0,399.15668202764977,422.0,Preventative,False,,
09dec3613e7af60a084704eb2e80c5cf4ecd1b09,540536c05519cce1174b00d1ff25a125b9c7c4a1,antirez,antirez@gmail.com,Mon Feb 24 11:51:31 2014 +0100,1393239091,Sentinel test: tmp dir and gitignore added.,2.0,0.0,"tests/sentinel-tmp/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6704.0,0.0,423.0,Preventative,False,,
540536c05519cce1174b00d1ff25a125b9c7c4a1,25cebf72853ccf0e8d7a042217b4f39f2ad9d793,antirez,antirez@gmail.com,Mon Feb 24 16:22:52 2014 +0100,1393255372,Sentinel: added missing exit(1) after checking for config file.,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3576.0,130.0,1.9500694444444444,6705.0,1.5128022506321002,2917.0,None,False,,
25cebf72853ccf0e8d7a042217b4f39f2ad9d793,3b7a7574685f184b9c88e8aed5f97e07265f21ec,antirez,antirez@gmail.com,Mon Feb 24 16:25:34 2014 +0100,1393255534,"Sentinel: log +monitor and +set events.Now that we have a runtime configuration system, it is very important tonbe able to log how the Sentinel configuration changes over time becausenof API calls.n",9.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3577.0,131.0,0.001875,6706.0,534.3333333333334,2918.0,None,False,,
3b7a7574685f184b9c88e8aed5f97e07265f21ec,6b373edb773787e67cec502ab7e42234bdf365f2,antirez,antirez@gmail.com,Mon Feb 24 16:32:09 2014 +0100,1393255929,Sentinel: generate +monitor events at startup.,21.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3583.0,132.0,0.00457175925925926,6707.0,219.7341772151899,2919.0,None,False,,
6b373edb773787e67cec502ab7e42234bdf365f2,29f4df801815712d70154a43103d815b006e5546,antirez,antirez@gmail.com,Mon Feb 24 16:57:52 2014 +0100,1393257472,Sentinel test: removed useless code to set SDOWN timeout.The new common initialization code used to start a new unit already setnthe timeout to 2000 milliseconds.n,0.0,4.0,"tests/sentinel-tests/01-conf-update.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,38.0,1.0,1.9801157407407408,6708.0,1.5050209840895008,424.0,Preventative,False,,
29f4df801815712d70154a43103d815b006e5546,b15411df98fbd1eea941e729c457aff5dee3bfa3,antirez,antirez@gmail.com,Mon Feb 24 17:10:20 2014 +0100,1393258220,Sentinel: log quorum with +monitor event.,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3604.0,133.0,0.0265162037037037,6709.0,38.712789175032725,2920.0,None,False,,
b15411df98fbd1eea941e729c457aff5dee3bfa3,d3a3ef0bc1f993661de83bca07256902aff8ecab,antirez,antirez@gmail.com,Mon Feb 24 17:21:50 2014 +0100,1393258910,"Sentinel test: more stuff mored from 00-base to init.The area a number of mandatory tests to craete a stable setup forntesting that is not too sensitive to timing issues. All those testsnmoved to includes/init-tests, and marked as (init).n",24.0,24.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9886994082884974,12.0,84.5,13.0,1.99675925925926,6710.5,1.3756086250869464,426.0,Preventative,False,,
d3a3ef0bc1f993661de83bca07256902aff8ecab,630fb3539f402b07b4a27a65d8ab0fe21df2feb1,antirez,antirez@gmail.com,Tue Feb 25 08:23:48 2014 +0100,1393313028,Sentinel test: restart_instance should refresh pid attrib.Also kill_instance was modified to warn when a test will try to kill thensame instance multiple times for error.n,4.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,319.0,9.0,1.5988194444444443,6712.0,1.6254614950267126,427.0,Preventative,False,,
630fb3539f402b07b4a27a65d8ab0fe21df2feb1,044b62754959d8cbba3fb24a37a3e6b29b4e773c,antirez,antirez@gmail.com,Tue Feb 25 08:29:12 2014 +0100,1393313352,Sentinel test: test majority crashing Sentinels.The test was previously performed by removing the master from thenSentinel monitored masters. The test with the Sentinels crashed isnmore similar to real-world partitions / failures.n,6.0,8.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,116.0,12.0,0.6301157407407407,6713.0,2.5870100290217115,428.0,Preventative,False,,
044b62754959d8cbba3fb24a37a3e6b29b4e773c,a9360c62e8b9f0d612e3cb7054d9fb7a1a251f52,antirez,antirez@gmail.com,Tue Feb 25 08:33:41 2014 +0100,1393313621,"Sentinel test: jump to next unit on test failure.Sentinel tests are designed to be dependent on the previous tests in thensame unit, so usually we can't continue with the next test in the samenunit if a previous test failed.n",2.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,323.0,10.0,0.006863425925925926,6714.0,146.6998313659359,429.0,Preventative,False,,
a9360c62e8b9f0d612e3cb7054d9fb7a1a251f52,386467acfb53e855369e9ffdad316462462802e5,antirez,antirez@gmail.com,Tue Feb 25 08:48:46 2014 +0100,1393314526,"Sentinel test: restart instances left killed by previous unit.An unit can abort in the middle for an error. The next unit should notnassume that the instances are in a clean state, and must restart whatnwas left killed.n",12.0,0.0,"tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,53.0,3.0,0.6437037037037037,6715.0,2.5535097813578824,430.0,Preventative,False,,
386467acfb53e855369e9ffdad316462462802e5,dcac007b814d36205f317349152db116842cd326,antirez,antirez@gmail.com,Tue Feb 25 12:24:45 2014 +0100,1393327485,redis-cli: added comments to split program in parts.,41.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1661.0,94.0,14.804537037037035,6716.0,1.0675468606345653,2921.0,None,False,,
dcac007b814d36205f317349152db116842cd326,c1d67ea9b46f88098e88450adb968d8d7c140cda,antirez,antirez@gmail.com,Tue Feb 25 12:37:52 2014 +0100,1393328272,redis-cli: --intrinsic-latency run mode added.,81.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1697.0,95.0,0.009108796296296295,6717.0,110.78398983481571,2922.0,None,False,True,"[""94e3bb568ac2cb7763a1caab299337ed72149e4c""]"
c1d67ea9b46f88098e88450adb968d8d7c140cda,5580350a7b179bffc96b277dca2958c64ac773a8,antirez,antirez@gmail.com,Tue Feb 25 12:38:24 2014 +0100,1393328304,redis-cli: check argument existence for --pattern.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1775.0,96.0,0.00037037037037037035,6718.0,2701.0,2923.0,None,False,,
5580350a7b179bffc96b277dca2958c64ac773a8,ba993cc685811d5e75acc9ff562c53c505368f0f,antirez,antirez@gmail.com,Tue Feb 25 13:43:47 2014 +0100,1393332227,"redis-cli: don't use uint64_t where actually not needed.The computation is just something to take the CPU busy, no need to use anspecific type. Since stdint.h was not included this preventedncompilation on certain systems.n",2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1775.0,97.0,0.045405092592592594,6719.0,23.023961254142236,2924.0,None,False,,
ba993cc685811d5e75acc9ff562c53c505368f0f,a2c76ffb1c307e0d77a46d8e9e104778d4b8c626,antirez,antirez@gmail.com,Tue Feb 25 13:47:37 2014 +0100,1393332457,redis-cli: also remove useless uint8_t.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1775.0,98.0,0.002662037037037037,6720.0,376.6521739130435,2925.0,None,False,,
a2c76ffb1c307e0d77a46d8e9e104778d4b8c626,fef88681f287ddbd54123d581d02d59771e57311,antirez,antirez@gmail.com,Tue Feb 25 14:33:44 2014 +0100,1393335224,Sentinel test: kill masters instead of using DEBUG SLEEP in all tests.,12.0,5.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/01-conf-update.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.6722948170756379,12.0,74.0,15.0,0.5765277777777778,6721.5,3.4087584680505505,432.0,Preventative,False,,
d3a3ef0bc1f993661de83bca07256902aff8ecab,013a4ce242eb4c13c4eee68b54a68f3e7b23f0f3,michael-grunder,michael.grunder@gmail.com,Tue Feb 25 05:41:30 2014 -0800,1393335690,"Update --bigkeys to use SCANThis commit changes the findBigKeys() function in redis-cli.c to use the newnSCAN command for iterating the keyspace, rather than RANDOMKEY.  Because wencan know when we're done using SCAN, it will exit after exhausting the keyspace.n",82.0,58.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1775.0,99.0,0.03741898148148149,0.0,0.0,0.0,Feature Addition,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
fef88681f287ddbd54123d581d02d59771e57311,339322fe58f711ee5c5ebaad114bcb3017059188,antirez,antirez@gmail.com,Tue Feb 25 14:59:36 2014 +0100,1393336776,Sentinel test: check role at end of unit 01.,4.0,0.0,"tests/sentinel-tests/01-conf-update.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,35.0,3.0,0.017962962962962962,6723.0,56.670103092783506,433.0,Preventative,False,,
339322fe58f711ee5c5ebaad114bcb3017059188 013a4ce242eb4c13c4eee68b54a68f3e7b23f0f3,55e36e1132e0d13e788629f72ccb5d92e6fc6ae2,antirez,antirez@gmail.com,Tue Feb 25 14:59:57 2014 +0100,1393336797,Merge branch 'bigkeys_scan' of git://github.com/michael-grunder/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
55e36e1132e0d13e788629f72ccb5d92e6fc6ae2,fe9a489b29ac6f9f138ab1f94bc1c862fe0af2f3,antirez,antirez@gmail.com,Tue Feb 25 15:21:53 2014 +0100,1393338113,Sentinel test: added TODO items in 02 unit.,5.0,0.0,"tests/sentinel-tests/02-slaves-reconf.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.8964583333333327,6724.0,1.5272986927386576,434.0,Preventative,False,,
fe9a489b29ac6f9f138ab1f94bc1c862fe0af2f3,55c059e27078e86cd097707be67faf6280f5321b,antirez,antirez@gmail.com,Tue Feb 25 15:36:51 2014 +0100,1393339011,Sentinel test: add stub for unit 04.,5.0,0.0,"tests/sentinel-tests/04-slave-selection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6725.0,0.0,435.0,Preventative,False,,
55c059e27078e86cd097707be67faf6280f5321b,d769cad4bf37ac913bf41d3b555b2b3d765dc829,Matt Stancliff,matt@genges.com,Tue Feb 25 16:02:28 2014 -0500,1393362148,Fix IP representation in clusterMsgDataGossip,1.0,1.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,232.0,16.0,15.232581018518514,4.0,1.0656487563587735,4.0,Corrective,True,,
55c059e27078e86cd097707be67faf6280f5321b d769cad4bf37ac913bf41d3b555b2b3d765dc829,5edc7f76edb8d4e6786be2a2ad44af6564c303cd,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 25 22:07:46 2014 +0100,1393362466,Merge pull request #1565 from mattsta/fix-cluster-ipv6-addrFix IP representation in clusterMsgDataGossip,,,,,,,,,,,,,,,Merge,False,,
55c059e27078e86cd097707be67faf6280f5321b,746ce35f5f7296fbf829cfde031820ea8dffdc89,antirez,antirez@gmail.com,Thu Feb 27 09:46:20 2014 +0100,1393490780,Fix misaligned word access in redisPopcount().,9.0,2.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,412.0,17.0,631.5390046296296,6726.0,1.0015834334738936,2926.0,Corrective,True,,
746ce35f5f7296fbf829cfde031820ea8dffdc89,2a7847a3b5732667f1b63a12f6cdbd25285dccf8,antirez,antirez@gmail.com,Thu Feb 27 10:00:17 2014 +0100,1393491617,BITCOUNT fuzzy test with random start/end added.It was verified in practice that this test is able to stress much morenthe implementation by introducing errors that were only trivially tondetect with different offsets but impossible to detect starting alwaysnat zero and counting bits the full length of the string.n,15.0,1.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,180.0,8.0,477.56577546296296,6727.0,1.0020939523964645,436.0,Feature Addition,False,,
2a7847a3b5732667f1b63a12f6cdbd25285dccf8,8d95a47408e5b1accc8e51d182684e8c83cd133d,antirez,antirez@gmail.com,Thu Feb 27 10:07:29 2014 +0100,1393492049,Added two more BITCOUNT tests stressing misaligned access.,12.0,0.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,194.0,9.0,0.005,6728.0,201.0,437.0,Feature Addition,False,,
8d95a47408e5b1accc8e51d182684e8c83cd133d 5edc7f76edb8d4e6786be2a2ad44af6564c303cd,addd4de9c1886f683b9f5220b5ada15ea3312d3b,antirez,antirez@gmail.com,Thu Feb 27 10:14:03 2014 +0100,1393492443,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
addd4de9c1886f683b9f5220b5ada15ea3312d3b,38c620b3b5676281463ab155e2447889f984b44f,antirez,antirez@gmail.com,Thu Feb 27 12:40:58 2014 +0100,1393501258,"Initial implementation of BITPOS.It appears to work but more stress testing, and both unit tests andnfuzzy testing, is needed in order to ensure the implementation is sane.n",171.0,1.0,"src/bitops.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.10302952712413692,12.0,1673.333333333333,858.0,6.768738425925926,6730.0,3.8170376953160248,2929.0,Feature Addition,False,True,"[""d7826823c05ad82f710da74c3d5d402898187888""]"
38c620b3b5676281463ab155e2447889f984b44f,0e31eaa27f995fead02b861a7df403771ce772d2,antirez,antirez@gmail.com,Thu Feb 27 12:53:03 2014 +0100,1393501983,"More consistent BITPOS behavior with bit=0 and ranges.With the new behavior it is possible to specify just the start in thenrange (the end will be assumed to be the first byte), or it is possiblento specify both start and end.nnThis is useful to change the behavior of the command when looking fornzeros inside a string.nn1) If the user specifies both start and end, and no 0 is found insiden   the range, the command returns -1.nn2) If instead no range is specified, or just the start is given, evenn   if in the actual string no 0 bit is found, the command returns then   first bit on the right after the end of the string.nnSo for example if the string stored at key foo is u00ffu00ff:nnBITPOS foo (returns 16)nBITPOS foo 0 -1 (returns -1)nBITPOS foo 0 (returns 16)nnThe idea is that when no end is given the user is just looking for thenfirst bit that is zero and can be set to 1 with SETBIT, as it isnavailable. Instead when a specific range is given, we just look for anzero within the boundaries of the range.n",15.0,9.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,587.0,19.0,0.008391203703703705,6732.0,120.17241379310344,2930.0,Feature Addition,False,,
0e31eaa27f995fead02b861a7df403771ce772d2,76a6e82d8926be859a272fa60612e610334f93ad,antirez,antirez@gmail.com,Thu Feb 27 13:17:23 2014 +0100,1393503443,warnigns -> warnings in redisBitpos().,1.0,1.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,593.0,20.0,0.016898148148148148,6733.0,60.178082191780824,2931.0,None,False,,
76a6e82d8926be859a272fa60612e610334f93ad,b21f4d63de4db35900f7f9e999f606fb87ab3770,antirez,antirez@gmail.com,Thu Feb 27 15:01:45 2014 +0100,1393509705,Basic BITPOS tests.,102.0,0.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,206.0,10.0,0.20435185185185184,6734.0,5.8935206162211164,438.0,Preventative,False,,
b21f4d63de4db35900f7f9e999f606fb87ab3770,8b8c1cd4c2a40a4a11dce3d072e3e53d8d89a1b1,antirez,antirez@gmail.com,Thu Feb 27 15:27:05 2014 +0100,1393511225,BITPOS fuzzy testing.,33.0,0.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,308.0,11.0,0.017592592592592594,6735.0,57.84210526315789,439.0,Preventative,False,,
8b8c1cd4c2a40a4a11dce3d072e3e53d8d89a1b1,806788d009f3d95b3f48c624253c80165b6ed04d,michael-grunder,michael.grunder@gmail.com,Thu Feb 27 12:01:57 2014 -0800,1393531317,"Improved bigkeys with progress, pipelining and summaryThis commit reworks the redis-cli --bigkeys command to provide moreninformation about our progress as well as output summary informationnwhen we're done.nn - We now show an approximate percentage completion as we gon - Hiredis pipelining is used for TYPE and SIZE retreivaln - A summary of keyspace distribution and overall breakout at the endn",244.0,81.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1799.0,100.0,2.264201388888889,1.0,1.4416568265116778,1.0,None,False,True,"[""6168d5a1a64631182a7698f2f97f827d6a8aa7f3"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""b6de51206e8fd79269d05f0fed3f396683d75446""]"
8b8c1cd4c2a40a4a11dce3d072e3e53d8d89a1b1,a89c8bb87cdc0e734888d148c84eb7be63b18587,antirez,antirez@gmail.com,Fri Feb 28 16:00:00 2014 +0100,1393599600,Sentinel test: Makefile target added.,17.0,0.0,"runtest-sentinel,CAS_DELIMITER,src/Makefile,CAS_DELIMITER",2.0,2.0,2.0,0.6722948170756379,12.0,121.0,103.0,39.01418981481481,6736.5,0.5064079249418392,2932.0,Preventative,False,,
8b8c1cd4c2a40a4a11dce3d072e3e53d8d89a1b1,f1c9a203b2eda46c2980582d3bdb12b6e66f4aaf,Matt Stancliff,matt@genges.com,Fri Feb 28 17:47:41 2014 -0500,1393627661,"Force INFO used_memory_peak to match peak memoryused_memory_peak only updates in serverCron every server.hz,nbut Redis can use more memory and a user can request memorynINFO before used_memory_peak gets updated in the nextncron run.nnThis patch updates used_memory_peak to the currentnmemory usage if the current memory usage is highernthan the recorded used_memory_peak value.nn(And it only calls zmalloc_used_memory() once instead ofntwice as it was doing before.)n",7.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3208.0,447.0,1.4629976851851851,5.0,1.6835280808208666,5.0,None,False,,
a89c8bb87cdc0e734888d148c84eb7be63b18587,8dea2029a4ec3382b7d80de82d793ef2ba2773e5,antirez,antirez@gmail.com,Mon Mar 3 11:12:11 2014 +0100,1393841531,"Fix configEpoch assignment when a cluster slot gets closed.This is still code to rework in order to use agreement to obtain a newnconfigEpoch when a slot is migrated, however this commit handles thenspecial case that happens when the nodes are just started and everybodynhas a configEpoch of 0. In this special condition to have the maximumnconfigEpoch is not enough as the special epoch 0 is not unique (all thenothers are).nnThis does not fixes the intrinsic race condition of a failover happeningnwhile we are resharding, that will be addressed later.n",3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3934.0,337.0,11.487546296296294,6738.0,1.0870507917188903,2933.0,Corrective,True,,
8b8c1cd4c2a40a4a11dce3d072e3e53d8d89a1b1 f1c9a203b2eda46c2980582d3bdb12b6e66f4aaf,68d6d1597f3c346d8a011314c1e255cc296d1c90,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 3 11:16:51 2014 +0100,1393841811,Merge pull request #1572 from mattsta/consistent-max-memory-infoForce INFO used_memory_peak to match peak memory,,,,,,,,,,,,,,,Merge,False,,
8dea2029a4ec3382b7d80de82d793ef2ba2773e5 68d6d1597f3c346d8a011314c1e255cc296d1c90,0c1bb1313c4ae33cb3cb8f4f16f8ad415ed85a75,antirez,antirez@gmail.com,Mon Mar 3 11:17:37 2014 +0100,1393841857,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0c1bb1313c4ae33cb3cb8f4f16f8ad415ed85a75,12a88d575d2cdd1fb36c8eef043f1f7e6fdd5246,antirez,antirez@gmail.com,Mon Mar 3 11:19:54 2014 +0100,1393841994,Document why we update peak memory in INFO.,5.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3213.0,448.0,2.4807060185185184,6739.0,1.4031110468289998,2934.0,Non Functional,False,,
12a88d575d2cdd1fb36c8eef043f1f7e6fdd5246 806788d009f3d95b3f48c624253c80165b6ed04d,e41a3edfab107acf9241cfc1db5ddece8e9fc9ff,antirez,antirez@gmail.com,Mon Mar 3 11:20:54 2014 +0100,1393842054,Merge branch 'cli_improved_bigkeys' of git://github.com/michael-grunder/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e41a3edfab107acf9241cfc1db5ddece8e9fc9ff,69cc3b692ffc543e9d46064438ac380ef33513a7,antirez,antirez@gmail.com,Mon Mar 3 13:01:11 2014 +0100,1393848071,Sentienl test: fixed typo in unit 03 top comment.,1.0,1.0,"tests/sentinel-tests/03-runtime-reconf.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,1.0,7.79875,6740.0,1.1282256771918575,440.0,Preventative,False,,
69cc3b692ffc543e9d46064438ac380ef33513a7,db9e718c8a004b5fbd012f106a2e6d670dfc80c2,antirez,antirez@gmail.com,Mon Mar 3 13:23:32 2014 +0100,1393849412,Sentinel test: foreach_instance_id now supports 'continue'.,2.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,325.0,11.0,6.201284722222222,6741.0,1.1612569080107729,441.0,Preventative,False,,
db9e718c8a004b5fbd012f106a2e6d670dfc80c2,1734f7aedb105974e401acfbabc9139fcdac449d,antirez,antirez@gmail.com,Mon Mar 3 13:25:14 2014 +0100,1393849514,Sentinel test: initial tests in 03 unit.,39.0,0.0,"tests/sentinel-tests/02-slaves-reconf.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,6.0,2.0,5.918993055555553,6742.0,1.1689476555579672,442.0,Preventative,False,,
1734f7aedb105974e401acfbabc9139fcdac449d,35e8bc305dd800e44b528f71a581b23c777340e5,antirez,antirez@gmail.com,Mon Mar 3 13:26:18 2014 +0100,1393849578,Sentinel test: use 1000 as retry in initial 00 unit test.,1.0,1.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,120.0,14.0,5.953171296296296,6743.0,1.1679776962947697,443.0,Preventative,False,,
35e8bc305dd800e44b528f71a581b23c777340e5,c5edd91716486b1134aa9318657e38e43445a75d,antirez,antirez@gmail.com,Mon Mar 3 17:11:51 2014 +0100,1393863111,Cluster: invalidate current transaction on redirections.,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3216.0,449.0,0.2444097222222222,6744.0,5.0914902685040495,2935.0,None,False,,
c5edd91716486b1134aa9318657e38e43445a75d,4b9ac6edd0ce5382e9f2c07e0c68b3230226df72,zhanghailei,zhanghailei@youku.com,Mon Dec 23 12:32:57 2013 +0800,1387773177,"According to context,the size should be 16 rather than 64",1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1024.0,38.0,12.4684375,0.0,0.0,0.0,None,False,,
4b9ac6edd0ce5382e9f2c07e0c68b3230226df72,c0f86654142b47e2275fc84eacc08a5e680d7929,zhanghailei,zhanghailei@youku.com,Thu Dec 26 11:28:34 2013 +0800,1388028514,FIXED  a typo  more thank  should be more than,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1024.0,39.0,2.955289351851852,1.0,1.3383763418540986,1.0,Corrective,True,,
c0f86654142b47e2275fc84eacc08a5e680d7929,138695d9908bf9e35875a6e29f24c87a202b1fe4,zhanghailei,zhanghailei@youku.com,Tue Mar 4 12:20:31 2014 +0800,1393906831,"refer to updateLRUClock's comment REDIS_LRU_CLOCK_MAX is 22 bits,but #define REDIS_LRU_CLOCK_MAX ((1<<21)-1) only 21 bits",1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1395.0,395.0,4.694131944444443,2.0,1.2130319325990635,2.0,None,False,,
c5edd91716486b1134aa9318657e38e43445a75d,dd8d883c9c81517a851df7f13f38a4fca801e4c9,antirez,antirez@gmail.com,Tue Mar 4 11:17:27 2014 +0100,1393928247,Sentiel test: add test start time in output.,5.0,4.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,327.0,12.0,0.9124421296296296,6745.0,2.09595991628084,444.0,Preventative,False,,
dd8d883c9c81517a851df7f13f38a4fca801e4c9,3072a1e7813f57cf70f401caa928840a1afbe5f7,antirez,antirez@gmail.com,Tue Mar 4 11:20:53 2014 +0100,1393928453,Sentinel test: be more patient in create_redis_master_slave_cluster.,1.0,1.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,328.0,13.0,0.002384259259259259,6746.0,420.41747572815535,445.0,Preventative,False,,
3072a1e7813f57cf70f401caa928840a1afbe5f7,7d97a4c99b6564902c16be24ed352101a63e813d,antirez,antirez@gmail.com,Tue Mar 4 12:05:49 2014 +0100,1393931149,Sentinel test: initial debugging console.,27.0,1.0,"tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.74959525725948,12.0,224.0,29.0,0.48765625,6747.5,2.042256180321104,447.0,Preventative,False,,
7d97a4c99b6564902c16be24ed352101a63e813d,efb092baa6541c4541f944ce1b0c2ed9f72da019,antirez,antirez@gmail.com,Tue Mar 4 15:55:36 2014 +0100,1393944936,Sentinel test: debugging console improved.,42.0,2.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,348.0,15.0,0.15957175925925926,6749.0,7.26677304707333,448.0,Preventative,False,,
efb092baa6541c4541f944ce1b0c2ed9f72da019,08da025f56b2b99523fc9fa9a8976ceafa69fe57,antirez,antirez@gmail.com,Tue Mar 4 16:39:44 2014 +0100,1393947584,CONFIG REWRITE should be logged at WARNING level.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1841.0,136.0,19.088194444444444,6750.0,1.052388401789937,2936.0,None,False,,
08da025f56b2b99523fc9fa9a8976ceafa69fe57,47750998a61c4ba88be542292fb438ae651f8de3,antirez,antirez@gmail.com,Tue Mar 4 16:54:40 2014 +0100,1393948480,"Sentinel: more aggressive failover start desynchronization.Sentinel needs to avoid split brain conditions due to multiple sentinelsntrying to get voted at the exact same time.nnSo far some desynchronization was provided by fluctuating server.hz,nthat is the frequency of the timer function call. However thendesynchonization provided in this way was not enough when using manynSentinel instances, especially when a large quorum value is used innorder to force a greater degree of agreement (more than N/2+1).nnIt was verified that it was likely to trigger a split brainncondition, forcing the system to try again after a timeout.nUsually the system will succeed after a few retries, but this is notnoptimal.nnThis commit desynchronizes instances in a more effective way to make itnlikely that the first attempt will be successful.n",3.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3604.0,134.0,7.9891203703703715,6751.0,1.1251702257120506,2937.0,None,False,,
47750998a61c4ba88be542292fb438ae651f8de3,8d011492a0802c45114bab63c41b7311648632be,antirez,antirez@gmail.com,Tue Mar 4 17:10:29 2014 +0100,1393949429,"Sentinel test: set less time sensitive defaults.This commit sets the failover timeout to 30 seconds instead of the 180nseconds default, and allows to reconfigure multiple slaves at the samentime.nnThis makes tests less sensible to timing, with the result that there arenless false positives due to normal behaviors that require time tonsucceed or to be retried.nnHowever the long term solution is probably some way in order to detectnwhen a test failed because of timing issues (for example split brainnduring leader election) and retry it.n",2.0,0.0,"tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,65.0,4.0,7.348414351851853,6752.0,1.1360837797269818,449.0,Preventative,False,,
8d011492a0802c45114bab63c41b7311648632be,e5b1e7be64d82b0360af3bed0eaa22ca942be4f4,Matt Stancliff,matt@genges.com,Mon Mar 3 10:57:27 2014 -0500,1393862247,"Bind source address for cluster communicationThe first address specified as a bind parametern(server.bindaddr[0]) gets used as the source IPnfor cluster communication.nnIf no bind address is specified by the user, thenbehavior is unchanged.nnThis patch allows multiple Redis Cluster instancesnto communicate when running on the same interfacenof the same host.n",37.0,7.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER",3.0,1.0,1.0,0.9582100776143364,12.0,1515.0,397.0,76.63624228395062,7.0,1.005803943704222,8.0,Feature Addition,False,,
8d011492a0802c45114bab63c41b7311648632be,5f5118bdad709c5eef10140130ba1329b6a5e661,Jan-Erik Rediger,badboy@archlinux.us,Wed Mar 5 00:41:02 2014 +0100,1393976462,Small typo fixed,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3605.0,135.0,0.3238657407407408,5.0,4.087699235222643,4.0,Corrective,True,,
8d011492a0802c45114bab63c41b7311648632be,9b401819c009c85f285c5b4890fb91a6a2a91f7f,antirez,antirez@gmail.com,Wed Mar 5 11:26:14 2014 +0100,1394015174,Cast saveparams[].seconds to long for %ld format specifier.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1842.0,137.0,0.7822916666666667,6753.0,2.2782956058588546,2938.0,None,False,,
9b401819c009c85f285c5b4890fb91a6a2a91f7f 5f5118bdad709c5eef10140130ba1329b6a5e661,54e99fb2266f12070b905ad1e8f9638625126056,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 6 17:40:04 2014 +0100,1394124004,Merge pull request #1578 from badboy/patch-5Small typo fixed,,,,,,,,,,,,,,,Merge,False,,
9b401819c009c85f285c5b4890fb91a6a2a91f7f,59cf0b1902f20436e01f2a7523609a597e688c5b,Matt Stancliff,matt@genges.com,Wed Feb 26 17:58:46 2014 -0500,1393455526,"Fix return value check for anetTcpAcceptanetTcpAccept returns ANET_ERR, not AE_ERR.nnThis isn't a physical error since both ANET_ERRnand AE_ERR are -1, but better to be consistent.n",2.0,2.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,2780.0,512.0,8.815254629629631,9.5,0.922144612386465,10.0,Corrective,True,,
59cf0b1902f20436e01f2a7523609a597e688c5b,d2040ab9b13bc4edd07825e2ecee55b3679e0651,Matt Stancliff,matt@genges.com,Wed Feb 26 18:02:55 2014 -0500,1393455775,Remove some redundant codeFunction nodeIp2String in cluster.c is exactlynanetPeerToString with a pre-extracted fd.n,1.0,14.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3941.0,340.0,0.0028819444444444444,11.0,347.9879518072288,11.0,None,False,,
d2040ab9b13bc4edd07825e2ecee55b3679e0651,385c25f70f97903df64d19b8e54cbba13ec66f74,Matt Stancliff,matt@genges.com,Wed Feb 26 18:05:12 2014 -0500,1393455912,Remove redundant IP length definitionREDIS_CLUSTER_IPLEN had the same value asnREDIS_IP_STR_LEN.  They were both #define'dnto the same INET6_ADDRSTRLEN.n,3.0,4.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,12.0,2080.0,358.0,0.5434085648148148,12.5,316.78852615159144,13.0,Feature Addition,False,,
385c25f70f97903df64d19b8e54cbba13ec66f74,e8bae92e5479bc64a82d92c73e9360438cf9f6f5,Matt Stancliff,matt@genges.com,Tue Mar 4 17:31:34 2014 -0500,1393972294,Reset op_sec_last_sample_ops when reset requestedThis value needs to be set to zero (in addition tonstat_numcommands) or else people may seena negative operations per second count after theynrun CONFIG RESETSTAT.nnFixes antirez/redis#1577n,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1842.0,138.0,-0.4962962962962963,14.0,-1.0149253731343282,14.0,Corrective,True,,
e8bae92e5479bc64a82d92c73e9360438cf9f6f5 54e99fb2266f12070b905ad1e8f9638625126056,b74c899da39dc52ce38801a447ef15459ae02466,antirez,antirez@gmail.com,Thu Mar 6 18:06:30 2014 +0100,1394125590,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
b74c899da39dc52ce38801a447ef15459ae02466 138695d9908bf9e35875a6e29f24c87a202b1fe4,bbf39b7a3a6d1860abb59aae1af3f91eb13962c3,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 6 18:14:36 2014 +0100,1394126076,Merge pull request #1576 from Hailei/fix-lruidletime-commentFix REDIS_LRU_CLOCK_MAX's value,,,,,,,,,,,,,,,Merge,False,,
bbf39b7a3a6d1860abb59aae1af3f91eb13962c3,36676c23186617ff096d534c6faa353829c4e437,antirez,antirez@gmail.com,Fri Mar 7 13:19:09 2014 +0100,1394194749,Redis Cluster: support for multi-key operations.,118.0,40.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.7654092393035392,12.0,2458.6666666666665,810.0,6.9803703703703714,6755.0,1.0743879241981422,2941.0,None,False,True,"[""e15e518a674ce75ada1badb3e4fe11c18c255016""]"
36676c23186617ff096d534c6faa353829c4e437,6984692060106de666ee89d092163075282c6498,antirez,antirez@gmail.com,Fri Mar 7 16:18:00 2014 +0100,1394205480,Cluster: fix conditional generating TRYAGAIN error.,5.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3989.0,343.0,0.12420138888888888,6757.0,9.051439753983788,2942.0,None,False,,
6984692060106de666ee89d092163075282c6498,0f2597092fdcd17547282bd434e46d3dc8412e23,antirez,antirez@gmail.com,Fri Mar 7 18:03:51 2014 +0100,1394211831,"Typo in sentinel.conf, exists -> exits.",2.0,2.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,146.0,14.0,97.45096064814815,6758.0,1.0102615714955396,1336.0,None,False,,
0f2597092fdcd17547282bd434e46d3dc8412e23,f0782a6e8633988a935097c195899773da2c2ad1,Matt Stancliff,matt@genges.com,Fri Mar 7 16:32:04 2014 -0500,1394227924,"Fix key extraction for z{union,inter}storeThe previous implementation wasn't taking into accountnthe storage key in position 1 being a requirement (itnwas only counting the source keys in positions 3 to N).nnFixes antirez/redis#1581n",16.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1066.0,125.0,28.465046296296297,15.0,1.0351308053249193,15.0,Corrective,True,,
0f2597092fdcd17547282bd434e46d3dc8412e23,0f1f25784f6440f3476609065edfb524e3bbbcf4,antirez,antirez@gmail.com,Mon Mar 10 09:57:52 2014 +0100,1394441872,"Cluster: better timeout and retry time for failover.When node-timeout is too small, in the order of a few milliseconds,nthere is no way the voting process can terminate during that time, so wenset a lower limit for the failover timeout of two seconds.nnThe retry time is set to two times the failover timeout time, so it isnat least 4 seconds.n",16.0,8.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.2498822928331855,12.0,2114.0,363.0,2.7981192129629626,6759.5,1.2720930297674944,2944.0,None,False,True,"[""1aef29e0795681a3340a79c00379c246697bbcd6""]"
0f1f25784f6440f3476609065edfb524e3bbbcf4 e5b1e7be64d82b0360af3bed0eaa22ca942be4f4,3b0edb80ecf0f8702b484fed9cb3aaccc63f60ed,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 10 10:28:32 2014 +0100,1394443712,Merge pull request #1567 from mattsta/fix-cluster-joinBind source address for cluster communication,,,,,,,,,,,,,,,Merge,False,,
3b0edb80ecf0f8702b484fed9cb3aaccc63f60ed,3e8a92ef8d93e50ac57e688ebd68838437921f27,antirez,antirez@gmail.com,Mon Mar 10 10:32:28 2014 +0100,1394443948,Cluster: log error when anetTcpNonBlockBindConnect() fails.,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3999.0,345.0,0.024027777777777776,6761.0,42.61849710982659,2945.0,None,False,,
3e8a92ef8d93e50ac57e688ebd68838437921f27,ed8c55237b4f2c1c5c5fbac0c0b4d6b12ca7695a,antirez,antirez@gmail.com,Mon Mar 10 10:33:53 2014 +0100,1394444033,Cluster: be explicit about passing NULL as bind addr for connect.The code was already correct but it was using that bindaddr[0] is set tonNULL as a side effect of current implementation if no bind address isnconfigured. This is not guarnteed to hold true in the future.n,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4000.0,346.0,0.0009837962962962962,6762.0,1017.4705882352944,2946.0,None,False,,
ed8c55237b4f2c1c5c5fbac0c0b4d6b12ca7695a ce68caea371cc75378c2261927c953fbd27147c7,442b06db54b98189a472e2ebacf31090c61571e6,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 10 10:37:50 2014 +0100,1394444270,Merge pull request #1555 from mattsta/cluster-port-error-outCluster port error out,,,,,,,,,,,,,,,Merge,False,,
442b06db54b98189a472e2ebacf31090c61571e6,c1a7d3e61f84344393f47924777c89d9cd78b775,antirez,antirez@gmail.com,Mon Mar 10 10:41:27 2014 +0100,1394444487,Cluster: abort on port too high error.It also fixes multi-line comment style to be consistent with the rest ofnthe code base.nnRelated to #1555.n,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4001.0,347.0,0.00525462962962963,6763.0,191.30837004405285,2947.0,None,False,,
c1a7d3e61f84344393f47924777c89d9cd78b775 f0782a6e8633988a935097c195899773da2c2ad1,aca6cb529bf27b29e7bec4050371a852fb3e8222,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 10 11:39:45 2014 +0100,1394447985,"Merge pull request #1586 from mattsta/fix-zunioninterstorekeysFix key extraction for z{union,inter}store",,,,,,,,,,,,,,,Merge,False,,
aca6cb529bf27b29e7bec4050371a852fb3e8222,55b88e004414359fe8e33d7e0cf4e8454367cf6d,antirez,antirez@gmail.com,Mon Mar 10 11:43:56 2014 +0100,1394448236,Cluster: some zunionInterGetKeys() comment trimmed.Everything was pretty clear again from the initial statements.n,3.0,8.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1080.0,126.0,2.5499074074074075,6764.0,1.392171102799666,2948.0,None,False,,
55b88e004414359fe8e33d7e0cf4e8454367cf6d,787b297046b5695c5dbca87060566cf1d93762de,antirez,antirez@gmail.com,Mon Mar 10 13:18:41 2014 +0100,1394453921,"Cluster: getKeysFromCommand() API cleaned up.This API originated from the diskstore experiment, not for RedisnCluster itself, so there were legacy/useless things trying tondifferentiate between keys that are going to be overwritten and keysnthat need to be fetched from disk (preloaded).nnAll useless with Cluster, so removed with the result of codensimplification.n",15.0,41.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.6938525826031268,12.0,2424.5,1322.0,2.37668113425926,6766.5,4.823302416269118,2952.0,None,False,,
787b297046b5695c5dbca87060566cf1d93762de,caf7b9b425807bd72577ae22e75d42e29fb675fa,antirez,antirez@gmail.com,Mon Mar 10 15:24:38 2014 +0100,1394461478,Cluster: getKeysFromCommand() and related: top-comments added.,12.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1054.0,128.0,0.08746527777777778,6769.0,12.433108376339815,2953.0,None,False,,
caf7b9b425807bd72577ae22e75d42e29fb675fa,c0e818ab080f8c07eb1885945eea4a42f3ca3d29,antirez,antirez@gmail.com,Mon Mar 10 15:26:10 2014 +0100,1394461570,"Cluster: evalGetKey() added for EVAL/EVALSHA.Previously we used zunionInterGetKeys(), however after this function wasnfixed to account for the destination key (not needed when the API wasndesigned for diskstore) the two set of commands can no longer be servednby an unique keys-extraction function.n",26.0,2.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8058576010107722,12.0,1894.333333333333,978.0,0.05937499999999999,6771.0,319.6352728444305,2956.0,None,False,True,"[""10dedc25868c08bb1bf5da8252c8b11ad2ab370d""]"
c0e818ab080f8c07eb1885945eea4a42f3ca3d29,ef5e7fbaa20fcda2debd2751d8437d7c2c53b1e0,antirez,antirez@gmail.com,Mon Mar 10 15:31:01 2014 +0100,1394461861,Cluster: getKeysFromCommand() top comment improved.,9.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1088.0,130.0,0.003368055555555556,6773.0,297.9072164948454,2957.0,None,False,,
ef5e7fbaa20fcda2debd2751d8437d7c2c53b1e0,8caecc9ab466011fd1432c0a7e2dc51ae8797629,antirez,antirez@gmail.com,Mon Mar 10 15:44:41 2014 +0100,1394462681,Fixed memory leak in SORT LIMIT option argument parsing on error.,9.0,2.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,541.0,30.0,94.9646875,6774.0,1.0105302299868042,2958.0,Corrective,True,,
8caecc9ab466011fd1432c0a7e2dc51ae8797629,03344196f375761a90fa1429ff617a12fb1f3ff6,antirez,antirez@gmail.com,Mon Mar 10 16:10:50 2014 +0100,1394464250,Cluster: don't allow GET option in cluster mode.The commit also refactors a bit the error handling during SORT optionnparsing.n,17.0,6.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,548.0,31.0,0.018159722222222226,6775.0,56.06692160611855,2959.0,None,False,,
03344196f375761a90fa1429ff617a12fb1f3ff6,21765c858886bfeb1349ab83dccb1113b5e55d2c,antirez,antirez@gmail.com,Mon Mar 10 16:23:42 2014 +0100,1394465022,Cluster: evalGetKeys() fixed: was not setting keys count.,1.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1094.0,131.0,0.03658564814814815,6776.0,28.333122429610885,2960.0,None,False,,
21765c858886bfeb1349ab83dccb1113b5e55d2c,04cf02e8dc102105b9d302dc86f499e4be63cb55,antirez,antirez@gmail.com,Mon Mar 10 16:26:08 2014 +0100,1394465168,Cluster: SORT get keys helper implemented.,47.0,1.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.3946835562454195,12.0,1904.666666666667,983.0,0.028325617283950617,6778.0,209.8752185485933,2963.0,None,False,True,"[""87815ab5ba305770c0e6de7995b1688e55602589""]"
04cf02e8dc102105b9d302dc86f499e4be63cb55,3e1d77267759083fa0d011193a2ad5713dee72e3,antirez,antirez@gmail.com,Mon Mar 10 16:28:18 2014 +0100,1394465298,Cluster: don't allow BY option of SORT as well.There is the exception of a constant BY pattern that is used in ordernto signal to don't sort at all. In this case no lookup is needed so itnis possible to support this case in Cluster mode.n,11.0,1.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,559.0,32.0,0.012129629629629627,6780.0,83.44274809160305,2964.0,None,False,,
3e1d77267759083fa0d011193a2ad5713dee72e3,c4ef1d64945fdd707a0136f581c0d946d0334d5c,antirez,antirez@gmail.com,Mon Mar 10 16:35:58 2014 +0100,1394465758,DEBUG CMDKEYS added for getKeysFromCommand() testing.Examples:nnredis 127.0.0.1:6379> debug cmdkeys set foo barn1) foonredis 127.0.0.1:6379> debug cmdkeys mget a b cn1) an2) bn3) cnredis 127.0.0.1:6379> debug cmdkeys zunionstore foo 2 a bn1) an2) bn3) foonredis 127.0.0.1:6379> debug cmdkeys pingn(empty list or set)n,12.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,950.0,71.0,89.92886574074076,6781.0,1.0111199000650464,2965.0,Corrective,True,True,"[""683f41adf27864987983c6fb4535a8568c288f86""]"
c4ef1d64945fdd707a0136f581c0d946d0334d5c,5b864617bc50dbfc34dcc3393b78b3d07e0f291b,antirez,antirez@gmail.com,Mon Mar 10 16:39:07 2014 +0100,1394465947,"Cluster: make sortGetKeys() able to handle multiple STORE options.It does not make sense to pass multiple store options, so, better tonhandle it ;-)n",4.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1140.0,133.0,0.009016203703703705,6782.0,111.91142490372272,2966.0,None,False,,
5b864617bc50dbfc34dcc3393b78b3d07e0f291b,2705306ba1304e6db46d4ebc3006b1dea40588b7,antirez,antirez@gmail.com,Mon Mar 10 16:43:38 2014 +0100,1394466218,DEBUG CMDKEYS: provide some guarantee to getKeysFromCommand().getKeysFromCommand() is designed to be called with the command argumentsnpassing the basic arity checks described in the command table.nnDEBUG CMDKEYS must provide the same guarantees for callingngetKeysFromCommand() to be safe.n,6.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,962.0,72.0,0.005324074074074074,6783.0,188.8260869565217,2967.0,Corrective,True,True,"[""683f41adf27864987983c6fb4535a8568c288f86""]"
2705306ba1304e6db46d4ebc3006b1dea40588b7,8eae54aa1e3102ce0e8184a557a32c08d51a8cca,antirez,antirez@gmail.com,Mon Mar 10 23:01:55 2014 +0100,1394488915,"DEBUG ERROR implemented.The new error subcommand of the DEBUG command can reply with an usernselected error, specified as its sole argument:nnDEBUG ERROR LOADING please wait...nnThe error is generated just prefixing the command argument with a -ncharacter, and replacing newlines with spaces (since error replies can'tninclude newlines).nnThe goal of the command is to help in Client libraries unit tests bynmaking simple to simulate a command call triggering a given error.n",7.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,968.0,73.0,0.2626967592592593,6784.0,4.806670485086134,2968.0,Corrective,True,,
8eae54aa1e3102ce0e8184a557a32c08d51a8cca,2e8e0ad44e92965878ac4196e5603701a8850be5,antirez,antirez@gmail.com,Tue Mar 11 11:16:18 2014 +0100,1394532978,Cluster: clusterCloseAllSlots() added.,12.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4000.0,349.0,0.9150115740740741,6785.0,2.092882350708982,2969.0,None,False,,
2e8e0ad44e92965878ac4196e5603701a8850be5,8287945ff862cfa578afe83e2f27fbe9fc1ba13f,antirez,antirez@gmail.com,Tue Mar 11 11:22:06 2014 +0100,1394533326,Cluster: flush importing/migrating state when master is turned into slave.,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4006.0,350.0,0.004027777777777778,6786.0,249.27586206896552,2970.0,None,False,,
8287945ff862cfa578afe83e2f27fbe9fc1ba13f,1ed0ad77f06ea749464296f2b50af569b5682d93,antirez,antirez@gmail.com,Tue Mar 11 11:32:40 2014 +0100,1394533960,Cluster: clarified a comment in clusterUpdateSlotsConfigWith().,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4007.0,351.0,0.007337962962962963,6787.0,137.2776025236593,2971.0,None,False,,
1ed0ad77f06ea749464296f2b50af569b5682d93,a2ff90919f568a9a8db9d95be90131aa02007039,antirez,antirez@gmail.com,Tue Mar 11 11:49:47 2014 +0100,1394534987,"Cluster: set slot error if we receive an update for a busy slot.By manually modifying nodes configurations in random ways, it is possiblento create the following scenario:nnA is serving keys for slot 10nB is manually configured to serve keys for slot 10nnA receives an update from B (or another node) where it is informed thatnthe slot 10 is now claimed by B with a greater configuration epoch,nhowever A still has keys from slot 10.nnWith this commit A will put the slot in error setting it in IMPORTINGnstate, so that redis-trib can detect the issue.n",22.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4007.0,352.0,0.011886574074074074,6788.0,85.12852969814996,2972.0,None,False,,
a2ff90919f568a9a8db9d95be90131aa02007039,e26f4486b07070d795644a16e50429917b86eee0,antirez,antirez@gmail.com,Tue Mar 11 11:53:09 2014 +0100,1394535189,Cluster: update node configEpoch on UPDATE messages.The UPDATE message contains the configEpoch of the node configurationnadvertised in the packet. Update it if needed.n,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4024.0,353.0,0.0023379629629629627,6789.0,428.7227722772277,2973.0,None,False,,
e26f4486b07070d795644a16e50429917b86eee0,2e5c394fa8dbc0fc09811fb2075271d68d05ad62,antirez,antirez@gmail.com,Tue Mar 11 14:17:28 2014 +0100,1394543848,"redis-trib: create subcommand is now able to assign spare slaves.Example: if the user will try to configure a cluster with 9 nodes,nasking for 1 slave for master, redis-trib will configure a 4 mastersncluster with 1 slave each as usually, but this time will assign thenspare node as a slave of one of the masters.n",22.0,16.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1032.0,81.0,28.16956018518519,6790.0,1.0354993117899625,2974.0,None,False,True,"[""b55f742e46a755e96c92eded47d9c69327f774e8""]"
2e5c394fa8dbc0fc09811fb2075271d68d05ad62,df32eb68271976662ffab503d630362a35ae48ff,antirez,antirez@gmail.com,Tue Mar 11 14:58:33 2014 +0100,1394546313,redis-trib: new subcommand 'call'. Exec command in all nodes.Example:nn./redis-trib.rb call 192.168.1.11:7000 config get cluster-node-timeoutn,18.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1038.0,82.0,0.028530092592592593,6791.0,36.05070993914807,2975.0,None,False,,
df32eb68271976662ffab503d630362a35ae48ff,cc11d103c09eb5a34f9097adf014b5193a8c9df3,antirez,antirez@gmail.com,Tue Mar 11 16:10:13 2014 +0100,1394550613,redis-trib: call MIGRATE via r.client.call as fix for redis-rb API changes.See issue #1593.nnThanks to @badboy for suggesting the direct client.call fix.n,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1056.0,83.0,0.04976851851851852,6792.0,21.093023255813954,2976.0,None,False,,
cc11d103c09eb5a34f9097adf014b5193a8c9df3,429aff4ef4ae6f2947614e1005048af78570b8a8,antirez,antirez@gmail.com,Thu Mar 13 15:11:08 2014 +0100,1394719868,"Linenoise updated, multiline mode enabled in redis-cli.",728.0,252.0,"deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,2.0,2.0,0.3316327534074278,12.0,881.0,111.0,571.6402893518521,6794.0,1.001053002847087,2977.0,None,False,,
429aff4ef4ae6f2947614e1005048af78570b8a8,133fccb03f2a9b5caff2ae1dd1537c984949392f,antirez,antirez@gmail.com,Tue Mar 11 15:19:00 2014 +0100,1394547540,Cluster: flag the transaction as dirty for the new redirections.,2.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3227.0,454.0,0.9533796296296296,6796.0,2.0489001116884378,2978.0,None,False,True,"[""d827dbfda770d040d23802fb462487eea3699f0b""]"
133fccb03f2a9b5caff2ae1dd1537c984949392f,9dfe426fc8f0e4c244451a13b8831dfcd2befd49,antirez,antirez@gmail.com,Fri Mar 14 10:56:44 2014 +0100,1394791004,Sentinel: HELLO processing refactored into sentinelProcessHelloMessage().,94.0,88.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3605.0,136.0,9.427569444444442,6797.0,1.1060718784298416,2979.0,None,False,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
9dfe426fc8f0e4c244451a13b8831dfcd2befd49,365094028bf6dc311c0246f68e6bf40944136e9b,antirez,antirez@gmail.com,Fri Mar 14 11:04:54 2014 +0100,1394791494,"Sentinel: fake PUBLISH command to receive HELLO messages.Now the way HELLO messages are received is unified.nNow it is no longer needed for Sentinels to converge to the highernconfiguration for a master to be able to chat via some Redis instance,nthe are able to directly exchanges configurations.nnNote that this commit does not include the (trivial) change needed tonsend HELLO messages to Sentinel instances as well, since for an error Incommitted the change in the previous commit that refactored hellonmessages processing into a separated function.n",17.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3611.0,137.0,0.005671296296296297,6798.0,177.32653061224488,2980.0,None,False,,
365094028bf6dc311c0246f68e6bf40944136e9b,ed813863f0624c40fe4d4e85b363c07c70cf10cd,antirez,antirez@gmail.com,Fri Mar 14 14:52:49 2014 +0100,1394805169,"Sentinel: be safe under crash-recovery assumptions.Sentinel's main safety argument is that there are no two configurationsnfor the same master with the same version (configuration epoch).nnFor this to be true Sentinels require to be authorized by a majority.nAdditionally Sentinels require to do two important things:nn* Never vote again for the same epoch.n* Never exchange an old vote for a fresh one.nnThe first prerequisite, in a crash-recovery system model, requires tonpersist the master->leader_epoch on durable storage before to reply tonmessages. This was not the case.nnWe also make sure to persist the current epoch in order to never replynto stale votes requests from other Sentinels, after a recovery.nnThe configuration is persisted by making use of fsync(), this isnconsidered in the context of this code a good enough guarantee thatnafter a restart our durable state is restored, however this may notnalways be the case depending on the kind of hardware and operatingnsystem used.n",29.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3628.0,138.0,0.15827546296296294,6799.0,7.318098720292505,2981.0,None,False,True,"[""584052ee6b0bcd26465d8585c51029217b60b134""]"
ed813863f0624c40fe4d4e85b363c07c70cf10cd,584052ee6b0bcd26465d8585c51029217b60b134,Matt Stancliff,matt@genges.com,Fri Mar 14 17:38:05 2014 -0400,1394833085,Fix segfault from accessing array out of boundsargc == 2; argv[2] == crashn,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3656.0,139.0,0.32310185185185186,16.0,4.094999283564981,16.0,Corrective,True,,
ed813863f0624c40fe4d4e85b363c07c70cf10cd 584052ee6b0bcd26465d8585c51029217b60b134,c65b75e740ae6f3321b90627fad9c86a8cb3b9ac,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 14 22:56:24 2014 +0100,1394834184,Merge pull request #1608 from mattsta/fix-sentinel-current-epoch-segfaultFix segfault from accessing array out of bounds,,,,,,,,,,,,,,,Merge,False,,
cc11d103c09eb5a34f9097adf014b5193a8c9df3,2209d077d397352a11480501a691bd991c05ff36,Jan-Erik Rediger,badboy@archlinux.us,Sat Mar 15 14:43:50 2014 +0100,1394891030,"Finally fix the `install_server.sh` script.Includes changes from a dozen bug reports and pull requests.nWas tested on Ubuntu, Debian and CentOS.n",140.0,73.0,"README,CAS_DELIMITER,utils/install_server.sh,CAS_DELIMITER,utils/redis_init_script.tpl,CAS_DELIMITER",3.0,2.0,2.0,0.7707194613479835,8.0,125.0,31.0,486.2428819444444,7.0,1.001727579419487,1.0,Corrective,True,True,"[""af1e63c36564ea935d13da22522523b064fe5906""]"
c65b75e740ae6f3321b90627fad9c86a8cb3b9ac,3a2ff5561781807ebbe98706953b88ea8ed6fe6d,antirez,antirez@gmail.com,Sat Mar 15 14:59:23 2014 +0100,1394891963,Sentinel: use CLIENT SETNAME when connecting to Redis.This makes debugging / monitoring of Sentinels simpler since you cannidentify sentinels in CLIENT LIST output of Redis instances.n,19.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3656.0,140.0,0.6814583333333334,6800.0,2.4674411494955666,2982.0,None,False,,
3a2ff5561781807ebbe98706953b88ea8ed6fe6d,ae0b7680b38e97d5aca5cb17e25eb380b101fecd,antirez,antirez@gmail.com,Mon Mar 17 17:20:44 2014 +0100,1395073244,"Sentinel failure detection implementation improved.Failure detection in Sentinel is ping-pong based. It used to work bynremembering the last time a valid PONG reply was received, and checkingnif the reception time was too old compared to the current current time.nnPINGs were sent at a fixed interval of 1 second.nnThis works in a decent way, but does not scale well when we want to setnvery small values of down-after-milliseconds (this is the nodentimeout basically).nnThis commit reiplements the failure detection making a number ofnchanges. Some changes are inspired to Redis Cluster failure detectionncode:nn* A new last_ping_time field is added in representation of instances.n  If non zero, we have an active ping that was sent at the specifiedn  time. When a valid reply to ping is received, the field is zeroedn  again.n* last_ping_time is not reset when we reconnect the link or send a newn  ping, so from our point of view it represents the time we startedn  waiting for the instance to reply to our pings without receiving an  reply.n* last_ping_time is now used in order to check if the instance isn  timed out. This means that we can have a node timeout of 100n  milliseconds and yet the system will work well since the new check isn  not bound to the period used to send pings.n* Pings are now sent every second, or often if the value ofn  down-after-milliseconds is less than one second. With a lower limit ofn  10 HZ ping frequency.n* Link reconnection code was improved. This is used in order to try ton  reconnect the link when we are at 50% of the node timeout without an  valid reply received yet. However the old code triggered unnecessaryn  reconnections when the node timeout was very small. Now that should ben  ok.nnThe new code passes the tests but more testing is needed and more unitntests stressing the failure detector, so currently this is merged onlynin the unstable branch.n",62.0,13.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3675.0,141.0,2.0981597222222224,6801.0,1.4766081387459251,2983.0,Corrective,True,,
ae0b7680b38e97d5aca5cb17e25eb380b101fecd,bb6d8501604179d9e5f4b43d2ea5afdf7458d26f,antirez,antirez@gmail.com,Tue Mar 18 11:21:17 2014 +0100,1395138077,"Sentinel: down-after-milliseconds is not master-specific.addReplySentinelRedisInstance() modified so that this field is displayednfor all the kind of instances: Sentinels, Masters, Slaves.n",4.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3724.0,142.0,0.7503819444444444,6802.0,2.3326546666049697,2984.0,None,False,,
bb6d8501604179d9e5f4b43d2ea5afdf7458d26f,218cc5fc394d15af3d7b5fbf6b15376c3e23cd6c,antirez,antirez@gmail.com,Tue Mar 18 14:37:44 2014 +0100,1395149864,Sentinel: propagate down-after-ms changes to slaves and sentinels.,20.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3724.0,143.0,0.13642361111111112,6803.0,8.330109442606261,2985.0,None,False,,
218cc5fc394d15af3d7b5fbf6b15376c3e23cd6c,2586ea76377f8144be904676ffdf331d262fdf24,antirez,antirez@gmail.com,Tue Mar 18 14:58:27 2014 +0100,1395151107,Sentinel: instance_is_killed proc added to sentinel.tcl.,6.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,388.0,16.0,13.9603125,6804.0,1.0716316343205068,450.0,None,False,,
2586ea76377f8144be904676ffdf331d262fdf24,58f104e2eebd076a94bb1eeb9064ec8da2f14410,antirez,antirez@gmail.com,Tue Mar 18 15:06:52 2014 +0100,1395151612,Sentinel test: foreach_instance_id implements 'break'.,2.0,0.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,394.0,17.0,0.005844907407407407,6805.0,172.08910891089107,451.0,Preventative,False,,
58f104e2eebd076a94bb1eeb9064ec8da2f14410,258d377d8ee428698e9b8fa323bd32612786954a,antirez,antirez@gmail.com,Tue Mar 18 15:18:51 2014 +0100,1395152331,Sentinel test: 02 unit better coverage + refactoring.,51.0,13.0,"tests/sentinel-tests/02-slaves-reconf.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,45.0,3.0,15.078900462962967,6806.0,1.0663178328191911,452.0,Preventative,False,,
258d377d8ee428698e9b8fa323bd32612786954a,b9e90a70fa3a8b9bf7cd8f26450b667de4250227,antirez,antirez@gmail.com,Tue Mar 18 15:35:47 2014 +0100,1395153347,Sentinel: sentinelRefreshInstanceInfo() minor refactoring.Test sentinel.tilt condition on top and return if it is true.nThis allows to remove the check for the tilt condition in the remainingncode paths of the function.n,7.0,8.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3744.0,144.0,0.0403125,6807.0,25.806201550387588,2986.0,None,False,,
258d377d8ee428698e9b8fa323bd32612786954a,67ed5f00aaaf8f064a851d33b14920c20231e961,Matt Stancliff,matt@genges.com,Tue Mar 18 15:35:09 2014 -0400,1395171309,"Cluster: remove variable causing warningGCC-4.9 warned about this, but clang didn't.nnThis commit fixes warning:nsentinel.c: In function 'sentinelReceiveHelloMessages':nsentinel.c:2156:43: warning: variable 'master' set but not used [-Wunused-but-set-variable]n sentinelRedisInstance *ri = c->data, *master;n",1.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3743.0,145.0,0.2078935185185185,17.0,5.81015477118361,17.0,None,False,,
b9e90a70fa3a8b9bf7cd8f26450b667de4250227,e150ec7d0c83d56f81496084b2e5f119c958ab6f,antirez,antirez@gmail.com,Wed Mar 19 12:55:49 2014 +0100,1395230149,"Unify stats reset for CONFIG RESETSTAT / initServer().Now CONFIG RESETSTAT makes sure to reset all the fields, and in thenfuture it will be simpler to avoid missing new fields.n",26.0,25.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.0176133035029988,12.0,2155.0,993.0,10.437673611111107,6809.0,1.0483831306567888,2989.0,Feature Addition,False,,
e150ec7d0c83d56f81496084b2e5f119c958ab6f,fe30847016dae6f0e05542b662e3d5e57abcd563,antirez,antirez@gmail.com,Thu Mar 20 11:22:47 2014 +0100,1395310967,Set LRU parameters via REDIS_LRU_BITS define.,3.0,2.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1394.0,400.0,0.9353935185185184,6811.0,2.0690687718082605,2990.0,None,False,,
fe30847016dae6f0e05542b662e3d5e57abcd563,d77e2316825ec9dfa21b4ef74f6e90d335b846e8,antirez,antirez@gmail.com,Thu Mar 20 11:33:25 2014 +0100,1395311605,Specify LRU resolution in milliseconds.,4.0,5.0,"src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.9749375012019268,12.0,1571.5,982.0,28.815558449074068,6813.5,1.032780402017701,2994.0,None,False,True,"[""5127e3998058983351b6c0b94d1341f9d646c9cc""]"
d77e2316825ec9dfa21b4ef74f6e90d335b846e8,1faf82663ff44d309a7a28989c1d99c8addf971c,antirez,antirez@gmail.com,Thu Mar 20 11:36:56 2014 +0100,1395311816,Specify lruclock in redisServer structure via REDIS_LRU_BITS.The padding field was totally useless: removed.n,1.0,2.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1395.0,402.0,0.0024421296296296296,6816.0,410.478672985782,2995.0,Feature Addition,False,,
1faf82663ff44d309a7a28989c1d99c8addf971c,ad6b0f70b27712879c6435cb58edc5bff259f7a8,antirez,antirez@gmail.com,Thu Mar 20 11:47:12 2014 +0100,1395312432,"Obtain LRU clock in a resolution dependent way.For testing purposes it is handy to have a very high resolution of thenLRU clock, so that it is possible to experiment with scripts running innjust a few seconds how the eviction algorithms works.nnThis commit allows Redis to use the cached LRU clock, or a valuencomputed on demand, depending on the resolution. So normally we have thengood performance of a precomputed value, and a clock that wraps in manyndays using the normal resolution, but if needed, changing a define willnswitch behavior to an high resolution LRU clock.n",25.0,19.0,"src/db.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.5414261154770146,12.0,1613.0,1046.0,2.455888310185185,6818.5,1.101926230466283,2999.0,Preventative,False,True,"[""9682b616a21b5e675a1ca82109a11d6f4de1d2de""]"
ad6b0f70b27712879c6435cb58edc5bff259f7a8,6d5790d68289e8824477d8187076f743d87b66e5,antirez,antirez@gmail.com,Thu Mar 20 11:55:18 2014 +0100,1395312918,"Fix OBJECT IDLETIME return value converting to seconds.estimateObjectIdleTime() returns a value in milliseconds now, so we neednto scale the output of OBJECT IDLETIME to seconds.n",2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,680.0,53.0,0.005625,6821.0,178.77777777777774,3000.0,Corrective,True,,
6d5790d68289e8824477d8187076f743d87b66e5,22c9cfaf57d330dcea487aca96526fdd78401fa2,antirez,antirez@gmail.com,Thu Mar 20 11:57:29 2014 +0100,1395313049,"LRU eviction pool implementation.This is an improvement over the previous eviction algorithm where we usenan eviction pool that is persistent across evictions of keys, and getsnpopulated with the best candidates for evictions found so far.nnIt allows to approximate LRU eviction at a given number of samplesnbetter than the previous algorithm used.n",149.0,22.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,12.0,2317.5,862.0,0.007141203703703703,6822.5,106.02431118314422,3002.0,Perfective,False,True,"[""4fdd7a05463fee21e9d19d64c8505de09e0de8a1"", ""6540e9eeaae0e4b9a28e51680466d10c6ba3a3a1""]"
22c9cfaf57d330dcea487aca96526fdd78401fa2,5317f5e99af6505048793343d94b0631b63ba029,antirez,antirez@gmail.com,Thu Mar 20 15:50:46 2014 +0100,1395327046,"Added dictGetRandomKeys() to dict.c: mass get random entries.This new function is useful to get a number of random entries from annhash table when we just need to do some sampling without particularlyngood distribution.nnIt just jumps at a random place of the hash table and returns the firstnN items encountered by scanning linearly.nnThe main usefulness of this function is to speedup Redis internalnsampling of the key space, for example for key eviction or expiry.n",53.0,0.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",2.0,1.0,1.0,0.13503620280212764,12.0,600.5,55.0,92.18561342592592,6824.5,1.0086309184104052,3004.0,Feature Addition,False,,
5317f5e99af6505048793343d94b0631b63ba029,82b53c650c41db4bd8af8d54cb75227df5b7abd4,antirez,antirez@gmail.com,Thu Mar 20 16:20:37 2014 +0100,1395328837,struct dictEntry -> dictEntry.,10.0,10.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.9709505944546688,12.0,2219.0,965.0,11.89308738425926,6827.5,1.064411588312252,3008.0,None,False,,
82b53c650c41db4bd8af8d54cb75227df5b7abd4,c641b670c333486dc0ea887ae61c86ff9202ab69,antirez,antirez@gmail.com,Thu Mar 20 16:52:12 2014 +0100,1395330732,"Use new dictGetRandomKeys() API to get samples for eviction.The eviction quality degradates a bit in my tests, but since the API isnfaster, it allows to raise the number of samples, and overall is a win.n",23.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3344.0,460.0,0.02193287037037037,6830.0,46.593667546174146,3009.0,Feature Addition,False,,
c641b670c333486dc0ea887ae61c86ff9202ab69,f4da796c539928e3c2dc5a643bd5e6d3af8d29ce,antirez,antirez@gmail.com,Thu Mar 20 17:05:42 2014 +0100,1395331542,Default LRU samples is now 5.,9.0,6.0,"redis.conf,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,2.0,2.0,0.5665095065529053,12.0,1089.5,534.0,24.150723379629632,6831.5,1.0207493893283448,3010.0,None,False,,
f4da796c539928e3c2dc5a643bd5e6d3af8d29ce,a98369929e250e94240f719abcf1d6e1255202a9,antirez,antirez@gmail.com,Thu Mar 20 17:56:27 2014 +0100,1395334587,"Use 24 bits for the lru object field and improve resolution.There were 2 spare bits inside the Redis object structure that are nownused in order to enlarge 4x the range of the LRU field.nnAt the same time the resolution was improved from 10 to 1 second: thisnstill provides 194 days before the LRU counter overflows (restarting fromnzero).nnThis is not a problem since it only causes lack of eviction precision fornobjects not touched for a very long time, and the lack of precision isnonly temporary.n",2.0,3.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1418.0,406.0,0.035243055555555555,6833.0,29.374384236453203,3011.0,None,False,,
a98369929e250e94240f719abcf1d6e1255202a9,4fdd7a05463fee21e9d19d64c8505de09e0de8a1,Jan-Erik Rediger,badboy@archlinux.us,Thu Mar 20 23:16:38 2014 +0100,1395353798,Fixed a few typos.,3.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3364.0,461.0,0.2669675925925926,9.0,4.745772999219629,5.0,Corrective,True,,
a98369929e250e94240f719abcf1d6e1255202a9,5fa3248badcd042cecc5aed29b8fb6cc59cd009a,antirez,antirez@gmail.com,Fri Mar 21 08:03:30 2014 +0100,1395385410,"The default maxmemory policy is now noeviction.This is safer as by default maxmemory should just set a memory limitnwithout any key to be deleted, unless the policy is set to somethingnmore relaxed.n",2.0,2.0,"redis.conf,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,2.0,2.0,1.0,12.0,1090.5,537.0,0.6058506944444444,6834.5,2.2146032681110444,3012.0,None,False,,
5fa3248badcd042cecc5aed29b8fb6cc59cd009a,4d2e8fa189665e8e76040da9642ca89ef55fba10,antirez,antirez@gmail.com,Fri Mar 21 09:08:08 2014 +0100,1395389288,Use getLRUClock() instead of server.lruclock to create objects.Thanks to Matt Stancliff for noticing this error. It was in the originalncode but somehow I managed to remove the change from the commit...n,2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,680.0,54.0,0.883912037037037,6836.0,2.1313342935707738,3013.0,Feature Addition,False,,
4d2e8fa189665e8e76040da9642ca89ef55fba10,6972f18cbd1b71ebaf4a8f077ab79a59ccaccea2,antirez,antirez@gmail.com,Fri Mar 21 09:52:00 2014 +0100,1395391920,Add test-lru.rb to utils.This is a program useful to evaluate the Redis LRU algorithm behavior.n,125.0,0.0,"utils/lru/README,CAS_DELIMITER,utils/lru/test-lru.rb,CAS_DELIMITER",2.0,1.0,1.0,0.4815485438118001,1.0,0.0,0.0,0.0,6837.5,0.0,29.0,Feature Addition,False,True,"[""82154ffab5ae01869f8334e070f0c96a89791912""]"
6972f18cbd1b71ebaf4a8f077ab79a59ccaccea2,a9caca0424197e1b43cc98c5106cca5c86e3ac34,antirez,antirez@gmail.com,Mon Mar 24 09:38:33 2014 +0100,1395650313,"sdscatvprintf(): guess buflen using format length.sdscatvprintf() uses a loop where it tries to output the formattednstring in a buffer of the initial length, if there was not enough room,na buffer of doubled size is tried and so forth.nnThe initial guess for the buffer length was very poor, an hardcodedn16. This caused the printf to be processed multiple times without angood reason. Given that printf functions are already not fast, thenoverhead was significant.nnThe new heuristic is to use a buffer 4 times the length of the formatnbuffer, and 32 as minimal size. This appears to be a good balance forntypical uses of the function inside the Redis code base.nnThis change improved INFO command performances 3 times.n",2.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,870.0,37.0,102.00351851851852,6839.0,1.0098035833912773,3014.0,None,False,,
a9caca0424197e1b43cc98c5106cca5c86e3ac34,d3efe04c4731bda4657b80f099f8bcaca3c26319,antirez,antirez@gmail.com,Mon Mar 24 10:00:08 2014 +0100,1395651608,"Cache uname() output across INFO calls.Uname was profiled to be a slow syscall. It produces always the samenoutput in the context of a single execution of Redis, so calling it atnevery INFO output generation does not make too much sense.nnThe uname utsname structure was modified as a static variable. At thensame time a static integer was added to check if we need to call unamenthe first time.n",9.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3364.0,462.0,3.446875,6840.0,1.2901178603807797,3015.0,Feature Addition,False,,
d3efe04c4731bda4657b80f099f8bcaca3c26319,30639c8ca957b3ece9985d8261f89b4494494886,antirez,antirez@gmail.com,Mon Mar 24 10:20:33 2014 +0100,1395652833,sdscatvprintf(): Try to use a static buffer.For small content the function now tries to use a static buffer to avoidna malloc/free cycle that is too costly when the function is used in thencontext of performance critical code path such as INFO output generation.nnThis change was verified to have positive effects in the execution speednof the INFO command.n,18.0,6.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,871.0,38.0,0.029166666666666667,6841.0,35.285714285714285,3016.0,None,False,,
30639c8ca957b3ece9985d8261f89b4494494886,93253c27620647deb3cb60e2666fbf7db9eff4cb,antirez,antirez@gmail.com,Mon Mar 24 12:00:20 2014 +0100,1395658820,"Sample and cache RSS in serverCron().Obtaining the RSS (Resident Set Size) info is slow in Linux and OSX.nThis slowed down the generation of the INFO 'memory' section.nnSince the RSS does not require to be a real-time measurement, wennow sample it with server.hz frequency (10 times per second by default)nand use this value both to show the INFO rss field and to compute thenfragmentation ratio.nnPractically this does not make any difference for memory profiling ofnRedis but speeds up the INFO call significantly.n",10.0,5.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",4.0,1.0,1.0,1.6402239289418519,12.0,1306.0,907.0,150.52035300925925,6843.5,4.074626426182688,3020.0,None,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
93253c27620647deb3cb60e2666fbf7db9eff4cb,c138631cd16e5a28cf7f5169bee28ed4c6dae598,Matt Stancliff,matt@genges.com,Sat Mar 22 18:56:28 2014 -0400,1395528988,"Fix maxclients error handlingEverywhere in the Redis code base, maxclients is treatednas an int with (int)maxclients or `maxclients = atoi(source)`,nso let's make maxclients an int.nnThis fixes a bug where someone could specify a negative maxclientsnon startup and it would work (as well as set maxclients very high)nbecause:nnunsigned int maxclients;nchar *update = -300;nmaxclients = atoi(update);nif (maxclients < 1) goto fail;nnBut, (maxclients < 1) can only catch the case when maxclientsnis exactly 0.  maxclients happily sets itself to -300, which isn'tn-300, but rather 4294966996, which isn't < 1, so... everythingnworked.nnmaxclients config parsing checks for the case of < 1, but maxclientsnCONFIG SET parsing was checking for case of < 0 (allowingnmaxclients to be set to 0).  CONFIG SET parsing is now updated tonmatch config parsing of < 1.nnIt's tempting to add a MINIMUM_CLIENTS define, but... I didn't.nnThese changes were inspired by antirez#356, but this doesn'tnfix that issue.n",2.0,2.0,"src/config.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1626.5,549.0,0.9780497685185184,18.5,1.4001701594014624,19.0,Corrective,True,,
c138631cd16e5a28cf7f5169bee28ed4c6dae598,491532a713ae28fdd5e489e8f2d88076da8adf44,Matt Stancliff,matt@genges.com,Sat Mar 22 19:15:04 2014 -0400,1395530104,"Replace magic 32 with REDIS_EVENTLOOP_FDSET_INCR32 was the additional number of file descriptors Redisnwould reserve when managing a too-low ulimit.  Thennumber 32 was in too many places statically, so nownwe use a macro instead that looks more appropriate.nnWhen Redis sets up the server event loop, it uses:nserver.maxclients+REDIS_EVENTLOOP_FDSET_INCRnnSo, when reserving file descriptors, it makes sense tonreserve at least REDIS_EVENTLOOP_FDSET_INCR FDs insteadnof only 32.  Currently, REDIS_EVENTLOOP_FDSET_INCR isnset to 128 in redis.h.nnAlso, I replaced the static 128 in the while f < old loopnwith REDIS_EVENTLOOP_FDSET_INCR as well, which resultsnin no change since it was already 128.nnImpact: Users now need at least maxclients+128 asntheir open file limit instead of maxclients+32 to obtainnactual maxclients number of clients.  Redis will carventhe extra REDIS_EVENTLOOP_FDSET_INCR file descriptors itnneeds out of the maxclients range instead of failingnto start (unless the local ulimit -n is too low to accomidatenthe request).n",7.0,7.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3375.0,464.0,-1.4897685185185183,20.0,0.3287547779607819,20.0,Feature Addition,False,,
491532a713ae28fdd5e489e8f2d88076da8adf44,4a25983f8fe70e105bfd7cc42fed825001afd1df,Matt Stancliff,matt@genges.com,Sat Mar 22 19:23:01 2014 -0400,1395530581,"Improve error handling around setting ulimitsThe log messages about open file limits have alwaysnbeen slightly opaque and confusing.  Here's an attempt tonfix their wording, detail, and meaning.  Users will have anbetter understanding of how to fix very common problemsnwith these reworded messages.nnAlso, we handle a new error case when maxclients becomes lessnthan one, essentially rendering the server unusable.  Wennow exit on startup instead of leaving the user with a servernunable to handle any connections.nnThis fixes antirez#356 as well.n",22.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3375.0,465.0,0.0055208333333333325,21.0,182.1320754716981,21.0,Corrective,True,True,"[""386a46946babca7b9962a94837ef96bb40b448c7"", ""a1a07225b3963eb251b518737a3f6b59515faaa1""]"
4a25983f8fe70e105bfd7cc42fed825001afd1df,90b844212d38fec80d0690d30396c462aa5655cd,Matt Stancliff,matt@genges.com,Sat Mar 22 19:29:28 2014 -0400,1395530968,"Fix infinite loop on startup if ulimit too lowFun fact: rlim_t is an unsigned long long on all platforms.nnContinually subtracting from a rlim_t makes it get smallernand smaller until it wraps, then you're up to 2^64-1.nnThis was causing an infinite loop on Redis startup ifnyour ulimit was extremely (almost comically) low.nnThe case of (f > oldlimit) would never be met in a case like:nnf = 150nwhile (f > 20) f -= 128nnSince f is unsigned, it can't go negative and wouldntake on values of:nnIteration 1: 150 - 128 => 22nIteration 2:  22 - 128 => 18446744073709551510nIterations 3-u00e2u0088u009e: ...nnTo catch the wraparound, we use the previous value of fnstored in limit.rlimit_cur.  If we subtract from f andnget a larger number than the value it had previously,nwe print an error and exit since we don't have enoughnfile descriptors to help the user at this point.nnThanks to @bs3g for the inspiration to fix this problem.nPatches existed from @bs3g at antirez#1227, but I needed to repair a few othernparts of Redis simultaneously, so I didn't get a chance to use them.n",11.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3393.0,466.0,0.004479166666666667,22.0,224.2558139534884,22.0,Corrective,True,,
93253c27620647deb3cb60e2666fbf7db9eff4cb,df4bdbf688c2e4f5d9305d6d59ec3086ab701d04,Matt Stancliff,matt@genges.com,Fri Mar 21 13:09:23 2014 -0400,1395421763,"Cluster: Fix trib create when masters==replicasThis bug was introduced in 2e5c394f during a refactor.nnIt took me a while to understand what was going on withnthe code, so I've refactored it further by:n  - Replacing boolean values with meaningful symbolsn  - Replacing 'i' with a meaningful variable namen  - Adding the proper abort checkn  - Factoring out now duplicated conditionalsn  - Adding optional verbose logging (we're inside *four*ndifferent looping constructs, so it takes a while tonfigure out where all the moving parts are)n  - Updating comment for the sectionnnThis fixes a problem when the number of master instancesnequaled the number of replica instances.  Before, whennthere were equal numbers of both, nodes_count would go tonzero, but the while loop would spin in i < @replicas becauseni would never be updated (because the nodes_list of each ipnwas length == 0, which triggered an endless loop ofnnext -> i = 0 -> 0 < 1? -> true -> next -> i = 0 ...)nnThanks to carlo who found this problem at:nhttps://groups.google.com/forum/#!topic/redis-db/_WVVqDw5B7cn",22.0,8.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1056.0,84.0,10.082754629629632,23.0,1.099179245824485,23.0,None,False,True,"[""b55f742e46a755e96c92eded47d9c69327f774e8""]"
93253c27620647deb3cb60e2666fbf7db9eff4cb,e942f3ce0fee5033d2d4b4e8c5b9f1d912a1d370,Matt Stancliff,matt@genges.com,Fri Mar 21 14:42:38 2014 -0400,1395427358,"Cluster: Restore proper trib master iterationThis got removed in 2e5c394 during a new feature addition.nnThe prior commit had break if masters.length == masters_countnbut we are guaranteed to aready have that condition met sincenotherwise we would haven't gotten this far.nnWithout this break statement, it's possible some masters maynbe forgotten and have zero replicas while other masters havenmore than their requested number of replicas.nnThanks to carlos for pointing out this regression at:nhttps://groups.google.com/forum/#!topic/redis-db/_WVVqDw5B7cn",1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1070.0,85.0,0.06475694444444445,24.0,16.442359249329755,24.0,None,False,True,"[""b55f742e46a755e96c92eded47d9c69327f774e8""]"
93253c27620647deb3cb60e2666fbf7db9eff4cb 2209d077d397352a11480501a691bd991c05ff36,68a3af5f9c17217287d9abcb3552d87b68ac0b2f,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 18:10:50 2014 +0100,1395681050,Merge pull request #1609 from badboy/install_server-fixFinally fix the `install_server.sh` script.,,,,,,,,,,,,,,,Merge,False,,
68a3af5f9c17217287d9abcb3552d87b68ac0b2f 4fdd7a05463fee21e9d19d64c8505de09e0de8a1,896e15f3e3632fb368af8fc8657e2e553844d390,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 18:13:39 2014 +0100,1395681219,Merge pull request #1627 from badboy/lru-fixFixed a few typos.,,,,,,,,,,,,,,,Merge,False,,
90b844212d38fec80d0690d30396c462aa5655cd,3b54ee6ea414e0b52a4936f341be5c8c865959c6,Matt Stancliff,matt@genges.com,Mon Mar 24 13:15:35 2014 -0400,1395681335,"Add REDIS_MIN_RESERVED_FDS define for open fdsAlso update the original REDIS_EVENTLOOP_FDSET_INCR toninclude REDIS_MIN_RESERVED_FDS. REDIS_EVENTLOOP_FDSET_INCRnexists to make sure more than (maxclients+RESERVED) entriesnare allocated, but we can only guarantee that if we includenthe current value of REDIS_MIN_RESERVED_FDS as a minimumnfor the INCR size.n",8.0,7.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,12.0,2411.0,877.0,1.7518171296296297,25.5,1.4300060394234375,26.0,Feature Addition,False,True,"[""e3436dd9b886da95b62c347b68be5366877f7b91""]"
3b54ee6ea414e0b52a4936f341be5c8c865959c6,386a46946babca7b9962a94837ef96bb40b448c7,Matt Stancliff,matt@genges.com,Mon Mar 24 13:21:15 2014 -0400,1395681675,"Fix potentially incorrect errno usageerrno may be reset by the previous call to redisLog, so capturenthe original value for proper error reporting.n",2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3404.0,468.0,0.003935185185185185,27.0,255.1176470588236,27.0,Corrective,True,,
896e15f3e3632fb368af8fc8657e2e553844d390 df4bdbf688c2e4f5d9305d6d59ec3086ab701d04,a006fcb8a77127e38bc45c7a622281b622623bf8,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 18:26:17 2014 +0100,1395681977,Merge pull request #1628 from mattsta/fix-trib-createCluster: Fix trib create when masters==replicas,,,,,,,,,,,,,,,Merge,False,,
a006fcb8a77127e38bc45c7a622281b622623bf8 e942f3ce0fee5033d2d4b4e8c5b9f1d912a1d370,8e6625e6ae8a77d6c0869d8e5d5409bc6068cfd1,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 18:31:55 2014 +0100,1395682315,Merge pull request #1629 from mattsta/fix-trib-master-assignmentCluster: Restore proper trib master iteration,,,,,,,,,,,,,,,Merge,False,,
8e6625e6ae8a77d6c0869d8e5d5409bc6068cfd1 67ed5f00aaaf8f064a851d33b14920c20231e961,906c4d77c0e4d365da4ce7169e84700df9ab8429,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 18:33:22 2014 +0100,1395682402,Merge pull request #1617 from mattsta/remove-unused-warningCluster: remove variable causing warning,,,,,,,,,,,,,,,Merge,False,,
906c4d77c0e4d365da4ce7169e84700df9ab8429,b47b343fab3dd11eb983cef0a5d4de65dca2ed51,Matt Stancliff,matt@genges.com,Thu Mar 13 14:40:25 2014 -0400,1394736025,"Fix data loss when save AOF/RDB with no free spacePreviously, the (!fp) would only catch lack of free spacenunder OS X.  Linux waits to discover it can't write untilnit actually writes contents to disk.nn(fwrite() returns success even if the underlying filenhas no free space to write into.  All the errorsnonly show up at flush/sync/close time.)nnFixes antirez/redis#1604n",6.0,6.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,1216.5,205.0,28.737494212962964,28.5,1.0257718696438776,29.0,Corrective,True,,
b47b343fab3dd11eb983cef0a5d4de65dca2ed51,429045514512b2791a0297f08c7024c389d41981,Matt Stancliff,matt@genges.com,Fri Mar 14 17:07:52 2014 -0400,1394831272,Sentinel: Notify user when config can't be saved,12.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3741.0,146.0,-3.935613425925927,30.0,0.7459100039113391,30.0,None,False,True,"[""35667d75c38af8f7fc523dd47fa0751cb7afadac""]"
906c4d77c0e4d365da4ce7169e84700df9ab8429 429045514512b2791a0297f08c7024c389d41981,7f1c3607ec17542fe59427591f0bbf8528d48a7b,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 19:26:25 2014 +0100,1395685585,Merge pull request #1606 from mattsta/fix-disk-full-datalossFix data loss when save AOF/RDB with no free space,,,,,,,,,,,,,,,Merge,False,,
7f1c3607ec17542fe59427591f0bbf8528d48a7b,78782ed59f107c7819440ca1f63dc3adb97ce4c1,Matt Stancliff,matt@genges.com,Mon Mar 24 14:39:26 2014 -0400,1395686366,"Use LRU_CLOCK() instead of function getLRUClock()lookupKey() uses LRU_CLOCK(), so it seems objectncreation should use LRU_CLOCK() too.n",2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,680.0,55.0,3.4384027777777777,31.0,1.2908327106012565,31.0,None,False,,
7f1c3607ec17542fe59427591f0bbf8528d48a7b 78782ed59f107c7819440ca1f63dc3adb97ce4c1,fc0fb0bad35d31c422395d9f71eaf829bb2d240d,Salvatore Sanfilippo,antirez@gmail.com,Mon Mar 24 21:04:03 2014 +0100,1395691443,Merge pull request #1635 from mattsta/lruclock-instead-of-getlruclockUse LRU_CLOCK() instead of function getLRUClock(),,,,,,,,,,,,,,,Merge,False,,
fc0fb0bad35d31c422395d9f71eaf829bb2d240d,35667d75c38af8f7fc523dd47fa0751cb7afadac,antirez,antirez@gmail.com,Mon Mar 24 21:07:44 2014 +0100,1395691664,Fixed undefined variable value with certain code paths.In sentinelFlushConfig() fd could be undefined when the following ifnstatement was true:nnif (rewrite_status == -1) goto werr;nnThis could cause random file descriptors to get closed.n,1.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3744.0,147.0,9.958240740740743,6846.0,1.1004193437409924,3021.0,Corrective,True,,
35667d75c38af8f7fc523dd47fa0751cb7afadac 386a46946babca7b9962a94837ef96bb40b448c7,72c5ebcba44d34efcb3f7a0afe9e21ec65a42b31,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 25 08:42:39 2014 +0100,1395733359,Merge pull request #1630 from mattsta/fix-infinite-loop-ulimitFix infinite loop ulimit,,,,,,,,,,,,,,,Merge,False,,
72c5ebcba44d34efcb3f7a0afe9e21ec65a42b31,6e33c908ddb626810bae27fbc481ab572e4df793,antirez,antirez@gmail.com,Tue Mar 25 09:01:46 2014 +0100,1395734506,"adjustOpenFilesLimit() refactoring.In this commit:n* Decrement steps are semantically differentiated from the reserved FDs.n  Previously both values were 32 but the meaning was different.n* Make it clear that we save setrlimit errno.n* Don't explicitly handle wrapping of 'f', but prevent it fromn  happening.n* Add comments to make the function flow more readable.nnThis integrates PR #1630n",17.0,15.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3405.0,469.0,0.6114699074074074,6847.0,2.635403456304064,3022.0,None,False,True,"[""e3436dd9b886da95b62c347b68be5366877f7b91""]"
6e33c908ddb626810bae27fbc481ab572e4df793,9e0b9f12b2bd0a522c75dbdbacbf2a7204ee2588,antirez,antirez@gmail.com,Tue Mar 25 09:33:27 2014 +0100,1395736407,Test: do not complain when leaks can't run because process died.,4.0,0.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,311.0,36.0,35.87746527777778,6848.0,1.0278726490920582,453.0,Preventative,False,,
9e0b9f12b2bd0a522c75dbdbacbf2a7204ee2588,6540e9eeaae0e4b9a28e51680466d10c6ba3a3a1,antirez,antirez@gmail.com,Tue Mar 25 10:30:01 2014 +0100,1395739801,"Fix off by one bug in freeMemoryIfNeeded() eviction pool.Bug found by the continuous integration test running the Redisnwith valgrind:nn==6245== Invalid read of size 8n==6245==at 0x4C2DEEF: memcpy@GLIBC_2.2.5 (mc_replace_strmem.c:876)n==6245==by 0x41F9E6: freeMemoryIfNeeded (redis.c:3010)n==6245==by 0x41D2CC: processCommand (redis.c:2069)nnmemmove() size argument was accounting for an extra element, goingnoutside the bounds of the array.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3407.0,470.0,0.06128472222222223,6849.0,17.31728045325779,3023.0,Corrective,True,,
6540e9eeaae0e4b9a28e51680466d10c6ba3a3a1,c1041c570fe2722481eb6c4ee4b9505ce4e0437f,antirez,antirez@gmail.com,Tue Mar 25 16:07:14 2014 +0100,1395760034,Cluster: stay within 80 cols.,62.0,26.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4028.0,355.0,4.990706018518519,6850.0,1.2003724515708598,3024.0,None,False,,
c1041c570fe2722481eb6c4ee4b9505ce4e0437f,6c527a89a06ad93d7e250de78d3fecb39f13a6a3,antirez,antirez@gmail.com,Tue Mar 25 16:45:37 2014 +0100,1395762337,"Cluster: configEpoch collisions resolution.The slave election in Redis Cluster guarantees that slaves promoted tonmasters always end with unique config epochs, however failures duringnmanual reshardings, software bugs and operational errors may in theoryncause two nodes to have the same configEpoch.nnThis commit introduces a mechanism to eventually always end with differentnconfigEpochs if a collision ever happens.nnAs a (wanted) side effect, this also ensures that after a new clusternis created, all nodes will end with a different configEpoch automatically.n",72.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4064.0,356.0,0.02665509259259259,6851.0,38.51628310898828,3025.0,None,False,,
6c527a89a06ad93d7e250de78d3fecb39f13a6a3,0064b1a583f2feb4852a22d84248548dc7e66a3a,antirez,antirez@gmail.com,Tue Mar 25 17:44:39 2014 +0100,1395765879,"Cluster: redis-trib cluster allocation more even across nodes.redis-trib used to allocate slots not considering fractions of nodesnwhen computing the slots_per_node amount. So the fractional part wasncarried over till the end of the allocation, where the last nodenreceived a few more slots than any other (or a lot more if the clusternwas composed of many nodes).nnThe computation was changed to allocate slots more evenly when they arennot exactly divisible for the number of masters we have.n",10.0,6.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1071.0,86.0,3.9180671296296286,6852.0,1.255227888373247,3026.0,None,False,,
0064b1a583f2feb4852a22d84248548dc7e66a3a,eb746ec40890f2edfcd6c05a099814cb96d2f448,antirez,antirez@gmail.com,Tue Mar 25 17:50:46 2014 +0100,1395766246,Cluster: CLUSTER SETSLOT implementation comment updated.Update the comment since the implementation details changed.n,5.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4136.0,357.0,0.04524305555555557,6853.0,23.102839600920948,3027.0,None,False,,
eb746ec40890f2edfcd6c05a099814cb96d2f448,80d4c52cdfeaee480ad81c682f914ade88dbc620,antirez,antirez@gmail.com,Wed Mar 26 12:09:38 2014 +0100,1395832178,Cluster: better logging for clusterUpdateSlotsConfigWith().,13.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4138.0,358.0,0.7631018518518519,6854.0,2.310441060486562,3028.0,None,False,,
80d4c52cdfeaee480ad81c682f914ade88dbc620,3cf6f1f54fb3a31fb7157ab54919455feda41466,antirez,antirez@gmail.com,Wed Mar 26 12:29:43 2014 +0100,1395833383,"Cluster: clusterHandleConfigEpochCollision() fixed.New config epochs must always be obtained incrementing the currentEpoch,nthat is itself guaranteed to be >= the max configEpoch currently knownnto the node.n",6.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4148.0,359.0,0.01394675925925926,6855.0,72.70124481327802,3029.0,None,False,,
3cf6f1f54fb3a31fb7157ab54919455feda41466,6dd2dbbd367aaa79a0ebb1a73f8cc6815314f163,antirez,antirez@gmail.com,Wed Mar 26 16:35:38 2014 +0100,1395848138,"Cluster: handshake already known error logged to VERBOSE.This is not really an error but something that always happens fornexample when creating a new cluster, or if the sysadmin rejoins manuallyna node that is already known.nnSince useless logs don't help, moved to VERBOSE level.n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4152.0,360.0,0.17077546296296298,6856.0,6.855642155201626,3030.0,None,False,,
6dd2dbbd367aaa79a0ebb1a73f8cc6815314f163,7fb14b73ba67c70eb6c8a728c892c8d5b3fe954e,antirez,antirez@gmail.com,Thu Mar 27 14:54:57 2014 +0100,1395928497,Cluster: save/restore vars that must persist after recovery.This fixes issue #1479.n,36.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4152.0,361.0,0.9300810185185184,6857.0,2.0751751515076102,3031.0,None,False,,
7fb14b73ba67c70eb6c8a728c892c8d5b3fe954e,8f52173b2cdf47b7ef5ceda831ff44bf481d2090,antirez,antirez@gmail.com,Thu Mar 27 15:01:24 2014 +0100,1395928884,Cluster: last_vote_epoch -> lastVoteEpoch.Use cammel case for epochs that are persisted on disk.n,9.0,9.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,12.0,2209.5,382.0,8.607633101851851,6858.5,112.65695096561336,3033.0,None,False,,
8f52173b2cdf47b7ef5ceda831ff44bf481d2090,0609380603bb235e63c97049bd8217856c062edb,antirez,antirez@gmail.com,Fri Mar 28 11:18:48 2014 +0100,1396001928,HyperLogLog: initial sketch of registers access.,175.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6860.0,0.0,3034.0,None,False,True,"[""1c88c5941b2392d3592583f8e99a9c05c8d0b2e2"", ""e73839e7d5ed223d4adda66db1c0cb748d485998""]"
0609380603bb235e63c97049bd8217856c062edb,552eb5407a49cf6b604230d1994a5e441ba10f5c,antirez,antirez@gmail.com,Fri Mar 28 12:11:36 2014 +0100,1396005096,"HLLSELFTEST command implemented.To test the bitfield array of counters set/get macros from the Redis Tclnsuite is hard, so a specialized command that is able to test theninternals was developed.n",53.0,8.0,"src/Makefile,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,0.6073000958248577,12.0,1311.5,987.0,8.673958333333333,6862.5,1.0332304500634746,3038.0,Preventative,False,True,"[""aaaed66c566910277fddd35a345dea6664c8e646""]"
552eb5407a49cf6b604230d1994a5e441ba10f5c,1c88c5941b2392d3592583f8e99a9c05c8d0b2e2,antirez,antirez@gmail.com,Fri Mar 28 12:15:39 2014 +0100,1396005339,HLL_(SET|GET)_REGISTER types fixed.,9.0,7.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,218.0,2.0,0.0028125,6865.0,356.55555555555566,3039.0,Corrective,True,True,"[""e73839e7d5ed223d4adda66db1c0cb748d485998""]"
1c88c5941b2392d3592583f8e99a9c05c8d0b2e2,f22397dd7f5eba16f3c6264614c24f55c6b8fc33,antirez,antirez@gmail.com,Fri Mar 28 12:16:39 2014 +0100,1396005399,Use REDIS_HLL_REGISTER_MAX when possible.,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,220.0,3.0,0.0006944444444444446,6866.0,1441.0,3040.0,None,False,,
f22397dd7f5eba16f3c6264614c24f55c6b8fc33,e73839e7d5ed223d4adda66db1c0cb748d485998,antirez,antirez@gmail.com,Fri Mar 28 13:56:04 2014 +0100,1396011364,HLL_SET_REGISTER fixed.There was an error in the first version of the macro.nNow the HLLSELFTEST test reports success.n,18.0,13.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,220.0,4.0,0.06903935185185185,6867.0,15.484492875104776,3041.0,Corrective,True,,
e73839e7d5ed223d4adda66db1c0cb748d485998,e3234116ada02bdaff72a0d1eab91e381b0277b5,antirez,antirez@gmail.com,Fri Mar 28 14:09:28 2014 +0100,1396012168,HyperLogLog: redefine constants using P.,3.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,225.0,5.0,0.009305555555555556,6868.0,108.46268656716421,3042.0,None,False,,
e3234116ada02bdaff72a0d1eab91e381b0277b5,5660ff1cc1038f14aa5f577a5117e1561c21d50a,antirez,antirez@gmail.com,Fri Mar 28 14:42:30 2014 +0100,1396014150,hllAdd() low level HyperLogLog add implemented.,45.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,226.0,6.0,0.022939814814814816,6869.0,44.59233097880928,3043.0,Feature Addition,False,True,"[""f90a4af3d75a3a97c6572429ad7bdb9a207c8bce"", ""349c97818995de9ff6fed337844ff4bbb1b36153""]"
5660ff1cc1038f14aa5f577a5117e1561c21d50a,156929ee974ce968585144b0d0226e56622e6add,antirez,antirez@gmail.com,Fri Mar 28 16:24:35 2014 +0100,1396020275,HLLADD implemented.,93.0,3.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.16692758345346964,12.0,1699.666666666667,891.0,0.1407523148148148,6871.0,7.843308387911088,3046.0,Feature Addition,False,True,"[""bf066c875f625d5740f2a85d56d36140023c9dc8"", ""e1222d8b10552cda6f6fdf1178a2ca25ad77894b""]"
156929ee974ce968585144b0d0226e56622e6add,ded86076b382c72a12b4444e36a7d12bb009e850,antirez,antirez@gmail.com,Fri Mar 28 17:37:18 2014 +0100,1396024638,HLLCOUNT implemented.,68.0,2.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.3623558829475179,12.0,1729.666666666667,894.0,0.05049768518518519,6874.0,13.101764840705936,3049.0,None,False,True,"[""f90a4af3d75a3a97c6572429ad7bdb9a207c8bce""]"
ded86076b382c72a12b4444e36a7d12bb009e850,f90a4af3d75a3a97c6572429ad7bdb9a207c8bce,antirez,antirez@gmail.com,Fri Mar 28 18:24:05 2014 +0100,1396027445,"HyperLogLog algorithm fixed in two ways.There was an error in the computation of 2^register, and the sequence ofnzeroes computed after the hashing did not included the 1.n",8.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,423.0,9.0,0.032488425925925934,6876.0,31.78019237620235,3050.0,Corrective,True,True,"[""349c97818995de9ff6fed337844ff4bbb1b36153""]"
f90a4af3d75a3a97c6572429ad7bdb9a207c8bce,f29123364b9f953c2467e52d8bf91c7cfd9a7f5d,antirez,antirez@gmail.com,Fri Mar 28 18:35:14 2014 +0100,1396028114,hll-err.rb added to test error rate of Redis HyperLogLog.,21.0,0.0,"utils/hyperloglog/hll-err.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6877.0,0.0,30.0,Feature Addition,False,,
f29123364b9f953c2467e52d8bf91c7cfd9a7f5d,fdf81b2d3557ec379bb966db25ce14bfb5a988ff,antirez,antirez@gmail.com,Fri Mar 28 22:25:26 2014 +0100,1396041926,hll-err.rb: speedup using pipelining.,16.0,10.0,"utils/hyperloglog/hll-err.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,21.0,1.0,0.15986111111111112,6878.0,7.255430060816681,31.0,None,False,,
fdf81b2d3557ec379bb966db25ce14bfb5a988ff,ac8fbe8829cc3ff7b8ff23afd9e5b46c9b2b3ec9,antirez,antirez@gmail.com,Fri Mar 28 22:49:24 2014 +0100,1396043364,HyperLogLog: use precomputed table for 2^(-M[i]).,14.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,428.0,10.0,0.1842476851851852,6879.0,6.427476600288963,3051.0,None,False,,
ac8fbe8829cc3ff7b8ff23afd9e5b46c9b2b3ec9,28dce36f76b13e9a1d92c250428b17b88216e313,antirez,antirez@gmail.com,Sat Mar 29 08:37:01 2014 +0100,1396078621,Use processor base types in HLL_(GET|SET)_REGISTER.This speedups the macros by a noticeable factor.n,8.0,8.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,441.0,11.0,0.4080671296296297,6880.0,3.45057719034518,3052.0,None,False,,
28dce36f76b13e9a1d92c250428b17b88216e313,3ed947fb30727aab198e164853cf3dcfc960429e,antirez,antirez@gmail.com,Sat Mar 29 12:12:44 2014 +0100,1396091564,HLLCOUNT 3x faster taking fast path for default params.,47.0,11.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,441.0,12.0,0.14980324074074075,6881.0,7.675423008576063,3053.0,None,False,,
3ed947fb30727aab198e164853cf3dcfc960429e,5317a582cf1a50f7be077e333eac3694d76a8d76,antirez,antirez@gmail.com,Sat Mar 29 12:17:56 2014 +0100,1396091876,Remove a few useless operations from hllCount() fast path.,4.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,477.0,13.0,0.003611111111111111,6882.0,277.92307692307696,3054.0,None,False,,
5317a582cf1a50f7be077e333eac3694d76a8d76,4628ac00650591777d34427fa7ee6d5f1f6c484e,antirez,antirez@gmail.com,Sat Mar 29 15:58:44 2014 +0100,1396105124,"HyperLogLog internal representation modified.The new representation is more obvious, starting from the LSB of thenfirst byte and using bits going to MSB, and passing to next byte asnneeded.nnThere was also a subtle error: first two bits were unused, everythingnwas carried over on the right of two bits, even if it worked because ofnthe code requirement of always having a byte more at the end.nnDuring the rewrite the code was made safer trying to avoid undefinednbehavior due to shifting an uint8_t for more than 8 bits.n",87.0,57.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,477.0,14.0,0.15333333333333332,6883.0,7.521739130434782,3055.0,Feature Addition,False,,
4628ac00650591777d34427fa7ee6d5f1f6c484e,aaf6db459b34dc2182fe1d84596733a9b9e97ec4,antirez,antirez@gmail.com,Sun Mar 30 00:54:08 2014 +0100,1396137248,"Use endian neutral hash function for HyperLogLog.We need to be sure that you can save a dataset in a Redis instance,nreload it in a different architecture, and continue to count in the samenHyperLogLog structure.nnSo 32 and 64 bit, little or bit endian, must all guarantee to output thensame hash for the same element.n",28.0,14.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,507.0,15.0,0.3718055555555556,6884.0,3.6895778856929398,3056.0,None,False,True,"[""e1222d8b10552cda6f6fdf1178a2ca25ad77894b""]"
aaf6db459b34dc2182fe1d84596733a9b9e97ec4,543ede03f2e54b45b22164e17c7f51de9cfc69fa,antirez,antirez@gmail.com,Sun Mar 30 18:32:17 2014 +0200,1396197137,"String value unsharing refactored into proper function.All the Redis functions that need to modify the string value of a key inna destructive way (APPEND, SETBIT, SETRANGE, ...) require to make thenobject unshared (if refcount > 1) and encoded in raw format (if encodingnis not already REDIS_ENCODING_RAW).nnThis was cut & pasted many times in multiple places of the code. Thisncommit puts the small logic needed into a function calledndbUnshareStringValue().n",44.0,31.0,"src/bitops.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",6.0,1.0,1.0,1.9290867500049758,12.0,803.0,690.0,118.7817901234568,6887.5,1.0204274587529414,3062.0,None,False,,
543ede03f2e54b45b22164e17c7f51de9cfc69fa,307a189900c06bb4f76638277275f70f2e480558,antirez,antirez@gmail.com,Sun Mar 30 19:26:13 2014 +0200,1396200373,"HyperLogLog approximated cardinality caching.The more we add elements to an HyperLogLog counter, the smaller isnthe probability that we actually update some register.nnFrom this observation it is easy to see how it is possible to usencaching of a previously computed cardinality and reuse it to servenHLLCOUNT queries as long as no register was updated in the datanstructure.nnThis commit does exactly this by using just additional 8 bytes for thendata structure to store a 64 bit unsigned integer value cachedncardinality. When the most significant bit of the 64 bit integer is set,nit means that the value computed is no longer usable since at least ansingle register was modified and we need to recompute it at the nextncall of HLLCOUNT.nnThe value is always stored in little endian format regardless of thenactual CPU endianess.n",51.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,514.0,17.0,0.03745370370370369,6891.0,27.69962917181705,3063.0,Feature Addition,False,,
307a189900c06bb4f76638277275f70f2e480558,7f9d289e100725a8eab67ec1a0d069e8d1a6221e,antirez,antirez@gmail.com,Mon Mar 31 10:01:42 2014 +0200,1396252902,hll-gnuplot-graph.rb added to plot HyperLogLog error graphs.,68.0,0.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6892.0,0.0,32.0,Feature Addition,False,,
7f9d289e100725a8eab67ec1a0d069e8d1a6221e,60e60f4ee0b2d78b9b0d65f99e715958e2a3ce82,antirez,antirez@gmail.com,Mon Mar 31 09:27:33 2014 +0200,1396250853,"HyperLogLog: use LINEARCOUNTING up to 3m.The HyperLogLog original paper suggests using LINEARCOUNTING forncardinalities < 2.5m, however for P=14 the median / max errorncurves show that a value of '3' is the best pick for m = 16384.n",11.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,562.0,18.0,0.5842592592592593,6893.0,2.7115689381933445,3064.0,None,False,,
60e60f4ee0b2d78b9b0d65f99e715958e2a3ce82,a8fb1a328db57e98893c91ffddc138b61d153129,antirez,antirez@gmail.com,Mon Mar 31 10:21:14 2014 +0200,1396254074,Ignore txt files inside utils/hyperloglog.Those are generated to trace graphs using gnuplot.n,1.0,0.0,"utils/hyperloglog/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,6894.0,0.0,33.0,None,False,,
a8fb1a328db57e98893c91ffddc138b61d153129,69a93194fd4a8c448cf9e9990ab9991fa9573a55,antirez,antirez@gmail.com,Mon Mar 31 11:57:47 2014 +0200,1396259867,hll-gnuplot-graph.rb: Use |error| when filter is :max,1.0,0.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,68.0,1.0,0.08061342592592592,6895.0,13.404881550610193,34.0,None,False,,
69a93194fd4a8c448cf9e9990ab9991fa9573a55,8aeb0c196a2720c50554fa481c475317492a1577,antirez,antirez@gmail.com,Mon Mar 31 12:21:08 2014 +0200,1396261268,"HLLADD: propagate write when only variable name is given.The following form is given:nnHLLADD myhllnnNo element is provided in the above case so if 'myhll' var does notnexist the result is to just create an empty HLL structure, and no updatenwill be performed on the registers.nnIn this case, the DB should still be set dirty and the commandnpropagated.n",1.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,570.0,19.0,0.12054398148148147,6896.0,9.295727316370618,3065.0,Feature Addition,False,,
8aeb0c196a2720c50554fa481c475317492a1577,4ab45183fc8ad6f6448e869efacf537d5e0df1a1,antirez,antirez@gmail.com,Mon Mar 31 12:29:24 2014 +0200,1396261764,"HLLCOUNT is technically a write commandWhen we update the cached value, we need to propagate the command andnsignal the key as modified for WATCH.n",6.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,571.0,20.0,0.005740740740740741,6897.0,175.19354838709674,3066.0,None,False,,
4ab45183fc8ad6f6448e869efacf537d5e0df1a1,f2277475b2e6b165527866a8923a64d6862059e3,antirez,antirez@gmail.com,Mon Mar 31 14:39:44 2014 +0200,1396269584,HLLMERGE implemented.Merge N HLL data structures by selecting the max value for everynM[i] register among the set of HLLs.n,67.0,1.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.37047920151264135,12.0,1803.333333333333,910.0,1.2546797839506174,6899.0,4.885361170379126,3069.0,Non Functional,False,True,"[""f1b76081281ca088a95401cf074ab8ccce6005fa"", ""bf066c875f625d5740f2a85d56d36140023c9dc8"", ""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
f2277475b2e6b165527866a8923a64d6862059e3,ec1ee66256a7fa05d6cd4ea0002c309b4fe238a9,antirez,antirez@gmail.com,Mon Mar 31 15:41:38 2014 +0200,1396273298,HyperLogLog apply bias correction using a polynomial.Better results can be achieved by compensating for the bias of the rawnapproximation just after 2.5m (when LINEARCOUNTING is no longer used) bynusing a polynomial that approximates the bias at a given cardinality.nnThe curve used was found using this web page:nnhttp://www.xuru.org/rt/PR.aspnnThat performs polynomial regression given a set of values.n,18.0,11.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,641.0,22.0,0.04298611111111112,6901.0,24.263327948303715,3070.0,Perfective,False,,
ec1ee66256a7fa05d6cd4ea0002c309b4fe238a9,0c9f06a237cba9cb64ab9f330e1f6209d466c0ed,antirez,antirez@gmail.com,Mon Mar 31 15:45:06 2014 +0200,1396273506,hll-gnuplot-graph.rb: added new filter all.,14.0,5.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,69.0,2.0,0.1578587962962963,6902.0,7.334775276779822,35.0,None,False,,
0c9f06a237cba9cb64ab9f330e1f6209d466c0ed,f1b76081281ca088a95401cf074ab8ccce6005fa,antirez,antirez@gmail.com,Mon Mar 31 16:02:36 2014 +0200,1396274556,HLLMERGE fixed by adding a... missing loop!,7.0,5.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,648.0,23.0,0.014560185185185185,6903.0,69.68044515103338,3071.0,Corrective,True,True,"[""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed"", ""c1cc5ca7671a5d2b35e1d7e1b7c0e67ab8c0bc91""]"
f1b76081281ca088a95401cf074ab8ccce6005fa,e887c62e451e94dfb096a31f95888615cd2d7291,antirez,antirez@gmail.com,Mon Mar 31 19:16:47 2014 +0200,1396286207,HyperLogLog: make API use the P prefix in honor of Philippe Flajolet.,19.0,19.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,utils/hyperloglog/hll-err.rb,CAS_DELIMITER,utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",5.0,2.0,2.0,2.1610072790013106,12.0,1118.0,920.0,0.6987939814814814,6906.0,3.5961747037208887,37.0,None,False,True,"[""5afcca34ce5a87c933b48ada9076025c7b76b8bf""]"
e887c62e451e94dfb096a31f95888615cd2d7291,ba4e20835a769eb1934bed41b00155e3c9f448c8,antirez,antirez@gmail.com,Mon Mar 31 19:51:34 2014 +0200,1396288294,Makefile.dep updated with hyperloglog.o deps.,7.0,3.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,122.0,7.0,108.23714120370373,6909.0,1.0092389727673792,3075.0,None,False,,
ba4e20835a769eb1934bed41b00155e3c9f448c8,5afcca34ce5a87c933b48ada9076025c7b76b8bf,antirez,antirez@gmail.com,Mon Mar 31 22:48:01 2014 +0200,1396298881,HyperLogLog API prefix modified from P to PF.Using both the initials of Philippe Flajolet instead of just P.n,19.0,19.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,utils/hyperloglog/hll-err.rb,CAS_DELIMITER,utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",5.0,2.0,2.0,2.1610072790013106,12.0,1118.0,925.0,0.14668981481481486,6912.0,4.113145021303455,39.0,Corrective,True,True,"[""aaaed66c566910277fddd35a345dea6664c8e646"", ""87cc94864cdd27bdec0635d5dab9bd18d445c10f""]"
5afcca34ce5a87c933b48ada9076025c7b76b8bf,4ab162a5599b900173a3b4ced218c46971ba6507,antirez,antirez@gmail.com,Tue Apr 1 15:52:15 2014 +0200,1396360335,Include redis.h before other stuff in hyperloglog.c.Otherwise fmacros.h is included later and this may break compilation onndifferent systems.n,2.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,650.0,26.0,0.7112731481481481,6915.0,2.405929638428743,3079.0,None,False,,
4ab162a5599b900173a3b4ced218c46971ba6507,f0868e080dacbf865668f6e435f7d6d8e1341357,Raymond Myers,ray.myers@vungle.com,Tue Apr 1 14:54:31 2014 -0700,1396389271,Change HLL* to PF* in error messages,3.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,651.0,27.0,0.33490740740740743,0.0,0.0,0.0,None,False,,
f0868e080dacbf865668f6e435f7d6d8e1341357,bf066c875f625d5740f2a85d56d36140023c9dc8,Raymond Myers,ray.myers@vungle.com,Tue Apr 1 14:59:13 2014 -0700,1396389553,Fixed pfadd/pfcount commands emitting hll* events instead of pf* events,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,651.0,28.0,0.003263888888888889,1.0,307.3829787234042,1.0,Corrective,True,,
4ab162a5599b900173a3b4ced218c46971ba6507 bf066c875f625d5740f2a85d56d36140023c9dc8,cef505d7390c5f5c7268fc0589cad90beb39f16f,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 2 08:12:27 2014 +0200,1396419147,Merge pull request #1646 from raydog/unstableChange HLL* to PF* in a few spots,,,,,,,,,,,,,,,Merge,False,,
cef505d7390c5f5c7268fc0589cad90beb39f16f,096b5e921ec64f1258c86d9ba92d823525896516,antirez,antirez@gmail.com,Wed Apr 2 09:58:47 2014 +0200,1396425527,"HyperLogLog: added magic / version.This will allow future changes like compressed representations.nCurrently the magic is not checked for performance reasons but this maynchange in the future, for example if we add new types encoded in stringsnthat may have the same size of HyperLogLogs.n",45.0,25.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,651.0,29.0,0.4163657407407407,6916.0,3.4017345860899537,3080.0,None,False,,
096b5e921ec64f1258c86d9ba92d823525896516,cf34507b870124f99a68f13128274af3d708b50b,antirez,antirez@gmail.com,Wed Apr 2 12:30:11 2014 +0200,1396434611,hll-gnuplot-graph.rb improved with new filter.The function to generate graphs is also more flexible as now includesnstep and max value. The step of the samples generation function is nonlonger limited to min step of 1000.n,22.0,13.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,78.0,5.0,1.5709490740740741,6917.0,1.6365578722463714,40.0,Feature Addition,False,True,"[""47dea01c853e075ee591ded515eecffefd535425""]"
cf34507b870124f99a68f13128274af3d708b50b,be9860d0e93bb301577df9bc01c73e1b38031a38,antirez,antirez@gmail.com,Thu Apr 3 10:17:39 2014 +0200,1396513059,PFSELFTEST improved to test the approximation error.,35.0,6.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,671.0,30.0,1.0131018518518518,6918.0,1.9870675867111456,3081.0,Preventative,False,,
be9860d0e93bb301577df9bc01c73e1b38031a38,9682295f68e5bd7ca72441ced23ba35539bdaeec,antirez,antirez@gmail.com,Thu Apr 3 10:37:32 2014 +0200,1396514252,PFCOUNT: unshare the object when cached cardinality is modified.,3.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,700.0,31.0,0.01380787037037037,6919.0,73.42246437552389,3082.0,None,False,,
9682295f68e5bd7ca72441ced23ba35539bdaeec,aaaed66c566910277fddd35a345dea6664c8e646,antirez,antirez@gmail.com,Thu Apr 3 10:45:30 2014 +0200,1396514730,PFGETREG added for testing purposes.The new command allows to get a dump of the registers storedninto an HyperLogLog data structure for testing / debugging purposes.n,42.0,2.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.5132495436905254,12.0,1846.0,927.0,1.667345679012346,6921.0,61.45081732893915,3085.0,Corrective,True,True,"[""261da523e860146066e052771e2217a84bc8d168""]"
aaaed66c566910277fddd35a345dea6664c8e646,ce637b2fef04d4f073e5e045410f3527b65001ca,antirez,antirez@gmail.com,Thu Apr 3 13:20:34 2014 +0200,1396524034,Remove HyperLogLog type checking duplicated code.,21.0,45.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,741.0,33.0,0.1076851851851852,6923.0,10.286328460877042,3086.0,None,False,True,"[""d2ca4bb62d807291f9e21ec57c44373a03a99a5e"", ""261da523e860146066e052771e2217a84bc8d168""]"
ce637b2fef04d4f073e5e045410f3527b65001ca,b612affba305fd34662fc4afae5663c764915c12,antirez,antirez@gmail.com,Thu Apr 3 16:38:11 2014 +0200,1396535891,Make hll-gnuplot-graph.rb callable from cli.,5.0,4.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,87.0,6.0,1.1722222222222225,6924.0,1.853080568720379,41.0,None,False,,
b612affba305fd34662fc4afae5663c764915c12,349c97818995de9ff6fed337844ff4bbb1b36153,antirez,antirez@gmail.com,Thu Apr 3 19:31:26 2014 +0200,1396546286,"Fix PFADD infinite loop.We need to guarantee that the last bit is 1, otherwise an element maynhash to just zeroes with probability 1/(2^64) and trigger an infinitenloop.nnSee issue #1657.n",3.0,6.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,717.0,34.0,0.2575462962962963,6925.0,4.882797051950387,3087.0,Corrective,True,,
349c97818995de9ff6fed337844ff4bbb1b36153,d2ca4bb62d807291f9e21ec57c44373a03a99a5e,antirez,antirez@gmail.com,Thu Apr 3 22:10:20 2014 +0200,1396555820,Return WRONGTYPE error on PF* type mismatch.,3.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,714.0,35.0,0.11034722222222222,6926.0,10.06230333543109,3088.0,Corrective,True,,
d2ca4bb62d807291f9e21ec57c44373a03a99a5e,352208ff68f213a59729809ae3eaa2f0b0d0a2ad,antirez,antirez@gmail.com,Thu Apr 3 22:15:53 2014 +0200,1396556153,Initial HyperLogLog tests.,69.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/hyperloglog.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.10928571467638523,12.0,254.5,86.0,22.68263310185185,6927.5,1.022043296197353,455.0,Feature Addition,False,True,"[""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
352208ff68f213a59729809ae3eaa2f0b0d0a2ad,433ce7f85c3fb81b2ac9becb3cb5a94c798a148d,antirez,antirez@gmail.com,Fri Apr 4 09:33:35 2014 +0200,1396596815,"Changed HyperLogLog hash seed to a non-zero value.Using a seed of zero has the side effect of having the empty stringnhashing to what is a very special case in the context of HyperLogLog: anvery long run of zeroes.nnThis did not influenced the correctness of the result with 16k registersnbecause of the harmonic mean, but still it is inconvenient that a sonobvious value maps to a so special hash.nnThe seed 0xadc83b19 is used instead, which is the first 64 bits of thenSHA1 of the empty string.nnReference: issue #1657.n",1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,716.0,36.0,0.4744791666666667,6929.0,3.1075740944017567,3089.0,None,False,,
433ce7f85c3fb81b2ac9becb3cb5a94c798a148d,1c12bcbcfb1b4bd7b13edaa534eaebd7d89ff9c3,antirez,antirez@gmail.com,Fri Apr 4 10:28:34 2014 +0200,1396600114,tryObjectEncoding() refactoring.We also avoid to re-create an object that is already in EMBSTR encoding.n,54.0,42.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,680.0,57.0,4.6640856481481485,6930.0,1.2144042960268204,3090.0,Feature Addition,False,,
1c12bcbcfb1b4bd7b13edaa534eaebd7d89ff9c3,d5be696db8e3256d5546252dc3534164a1970edf,antirez,antirez@gmail.com,Fri Apr 4 15:29:32 2014 +0200,1396618172,"PFCOUNT: always unshare/decode the object.This will be a non-op most of the times since the object will benunshared / decoded, however it is more technically correct to start thisnway since the object may be decoded even in the read-only code path.n",1.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,716.0,37.0,0.2471875,6931.0,5.0455120101137805,3091.0,None,False,,
d5be696db8e3256d5546252dc3534164a1970edf,3a6a1e42f11bfee780eda6661865e59d2e747b59,antirez,antirez@gmail.com,Sat Feb 4 08:11:31 2012 +0100,1328339491,ZRANGEBYLEX and ZREVRANGEBYLEX implementation.,456.0,2.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.3012643074987609,12.0,2351.6666666666665,986.0,-749.4935146604938,6933.0,0.9992180905928356,3094.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
3a6a1e42f11bfee780eda6661865e59d2e747b59,4930d903fc341faf4c5dce7197f4f81af941dfa5,yoav,yoav@monfort.co.il,Sun Apr 6 17:20:01 2014 +0300,1396794001,Fix eval usage in tests to conform with eval semantics,29.0,29.0,"tests/unit/scripting.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.4798320236161285,12.0,363.0,49.0,301.157349537037,5.5,1.0104231875869312,1.0,Corrective,True,True,"[""6bd0d342dd566ced07dcad07c35f449b59f6c0cc""]"
3a6a1e42f11bfee780eda6661865e59d2e747b59,67bb2c46b2b3882ba1ceadcbf94fab7d44b39ef6,antirez,antirez@gmail.com,Mon Apr 7 08:57:05 2014 +0200,1396853825,"Add casting to match printf format.adjustOpenFilesLimit() and clusterUpdateSlotsWithConfig() that werenassuming uint64_t is the same as unsigned long long, which is truenprobably for all the systems out there that we target, but still GCCnemitted a warning since technically they are two different types.n",12.0,7.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.8314743880097293,12.0,3801.0,842.0,401.84765625,6935.5,1.0473278080788928,3096.0,Feature Addition,False,True,"[""e3436dd9b886da95b62c347b68be5366877f7b91""]"
67bb2c46b2b3882ba1ceadcbf94fab7d44b39ef6,da2fbcf93d63cba792fbc3b78e0152bab3688f56,antirez,antirez@gmail.com,Wed Apr 9 18:56:00 2014 +0200,1397062560,HyperLogLog sparse representation description and macros.,104.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,714.0,38.0,5.14337962962963,6937.0,1.194424691935876,3097.0,None,False,,
da2fbcf93d63cba792fbc3b78e0152bab3688f56,9c037ba85f5af0f9e41c82a6e95f0013ab1d46c9,antirez,antirez@gmail.com,Thu Apr 10 16:36:31 2014 +0200,1397140591,"HyperLogLog sparse representation slightly modified.After running a few simulations with different alternative encodings,nit was found that the VAL opcode performs better using 5 bits for thenvalue and 2 bits for the run length, at least for cardinalities in thenrange of interest.n",43.0,39.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,815.0,39.0,0.903136574074074,6938.0,2.1072522459022696,3098.0,Perfective,False,,
67bb2c46b2b3882ba1ceadcbf94fab7d44b39ef6,83d28303725ea48e6ba1ab08b57d1eacf9137961,Matt Stancliff,matt@genges.com,Thu Apr 10 17:08:02 2014 -0400,1397164082,"Check key expiration before deletingDeleting an expired key should return 0, not success.nnFixes #1648n",1.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1181.0,137.0,11.191493055555556,32.0,1.089353582675333,32.0,Corrective,True,,
83d28303725ea48e6ba1ab08b57d1eacf9137961,88530804e8c7ad977277ea693026b2b0a5f4816d,Matt Stancliff,matt@genges.com,Thu Apr 10 18:32:19 2014 -0400,1397169139,Add test for deleting an expired keyVerify proper expire-before-delete behavior.nnThis test passes with the expire-before-delete commit and failsnwithout it.n,8.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,764.0,29.0,162.49881944444445,33.0,1.0061538908616003,0.0,Corrective,True,,
9c037ba85f5af0f9e41c82a6e95f0013ab1d46c9,d55474e558c9743720e5cfeb500ada59c3a51bbd,antirez,antirez@gmail.com,Fri Apr 11 09:26:45 2014 +0200,1397201205,"HyperLogLog refactoring to support different encodings.Metadata are now placed at the start of the representation as an header.nThere is a proper structure to access the representation.nStill work to do in order to truly abstract the implementation from thenrepresentation, commands still work assuming dense representation.n",135.0,99.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,819.0,40.0,0.7015509259259259,6939.0,2.425413270861517,3099.0,None,False,True,"[""261da523e860146066e052771e2217a84bc8d168"", ""1ee18db922aaf03cc1e0f04a5b0d9764f9d0ceb5"", ""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
d55474e558c9743720e5cfeb500ada59c3a51bbd,1efc1e052da15e78f3c1b17c3adf8ba4690a36e5,antirez,antirez@gmail.com,Fri Apr 11 09:47:52 2014 +0200,1397202472,hllAdd() refactored into two functions.Also dense representation access macro renamed accordingly.n,35.0,24.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,855.0,41.0,0.014664351851851854,6940.0,69.19258089976321,3100.0,Feature Addition,False,True,"[""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
1efc1e052da15e78f3c1b17c3adf8ba4690a36e5,8ea5b46d30cf7e314eaf7b78ef7f754cb868335a,antirez,antirez@gmail.com,Fri Apr 11 10:25:07 2014 +0200,1397204707,hllCount() refactored to support multiple representations.,62.0,34.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,866.0,42.0,0.02586805555555556,6941.0,39.65771812080537,3101.0,None,False,,
8ea5b46d30cf7e314eaf7b78ef7f754cb868335a,c756936b1df92459fd577ad1fd733c7d08bb09c0,antirez,antirez@gmail.com,Fri Apr 11 17:27:40 2014 +0200,1397230060,"HyperLogLog sparse representation initial implementation.Code never tested, but the basic layout is shaped in this commit.nAlso missing:nn1) Sparse -> Dense conversion function.n2) New HLL object creation using the sparse representation.n3) Implementation of PFMERGE for the sparse representation.n",269.0,9.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,894.0,43.0,0.2934375,6942.0,4.407880724174653,3102.0,Feature Addition,False,True,"[""d9314079cac4fc869e8c277c4ea7e57b53a2ded2"", ""3c3c16561a5e0896109a26a1cb50555dae996868"", ""80140fa0069f48ee4753c90a9c6cec41ba26f44e"", ""142d133c8a9d83540b4543796ec108d913024304"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
c756936b1df92459fd577ad1fd733c7d08bb09c0,1fc04a62217ab38efa2ce86654016f882c6763c1,antirez,antirez@gmail.com,Sat Apr 12 10:55:28 2014 +0200,1397292928,HyperLogLog sparse to dense conversion function.,44.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1154.0,44.0,0.7276388888888888,6943.0,2.3743080740599347,3103.0,None,False,,
1fc04a62217ab38efa2ce86654016f882c6763c1,a79386b1af299fc708acb4fabee3fbe9d529eb0a,antirez,antirez@gmail.com,Sat Apr 12 10:56:11 2014 +0200,1397292971,Create HyperLogLog objects with sparse encoding.,28.0,10.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1195.0,45.0,0.0004976851851851852,6944.0,2010.3023255813955,3104.0,Feature Addition,False,True,"[""1ccb661569635e07d146c133cdfdb9b648da2b99"", ""f5c03044a6ff53daeafce786908c548645312964""]"
a79386b1af299fc708acb4fabee3fbe9d529eb0a,1ccb661569635e07d146c133cdfdb9b648da2b99,antirez,antirez@gmail.com,Sat Apr 12 10:59:12 2014 +0200,1397293152,Fix HLL sparse object creation.The function didn't considered the fact that each XZERO opcode isntwo bytes.n,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1213.0,46.0,0.0020949074074074073,6945.0,478.3480662983426,3105.0,Corrective,True,,
1ccb661569635e07d146c133cdfdb9b648da2b99,b5659cb0a6c25d26d5dad0675a99e20bade986ed,antirez,antirez@gmail.com,Sat Apr 12 11:02:14 2014 +0200,1397293334,Increment pointer while iterating sparse HLL object.,6.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1213.0,47.0,0.0021064814814814813,6946.0,475.72527472527474,3106.0,None,False,,
b5659cb0a6c25d26d5dad0675a99e20bade986ed,f5c03044a6ff53daeafce786908c548645312964,antirez,antirez@gmail.com,Sat Apr 12 16:37:11 2014 +0200,1397313431,Fix HLL sparse object creation #2.Two vars initialized to wrong values in createHLLObject().n,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1219.0,48.0,0.2326041666666667,6947.0,5.299149126735333,3107.0,Corrective,True,,
f5c03044a6ff53daeafce786908c548645312964,d9314079cac4fc869e8c277c4ea7e57b53a2ded2,antirez,antirez@gmail.com,Sat Apr 12 16:46:08 2014 +0200,1397313968,Macro HLL_SPARSE_XZERO_LEN fixed.,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1219.0,49.0,0.006215277777777778,6948.0,161.8938547486034,3108.0,Corrective,True,,
d9314079cac4fc869e8c277c4ea7e57b53a2ded2,0b7d08efb985781bddadc8e528fef9bd4cadb863,antirez,antirez@gmail.com,Sat Apr 12 16:47:50 2014 +0200,1397314070,hllSparseSum(): multiply 1 * runlen for zero entries.,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1219.0,50.0,0.0011805555555555556,6949.0,848.0588235294118,3109.0,None,False,,
0b7d08efb985781bddadc8e528fef9bd4cadb863,a9e057e095a6ccc38f79fe427c8a7624bbb57a4f,antirez,antirez@gmail.com,Sat Apr 12 23:42:48 2014 +0200,1397338968,Abstract hllSparseAdd() / hllDenseAdd() via hllAdd().,19.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1219.0,51.0,0.2881712962962963,6950.0,4.470158245642222,3110.0,Feature Addition,False,,
a9e057e095a6ccc38f79fe427c8a7624bbb57a4f,3c3c16561a5e0896109a26a1cb50555dae996868,antirez,antirez@gmail.com,Sat Apr 12 23:52:36 2014 +0200,1397339556,Fix seqlen computation in hllSparseAdd().,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1234.0,52.0,0.006805555555555554,6951.0,147.9387755102041,3111.0,Corrective,True,,
3c3c16561a5e0896109a26a1cb50555dae996868,80140fa0069f48ee4753c90a9c6cec41ba26f44e,antirez,antirez@gmail.com,Sat Apr 12 23:55:29 2014 +0200,1397339729,Fix hllSparseAdd() new sequence replacement when next is NULL.sdsIncrLen() must be called anyway even if we are replacing the lastnoppcode of the sparse representation.n,2.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1234.0,53.0,0.002002314814814815,6952.0,500.42196531791916,3112.0,Corrective,True,True,"[""82c31f750d71686f0412085ff35f67b37b407cc6""]"
80140fa0069f48ee4753c90a9c6cec41ba26f44e,2067644a8ce31731bd2b811f6372cd404f42bd48,antirez,antirez@gmail.com,Sun Apr 13 10:19:12 2014 +0200,1397377152,hllSparseAdd() sanity check for span != 0 added.,3.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1232.0,54.0,0.4331365740740741,6953.0,3.308740614060872,3113.0,Feature Addition,False,,
2067644a8ce31731bd2b811f6372cd404f42bd48,e8e717e1452ecef60590f3d7a2c5dab37b620cfd,antirez,antirez@gmail.com,Sun Apr 13 22:59:27 2014 +0200,1397422767,"hllSparseToDense API changed to take ref to object.The new API takes directly the object doing everything needed tonturn it into a dense representation, including setting the newnrepresentation as object->ptr.n",10.0,6.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1235.0,55.0,0.5279513888888889,6954.0,2.8941137783623807,3114.0,Feature Addition,False,,
e8e717e1452ecef60590f3d7a2c5dab37b620cfd,261da523e860146066e052771e2217a84bc8d168,antirez,antirez@gmail.com,Sun Apr 13 23:01:21 2014 +0200,1397422881,"PFDEBUG added, PFGETREG removed.PFDEBUG will be the interface to do debugging tasks with a keyncontaining an HLL object.n",25.0,9.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6402064333604702,12.0,2032.0,956.0,268.7212962962963,6956.0,253.68259242470864,3117.0,Corrective,True,True,"[""9df77fc0c4586a7b49605a85a6e68fd1a5273a20""]"
261da523e860146066e052771e2217a84bc8d168,f9dc3cb04d5fdca59bc2d92fe1bae586eb4a9a5b,antirez,antirez@gmail.com,Mon Apr 14 08:59:13 2014 +0200,1397458753,PFDEBUG DECODE added.Provides a human readable description of the opcodes composing anrun-length encoded HLL (sparse encoding).nThe command is only useful for debugging / development tasks.n,35.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1255.0,57.0,0.4151851851851852,6958.0,3.4085637823371986,3118.0,Corrective,True,,
f9dc3cb04d5fdca59bc2d92fe1bae586eb4a9a5b,b7571b7453e1597ef7ed5041a06a3fd97c99c0d0,antirez,antirez@gmail.com,Mon Apr 14 09:27:01 2014 +0200,1397460421,"hllSparseToDense(): sanity check added.The function checks if all the HLL_REGISTERS were processed during thenconvertion from sparse to dense encoding, returning REDIS_OK ornREDIS_ERR to signal a corruption problem.nnA bug in PFDEBUG GETREG was fixed: when the object is converted to thendense representation we need to reassign the new pointer to the headernstructure pointer.n",20.0,5.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1290.0,58.0,0.019305555555555555,6959.0,52.79856115107914,3119.0,None,False,True,"[""3bc35f9ce917c630c401b2ed0d56b3a51658a5e2""]"
b7571b7453e1597ef7ed5041a06a3fd97c99c0d0,3b200035037652e439ed22e884c2f8c10b097a52,antirez,antirez@gmail.com,Mon Apr 14 09:36:27 2014 +0200,1397460987,hllSparseAdd(): more correct dense conversion conditional.We want to promote if the total string size exceeds the resulting sizenafter the upgrade.n,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1305.0,59.0,0.006550925925925926,6960.0,153.65017667844523,3120.0,Feature Addition,False,,
3b200035037652e439ed22e884c2f8c10b097a52,82c31f750d71686f0412085ff35f67b37b407cc6,antirez,antirez@gmail.com,Mon Apr 14 09:40:07 2014 +0200,1397461207,Fixed memmove() count in hllSparseAdd().,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1305.0,60.0,0.0025462962962962965,6961.0,393.7272727272728,3121.0,Corrective,True,,
82c31f750d71686f0412085ff35f67b37b407cc6,1ee18db922aaf03cc1e0f04a5b0d9764f9d0ceb5,antirez,antirez@gmail.com,Mon Apr 14 10:25:19 2014 +0200,1397463919,"Fixed error message generation in PFDEBUG GETREG.Bulk length for registers was emitted too early, so if there was a bugnthe reply looked like a long array with just one element, blocking thenclient as result.n",2.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1305.0,61.0,0.03138888888888889,6962.0,32.858407079646014,3122.0,Corrective,True,,
1ee18db922aaf03cc1e0f04a5b0d9764f9d0ceb5,142d133c8a9d83540b4543796ec108d913024304,antirez,antirez@gmail.com,Mon Apr 14 11:04:11 2014 +0200,1397466251,hllSparseAdd() opcode seek stop condition fixed.,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1306.0,62.0,0.026990740740740742,6963.0,38.049742710120064,3123.0,Corrective,True,,
142d133c8a9d83540b4543796ec108d913024304,837ca39081855bb1ea00e63f6cee642bffb35e71,antirez,antirez@gmail.com,Mon Apr 14 11:49:53 2014 +0200,1397468993,More robust HLL_SPARSE macros protecting 'p' with parens.Now the macros will work with arguments such as ptr+1.n,8.0,8.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1306.0,63.0,0.03173611111111111,6964.0,32.50984682713348,3124.0,None,False,,
837ca39081855bb1ea00e63f6cee642bffb35e71,5532b5308a65f627a5d9a17e4ae6da77fd95b8c2,antirez,antirez@gmail.com,Mon Apr 14 12:09:37 2014 +0200,1397470177,"Merge adjacent VAL opcodes in hllSparseAdd().As more values are added splitting ZERO or XZERO opcodes, try to mergenadjacent VAL opcodes if they have the same value.n",36.0,5.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1306.0,64.0,0.013703703703703704,6965.0,73.97297297297297,3125.0,Feature Addition,False,,
5532b5308a65f627a5d9a17e4ae6da77fd95b8c2,4e0a99ba51cf22ae695187e9215796f1c645a253,antirez,antirez@gmail.com,Mon Apr 14 12:12:53 2014 +0200,1397470373,Comment typo in hllSparseAdd(). first -> fits.,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1337.0,65.0,0.002268518518518519,6966.0,441.8163265306122,3126.0,Feature Addition,False,,
4e0a99ba51cf22ae695187e9215796f1c645a253,db40da0a47ef924ea26ceb9bb73ffa121c20031c,antirez,antirez@gmail.com,Mon Apr 14 12:58:46 2014 +0200,1397473126,hllSparseAdd(): faster code removing conditional.Bottleneck found profiling. Big run time improvement found when testingnafter the change.n,14.0,5.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1337.0,66.0,0.031863425925925934,6967.0,32.38394478750454,3127.0,Feature Addition,False,,
db40da0a47ef924ea26ceb9bb73ffa121c20031c,681bf7468bd55d524ee71cbb7aa43526dad07d5c,antirez,antirez@gmail.com,Mon Apr 14 15:20:26 2014 +0200,1397481626,Detect corrupted sparse HLLs in hllSparseSum().,18.0,11.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1346.0,67.0,0.09837962962962964,6968.0,11.164705882352939,3128.0,None,False,True,"[""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
681bf7468bd55d524ee71cbb7aa43526dad07d5c,e9cd51c7ebbe998a79b52b28fde0b31970dcb7a0,antirez,antirez@gmail.com,Mon Apr 14 15:42:05 2014 +0200,1397482925,hllSparseAdd(): speed optimization.Mostly by reordering opcodes check conditional by frequency of opcodesnin larger sparse-encoded HLLs.n,15.0,12.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1353.0,68.0,0.015034722222222222,6969.0,67.51270207852194,3129.0,Feature Addition,False,,
e9cd51c7ebbe998a79b52b28fde0b31970dcb7a0,ba0afb45661d1ab4d607782cd8afee0dfa3eb893,antirez,antirez@gmail.com,Mon Apr 14 15:55:21 2014 +0200,1397483721,"Added assertion in hllSparseAdd() when promotion to dense occurs.If we converted to dense, a register must be updated in the densenrepresentation.n",11.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1356.0,69.0,0.009212962962962964,6970.0,109.5427135678392,3130.0,Feature Addition,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
ba0afb45661d1ab4d607782cd8afee0dfa3eb893,3bc35f9ce917c630c401b2ed0d56b3a51658a5e2,antirez,antirez@gmail.com,Mon Apr 14 15:56:30 2014 +0200,1397483790,"Correctly replicate PFDEBUG GETREG.Even if it is a debugging command, make sure that when it forces anchange in encoding, the command is propagated.n",6.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1366.0,70.0,0.0007986111111111113,6971.0,1253.1739130434785,3131.0,Corrective,True,True,"[""81ceef7d22bcc1a30bce029ffae1a53f4752b7ed""]"
3bc35f9ce917c630c401b2ed0d56b3a51658a5e2,9df77fc0c4586a7b49605a85a6e68fd1a5273a20,antirez,antirez@gmail.com,Mon Apr 14 15:57:50 2014 +0200,1397483870,Mark PFDEBUG as write command in the commands table.It is safer since it is able to have side effects.n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3424.0,481.0,0.7058912037037037,6972.0,2.416648903900703,3132.0,Corrective,True,,
9df77fc0c4586a7b49605a85a6e68fd1a5273a20,81ceef7d22bcc1a30bce029ffae1a53f4752b7ed,antirez,antirez@gmail.com,Mon Apr 14 16:09:32 2014 +0200,1397484572,PFMERGE fixed to work with sparse encoding.,47.0,10.0,"src/hyperloglog.c,CAS_DELIMITER,tests/unit/hyperloglog.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3665780125533459,12.0,718.5,72.0,5.377320601851852,6973.5,56.2894583075665,456.0,Corrective,True,,
81ceef7d22bcc1a30bce029ffae1a53f4752b7ed,848d0461f9025fad994efec2e685c4c68fe625fe,antirez,antirez@gmail.com,Mon Apr 14 16:11:54 2014 +0200,1397484714,Error message for invalid HLL objects unified.,7.0,5.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1406.0,72.0,0.0016435185185185185,6975.0,609.4507042253521,3134.0,None,False,,
848d0461f9025fad994efec2e685c4c68fe625fe,54f0156e8cbf1a58243d3a2b35f61311e1a034a4,antirez,antirez@gmail.com,Mon Apr 14 16:15:55 2014 +0200,1397484955,"Set HLL_SPARSE_MAX to 3000.After running a few benchmarks, 3000 looks like a reasonable value tonkeep HLLs with a few thousand elements small while the CPU cost isnstill not huge.nnThis covers all the cases where the dense representation would use Nnorders of magnitude more space, like in the case of many HLLs withncarinality of a few tens or hundreds.nnIt is not impossible that in the future this gets user configurable,nhowever it is easy to pick an unreasoable value just looking at savingsnin the space dimension without checking what happens in the timendimension.n",1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1408.0,73.0,0.002789351851851852,6976.0,359.50622406639,3135.0,None,False,,
54f0156e8cbf1a58243d3a2b35f61311e1a034a4,dde8dff73fd814910b317df2beb84b88d5659d37,antirez,antirez@gmail.com,Mon Apr 14 19:35:00 2014 +0200,1397496900,PFDEBUG ENCODING added.,7.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1408.0,74.0,0.1382523148148148,6977.0,8.233151946421096,3136.0,Corrective,True,,
dde8dff73fd814910b317df2beb84b88d5659d37,d541f65d66706c63a5eb60c13319238297e53971,antirez,antirez@gmail.com,Tue Apr 15 10:10:38 2014 +0200,1397549438,PFSELFTEST improved with sparse encoding checks.,29.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1415.0,75.0,0.6080787037037036,6978.0,2.644523963607294,3137.0,Preventative,False,,
d541f65d66706c63a5eb60c13319238297e53971,402110f9fdf62ccbd5d3d5e95cf5b6b760442b9e,antirez,antirez@gmail.com,Tue Apr 15 17:46:51 2014 +0200,1397576811,User-defined switch point between sparse-dense HLL encodings.,32.0,6.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,2.0016981262378817,12.0,1779.2,1251.0,10.447842592592592,6981.0,1.0238039146994131,3141.0,None,False,,
402110f9fdf62ccbd5d3d5e95cf5b6b760442b9e,0bbdaca6a0b10de3b8bfdbb57c902975a79c2646,antirez,antirez@gmail.com,Wed Apr 16 09:05:42 2014 +0200,1397631942,PFDEBUG TODENSE added.Converts HyperLogLogs from sparse to dense. Used for testing.n,15.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1439.0,77.0,0.6380902777777778,6984.0,2.567176361756544,3142.0,Corrective,True,,
0bbdaca6a0b10de3b8bfdbb57c902975a79c2646,8e8f8189eb1b15ce4f03f542c36b7a626e08cf8e,antirez,antirez@gmail.com,Wed Apr 16 09:10:30 2014 +0200,1397632230,HyperLogLog invalid representation error code set to INVALIDOBJ.,7.0,7.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1454.0,78.0,0.0033333333333333327,6985.0,301.0,3143.0,None,False,,
8e8f8189eb1b15ce4f03f542c36b7a626e08cf8e,cffeafe39165f5d5d73486d1a3c337a2edadfd5f,antirez,antirez@gmail.com,Wed Apr 16 09:17:38 2014 +0200,1397632658,More HyperLogLog tests.,76.0,0.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,68.0,2.0,1.7139583333333333,6986.0,1.583444755074754,457.0,Preventative,False,,
cffeafe39165f5d5d73486d1a3c337a2edadfd5f,8b5e0b213e9dafa88f206155fd60df23d0bc803a,antirez,antirez@gmail.com,Wed Apr 16 12:17:00 2014 +0200,1397643420,ZLEXCOUNT implemented.Like ZCOUNT for lexicographical ranges.n,75.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.2040561198526641,12.0,2506.0,995.0,267.8902276234568,6988.0,1.6489757688542428,3146.0,None,False,,
8b5e0b213e9dafa88f206155fd60df23d0bc803a,bcab07f7fcc6962c49b9899879bb9be957c9539c,antirez,antirez@gmail.com,Wed Apr 16 23:55:58 2014 +0200,1397685358,"Pass by pointer and release of lex ranges.Given that the code was written with a 2 years pause... somethingnstrange happened in the middle. So there was no function to free anlex range min/max objects, and in some places the range was passed bynvalue.n",42.0,15.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2729.0,91.0,0.4853935185185185,6990.0,3.0601840812628165,3147.0,None,False,,
bcab07f7fcc6962c49b9899879bb9be957c9539c,5c4843234032f11c43d0b337142fb4c46c336c7a,antirez,antirez@gmail.com,Thu Apr 17 00:08:11 2014 +0200,1397686091,Basic ZRANGEBYLEX / ZLEXCOUNT tests.,56.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,769.0,28.0,693.5455208333333,6991.0,1.0014418664239926,458.0,Preventative,False,,
5c4843234032f11c43d0b337142fb4c46c336c7a,c0ccd4da7d9e2d3c4ae21d563da7c2633b50435c,antirez,antirez@gmail.com,Thu Apr 17 10:25:58 2014 +0200,1397723158,Sorted set lex ranges stress tester.,65.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,825.0,29.0,0.4290162037037037,6992.0,3.330914290339116,459.0,Preventative,False,,
c0ccd4da7d9e2d3c4ae21d563da7c2633b50435c,95098b7230606299769df89b070105c755b5f594,antirez,antirez@gmail.com,Thu Apr 17 14:19:14 2014 +0200,1397737154,ZREMRANGE* commands refactored into a single generic function.,58.0,65.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2756.0,92.0,0.5994907407407407,6993.0,2.6680824774113834,3148.0,None,False,,
95098b7230606299769df89b070105c755b5f594,8827dc4eec0130e292387db0e81930bd8515dd0e,antirez,antirez@gmail.com,Thu Apr 17 14:30:12 2014 +0200,1397737812,Always pass sorted set range objects by reference.,51.0,49.0,"src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.5660906530347479,12.0,1789.666666666667,654.0,2.58016975308642,6995.0,1.1363672168081196,3151.0,None,False,,
8827dc4eec0130e292387db0e81930bd8515dd0e,78954ca3a2a3b4fdb731bd43b7cbab2d3a619871,antirez,antirez@gmail.com,Thu Apr 17 14:47:52 2014 +0200,1397738872,ZREMRANGEBYLEX implemented.,77.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.19975534865345893,12.0,2538.333333333333,1002.0,0.3764351851851852,6998.0,1.8952974658757729,3154.0,None,False,,
78954ca3a2a3b4fdb731bd43b7cbab2d3a619871,fcd2155b6f6d0beb88ba3b008e23a9c366af5c9f,antirez,antirez@gmail.com,Thu Apr 17 17:08:43 2014 +0200,1397747323,HyperLogLog low level merge extracted from PFMERGE.,54.0,39.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1454.0,79.0,1.332094907407407,7000.0,1.7506972622140355,3155.0,Non Functional,False,,
fcd2155b6f6d0beb88ba3b008e23a9c366af5c9f,0feb2aabcad2943b9cec850f2495a7d7f91a998b,antirez,antirez@gmail.com,Thu Apr 17 17:29:04 2014 +0200,1397748544,PFCOUNT support for multi-key union.,73.0,6.0,"src/hyperloglog.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.17033057560105985,12.0,2448.0,565.0,0.06303819444444445,7001.5,40.346685009036975,3157.0,None,False,True,"[""8a7ccc58a16954a250fcb8f5ea6d184094d14653"", ""c1cc5ca7671a5d2b35e1d7e1b7c0e67ab8c0bc91""]"
0feb2aabcad2943b9cec850f2495a7d7f91a998b,192a21327469cf3b01fd8bb17581dfda05a772f7,antirez,antirez@gmail.com,Thu Apr 17 17:53:20 2014 +0200,1397750000,"Speedup SUM(2^-reg[m]) in HyperLogLog computation.When the register is set to zero, we need to add 2^-0 to E, which is 1,nbut it is faster to just add 'ez' at the end, which is the number ofnregisters set to zero, a value we need to compute anyway.n",8.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1536.0,81.0,0.01685185185185185,7003.0,60.34065934065934,3158.0,Feature Addition,False,,
192a21327469cf3b01fd8bb17581dfda05a772f7,5eb7ac0c920336b5711f125b6dcc627d89b9f970,antirez,antirez@gmail.com,Thu Apr 17 18:02:45 2014 +0200,1397750565,"Speedup hllRawSum() processing 8 bytes per iteration.The internal HLL raw encoding used by PFCOUNT when merging multiple keysnis aligned to 8 bits (1 byte per register) so we can exploit this tonimprove performances by processing multiple bytes per iteration.nnIn benchmarks the new code was several times faster with HLLs with manynregisters set to zero, while no slowdown was observed with populatednHLLs.n",15.0,7.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1540.0,82.0,0.0065393518518518535,7004.0,153.92035398230092,3159.0,Feature Addition,False,,
5eb7ac0c920336b5711f125b6dcc627d89b9f970,85a2f2354ea604f0b69f109aa8d117e9968353ac,antirez,antirez@gmail.com,Fri Apr 18 12:36:33 2014 +0200,1397817393,PFCOUNT multi-key test added.,15.0,0.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,144.0,3.0,2.138136574074074,7005.0,1.4676969713373211,460.0,Feature Addition,False,,
85a2f2354ea604f0b69f109aa8d117e9968353ac,ab3afe2f4d3732ee908ef1c78752dbf492643de2,antirez,antirez@gmail.com,Fri Apr 18 13:01:04 2014 +0200,1397818864,ZREMRANGEBYLEX memory leak removed calling zslFreeLexRange().,5.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2826.0,95.0,0.9258333333333332,7006.0,2.08010801080108,3160.0,None,False,,
ab3afe2f4d3732ee908ef1c78752dbf492643de2,9caa1ae96aa6ff7dcb5058d2ff0b132abcb205f7,antirez,antirez@gmail.com,Fri Apr 18 13:02:16 2014 +0200,1397818936,Fuzzy test for ZREMRANGEBYLEX added.,41.0,1.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,890.0,30.0,1.1085416666666668,7007.0,1.902086074046232,461.0,Feature Addition,False,,
4930d903fc341faf4c5dce7197f4f81af941dfa5 9caa1ae96aa6ff7dcb5058d2ff0b132abcb205f7,fdaab0234787d1bb835680825ea919d7cba3723e,yoav,yoav@monfort.co.il,Tue Apr 22 10:01:21 2014 +0300,1398150081,Merge remote-tracking branch 'upstream/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
9caa1ae96aa6ff7dcb5058d2ff0b132abcb205f7,9eeb03e5f70e8e6cd505423d861dba8c1495f7d0,antirez,antirez@gmail.com,Tue Apr 22 16:13:58 2014 +0200,1398176038,generate-command-help.rb updated with new hyperloglog group.,2.0,1.0,"utils/generate-command-help.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,114.0,6.0,749.0306828703704,7008.0,1.0013350587938106,42.0,Feature Addition,False,,
9eeb03e5f70e8e6cd505423d861dba8c1495f7d0,20c040d364e2af83a55e70af01663f46f22e1c28,antirez,antirez@gmail.com,Tue Apr 22 16:14:38 2014 +0200,1398176078,redis-cli help.h updated.,73.0,2.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,789.0,9.0,343.2026388888889,7009.0,1.0029137305098743,3161.0,None,False,,
8827dc4eec0130e292387db0e81930bd8515dd0e,a69178fdd2df5a0045a49f89ac24e4f91c2a89cf,kingsumos,kingsumos@gmail.com,Tue Apr 22 11:44:53 2014 -0400,1398181493,fix cluster node description showing wrong slot allocation,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4183.0,364.0,15.366527777777774,0.0,0.0,0.0,Corrective,True,,
20c040d364e2af83a55e70af01663f46f22e1c28,cb4e2ee9e784f23bbef1bb57c6c332dd3d2472bd,antirez,antirez@gmail.com,Wed Apr 23 10:19:43 2014 +0200,1398241183,Missing return REDIS_ERR added to processMultibulkBuffer().When we set a protocol error we should return with REDIS_ERR to let thencaller know it should stop processing the client.nnBug found in a code auditing related to issue #1699.n,3.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1619.0,174.0,55.38954861111111,7010.0,1.0180539474517292,3162.0,Corrective,True,,
cb4e2ee9e784f23bbef1bb57c6c332dd3d2472bd a69178fdd2df5a0045a49f89ac24e4f91c2a89cf,e0918a332dd2fd03c39df4b86007a423160dc6b2,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 23 11:37:47 2014 +0200,1398245867,Merge pull request #1701 from kingsumos/node_descriptionfix cluster node description showing wrong slot allocation,,,,,,,,,,,,,,,Merge,False,,
e0918a332dd2fd03c39df4b86007a423160dc6b2,7dd4432798ddf48a02f1ce1296aa142cf57e3703,Glauber Costa,glommer@cloudius-systems.com,Tue Apr 8 14:47:50 2014 +0400,1396954070,"fix null pointer access with no file pointerI happen to be working on a system that lacks urandom. While the code does trynto handle this case and artificially create some bytes if the file pointer isnempty, it does try to close it unconditionally, leading to a segfault.n",1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,580.0,15.0,257.74182870370373,0.0,0.0,0.0,Corrective,True,,
7dd4432798ddf48a02f1ce1296aa142cf57e3703,12e435d2a49a3a121b91b14c23162c800d5fb798,Kevin Menard,kevin@nirvdrum.com,Tue Apr 22 10:51:19 2014 -0400,1398178279,Fixed typos.,2.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,778.0,132.0,6.9614351851851834,0.0,0.0,0.0,Corrective,True,,
12e435d2a49a3a121b91b14c23162c800d5fb798 88530804e8c7ad977277ea693026b2b0a5f4816d,32c917964efb7c617597a409e02deef9952763f8,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 23 16:13:49 2014 +0200,1398262429,Merge pull request #1677 from mattsta/expire-before-deleteCheck key expiration before deleting,,,,,,,,,,,,,,,Merge,False,,
32c917964efb7c617597a409e02deef9952763f8,e6b681365614a7e49110b0547456288a8f02d5e6,antirez,antirez@gmail.com,Thu Apr 24 10:50:51 2014 +0200,1398329451,Test: spawn_instance now supports additional config.,10.0,4.0,"tests/sentinel.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,396.0,18.0,36.78054398148148,7011.0,1.0271882873864913,462.0,Preventative,False,,
e6b681365614a7e49110b0547456288a8f02d5e6,897adc1c8c6bbe5bc23bb85b97f5114fbb59cd99,antirez,antirez@gmail.com,Thu Apr 24 11:08:22 2014 +0200,1398330502,"Sentinel test files / directories layout improved.The test now runs in a self-contained directory.nThe general abstractions to run the tests in an environment wherenmutliple instances are executed at the same time was extrapolated intoninstances.tcl, that will be reused to test Redis Cluster.n",738.0,726.0,"runtest-sentinel,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER,tests/sentinel-tests/00-base.tcl,CAS_DELIMITER,tests/sentinel-tests/01-conf-update.tcl,CAS_DELIMITER,tests/sentinel-tests/02-slaves-reconf.tcl,CAS_DELIMITER,tests/sentinel-tests/03-runtime-reconf.tcl,CAS_DELIMITER,tests/sentinel-tests/04-slave-selection.tcl,CAS_DELIMITER,tests/sentinel-tests/includes/init-tests.tcl,CAS_DELIMITER,tests/sentinel-tmp/.gitignore,CAS_DELIMITER,tests/sentinel.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER,tests/sentinel/tests/00-base.tcl,CAS_DELIMITER,tests/sentinel/tests/01-conf-update.tcl,CAS_DELIMITER,tests/sentinel/tests/02-slaves-reconf.tcl,CAS_DELIMITER,tests/sentinel/tests/03-runtime-reconf.tcl,CAS_DELIMITER,tests/sentinel/tests/04-slave-selection.tcl,CAS_DELIMITER,tests/sentinel/tests/includes/init-tests.tcl,CAS_DELIMITER,tests/sentinel/tmp/.gitignore,CAS_DELIMITER",18.0,2.0,9.0,2.9771369369952034,12.0,41.05555555555557,53.0,23.308647762345682,7020.5,1.0050500232769626,479.0,Preventative,False,,
897adc1c8c6bbe5bc23bb85b97f5114fbb59cd99,db06108bc17205f29e363b5ba1664e1b9dbd9afc,antirez,antirez@gmail.com,Thu Apr 24 16:04:08 2014 +0200,1398348248,"Lock nodes.conf to avoid multiple processes using the same file.This was a common source of problems among users.nThe solution adopted is not bullet-proof as if the user deletes thennodes.conf file manually, and starts a new instance with the samennodes.conf file path, two instances will use the same file. Howevernfollowing this reasoning the user may drop a nuclear bomb into thendatacenter as well.n",62.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4183.0,365.0,1.9300347222222225,7030.0,1.5181253935414232,3163.0,Corrective,True,,
db06108bc17205f29e363b5ba1664e1b9dbd9afc,e3cf812c9e7db2bedd1063421d4b3bb1d46484be,antirez,antirez@gmail.com,Thu Apr 24 16:23:03 2014 +0200,1398349383,"clusterLoadConfig() REDIS_ERR retval semantics refined.We should return REDIS_ERR to signal we can't read the configurationnbecause there is no config file only after checking errno, othewisenwe risk to rewrite an existing file that was not accessible for somenother reason.n",10.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4245.0,366.0,0.013136574074074077,7031.0,77.12334801762114,3164.0,None,False,,
e3cf812c9e7db2bedd1063421d4b3bb1d46484be,7d9b45b4a17edbfbce776487051539ff9a7f886d,antirez,antirez@gmail.com,Thu Apr 24 17:03:07 2014 +0200,1398351787,"While ANET_ERR is -1, check syscall retval for -1 itself.",2.0,2.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,566.0,40.0,51.962268518518535,7032.0,1.0192447333134351,3165.0,None,False,,
7d9b45b4a17edbfbce776487051539ff9a7f886d,c3f85c010738a9a84bf60d2b4c7654c5c6b76e92,antirez,antirez@gmail.com,Thu Apr 24 18:01:41 2014 +0200,1398355301,Redis Cluster test framework skeleton.,72.0,0.0,"runtest-cluster,CAS_DELIMITER,tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/run.tcl,CAS_DELIMITER,tests/cluster/tests/00-base.tcl,CAS_DELIMITER,tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",5.0,2.0,4.0,2.23704076103864,1.0,0.0,0.0,0.0,7035.0,0.0,483.0,Preventative,False,,
c3f85c010738a9a84bf60d2b4c7654c5c6b76e92,cac4bae11ae9f5ce770220ce1f8a70f5033866f4,antirez,antirez@gmail.com,Thu Apr 24 21:43:16 2014 +0200,1398368596,AE_ERR -> ANET_ERR in acceptUnixHandler().No actual changes since the value is the same.n,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1621.0,175.0,1.4746875,7038.0,1.6781097690188602,3166.0,None,False,,
cac4bae11ae9f5ce770220ce1f8a70f5033866f4,3a3458ee7b48f66355e328ab9ed20830e5a58ef6,antirez,antirez@gmail.com,Thu Apr 24 17:33:57 2014 +0200,1398353637,"Accept multiple clients per iteration.When the listening sockets readable event is fired, we have the chancento accept multiple clients instead of accepting a single one. This makesnRedis more responsive when there is a mass-connect event (for examplenafter the server startup), and in workloads where a connect-disconnectnpattern is used often, so that multiple clients are waiting to benaccepted continuously.nnAs a side effect, this commit makes the LOADING, BUSY, and similarnerrors much faster to deliver to the client, making Redis morenresponsive when there is to return errors to inform the clients that thenserver is blocked in an not interruptible operation.n",33.0,17.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.7950402793845223,12.0,2524.0,662.0,3.4151273148148147,7039.5,-1.8146898627187804,3168.0,None,False,True,"[""c77b95fd01cb6959005121b91e21037cd3da1c88"", ""92038286e8c047966f779e8d7eefa6d2786bfa43""]"
3a3458ee7b48f66355e328ab9ed20830e5a58ef6,e29d3307244b899587e155571176fb209e26c4c6,antirez,antirez@gmail.com,Thu Apr 24 17:36:47 2014 +0200,1398353807,"Process events with processEventsWhileBlocked() when blocked.When we are blocked and a few events a processed from time to time, itnis smarter to call the event handler a few times in order to handle thenaccept, read, write, close cycle of a client in a single pass, otherwisenthere is too much latency added for clients to receive a reply while thenserver is busy in some way (for example during the DB loading).n",27.0,4.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",5.0,1.0,1.0,1.3155894558231729,12.0,1314.8,889.0,32.20979861111111,7043.0,1.0153836818858184,3173.0,Feature Addition,False,True,"[""01c08b508927adfb9ca6857db076c849f945e1be""]"
e29d3307244b899587e155571176fb209e26c4c6,93e7a130fc9594e41ccfc996b5eca7626ae5356a,antirez,antirez@gmail.com,Thu Apr 24 18:21:12 2014 +0200,1398356472,Test: fixed scripting.tcl test false positive.,1.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,433.0,30.0,18.084155092592603,7046.0,1.0552970263128083,484.0,Preventative,False,,
93e7a130fc9594e41ccfc996b5eca7626ae5356a,53575c4708318a2d33270d36943c206a016eecef,antirez,antirez@gmail.com,Mon Apr 28 10:52:08 2014 +0200,1398675128,sdscatfmt() added to SDS library.sdscatprintf() relies on printf() family libc functions and is sometimesntoo slow in critical code paths. sdscatfmt() is an alternative which is:nn1) Far less capable.n2) Format specifier uncompatible.n3) Faster.nnIt is suitable to be used in those speed critical code paths such asnCLIENT LIST output generation.n,165.0,27.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,883.0,39.0,34.98026620370371,7047.0,1.0285875468807644,3174.0,Feature Addition,False,True,"[""2d76736a2ef00419320dae793e3523144e5f8c1c"", ""60a4f12f8b998c44dfff0e88202b01598287390d""]"
53575c4708318a2d33270d36943c206a016eecef,2d76736a2ef00419320dae793e3523144e5f8c1c,antirez,antirez@gmail.com,Mon Apr 28 16:38:17 2014 +0200,1398695897,Added new sdscatfmt() %u and %U format specifiers.This commit also fixes a bug in the implementation of sdscatfmt()nresulting from stale references to the SDS string header afternsdsMakeRoomFor() calls.n,71.0,4.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1021.0,40.0,0.24038194444444444,7048.0,5.160046222735809,3175.0,Corrective,True,,
2d76736a2ef00419320dae793e3523144e5f8c1c,f9a4a80f499a30b7240328b46fdb9bf76d173fe9,antirez,antirez@gmail.com,Mon Apr 28 16:41:38 2014 +0200,1398696098,Use sdscatfmt() in getClientInfoString() to make it faster.,10.0,9.0,"src/networking.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.2974722489192897,12.0,876.0,197.0,131.58615740740743,7049.5,1.1281082975159222,3177.0,None,False,,
f9a4a80f499a30b7240328b46fdb9bf76d173fe9,0bcc7cb4bfe733e7ea12599a926e52aece3bfa50,antirez,antirez@gmail.com,Mon Apr 28 17:36:57 2014 +0200,1398699417,CLIENT LIST speedup via peerid caching + smart allocation.This commit adds peer ID caching in the client structure plus an APInchange and the use of sdsMakeRoomFor() in order to improve thenreallocation pattern to generate the CLIENT LIST output.nnBoth the changes account for a very significant speedup.n,43.0,25.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,1.0,1.0,1.2489079748967118,12.0,1427.4,897.0,25.849717592592587,7053.0,1.0650316259806003,3182.0,Feature Addition,False,True,"[""fa8786f17af6175ca6ab6d76308e21be290e25ea""]"
0bcc7cb4bfe733e7ea12599a926e52aece3bfa50,e1b129811af5010730108537fede2421dbc841fa,antirez,antirez@gmail.com,Tue Apr 29 10:42:17 2014 +0200,1398760937,Cluster test: basic cluster nodes info access functions.,37.0,0.0,"tests/cluster/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,7.0,1.0,4.694861111111111,7056.0,1.2129988462562495,485.0,Preventative,False,,
e1b129811af5010730108537fede2421dbc841fa,2555b2f4bd0499fe16f50d004d3596132e8a33ba,antirez,antirez@gmail.com,Tue Apr 29 10:42:32 2014 +0200,1398760952,Cluster test: check that every node has a different ID.,15.0,1.0,"tests/cluster/tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,16.0,1.0,4.695034722222221,7057.0,1.2129909700703314,486.0,Preventative,False,,
2555b2f4bd0499fe16f50d004d3596132e8a33ba,2c556223330e656404bbce82db61daec604e7015,antirez,antirez@gmail.com,Tue Apr 29 15:00:11 2014 +0200,1398776411,Cluster test: auto-discovery to form full mesh.,22.0,0.0,"tests/cluster/tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,30.0,2.0,0.1789236111111111,7058.0,6.588977294779742,487.0,Preventative,False,,
2c556223330e656404bbce82db61daec604e7015,9e422f74a6ef110eacb29c975c25a3403eba1aec,antirez,antirez@gmail.com,Tue Apr 29 15:39:54 2014 +0200,1398778794,Cluster test: config epoch conflict resolution.,24.0,0.0,"tests/cluster/tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,52.0,3.0,0.02758101851851852,7059.0,37.25681913554343,488.0,Preventative,False,,
9e422f74a6ef110eacb29c975c25a3403eba1aec,e8631a69917f1c0581a28edac8dcdf98cca82e18,antirez,antirez@gmail.com,Tue Apr 29 16:17:15 2014 +0200,1398781035,Cluster / Sentinel test: instances count moved to run.tcl.,4.0,1.0,"tests/cluster/run.tcl,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.521928094887362,12.0,145.33333333333334,3.0,5.118827160493827,7061.0,1.1222209299346593,491.0,Preventative,False,,
e8631a69917f1c0581a28edac8dcdf98cca82e18,4a3db2550441423f84c964a0d519426cf44020dc,antirez,antirez@gmail.com,Tue Apr 29 16:20:02 2014 +0200,1398781202,"Cluster test: use 20 instances.This makes tests a bit slower, but it is better to test things at andecent scale instead of using just a few nodes, and for a few tests wenactually need so many nodes.n",1.0,1.0,"tests/cluster/run.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,24.0,2.0,0.0019328703703703704,7063.0,518.3652694610778,492.0,Preventative,False,,
4a3db2550441423f84c964a0d519426cf44020dc,7b5ce1ffb1d730774f1d8e990fea38e9ab54a148,antirez,antirez@gmail.com,Tue Apr 29 18:40:43 2014 +0200,1398789643,Cluster test: slots allocation.,29.0,0.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/tests/00-base.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9293636260137188,1.0,60.0,6.0,0.22890625,7064.5,3.597062035763772,494.0,Preventative,False,,
7b5ce1ffb1d730774f1d8e990fea38e9ab54a148,11d9ecb71d44987d2cb365e90b00fe15434426d7,antirez,antirez@gmail.com,Tue Apr 29 19:15:16 2014 +0200,1398791716,"CLUSTER SET-CONFIG-EPOCH implemented.Initially Redis Cluster accepted that after cluster creation all thennodes were at configEpoch 0, evolving from zero as failovers happen.nnHowever later the semantic was made more strict in order to make sure ancluster has always all the master nodes with a different configEpoch,nwhich is more robust in some corner case (especially resulting fromnerrors by the system administrator).nnTo assign different configEpochs to different nodes at startup was antask performed naturally by the config conflicts resolution algorithmn(see the Cluster specification). However this works well only for smallnclusters or when there are actually just a few collisions, since it isndesigned for exceptional cases.nnWhen a large cluster is created hundred of nodes can be at epoch 0, sonthe conflict resolution code is slow to provide an unique config to eachnnode. For this reason this new command was introduced. It can be callednonly when a node is totally fresh: no other nodes known, and configEpochnset to zero, so it is safe even against misuses.nnredis-trib will use the new command in order to start the clusternalready setting an incremental unique config to every node.n",31.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4254.0,367.0,5.119594907407407,7066.0,1.19532795427879,3183.0,Corrective,True,,
11d9ecb71d44987d2cb365e90b00fe15434426d7,1db45ba58cf612f9b7857771ffc8c41e8a355f50,antirez,antirez@gmail.com,Wed Apr 30 09:29:03 2014 +0200,1398842943,Cluster test: check for state=ok after slot allocation.,10.0,0.0,"tests/cluster/tests/00-base.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,86.0,5.0,0.6168981481481481,7067.0,2.6210131332082547,495.0,Preventative,False,,
1db45ba58cf612f9b7857771ffc8c41e8a355f50,e8357d0f858f2cd90fb1671fcfa02620d246e7c1,antirez,antirez@gmail.com,Wed Apr 30 15:47:17 2014 +0200,1398865637,Cluster test: Tcl cluster library initial skeleton.,95.0,2.0,"tests/support/cluster.tcl,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.24793583772272645,11.0,125.5,9.0,167.43500578703703,7068.5,0.5014931166802596,497.0,Preventative,False,,
e8357d0f858f2cd90fb1671fcfa02620d246e7c1,bc8ea04a7db7b080f734b111102c97ba6cadf489,antirez,antirez@gmail.com,Wed Apr 30 18:55:28 2014 +0200,1398876928,Cluster: Tcl cluster client key -> hashslot.,61.0,1.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,93.0,1.0,0.13068287037037038,7070.0,8.652112301833318,498.0,None,False,,
bc8ea04a7db7b080f734b111102c97ba6cadf489,8b7e23bddeba6cb0727de3f1a83f2f672ebf1d05,antirez,antirez@gmail.com,Fri May 2 09:55:27 2014 +0200,1399017327,Cluster: Tcl cluster client: get nodes description.,60.0,6.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,153.0,2.0,1.624988425925926,7071.0,1.6153889984971403,499.0,None,False,,
8b7e23bddeba6cb0727de3f1a83f2f672ebf1d05,5344357f802c4882a2af781fab4ba72d6c26e34d,antirez,antirez@gmail.com,Fri May 2 10:19:28 2014 +0200,1399018768,Cluster: Tcl cluster client: build nodes representation.,39.0,5.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,207.0,3.0,0.01667824074074074,7072.0,60.958362248438604,500.0,None,False,True,"[""5b7b2353676c4a5e4afc39e8452e3e6bbbace68c""]"
5344357f802c4882a2af781fab4ba72d6c26e34d,fcd2065f8eb6ca0518027188eea5c03eaa3d5e70,antirez,antirez@gmail.com,Fri May 2 10:55:07 2014 +0200,1399020907,Cluster: Tcl cluster client: slots-nodes map and close method.Now the client is able to actually run commands in a Redis Clusternassuming the slots->nodes map is stable.n,25.0,2.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,241.0,4.0,0.024756944444444446,7073.0,41.392706872370255,501.0,None,False,,
fcd2065f8eb6ca0518027188eea5c03eaa3d5e70,3bc119c1558b1633f96050e2439057b7754136fc,antirez,antirez@gmail.com,Fri May 2 15:35:08 2014 +0200,1399037708,Cluster: Tcl cluster client: handle MOVED/ASK.,24.0,5.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,264.0,5.0,0.1944560185185185,7074.0,6.142551038628652,502.0,None,False,,
3bc119c1558b1633f96050e2439057b7754136fc,1c130c6b037f9f2ec27ddf6da095d25deb3d6fa2,antirez,antirez@gmail.com,Fri May 2 16:37:12 2014 +0200,1399041432,"Test: cluster/base, check that we can write/read from cluster.",13.0,0.0,"tests/cluster/run.tcl,CAS_DELIMITER,tests/cluster/tests/00-base.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.3912435636292557,12.0,60.0,9.0,2.654623842592593,7075.5,1.2601822950324304,504.0,Preventative,False,,
1c130c6b037f9f2ec27ddf6da095d25deb3d6fa2,40abeb1f40fecbb772630a7e9d8d4bb82f7d11a1,antirez,antirez@gmail.com,Mon May 5 17:07:09 2014 +0200,1399302429,"Scripting: simpler reply buffer creation in luaRedisGenericCommand().It if faster to just create the string with a single sdsnewlen() call.nIf c->bufpos is zero, the call will simply be like sdsemtpy().n",2.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1072.0,81.0,10.979421296296296,7077.0,1.0910794816059506,3184.0,None,False,,
40abeb1f40fecbb772630a7e9d8d4bb82f7d11a1,8226be61ecb4e35a4e4f6845aa13eebd9c182b65,antirez,antirez@gmail.com,Mon May 5 22:13:11 2014 +0200,1399320791,Define HAVE_ATOMIC for clang.,1.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,195.0,25.0,432.6805555555555,7078.0,1.0023111738837351,3185.0,None,False,,
8226be61ecb4e35a4e4f6845aa13eebd9c182b65,0ef4f44c5a6b8d8900444c852baff223c647d5cb,antirez,antirez@gmail.com,Mon May 5 22:14:23 2014 +0200,1399320863,"Scripting: luaRedisGenericCommand() fast path for buffer-only replies.When the reply is only contained in the client static output buffer, usena fast path avoiding the dynamic allocation of an SDS string tonconcatenate the client reply objects.n",15.0,7.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1069.0,82.0,0.21335648148148148,7079.0,5.686991428881415,3186.0,None,False,,
0ef4f44c5a6b8d8900444c852baff223c647d5cb,c49955fd77e037cf2343bb664afe2332c6f5713e,antirez,antirez@gmail.com,Tue May 6 10:19:51 2014 +0200,1399364391,Scripting: replace tolower() with faster code in evalGenericCommand().The function showed up consuming a non trivial amount of time in thenprofiler output. After this change benchmarking gives a 6% speednimprovement that can be consistently measured.n,5.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1077.0,83.0,0.5037962962962963,7080.0,2.9849292409483548,3187.0,None,False,,
c49955fd77e037cf2343bb664afe2332c6f5713e,3318b747053bf5009f16c4f10599d4fd9d418b1c,antirez,antirez@gmail.com,Tue May 6 10:34:22 2014 +0200,1399365262,Fixed missing c->bufpos reset in luaRedisGenericCommand().Bug introduced when adding a fast path to avoid copying the reply buffernfor small replies that fit into the client static buffer.n,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1081.0,84.0,0.01008101851851852,7081.0,100.19632606199772,3188.0,Corrective,True,,
3318b747053bf5009f16c4f10599d4fd9d418b1c,48c49c485155ba9e4a7851fd1644c171674c6f0f,antirez,antirez@gmail.com,Tue May 6 11:13:00 2014 +0200,1399367580,Scripting: cache argv in luaRedisGenericCommand().~ 4% consistently measured speed improvement.n,15.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1082.0,85.0,0.026828703703703702,7082.0,38.273511647972384,3189.0,None,False,,
48c49c485155ba9e4a7851fd1644c171674c6f0f,76fda9f8e10eb9cf1299fa6ca04f60d79462759e,antirez,antirez@gmail.com,Tue May 6 12:10:22 2014 +0200,1399371022,"Scripting: don't call lua_gc() after Lua script run.Calling lua_gc() after every script execution is too expensive, andnapparently does not make the execution smoother: the same peak latencynwas measured before and after the commit.nnThis change accounts for scripts execution speedup in the order of 10%.n",17.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1093.0,86.0,0.039837962962962964,7083.0,26.10168506682161,3190.0,None,False,,
76fda9f8e10eb9cf1299fa6ca04f60d79462759e,1e4ba6e7e64afa5e94987c09ac69469209791203,antirez,antirez@gmail.com,Tue May 6 15:04:02 2014 +0200,1399381442,"Scripting: Use faster API for Lua client c->argv creation.Replace the three calls to Lua API lua_tostring, lua_lua_strlen,nand lua_isstring, with a single call to lua_tolstring.nn~ 5% consistent speed gain measured.n",6.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1109.0,87.0,0.12060185185185185,7084.0,9.291746641074855,3191.0,None,False,,
1e4ba6e7e64afa5e94987c09ac69469209791203,4f686555ce962e6632235d824512ea8fdeda003c,antirez,antirez@gmail.com,Tue May 6 15:39:14 2014 +0200,1399383554,"Scripting: objects caching for Lua c->argv creation.Reusing small objects when possible is a major speedup under certainnconditions, since it is able to avoid the malloc/free pattern thatnotherwise is performed for every argument in the client command vector.n",40.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1112.0,88.0,0.024444444444444446,7085.0,41.90909090909091,3192.0,None,False,True,"[""ea0e2524aae1bbd0fa6bd29e1867dc1ca133bfa5""]"
4f686555ce962e6632235d824512ea8fdeda003c,088b9eadc430401df38cc7546ffa3156b71a0cd3,antirez,antirez@gmail.com,Wed May 7 15:57:32 2014 +0200,1399471052,"Test: handle new osx 'leaks' error.Sometimes the process is still there but no longer in a state that cannbe checked (after being killed). This used to happen after a call tonSHUTDOWN NOSAVE in the scripting unit, causing a false positive.n",2.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,315.0,37.0,43.22505787037037,7086.0,1.0231347290036938,505.0,Preventative,False,,
088b9eadc430401df38cc7546ffa3156b71a0cd3,76c31d425e797ddf5daedd29d893d3fc9c7cfc19,antirez,antirez@gmail.com,Wed May 7 16:04:45 2014 +0200,1399471485,"Scripting test: check that Lua can call commands rewirting argv.SPOP, tested in the new test, is among the commands rewritng thenclient->argv argument vector (it gets rewritten as SREM) for commandnreplication purposes.nnBecause of recent optimizations to client->argv caching in the contextnof the Lua internal Redis client, it is important to test for SPOP to bencallable from Lua without bad effects to the other commands.n",14.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,434.0,31.0,12.905243055555555,7087.0,1.077487885791466,506.0,Preventative,False,,
76c31d425e797ddf5daedd29d893d3fc9c7cfc19,0b0f872f3f1536e30b2fab0b4297ea960d8247e1,antirez,antirez@gmail.com,Wed May 7 17:05:09 2014 +0200,1399475109,REDIS_ENCODING_EMBSTR_SIZE_LIMIT set to 39.The new value is the limit for the robj + SDS header + string +nnull-term to stay inside the 64 bytes Jemalloc arena in 64 bitsnsystems.n,5.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,692.0,58.0,33.275405092592585,7088.0,1.0300522261777847,3193.0,Feature Addition,False,,
0b0f872f3f1536e30b2fab0b4297ea960d8247e1,931beae9b07a2db105f904147c7cc65f1321773f,antirez,antirez@gmail.com,Thu May 8 15:59:34 2014 +0200,1399557574,"Sentinel: generate +config-update-from event when a new config is received.This event makes clear, before the switch-master event is generated,nthat a Sentinel received a configuration update from another Sentinel.n",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3743.0,148.0,44.7443287037037,7089.0,1.0223492010936623,3194.0,None,False,,
931beae9b07a2db105f904147c7cc65f1321773f,210277860645b15bf79815a47fe35f778c83ebc7,antirez,antirez@gmail.com,Thu May 8 16:38:53 2014 +0200,1399559933,"Sentinel: log when a failover will be attempted again.When a Sentinel performs a failover (successful or not), or when anSentinel votes for a different Sentinel trying to start a failover, itnsets a min delay before it will try to get elected for a failover.nnWhile not strictly needed, because if multiple Sentinels will trynto failover the same master at the same time, only one configurationnwill eventually win, this serialization is practically very useful.nNormal failovers are cleaner: one Sentinel starts to failover, thenothers update their config when the Sentinel performing the failovernis able to get the selected slave to move from the role of slave to thenone of master.nnHowever currently this timeout was implicit, so users could seenSentinels not reacting, after a failed failover, for some time, withoutngiving any feedback in the logs to the poor sysadmin waiting for clues.nnThis commit makes Sentinels more verbose about the delay: when a masternis down and a failover attempt is not performed because the delay hasnstill not elaped, something like that will be logged:nnNext failover delay: I will not start a failovernbefore Thu May  8 16:48:59 2014n",19.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3744.0,149.0,0.02730324074074074,7090.0,37.62568885120814,3195.0,None,False,,
210277860645b15bf79815a47fe35f778c83ebc7,3625b52791ca0ff9e27ee5f1708a06a2229bf6d6,antirez,antirez@gmail.com,Fri May 9 11:44:46 2014 +0200,1399628686,Cluster: clusterAcceptHandler() comments updated to match the code.,5.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4285.0,368.0,9.687152777777778,7091.0,1.1032295064339224,3196.0,None,False,,
3625b52791ca0ff9e27ee5f1708a06a2229bf6d6,8a170c817dd17be2823339620de1cf2ea8aa1468,antirez,antirez@gmail.com,Fri May 9 11:51:36 2014 +0200,1399629096,"Cluster: bulk-accept new nodes connections.The same change was operated for normal client connections. This isnimportant for Cluster as well, since when a node rejoins the cluster,nwhen a partition heals or after a restart, it gets flooded with newnconnection attempts by all the other nodes trying to form a fullnmesh again.n",23.0,17.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4286.0,369.0,0.00474537037037037,7092.0,211.7317073170732,3197.0,None,False,,
8a170c817dd17be2823339620de1cf2ea8aa1468,72ff03346fcf3d5a839b85bd1ebd7850c2e5d9aa,antirez,antirez@gmail.com,Fri May 9 15:02:29 2014 +0200,1399640549,DEBUG POPULATE: call dictExpand() to avoid useless rehashing.,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,975.0,76.0,10.892731481481485,7093.0,1.0918043377549589,3198.0,Corrective,True,,
72ff03346fcf3d5a839b85bd1ebd7850c2e5d9aa,74435aba4794cfd0a29f8c746abae902aaaf8295,antirez,antirez@gmail.com,Fri May 9 16:11:11 2014 +0200,1399644671,redis-trib: allow support for mandatory options.,8.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1075.0,87.0,44.89342592592593,7094.0,1.0222749763328376,3199.0,None,False,,
74435aba4794cfd0a29f8c746abae902aaaf8295,71d0e7e0ea97903c0fe631bc97ff49d60a418d86,antirez,antirez@gmail.com,Fri May 9 16:36:59 2014 +0200,1399646219,CLUSTER MEET: better error messages when address is invalid.Fixes issue #1734.n,6.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4292.0,370.0,0.1981828703703704,7095.0,6.045844770192139,3200.0,None,False,,
71d0e7e0ea97903c0fe631bc97ff49d60a418d86,2a48bd4a372abedfb229f8ac4e607d022ed31bdd,antirez,antirez@gmail.com,Sat May 10 17:59:31 2014 +0200,1399737571,Cluster: initial ability to import data from standalone instance.,141.0,7.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1083.0,88.0,1.0752314814814814,7096.0,1.930032292787944,3201.0,None,False,True,"[""14f2582da26013b09aef5a24230c2553eebfd73a"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
2a48bd4a372abedfb229f8ac4e607d022ed31bdd,5c78f876661497a8588eed48b5c04cb6848280f4,antirez,antirez@gmail.com,Mon May 12 10:01:59 2014 +0200,1399881719,"RESTORE: reply with -BUSYKEY special error code.The error when the target key is busy was a generic one, while it makesnsense to be able to distinguish between the target key busy error andnthe others easily.n",4.0,2.0,"src/cluster.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,12.0,3056.666666666666,1285.0,11.365293209876542,7098.0,1.148399746279634,3204.0,None,False,,
5c78f876661497a8588eed48b5c04cb6848280f4,939c586ef74bbfbaa5fa88b270734a9332d7ca63,antirez,antirez@gmail.com,Mon May 12 10:22:04 2014 +0200,1399882924,redis-trib.rb: MIGRATE hardcoded timeout set to 15 sec.Will be configurable / adaptive at some point but let's start with ansaner value compared to 1 sec which is not a good idea for big datanstructures stored into a single key.n,2.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1217.0,89.0,1.6823263888888889,7100.0,1.5944149759550887,3205.0,None,False,True,"[""56161ca0a444ff6653f884561ab95bd09ecbc1af""]"
939c586ef74bbfbaa5fa88b270734a9332d7ca63,715a6d3a7824b7c1cd1902be800b5aa8b638aa76,antirez,antirez@gmail.com,Mon May 12 10:36:33 2014 +0200,1399883793,redis-trib import: trap MIGRATE errors.,9.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1217.0,90.0,0.01005787037037037,7101.0,100.42462600690449,3206.0,None,False,,
715a6d3a7824b7c1cd1902be800b5aa8b638aa76,63d1f9e570a80f73e56d02384307b3d4f6355daf,antirez,antirez@gmail.com,Mon May 12 10:46:25 2014 +0200,1399884385,Sentinel: Add dir /tmp directive in example sentinel.conf.,7.0,0.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,146.0,15.0,65.65456018518519,7102.0,1.0152312344668732,1342.0,None,False,,
63d1f9e570a80f73e56d02384307b3d4f6355daf,658ad301ccb2876f316b8b6095e21ee855cd6e6e,antirez,antirez@gmail.com,Mon May 12 11:06:37 2014 +0200,1399885597,redis-trib create: use CONFIG SET-CONFIG-EPOCH before joining the cluster.This way there is no need for the conflict resolution algo to be used innorder to start with a cluster where each node has a differentnconfigEpoch.n,18.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1224.0,91.0,0.02087962962962963,7103.0,48.89356984478936,3207.0,Feature Addition,False,,
658ad301ccb2876f316b8b6095e21ee855cd6e6e,433e835d3ee8c96426694a1029a1f3a8ae9aacec,Akos Vandra,avandra@whitepages.com,Mon May 12 11:05:18 2014 +0200,1399885518,fixed possible buffer overflow error,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1206.0,103.0,17.728136574074075,0.0,0.0,0.0,Corrective,True,,
433e835d3ee8c96426694a1029a1f3a8ae9aacec,b252fab06c5e3ccb739cdd27db5f5f0ddd03d506,Akos Vandra,avandra@whitepages.com,Mon May 12 11:35:10 2014 +0200,1399887310,Fixed possible buffer overflow bug if RDB file is corrupted.(Note: commit message modified by @antirez for clarity).n,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1206.0,104.0,0.02074074074074074,1.0,49.214285714285715,1.0,Corrective,True,,
b252fab06c5e3ccb739cdd27db5f5f0ddd03d506,005f564eb3e7c5675dfce0a250c6d0b30c69932c,antirez,antirez@gmail.com,Mon May 12 16:12:12 2014 +0200,1399903932,"Cluster: bypass data_age check for manual failovers.Automatic failovers only happen in Redis Cluster if the slave trying tonbe elected was disconnected from its master for no more than 10 timesnthe node-timeout value. However there should be no such a check fornmanual failovers, since these are initiated by the sysadmin that, inntheory, knows what she is doing when a slave is selected to be promoted.n",11.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4294.0,372.0,0.2570949074074074,7104.0,4.8896141898888015,3208.0,None,False,,
005f564eb3e7c5675dfce0a250c6d0b30c69932c,269233913800a51bdc0ef3eba6de1da13107b8fc,antirez,antirez@gmail.com,Mon May 12 16:34:20 2014 +0200,1399905260,"Cluster: forced failover implemented.Using CLUSTER FAILOVER FORCE it is now possible to failover a master inna forced way, which means:nn1) No check to understand if the master is up is performed.n2) No data age of the slave is checked. Evan a slave with very old datan   can manually failover a master in this way.n3) No chat with the master is attempted to reach its replication offset:n   the master can just be down.n",27.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4301.0,373.0,0.015370370370370371,7105.0,66.06024096385542,3209.0,None,False,,
b252fab06c5e3ccb739cdd27db5f5f0ddd03d506,3e0e51dd9fcfa9c361d716ba2fc935a40fadace3,Matt Stancliff,matt@genges.com,Mon May 12 10:56:43 2014 -0400,1399906603,Fix lack of SA_ONSTACK under CygwinFixes #232n,6.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,976.0,77.0,3.079328703703704,34.0,1.3247461041743405,33.0,Corrective,True,,
3e0e51dd9fcfa9c361d716ba2fc935a40fadace3,7c4decb10183224ad9b33505bd6d5cbdb5d8d98b,Matt Stancliff,matt@genges.com,Mon May 12 11:09:07 2014 -0400,1399907347,Fix lack of strtold under CygwinRenaming strtold to strtod then castingnthe result is the standard way of dealing withnno strtold in Cygwin.n,4.0,0.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,695.0,59.0,5.00275462962963,35.0,1.1998898754852652,34.0,Corrective,True,,
269233913800a51bdc0ef3eba6de1da13107b8fc,832a298005a8f7ccbdf1ff974a6928934f4c0ee9,antirez,antirez@gmail.com,Mon May 12 17:43:36 2014 +0200,1399909416,Cluster: fixed data_age computation / check integer overflow.,4.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4323.0,374.0,0.048101851851851854,7106.0,21.78922040423484,3210.0,None,False,,
832a298005a8f7ccbdf1ff974a6928934f4c0ee9,bae30479fba0f260dd65f2e8218ea69b5090f6b8,antirez,antirez@gmail.com,Wed May 14 00:14:35 2014 +0200,1400019275,redis.tcl: return I/O error message when peer closes connection.,4.0,1.0,"tests/support/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,251.0,10.0,13.352291666666664,7107.0,1.0748935107893465,507.0,None,False,,
bae30479fba0f260dd65f2e8218ea69b5090f6b8,cdf2271c5b8c8574f8441cd1214ed28d9cb583db,antirez,antirez@gmail.com,Wed May 14 00:15:52 2014 +0200,1400019352,"cluster.tcl: saner error handling.Better handling of connection errors in order to update the table andnrecovery, populate the startup nodes table after fetching the list ofnnodes.nnMore work to do about it, it is still not as reliable asnredis-rb-cluster implementation which is the minimal referencenimplementation for Redis Cluster clients.n",18.0,4.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,283.0,6.0,11.361620370370373,7108.0,1.0880156146220017,508.0,None,False,True,"[""5b7b2353676c4a5e4afc39e8452e3e6bbbace68c""]"
cdf2271c5b8c8574f8441cd1214ed28d9cb583db,27ca133d35323346714c0af5a650d3a8c0238099,antirez,antirez@gmail.com,Wed May 14 09:10:03 2014 +0200,1400051403,cluster.tcl: fix redis links leak in refresh_nodes_map.,7.0,1.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,297.0,7.0,0.37096064814814816,7109.0,3.6957037221927553,509.0,None,False,,
27ca133d35323346714c0af5a650d3a8c0238099,6baac558d87093bcc64fe053540f059664a0a429,antirez,antirez@gmail.com,Wed May 14 10:46:37 2014 +0200,1400057197,"Cluster: better handling of stolen slots.The previous code handling a lost slot (by another master with an highernconfiguration for the slot) was defensive, considering it an error andnputting the cluster in an odd state requiring redis-cli fix.nnThis was changed, because actually this only happens either in anlegitimate way, with failovers, or when the admin messed with the confignin order to reconfigure the cluster. So the new code instead will try tonmake sure that the keys stored match the new slots map, by removing allnthe keys in the slots we lost ownership from.nnThe function that deletes the keys from the lost slots is called onlynif the node does not lose all its slots (resulting in a reconfigurationnas a slave of the node that got ownership). This is an optimizationnsince the replication code will anyway flush all the instance data inna faster way.n",47.0,16.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.065210946862393,12.0,2315.6666666666665,942.0,10.195385802469136,7111.0,1.2174544575563135,3213.0,None,False,,
6baac558d87093bcc64fe053540f059664a0a429,60e5d1724cf3482ad50eab17ce9f29c0febab14d,antirez,antirez@gmail.com,Wed May 14 12:04:42 2014 +0200,1400061882,Cluster: don't accept cluster bus connections during startup.,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4332.0,376.0,0.054224537037037036,7113.0,19.441835645677696,3214.0,None,False,,
60e5d1724cf3482ad50eab17ce9f29c0febab14d,0b7aa26164dcdd80a90ad2750c67d48be7c291fc,antirez,antirez@gmail.com,Wed May 14 15:21:57 2014 +0200,1400073717,Cluster test: added function assert_cluster_state.,14.0,10.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/tests/00-base.tcl,CAS_DELIMITER",2.0,1.0,2.0,1.0,12.0,85.5,10.0,13.404855324074076,7114.5,1.052292879727112,511.0,Preventative,False,,
0b7aa26164dcdd80a90ad2750c67d48be7c291fc,8b9d5ecbd10307e19452d5f70c39f643fea878c2,antirez,antirez@gmail.com,Thu May 15 10:18:16 2014 +0200,1400141896,Remove trailing spaces from cluster.c file.,9.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4336.0,377.0,0.9260879629629628,7116.0,2.079811033069213,3215.0,None,False,,
8b9d5ecbd10307e19452d5f70c39f643fea878c2,796f4ae9f788849877d632c47d08076583f3d2d9,antirez,antirez@gmail.com,Thu May 15 11:43:06 2014 +0200,1400146986,"CLUSTER RESET implemented.The new command is able to reset a cluster node so that it starts againnas a fresh node. By default the command performs a soft reset (the samenas calling it as CLUSTER RESET SOFT), and the following steps arenperformed:nn1) All slots are set as unassigned.n2) The list of known nodes is flushed.n3) Node is set as master if it is a slave.nnWhen an hard reset is performed with CLUSTER RESET HARD the followingnadditional operations are performed:nn4) A new Node ID is created at random.n5) Epochs are set to 0.nnCLUSTER RESET is useful both when the sysadmin wants to reconfigure annode with a different role (for example turning a slave into a master)nand for testing purposes.nnIt also may play a role in automatically provisioned Redis Clusters,nsince it allows to reset a node back to the initial state in order to benreconfigured.n",88.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4336.0,378.0,0.05891203703703704,7117.0,17.974459724950886,3216.0,Feature Addition,False,True,"[""7b87cda70e1462aa4208c666a7816facf17c8938""]"
796f4ae9f788849877d632c47d08076583f3d2d9,7b87cda70e1462aa4208c666a7816facf17c8938,antirez,antirez@gmail.com,Thu May 15 12:33:57 2014 +0200,1400150037,Fixed typo in CLUSTER RESET implementation.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4424.0,379.0,0.0353125,7118.0,29.31858407079646,3217.0,Corrective,True,,
7b87cda70e1462aa4208c666a7816facf17c8938,8c6e92c3bc59052f16d8ba6f24040b66d28c03b2,antirez,antirez@gmail.com,Thu May 15 16:33:13 2014 +0200,1400164393,"Cluster: clear todo_before_sleep flags when executing actions.Thanks to this change, when there is some code like:nnclusterDoBeforeSleep(CLUSTER_TODO_UPDATE_STATE|...);n... and later before returning to the event loop ...nclusterUpdateState();nnThe clusterUpdateState() function will clar the flag and will not benrepeated in the clusterBeforeSleep() function. This especially importantnfor config save/fsync flags which are slow to execute and not a goodnidea to repeat without a good reason.nnThis is implemented for all the CLUSTER_TODO flags.n",12.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4424.0,380.0,0.16615740740740742,7119.0,7.018389523544163,3218.0,None,False,,
8c6e92c3bc59052f16d8ba6f24040b66d28c03b2,67133d2f4882da652fd3e78ba15220bce2488d05,antirez,antirez@gmail.com,Thu May 15 17:03:28 2014 +0200,1400166208,Cluster: use clusterSetNodeAsMaster() during slave failover.clusterHandleSlaveFailover() was reimplementing whatnclusterSetNodeAsMaster() without any good reason.n,1.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4434.0,381.0,0.021006944444444446,7120.0,48.603305785123965,3219.0,None,False,,
67133d2f4882da652fd3e78ba15220bce2488d05,ba52cd06c87383964a44451f10310f0ea015277e,Mike Trinkala,trink@acm.org,Sun May 18 07:26:26 2014 -0700,1400423186,Correct the HyperLogLog stale cache flag to prevent unnecessary computations.Set the MSB as documented.n,4.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1548.0,83.0,30.93311342592593,0.0,0.0,0.0,Non Functional,False,,
67133d2f4882da652fd3e78ba15220bce2488d05,4c04744734098576f884aa7ee3dfc64cd856043d,antirez,antirez@gmail.com,Mon May 19 11:24:05 2014 +0200,1400491445,Cluster test: proper initialization at unit startup.,41.0,34.0,"tests/cluster/tests/00-base.tcl,CAS_DELIMITER,tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.1442569607049016,12.0,169.0,11.0,16.45170524691358,7122.0,1.0869751538949013,514.0,Preventative,False,,
4c04744734098576f884aa7ee3dfc64cd856043d,a7da78e472b90aec6d877904394b8481d59d1f70,antirez,antirez@gmail.com,Mon May 19 11:39:15 2014 +0200,1400492355,Cluster test: failure detection initial tests.,32.0,0.0,"tests/cluster/tests/01-faildet.tcl,CAS_DELIMITER,tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.20062232431271465,12.0,26.5,2.0,0.0052662037037037035,7124.5,47.97252747252747,516.0,Preventative,False,,
a7da78e472b90aec6d877904394b8481d59d1f70,194b78050e16431aa6b756b06476f458de540acc,antirez,antirez@gmail.com,Mon May 19 15:26:17 2014 +0200,1400505977,Cluster test: better failure detection test and framework improvements.,43.0,9.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/tests/01-faildet.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9470622432515328,12.0,53.0,5.0,2.580335648148148,7126.5,1.1968264712424688,518.0,Preventative,False,,
194b78050e16431aa6b756b06476f458de540acc ba52cd06c87383964a44451f10310f0ea015277e,04d901aed5e93c91f6642797f400bdc7f010086a,Salvatore Sanfilippo,antirez@gmail.com,Mon May 19 15:39:30 2014 +0200,1400506770,Merge pull request #1762 from trink/unstableCorrect the HyperLogLog stale cache flag to prevent unnecessary computat...,,,,,,,,,,,,,,,Merge,False,,
04d901aed5e93c91f6642797f400bdc7f010086a,a9e62ab9faee3d18478df8583d2bbb2eabfc3cef,antirez,antirez@gmail.com,Mon May 19 15:44:04 2014 +0200,1400507044,HyperLogLog regression test for issue #1762.,11.0,0.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,159.0,4.0,31.13021990740741,7128.0,1.032123126755107,519.0,Preventative,False,,
a9e62ab9faee3d18478df8583d2bbb2eabfc3cef,ea0e2524aae1bbd0fa6bd29e1867dc1ca133bfa5,michael-grunder,michael.grunder@gmail.com,Mon May 19 13:18:13 2014 -0700,1400530693,"Fix LUA_OBJCACHE segfault.When scanning the argument list inside of a redis.call() invocationnfor pre-cached values, there was no check being done that thenargument we were on was in fact within the bounds of the cache size.nnSo if a redis.call() command was ever executed with more than 32narguments (current cache size #define setting) redis-server couldnsegfault.n",3.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1149.0,89.0,13.27707175925926,2.0,1.075317812401113,2.0,Corrective,True,,
a9e62ab9faee3d18478df8583d2bbb2eabfc3cef,01e3f9ba1d42a4113a24d8d37fa55400bca2fb5d,antirez,antirez@gmail.com,Tue May 20 14:22:34 2014 +0200,1400588554,Remove trailing spaces from sentinel.c.,9.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3762.0,150.0,11.905335648148148,7129.0,1.0839959518617643,3220.0,None,False,,
01e3f9ba1d42a4113a24d8d37fa55400bca2fb5d,4ddc77041f6de5b47b88e54e790a51bfcad0d197,antirez,antirez@gmail.com,Tue May 20 16:11:22 2014 +0200,1400595082,Remove trailing spaces from scripting.c,3.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1151.0,90.0,0.7452430555555556,7130.0,2.341844103806551,3221.0,None,False,,
01e3f9ba1d42a4113a24d8d37fa55400bca2fb5d ea0e2524aae1bbd0fa6bd29e1867dc1ca133bfa5,ce7c47265bfd133e0205152820f89a04b16333ef,Salvatore Sanfilippo,antirez@gmail.com,Tue May 20 16:14:34 2014 +0200,1400595274,Merge pull request #1764 from michael-grunder/lua_cache_segfaultFix LUA_OBJCACHE segfault.,,,,,,,,,,,,,,,Merge,False,,
4ddc77041f6de5b47b88e54e790a51bfcad0d197 ce7c47265bfd133e0205152820f89a04b16333ef,ce2b2f22d9858eeb31ed7159d9e33b620da10c24,antirez,antirez@gmail.com,Tue May 20 16:15:13 2014 +0200,1400595313,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ce2b2f22d9858eeb31ed7159d9e33b620da10c24,7f772355f403a1be9592e60f606d457d117fccc5,antirez,antirez@gmail.com,Tue May 20 16:20:16 2014 +0200,1400595616,Regression test for issue #1764.,13.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,447.0,32.0,13.010775462962966,7131.0,1.0768593695930455,520.0,Preventative,False,,
7f772355f403a1be9592e60f606d457d117fccc5,56161ca0a444ff6653f884561ab95bd09ecbc1af,antirez,antirez@gmail.com,Wed May 21 12:15:03 2014 +0200,1400667303,redis-trib fix: use MIGRATE REPLACE when fixing slots.This fixes issue #1765.n,13.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1242.0,92.0,9.047523148148148,7132.0,1.1105274873162032,3222.0,Corrective,True,,
56161ca0a444ff6653f884561ab95bd09ecbc1af,33f943b4cddb0bf90b436ccd47d12363e13d0fce,Matt Stancliff,matt@genges.com,Mon Apr 7 21:22:30 2014 -0400,1396920150,"Fix blocking operations from missing new listsBehrad Zari discovered [1] and Josiah reported [2]: if you blocknand wait for a list to exist, but the list creates fromna non-push command, the blocked client never gets notified.nnThis commit adds notification of blocked clients intonthe DB layer and away from individual commands.nnLists can be created by [LR]PUSH, SORT..STORE, RENAME, MOVE,nand RESTORE.  Previously, blocked client notifications werenonly triggered by [LR]PUSH.  Your client would never getnnotified if a list were created by SORT..STORE or RENAME orna RESTORE, etc.nnBlocked client notification now happens in one unified place:n  - dbAdd() triggers notification when adding a list to the DBnnTwo new tests are added that fail prior to this commit.nnAll test pass.nnFixes #1668nn[1]: https://groups.google.com/forum/#!topic/redis-db/k4oWfMkN1NUn[2]: #1668n",30.0,11.0,"src/db.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.258968468293418,12.0,1161.0,662.0,134.46375289351852,37.5,0.9956047688535352,1.0,Corrective,True,,
56161ca0a444ff6653f884561ab95bd09ecbc1af,c68c78719f3e790fe655d1dd2a6b8ae1de4ae456,antirez,antirez@gmail.com,Wed May 21 16:40:36 2014 +0200,1400683236,redis-trib fix improved: move keys from N nodes to owner.,51.0,15.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1253.0,93.0,0.1844097222222222,7133.0,6.422707588024855,3223.0,Corrective,True,True,"[""762b1ae2becf26c5ae5b4dc3e31b7f93cc2a5302"", ""02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11""]"
c68c78719f3e790fe655d1dd2a6b8ae1de4ae456,762b1ae2becf26c5ae5b4dc3e31b7f93cc2a5302,antirez,antirez@gmail.com,Wed May 21 18:17:02 2014 +0200,1400689022,"Fix an error in redis-trib where we always talk with same node.While iterating the list of nodes we want to set the slot as stable innthe current node, not always in the first node of the list.n",3.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1289.0,94.0,0.06696759259259259,7134.0,15.93259592118908,3224.0,Corrective,True,,
762b1ae2becf26c5ae5b4dc3e31b7f93cc2a5302,17b05afda9b751f46facfc1948276ead137a6801,antirez,antirez@gmail.com,Thu May 22 15:56:17 2014 +0200,1400766977,Test: dump.tcl fixed for RESTORE new error msg.,1.0,1.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,220.0,9.0,133.15085648148147,7135.0,1.007510278389678,521.0,Preventative,False,,
17b05afda9b751f46facfc1948276ead137a6801,ce374889195bea7c8aefecf994a702f799fe4fd1,antirez,antirez@gmail.com,Thu May 22 16:03:46 2014 +0200,1400767426,Test: AOF test false positive when running in slow hosts.The bug was triggered by running the test with Valgrind (which is a lotnslower and more sensible to timing issues) after the recent changesnthat made Redis more promptly able to reply with the -LOADING error.n,16.0,1.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,143.0,14.0,336.8973726851852,7136.0,1.0029682629817789,522.0,Preventative,False,True,"[""09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c""]"
ce374889195bea7c8aefecf994a702f799fe4fd1,39603a7e315f36b51cdd9d0cf20d6d43f66be606,antirez,antirez@gmail.com,Thu May 22 16:57:47 2014 +0200,1400770667,Cluster: slave validity factor is now user configurable.Check the commit changes in the example redis.conf for more information.n,69.0,8.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,1.6414236920781584,12.0,2028.166666666667,1596.0,30.81009066358025,7139.5,1.015222066951457,3229.0,None,False,,
39603a7e315f36b51cdd9d0cf20d6d43f66be606,d98fa718e0e3034b1e21effa3ed3ce6d0c096791,antirez,antirez@gmail.com,Thu May 22 18:48:37 2014 +0200,1400777317,"Tag every log line with role.Every log contains, just after the pid, a single character that providesninformation about the role of an instance:nnS - SlavenM - MasternC - Writing childnX - Sentineln",13.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,12.0,2441.0,920.0,0.07696759259259259,7143.5,10.74436090225564,3231.0,None,False,,
d98fa718e0e3034b1e21effa3ed3ce6d0c096791,b239a32aaee896fbff704b1aefffa18980b2e22d,antirez,antirez@gmail.com,Thu May 22 19:24:35 2014 +0200,1400779475,redisLogFromHandler() format changed to match new logs format.,1.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3449.0,490.0,0.02497685185185185,7145.0,41.03707136237257,3232.0,Feature Addition,False,,
b239a32aaee896fbff704b1aefffa18980b2e22d,94e3bb568ac2cb7763a1caab299337ed72149e4c,Andy Grunwald,andygrunwald@gmail.com,Thu May 22 20:01:12 2014 +0200,1400781672,Fixed typo in word avarege in result message of --intrinsic-latency analyzer,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1963.0,102.0,70.15976851851852,0.0,0.0,0.0,Corrective,True,,
b239a32aaee896fbff704b1aefffa18980b2e22d,a700bc74a8094c6bcb310aab7b4494d880c5de6c,antirez,antirez@gmail.com,Fri May 23 11:40:25 2014 +0200,1400838025,Cluster test: more reliable 01-faildet unit.Do things in a sequence that prevents failover during failure detection.n,15.0,9.0,"tests/cluster/tests/01-faildet.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,32.0,2.0,3.843148148148148,7146.0,1.2602033440948297,523.0,Preventative,False,,
a700bc74a8094c6bcb310aab7b4494d880c5de6c,aa5dfb3c2ca93c4238cd9b80d312dedd777a187e,antirez,antirez@gmail.com,Fri May 23 11:41:50 2014 +0200,1400838110,Cluster test: move basic read/write test into a procedure.,23.0,9.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/tests/00-base.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8960382325345575,12.0,87.5,14.0,3.928229166666666,7147.5,1.1937102844193257,525.0,Preventative,False,,
aa5dfb3c2ca93c4238cd9b80d312dedd777a187e,d0566daeaf656353e1ec759c7b9c876c9ce9f801,antirez,antirez@gmail.com,Fri May 23 11:47:47 2014 +0200,1400838467,Cluster test: basic failover unit added.,35.0,0.0,"tests/cluster/tests/02-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7149.0,0.0,526.0,Preventative,False,,
d0566daeaf656353e1ec759c7b9c876c9ce9f801,6c16ecaaaab0d933249aaaef49fe50afd373df83,Matt Stancliff,matt@genges.com,Fri May 23 13:54:29 2014 -0400,1400867669,"Fix test framework to detect proper server PIDPreviously the PID format was:n[PID] TimestampnnBut it recently changed to:nPID:X TimestampnnThe tcl testing framework was grabbing the PID from [d+], butnthat's not valid anymore.nnNow we grab the pid from PID: <PID> in the part of Redis startupnoutput to the right of the ASCII logo.n",1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,316.0,38.0,16.164548611111115,40.0,1.0618637751079931,2.0,Corrective,True,,
d0566daeaf656353e1ec759c7b9c876c9ce9f801,69fa133ec22dca419fedc932952b8bc29d40937f,antirez,antirez@gmail.com,Mon May 26 10:17:12 2014 +0200,1401092232,Sentinel example config: explain you don't need to specify slaves.,6.0,0.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,153.0,16.0,13.979710648148147,7150.0,1.071532238768652,1344.0,None,False,,
69fa133ec22dca419fedc932952b8bc29d40937f,3495caf4fb323a76d5206a35aab5dce42a722ea2,antirez,antirez@gmail.com,Mon May 26 11:00:11 2014 +0200,1401094811,"Cluster test: catch FLUSHALL errors on node reset.FLUSHALL will fail on read-only slaves, but there the command is notnneeded in order to reset the instance with CLUSTER RESET so errors cannbe ignored.n",1.0,1.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,54.0,3.0,6.97287037037037,7151.0,1.1434129629383722,527.0,Preventative,False,,
3495caf4fb323a76d5206a35aab5dce42a722ea2,88c23075355e22471cb9b35cafd3ba65f8870dba,antirez,antirez@gmail.com,Mon May 26 16:24:12 2014 +0200,1401114252,"Cluster: always allow ok -> fail switch in clusterUpdateState().There is a time defined by REDIS_CLUSTER_WRITABLE_DELAY where fail -> oknswitch is not possible after startup as a master for some time, howevernthe contrary (ok -> fail) should always be possible.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4431.0,383.0,3.976678240740741,7152.0,1.2514661583014393,3233.0,None,False,,
88c23075355e22471cb9b35cafd3ba65f8870dba,7a0c5fdf12d9cd035e41734f518aa4568dc48c9d,Matt Stancliff,matt@genges.com,Thu May 22 15:34:02 2014 -0400,1400787242,"Disable recursive watchdog signal handlerIf we are in the signal handler, we don't want to handlenthe signal again.  In extreme cases, this can cause a stack overflownand segfault Redis.nnFixes #1771n",1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,982.0,78.0,10.192581018518519,41.0,1.0981105765245465,38.0,Corrective,True,,
7a0c5fdf12d9cd035e41734f518aa4568dc48c9d 6c16ecaaaab0d933249aaaef49fe50afd373df83,3e0aef1e2e7e9cf9ef3bc3a0d63c57499295cf14,Salvatore Sanfilippo,antirez@gmail.com,Mon May 26 17:56:58 2014 +0200,1401119818,Merge pull request #1775 from mattsta/fix-test-against-new-PID-formatFix test framework to detect proper server PID,,,,,,,,,,,,,,,Merge,False,,
3e0aef1e2e7e9cf9ef3bc3a0d63c57499295cf14,efbe17396248082bb9a9b1f30c6b2774c22422df,antirez,antirez@gmail.com,Mon May 26 18:06:48 2014 +0200,1401120408,Cluster test: add tmp dir to Git repo.,2.0,0.0,"tests/cluster/tmp/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7153.0,0.0,528.0,Preventative,False,,
efbe17396248082bb9a9b1f30c6b2774c22422df,b187c591e39e072fa169bf60a1a46bebc855973b,Jan-Erik Rediger,badboy@archlinux.us,Wed May 28 09:46:01 2014 +0200,1401263161,Small typo fixed,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,982.0,79.0,5.5083217592592595,10.0,1.1815434979481805,6.0,Corrective,True,,
efbe17396248082bb9a9b1f30c6b2774c22422df,8a588ac14d229aa330d7b2daea1778c606e6588b,antirez,antirez@gmail.com,Wed May 28 15:46:05 2014 +0200,1401284765,More trailing spaces in sentinel.c removed.,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3762.0,151.0,8.057997685185185,7154.0,1.1241003086707908,3234.0,None,False,,
39603a7e315f36b51cdd9d0cf20d6d43f66be606,dc8584696a3f97fc1fda90b4c50fb3f8f7dda0cf,zionwu,zionwu3@gmail.com,Sun Jun 1 02:23:24 2014 +0800,1401560604,fix issue 1787,2.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,2829.0,96.0,43.30717592592593,0.0,0.0,0.0,Corrective,True,,
8a588ac14d229aa330d7b2daea1778c606e6588b,072982d83c83b161f555538bad6a82815d1c36eb,antirez,antirez@gmail.com,Wed Jun 4 18:33:24 2014 +0200,1401899604,"Scripting: better Lua number -> string conversion in luaRedisGenericCommand().The lua_to*string() family of functions use a non optimal formatnspecifier when converting integers to strings. This has both the problemnof the number being converted in exponential notation, which we don'tnuse as a Redis return value when floating point numbers are involed,nand, moreover, there is a loss of precision since the default formatnspecifier is not able to represent numbers that must be representednexactly in the IEEE 754 number mantissa.nnThe new code handles it as a special case using a saner conversion.nnThis fixes issue #1118.n",14.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1151.0,91.0,15.09863425925926,7155.0,1.0662311559329778,3235.0,None,False,True,"[""3758f27bc1d3be0b12676fa9a7f26678e4789c6c""]"
072982d83c83b161f555538bad6a82815d1c36eb,3307db49bd9b8eceaa9672ecfb1d32a5ba7497ce,antirez,antirez@gmail.com,Wed Jun 4 18:51:20 2014 +0200,1401900680,Regression test for issue #1118.,8.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,460.0,33.0,15.104907407407408,7156.0,1.0662036497826926,529.0,Preventative,False,,
3307db49bd9b8eceaa9672ecfb1d32a5ba7497ce,3758f27bc1d3be0b12676fa9a7f26678e4789c6c,antirez,antirez@gmail.com,Wed Jun 4 18:57:12 2014 +0200,1401901032,"Fixed dbuf variable scope in luaRedisGenericCommand().I'm not sure if while the visibility is the inner block, the fact wenpoint to 'dbuf' is a problem or not, probably the stack var isxnguaranteed to live until the function returns. However obvious code isnbetter anyway.n",1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1161.0,92.0,0.016527777777777777,7157.0,61.504201680672274,3236.0,Corrective,True,,
3758f27bc1d3be0b12676fa9a7f26678e4789c6c,134fd9eaf4b683e200be1d42d20632767c6e2e5c,antirez,antirez@gmail.com,Thu Jun 5 10:46:08 2014 +0200,1401957968,Tests for min-slaves-* feature.,60.0,0.0,"tests/integration/replication-2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,27.0,1.0,1060.4164699074074,7158.0,1.0009430257152525,530.0,Preventative,False,,
134fd9eaf4b683e200be1d42d20632767c6e2e5c,14fb0ac649062d250659a153aa576870e151cb4b,antirez,antirez@gmail.com,Thu Jun 5 10:48:05 2014 +0200,1401958085,"Don't process min-slaves-to-write for slaves.Replication is totally broken when a slave has this option, since itnstops accepting updates from masters.nnThis fixes issue #1434.n",2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3448.0,491.0,13.641319444444445,7159.0,1.0733066917809964,3237.0,Corrective,True,,
14fb0ac649062d250659a153aa576870e151cb4b dc8584696a3f97fc1fda90b4c50fb3f8f7dda0cf,1e221d101cd834c8f13fe570ce4ee2c69bffa109,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 6 10:33:11 2014 +0200,1402043591,Merge pull request #1788 from zionwu/unstablefix issue 1787,,,,,,,,,,,,,,,Merge,False,,
1e221d101cd834c8f13fe570ce4ee2c69bffa109 fdaab0234787d1bb835680825ea919d7cba3723e,e8ebd7d0e05b72d3ab749093493ee3c1cf7023d0,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 6 10:37:57 2014 +0200,1402043877,Merge pull request #1789 from yoav-steinberg/fix_eval_in_testsFix eval usage in tests to conform with eval semantics,,,,,,,,,,,,,,,Merge,False,,
e8ebd7d0e05b72d3ab749093493ee3c1cf7023d0 b187c591e39e072fa169bf60a1a46bebc855973b,113be48221ad07706a15f253657cc805acb8047a,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 6 10:45:00 2014 +0200,1402044300,Merge pull request #1780 from badboy/patch-8Small typo fixed,,,,,,,,,,,,,,,Merge,False,,
113be48221ad07706a15f253657cc805acb8047a 94e3bb568ac2cb7763a1caab299337ed72149e4c,a2403227c7b164e546e53bf329c70caaadef2c14,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 6 11:19:21 2014 +0200,1402046361,Merge pull request #1772 from andygrunwald/typo-avarege-averageFixed typo in word avarege in result message of --intrinsic-latency analyzer,,,,,,,,,,,,,,,Merge,False,,
a2403227c7b164e546e53bf329c70caaadef2c14,a2c2ef7de593ca9ae80b09c3b243965a746a106c,antirez,antirez@gmail.com,Sat Jun 7 14:25:47 2014 +0200,1402143947,"Cluster: SET-CONFIG-EPOCH should update currentEpoch.SET-CONFIG-EPOCH, used by redis-trib at cluster creation time, failed tonupdate the currentEpoch, making it possible after a failover for anserver to set its configEpoch to a value smaller than the current onen(since configEpochs are obtained using currentEpoch).nnThe bug totally break the Redis Cluster algorithms and protocolsnallowing for permanent split brain conditions about the slotsnconfiguration as shown in issue #1799.n",2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4432.0,384.0,11.917766203703707,7160.0,1.0839083417905302,3238.0,None,False,,
a2c2ef7de593ca9ae80b09c3b243965a746a106c,32d0a79f7871052429f38c65ee0b341c7fbbe3e5,antirez,antirez@gmail.com,Sat Jun 7 14:37:09 2014 +0200,1402144629,"Cluster: check that configEpoch never goes back.Since there are ways to alter the configEpoch outside of the failovernprocedure (for exampel CLUSTER SET-CONFIG-EPOCH and via the configEpochncollision resolution algorithm), make always sure, before replacing ournconfigEpoch with a new one, that it is greater than the current one.n",2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4434.0,385.0,0.007893518518518518,7161.0,127.68621700879768,3239.0,None,False,,
32d0a79f7871052429f38c65ee0b341c7fbbe3e5,d34c2fa3bb79f9bbbaaafc6d0e74973e5a3b963a,antirez,antirez@gmail.com,Sat Jun 7 17:27:49 2014 +0200,1402154869,ROLE command added.The new ROLE command is designed in order to provide a client withninformations about the replication in a fast and easy to use wayncompared to the INFO command where the same information is alsonavailable.n,39.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.34310030788093704,12.0,2247.0,1036.0,19.405046296296295,7163.0,1.1703726760769222,3242.0,Feature Addition,False,,
d34c2fa3bb79f9bbbaaafc6d0e74973e5a3b963a,6a13193d8f3110216a8ed3982d1109b84d0ac65c,antirez,antirez@gmail.com,Sat Jun 7 17:38:16 2014 +0200,1402155496,ROLE output improved for slaves.Info about the replication state with the master added.n,13.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1884.0,113.0,0.0072569444444444435,7165.0,138.79904306220095,3243.0,Feature Addition,False,True,"[""ed6228851cfc7731a4e84201a3b2d6c11d925438""]"
6a13193d8f3110216a8ed3982d1109b84d0ac65c 33f943b4cddb0bf90b436ccd47d12363e13d0fce,c7f93143f6678ac1b0d6e008ab9f4ecf3f1dedef,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 9 11:37:28 2014 +0200,1402306648,Merge pull request #1669 from mattsta/blpop-internally-added-keysFix blocking operations from missing new lists,,,,,,,,,,,,,,,Merge,False,,
c7f93143f6678ac1b0d6e008ab9f4ecf3f1dedef 7c4decb10183224ad9b33505bd6d5cbdb5d8d98b,08c7363647f9096cd40bedf8427f2de05cfa1276,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 9 11:42:14 2014 +0200,1402306934,Merge pull request #1743 from mattsta/cygwin-compile-fixCygwin compile fix,,,,,,,,,,,,,,,Merge,False,,
08c7363647f9096cd40bedf8427f2de05cfa1276,9b3bc82c1aa1bf8ecba460efe83ca8743b828d8e,antirez,antirez@gmail.com,Tue Jun 10 11:35:40 2014 +0200,1402392940,Cluster: cluster_my_epoch added to CLUSTER INFO output.,6.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4435.0,386.0,2.8739699074074068,7166.0,1.3479507553028258,3244.0,None,False,,
9b3bc82c1aa1bf8ecba460efe83ca8743b828d8e,6785b39eba761ccdcf8879ed19a8c3ac61f977f2,antirez,antirez@gmail.com,Tue Jun 10 13:54:38 2014 +0200,1402401278,Cluster test: check master -> slave role switch.,12.0,0.0,"tests/cluster/tests/02-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,35.0,1.0,18.088090277777773,7167.0,1.0552849960743813,531.0,Preventative,False,,
6785b39eba761ccdcf8879ed19a8c3ac61f977f2,9865ce0e64f1877588e9c87f05a2203ced6356be,antirez,antirez@gmail.com,Tue Jun 10 14:18:54 2014 +0200,1402402734,Cluster test: unit 02 should wait for failover.,10.0,0.0,"tests/cluster/tests/02-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,47.0,2.0,0.01685185185185185,7168.0,60.34065934065934,532.0,Preventative,False,,
9865ce0e64f1877588e9c87f05a2203ced6356be,2ed450c3220c903ef1d18a9e261e5187e276ac73,antirez,antirez@gmail.com,Tue Jun 10 15:00:39 2014 +0200,1402405239,Cluster test: 02 unit more reliable waiting for slave sync.,8.0,0.0,"tests/cluster/tests/02-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,57.0,3.0,0.028993055555555564,7169.0,35.49101796407186,533.0,Preventative,False,,
2ed450c3220c903ef1d18a9e261e5187e276ac73,1617c36c355c0ac27a5cc8ec0b635e2d690405ae,antirez,antirez@gmail.com,Tue Jun 10 15:05:52 2014 +0200,1402405552,"Cluster test: new unit 03, failover loop stress testing.",79.0,0.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7170.0,0.0,534.0,Preventative,False,,
1617c36c355c0ac27a5cc8ec0b635e2d690405ae,92dcae8fe4d6bc3b4ce7fbfcae0dcb6708cad18e,antirez,antirez@gmail.com,Tue Jun 10 15:19:35 2014 +0200,1402406375,Cluster test: added show-redis-logs command in the interactive console.,9.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,394.0,3.0,22.16354166666667,7171.0,1.045119142736288,535.0,Preventative,False,,
92dcae8fe4d6bc3b4ce7fbfcae0dcb6708cad18e,4fd35a28d3be275b821b7d3a9d10b50ddc5fb99c,antirez,antirez@gmail.com,Tue Jun 10 15:33:53 2014 +0200,1402407233,Cluster test: better failover detection in unit 03.,17.0,5.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,79.0,1.0,0.01945601851851852,7172.0,52.3979773944081,536.0,Preventative,False,,
4fd35a28d3be275b821b7d3a9d10b50ddc5fb99c,64e6d7af47c24606f75f53386872576568512278,antirez,antirez@gmail.com,Tue Jun 10 15:46:36 2014 +0200,1402407996,"Cluster test: unit 03, check epochs correctness.",6.0,0.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,91.0,2.0,0.008831018518518521,7173.0,114.23722149410222,537.0,Preventative,False,,
64e6d7af47c24606f75f53386872576568512278,8204ab0098e80a81c6bee2ff849ad5fc2d235a51,antirez,antirez@gmail.com,Tue Jun 10 16:07:26 2014 +0200,1402409246,Cluster: log when a master denies a failover auth.,44.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4441.0,387.0,0.18872685185185184,7174.0,6.298663068809027,3245.0,None,False,,
8204ab0098e80a81c6bee2ff849ad5fc2d235a51,d5d92deb6cf0c87459710b8c0da013e643e389d9,antirez,antirez@gmail.com,Tue Jun 10 16:38:36 2014 +0200,1402411116,Cluster: log configEpoch updates to myself.,11.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4482.0,388.0,0.02164351851851852,7175.0,47.20320855614974,3246.0,None,False,,
d5d92deb6cf0c87459710b8c0da013e643e389d9,61eb0eae838d06a9f9da21d00bcdb7b9ede2bd5b,antirez,antirez@gmail.com,Tue Jun 10 16:56:08 2014 +0200,1402412168,Cluster: log granted failover authorizations.,2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4491.0,389.0,0.012175925925925923,7176.0,83.12927756653994,3247.0,None,False,,
61eb0eae838d06a9f9da21d00bcdb7b9ede2bd5b,605303d9c675d2b4dd1bc65f2f3e7f1884909500,antirez,antirez@gmail.com,Tue Jun 10 16:56:43 2014 +0200,1402412203,Cluster test: set config epochs when creating clusters.,1.0,0.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,54.0,4.0,15.247592592592593,7177.0,1.065584123783961,538.0,Preventative,False,,
605303d9c675d2b4dd1bc65f2f3e7f1884909500,58799718be9e79ea9279f5cbc211ce4d483ba010,antirez,antirez@gmail.com,Tue Jun 10 17:20:16 2014 +0200,1402413616,Cluster: better comment for clusterSendFailoverAuthIfNeeded() epoch test.,4.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4493.0,390.0,0.01675925925925926,7178.0,60.66850828729282,3248.0,None,False,,
58799718be9e79ea9279f5cbc211ce4d483ba010,8ef79e72ac890b076df3f35ab8571c01848a53f1,antirez,antirez@gmail.com,Tue Jun 10 17:39:42 2014 +0200,1402414782,Cluster: fix an error message when logging failover auth denied.,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4496.0,391.0,0.013495370370370371,7179.0,75.09948542024013,3249.0,None,False,,
8ef79e72ac890b076df3f35ab8571c01848a53f1,76efe1225fcd76cd10d6ea87ae9bec36b17edcfa,Matt Stancliff,matt@genges.com,Tue Jun 10 14:21:37 2014 -0400,1402424497,"Scripting: Fix regression from #1118The new check-for-number behavior of Lua arguments brokenusers who use large strings of just integers.nnThe Lua number check would convert the string to a number, butnthat breaks user data becausenLua numbers have limited precision compared to an arbitrarilynprecise number wrapped in a string.nnRegression fixed and new test added.nnFixes #1118 again.n",13.0,1.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,12.0,814.5,127.0,6.060659722222222,42.5,1.1237766423051792,3.0,None,False,,
8ef79e72ac890b076df3f35ab8571c01848a53f1 76efe1225fcd76cd10d6ea87ae9bec36b17edcfa,3ac1dad77a1c06c063de06946bc0cff2dc9b8934,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 11 10:09:02 2014 +0200,1402474142,Merge pull request #1804 from mattsta/lua-regression-1118Scripting: Fix regression from #1118,,,,,,,,,,,,,,,Merge,False,,
3ac1dad77a1c06c063de06946bc0cff2dc9b8934,73fefd0bc05b7711d3710761b49197596ba39aa4,antirez,antirez@gmail.com,Wed Jun 11 10:10:58 2014 +0200,1402474258,"Scripting: Fix for a #1118 regression simplified.It is more straightforward to just test for a numerical type avoidingnLua's automatic conversion. The code is technically more correct now,nhowever Lua should automatically convert to number only if the originalntype is a string that looks like a number, and not from other types,nso practically speaking the fix is identical AFAIK.n",1.0,6.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1166.0,94.0,0.5759375,7180.0,2.7362995116657625,3250.0,None,False,,
73fefd0bc05b7711d3710761b49197596ba39aa4,1d5b12c54ae52816d0d0577e17cbbc4def59d247,antirez,antirez@gmail.com,Wed Jun 11 16:23:13 2014 +0200,1402496593,Cluster test: rewrite config when resetting nodes.,2.0,1.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,55.0,5.0,0.9767361111111112,7181.0,2.02381798791326,539.0,Preventative,False,,
1d5b12c54ae52816d0d0577e17cbbc4def59d247,38a06e86cf487f9483729920ed59c7aa182ab22c,antirez,antirez@gmail.com,Wed Jun 11 16:25:17 2014 +0200,1402496717,Cluser test: write multiple keys in unit 03.The write-failover-read test is better if we write 100 keys so that wenare sure all the nodes are affected by the write.n,8.0,4.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,97.0,3.0,1.026863425925926,7182.0,1.9738393390516336,540.0,Preventative,False,,
38a06e86cf487f9483729920ed59c7aa182ab22c,96e0fe6232afabff501bc72d3978a157ead7f359,antirez,antirez@gmail.com,Thu Jun 12 15:51:55 2014 +0200,1402581115,"Fix semantics of Lua calls to SELECT.Lua scripts are executed in the context of the currently selectedndatabase (as selected by the caller of the script).nnHowever Lua scripts are also free to use the SELECT command in order tonaffect other DBs. When SELECT is called frm Lua, the old behavior, beforenthis commit, was to automatically set the Lua caller selected DB to thenlast DB selected by Lua. See for example the following sequence ofncommands:nnSELECT 0nSET x 10nEVAL redis.call('select','1') 0nSET x 20nnBefore this commit after the execution of this sequence of commands,nwe'll have x=10 in DB 0, and x=20 in DB 1.nnBecause of the problem above, there was a bug affecting replication ofnLua scripts, because of the actual implementation of replication. It wasnpossible to fix the implementation of Lua scripts in order to fix thenissue, but looking closely, the bug is the consequence of the behaviornof Lua ability to set the caller's DB.nnUnder the old semantics, a script selecting a different DB, has no simplenways to restore the state and select back the previously selected DB.nMoreover the script auhtor must remember that the restore is needed,notherwise the new commands executed by the caller, will be executed innthe context of a different DB.nnSo this commit fixes both the replication issue, and this hard-to-usensemantics, by removing the ability of Lua, after the script execution,nto force the caller to switch to the DB selected by the Lua script.nnThe new behavior of the previous sequence of commadns is to just setnX=20 in DB 0. However Lua scripts are still capable of writing / readingnfrom different DBs if needed.nnWARNING: This is a semantical change that will break programs that arenconceived to select the client selected DB via Lua scripts.nnThis fixes issue #1811.n",8.0,5.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3912435636292557,12.0,818.0,130.0,1.5247395833333337,7183.5,1.5682410406232832,541.0,Corrective,True,,
96e0fe6232afabff501bc72d3978a157ead7f359,aa19fd612b39b0270434f4cd049769680dfc74bc,antirez,antirez@gmail.com,Thu Jun 12 16:20:30 2014 +0200,1402582830,Scripting: regression test for issue #1811.,22.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,479.0,36.0,0.01984953703703704,7185.0,51.37900874635569,542.0,None,False,,
aa19fd612b39b0270434f4cd049769680dfc74bc,56d26c23801b53458dfe8ac614106a9ab71473f1,antirez,antirez@gmail.com,Mon Jun 16 10:43:05 2014 +0200,1402908185,"Client types generalized.Because of output buffer limits Redis internals had this idea of type ofnclients: normal, pubsub, slave. It is possible to set different outputnbuffer limits for the three kinds of clients.nnHowever all the macros and API were named after output buffer limitnclasses, while the idea of a client type is a generic one that can benreused.nnThis commit does two things:nn1) Rename the API and defines with more general names.n2) Change the class of clients executing the MONITOR command from slaven   to normal.nn2 is a good idea because you want to have very special settings fornslaves, that are not a good idea for MONITOR clients that are insteadnnormal clients even if they are conceptually slave-alike (since it is anpush protocol).nnThe backward-compatibility breakage resulting from 2 is considered tonbe minimal to care, since MONITOR is a debugging command, and becausenanyway this change is not going to break the format or the behavior, butnjust when a connection is closed on big output buffer issues.n",38.0,37.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,2.0,2.0,1.8477046155754084,12.0,1848.0,1383.0,23.126009259259266,7188.0,1.0177634030261768,3255.0,None,False,,
56d26c23801b53458dfe8ac614106a9ab71473f1,f26f79ea3725a37cefad7ad5dd6353b1a92ad8e3,antirez,antirez@gmail.com,Mon Jun 16 14:22:55 2014 +0200,1402921375,"Assign an unique non-repeating ID to each new client.This will be used by CLIENT KILL and is also a good way to ensure angiven client is still the same across CLIENT LIST calls.nnThe output of CLIENT LIST was modified to include the new ID, but thisnchange is considered to be backward compatible as the API does not implynyou can do positional parsing, since each filed as a different name.n",6.0,1.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.3787834934861758,12.0,2187.0,1109.0,0.15266203703703704,7192.0,5.0030326004548895,3258.0,Feature Addition,False,,
f26f79ea3725a37cefad7ad5dd6353b1a92ad8e3,e7affd266c4884ce4fc60e567e3aae55cac49828,antirez,antirez@gmail.com,Mon Jun 16 14:24:28 2014 +0200,1402921468,New features for CLIENT KILL.,59.0,13.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.10559103637519526,12.0,1557.5,617.0,0.0010763888888888887,7194.5,697.7741935483873,3260.0,Feature Addition,False,,
e7affd266c4884ce4fc60e567e3aae55cac49828,e06b3819ea61727fc2312e17d2038736d3428fb7,antirez,antirez@gmail.com,Mon Jun 16 14:28:23 2014 +0200,1402921703,CLIENT KILL: fix closing link of the current client.,6.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1712.0,183.0,0.0027199074074074074,7196.0,368.6595744680851,3261.0,None,False,,
e06b3819ea61727fc2312e17d2038736d3428fb7,bb2011d992cebbfaa94d099c043c55f2342690cb,antirez,antirez@gmail.com,Mon Jun 16 14:50:15 2014 +0200,1402923015,"CLIENT KILL API modified.Added a new SKIPME option that is true by default, that prevents thenclient sending the command to be killed, unless SKIPME NO is sent.n",39.0,21.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1717.0,184.0,0.015185185185185184,7197.0,66.85365853658537,3262.0,Feature Addition,False,,
bb2011d992cebbfaa94d099c043c55f2342690cb,2c175912249ffabb2ffb60bae618701e8476a7b8,antirez,antirez@gmail.com,Tue Jun 17 11:03:21 2014 +0200,1402995801,"Sentinel: send SLAVEOF with MULTI, CLIENT KILL, CONFIG REWRITE.This implements the new Sentinel-Client protocol for the Sentinel part:nnow instances are reconfigured using a transaction that ensures that thenconfig is rewritten in the target instance, and that clients lose thenconnection with the instance, in order to be forced to: ask Sentinel,nreconnect to the instance, and verify the instance role with the newnROLE command.n",37.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3762.0,152.0,19.803657407407407,7198.0,1.0504957230590122,3263.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
2c175912249ffabb2ffb60bae618701e8476a7b8,20c2a38ad0b8ac54a0eef165bc4e1b58e599a7b1,Matt Stancliff,matt@genges.com,Tue Jun 17 10:12:57 2014 -0400,1403014377,"Add SIGINT handler to cli --intrinsic-latencyIf we run a long latency session and want to Ctrl-C out of it,nit's nice to still get the summary output at the end.n",8.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1963.0,103.0,25.84149305555556,44.0,1.0386974544330756,40.0,Feature Addition,False,,
2c175912249ffabb2ffb60bae618701e8476a7b8 20c2a38ad0b8ac54a0eef165bc4e1b58e599a7b1,3a482689c510bf8f2c8daca3ddd15af14ab036ac,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 17 23:38:02 2014 +0200,1403041082,Merge pull request #1658 from mattsta/redis-cli-latency-clean-interruptAdd SIGINT handler to cli --intrinsic-latency,,,,,,,,,,,,,,,Merge,False,,
3a482689c510bf8f2c8daca3ddd15af14ab036ac,9f8dcfe69a63e9b8436dd3aa332deb2ba869a43a,Alex Suraci,suraci.alex@gmail.com,Tue Jun 17 21:59:12 2014 -0700,1403067552,add missing signal.h include,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1970.0,104.0,0.6154513888888888,0.0,0.0,0.0,Feature Addition,False,,
3a482689c510bf8f2c8daca3ddd15af14ab036ac 9f8dcfe69a63e9b8436dd3aa332deb2ba869a43a,3f8865bcdc26c52a80b97e32c6f3dc4e37c91d45,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 18 09:31:02 2014 +0200,1403076662,Merge pull request #1822 from vito/patch-1add missing signal.h include,,,,,,,,,,,,,,,Merge,False,,
3f8865bcdc26c52a80b97e32c6f3dc4e37c91d45,f7d9827330b7ddabb6dc53a06c154c34b2c6ad6c,Matt Stancliff,matt@genges.com,Wed Jun 18 08:10:04 2014 -0400,1403093404,Add correct exit value to failed tests,2.0,0.0,"tests/cluster/run.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER",2.0,1.0,2.0,1.0,12.0,23.0,6.0,48.40475115740741,45.5,1.015826257707884,5.0,Corrective,True,,
3f8865bcdc26c52a80b97e32c6f3dc4e37c91d45 f7d9827330b7ddabb6dc53a06c154c34b2c6ad6c,36bbfeef7bbc34b807b7ae3f89b4b2fce5104f06,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 18 14:59:43 2014 +0200,1403096383,Merge pull request #1824 from mattsta/fix-test-error-signalAdd correct exit value to failed tests,,,,,,,,,,,,,,,Merge,False,,
36bbfeef7bbc34b807b7ae3f89b4b2fce5104f06,9162b5f8f9e387b793d46a02f9ef980159851807,antirez,antirez@gmail.com,Wed Jun 18 15:07:08 2014 +0200,1403096828,"Test: tcl client, unset deferred var on close.",1.0,0.0,"tests/support/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,254.0,11.0,35.61982638888889,7199.0,1.0280742524986572,543.0,Preventative,False,,
9162b5f8f9e387b793d46a02f9ef980159851807,670d164fbe60b5f6018ea6cb7a1c778f838ea755,antirez,antirez@gmail.com,Wed Jun 18 15:52:14 2014 +0200,1403099534,Test: Tcl client initial support for automatic reconnection.,53.0,14.0,"tests/support/redis.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,255.0,12.0,0.031319444444444434,7200.0,32.92904656319291,544.0,Preventative,False,,
670d164fbe60b5f6018ea6cb7a1c778f838ea755,5260ce1260803f5153e33e66014c60d7b6f855ab,antirez,antirez@gmail.com,Wed Jun 18 15:54:55 2014 +0200,1403099695,Sentienl/Redis test: enable link reconnection in instances.tcl.,6.0,2.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,403.0,4.0,8.024537037037037,7201.0,1.1246177811111753,545.0,Preventative,False,,
5260ce1260803f5153e33e66014c60d7b6f855ab,1c343ec29f49bbe8c83a61b1c5c10d5ec3c1ca8f,antirez,antirez@gmail.com,Wed Jun 18 15:54:55 2014 +0200,1403099695,Test: use higher level redis.tcl proc to read replies.,3.0,3.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,772.0,30.0,68.64069444444445,7202.0,1.0145686171751855,546.0,Preventative,False,,
1c343ec29f49bbe8c83a61b1c5c10d5ec3c1ca8f,94bc467328cfaf9f8561e146fda1dfcc91f5c70e,antirez,antirez@gmail.com,Thu Jun 19 10:28:27 2014 +0200,1403166507,"Sentinel: handle SRI_PROMOTED flag correctly.Lack of check of the SRI_PROMOTED flag caused Sentienl to act with thenpromoted slave turned into a master during failover like if it was annormal instance.nnNormally this problem was not apparent because during real failovers thenold master is down so the bugged code path was not entered, however withnmanual failovers via the SENTINEL FAILOVER command, the problem wasneasily triggered.nnThis commit prevents promoted slaves from getting reconfigured, moreovernwe now explicitly check that during a failover the slave turning into anmaster is the one we selected for promotion and not a different one.n",6.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3794.0,153.0,1.9757638888888889,7203.0,1.5061333520790132,3264.0,None,False,,
94bc467328cfaf9f8561e146fda1dfcc91f5c70e,f16ad11c712dae011463b563cab6b512f5c8169c,antirez,antirez@gmail.com,Thu Jun 19 10:32:38 2014 +0200,1403166758,Sentinel test: add manual failover test.,44.0,0.0,"tests/sentinel/tests/05-manual.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7204.0,0.0,547.0,Preventative,False,,
f16ad11c712dae011463b563cab6b512f5c8169c,41f12ac988e0e65e045bda9e90bc44a42ff58611,antirez,antirez@gmail.com,Thu Jun 19 15:17:06 2014 +0200,1403183826,"Sentinel: send hello messages ASAP after config change.Eventual configuration convergence is guaranteed by our periodic hellonmessages to all the instances, however when there are important noticesnto share, better make a phone call. With this commit we force an hellonmessage to other Sentinal and Redis instances within the next 100nmilliseconds of a config update, which is practically better thannwaiting a few seconds.n",35.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3796.0,154.0,0.2004513888888889,7205.0,5.9887406894162485,3265.0,None,False,,
41f12ac988e0e65e045bda9e90bc44a42ff58611,d06d8d6ffabf92914cb4f640ce3000a63d22c3ad,antirez,antirez@gmail.com,Thu Jun 19 15:56:28 2014 +0200,1403186188,"Sentinel test: unit 02, avoid some time related false positives.",10.0,9.0,"tests/sentinel/tests/02-slaves-reconf.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,83.0,1.0,56.200069444444466,7206.0,1.0177935723191327,548.0,Preventative,False,,
d06d8d6ffabf92914cb4f640ce3000a63d22c3ad,f62dfa0f50f70e4651201b5803aa5c6f7f43721c,antirez,antirez@gmail.com,Thu Jun 19 15:58:45 2014 +0200,1403186325,Sentinel test: tolerate larger delays in init tests.,3.0,3.0,"tests/sentinel/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,67.0,1.0,56.2016550925926,7207.0,1.0177930702993088,549.0,Preventative,False,,
f62dfa0f50f70e4651201b5803aa5c6f7f43721c,22d17bc14f06112c27d54b0bb7768ee53e9732c5,antirez,antirez@gmail.com,Fri Jun 20 09:32:47 2014 +0200,1403249567,Cluster: clear NOADDR flag when updating node address.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4498.0,392.0,9.661863425925926,7208.0,1.1034997035164742,3266.0,None,False,,
22d17bc14f06112c27d54b0bb7768ee53e9732c5,fe596d67e3c871cb13b4c909cb4ec435dd738cd8,antirez,antirez@gmail.com,Fri Jun 20 14:53:47 2014 +0200,1403268827,Jemalloc update script added.,9.0,0.0,"deps/update-jemalloc.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7209.0,0.0,550.0,Feature Addition,False,,
fe596d67e3c871cb13b4c909cb4ec435dd738cd8,fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,antirez,antirez@gmail.com,Fri Jun 20 14:59:18 2014 +0200,1403269158,"Jemalloc updated to 3.6.0.Not a single bug in about 3 months, and our previous version wasntoo old (3.2.0).n",16889.0,5123.0,"deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/pprof,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/coverage.sh,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.txt,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_unnamespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/public_namespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/public_unnamespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/quarantine.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_mangle.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_protos.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_rename.sh,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/ALLOCM_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/ALLOCM_ARENA.exp,CAS_DELIMITER,deps/jemalloc/test/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/aligned_alloc.exp,CAS_DELIMITER,deps/jemalloc/test/allocated.c,CAS_DELIMITER,deps/jemalloc/test/allocated.exp,CAS_DELIMITER,deps/jemalloc/test/allocm.c,CAS_DELIMITER,deps/jemalloc/test/allocm.exp,CAS_DELIMITER,deps/jemalloc/test/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/bitmap.exp,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-alti.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params11213.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params1279.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params132049.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params19937.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params216091.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params2281.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params4253.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params44497.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params607.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-params86243.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-sse2.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT.h,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test_defs.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/math.h,CAS_DELIMITER,deps/jemalloc/test/include/test/mq.h,CAS_DELIMITER,deps/jemalloc/test/include/test/mtx.h,CAS_DELIMITER,deps/jemalloc/test/include/test/test.h,CAS_DELIMITER,deps/jemalloc/test/include/test/thd.h,CAS_DELIMITER,deps/jemalloc/test/integration/MALLOCX_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/integration/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocated.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocm.c,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/mremap.c,CAS_DELIMITER,deps/jemalloc/test/integration/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocm.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.c,CAS_DELIMITER,deps/jemalloc/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/mremap.c,CAS_DELIMITER,deps/jemalloc/test/mremap.exp,CAS_DELIMITER,deps/jemalloc/test/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/posix_memalign.exp,CAS_DELIMITER,deps/jemalloc/test/rallocm.c,CAS_DELIMITER,deps/jemalloc/test/rallocm.exp,CAS_DELIMITER,deps/jemalloc/test/src/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/src/math.c,CAS_DELIMITER,deps/jemalloc/test/src/mtx.c,CAS_DELIMITER,deps/jemalloc/test/src/test.c,CAS_DELIMITER,deps/jemalloc/test/src/thd.c,CAS_DELIMITER,deps/jemalloc/test/test.sh.in,CAS_DELIMITER,deps/jemalloc/test/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/thread_arena.exp,CAS_DELIMITER,deps/jemalloc/test/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/thread_tcache_enabled.exp,CAS_DELIMITER,deps/jemalloc/test/unit/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/unit/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/unit/ckh.c,CAS_DELIMITER,deps/jemalloc/test/unit/hash.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.c,CAS_DELIMITER,deps/jemalloc/test/unit/mallctl.c,CAS_DELIMITER,deps/jemalloc/test/unit/math.c,CAS_DELIMITER,deps/jemalloc/test/unit/mq.c,CAS_DELIMITER,deps/jemalloc/test/unit/mtx.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.h,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum_a.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum_b.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_idump.c,CAS_DELIMITER,deps/jemalloc/test/unit/ql.c,CAS_DELIMITER,deps/jemalloc/test/unit/qr.c,CAS_DELIMITER,deps/jemalloc/test/unit/quarantine.c,CAS_DELIMITER,deps/jemalloc/test/unit/rb.c,CAS_DELIMITER,deps/jemalloc/test/unit/rtree.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats.c,CAS_DELIMITER,deps/jemalloc/test/unit/tsd.c,CAS_DELIMITER,deps/jemalloc/test/unit/util.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.c,CAS_DELIMITER",150.0,1.0,11.0,6.140052840636844,10.0,287.62,181.0,354.43532631172815,7284.5,1.0000705347080086,700.0,Corrective,True,,
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,7970d5399740d001d746cd95ddd5e159c450c0e6,antirez,antirez@gmail.com,Sat Jun 21 11:17:18 2014 +0200,1403342238,ROLE command: array len fixed for slave output.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1896.0,114.0,13.735439814814816,7360.0,1.072804366913786,3267.0,None,False,,
7970d5399740d001d746cd95ddd5e159c450c0e6,fb2f637c4a48521e4ea4191f9e101d09130ccac9,antirez,antirez@gmail.com,Sat Jun 21 11:39:43 2014 +0200,1403343583,Allow to call ROLE in LOADING state.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3451.0,495.0,4.886666666666667,7361.0,1.204638472032742,3268.0,None,False,,
fb2f637c4a48521e4ea4191f9e101d09130ccac9,72980c7005f0c7ee1ea97a25229af3a7bc6edd96,Matt Stancliff,matt@genges.com,Sat Jun 21 11:14:05 2014 -0400,1403363645,Cancel SHUTDOWN if initial AOF is being writtenFixes #1826 (and many other reports of the same problem)n,6.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3451.0,496.0,0.2321990740740741,47.0,5.306649386900609,41.0,Corrective,True,,
fb2f637c4a48521e4ea4191f9e101d09130ccac9,1206bdf13f3afbc242a52ee1ce190ef48432fa90,antirez,antirez@gmail.com,Mon Jun 23 09:08:51 2014 +0200,1403507331,Basic tests for the ROLE command.,17.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,164.0,21.0,388.89245370370367,7362.0,1.002571405000216,550.0,Preventative,False,True,"[""1f0c0df4a8e526728c51fb351703051e30068fee""]"
1206bdf13f3afbc242a52ee1ce190ef48432fa90 72980c7005f0c7ee1ea97a25229af3a7bc6edd96,af7647b20d42f0544944ca83492d5353617bb2b8,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 23 10:07:13 2014 +0200,1403510833,Merge pull request #1829 from mattsta/stop-aof-datalossCancel SHUTDOWN if initial AOF is being written,,,,,,,,,,,,,,,Merge,False,,
1206bdf13f3afbc242a52ee1ce190ef48432fa90,ef897a41e80eb03a18d131d6a3c4d1d868f38ea0,Matt Stancliff,matt@genges.com,Sat Jun 21 11:14:05 2014 -0400,1403363645,Cancel SHUTDOWN if initial AOF is being writtenFixes #1826 (and many other reports of the same problem)n,6.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3457.0,497.0,0.0,48.0,0.0,42.0,Corrective,True,,
ef897a41e80eb03a18d131d6a3c4d1d868f38ea0,28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,Matt Stancliff,matt@genges.com,Thu Apr 24 15:14:54 2014 -0400,1398366894,hiredis: Update to latest versionThis is hiredis f225c276be7fd0646019b51023e3f41566633dfennThis update includes all changes that diverged inside of Redis sincenthe last update.  This version also allows optional source addressnbinding for connections which we need for some Sentinel deployments.n,941.0,407.0,"deps/hiredis/.gitignore,CAS_DELIMITER,deps/hiredis/.travis.yml,CAS_DELIMITER,deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/libuv.h,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/example-ae.c,CAS_DELIMITER,deps/hiredis/example-libev.c,CAS_DELIMITER,deps/hiredis/example-libevent.c,CAS_DELIMITER,deps/hiredis/example.c,CAS_DELIMITER,deps/hiredis/examples/example-ae.c,CAS_DELIMITER,deps/hiredis/examples/example-libev.c,CAS_DELIMITER,deps/hiredis/examples/example-libevent.c,CAS_DELIMITER,deps/hiredis/examples/example-libuv.c,CAS_DELIMITER,deps/hiredis/examples/example.c,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/zmalloc.h,CAS_DELIMITER",26.0,1.0,3.0,4.179839078309998,13.0,208.38461538461544,95.0,477.83493322649565,61.5,1.0002108708614823,25.0,None,False,,
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,1506c64c8b8b4a964f331f502a5d0006dd3077f0,antirez,antirez@gmail.com,Mon Jun 23 11:43:37 2014 +0200,1403516617,Dummy zmalloc.h restored into deps/hiredis.,13.0,0.0,"deps/hiredis/zmalloc.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,0.0,2.0,59.60327546296296,7363.0,1.0167776014360383,701.0,None,False,,
1506c64c8b8b4a964f331f502a5d0006dd3077f0,d830dcb12d0a99bf5488cb58c3a541b9387dcfb0,Matt Stancliff,matt@genges.com,Thu Apr 24 15:19:06 2014 -0400,1398367146,"Add REDIS_BIND_ADDR access macroWe need to access (bindaddr[0] || NULL) in a few places, so centralizenaccess with a nice macro.n",4.0,2.0,"src/cluster.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,12.0,2974.0,829.0,-54.61078125,75.5,0.9865740799269708,44.0,Feature Addition,False,,
d830dcb12d0a99bf5488cb58c3a541b9387dcfb0,5cd83ef53984ea2d5fcef4d48cfa0b4927637c27,Matt Stancliff,matt@genges.com,Thu Apr 24 15:22:52 2014 -0400,1398367372,Sentinel: bind source addressSome deployments need traffic sent from a specific address.  Thisnchange uses the same policy as Cluster where the first listed bindaddrnbecomes the source address for outgoing Sentinel communication.nnFixes #1667n,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3830.0,155.0,-55.745995370370366,77.0,0.9820614917115372,45.0,None,False,,
5cd83ef53984ea2d5fcef4d48cfa0b4927637c27,5c7286efbde3ac2a584aa6cc8b0617c74a1adce0,antirez,antirez@gmail.com,Mon Jun 23 11:42:47 2014 +0200,1403516567,Use Redis updated sds.c for deps/hiredis.,269.0,76.0,"deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.24494385438438504,13.0,504.0,10.0,59.60269675925926,7364.5,1.012583323251787,703.0,None,False,,
5c7286efbde3ac2a584aa6cc8b0617c74a1adce0,be8f4d49d4015260e1fd14506dbf17ee3797cc78,antirez,antirez@gmail.com,Mon Jun 23 11:50:24 2014 +0200,1403517024,Silence different signs comparison warning in sds.c.,2.0,2.0,"deps/hiredis/sds.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER",2.0,2.0,2.0,1.0,13.0,1094.0,47.0,27.902685185185184,7366.5,95.5385001925659,3269.0,None,False,,
be8f4d49d4015260e1fd14506dbf17ee3797cc78 af7647b20d42f0544944ca83492d5353617bb2b8,54c46bafa36fc997d55695439b01f7abe906cd0d,antirez,antirez@gmail.com,Mon Jun 23 11:56:16 2014 +0200,1403517376,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
54c46bafa36fc997d55695439b01f7abe906cd0d,e3bae84606389dadaff03c495d4ec37c306af3a1,antirez,antirez@gmail.com,Mon Jun 23 12:07:41 2014 +0200,1403518061,Sentinel implementation of ROLE.,21.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,3830.0,156.0,59.61445601851853,7368.0,1.0167744548350717,3270.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""0f0f787a37e6411a02d9a992ecc7bb8af7decf9a"", ""9d632230b65f978758721275bd8abf874361ba4d""]"
e3bae84606389dadaff03c495d4ec37c306af3a1,e21e0ba3dcd67d9048ecea9be5398b2a791e7bc5,antirez,antirez@gmail.com,Mon Jun 23 14:04:09 2014 +0200,1403525049,"Sentinel test: more correct sentinels config reset.In the initialization test for each instance we used to unregister thenold master and register it again to clear the config.nHowever there is a race condition doing this: as soon as we unregisternand re-register mymaster, another Sentinel can update the newnconfiguration with the old state because of gossip hello messages.nnSo the correct procedure is instead, unregister mymaster from all thensentinel instances, and re-register it everywhere again.n",6.0,1.0,"tests/sentinel/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,67.0,2.0,3.920416666666666,7369.0,1.2550749282601763,551.0,Preventative,False,,
e21e0ba3dcd67d9048ecea9be5398b2a791e7bc5,46319094dba97e1e5627ad52687d8d9dab26c070,antirez,antirez@gmail.com,Tue Jun 24 12:49:18 2014 +0200,1403606958,Old form of CLIENT KILL should still allow suicide.,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1735.0,185.0,7.9160069444444465,7370.0,1.1263263166667397,3271.0,None,False,,
46319094dba97e1e5627ad52687d8d9dab26c070,f29b12d0bf368ef6a7e12baa0ce11dd7eaa149bf,antirez,antirez@gmail.com,Wed Jun 25 11:28:57 2014 +0200,1403688537,"Cluster: myself->ip autodiscovery.Instead of having an hardcoded IP address in the node configuration, wenautodiscover it via MEET messages for automatic update when the node isnrestarted with a different IP address.nnThis mechanism was discussed in the context of PR #1782.n",25.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4498.0,394.0,61.590173611111105,7371.0,1.0162363562459515,3272.0,None,False,,
f29b12d0bf368ef6a7e12baa0ce11dd7eaa149bf,e14829de3025ffb0d3294e5e5a1553afd9f10b60,Matt Stancliff,matt@genges.com,Mon Jun 16 12:36:13 2014 -0400,1402936573,"Cluster: Add CLUSTER SLOTS commandCLUSTER SLOTS returns a Redis-formatted mapping fromnslot ranges to IP/Port pairs serving that slot range.nnThe outer return elements group return values by slot ranges.nnThe first two entires in each result are the min and max slots for the range.nnThe third entry in each result is guaranteed to be eithernan IP/Port of the master for that slot range - OR - nullnif that slot range, for some reason, has no masternnThe 4th and higher entries in each result are replica instancesnfor the slot range.nnOutput comparison:n127.0.0.1:7001> cluster nodesnf853501ec8ae1618df0e0f0e86fd7abcfca36207 127.0.0.1:7001 myself,master - 0 0 2 connected 4096-8191n5a2caa782042187277647661ffc5da739b3e0805 127.0.0.1:7005 slave f853501ec8ae1618df0e0f0e86fd7abcfca36207 0 1402622415859 6 connectedn6c70b49813e2ffc9dd4b8ec1e108276566fcf59f 127.0.0.1:7007 slave 26f4729ca0a5a992822667fc16b5220b13368f32 0 1402622415357 8 connectedn2bd5a0e3bb7afb2b56a2120d3fef2f2e4333de1d 127.0.0.1:7006 slave 32adf4b8474fdc938189dba00dc8ed60ce635b0f 0 1402622419373 7 connectedn5a9450e8279df36ff8e6bb1c139ce4d5268d1390 127.0.0.1:7000 master - 0 1402622418872 1 connected 0-4095n32adf4b8474fdc938189dba00dc8ed60ce635b0f 127.0.0.1:7002 master - 0 1402622419874 3 connected 8192-12287n5db7d05c245267afdfe48c83e7de899348d2bdb6 127.0.0.1:7004 slave 5a9450e8279df36ff8e6bb1c139ce4d5268d1390 0 1402622417867 5 connectedn26f4729ca0a5a992822667fc16b5220b13368f32 127.0.0.1:7003 master - 0 1402622420877 4 connected 12288-16383nn127.0.0.1:7001> cluster slotsn1) 1) (integer) 0n   2) (integer) 4095n   3) 1) 127.0.0.1n  2) (integer) 7000n   4) 1) 127.0.0.1n  2) (integer) 7004n2) 1) (integer) 12288n   2) (integer) 16383n   3) 1) 127.0.0.1n  2) (integer) 7003n   4) 1) 127.0.0.1n  2) (integer) 7007n3) 1) (integer) 4096n   2) (integer) 8191n   3) 1) 127.0.0.1n  2) (integer) 7001n   4) 1) 127.0.0.1n  2) (integer) 7005n4) 1) (integer) 8192n   2) (integer) 12287n   3) 1) 127.0.0.1n  2) (integer) 7002n   4) 1) 127.0.0.1n  2) (integer) 7006n",71.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4523.0,395.0,-8.703287037037038,78.0,0.8851008824890554,46.0,None,False,,
e14829de3025ffb0d3294e5e5a1553afd9f10b60,a6fe4ca3214a8ff5b17d73bcd3c293454b6ad15c,antirez,antirez@gmail.com,Wed Jun 25 15:08:33 2014 +0200,1403701713,CLUSTER SLOTS: main loop should skip only slaves and zero slot masters.,3.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4594.0,396.0,8.855787037037038,7372.0,1.1129205112789815,3273.0,None,False,,
a6fe4ca3214a8ff5b17d73bcd3c293454b6ad15c,75c57d53ea82674b16782a5e937e467bbdca985f,antirez,antirez@gmail.com,Wed Jun 25 15:19:35 2014 +0200,1403702375,"CLUSTER SLOTS: don't output failing slaves.While we have to output failing masters in order to provide an accuratenmap (that may be the one of a Redis Cluster in down state because notnall slots are served by a working master), to provide slaves in FAILnstate is not a good idea since those are not necesarely needed, and thenclient will likely incur into a latency penalty trying to connect with anslave which is down.nnNote that this means that CLUSTER SLOTS does not provide a *complete*nmap of slaves, however this would not be of any help since slaves may benadded later, and a client that needs to scale reads and requires tonstay updated with the list of slaves, need to do a refresh of the mapnfrom time to time, anyway.n",11.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,4594.0,397.0,0.0076620370370370375,7373.0,131.51359516616316,3274.0,None,False,,
75c57d53ea82674b16782a5e937e467bbdca985f,9be3ee8283cffbb6cecc544a54db6c44a0e9cd45,antirez,antirez@gmail.com,Wed Jun 25 15:30:34 2014 +0200,1403703034,Make unstable branch version unique and distinguishable.,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,21.0,394.15729166666665,7374.0,1.002537058228129,3275.0,None,False,,
9be3ee8283cffbb6cecc544a54db6c44a0e9cd45,f9bca13a1a216c27509a6fb910f71c039dd60c7a,Matt Stancliff,matt@genges.com,Thu Jun 26 08:51:13 2014 -0400,1403787073,Use predefined macro for used_memory() update,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,351.0,24.0,94.07700231481482,79.0,1.0106295903929172,47.0,None,False,,
f9bca13a1a216c27509a6fb910f71c039dd60c7a,a953c883815bada9365504940af52306d9a413ea,Matt Stancliff,matt@genges.com,Thu Jun 26 08:52:53 2014 -0400,1403787173,"Allow atomic memory count update with C11 builtinsFrom mailing list post https://groups.google.com/forum/#!topic/redis-db/QLjiQe4D7LAnnIn zmalloc.c the following primitives are currently usednto synchronize access to single global variable:n__sync_add_and_fetchn__sync_sub_and_fetchnnIn some architectures such as powerpc these primitives are overheadnintensive. More efficient C11 __atomic builtins are available withnnewer GCC versions, seenhttp://gcc.gnu.org/onlinedocs/gcc-4.8.2/gcc/_005f_005fatomic-Builtins.html#_005f_005fatomic-BuiltinsnnBy substituting the following  __atomicu00e2u0080u00a6 builtins:n__atomic_add_fetchn__atomic_sub_fetchnnthe performance improvement on certain architectures such as powerpc can be significant,naround 10% to 15%, over the implementation using __sync builtins while there is only slight uptick onnIntel architectures because it was already enforcing Intel Strongly ordered memory semantics.nnThe selection of __atomic built-ins can be predicated on the definition of ATOMIC_RELAXEDnwhich Is available on in gcc 4.8.2 and later versions.n",5.0,2.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,351.0,25.0,0.0011574074074074071,80.0,865.0,48.0,None,False,,
a953c883815bada9365504940af52306d9a413ea,a3e7a665ad62ab276b098c3c10460f111ea81200,Matt Stancliff,matt@genges.com,Thu Jun 26 08:55:47 2014 -0400,1403787347,"Allow __powerpc__ to define HAVE_ATOMIC tooFrom mailing list post https://groups.google.com/forum/#!topic/redis-db/D3k7KmJmYgMnnIn the file u00e2u0080u009cconfig.hu00e2u0080u009d, the definition HAVE_ATOMIC is used to indicatenif an architecture on which redis is implemented supports atomicnsynchronization primitives.  Powerpc  supports atomic synchronizationnprimitives, however, it is not listed as one of the architecturesnsupported in config.h. This patch  adds the __powerpc__ to the list ofnarchitectures supporting these primitives. The improvement of redisndue to the atomic synchronization on powerpc is significant,naround 30% to 40%, over the default implementation using pthreads.nnThis proposal adds __powerpc__ to the list of architectures designatednto support atomic builtins.n",1.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,195.0,26.0,51.69625,81.0,1.0193437628454676,49.0,None,False,,
9be3ee8283cffbb6cecc544a54db6c44a0e9cd45 a3e7a665ad62ab276b098c3c10460f111ea81200,f86798ba6b3a0fb34109c55141c18997b55266b6,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 26 15:13:49 2014 +0200,1403788429,Merge pull request #1838 from mattsta/powerpc-fixesPowerPC compile-time improvements,,,,,,,,,,,,,,,Merge,False,,
f86798ba6b3a0fb34109c55141c18997b55266b6,e7887e60609be05f4390c4671d910ff700705aae,antirez,antirez@gmail.com,Thu Jun 26 16:00:24 2014 +0200,1403791224,"Test: hopefully more robust PSYNC test.This is supposed to fix issue #1417, but we'll know if this is enoughnonly after a couple of runs of the CI test without false positives.n",16.0,4.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,105.0,2.0,413.13078703703695,7375.0,1.0024205409797031,552.0,Preventative,False,True,"[""42231117a735ebb24389435e8a636de02565c07f""]"
e7887e60609be05f4390c4671d910ff700705aae,42231117a735ebb24389435e8a636de02565c07f,antirez,antirez@gmail.com,Thu Jun 26 18:30:03 2014 +0200,1403800203,Remove infinite loop from PSYNC test.Added for debugging and forgot there.n,2.0,4.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,117.0,3.0,0.1039236111111111,7376.0,10.622452388907453,553.0,Corrective,True,,
42231117a735ebb24389435e8a636de02565c07f,97f1fc65cf0331a367c2075c3adf09964dda2556,antirez,antirez@gmail.com,Thu Jun 26 18:34:57 2014 +0200,1403800497,"CLIENT KILL: don't kill the master as a normal client.Technically the problem is due to the client type API that does notnreturn a special value for the master, however fixing it locally in thenCLIENT KILL command is better currently because otherwise we wouldnintroduce a new output buffer limit class as a side effect.n",3.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1736.0,186.0,2.2400347222222217,7377.0,1.4464216514500954,3276.0,None,False,,
97f1fc65cf0331a367c2075c3adf09964dda2556,95b1979c321eb6353f75df892ab8be68cf8f9a77,antirez,antirez@gmail.com,Thu Jun 26 18:48:40 2014 +0200,1403801320,No more trailing spaces in Redis source code.,78.0,78.0,"src/adlist.c,CAS_DELIMITER,src/ae_kqueue.c,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/crc16.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/endianconv.h,CAS_DELIMITER,src/lzf.h,CAS_DELIMITER,src/lzfP.h,CAS_DELIMITER,src/lzf_c.c,CAS_DELIMITER,src/lzf_d.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/pqsort.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/release.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER",28.0,1.0,1.0,4.264264520250138,13.0,1037.0,2483.0,345.84205274470906,7391.5,1.0003877096083298,3304.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1"", ""b6de51206e8fd79269d05f0fed3f396683d75446""]"
95b1979c321eb6353f75df892ab8be68cf8f9a77,1f0c0df4a8e526728c51fb351703051e30068fee,antirez,antirez@gmail.com,Thu Jun 26 22:13:46 2014 +0200,1403813626,Fixed assert conditional in ROLE command test.,1.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,181.0,22.0,3.5450810185185184,7406.0,1.2820810003428067,554.0,Corrective,True,,
1f0c0df4a8e526728c51fb351703051e30068fee,183458f76a0ef579eec3bd8ec1652062fbb111d6,Matt Stancliff,matt@genges.com,Mon Jun 16 23:35:45 2014 -0400,1402976145,"Cluster: Add COMMANDS commandCOMMANDS returns a nested multibulk reply for eachncommand in the command table.  The reply for eachncommand contains:n  - command namen  - arityn  - array of command flagsn  - start key positionn  - end key positionn  - key offset stepn  - optional: if the keys are not deterministic andnRedis uses an internal key evaluation function,nthe 6th field appears and is defined as a statusnreply of: REQUIRES ARGUMENT PARSINGnnCluster clients need to know where the keys are in eachncommand to implement proper routing to cluster nodes.nnRedis commands can have multiple keys, keys at offset steps, or othernissues where you can't always assume the first element afternthe command name is the cluster routing key.nnUsing the information exposed by COMMANDS, client implementationsncan have live, accurate key extraction details for all commands.nnAlso implements COMMANDS INFO [commands...] to return only anspecific set of commands instead of all 160+ commands live in Redis.n",69.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.10928571467638523,13.0,2457.5,937.0,-9.550636574074074,82.5,0.9214712030781348,51.0,None,False,,
183458f76a0ef579eec3bd8ec1652062fbb111d6,9bf6921f3d8d26c3e330b6646b9e6752dfc0a086,antirez,antirez@gmail.com,Fri Jun 27 11:59:48 2014 +0200,1403863188,COMMANDS command: remove static + aesthetic changes.Static was removed since it is needed in order to get symbols in stackntraces. Minor changes in the source code were operated to make it morensimilar to the existing Redis code base.n,18.0,18.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3531.0,500.0,10.266701388888887,7407.0,1.097402267984754,3305.0,None,False,,
9bf6921f3d8d26c3e330b6646b9e6752dfc0a086,7fd0149d3401e9f173097cf1f39b467dd491bdcd,antirez,antirez@gmail.com,Fri Jun 27 12:01:29 2014 +0200,1403863289,COMMANDS command renamed COMMAND.,3.0,3.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,2492.0,940.0,5.134519675925926,7408.5,428.7714623233818,3307.0,None,False,,
7fd0149d3401e9f173097cf1f39b467dd491bdcd,a92ae7774052ebdb305249ac548d5ed4f7887b82,antirez,antirez@gmail.com,Fri Jun 27 12:05:54 2014 +0200,1403863554,"COMMAND: fix argument parsing.This fixes detection of wrong subcommand (that resulted in the defaultnall-commands output instead) and allows COMMAND INFO to be callednwithout arguments (resulting into an empty array) which is useful innprogrammtically generated calls like the following (in Ruby):nnredis.commands(command,info,*mycommands)nnNote: mycommands may be empty.n",12.0,9.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3531.0,502.0,0.0030671296296296297,7410.0,327.0377358490566,3308.0,None,False,,
a92ae7774052ebdb305249ac548d5ed4f7887b82,885b6fc577531b4bb1319ce4a66710b62fa68c84,antirez,antirez@gmail.com,Fri Jun 27 12:11:15 2014 +0200,1403863875,COMMAND COUNT subcommand added.,3.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3534.0,503.0,0.0037152777777777774,7411.0,270.1588785046729,3309.0,Feature Addition,False,,
885b6fc577531b4bb1319ce4a66710b62fa68c84,683f41adf27864987983c6fb4535a8568c288f86,antirez,antirez@gmail.com,Fri Jun 27 12:22:15 2014 +0200,1403864535,DEBUG CMDKEYS moved to COMMAND GETKEYS.,18.0,18.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,2259.0,584.0,15.058067129629633,7412.5,1.0332090050943672,3311.0,Corrective,True,True,"[""10dedc25868c08bb1bf5da8252c8b11ad2ab370d""]"
683f41adf27864987983c6fb4535a8568c288f86,612bc784fca7ca83d6267a5d407daee9d5996b89,antirez,antirez@gmail.com,Mon Jun 30 11:54:13 2014 +0200,1404122053,Test: fix instances.tcl restart_instance abort error.,1.0,1.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,407.0,5.0,11.832847222222226,7414.0,1.0845105139295628,555.0,Preventative,False,,
612bc784fca7ca83d6267a5d407daee9d5996b89,54157bc49ebf7b49a1d2a95c7b09b4e3ce56e2a6,antirez,antirez@gmail.com,Mon Jun 30 12:07:26 2014 +0200,1404122846,"Test: find_available_port: check that cluster port is free as well.The function will only return ports that have also port+10000 free, sonthat Redis Cluster instances can be executed at the returned port.n",6.0,4.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,359.0,19.0,132.72958333333332,7415.0,1.0075341154163695,556.0,Preventative,False,,
54157bc49ebf7b49a1d2a95c7b09b4e3ce56e2a6,0afb7a48c079c083d4efaaec99168538c536c49d,antirez,antirez@gmail.com,Mon Jun 30 16:28:22 2014 +0200,1404138502,Fix Solaris compilation due to ctime_r() call.Introduced in Redis 2.8.10 because of a change in Sentinel.nThis closes issue #1837.n,4.0,0.0,"src/fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,52.0,6.0,711.0853240740739,7416.0,1.0014063009967222,3312.0,Corrective,True,,
0afb7a48c079c083d4efaaec99168538c536c49d,d7a07a20121b409bcba47deb1c0eb9f41c2e8f0f,antirez,antirez@gmail.com,Tue Jul 1 11:30:15 2014 +0200,1404207015,Latency monitor: basic samples collection.,147.0,3.0,"src/Makefile,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/latency.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.4078291824776432,13.0,1050.4,1050.0,20.574363425925924,7419.0,1.0102870166179678,3317.0,None,False,True,"[""6f20482a8695d8f8313caea11927a39ce1c5fdb7""]"
d7a07a20121b409bcba47deb1c0eb9f41c2e8f0f,8612e6de888fe30bd8cfcd0f4ad1979a92434a2f,antirez,antirez@gmail.com,Tue Jul 1 11:43:38 2014 +0200,1404207818,"Latency monitor: collect slow commands.We introduce the distinction between slow and fast commands since thosenare two different sources of latency. An O(1) or O(log N) command withoutnside effects (can't trigger deletion of large objects as a side effect ofnits execution) if delayed is a symptom of inherent latency of the system.nnA non-fast command (commands that may run large O(N) computations) ifndelayed may just mean that the user is executing slow operations.nnThe advices LATENCY should provide in this two different cases arendifferent, so we log the two classes of commands in a separated way.n",78.0,67.0,"src/latency.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.16429466953448724,13.0,1686.0,948.0,0.00929398148148148,7423.0,66.75342465753424,3320.0,None,False,True,"[""27839e5ecb562d9b79e740e2e20f7a6db7270a66""]"
8612e6de888fe30bd8cfcd0f4ad1979a92434a2f,551bee86b42e7c41c9cd550795685eb20b207b88,antirez,antirez@gmail.com,Tue Jul 1 16:04:59 2014 +0200,1404223499,LATENCY SAMPLES implemented.,47.0,1.0,"src/latency.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.4814233606752282,13.0,1706.666666666667,950.0,0.1845910493827161,7426.0,4.244463126699241,3323.0,None,False,,
551bee86b42e7c41c9cd550795685eb20b207b88,753b707d2ad15a4d6588f94ac82ff22b0567d052,antirez,antirez@gmail.com,Tue Jul 1 16:09:02 2014 +0200,1404223742,Latency monitor: command duration is in useconds. Convert.,3.0,3.0,"src/latency.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,1805.5,510.0,0.09355902777777778,7428.5,6.3849960629001865,3325.0,None,False,,
753b707d2ad15a4d6588f94ac82ff22b0567d052,83beaa886cd33e2b08ffb193be27faf7403024ea,antirez,antirez@gmail.com,Tue Jul 1 16:17:33 2014 +0200,1404224253,LATENCY LATEST implemented.,24.0,0.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,137.0,2.0,0.008726851851851852,7430.0,115.58885941644562,3326.0,Preventative,False,,
83beaa886cd33e2b08ffb193be27faf7403024ea,f35abe2ff5d7f0389991aee1d6b4ccec8cb8ecf9,antirez,antirez@gmail.com,Tue Jul 1 17:12:09 2014 +0200,1404227529,Latency monitor: don't add new samples in the same second.Instead we update the old sample with the new latency if it is greater.n,11.0,0.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,161.0,3.0,0.03791666666666667,7431.0,27.37362637362637,3327.0,None,False,,
f35abe2ff5d7f0389991aee1d6b4ccec8cb8ecf9,de88bc63d5eff769a385b1e51bba75997a969177,antirez,antirez@gmail.com,Tue Jul 1 17:19:08 2014 +0200,1404227948,Latency monitor: more hooks around the code.,40.0,5.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.4327651039407343,13.0,2001.0,722.0,22.991377314814812,7433.0,1.014878212995426,3330.0,None,False,,
de88bc63d5eff769a385b1e51bba75997a969177,b809676a9e6b61029d542a1a165385946c55a3fc,antirez,antirez@gmail.com,Tue Jul 1 17:23:59 2014 +0200,1404228239,"Latency monitor turned off by default.It is not a good idea to bloat the code with gettimeofday() calls if theninstance is working well, and turning monitoring on at runtime is anjoke.n",1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1460.0,443.0,0.05486111111111111,7435.0,19.227848101265824,3331.0,None,False,,
b809676a9e6b61029d542a1a165385946c55a3fc,ed4980243a4f98212d79b8f04432c9c80752bc43,antirez,antirez@gmail.com,Wed Jul 2 10:06:58 2014 +0200,1404288418,License added to latency.h.,33.0,0.0,"src/latency.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,42.0,3.0,0.7485648148148148,7436.0,2.335889665409116,3332.0,Feature Addition,False,,
ed4980243a4f98212d79b8f04432c9c80752bc43,cc4df5a6b8b62482dfc3f827d495883db0a1f17f,antirez,antirez@gmail.com,Wed Jul 2 10:13:53 2014 +0200,1404288833,ASCII sparklines generation API.,230.0,1.0,"src/Makefile,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sparkline.c,CAS_DELIMITER,src/sparkline.h,CAS_DELIMITER",4.0,1.0,1.0,0.9057342646022624,13.0,426.25,550.0,0.4120717592592593,7438.5,1.719018422243624,3336.0,None,False,True,"[""cdbe8a6ae1f5adac4513c53173124cd0e7cec8d7""]"
cc4df5a6b8b62482dfc3f827d495883db0a1f17f,e173f7a0e318156efbaefa4e27b02b1da008a337,antirez,antirez@gmail.com,Wed Jul 2 12:27:24 2014 +0200,1404296844,Latency monitor trheshold value is now configurable.This commit adds both support for redis.conf and CONFIG SET/GET.n,35.0,0.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,2.0,2.0,0.9709505944546686,13.0,1340.0,280.0,10.903836805555557,7441.5,1.0540368584375448,3337.0,Feature Addition,False,,
e173f7a0e318156efbaefa4e27b02b1da008a337,1766d91697cae7f28b50f7ec3347b7789549c35f,antirez,antirez@gmail.com,Wed Jul 2 12:40:38 2014 +0200,1404297638,LATENCY LATEST: add the max field.,2.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,172.0,4.0,0.8114467592592592,7443.0,2.232366743214138,3338.0,Preventative,False,,
1766d91697cae7f28b50f7ec3347b7789549c35f,9d4d810861c64106b9ba5d1a8d8e6241b8de469e,antirez,antirez@gmail.com,Wed Jul 2 12:49:14 2014 +0200,1404298154,Free labels in freeSparklineSequence().,4.0,0.0,"src/sparkline.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,172.0,1.0,0.10788194444444443,7444.0,10.269391696169938,3339.0,None,False,,
9d4d810861c64106b9ba5d1a8d8e6241b8de469e,6f20482a8695d8f8313caea11927a39ce1c5fdb7,antirez,antirez@gmail.com,Wed Jul 2 16:14:28 2014 +0200,1404310468,latencyTimeSeries structure max field type fixed.,1.0,1.0,"src/latency.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,75.0,4.0,0.2552083333333333,7445.0,4.918367346938776,3340.0,Corrective,True,,
6f20482a8695d8f8313caea11927a39ce1c5fdb7,aa16f87b87a71f6d70e8f43d62550913f18b64fa,antirez,antirez@gmail.com,Wed Jul 2 16:31:22 2014 +0200,1404311482,LATENCY GRAPH implemented.,66.0,6.0,"src/latency.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/sparkline.c,CAS_DELIMITER,src/sparkline.h,CAS_DELIMITER",4.0,1.0,1.0,0.7876375122674991,13.0,594.0,114.0,1.6203211805555555,7447.5,2.6802346672890023,3344.0,None,False,,
aa16f87b87a71f6d70e8f43d62550913f18b64fa,a53c7340947886b434719dd050d63dd705339cd5,antirez,antirez@gmail.com,Wed Jul 2 16:37:53 2014 +0200,1404311873,LATENCY GRAPH: filling under the curve is more readable.,1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,233.0,6.0,0.004525462962962963,7450.0,221.97186700767259,3345.0,None,False,,
a53c7340947886b434719dd050d63dd705339cd5,53ae687d594890e5f6b93a9f2c3e5aa2199615ae,antirez,antirez@gmail.com,Wed Jul 2 16:45:45 2014 +0200,1404312345,Latency monitor: specialize delayed aof writes events.,16.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1248.0,108.0,0.9768171296296296,7451.0,2.0237330710807253,3346.0,None,False,True,"[""a99766fda1ef6a2594c51fc57080ac1725d0672c""]"
53ae687d594890e5f6b93a9f2c3e5aa2199615ae,a887af34e1b0146d05b374effc27d4a9e2e11d31,antirez,antirez@gmail.com,Wed Jul 2 16:53:44 2014 +0200,1404312824,latencyStartMonitor() modified to avoid warnings.,2.0,0.0,"src/latency.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,75.0,5.0,0.02726851851851852,7452.0,37.6723259762309,3347.0,None,False,,
a887af34e1b0146d05b374effc27d4a9e2e11d31,e3c0125b70476fa256a7b09acf11344a81f3a8d5,antirez,antirez@gmail.com,Wed Jul 2 16:55:34 2014 +0200,1404312934,Properly initialize min/max in latency.c.,1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,233.0,7.0,0.012280092592592592,7453.0,82.43261074458059,3348.0,Feature Addition,False,,
e3c0125b70476fa256a7b09acf11344a81f3a8d5,1f665d6e82bb11454d239e676cfcb96e29651291,antirez,antirez@gmail.com,Wed Jul 2 16:56:08 2014 +0200,1404312968,Cast void* to char* to avoid waring in latencyCommand().,1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,233.0,8.0,0.0003935185185185185,7454.0,2542.1764705882347,3349.0,None,False,,
1f665d6e82bb11454d239e676cfcb96e29651291,f0f9d583add3f37433b0ff84cc1c8491ac8e2713,antirez,antirez@gmail.com,Wed Jul 2 17:04:14 2014 +0200,1404313454,Dependencies updated.,51.0,35.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,126.0,8.0,92.8837962962963,7455.0,1.0107661404881647,3350.0,None,False,,
f0f9d583add3f37433b0ff84cc1c8491ac8e2713,a99766fda1ef6a2594c51fc57080ac1725d0672c,antirez,antirez@gmail.com,Wed Jul 2 17:42:29 2014 +0200,1404315749,Fixed conditional for aof-write-pending-fsync latency event selection.,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1260.0,109.0,0.03939814814814815,7456.0,26.38190364277321,3351.0,Corrective,True,,
a99766fda1ef6a2594c51fc57080ac1725d0672c,57852ff207bbd9d1b4c2f365b8736bbbc42728b6,antirez,antirez@gmail.com,Fri Jul 4 11:51:30 2014 +0200,1404467490,Use fsync instead of aof_fsync in final AOF sync.This happens in the child process so we don't care about latency:nbetter to sync metadata as well.n,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1260.0,110.0,1.7562615740740741,7457.0,1.5693912653798248,3352.0,None,False,,
57852ff207bbd9d1b4c2f365b8736bbbc42728b6,2fa9fb647f24362a33c95e057826a70e7c433d82,antirez,antirez@gmail.com,Fri Jul 4 15:22:49 2014 +0200,1404480169,Send AOF diffs from parent to child to improve latency.,151.0,6.0,"src/aof.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.3419384836698487,13.0,1360.5,556.0,1.180642361111111,7458.5,4.618957906500695,3354.0,None,False,True,"[""30c42f12b098a5e44fe7f517ba0a47e5c4b5e588"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35"", ""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
2fa9fb647f24362a33c95e057826a70e7c433d82,75ef41058dc20ca913f25f3edf513ea41cb72ed0,antirez,antirez@gmail.com,Fri Jul 4 15:35:01 2014 +0200,1404480901,Use a timeout when reading parent ack from AOF child.,8.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1395.0,112.0,0.008472222222222223,7460.0,119.03278688524591,3355.0,None,False,,
75ef41058dc20ca913f25f3edf513ea41cb72ed0,30c42f12b098a5e44fe7f517ba0a47e5c4b5e588,antirez,antirez@gmail.com,Fri Jul 4 15:37:40 2014 +0200,1404481060,Handle write failure in AOF parent -> child ACK.,8.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,113.0,0.0018402777777777773,7461.0,544.3962264150944,3356.0,Corrective,True,,
30c42f12b098a5e44fe7f517ba0a47e5c4b5e588,62f9d34c5625e356c4376868def8a6458479f09f,antirez,antirez@gmail.com,Fri Jul 4 15:54:20 2014 +0200,1404482060,aofChildWriteDiffData(): write as much as possible.,15.0,11.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1408.0,114.0,0.011574074074074072,7462.0,87.4,3357.0,None,False,,
62f9d34c5625e356c4376868def8a6458479f09f,cc24447a1a9c05b04b369106776d01e95c91c4c9,antirez,antirez@gmail.com,Fri Jul 4 16:03:46 2014 +0200,1404482626,Use amount of I/O not ops to trigger aofReadDiffFromParent().,5.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1412.0,115.0,0.006550925925925926,7463.0,153.65017667844523,3358.0,Feature Addition,False,,
cc24447a1a9c05b04b369106776d01e95c91c4c9,20a0959964b9214fab02556f11ef3aad95f77333,antirez,antirez@gmail.com,Fri Jul 4 17:51:03 2014 +0200,1404489063,Fine tuning of aofReadDiffFromParent() calls trigger.,27.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1415.0,116.0,0.07450231481481481,7464.0,14.422401739940964,3359.0,Feature Addition,False,True,"[""2de5bab368fc1ed7630935df8762e3a2679b3453"", ""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35""]"
20a0959964b9214fab02556f11ef3aad95f77333,ac33c049c647cbe09b424cff5755504fddc0b4c7,antirez,antirez@gmail.com,Fri Jul 4 17:52:14 2014 +0200,1404489134,redis-benchmark: abort when all clients are disconnected.,5.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,794.0,44.0,248.9434606481481,7465.0,1.0040169763744604,3360.0,None,False,True,"[""1f8a6d806cc25ece4d092fb3d49af9ccc1443102"", ""b4c4be785cf5aeb480eabefd18a131655d36734f""]"
ac33c049c647cbe09b424cff5755504fddc0b4c7,93cd75bbe084f5d94bbf6216200820ff0b2785fe,antirez,antirez@gmail.com,Sat Jul 5 01:11:28 2014 +0200,1404515488,aofChildWriteDiffData() better handling of free blocks.,7.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1438.0,117.0,0.3058449074074074,7466.0,4.269631031220436,3361.0,Perfective,False,,
93cd75bbe084f5d94bbf6216200820ff0b2785fe,895409ca784c38a15719fb6d6a94575212fbc136,antirez,antirez@gmail.com,Sat Jul 5 12:37:44 2014 +0200,1404556664,Log AOF diff sizes in MBs instead of bytes.,3.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1441.0,118.0,0.4765740740740741,7467.0,3.0983096949679423,3362.0,None,False,True,"[""0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35""]"
895409ca784c38a15719fb6d6a94575212fbc136,2de5bab368fc1ed7630935df8762e3a2679b3453,antirez,antirez@gmail.com,Sat Jul 5 15:40:08 2014 +0200,1404567608,"Better final read from parent algorithm in rewriteAppendOnlyFile*(.We now wait up to 1 second for diff data to come from the parent,nhowever we use poll(2) to wait for more data, and use a counter ofncontiguous failures to get data for N times (set to 20 experimentallynafter different tests) as an early stop condition to avoid wasting 1nsecond when the write traffic is too low.n",11.0,8.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1441.0,119.0,0.12666666666666668,7468.0,8.894736842105264,3363.0,Corrective,True,,
2de5bab368fc1ed7630935df8762e3a2679b3453,f8934657b2c568be46e896627ea2c51eb16aa455,antirez,antirez@gmail.com,Mon Jul 7 12:34:54 2014 +0200,1404729294,LATENCY RESET implemented.,39.0,4.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,233.0,9.0,4.818587962962963,7469.0,1.207529676263313,3364.0,None,False,,
f8934657b2c568be46e896627ea2c51eb16aa455,b2604dc58c69f357a66df54067eec33a4f262cc9,antirez,antirez@gmail.com,Mon Jul 7 12:35:24 2014 +0200,1404729324,LATENCY SAMPLES renamed LATENCY HISTORY.,2.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,268.0,10.0,0.00034722222222222224,7470.0,2881.0,3365.0,None,False,,
b2604dc58c69f357a66df54067eec33a4f262cc9,19853db892aa10a8b00a561b7dc1d48f7176ee38,antirez,antirez@gmail.com,Mon Jul 7 14:59:57 2014 +0200,1404737997,Latency: low level time series analysis implemented.,60.0,0.0,"src/latency.c,CAS_DELIMITER,src/latency.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,13.0,172.5,17.0,2.51068287037037,7471.5,6.080549944419081,3367.0,None,False,True,"[""57e931debc3267570ac4ef5cf5ae2dc0bcb3272f"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
19853db892aa10a8b00a561b7dc1d48f7176ee38,2a232dfa9a9e00a5abcb4a0f02bf5db55590f17e,antirez,antirez@gmail.com,Tue Jul 8 11:31:46 2014 +0200,1404811906,LATENCY DOCTOR: initial draft and events summary output.,86.0,2.0,"src/latency.c,CAS_DELIMITER,src/latency.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,1.0,1.0,0.35570124588962954,13.0,792.3333333333335,126.0,2.5009336419753088,7474.0,1.6289304165250282,3370.0,Non Functional,False,True,"[""57e931debc3267570ac4ef5cf5ae2dc0bcb3272f"", ""067e365042f8d26feff0bf06f8caff1bd9abbbce"", ""509a6cc1e89e3d988511d8595dbc47a4e04b999c""]"
2a232dfa9a9e00a5abcb4a0f02bf5db55590f17e,57e931debc3267570ac4ef5cf5ae2dc0bcb3272f,antirez,antirez@gmail.com,Tue Jul 8 12:56:45 2014 +0200,1404817005,Fix analyzeLatencyForEvent() MAD computation.,3.0,3.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,399.0,13.0,0.0590162037037037,7476.0,17.944498921357127,3371.0,Corrective,True,,
57e931debc3267570ac4ef5cf5ae2dc0bcb3272f,7fb90a670e27748ad0a8b21174936eea2f997cef,antirez,antirez@gmail.com,Tue Jul 8 17:05:56 2014 +0200,1404831956,LATENCY DOCTOR first implementation complete.,185.0,6.0,"src/aof.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,0.1885845139049212,13.0,1620.8,1197.0,4.257180555555555,7479.0,1.1678145466494445,3376.0,Non Functional,False,True,"[""924dc9731f91ced699a4a05987c66b33f669b06f"", ""067e365042f8d26feff0bf06f8caff1bd9abbbce"", ""6382936ebcffb893e6f404bdafb058ed3150f8ec"", ""d6ba4fd56d9e386abaf6926fa47ead1525ff56cb""]"
7fb90a670e27748ad0a8b21174936eea2f997cef,51e01c0450c2b985a03a34f46e19b0d0ec67176a,antirez,antirez@gmail.com,Tue Jul 8 17:11:56 2014 +0200,1404832316,createLatencyReport(): initialize all advices to zero.,3.0,3.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,574.0,15.0,0.004166666666666668,7482.0,241.0,3377.0,Feature Addition,False,,
51e01c0450c2b985a03a34f46e19b0d0ec67176a,924dc9731f91ced699a4a05987c66b33f669b06f,antirez,antirez@gmail.com,Tue Jul 8 17:12:21 2014 +0200,1404832341,"createLatencyReport(), fix mount option name.",1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,574.0,16.0,0.00028935185185185184,7483.0,3457.0,3378.0,Corrective,True,,
924dc9731f91ced699a4a05987c66b33f669b06f,fda2b303469c35764601bd75516149465f58f786,antirez,antirez@gmail.com,Tue Jul 8 17:17:02 2014 +0200,1404832622,createLatencyReport(): compile before commit avoids commits.,1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,574.0,17.0,0.0032523148148148147,7484.0,308.47330960854094,3379.0,Feature Addition,False,,
fda2b303469c35764601bd75516149465f58f786,067e365042f8d26feff0bf06f8caff1bd9abbbce,antirez,antirez@gmail.com,Wed Jul 9 16:45:40 2014 +0200,1404917140,Fixed a few missing newline in createLatencyReport().,2.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,574.0,18.0,0.9782175925925926,7485.0,2.022267445987837,3380.0,Corrective,True,,
067e365042f8d26feff0bf06f8caff1bd9abbbce,e01195e90d1afd52b62071029cea5702eba4c3c3,antirez,antirez@gmail.com,Thu Jul 10 11:24:59 2014 +0200,1404984299,Test: AOF rewrite during write load.,64.0,9.0,"tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.1491157867571202,12.0,230.0,50.0,266.4520293209877,7487.0,1.0391905855062271,559.0,Preventative,False,,
e01195e90d1afd52b62071029cea5702eba4c3c3,79d2f70f5cbfde6235890761d8bc9b6515883836,antirez,antirez@gmail.com,Thu Jul 10 15:04:34 2014 +0200,1404997474,Test: enable latency monitor in the default config.This way as a side effect of running the test we also stress the latencynmonitor data collection.n,1.0,0.0,"tests/assets/default.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,25.0,15.0,576.8218055555557,7489.0,1.0017336376509498,560.0,Preventative,False,,
79d2f70f5cbfde6235890761d8bc9b6515883836,0dcc754f6863a792e3598850237ae3e30463e08d,antirez,antirez@gmail.com,Thu Jul 10 16:20:40 2014 +0200,1405002040,LATENCY HISTORY returns empty array if no data is available.Previously we returned an error.n,5.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,574.0,19.0,0.9826388888888888,7490.0,2.0176678445229683,3381.0,None,False,,
0dcc754f6863a792e3598850237ae3e30463e08d,a94aa39c86706e3f1eca5a3ff8b647cc0fc9a53c,antirez,antirez@gmail.com,Thu Jul 10 16:23:48 2014 +0200,1405002228,LATENCY command / monitor basic tests.,50.0,0.0,"tests/unit/latency-monitor.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7491.0,0.0,561.0,Preventative,False,,
a94aa39c86706e3f1eca5a3ff8b647cc0fc9a53c,3bf72d0d5fb032e7d4b6beaaae8b70b2cb23fa6b,antirez,antirez@gmail.com,Thu Jul 10 16:42:43 2014 +0200,1405003363,Test: more reliable AOF rewrite test under write load.,10.0,0.0,"tests/unit/aofrw.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,200.0,8.0,0.22064814814814807,7492.0,5.532102391942929,562.0,Preventative,False,,
3bf72d0d5fb032e7d4b6beaaae8b70b2cb23fa6b,6382936ebcffb893e6f404bdafb058ed3150f8ec,antirez,antirez@gmail.com,Fri Jul 11 10:57:28 2014 +0200,1405069048,Fix typo in LATENCY DOCTOR output.,1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,577.0,20.0,0.7755555555555556,7493.0,2.2893982808022924,3382.0,Corrective,True,,
6382936ebcffb893e6f404bdafb058ed3150f8ec,ce8a68b1fdf5c26d06d2e2972109881bd16e6856,michael-grunder,michael.grunder@gmail.com,Fri Jul 11 13:03:26 2014 -0700,1405109006,"Fix OBJECT arityPreviously, the command definition for the OBJECT command specifiedna minimum of two args (and that it was variadic), which meant thatnif you sent this:nnOBJECT foonnWhen cluster was enabled, it would result in an assertion/SEGFAULTnwhen Redis was attempting to extract keys.nnIt appears that OBJECT is not variadic, and only ever takes 3 args.nnhttps://gist.github.com/michael-grunder/25960ce1508396d0d36an",2.0,2.0,"src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,2139.0,571.0,31.705491898148146,3.5,1.0161901119541843,4.0,Corrective,True,True,"[""b412c544fd6d5efd1e3986383ef6bef7775fe48f""]"
6382936ebcffb893e6f404bdafb058ed3150f8ec ce8a68b1fdf5c26d06d2e2972109881bd16e6856,9e7e0cd613d9045a74a6050cb2935613f4a38533,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 14 15:37:33 2014 +0200,1405345053,Merge pull request #1870 from michael-grunder/object_arityFix OBJECT arity,,,,,,,,,,,,,,,Merge,False,,
9e7e0cd613d9045a74a6050cb2935613f4a38533,c7822bf38287596a39ea0dfd99654d4680b15d3e,antirez,antirez@gmail.com,Wed Jul 16 11:36:22 2014 +0200,1405503382,RDB: load string objects directly as EMBSTR objects when possible.,6.0,5.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1213.0,108.0,7.771134259259258,7494.0,1.128681343885998,3383.0,None,False,,
c7822bf38287596a39ea0dfd99654d4680b15d3e,59cf0824d9e424af0477a133ce700ee76f39f81a,antirez,antirez@gmail.com,Wed Jul 16 17:34:07 2014 +0200,1405524847,PubSub clients refactoring and new PUBSUB flag.The code tested many times if a client had active Pub/Sub subscriptionsnby checking the length of a list and dictionary where the patterns andnchannels are stored. This was substituted with a client flag callednREDIS_PUBSUB that is simpler to test for. Moreover in order to managenthis flag some code was refactored.nnThis commit is believed to have no effects in the behavior of thenserver.n,18.0,8.0,"src/networking.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.4061518545101988,13.0,1787.5,1165.0,37.69753761574074,7496.5,1.0177535859458482,3387.0,Feature Addition,False,,
59cf0824d9e424af0477a133ce700ee76f39f81a,27839e5ecb562d9b79e740e2e20f7a6db7270a66,antirez,antirez@gmail.com,Wed Jul 16 17:47:17 2014 +0200,1405525637,"Variadic PING with support for Pub/Sub.PING can now be called with an additional arugment, behaving exactlynlike the ECHO command. PING can now also be called in Pub/Sub mode (withnone more more subscriptions to channels / patterns) in order to triggernthe delivery of an asynchronous pong message with the optional payload.nnThis fixes issue #420.n",22.0,2.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3578.0,513.0,0.00914351851851852,7499.0,110.36708860759495,3388.0,Corrective,True,,
27839e5ecb562d9b79e740e2e20f7a6db7270a66,b3c042cdb2acfd9d33c8820763f9156789dc97ee,antirez,antirez@gmail.com,Fri Jul 18 10:09:51 2014 +0200,1405670991,"tryObjectEncoding(): use shared objects with maxmemory and non-LRU policy.In order to make sure every object has its own private LRU counter, whennmaxmemory is enabled tryObjectEncoding() does not use the pool of sharednintegers. However when the policy is not LRU-based, it does not makensense to do so, and it is much better to save memory using sharednintegers.n",3.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,699.0,61.0,6.5044560185185185,7500.0,1.15374075820529,3389.0,None,False,,
b3c042cdb2acfd9d33c8820763f9156789dc97ee,6b9b958e00c8a0eff64af255f790ee5bea40f197,antirez,antirez@gmail.com,Fri Jul 18 10:15:51 2014 +0200,1405671351,PING: backward compatible error for wrong number of args.,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3598.0,514.0,1.6865046296296295,7501.0,1.5929423391026258,3390.0,None,False,,
6b9b958e00c8a0eff64af255f790ee5bea40f197,420584a46d757f22525682ecbb9e41b7b410d03a,antirez,antirez@gmail.com,Fri Jul 18 10:55:08 2014 +0200,1405673708,Test: small integer sharing depends on maxmemory policy.,24.0,0.0,"tests/unit/maxmemory.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,120.0,1.0,1085.9321296296296,7502.0,1.0009208678633914,563.0,Preventative,False,,
420584a46d757f22525682ecbb9e41b7b410d03a,509c888dfa59c62648f9d138364615aff12983c9,antirez,antirez@gmail.com,Fri Jul 18 12:03:31 2014 +0200,1405677811,Test: Pub/Sub PING.,16.0,0.0,"tests/unit/pubsub.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,370.0,5.0,190.74128472222225,7503.0,1.0052427034947171,564.0,Preventative,False,,
509c888dfa59c62648f9d138364615aff12983c9,8d4ff87b26772300e0d584c360edb17763d69a68,antirez,antirez@gmail.com,Fri Jul 18 17:13:46 2014 +0200,1405696426,"Cluster test: test that writes are retained during failovers.In the test we use WAIT when the master and slave are up, and only later thenpartition is created killing the master, so we are sure we don't incurnin failure modes that may lose writes in this test: the goal here is tonmake sure that the elected slave was replicating correctly with thenmaster.n",13.0,2.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,101.0,4.0,37.033668981481476,7504.0,1.0270024555358004,565.0,Preventative,False,,
8d4ff87b26772300e0d584c360edb17763d69a68,73a809b1591378e1042a1028d0b8e10217e6e7c7,antirez,antirez@gmail.com,Fri Jul 18 17:43:49 2014 +0200,1405698229,redis-trib: allow to reshard in non-interactive way.The introduction of --from --to --slots --yes options allow to reshardnfrom cli in an automated way from scripts. The code is ugly and needsnrefactoring as soon as we get it in RC / stable release.n,82.0,37.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1291.0,95.0,57.97693287037037,7505.0,1.017248239092535,3391.0,None,False,,
73a809b1591378e1042a1028d0b8e10217e6e7c7,15336ffe867d5028447486dab02ebece3b9c37e1,antirez,antirez@gmail.com,Mon Jul 21 15:30:25 2014 +0200,1405949425,Cluster: fix redis-trib --from all.,4.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1336.0,96.0,2.907361111111112,7506.0,1.343954521568815,3392.0,None,False,,
15336ffe867d5028447486dab02ebece3b9c37e1,54f1c682e6fdeefc4cc711258d2f7ab66e59d46c,antirez,antirez@gmail.com,Mon Jul 21 16:26:05 2014 +0200,1405952765,"Cluster test: unit 04, consistency during resharding.",90.0,0.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7507.0,0.0,566.0,Preventative,False,,
54f1c682e6fdeefc4cc711258d2f7ab66e59d46c,10088d5087e46342f836e0d16f3eaae134f666b9,antirez,antirez@gmail.com,Mon Jul 21 16:29:49 2014 +0200,1405952989,Cluster test: use larger keyspace in resharding test.,1.0,1.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,90.0,1.0,0.0025925925925925925,7508.0,386.71428571428567,567.0,Preventative,False,,
10088d5087e46342f836e0d16f3eaae134f666b9,89af463124f303b1d681aa4b29623385a1442f94,antirez,antirez@gmail.com,Tue Jul 22 15:29:57 2014 +0200,1406035797,"CLUSTER RESET: Flush dataset if node is a slave.For non-empty masters, CLUSTER RESET is denied, and the user requires tonstart to reset a node by explicitly clearing it with FLUSHALL.nHowever CLUSTER RESET when executed with slaves don't have thisnrestrictions since data is just a replica of the master, and withnread-only slaves it is also not possible to remove the data set. Howevernthe node was turned from slave to master after a reset, without touchingnthe old slave data. This is 99.99% of times not appropriate and forcesnfull resets to follow this path to work with both slave and masternnodes:nnFLUSHALLnCLUSTER RESET HARDnFLUSHALLnnSince we need the first flushall for masters, and the second for slaves.nnThis commit changes the behavior so that CLUSTER RESET removes the data setnof a slave node during a reset, in the moment it gets turned into a master,nso the new pattern is simply:nnFLUSHALL (that may fail for slaves)nCLUSTER RESETn",3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4596.0,399.0,25.862002314814816,7509.0,1.0386667663171292,3393.0,None,False,,
89af463124f303b1d681aa4b29623385a1442f94,d1cb6a0fc40a63238e3090c5ac5c6334a4a1af1f,antirez,antirez@gmail.com,Fri Jun 6 15:32:21 2014 +0200,1402061541,Add double field in dict.c entry value union.,5.0,0.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,178.0,16.0,77.94554398148149,7510.0,1.0128294697672209,3394.0,Feature Addition,False,,
d1cb6a0fc40a63238e3090c5ac5c6334a4a1af1f,119813e96845d9e8b3e4eddd1a950372158c2229,antirez,antirez@gmail.com,Fri Jun 6 18:04:04 2014 +0200,1402070644,"ZUNIONSTORE reimplemented for speed.The user @kjmph provided excellent ideas to improve speed of ZUNIONSTOREn(in certain cases by many order of magnitude), together with annimplementation of the ideas.nnWhile the ideas were sounding, the implementation could be improved bothnin terms of speed and clearness, so that's my attempt at reimplementingnthe speedup proposed, trying to improve by directly using just andictionary with an embedded score inside, and reusing the single-passnaggregate + order-later approach.nnNote that you can't apply this commit without applying the previousncommit in this branch that adds a double in the dictEntry value union.nnIssue #1786.n",60.0,33.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2831.0,98.0,-20.030972222222214,7511.0,0.9500773108311434,3395.0,Feature Addition,False,,
119813e96845d9e8b3e4eddd1a950372158c2229,d74e422b5e1f43139dc0ffa344c7eddbe32d7e7d,antirez,antirez@gmail.com,Fri Jun 6 18:59:17 2014 +0200,1402073957,Remove useless var and check in zunionInterGenericCommand().,1.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2858.0,99.0,0.038344907407407404,7512.0,27.079082402656198,3396.0,None,False,,
d74e422b5e1f43139dc0ffa344c7eddbe32d7e7d,b9bb7e2d4a7a8499ad7ef356c29b2adaa6901b29,antirez,antirez@gmail.com,Tue Jul 22 17:52:04 2014 +0200,1406044324,Test: check sorted set elements order after union.This is not a regression but issue #1786 showed the need for this test.n,22.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,930.0,31.0,95.20125,7513.0,1.010504063759667,568.0,Preventative,False,,
b9bb7e2d4a7a8499ad7ef356c29b2adaa6901b29,0adf4482f0d3ee036bf9babd66f3974493a6b0e1,antirez,antirez@gmail.com,Wed Jul 23 11:43:57 2014 +0200,1406108637,"PFSELFTEST: less false positives.This is just a quickfix, for the nature of the test the right way to fixnit is to average the error of N runs, since otherwise it is alwaysnpossible to get a false positive with a bad run, or to minimize too muchnthis possibility we may end testing with too much large error ranges.n",10.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1548.0,84.0,65.80383101851852,7514.0,1.0151966836052233,3397.0,Preventative,False,,
0adf4482f0d3ee036bf9babd66f3974493a6b0e1,0ce352c19f296c37893f5f506af3c4fa7f496d37,antirez,antirez@gmail.com,Tue Jun 24 15:45:03 2014 +0200,1403617503,"Faster ll2string() implementation.Based on ideas documented in this blog post:nnhttps://www.facebook.com/notes/facebook-engineering/three-optimization-tips-for-c/10151361643253920nnThe original code was modified to handle signed integers, reformetted tonfit inside the Redis code base, and was stress-tested with a programnin order to validate the implementation against snprintf().nnRedis was measured to be measurably faster from the point of view ofnclients in real-world operations because of this change, since sometimesnnumber to string conversion is used extensively (for example every timena GET results into an integer encoded object to be returned to thenuser).n",80.0,21.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,580.0,16.0,77.12306712962962,7515.0,1.0129662892986242,3398.0,Non Functional,False,True,"[""c951c3ee5a12110f1c0c1270c45ab663c04e0f77""]"
0ce352c19f296c37893f5f506af3c4fa7f496d37,7eb47ae290a05403972ebacffb173a67a6bafabe,antirez,antirez@gmail.com,Wed Jul 23 18:01:51 2014 +0200,1406131311,Fix util.c compilation by including stdint.h.,1.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,639.0,17.0,29.095,7516.0,1.0343701666953085,3399.0,Corrective,True,,
7eb47ae290a05403972ebacffb173a67a6bafabe,0d9bcb1c12b73ea3835528a02a142cb6ec681a84,antirez,antirez@gmail.com,Fri Jul 25 11:02:09 2014 +0200,1406278929,"Cluster: don't migrate to a master that never had slaves.Replica migration algorithm modified so that slaves never try to migratento masters that were never configured to have slaves in the past.nWe want the algorithm to take care of masters that remained withoutn*working* slaves, but that used to have slaves according to the clusternconfiguration.n",9.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4598.0,400.0,2.8140277777777776,7517.0,1.3553625191254133,3400.0,None,False,True,"[""e0f22df9950b584569771d486fd4e933432fe395""]"
0d9bcb1c12b73ea3835528a02a142cb6ec681a84,c22fc1ac6f5fe77b13a4cba41e57701d8d424c8d,antirez,antirez@gmail.com,Fri Jul 25 11:23:51 2014 +0200,1406280231,"Cluster test: new unit 05, slave selection.",94.0,0.0,"tests/cluster/tests/05-slave-selection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7518.0,0.0,569.0,Preventative,False,True,"[""09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c""]"
c22fc1ac6f5fe77b13a4cba41e57701d8d424c8d,49c817c2502ee98a770ae93c4479681cef27a790,antirez,antirez@gmail.com,Fri Jul 25 14:20:23 2014 +0200,1406290823,Example redis.conf: improve slaveof description.,12.0,3.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,844.0,136.0,23.078460648148152,7519.0,1.0433304463086122,1347.0,None,False,,
49c817c2502ee98a770ae93c4479681cef27a790,ad87ec4fb750283663e2733376e74707e540976e,antirez,antirez@gmail.com,Fri Jul 25 15:40:25 2014 +0200,1406295625,"Cluster test: unit 06, slaves with stale data can't failover.",75.0,0.0,"tests/cluster/tests/06-slave-stop-cond.tcl,CAS_DELIMITER,tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.1021580364086504,12.0,28.0,6.0,21.985138888888887,7520.5,0.5113713177462048,571.0,Preventative,False,,
ad87ec4fb750283663e2733376e74707e540976e,0d35b467610baa39d23f76049cba0f09f54db0d4,antirez,antirez@gmail.com,Fri Jul 25 16:09:31 2014 +0200,1406297371,"Cluster test: 03 unit speedup, don't send WAIT to slaves.",5.0,2.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,112.0,5.0,6.9553819444444445,7522.0,1.143773556648279,572.0,Preventative,False,,
0d35b467610baa39d23f76049cba0f09f54db0d4,628c5641c031a6208850f9395c6a5ec5832130ee,antirez,antirez@gmail.com,Fri Jul 25 16:10:18 2014 +0200,1406297418,"Cluster test: init test, be patient during restarts.",7.0,2.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,57.0,7.0,0.020752314814814814,7523.0,49.18739542665924,573.0,Preventative,False,,
628c5641c031a6208850f9395c6a5ec5832130ee,351ad518b3744b22ef2a219c5bd67a234c63a003,antirez,antirez@gmail.com,Fri Jul 25 16:17:13 2014 +0200,1406297833,Cluster test: node reachability condition fixed.,2.0,1.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,62.0,8.0,0.004803240740740741,7524.0,209.19277108433727,574.0,Preventative,False,,
351ad518b3744b22ef2a219c5bd67a234c63a003,0f8df3df417a22ce8f34e4c21b09f8ff5eb60320,Matt Robenolt,m@robenolt.com,Mon Jul 28 00:30:12 2014 -0700,1406532612,Fix spelling of stand alone in ascii artAlso unified the logic to match `genRedisInfoString`,2.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3599.0,515.0,9.968298611111113,0.0,0.0,0.0,Corrective,True,,
351ad518b3744b22ef2a219c5bd67a234c63a003 0f8df3df417a22ce8f34e4c21b09f8ff5eb60320,d76c663dfe68f73489d145fd0d64b2e0e2dedff6,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 28 09:37:41 2014 +0200,1406533061,Merge pull request #1895 from mattrobenolt/patch-1Fix spelling of stand alone in ascii art,,,,,,,,,,,,,,,Merge,False,,
351ad518b3744b22ef2a219c5bd67a234c63a003,75b92fe7c456acb6660a7d30f06e7b12b13a3f38,antirez,antirez@gmail.com,Mon Jul 28 12:35:05 2014 +0200,1406543705,Cluster test: unit 06 cluster creation comment fixed.,1.0,2.0,"tests/cluster/tests/06-slave-stop-cond.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,74.0,1.0,2.8712962962962965,7525.0,1.3482747500806191,575.0,Preventative,False,,
75b92fe7c456acb6660a7d30f06e7b12b13a3f38,ddd9fd417eb77db3ed25a4fde690d0d642d20938,antirez,antirez@gmail.com,Mon Jul 28 12:48:51 2014 +0200,1406544531,"Cluster test: unit 07, replicas migration.",47.0,0.0,"tests/cluster/tests/07-replica-migration.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7526.0,0.0,576.0,Preventative,False,,
ddd9fd417eb77db3ed25a4fde690d0d642d20938 d76c663dfe68f73489d145fd0d64b2e0e2dedff6,f231edc672830143324bfffa70b176883e43fe2d,antirez,antirez@gmail.com,Mon Jul 28 12:49:04 2014 +0200,1406544544,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
f231edc672830143324bfffa70b176883e43fe2d,c90af7cd14214e35d3a570d6619e30e965f692d6,vps,pawel.veselov@gmail.com,Sun Jul 27 20:14:39 2014 -0700,1406517279,* fixed doc URL for keyspace events,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,853.0,137.0,2.621018518518518,0.0,0.0,0.0,Corrective,True,,
c90af7cd14214e35d3a570d6619e30e965f692d6,a75a57414120426012f49983cbe2b6f7f48ae741,Yossi Gottlieb,yossigo@gmail.com,Mon Jul 28 14:43:30 2014 +0300,1406547810,Fail SYNC if background save child aborted due to a signal.,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1214.0,109.0,12.088287037037034,3.0,1.082724706729425,2.0,Corrective,True,,
c90af7cd14214e35d3a570d6619e30e965f692d6 a75a57414120426012f49983cbe2b6f7f48ae741,78a012d81a0f487b92b2b79a91de1f28697100e8,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 28 14:45:31 2014 +0200,1406551531,Merge pull request #1896 from yossigo/bgsave-signal-fixFail SYNC if background save child aborted due to a signal.,,,,,,,,,,,,,,,Merge,False,,
78a012d81a0f487b92b2b79a91de1f28697100e8,bbc1cd0bd9cb50e0734a98d066ccc7d0171fc652,Matt Stancliff,matt@genges.com,Fri Mar 28 23:08:56 2014 -0400,1396062536,"redis-cli: Re-attach selected DB after authPreviously, if you did SELECT then AUTH, redis-clinwould show your SELECT'd db even though it didn'tnhappen.nnNote: running into this situation is a (hopefully) very limitednused case of people using multiple DBs and AUTH all at the samentime.nnFixes antirez#1639n",5.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1974.0,108.0,-101.26585648148148,84.0,0.9901250032859508,52.0,None,False,,
bbc1cd0bd9cb50e0734a98d066ccc7d0171fc652,0042fb0eb09aceb279f073d84bbc05068ea5e3ff,Matt Stancliff,matt@genges.com,Fri Aug 1 11:44:28 2014 -0400,1406907868,"redis-cli: stop showing incorrectly selected DBPreviously redis-cli would happily show -1 or 99999nas valid DB choices.nnNow, if the SELECT call returned an error, we don't updatenthe DB number in the CLI.nnInspired by @anupshendkar in #1313nnFixes #566, #1313n",6.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1978.0,109.0,125.52467592592592,85.0,1.007966561097438,53.0,None,False,,
0042fb0eb09aceb279f073d84bbc05068ea5e3ff,426553164d6807e67999101cec95d2afb7aaa3d7,Matt Stancliff,matt@genges.com,Fri Aug 1 12:05:04 2014 -0400,1406909104,redis-cli: Add --no-raw optionSome people need formatted output even when they have noninteractive tty.nnFixes #760n,3.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1983.0,110.0,0.014305555555555556,86.0,70.90291262135922,54.0,None,False,,
426553164d6807e67999101cec95d2afb7aaa3d7,009cabf1031db42271a1e05980965a129cbbfe1d,siahl,slyimo@us.ibm.com,Tue Jul 29 16:39:37 2014 -0500,1406669977,Add support for compiling on AIXCloses #1900n,26.0,3.0,"deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/fmacros.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,2.4745528751702013,13.0,319.8333333333333,594.0,68.42524112654321,2.5,0.8362372420533296,3.0,Feature Addition,False,,
009cabf1031db42271a1e05980965a129cbbfe1d,9756f61fda6397da0c57bbe353fc0d144a51aaea,antirez,antirez@gmail.com,Thu Aug 7 12:14:21 2014 +0200,1407406461,Clarify AIX #undef hz.,2.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1478.0,449.0,8.52412037037037,7527.0,1.1173141575377061,3401.0,None,False,,
9756f61fda6397da0c57bbe353fc0d144a51aaea,5b3930655fc8aa68d7cd7ae58b32ff8874476e30,Wei Jin,wjin.cn@gmail.com,Mon May 12 20:55:54 2014 +0800,1399899354,Remove redundant else/return blockFixes #1741n,0.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2857.0,100.0,-25.169016203703706,0.0,0.0,0.0,Corrective,True,,
5b3930655fc8aa68d7cd7ae58b32ff8874476e30,05676c5d1614ad894a1ff77d941b83732739046e,Jan-Erik Rediger,badboy@archlinux.us,Fri May 23 00:26:40 2014 +0200,1400797600,redis-cli: fix latency result output(Cleaned up a little by @mattsta)nnCloses #1774n,8.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1986.0,111.0,-70.735,11.0,0.9858627270799464,7.0,None,False,True,"[""15dacfec6f25fe291ce8aaa702c7fabbee9e3d00""]"
05676c5d1614ad894a1ff77d941b83732739046e,1a5e5b6bd44eb106dcb7114a8f22dda4b475238d,kingsumos,kingsumos@users.noreply.github.com,Mon Jun 9 15:32:27 2014 -0300,1402338747,"cluster: fix node connection memory leakCluster leaks memory while connecting due to missing freeaddrinfo()nn(Commit modified by @antirez. The freeaddrinfo() call was misplaced son in case of no address was bound, the memory leak was still there).nnCloses #1801n",3.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,566.0,42.0,-16.92792824074074,1.0,0.9409260255727406,1.0,None,False,,
1a5e5b6bd44eb106dcb7114a8f22dda4b475238d,f17f8521f005321d3e163ed83ec2fa9f1b925b0f,Matt Stancliff,matt@genges.com,Sat Jun 28 22:20:44 2014 -0400,1404008444,scripting: no eval with negative key countNegative key count causes segfault in Lua functions.nnFixes #1842nCloses #1843n,8.0,0.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9544340029249648,12.0,830.5,133.0,16.510086805555556,87.5,1.0454085809834637,6.0,None,False,,
f17f8521f005321d3e163ed83ec2fa9f1b925b0f,53fdfda9e3316a5763c78569fa74bf42e1c4b3a7,Jan-Erik Rediger,badboy@archlinux.us,Sun Jun 29 12:32:06 2014 +0200,1404037926,"Handle large getrange requestsPreviously the end was casted to a smaller typenwhich resulted in a wrong check and failednwith values larger than handled by unsigned.nnCloses #1847, #1844n",6.0,1.0,"src/t_string.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8631205685666309,12.0,609.5,79.0,50.804513888888884,12.5,1.010430472200376,1.0,Corrective,True,True,"[""f0e306f4a0bc0e4db15da54eb3d1d2337a1b6dea""]"
53fdfda9e3316a5763c78569fa74bf42e1c4b3a7,87815ab5ba305770c0e6de7995b1688e55602589,Matt Stancliff,matt@genges.com,Mon Jul 21 17:31:21 2014 -0400,1405978281,"Fix key extraction for SORTWe only want to use the last STORE key, but we have to recordnwe actually found a STORE key so we can increment the final returnnkey count.nnTest added to prevent further regression.nnCloses #1883, #1645, #1647n",11.0,2.0,"src/db.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.961236604722876,13.0,749.0,163.0,65.74792245370371,89.5,1.0236465787886333,7.0,Corrective,True,,
87815ab5ba305770c0e6de7995b1688e55602589,c82e0b701f86989711988dae8be97bdbe63395ba,Matt Stancliff,matt@genges.com,Fri Aug 1 13:01:33 2014 -0400,1406912493,"Fix intset midpoint selectionThe classic (min+max)/2 is provably unsafe.  Fixednas recommended in research:nhttp://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.htmlnnFix inspired by @wjin, but I used a different approach.n(later, I found @kuebler fixed the same issue too).nnFixes #1741, #1602n",1.0,1.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,89.0,9.0,630.9834490740741,91.0,1.0015848276233987,57.0,Corrective,True,,
c82e0b701f86989711988dae8be97bdbe63395ba,d99a7246f805f20a99bd2fa428c10a64433e6e81,Matt Stancliff,matt@genges.com,Wed Mar 26 22:15:44 2014 -0400,1395886544,Add graceful exit when Ctrl-C is received,17.0,5.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3600.0,516.0,-123.21837962962965,92.0,0.9918843276221794,58.0,Feature Addition,False,,
d99a7246f805f20a99bd2fa428c10a64433e6e81,7bb25f8a46cafee90ba927d98141ccfa57e190df,antirez,antirez@gmail.com,Thu Aug 7 16:32:50 2014 +0200,1407421970,"Force quit when receiving a second SIGINT.Also quit ASAP when we are still loading a DB, since care is not needednin this special condition, especially for a SIGINT.n",14.0,2.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,13.0,2413.0,627.0,71.8147337962963,7528.5,1.0529000504784594,3403.0,None,False,,
7bb25f8a46cafee90ba927d98141ccfa57e190df,c49378fe3e6f8900e753ff60a1b1f59e2e2c8755,Kashif Rasul,kashif.rasul@gmail.com,Fri Apr 4 10:25:40 2014 +0200,1396599940,"Fix issues raised by clang analyzerModified by @antirez since the original fix to genInfoString() lookednweak. Probably the clang analyzer complained about `section` beingnpossibly NULL, and strcasecmp() called with a NULL pointer. In thenpractice this can never happen, still for the sake of correctnessnthe right fix is not to modify only the first call, but to set `section`nto the value of default if it happens to be NULL.nnCloses #1660n",4.0,4.0,"src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,13.0,2807.0,630.0,-86.91950231481482,1.5,0.9868323274314869,1.0,Corrective,True,,
c49378fe3e6f8900e753ff60a1b1f59e2e2c8755,9b4efe6cf4e165bac8031a26541ab04ff6d31402,ripcurld00d,boazyko1@gmail.com,Sun Apr 13 21:09:54 2014 +0300,1397412594,"redis-check-dump: use names instead of magic numsUse constants to avoid magic numbers in `types`, which is an arraynthat stores the names of `REDIS` types.nnCloses #1681n",3.0,1.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,768.0,15.0,-73.94358796296297,0.0,0.0,0.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
9b4efe6cf4e165bac8031a26541ab04ff6d31402,67c4fbed8206cc091ff6a699c38cfa19e52eb005,Edgars Irmejs,edgars.irmejs@gmail.com,Mon Apr 21 21:48:14 2014 +0300,1398106094,"Change unixsocketperm comment to 700 from 755According to unix manuals, Connecting to the socket object requiresnread/write permission. -- mode 755 is useless for anybodynother than the owner.nnFixes #1696n",1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,853.0,138.0,-97.35167824074074,0.0,0.0,0.0,Corrective,True,,
67c4fbed8206cc091ff6a699c38cfa19e52eb005,6df1251baa68d44ef27d6abff512c7286278502c,Jan-Erik Rediger,badboy@archlinux.us,Wed May 7 18:25:10 2014 +0200,1399479910,install_server.sh: add missing bangThis was discovered by _bodya and reported in the IRC channel.nEverything worked fine as these scripts are always executed as shellnscripts.nnCloses #1728n,2.0,2.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,245.0,15.0,53.11203703703704,14.0,1.018828123638012,2.0,None,False,,
6df1251baa68d44ef27d6abff512c7286278502c,8db020e2a1255a2595b5c4215271dcbad3b9aac2,Matt Stancliff,matt@genges.com,Fri Aug 1 13:07:38 2014 -0400,1406912858,"Fix assert technical correctnessdictAdd returns DICT_OK, not REDIS_OK. They bothnhave the same underlying values, so it works even thoughnthe code is technically wrong.nnFixes #1512n",1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1214.0,111.0,-5.8925,93.0,0.8302927450148494,59.0,Corrective,True,True,"[""d8c7db1bdba3938f31856a067b2966285acbf97f""]"
8db020e2a1255a2595b5c4215271dcbad3b9aac2,23f08510d5c63a1936bced5a3aaf7ae4860090f9,cubicdaiya,cubicdaiya@gmail.com,Sun Mar 16 08:51:54 2014 +0900,1394927514,"Use 'void' for zero-argument functionsAccording to the C standard,nit is desirable to give the type 'void'nto functions have no argument.nnCloses #1631n",20.0,20.0,"src/config.c,CAS_DELIMITER,src/rand.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,1.0,1.0,2.195461844238322,13.0,1637.833333333333,1246.0,28.653128858024694,2.5,0.8362297092481142,5.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
23f08510d5c63a1936bced5a3aaf7ae4860090f9,7a2450a7e5852beb29a923caf091161e06e39cc9,Joshua Anderson,j@zatigo.com,Sun Mar 16 20:22:36 2014 -0700,1395026556,src/Makefile: Reword to run make test messageCloses #1610n,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,251.0,108.0,-134.76181712962966,0.0,0.0,0.0,None,False,,
7a2450a7e5852beb29a923caf091161e06e39cc9,f510cfb4ef724987a145ffbbba00230e976787bf,Xian Li,lionel@goosat.com,Tue Mar 18 11:37:08 2014 +0800,1395113828,memtest: Add missing free()Closes #1614n,1.0,0.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,279.0,13.0,420.66858796296304,0.0,0.0,0.0,Preventative,False,,
f510cfb4ef724987a145ffbbba00230e976787bf,a8d3e930bced31cc0f5211cc0874ca6f837faca0,Jim Howard,liexusong@qq.com,Fri Dec 6 22:27:00 2013 -0500,1386386820,Remove redundant event loop fd processingReason:nhttps://github.com/antirez/redis/pull/1450#issuecomment-30432925nnCloses #1450n,2.0,2.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,465.0,15.0,161.53276620370372,0.0,0.0,0.0,None,False,,
a8d3e930bced31cc0f5211cc0874ca6f837faca0,7e9f24d6940f0edba71f15f8606e58045a84ead0,Samuel Chou,schou@barracuda.com,Mon Dec 9 10:18:36 2013 -0800,1386613116,Improve accuracy of HAVE_ATOMIC dependency check[I had to split out the clang check due ton clang *really* not liking the __GLIBC_PREREQ macro; -matt]nnCloses #1456n,6.0,1.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,195.0,27.0,-198.7758217592593,0.0,0.0,0.0,None,False,,
7e9f24d6940f0edba71f15f8606e58045a84ead0,4bb6844e4354738b1fc7400be016277e22fa585b,Xiaojie Zhang,alghak@gmail.com,Wed Jan 22 21:23:54 2014 +0800,1390397034,Avoid unnecessary decoding in ziplist.cCloses #1519n,13.0,13.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1535.0,38.0,156.0204050925926,0.0,0.0,0.0,None,False,,
4bb6844e4354738b1fc7400be016277e22fa585b,25791550e085930c196b9234465f6538fe8ee383,Matt Stancliff,matt@genges.com,Fri Aug 1 13:57:30 2014 -0400,1406915850,"pubsub: Return integers for NUMSUB, not stringsAlso adds test for numsub u00e2u0080u0094u00c2u00a0due to tcl being tcl,nit doesn't capture the numberness of the fix,nbut now we at least have one test case for numsub.nnCloses #1561n",5.0,1.0,"src/pubsub.c,CAS_DELIMITER,tests/unit/pubsub.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,13.0,378.5,25.0,15.214363425925924,94.5,1.0474885676448484,8.0,None,False,,
25791550e085930c196b9234465f6538fe8ee383,498ad7482b2eb4ebc6f4c7458fe6a35f244adaf6,Matt Stancliff,matt@genges.com,Fri Aug 1 14:55:24 2014 -0400,1406919324,"Reject MOVE to non-integer DBsPreviously, MOVE key somestring would move the key tonDB 0 which is just unexpected and wrong.nString as DB == error.nnTest added too.nnModified by @antirez in order to use the getLongLongFromObject() APIninstead of strtol().nnFixes #1428n",12.0,1.0,"src/db.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9957274520849256,13.0,991.5,175.0,22.120607638888888,96.5,1.0572081888086708,9.0,Corrective,True,,
498ad7482b2eb4ebc6f4c7458fe6a35f244adaf6,354119e4c50fbb3074f2d085300a1b399d4d89af,charsyam,charsyam@gmail.com,Sat May 25 19:22:24 2013 +0900,1369477344,Remove unused LINE_BUFLEN definitionCloses #1129n,0.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1991.0,114.0,-294.56215277777784,15.0,0.9966051307319359,15.0,None,False,,
354119e4c50fbb3074f2d085300a1b399d4d89af,af62d9a687c7f61178c1fd8a4c7c9f1cc3d5083f,Chris Lamb,lamby@debian.org,Thu Jul 11 12:45:15 2013 +0100,1373543115,"redis-check-dump: Prevent segfault if can't mallocFound by The Mayhem Team (Alexandre Rebert, Thanassis Avgerinos,nSang Kil Cha, David Brumley, Manuel Egele) Cylab, Carnegie MellonnUniversity. See http://bugs.debian.org/716259 for more.nnSigned-off-by: Chris Lamb <lamby@debian.org>nnFixes #1191n",1.0,0.0,"src/redis-check-dump.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,770.0,17.0,-247.50461805555562,1.0,0.995959671347322,1.0,None,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
af62d9a687c7f61178c1fd8a4c7c9f1cc3d5083f,dec58464d8d41f9438fcfaac07b71a8e4b7ac310,SungBin_Hong,hsb0818@gmail.com,Tue Oct 15 00:12:06 2013 +0900,1381763526,Free memory in clusterLoadConfig error handlerCloses #1327n,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4606.0,401.0,-283.74309027777775,0.0,0.0,0.0,None,False,,
dec58464d8d41f9438fcfaac07b71a8e4b7ac310,da0132638f15d81782c5543ed49a1d1f17594d9d,Matt Stancliff,matt@genges.com,Fri Aug 1 15:42:50 2014 -0400,1406922170,Cleanup double semicolonsCloses #1161n,2.0,2.0,"src/multi.c,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,547.0,38.0,211.2263020833333,98.5,1.0150259474085512,63.0,Perfective,False,True,"[""145473acc5798a499a0f37e42df48a014a3955c1""]"
da0132638f15d81782c5543ed49a1d1f17594d9d,de5465baf7f30b1040ae7e8c36ad8fec14edfea4,charsyam,charsyam@gmail.com,Sun Feb 17 20:10:48 2013 -0800,1361160648,Refactor cluster flag printingLess copy/paste code duplication.nnCloses #952n,36.0,20.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4607.0,402.0,-238.4592361111111,16.0,0.9958064111237276,16.0,None,False,,
de5465baf7f30b1040ae7e8c36ad8fec14edfea4,ded57795ff860d27d2889641d0fea9554df4a973,antirez,antirez@gmail.com,Fri Aug 8 15:52:04 2014 +0200,1407505924,"representRedisNodeFlags() moved into right code section.The funciton was also modified in order to be more standalone andnproduce an output without trailing spaces, making the reuse simpler.nThe global variable was renamed in cammel case as most other Redisnglobals, except the main ones we refer too many times, like 'server'.n",41.0,38.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4623.0,403.0,536.4036574074074,7530.0,1.0018642676763865,3404.0,None,False,True,"[""a3778f3b0f0aacbb34ecc77541615a9eda251443""]"
ded57795ff860d27d2889641d0fea9554df4a973,b57a4d07a210fd0c99d5a3cd286ffdcf9d639ad9,Daniel Price,dp@dssd.com,Mon Mar 11 18:04:40 2013 -0700,1363050280,Define AR to help with lua cross-compilationCloses #997n,6.0,1.0,"deps/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,78.0,4.0,-4.271296296296296,0.0,0.0,0.0,None,False,,
b57a4d07a210fd0c99d5a3cd286ffdcf9d639ad9,951eefae3c7a318860fd78ac60ec0b4c77aab10f,NanXiao,xn212516@163.com,Tue May 7 14:59:03 2013 +0800,1367909943,"Use resolv library in SolarisFor some Solaris flavours, the inet_aton in in resolv library.nNot linking this library will introduce link error.nnImproves compatability with older Solaris and stillnworks on new Solaris.nnCloses #1092n",1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,251.0,109.0,-313.8496875,2.0,0.996813761364666,2.0,Feature Addition,False,,
951eefae3c7a318860fd78ac60ec0b4c77aab10f,3426866e0a62926e62143b9ede8880e48e51a038,charsyam,charsyam@gmail.com,Wed May 15 00:15:25 2013 +0900,1368544525,Remove duplicate prototypes in redis.hAlso moves acceptHandler() to be near the other accept...() functions.nnCloses #1105n,1.0,3.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1479.0,451.0,-305.35866898148146,17.0,0.9967251625659246,17.0,None,False,,
3426866e0a62926e62143b9ede8880e48e51a038,cf85b5ba812070442c450b5dbc6c5e12a6c0819b,Pieter Noordhuis,pcnoordhuis@gmail.com,Wed Jul 10 21:12:46 2013 -0700,1373515966,va_copy must be matched by va_endHat tip to @rfuchs. See: https://github.com/redis/hiredis/pull/178.nnFixes #1187n,1.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1088.0,43.0,-350.5249305555557,958.0,0.9971471358730032,436.0,None,False,,
cf85b5ba812070442c450b5dbc6c5e12a6c0819b,68db7b1f564be07fa98f6102aefb33d941fc2cdc,antirez,antirez@gmail.com,Tue Aug 12 15:17:28 2014 +0200,1407849448,Use unsigned integers in SDS header.This raises the max string to 4GB without any downside.n,15.0,9.0,"deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",4.0,2.0,2.0,1.910762106246821,13.0,597.75,77.0,150.90317418981482,7532.5,1.008394873557354,3406.0,None,False,,
68db7b1f564be07fa98f6102aefb33d941fc2cdc,7e3ccddc6d728250dd473c1ab4348d899ab69eb3,antirez,antirez@gmail.com,Wed Aug 13 10:53:29 2014 +0200,1407920009,Add -W to compilation flags.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,251.0,110.0,463.0794675925926,7535.0,1.0021594565727534,3407.0,Feature Addition,False,,
7e3ccddc6d728250dd473c1ab4348d899ab69eb3,edca2b14d213c31da9e7a919f6b898f3ea8abea8,antirez,antirez@gmail.com,Wed Aug 13 11:44:38 2014 +0200,1407923078,Remove warnings and improve integer sign correctness.,66.0,48.0,"src/anet.c,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",17.0,1.0,1.0,3.589753087116813,13.0,1667.0588235294117,2620.0,110.91747208605663,7544.0,1.0030218941786748,3424.0,None,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
78a012d81a0f487b92b2b79a91de1f28697100e8,367035a9838695c1f17a78af0325de5ae6ec08fc,Jan-Erik Rediger,badboy@archlinux.us,Wed Aug 13 19:31:57 2014 +0200,1407951117,Don't use extended Regexp SyntaxIt's not POSIX (BSD systems have -E instead) and we don't actually need it.nnCloses #1922n,6.0,6.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,245.0,16.0,98.04637731481482,15.0,1.010199254958591,3.0,None,False,,
78a012d81a0f487b92b2b79a91de1f28697100e8,c951c3ee5a12110f1c0c1270c45ab663c04e0f77,antirez,antirez@gmail.com,Fri Aug 15 15:48:15 2014 +0200,1408110495,"Fix undefined behavior in ll2string().The bug was found by @CAFxX, thanks!nSee issue #1940.n",5.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,640.0,18.0,22.907222222222234,7553.0,1.0436543545218635,3425.0,Corrective,True,,
edca2b14d213c31da9e7a919f6b898f3ea8abea8,6a7a32a806aa7a10239803293a04966d75409942,Matt Stancliff,matt@genges.com,Fri Aug 1 16:42:02 2014 -0400,1406925722,Clarify existing slot wording on cluster start,5.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4626.0,405.0,-11.543472222222226,100.0,0.9133709527992012,64.0,None,False,,
6a7a32a806aa7a10239803293a04966d75409942,d786fb6e94fab0204a05caa0966fc2a37d9168ee,xiaoyu,xiaoyu@ucloud.cn,Fri May 18 20:34:10 2012 +0800,1337344450,Clarify argument to dict macrod is more clear because the type of argument is dict not dicthtnnCloses #513n,1.0,1.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,183.0,18.0,-816.8822685185187,0.0,0.0,0.0,None,False,,
d786fb6e94fab0204a05caa0966fc2a37d9168ee,233d24a7378f3ef59baa7aa593278338c8e9d0d9,Dov Murik,dov.murik@trusteer.com,Wed Dec 26 22:00:08 2012 +0200,1356552008,redis-cli: fix prompt after shutdown commandFix redis-cli prompt to state not connected after a SHUTDOWN commandnis sent.n,4.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1991.0,116.0,-594.5725694444443,0.0,0.0,0.0,None,False,,
233d24a7378f3ef59baa7aa593278338c8e9d0d9,0a98b21f657b2bfc822619c33bb8f9991df742d6,yoav,yoav@monfort.co.il,Mon Dec 31 00:44:30 2012 +0200,1356907470,Add error check for writing RDB checksumCloses #857n,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1214.0,112.0,-578.766064814815,7.0,0.9982721861892162,5.0,Feature Addition,False,,
0a98b21f657b2bfc822619c33bb8f9991df742d6,100c3315be5faafbdaa3fdcc5f302a5d599f0cd0,David Palm,dvdplm@gmail.com,Wed Jan 2 20:22:26 2013 +0100,1357154546,Extend range of bytesToHuman to TB and PBAlso adds a fallthrough case for when givennlarge values (like overflow numbers of 2^64 by mistake).nnCloses #858n,9.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3623.0,521.0,-587.59875,0.0,0.0,0.0,Feature Addition,False,,
100c3315be5faafbdaa3fdcc5f302a5d599f0cd0,18ca831830b3fdcae0c3aade84c88d4204db6533,Cong Ding,dinggnu@gmail.com,Sun Jan 13 23:21:06 2013 +0100,1358115666,Remove unused functionCloses #878n,0.0,6.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1076.0,42.0,-576.4746759259259,0.0,0.0,0.0,None,False,,
18ca831830b3fdcae0c3aade84c88d4204db6533,a6edfceaa876ac6f21d7995aaf2380ab0eb50cbe,antirez,antirez@gmail.com,Mon Aug 18 11:15:50 2014 +0200,1408353350,Fix invalid expire error for SET family commands.,1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,447.0,49.0,49.94703703703704,7554.0,1.0200212076495845,3426.0,Corrective,True,,
a6edfceaa876ac6f21d7995aaf2380ab0eb50cbe,82bac1b7297fa877f1b788f8d29ac6261616715a,Matt Stancliff,matt@genges.com,Fri Aug 1 21:06:26 2014 -0400,1406941586,"Remove unused global variableIt has an important name, but nothing uses it...n",0.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3632.0,522.0,576.2388888888888,101.0,1.0017353913789613,65.0,None,False,,
82bac1b7297fa877f1b788f8d29ac6261616715a,879e18b7ec9728f52fb79eae99f8403ae3372096,Matt Stancliff,matt@genges.com,Fri Aug 1 21:48:12 2014 -0400,1406944092,"Fix memory leak in cluster config parsingThe continue stop us from triggering thenfree after the long line for loop, so add itnearlier.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4625.0,406.0,0.21261574074074074,102.0,5.7033206314643445,66.0,Corrective,True,,
879e18b7ec9728f52fb79eae99f8403ae3372096,60c448b58469ea08aaae16b5667788cbd8044516,Matt Stancliff,matt@genges.com,Thu Mar 27 12:33:42 2014 -0400,1395938022,"Cluster: Fix segfault if cluster config corruptThis commit adds a size check after initial confignline parsing to make sure we have *at least* 8 argumentsnper line.nnAlso, instead of asserting for cluster->myself, we just testnand error out normally (since the error does a hard exit anyway).nnCloses #1597n",7.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4626.0,407.0,-127.38506944444444,103.0,0.9921497864360302,67.0,None,False,,
60c448b58469ea08aaae16b5667788cbd8044516,681de88df4814a4a6e794a07530a3865ef515d2c,Matt Stancliff,matt@genges.com,Mon Aug 4 12:28:45 2014 -0400,1407169725,Sentinel: Reject config from STDINSentinel needs to die with a more accurate error messagenwhen attempted to open a config from STDIN.nnSee: https://groups.google.com/forum/#!topic/redis-db/sYx7VNMWaNMn,7.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3631.0,523.0,2.6404976851851854,104.0,1.378716484248638,68.0,None,False,,
681de88df4814a4a6e794a07530a3865ef515d2c,5afe1e37c7f04224831d6e0e34579e4ce496d006,Mariano Pu00c3u00a9rez Rodru00c3u00adguez,mariano-perez-rodriguez@users.noreply.github.com,Tue Aug 5 09:50:44 2014 -0300,1407243044,Stop tests from leaving a black backgroundUses ANSI default background color code after closing testsnso any non-black terminals don't remain polluted.nnFixes #1649nCloses #1912n,1.0,1.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,373.0,21.0,26.14288194444445,0.0,0.0,0.0,Corrective,True,,
5afe1e37c7f04224831d6e0e34579e4ce496d006,ef57f94df0c07ccdd61e537283f45f977840f8ad,Jan-Erik Rediger,badboy@archlinux.us,Tue Aug 5 09:12:40 2014 +0200,1407222760,Use correct github url to find commands.jsonOnce this is merged:n  - merge the latest changes to commands.json in antirez/redis-docn  - re-run: utils/generate-command-help.rb > src/help.hnnThen we'll have nice and easy tab-completed help in redis-cli again.nnCloses #1909n,1.0,1.0,"utils/generate-command-help.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,115.0,7.0,104.70743055555555,16.0,1.0095504205832786,4.0,Non Functional,False,,
ef57f94df0c07ccdd61e537283f45f977840f8ad,c38884ceaca3b0be250d28b3a9e842328cde7d90,Eiichi Sato,sato.eiichi@gmail.com,Wed Aug 6 14:48:30 2014 +0900,1407304110,Sentinel: fix bufsize to support IPv6 addressCloses #1914n,2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3860.0,158.0,-7.163981481481483,0.0,0.0,0.0,None,False,True,"[""7e63dd23f3faae7a399617128ffef224e0f21754""]"
c38884ceaca3b0be250d28b3a9e842328cde7d90,7e63dd23f3faae7a399617128ffef224e0f21754,Matt Stancliff,matt@genges.com,Wed Aug 6 10:16:46 2014 -0400,1407334606,"Rename two 'buf' vars to 'ip' for better clarityClearly ip[32] is wrong, but it's less clear that buf[32] was wrongnwithout further reading.n",5.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3860.0,159.0,0.352962962962963,105.0,3.8331584470094437,69.0,Corrective,True,,
7e63dd23f3faae7a399617128ffef224e0f21754,b34a8c3b754c97083e93f225e4dc6b262ff0a0de,CharSyam,charsyam@gmail.com,Thu May 9 14:30:20 2013 +0000,1368109820,redis-benchmark: add auth optionCloses #1097n,14.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,799.0,46.0,-460.8015972222222,0.0,0.0,0.0,None,False,,
b34a8c3b754c97083e93f225e4dc6b262ff0a0de,aa404fc11be08f45fa0785c43f5fc7426e2b14a4,Matt Stancliff,matt@genges.com,Wed Aug 6 10:40:34 2014 -0400,1407336034,"redis-benchmark: Remove unused bufferThis just deletes old code that didn't get removed whennlogic changed.  We were setting offsets that neverngot read anywhere.nnSince clients are now just cloned, we don't need to tracknper-client buffer offsets anywhere because they are allnthe same from the original client.n",0.0,9.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,813.0,47.0,454.00710648148146,106.0,1.0022026086942777,70.0,None,False,,
aa404fc11be08f45fa0785c43f5fc7426e2b14a4,6b099c7de614bebe3e61a0cbb91af459cc67f1c3,Matt Stancliff,matt@genges.com,Wed Aug 6 16:56:23 2014 -0400,1407358583,Deny CLIENT command in scriptsWe don't want scripts doing CLIENT SETNAMEnor CLIENT KILL or CLIENT LIST or CLIENT PAUSE.nnOriginally reported by Chris Wj then propernaction inspired by Itamar Haber.nnReference: https://groups.google.com/forum/#!topic/redis-db/09B2EYwyVgkn,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3638.0,524.0,2.1858564814814816,107.0,1.4574865772167451,71.0,None,False,,
6b099c7de614bebe3e61a0cbb91af459cc67f1c3,1f8a6d806cc25ece4d092fb3d49af9ccc1443102,Matt Stancliff,matt@genges.com,Wed Aug 13 10:58:54 2014 -0400,1407941934,Fix redis-benchmark abort output,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,804.0,48.0,7.012731481481483,108.0,1.1425977884139296,72.0,Corrective,True,,
c951c3ee5a12110f1c0c1270c45ab663c04e0f77 1f8a6d806cc25ece4d092fb3d49af9ccc1443102,209f266cc534471daa03501b2802f08e4fca4fe6,antirez,antirez@gmail.com,Mon Aug 25 10:27:53 2014 +0200,1408955273,Merge branch '1906-merge' into unstable,,,,,,,,,,,,,,,Merge,False,,
209f266cc534471daa03501b2802f08e4fca4fe6,8eeb1802ec42682a614a5ebca318a0ba44ca7c03,antirez,antirez@gmail.com,Mon Aug 25 10:36:04 2014 +0200,1408955764,No longer useful assert removed from sdsIncrLen().,0.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1092.0,45.0,12.804583333333332,7555.0,1.0780970355666917,3427.0,Preventative,False,,
8eeb1802ec42682a614a5ebca318a0ba44ca7c03,119a7000b5b8e75016dbb554e703bae6e52cb56d,antirez,antirez@gmail.com,Mon Aug 25 10:42:18 2014 +0200,1408956138,Use modern typedef form in cluster.h.,4.0,5.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,237.0,22.0,94.7392476851852,7556.0,1.0105552875332402,3428.0,None,False,,
119a7000b5b8e75016dbb554e703bae6e52cb56d,8bbc1897c4d680cae0d4708981a53e27e3c0ef15,Mariano Pu00c3u00a9rez Rodru00c3u00adguez,mariano-perez-rodriguez@users.noreply.github.com,Mon Aug 25 15:24:15 2014 -0300,1408991055,"Missing assert removal from sdsIncrLen()Companion for 8eeb1802ec42682a614a5ebca318a0ba44ca7c03, but dealing with hiredis.",0.0,1.0,"deps/hiredis/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1103.0,8.0,13.213043981481485,1.0,1.0756827875091866,0.0,Preventative,False,,
119a7000b5b8e75016dbb554e703bae6e52cb56d 8bbc1897c4d680cae0d4708981a53e27e3c0ef15,26744da0d1afb8d5a1c840e1a0764af14737acea,Salvatore Sanfilippo,antirez@gmail.com,Tue Aug 26 10:03:54 2014 +0200,1409040234,Merge pull request #1964 from mariano-perez-rodriguez/patch-2Missing assert removal from sdsIncrLen(),,,,,,,,,,,,,,,Merge,False,,
26744da0d1afb8d5a1c840e1a0764af14737acea,293348d0de8776e409551bbbd72691f66cb121cf,antirez,antirez@gmail.com,Tue Aug 26 10:05:24 2014 +0200,1409040324,Missing va_end also added in hiredis copy of sds.c.,1.0,0.0,"deps/hiredis/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1102.0,9.0,0.5702430555555555,7557.0,2.753638190342812,707.0,Feature Addition,False,,
293348d0de8776e409551bbbd72691f66cb121cf,064d5c96ac0545e2115edd7d4153433a99aaa707,antirez,antirez@gmail.com,Tue Aug 26 10:18:56 2014 +0200,1409041136,"Use long for rehash and iterator index in dict.h.This allows to support datasets with more than 2 billion of keysn(possible in very large memory instances, this bug was actuallynreported).nnCloses issue #1814.n",5.0,3.0,"src/dict.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,183.0,19.0,829.8227546296298,7558.0,1.0012050766195804,3429.0,Corrective,True,,
064d5c96ac0545e2115edd7d4153433a99aaa707,72aa797c89e68d423b5c6857bbd47c275f1ed291,antirez,antirez@gmail.com,Tue Aug 26 10:26:36 2014 +0200,1409041596,"Cast to right type in dictNext().This closes issue #1929, the other part was fixed in the context of issuen",1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1070.0,43.0,589.4204861111111,7559.0,1.0016965816824552,3430.0,Corrective,True,,
72aa797c89e68d423b5c6857bbd47c275f1ed291,91e6b4d74ec0d8905bd22d46fa7b9e71ce8848c4,antirez,antirez@gmail.com,Tue Aug 26 10:32:37 2014 +0200,1409041957,Fix dictRehash assert casting type.Also related to #1929.n,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1070.0,44.0,0.004178240740740741,7560.0,240.33518005540162,3431.0,Corrective,True,,
91e6b4d74ec0d8905bd22d46fa7b9e71ce8848c4,86cde329d16c3f69555a21a8155e998e1d91ab08,Paddy Byers,paddy.byers@gmail.com,Fri Aug 15 22:02:05 2014 +0100,1408136525,Store the length of the static argv when first allocated.,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1163.0,98.0,2.4704513888888893,0.0,0.0,0.0,None,False,,
86cde329d16c3f69555a21a8155e998e1d91ab08,a23502e5e8c55d149a3463aad845fd530b447bfd,Paddy Byers,paddy.byers@gmail.com,Sun Aug 17 15:32:26 2014 +0100,1408285946,Add regression test for issue #1939,12.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,506.0,38.0,49.508125,1.0,1.0201987047580574,0.0,Feature Addition,False,,
a23502e5e8c55d149a3463aad845fd530b447bfd,67e414c7b871bced5e84f9eb9675a630ed6108dc,Matt Stancliff,matt@genges.com,Mon Aug 4 13:13:12 2014 -0400,1407172392,Sentinel: Abort Hello quicker if not connectedWe can save a little work by aborting when we enter the functionnif we're disconnected.n,2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3860.0,160.0,-1.8774768518518519,109.0,0.4673702639722835,73.0,None,False,,
67e414c7b871bced5e84f9eb9675a630ed6108dc,f0e306f4a0bc0e4db15da54eb3d1d2337a1b6dea,Matt Stancliff,matt@genges.com,Tue Sep 2 17:56:17 2014 -0400,1409694977,Increase size of range request in getrange32 bit builds don't have a big enough long to capturenthe same range as a 64 bit build.  If we use long longnwe get proper size limits everywhere.nnAlso updates size of unsigned comparison to fit new size of `end`.nnFixes #1981n,4.0,4.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,447.0,50.0,15.528090277777775,110.0,1.064399419510788,74.0,Corrective,True,,
f0e306f4a0bc0e4db15da54eb3d1d2337a1b6dea,b20df972edf56c53a27d47839cdf58130bc6dfdc,Matt Stancliff,matt@genges.com,Tue Sep 2 18:56:28 2014 -0400,1409698588,"Return empty string if GETRANGE of empty stringPreviously, GETRANGE of a key containing nothing ()nwould allocate a large (size_t)-1 return value causingncrashes on 32bit builds when it tried to allocate then4 GB return string.n",1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,447.0,51.0,0.04179398148148148,111.0,24.926890058155635,75.0,None,False,,
67e414c7b871bced5e84f9eb9675a630ed6108dc b20df972edf56c53a27d47839cdf58130bc6dfdc,0019479f8650ac7f0708ffe04e2571e31c3b7189,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 3 15:10:35 2014 +0200,1409749835,Merge pull request #1982 from mattsta/fix-getrange-32bitIncrease size of range request in getrange,,,,,,,,,,,,,,,Merge,False,,
67e414c7b871bced5e84f9eb9675a630ed6108dc,3d939266be28d4db5359fea0ce7e9aa7666a8a84,Dara Kong,darakong@gmail.com,Tue Jul 29 10:49:56 2014 -0700,1406656196,sentinel: Decouple bind address from address sent to other sentinelsThere are instances such as EC2 where the bind address is privaten(behind a NAT) and cannot be accessible from WAN.nnhttps://groups.google.com/d/msg/redis-db/PVVvjO4nMd0/P3oWC036v3cJn,31.0,3.0,"sentinel.conf,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,2.0,2.0,0.7335379291086666,13.0,2010.0,178.0,29.21162037037037,0.5,0.5085582380172782,0.0,None,False,,
3d939266be28d4db5359fea0ce7e9aa7666a8a84,cd576a1aab9bc321a63c1aabac8d274e3ba20f26,antirez,antirez@gmail.com,Thu Sep 4 11:23:19 2014 +0200,1409822599,"Sentinel: announce ip/port changes + rewrite.The original implementation was modified in order to allow tonselectively announce a different IP or port, and to rewrite the twonoptions in the config file after a rewrite.n",35.0,19.0,"src/config.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.2285381439535281,13.0,2876.5,310.0,29.31668981481481,7561.5,1.031270141379362,3433.0,None,False,,
cd576a1aab9bc321a63c1aabac8d274e3ba20f26,c9437fe5a3ccc2a29ef11e1222356cf4c580a7d7,antirez,antirez@gmail.com,Thu Sep 4 11:30:08 2014 +0200,1409823008,Sentinel: clarify announce-ip/port options in sentinel.conf.,18.0,3.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,166.0,18.0,36.65291666666667,7563.0,1.0272829583821206,1348.0,None,False,,
c9437fe5a3ccc2a29ef11e1222356cf4c580a7d7,0a6cbabb260bb536bc1ee91e823fe7d1ee3dcd6d,antirez,antirez@gmail.com,Thu Sep 4 11:45:58 2014 +0200,1409823958,Sentinel: don't set announce-ip if is empty.,2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3898.0,163.0,0.015729166666666666,7564.0,64.57615894039736,3434.0,None,False,,
0a6cbabb260bb536bc1ee91e823fe7d1ee3dcd6d 0019479f8650ac7f0708ffe04e2571e31c3b7189,d9f0094154055803631f4f2727d9bde857feea07,antirez,antirez@gmail.com,Thu Sep 4 11:46:18 2014 +0200,1409823978,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d9f0094154055803631f4f2727d9bde857feea07,0ab04287aa85735e52312cb8973ec37e1a867169,antirez,antirez@gmail.com,Fri Sep 5 09:56:26 2014 +0200,1409903786,AOF loading: split handling of format errors from unexpected EOF.,11.0,8.0,"src/aof.c,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4854607607459134,13.0,805.0,137.0,64.33488425925925,7565.5,1.0256962996363224,577.0,None,False,True,"[""de663966c64e9f27e667ad6a0dacf66aaa8ad32e""]"
0ab04287aa85735e52312cb8973ec37e1a867169,7b2e5ff9f9d5a7c5fa93bc22c53fce74f768ad83,antirez,antirez@gmail.com,Fri Sep 5 10:27:11 2014 +0200,1409905631,Test AOF format error detection.,25.0,0.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,158.0,16.0,0.021354166666666667,7567.0,47.82926829268293,578.0,Preventative,False,True,"[""9f40c25a0848d502967ca124b48b3c87bbce0106"", ""95883313b5a405916fabed34c3af290d6072c817""]"
7b2e5ff9f9d5a7c5fa93bc22c53fce74f768ad83,132550efc32e9738ec31f552c899dd67b5551e10,antirez,antirez@gmail.com,Fri Sep 5 11:48:35 2014 +0200,1409910515,AOF ability to load truncated files.,14.0,3.0,"src/aof.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8343470230852538,13.0,2190.0,1101.0,17.538958333333333,7569.0,5.2975731573004685,3438.0,None,False,True,"[""de663966c64e9f27e667ad6a0dacf66aaa8ad32e"", ""0ba8fe1a43a624a6e4a4e5698ac7b6616ee5a133""]"
132550efc32e9738ec31f552c899dd67b5551e10,de663966c64e9f27e667ad6a0dacf66aaa8ad32e,antirez,antirez@gmail.com,Fri Sep 5 15:14:36 2014 +0200,1409922876,"Correct cleanup when aborting AOF loading.Because of the new ability to start with a truncated AOF, we neednto correctly release all the memory on EOF error. Otherwise there is ansmall leak, that is not really a problem, but causes a false positive innthe tests that detect memory leaks.n",29.0,8.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1463.0,124.0,0.14306712962962964,7571.0,7.989725750343823,3439.0,Corrective,True,,
de663966c64e9f27e667ad6a0dacf66aaa8ad32e,31f79a46ffbf04d372cfc0ebfcc5578daf39c532,antirez,antirez@gmail.com,Mon Sep 8 09:23:55 2014 +0200,1410161035,Make aof-load-truncated option actually configurable.,38.0,1.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,2.0,2.0,0.961236604722876,13.0,1362.0,288.0,71.72093171296295,7572.5,1.0070693255614882,3440.0,None,False,,
31f79a46ffbf04d372cfc0ebfcc5578daf39c532,9f40c25a0848d502967ca124b48b3c87bbce0106,antirez,antirez@gmail.com,Mon Sep 8 09:31:00 2014 +0200,1410161460,"AOF tests fixed turning aof-load-truncated to no.When aof-load-truncated option was introduced, with a default of yes,nthe past behavior of the server to abort with trunncated AOF changed, sonwe need to explicitly configure the tests to abort with truncated AOFnby setting the option to no.n",6.0,6.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,183.0,17.0,2.960983796296296,7574.0,1.3377255901402891,579.0,Corrective,True,,
9f40c25a0848d502967ca124b48b3c87bbce0106,b892ea70ae4c2da7a0736943a4ee1915edda838d,antirez,antirez@gmail.com,Mon Sep 8 10:22:23 2014 +0200,1410164543,Tests for aof-load-truncated = yes.,27.0,1.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,183.0,18.0,0.03568287037037037,7575.0,29.02465131365553,580.0,Preventative,False,,
b892ea70ae4c2da7a0736943a4ee1915edda838d,acfc19633dbd522de4571d7ca9cbc629987b39b6,xiaost,xiaost7@gmail.com,Tue Sep 9 17:53:30 2014 +0800,1410256410,Limit the *SCAN command `dictScan` iterations*SCAN will cause redis server to hang for secondsnafter millions of keys was deleted by SCAN/DEL pairsn,8.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1207.0,145.0,27.00615740740741,0.0,0.0,0.0,None,False,,
b892ea70ae4c2da7a0736943a4ee1915edda838d acfc19633dbd522de4571d7ca9cbc629987b39b6,99871803c8d79406d939dbb43ae0b980d29dc7dc,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 10 09:57:54 2014 +0200,1410335874,Merge pull request #1993 from xiaost/limit-scan-iter-countLimit the *SCAN command `dictScan` iterations,,,,,,,,,,,,,,,Merge,False,,
99871803c8d79406d939dbb43ae0b980d29dc7dc,12b56a969f03ff2e0e28704ff2c30875ea836fe0,antirez,antirez@gmail.com,Wed Sep 10 15:41:05 2014 +0200,1410356465,luaRedisGenericCommand() cached argv handling simplified.As discussed in issue #1945.n,2.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1164.0,99.0,25.69375,7576.0,1.0389199708100219,3441.0,None,False,,
12b56a969f03ff2e0e28704ff2c30875ea836fe0,087b19237cbdda4a1c082a9cf1aaf6cd0a2b9066,Byron Grobe,grobe0ba@gmail.com,Thu Sep 11 10:21:05 2014 -0400,1410445265,Fixed issue #1996 (Missing '-' in help message for redis-benchmark),1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,804.0,49.0,28.973738425925934,0.0,0.0,0.0,Corrective,True,,
12b56a969f03ff2e0e28704ff2c30875ea836fe0,f4be6f16f2accf22d463ea557cb346d4c464870a,antirez,antirez@gmail.com,Thu Sep 11 18:53:31 2014 +0200,1410454411,"Sentinel: fix computation of total number of votes.The code to check the number of voters was never updated to follow the newnSentinel specification, so the number of voters was computed using onlynthe set of Sentinels that provided a vote.nnThis means that there is a changing majority on partitions, even ifnusually the issue is not triggered because of the configured quorumncheck (what was broken was the other implicit check that requires anywaynhalf of the known sentinels to agree in order to start a failover).n",2.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3899.0,164.0,7.296909722222222,7577.0,1.1370443157539103,3442.0,None,False,,
f4be6f16f2accf22d463ea557cb346d4c464870a,f5efa9bbadd0c56a1b9b6216a0570cb76ab17352,antirez,antirez@gmail.com,Thu Sep 11 19:27:45 2014 +0200,1410456465,Sentinel sentinelGetLeader() top comment improved.,3.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3899.0,165.0,0.023773148148148147,7578.0,43.064264849074966,3443.0,None,False,,
f5efa9bbadd0c56a1b9b6216a0570cb76ab17352,3064e9bd4b3f3ed1dfaaa10dbef231f2fdbf2975,antirez,antirez@gmail.com,Mon Sep 15 16:48:26 2014 +0200,1410792506,"Cluster test: unit 08, update messages.",90.0,0.0,"tests/cluster/tests/08-update-msg.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7579.0,0.0,581.0,Preventative,False,,
3064e9bd4b3f3ed1dfaaa10dbef231f2fdbf2975,b82d650afaff867daf9ac2c69d7e631a0f531641,antirez,antirez@gmail.com,Mon Sep 15 18:11:45 2014 +0200,1410797505,"Cluster test: unit 09, Pub/Sub across the cluster.",40.0,0.0,"tests/cluster/tests/09-pubsub.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7580.0,0.0,582.0,Preventative,False,,
b82d650afaff867daf9ac2c69d7e631a0f531641,046a00a03d43a6ba1db197df24be0f888a4cf196,antirez,antirez@gmail.com,Tue Sep 16 10:12:50 2014 +0200,1410855170,Don't propagate SAVE.This is a general fix (check that dirty delta is positive) but actuallynshould have as the only effect fixing the SAVE propagation tonAOF and slaves.n,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3639.0,526.0,10.933506944444444,7581.0,1.0914619623036983,3444.0,Corrective,True,,
046a00a03d43a6ba1db197df24be0f888a4cf196,0ba8fe1a43a624a6e4a4e5698ac7b6616ee5a133,antirez,antirez@gmail.com,Tue Sep 16 10:32:58 2014 +0200,1410856378,"On AOF end of file, truncate the AOF to last valid command.Recently we introduced the ability to load truncated AOFs, butnunfortuantely the support was broken since the server, after loading thentruncated AOF, continues appending to the file that is corrupted at thenend. The problem is fixed only in the next AOF rewrite.nnThis commit fixes the issue by truncating the AOF to the last validnopcode, and aborting if it is not possible to truncate the filencorrectly.n",16.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1484.0,125.0,10.804421296296296,7582.0,1.0925547026144562,3445.0,Corrective,True,True,"[""878c089ec91484b1ae62d098d57cfcc7731031dd""]"
0ba8fe1a43a624a6e4a4e5698ac7b6616ee5a133,878c089ec91484b1ae62d098d57cfcc7731031dd,antirez,antirez@gmail.com,Tue Sep 16 10:57:40 2014 +0200,1410857860,Seek at the end of AOF after truncate call.It is not clear if files open in append only mode will automatically fixntheir offset after a truncate(2) operation. This commit makes sure thatnwe reposition the AOF file descriptor offset at the end of the filenafter a truncated AOF is loaded and trimmed to the last valid command.n,10.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1497.0,126.0,0.017152777777777774,7583.0,59.29959514170041,3446.0,Corrective,True,,
878c089ec91484b1ae62d098d57cfcc7731031dd,a2c740ea931580efe2f7414661ab3c896ce8e401,antirez,antirez@gmail.com,Tue Sep 16 11:05:12 2014 +0200,1410858312,"Better truncated AOF loading tests.Now there are tests to write more data after loading a truncated AOF,ntesting that the loaded data is correct, appending more, and testingnagain.n",29.0,2.0,"tests/integration/aof.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,209.0,19.0,8.029733796296297,7584.0,1.1245371297939228,583.0,Perfective,False,,
a2c740ea931580efe2f7414661ab3c896ce8e401,c89afc8e5db6166bd8855bf48d5d7f7cc16492ad,antirez,antirez@gmail.com,Wed Sep 17 11:10:09 2014 +0200,1410945009,Cluster: new option to work with partial slots coverage.,40.0,6.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",6.0,2.0,2.0,2.0015609956490032,13.0,2124.333333333333,1702.0,37.97866319444445,7587.5,1.0223688515154337,3451.0,None,False,,
c89afc8e5db6166bd8855bf48d5d7f7cc16492ad,2374496799fc4d75338f821fa377a211f9557a55,antirez,antirez@gmail.com,Wed Sep 17 16:39:41 2014 +0200,1410964781,"Cluster: claim ping_sent time even if we can't connect.This fixes a potential bug that was never observed in practice sincenwhat happens is that the asynchronous connect returns ok (to fail later,ncalling the handler) every time, so a ping is queued, and sent_pingnhappens to always be populated.nnHowver technically connect(2) with a non blocking socket may return annerror synchronously, so before this fix the code was not correct.n",6.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4632.0,409.0,0.2288425925925926,7591.0,5.36981590127453,3452.0,None,False,,
2374496799fc4d75338f821fa377a211f9557a55,cceb58d23343345cb07850143e98f64ada4e53f7,Yossi Gottlieb,yossigo@gmail.com,Thu Sep 18 17:07:29 2014 +0300,1411049249,Unix domain sockets incorrectly listed as IPv6.,4.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,570.0,44.0,36.18253472222222,4.0,1.027637643622182,3.0,None,False,,
2374496799fc4d75338f821fa377a211f9557a55 cceb58d23343345cb07850143e98f64ada4e53f7,6d699ea4016f3567ade84a0a260701e22e865aa9,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 18 17:21:22 2014 +0200,1411053682,Merge pull request #2010 from yossigo/unixdomain-info-stringUnix domain sockets incorrectly listed as IPv6.,,,,,,,,,,,,,,,Merge,False,,
6d699ea4016f3567ade84a0a260701e22e865aa9,6d53b2f34b16a4fcd0602cb47cb58c31bd28b9e0,antirez,antirez@gmail.com,Thu Sep 18 17:22:19 2014 +0200,1411053739,anetPeerToString() refactoring and more explicit checks.Related to PR #2010.n,19.0,8.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,573.0,45.0,0.05196759259259258,7592.0,20.242761692650333,3453.0,None,False,,
6d53b2f34b16a4fcd0602cb47cb58c31bd28b9e0,747b57cfb66abf2baafa372e312298c037248f1c,antirez,antirez@gmail.com,Thu Sep 18 17:37:05 2014 +0200,1411054625,"anetPeerToString(): make unix sockets distinguishable.Following the CLIENT LIST output format, we prefix the unix socketnaddress with a / so that it is different than an IPv4/6 address.nThis makes parsing simpler.nnRelated to #2010.n",1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,584.0,46.0,0.01025462962962963,7593.0,98.51693002257336,3454.0,None,False,,
747b57cfb66abf2baafa372e312298c037248f1c,56c1f8805e72cbc55d74a7fc46ff17fdc5d7882d,Matt Stancliff,matt@genges.com,Thu Sep 18 14:21:12 2014 -0400,1411064472,"Fix hiredis getaddrinfo leakFixed in Redis by 1a5e5b6, but since that part of codenis largely copy/paste from Redis, the fix needs to benported over too.nnCloses #2012n",1.0,0.0,"deps/hiredis/net.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,384.0,8.0,146.96270833333332,112.0,1.0068044472733304,26.0,Corrective,True,,
747b57cfb66abf2baafa372e312298c037248f1c 56c1f8805e72cbc55d74a7fc46ff17fdc5d7882d,8fe3ecff09ae64f2f4648479ac8bb405989577e1,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 19 12:49:35 2014 +0200,1411123775,Merge pull request #2014 from mattsta/fix-hiredis-leakFix hiredis getaddrinfo leak,,,,,,,,,,,,,,,Merge,False,,
8fe3ecff09ae64f2f4648479ac8bb405989577e1,44acd50a11aab32aa27a230e5c2ad6c3ca46fdeb,antirez,antirez@gmail.com,Fri Sep 19 17:44:04 2014 +0200,1411141444,First version of release scripts.,49.0,14.0,"utils/mkrelease.sh,CAS_DELIMITER,utils/releasetools/00_test_release.sh,CAS_DELIMITER,utils/releasetools/01_create_tarball.sh,CAS_DELIMITER,utils/releasetools/02_upload_tarball.sh,CAS_DELIMITER,utils/releasetools/03_release_hash.sh,CAS_DELIMITER",5.0,1.0,2.0,2.0820430133874703,6.0,2.8,1.0,273.80784953703704,7596.0,1.0007304392490506,47.0,None,False,True,"[""07bd52113eb159c4dcd27081f23ebb341474c00b"", ""9f9c44feef1b68bb443270118570c030c04b0085""]"
44acd50a11aab32aa27a230e5c2ad6c3ca46fdeb,07bd52113eb159c4dcd27081f23ebb341474c00b,antirez,antirez@gmail.com,Fri Sep 19 18:19:19 2014 +0200,1411143559,02_upload_tarball.sh fixes.,4.0,2.0,"utils/releasetools/02_upload_tarball.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,3.0,1.0,0.024479166666666663,7599.0,41.85106382978724,48.0,Corrective,True,,
07bd52113eb159c4dcd27081f23ebb341474c00b,eba1e652f4824d94ec548913100f1649c3f9d73e,antirez,antirez@gmail.com,Fri Sep 19 18:20:47 2014 +0200,1411143647,03_release_hash.sh: fix commit stage.,1.0,1.0,"utils/releasetools/03_release_hash.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,8.0,1.0,0.025497685185185186,7600.0,40.219246482069906,49.0,None,False,True,"[""d61e820fafa2b057c70720a8e4c5bf23c1603260""]"
eba1e652f4824d94ec548913100f1649c3f9d73e,f3107559bee963f1345956581f90722e7c79be81,antirez,antirez@gmail.com,Fri Sep 19 19:17:52 2014 +0200,1411147072,"Quick, wrong, fix for create_tarball script.",1.0,0.0,"utils/releasetools/01_create_tarball.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,14.0,1.0,0.06513888888888889,7601.0,16.35181236673774,50.0,Corrective,True,,
f3107559bee963f1345956581f90722e7c79be81,5807558c981541e0d4087ae850d536c2dffac247,antirez,antirez@gmail.com,Fri Sep 19 19:18:48 2014 +0200,1411147128,03_release_hahs.sh: let me edit before committing.,1.0,1.0,"utils/releasetools/03_release_hash.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,8.0,2.0,0.040289351851851854,7602.0,25.82045389255961,51.0,None,False,True,"[""9f9c44feef1b68bb443270118570c030c04b0085""]"
5807558c981541e0d4087ae850d536c2dffac247,d61e820fafa2b057c70720a8e4c5bf23c1603260,antirez,antirez@gmail.com,Fri Sep 19 19:20:15 2014 +0200,1411147215,Fix 03_release_hash.sh commit message.,1.0,1.0,"utils/releasetools/03_release_hash.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,8.0,3.0,0.0010069444444444444,7603.0,994.103448275862,52.0,Corrective,True,True,"[""9f9c44feef1b68bb443270118570c030c04b0085""]"
d61e820fafa2b057c70720a8e4c5bf23c1603260,35a8302b7cbdf7ad59256f53f4e9704f3d256198,antirez,antirez@gmail.com,Mon Sep 22 14:55:54 2014 +0200,1411390554,Linenoise lib updated.,50.0,35.0,"deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER",2.0,1.0,1.0,0.3681150054280774,12.0,578.0,12.0,192.94775462962963,7604.5,1.0038870625959844,709.0,None,False,,
35a8302b7cbdf7ad59256f53f4e9704f3d256198,d4222e6bee4b6f58faec93cfb8179b695d5cdb9e,antirez,antirez@gmail.com,Thu Sep 25 17:01:56 2014 +0200,1411657316,"DEBUG POPULATE two args form implemented.The old DEBUG POPULATE form for automatic creation of test keys is:nnDEBUG POPULATE <count>nnNow an additional form is available:nnDEBUG POPULATE <count> <prefix>nnWhen prefix is not specified, it defaults to key, so the keys arennamed incrementally from key:0 to key:<count-1>. Otherwise the specifiednprefix is used instead of key.nnThe command is useful in order to populate different Redis instancesnwith key names guaranteed to don't collide. There are other debuggingnuses, for example it is possible to add additional N keys using a countnof N and a random prefix at every call.n",4.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,964.0,81.0,90.19422453703704,7606.0,1.0110871844082363,3455.0,Corrective,True,True,"[""591b69c745f8d8a9cff7a43083c3b0d0ac333362""]"
d4222e6bee4b6f58faec93cfb8179b695d5cdb9e,de10b8d9cc2ea8d0f96552f88227cf5bfe090b6b,antirez,antirez@gmail.com,Fri Sep 26 16:57:42 2014 +0200,1411743462,redis-trib should not abort easily on connection issues.,7.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1340.0,97.0,67.06061342592592,7607.0,1.0149118826821435,3456.0,None,False,,
de10b8d9cc2ea8d0f96552f88227cf5bfe090b6b,df484c7a2c5bfb085eac90d47ea14bab1e7d6bf8,Manuel Meurer,manuel@krautcomputing.com,Fri Jul 25 22:45:27 2014 +0200,1406321127,Improve disable save comment in redis.confCloses #1897n,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,890.0,141.0,-53.517152777777774,0.0,0.0,0.0,None,False,,
df484c7a2c5bfb085eac90d47ea14bab1e7d6bf8,74aeb27a26b905489888c3020d652ddba4d4684b,Lynn,homlean@gmail.com,Thu Jul 17 15:25:24 2014 +0800,1405581924,Remove surplus double quotesCloses #1877n,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,46.0,-39.04907407407408,0.0,0.0,0.0,None,False,,
74aeb27a26b905489888c3020d652ddba4d4684b,6e0a280cb55f948ecd731ca8bd87d8bb912e021f,Matt Stancliff,matt@genges.com,Thu Jul 31 11:58:53 2014 -0400,1406822333,"Update linenoise accessory filesThe core linenoise code was being backported, but notnthe README or example.  It's less confusing for usersnif everything matches across directories.nnFix inspired by @thrignnCloses #1872n",55.0,10.0,"deps/linenoise/.gitignore,CAS_DELIMITER,deps/linenoise/README.markdown,CAS_DELIMITER,deps/linenoise/example.c,CAS_DELIMITER",3.0,1.0,1.0,1.1126233617232948,6.0,24.33333333333333,4.0,1357.2937847222222,114.0,1.0004478965578292,29.0,Corrective,True,,
6e0a280cb55f948ecd731ca8bd87d8bb912e021f,0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35,Jan-Erik Rediger,badboy@archlinux.us,Sat Jul 12 18:02:17 2014 +0200,1405180937,Fix many small typosCloses #1871n,12.0,12.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1504.0,127.0,-65.70512731481483,17.0,0.9847804875986516,9.0,Corrective,True,True,"[""12d0195b3013aff008bb492cf59f31d823f024b0""]"
0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35,a2583466e43adf2f2e56a51f9e35fbd87d9737bf,zionwu,zionwu3@gmail.com,Wed Jun 11 08:35:46 2014 +0800,1402446946,Fix incorrect commentserror != success; and 0 != number of bytes writtennnCloses #1806n,2.0,2.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,1359.0,241.0,247.71692708333333,1.5,0.9852081403033583,2.0,Corrective,True,,
a2583466e43adf2f2e56a51f9e35fbd87d9737bf,aa628446f211d1abcdfaab4fcefe8f1572e0335e,Jan-Erik Rediger,badboy@archlinux.us,Tue Apr 29 12:58:17 2014 +0200,1398769097,Fix typo in redis.confCloses #1713n,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,890.0,142.0,-87.40775462962965,18.0,0.9885593674813262,1.0,Corrective,True,,
aa628446f211d1abcdfaab4fcefe8f1572e0335e,0d434a446a440b645b4538094f96434e974be767,Juarez Bochi,jbochi@gmail.com,Sun Apr 13 18:44:58 2014 -0300,1397425498,Fix typoCloses #1682n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3641.0,528.0,-156.47582175925925,0.0,0.0,0.0,Corrective,True,,
0d434a446a440b645b4538094f96434e974be767,45409d3d8bbe36e488bfe2c054e679ae33080df8,Dmitry Chestnykh,dmitry@codingrobots.com,Wed Apr 9 12:10:20 2014 +0200,1397038220,Fix typo in 00-RELEASENOTESCloses #1673n,1.0,1.0,"00-RELEASENOTES,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,16.0,15.0,57.81349537037037,0.0,0.0,0.0,Corrective,True,,
45409d3d8bbe36e488bfe2c054e679ae33080df8,4d2042212c805152740b7e30a362bf14b85bee2f,Agis Anastasopoulos,corestudiosinc@gmail.com,Sun Feb 9 00:11:09 2014 +0200,1391897469,Fix typoCloses #1544n,1.0,1.0,"BUGS,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,2.0,844.1546990740741,0.0,0.0,0.0,Corrective,True,,
4d2042212c805152740b7e30a362bf14b85bee2f,9f98b29cefc337d607016cea57216cde1c25dd47,Jan-Erik Rediger,badboy@archlinux.us,Mon Feb 3 21:50:23 2014 +0100,1391460623,Fix typo: ad -> andCloses #1537n,2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1896.0,116.0,-142.83214120370369,19.0,0.9929987747045406,10.0,Corrective,True,,
9f98b29cefc337d607016cea57216cde1c25dd47,3a82b8ac641120c231f4f7e8a2edc0bd1c40a399,Aaron Rutkovsky,aaron.rutkovsky@gmail.com,Thu Jan 16 22:02:38 2014 -0600,1389931358,Fix typosCloses #1513n,7.0,7.0,"deps/hiredis/test.c,CAS_DELIMITER,src/adlist.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",4.0,3.0,3.0,1.6644977792004616,13.0,889.5,217.0,-88.13529513888889,1.5,0.7474162525252562,1.0,Corrective,True,,
3a82b8ac641120c231f4f7e8a2edc0bd1c40a399,f62f00e0629d95dac5d7337cc6b4471513166770,Ben,bterris@gmail.com,Thu Dec 5 13:40:15 2013 -0700,1386276015,Grammar and typo fixes in redis.confCloses #1441n,16.0,17.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,890.0,143.0,-144.5958564814815,0.0,0.0,0.0,Corrective,True,,
f62f00e0629d95dac5d7337cc6b4471513166770,d9462d27801b337c482d8cde741081a29fcc14fb,xuxiang,dlutxx@gmail.com,Wed Nov 20 14:14:27 2013 +0800,1384928067,Fix typo in redis.hCloses #1386n,1.0,1.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1481.0,455.0,-301.1220138888889,0.0,0.0,0.0,Corrective,True,,
d9462d27801b337c482d8cde741081a29fcc14fb,39be4bf496fc0b045b7d8d1ff58f109c05f163da,Ted Nyman,ted@ted.io,Fri Nov 8 15:38:41 2013 -0800,1383953921,Fix on-place -> in-placeCloses #1373n,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,47.0,-250.32410879629631,2.0,0.9960051790264686,2.0,Corrective,True,,
39be4bf496fc0b045b7d8d1ff58f109c05f163da,fc8f7ec7656487b8f7dea14d33dbdbb2c6b6f470,Michael Parker,michael.g.parker@gmail.com,Tue Oct 29 11:28:19 2013 -0700,1383071299,Fix hash table size in comment for dictScanCloses #1351n,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1070.0,45.0,-300.58631944444437,1.0,0.9966731686197554,1.0,Corrective,True,,
fc8f7ec7656487b8f7dea14d33dbdbb2c6b6f470,12d0195b3013aff008bb492cf59f31d823f024b0,Matt Stancliff,matt@genges.com,Thu Jul 31 14:51:05 2014 -0400,1406832665,"Clean up text throughout project  - Remove trailing newlines from redis.confn  - Fix comment misspellingn  - Clarifies zipEncodeLength usage and a C API mention (#1243, #1242)n  - Fix cluster typos (inspired by @papanikge #1507)n  - Fix rewite -> rewrite in a few places (inspired by #682)nnCloses #1243, #1242, #1507n",33.0,33.0,"redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",7.0,2.0,2.0,2.078328851278104,13.0,1906.5714285714291,931.0,46.67974537037037,119.0,1.0048551851739849,81.0,Corrective,True,True,"[""e0f22df9950b584569771d486fd4e933432fe395""]"
12d0195b3013aff008bb492cf59f31d823f024b0,28343966a4447ccbb23323d2dd1aae406ea62dbb,Matt Stancliff,matt@genges.com,Thu Jul 31 14:25:48 2014 -0400,1406831148,Spell software correctly,5.0,5.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/run.tcl,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",5.0,1.0,3.0,2.3219280948873617,13.0,219.0,108.0,76.56808101851854,125.0,1.007638787964942,14.0,None,False,,
28343966a4447ccbb23323d2dd1aae406ea62dbb,09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c,Matt Stancliff,matt@genges.com,Thu Jul 31 14:33:50 2014 -0400,1406831630,Fix spelling in some test cases,5.0,5.0,"tests/cluster/tests/05-slave-selection.tcl,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",5.0,1.0,4.0,2.3219280948873617,13.0,309.4,107.0,25.545398148148145,130.0,1.0313116973265528,19.0,Corrective,True,,
09cb281bc327078dc2c71163f4cb7cb5a7e3ae2c,1cedebb79921bc5fa5bb1e5cbaf30ba67511df8b,Matt Stancliff,matt@genges.com,Thu Jul 31 14:39:49 2014 -0400,1406831989,Remove trailing spaces from tests,21.0,21.0,"tests/cluster/tests/03-failover-loop.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER,tests/unit/introspection.tcl,CAS_DELIMITER,tests/unit/maxmemory.tcl,CAS_DELIMITER",9.0,1.0,4.0,2.8337909488168287,13.0,250.11111111111111,142.0,152.86481481481482,137.0,1.0249774127213536,28.0,Preventative,False,,
1cedebb79921bc5fa5bb1e5cbaf30ba67511df8b,cf737ff1c86a1c8354427bf7bc1c8ad6b47627c6,Jan-Erik Rediger,badboy@archlinux.us,Mon May 12 11:20:46 2014 +0200,1399886446,Fix sentinel.conf typoCloses #1739n,1.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,181.0,19.0,-115.00650462962965,20.0,0.9913048396417192,2.0,Corrective,True,,
cf737ff1c86a1c8354427bf7bc1c8ad6b47627c6,9aba616866a113174366f53b6354f23c80766c37,Xiaojie Zhang,alghak@gmail.com,Thu Jan 23 21:52:03 2014 +0800,1390485123,Fix comment inconsistencies in ziplist.cCloses #1523n,4.0,3.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1535.0,40.0,-189.20766203703704,1.0,0.9947148017726456,1.0,Corrective,True,,
9aba616866a113174366f53b6354f23c80766c37,ef5fc599b47af5befa59102ad0f41456d96b83f5,Matt Stancliff,matt@genges.com,Mon Aug 11 13:28:07 2014 -0400,1407778087,"Cleanup wording of dictScan() commentSome language in the comment was difficultnto understand, so this commit: clarifies wording, removesnunnecessary words, and relocates some dependent clausesncloser to what they actually describe.nnI also tried to break up longer chains of thoughtn(if X, then Y, and Q, and also F, so obviously M)ninto more manageable chunks for ease of understanding.n",31.0,31.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1070.0,46.0,285.9581944444444,142.0,1.0034970146665767,82.0,Perfective,False,,
ef5fc599b47af5befa59102ad0f41456d96b83f5,38a5db6c9ac21812e4942d7016e4e58429f9ab09,T.J. Schuck,tj@tjschuck.com,Thu Aug 14 11:22:52 2014 -0400,1408029772,Fix typo radis -> redisCloses #1938n,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3641.0,529.0,122.73465277777778,0.0,0.0,0.0,Corrective,True,,
38a5db6c9ac21812e4942d7016e4e58429f9ab09,a63b9c24f03bffb741e819c1752c9cddc0cb7f36,Juarez Bochi,jbochi@gmail.com,Sat Aug 23 13:17:54 2014 -0300,1408810674,Fix typo in scripting.c commentCloses #1960n,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1162.0,100.0,-17.891099537037032,1.0,0.944106286037375,1.0,Corrective,True,,
a63b9c24f03bffb741e819c1752c9cddc0cb7f36,678df67501ba030a9be801ceb8634ae094d95493,Matt Stancliff,matt@genges.com,Thu Aug 28 10:36:32 2014 -0400,1409236592,Add missing 'by',1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,966.0,82.0,-28.01763888888889,143.0,0.9643081987041892,83.0,Feature Addition,False,,
678df67501ba030a9be801ceb8634ae094d95493,fa8786f17af6175ca6ab6d76308e21be290e25ea,Gregory Petrosyan,gregory.petrosyan@gmail.com,Mon Sep 15 21:40:11 2014 +0400,1410802811,Fix typos in commentsCloses #2002n,3.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1738.0,190.0,33.330243055555556,0.0,0.0,0.0,Corrective,True,,
fa8786f17af6175ca6ab6d76308e21be290e25ea,82154ffab5ae01869f8334e070f0c96a89791912,Aniruddh Chaturvedi,aniruddhc@cmu.edu,Tue Sep 16 11:26:02 2014 -0400,1410881162,Fix typo in unit testCloses #2005n,2.0,2.0,"utils/lru/test-lru.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,112.0,1.0,179.2736342592593,0.0,0.0,0.0,Corrective,True,,
82154ffab5ae01869f8334e070f0c96a89791912,c3d252d9955ee4d9b4be296cb2cf8560c9caf00c,Ezequiel Lovelle,ezequiellovelle@gmail.com,Thu Sep 25 17:40:11 2014 -0300,1411677611,Fix typoCloses #2029n,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1899.0,151.0,8.479189814814816,0.0,0.0,0.0,Corrective,True,,
c3d252d9955ee4d9b4be296cb2cf8560c9caf00c,be0061635eee4b489d3bb0f756ddb38dcc65dedd,Miguel Parramon,mparramont@gmail.com,Mon Sep 29 12:46:30 2014 +0200,1411987590,redis.conf small grammar fix:smile:nnCloses #2034n,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,889.0,145.0,59.6634837962963,0.0,0.0,0.0,Corrective,True,,
de10b8d9cc2ea8d0f96552f88227cf5bfe090b6b,16559b461521625271430d7d4926b632f3a326dd,antirez,antirez@gmail.com,Fri Oct 3 11:53:57 2014 +0100,1412333637,"INCR: Modify incremented object in-place when possible.However we don't try to do this if the integer is already inside a rangenrepresentable with a shared integer.nnThe performance gain appears to be around ~15% in micro benchmarks,nhowever in the long run this also helps to improve locality, so shouldnhave more, hard to measure, benefits.n",15.0,5.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,447.0,52.0,30.49825231481481,7608.0,1.032788764079909,3457.0,None,False,True,"[""0ed0dc3c02dfffdf6bfb9e32f1335ddc34f37723""]"
16559b461521625271430d7d4926b632f3a326dd,389ec305b3e984422b91eca112e4ce37728fba20,antirez,antirez@gmail.com,Fri Oct 3 12:28:56 2014 +0100,1412335736,Test: check that INCR object sharing works as expected.,23.0,0.0,"tests/unit/basic.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,783.0,35.0,63.70077546296297,7609.0,1.0156983960200203,584.0,Preventative,False,,
389ec305b3e984422b91eca112e4ce37728fba20 be0061635eee4b489d3bb0f756ddb38dcc65dedd,3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 6 09:44:54 2014 +0200,1412581494,Merge pull request #1902 from mattsta/comment-fixesALL comment fixes,,,,,,,,,,,,,,,Merge,False,,
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,e4b0c8ec50f2248286b770a655ea85d5cfcc79f4,antirez,antirez@gmail.com,Mon Oct 6 09:49:44 2014 +0200,1412581784,Linenoise README updated to match source code.,4.0,3.0,"deps/linenoise/README.markdown,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,51.0,2.0,66.6603125,7610.0,1.0150014298237802,710.0,None,False,,
e4b0c8ec50f2248286b770a655ea85d5cfcc79f4,edb3987a061a8425bac8afcffe66293cf819a54c,antirez,antirez@gmail.com,Tue Oct 7 09:51:55 2014 +0200,1412668315,Cluster: more chatty slaves when failover is stalled.,94.0,4.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.4754316462687206,13.0,2437.5,436.0,67.54224537037037,7611.5,1.0111041614901508,3459.0,None,False,,
edb3987a061a8425bac8afcffe66293cf819a54c,034ca98678e1ba122d390675fde709538bffa91a,antirez,antirez@gmail.com,Tue Oct 7 09:52:40 2014 +0200,1412668360,Cluster: nodes.conf added to git ignore list.,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,27.0,26.0,536.7299537037037,7613.0,1.0018631343249982,1351.0,None,False,,
034ca98678e1ba122d390675fde709538bffa91a,8beb98574ab285c910c50c877d688a11960d5bd5,antirez,antirez@gmail.com,Tue Oct 7 12:56:23 2014 +0200,1412679383,RDB file creation refactored to target non-disk target.,46.0,27.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1214.0,114.0,118.43098379629627,7614.0,1.0084437363259602,3460.0,None,False,True,"[""d956d809acb848aec0f6524e1337d274a635980d"", ""2a887bd53f992b940c7c9838a5dbdc2de1e3720a""]"
8beb98574ab285c910c50c877d688a11960d5bd5,2df8341c75f46cf2d6ec28804cbda6287766262d,antirez,antirez@gmail.com,Wed Oct 8 09:09:01 2014 +0200,1412752141,"Define different types of RDB childs.We need to remember what is the saving strategy of the current RDB childnprocess, since the configuration may be modified at runtime via CONFIGnSET and still we'll need to understand, when the child exists, what tondo and for what goal the process was initiated: to create an RDB filenon disk or to write stuff directly to slave's sockets.n",9.0,0.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.224394445405986,13.0,2118.333333333333,1101.0,125.84568287037035,7616.0,1.402721773655187,3463.0,None,False,,
034ca98678e1ba122d390675fde709538bffa91a,5b47783d77d733f0019171d6db5d7841d43f1fef,antirez,antirez@gmail.com,Wed Oct 8 10:12:40 2014 +0200,1412755960,Cluster test: less console-spammy resharding test.,19.0,2.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER,tests/cluster/tests/helpers/onlydots.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,1.0,45.0,2.0,39.369045138888886,7618.5,1.0127003334278508,586.0,Preventative,False,,
5b47783d77d733f0019171d6db5d7841d43f1fef,908be1dbebf3e9a5a6fdb80d391e58481ddd5005,antirez,antirez@gmail.com,Wed Oct 8 10:17:01 2014 +0200,1412756221,Cluster test: helpers/onlydots.tcl: detect EOF and exit.,3.0,1.0,"tests/cluster/tests/helpers/onlydots.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,14.0,1.0,0.003020833333333333,7620.0,332.0344827586207,587.0,Preventative,False,,
908be1dbebf3e9a5a6fdb80d391e58481ddd5005,36e34a656aab9c0a2fccd9a841cab0592e721d6d,antirez,antirez@gmail.com,Wed Oct 8 16:27:07 2014 +0200,1412778427,"Cluster: fix logic to detect we are among a minority.In the cluster evaluation function we are supposed to set the clusternstate as fail if we are among a minority, however the code was notndetecting to be into a minority partition if exactly half the mastersnwere reachable, which is a minority.n",8.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4718.0,412.0,1.2744444444444445,7621.0,1.7846556233653006,3464.0,None,False,,
36e34a656aab9c0a2fccd9a841cab0592e721d6d,5f6950caa893921e7cfe3d5b26109f880e060f8f,antirez,antirez@gmail.com,Wed Oct 8 16:58:12 2014 +0200,1412780292,Cluster: process gossip section only for known nodes.With the exception of nodes sending MEET packets: we have to trust themnsince they can send us MEET packets only when the cluster is initiallyncreated or because sysadmin manual action.n,8.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4717.0,413.0,0.02158564814814815,7622.0,47.32707774798927,3465.0,None,False,,
5f6950caa893921e7cfe3d5b26109f880e060f8f,591b69c745f8d8a9cff7a43083c3b0d0ac333362,antirez,antirez@gmail.com,Thu Oct 9 11:17:27 2014 +0200,1412846247,Fix DEBUG POPULATE warning for lack of casting.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,966.0,83.0,41.77841435185185,7623.0,1.0239358054994174,3466.0,Corrective,True,,
5f6950caa893921e7cfe3d5b26109f880e060f8f,da838544ae5f5e914cad85c1d6766ba79d71b32b,antirez,antirez@gmail.com,Thu Oct 9 11:26:32 2014 +0200,1412846792,02_upload_tarball.sh: let me exit before updating site.,2.0,1.0,"utils/releasetools/02_upload_tarball.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,5.0,2.0,19.713344907407404,7624.0,1.05072705848231,53.0,None,False,,
da838544ae5f5e914cad85c1d6766ba79d71b32b 591b69c745f8d8a9cff7a43083c3b0d0ac333362,5ba47b50ae6ea5e0ed56598d0ef33dc43c6a7abf,antirez,antirez@gmail.com,Thu Oct 9 11:26:51 2014 +0200,1412846811,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
5ba47b50ae6ea5e0ed56598d0ef33dc43c6a7abf,3fecb96122e35cb0c5809699c26eb093efda19e8,Matt Stancliff,matt@genges.com,Fri Apr 4 11:34:36 2014 -0400,1396625676,"Lua: Add bitopA few people have written custom C commands because bitnmanipulation isn't exposed through Lua.  Let's giventhem Mike Pall's bitop.nnThis adds bitop 1.0.2 (2012-05-08) from http://bitop.luajit.org/nnbitop is imported as bit into the global namespace.nnNew Lua commands: bit.tobit, bit.tohex, bit.bnot, bit.band, bit.bor, bit.bxor,nbit.lshift, bit.rshift, bit.arshift, bit.rol, bit.ror, bit.bswapnnVerification of working (the asserts would abort on error, so (nil) is correct):n127.0.0.1:6379> eval assert(bit.tobit(1) == 1); assert(bit.band(1) == 1); assert(bit.bxor(1,2) == 3); assert(bit.bor(1,2,4,8,16,32,64,128) == 255) 0n(nil)n127.0.0.1:6379> eval 'assert(0x7fffffff == 2147483647, broken hex literals); assert(0xffffffff == -1 or 0xffffffff == 2^32-1, broken hex literals); assert(tostring(-1) == -1, broken tostring()); assert(tostring(0xffffffff) == -1 or tostring(0xffffffff) == 4294967295, broken tostring())' 0n(nil)nnTests also integrated into the scripting tests and can be run with:n./runtest --single unit/scriptingnnTests are excerpted from `bittest.lua` included in the bitop distribution.n",212.0,1.0,"deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/lua_bit.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",4.0,3.0,3.0,0.613914651045677,13.0,465.5,147.0,16.061209490740737,145.5,1.0066159594064832,29.0,None,False,,
2df8341c75f46cf2d6ec28804cbda6287766262d,16546f5aca1236a179bff98af9aaee491cd6fd4d,antirez,antirez@gmail.com,Fri Oct 10 16:25:58 2014 +0200,1412951158,Add some comments in syncCommand() to clarify RDB target.,9.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1896.0,118.0,266.4328703703704,7625.0,1.0037532906454445,3467.0,Feature Addition,False,,
16546f5aca1236a179bff98af9aaee491cd6fd4d,29db3227ab8980f098080371ef57c4e1eeb38180,antirez,antirez@gmail.com,Fri Oct 10 16:33:16 2014 +0200,1412951596,rio.c refactoring before adding a new target.,24.0,17.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,203.0,12.0,261.23510416666664,7626.0,1.0038279694575891,3468.0,Feature Addition,False,,
29db3227ab8980f098080371ef57c4e1eeb38180,850ea57c37e517eb0f10d8fc319332ca339d0ba2,antirez,antirez@gmail.com,Fri Oct 10 17:44:06 2014 +0200,1412955846,rio.c: draft implementation of fdset target implemented.,69.0,0.0,"src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",2.0,1.0,1.0,0.5586293734521992,12.0,166.5,24.0,225.5664351851852,7627.5,11.16581420327753,3470.0,None,False,True,"[""fd112f52dce71e1ebd3fc3ffe1b7d521c628877e""]"
850ea57c37e517eb0f10d8fc319332ca339d0ba2,75f0cd6520c73bc868717940ed583c4809ab30db,antirez,antirez@gmail.com,Tue Oct 14 10:11:26 2014 +0200,1413274286,Diskless replication: RDB -> slaves transfer draft implementation.,200.0,28.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",5.0,1.0,1.0,1.1724933722939124,13.0,1675.8,1236.0,131.5005300925926,7631.0,1.034324817525539,3475.0,None,False,True,"[""8e55537459f8be2d4310117f9f36c5a2ffa1451c""]"
75f0cd6520c73bc868717940ed583c4809ab30db,1cd0d26c63c755aaac4997e852c4041a0237a395,antirez,antirez@gmail.com,Tue Oct 14 15:29:07 2014 +0200,1413293347,Diskless replication: parent-child pipe and a few TODOs.,35.0,4.0,"src/rdb.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.29181825659888583,13.0,1429.5,575.0,0.22061342592592592,7634.5,4.399611772729658,3477.0,None,False,True,"[""8e55537459f8be2d4310117f9f36c5a2ffa1451c""]"
1cd0d26c63c755aaac4997e852c4041a0237a395,2a436aaeabcc9cd5ad625613e7882df9495ab04b,antirez,antirez@gmail.com,Tue Oct 14 17:19:34 2014 +0200,1413299974,"rio.c fdset target: tolerate (and report) a subset of FDs in error.Fdset target is used when we want to write an RDB file directly tonslave's sockets. In this setup as long as there is a single slave thatnis still receiving our payload, we want to continue sennding instead ofnaborting. However rio calls should abort of no FD is ok.nnAlso we want the errors reported so that we can signal the parent who isnok and who is broken, so there is a new set integers with the state ofneach fd. Zero is ok, non-zero is the errno of the failure, if avaialble,nor a generic EIO.n",22.0,3.0,"src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",2.0,1.0,1.0,0.5293608652873644,12.0,201.0,26.0,3.982962962962963,7636.5,1.1883020271526874,3479.0,None,False,,
5ba47b50ae6ea5e0ed56598d0ef33dc43c6a7abf,93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,antirez,antirez@gmail.com,Wed Oct 15 09:21:02 2014 +0200,1413357662,redis-cli: add missing newline in error message.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1994.0,117.0,657.4728472222222,7638.0,1.0015209753592489,3480.0,None,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
2a436aaeabcc9cd5ad625613e7882df9495ab04b,fbe7545545269ab47f98be70ca41435a30043fe2,antirez,antirez@gmail.com,Wed Oct 15 09:46:45 2014 +0200,1413359205,Diskless replication: child writes report to parent.,40.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1397.0,118.0,0.7622453703703703,7639.0,2.3119135108870603,3481.0,None,False,True,"[""8e55537459f8be2d4310117f9f36c5a2ffa1451c""]"
fbe7545545269ab47f98be70ca41435a30043fe2,7a1e0d9898a8b2a6c36ef12b1d1f9f0b6dece4e0,antirez,antirez@gmail.com,Wed Oct 15 11:35:00 2014 +0200,1413365700,Diskless replication: read report from child.,57.0,15.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1437.0,119.0,0.07517361111111111,7640.0,14.302540415704387,3482.0,None,False,,
7a1e0d9898a8b2a6c36ef12b1d1f9f0b6dece4e0,3730d118a3ee0ddfc640ba1c8cf77a33dff66a35,antirez,antirez@gmail.com,Wed Oct 15 15:31:19 2014 +0200,1413379879,Diskless replication: handle putting the slave online.,57.0,31.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1934.0,120.0,1.2221412037037036,7641.0,1.8182360573144047,3483.0,None,False,,
3730d118a3ee0ddfc640ba1c8cf77a33dff66a35,e9e007555e03af906544c0870faaaba1e1d2d0a2,antirez,antirez@gmail.com,Thu Oct 16 09:03:52 2014 +0200,1413443032,Diskless replication: trigger diskless RDB transfer if needed.,37.0,2.0,"src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.29181825659888583,13.0,1726.5,580.0,1.2317013888888888,7642.5,1.4915773466794289,3485.0,None,False,,
e9e007555e03af906544c0870faaaba1e1d2d0a2,5f8360eb21e798f468162bed76c839a8ed28f480,antirez,antirez@gmail.com,Thu Oct 16 10:00:46 2014 +0200,1413446446,Diskless replication flag renamed repl_diskless -> repl_diskless_sync.,9.0,9.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.3516441151533924,13.0,2377.0,1114.0,0.6905401234567902,7645.0,1.4922242860277486,3488.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
5f8360eb21e798f468162bed76c839a8ed28f480,42951ab301bdaedaa2d1eac1096f36a95ab79c12,antirez,antirez@gmail.com,Thu Oct 16 10:15:18 2014 +0200,1413447318,"Diskless replication: trigger a BGSAVE after a config change.If we turn from diskless to disk-based replication via CONFIG SET, wenneed a way to start a BGSAVE if there are slaves alerady waiting for anBGSAVE to start. Normally with disk-based replication we do it as soonnas the previous child exits, but when there is a configuration changenvia CONFIG SET, we may have slaves in WAIT_BGSAVE_START state withoutnan RDB background process currently active.n",17.0,12.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1995.0,123.0,0.010092592592592592,7647.0,100.08256880733946,3489.0,None,False,,
42951ab301bdaedaa2d1eac1096f36a95ab79c12,43ae6064302ecba5380c149334f78033137aa850,antirez,antirez@gmail.com,Thu Oct 16 10:22:02 2014 +0200,1413447722,Diskless replication: redis.conf and CONFIG SET/GET support.,18.0,5.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,1.5645247207974509,13.0,2258.75,1270.0,5.1304021990740765,7649.5,1.0487637970609127,3493.0,None,False,,
43ae6064302ecba5380c149334f78033137aa850,5ee2ccf48e75012b2cabefd89f40bd09a1f10258,antirez,antirez@gmail.com,Thu Oct 16 17:09:29 2014 +0200,1413472169,Diskless replication: EOF:<mark> streaming support slave side.,60.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2001.0,125.0,0.2829513888888889,7652.0,4.5341759725119655,3494.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
5ee2ccf48e75012b2cabefd89f40bd09a1f10258,f70369335d85b9fed0c4192b79e6a6bb5477ab7b,antirez,antirez@gmail.com,Thu Oct 16 17:35:11 2014 +0200,1413473711,syncReadLine(): actually enforce buffer size limits.,1.0,0.0,"src/syncio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,144.0,7.0,111.9489699074074,7653.0,1.0089326413706807,3495.0,None,False,,
f70369335d85b9fed0c4192b79e6a6bb5477ab7b,80f7f63b64937df4d7f0bb53450ba281a5dd26a4,antirez,antirez@gmail.com,Fri Oct 17 10:21:18 2014 +0200,1413534078,Diskless replication: don't enter the read-payload branch forever.,3.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2054.0,126.0,0.7165393518518518,7654.0,2.3955967629908406,3496.0,None,False,,
80f7f63b64937df4d7f0bb53450ba281a5dd26a4,0c5a06f6bb8aaa6d15ea1a363ed19b637934579a,antirez,antirez@gmail.com,Fri Oct 17 10:22:29 2014 +0200,1413534149,Diskless replication: swap inverted branches to compute read len.,2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2057.0,127.0,0.0008217592592592593,7655.0,1217.9014084507041,3497.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
0c5a06f6bb8aaa6d15ea1a363ed19b637934579a,25a3d9965e0a130705d974ae6a8a6a51e7fabe95,antirez,antirez@gmail.com,Fri Oct 17 10:23:11 2014 +0200,1413534191,Diskless replication: remove 40 bytes EOF mark from end of RDB file.,10.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2057.0,128.0,0.0004861111111111112,7656.0,2058.1428571428573,3498.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
25a3d9965e0a130705d974ae6a8a6a51e7fabe95,4b16263bd9e7b647ecc3d864481eff3de913a229,antirez,antirez@gmail.com,Fri Oct 17 10:23:44 2014 +0200,1413534224,"Diskless replication: don't send n pings to slaves.This is useful for normal replication in order to refresh the slavenwhen we are persisting on disk, but for diskless replication thenchild is already receiving data while in WAIT_BGSAVE_END state.n",3.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2067.0,129.0,0.00038194444444444446,7657.0,2619.181818181818,3499.0,None,False,True,"[""55ba77270363400625f4563788d8f842408389a2""]"
4b16263bd9e7b647ecc3d864481eff3de913a229,b1337b15b6b090315d884d7372eea344926ae95b,antirez,antirez@gmail.com,Fri Oct 17 10:43:56 2014 +0200,1413535436,Diskless replication: Various fixes to backgroundSaveDoneHandlerSocket(),8.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1479.0,120.0,1.9645370370370367,7658.0,1.5090257812131784,3500.0,None,False,,
b1337b15b6b090315d884d7372eea344926ae95b,10aafdad56fa79bd7f95d9b190054b2e56b6cddd,antirez,antirez@gmail.com,Fri Oct 17 11:36:12 2014 +0200,1413538572,"Diskless replication: rio fdset target new supports buffering.To perform a socket write() for each RDB rio API write call wasnextremely unefficient, so now rio has minimal buffering capabilities.nWrites are accumulated into a buffer and only when a given limit isnreacehd are actually wrote to the N slaves FDs.nnTrivia: rio lacked support for buffering since our targets were:nn1) Memory buffers.n2) C standard I/O.nnBoth were buffered already.n",56.0,1.0,"src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",3.0,1.0,1.0,0.7742433029172698,13.0,634.6666666666666,149.0,1.853132716049383,7660.0,10.362771217213783,3503.0,None,False,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
10aafdad56fa79bd7f95d9b190054b2e56b6cddd,74f90c61232859f35db4eabf5b0bf1c8e4123bf0,antirez,antirez@gmail.com,Fri Oct 17 16:30:11 2014 +0200,1413556211,anet.c: API to set sockets back to blocking mode.,18.0,4.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,13.0,328.0,69.0,54.32766203703704,7662.5,1.0218707518367895,3505.0,None,False,,
74f90c61232859f35db4eabf5b0bf1c8e4123bf0,525c488f639672e5b36cc67ede857d25a39c016d,antirez,antirez@gmail.com,Fri Oct 17 16:45:48 2014 +0200,1413557148,"rio fdset target: handle short writes.While the socket is set in blocking mode, we still can get short writesnwriting to a socket.n",18.0,2.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER",3.0,1.0,1.0,1.1411535278793057,13.0,1296.3333333333333,268.0,0.2317746913580247,7665.0,3.723756269672748,3508.0,None,False,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0""]"
525c488f639672e5b36cc67ede857d25a39c016d,fd112f52dce71e1ebd3fc3ffe1b7d521c628877e,antirez,antirez@gmail.com,Fri Oct 17 17:02:42 2014 +0200,1413558162,rio.c fdset write() method fixed: wrong type for return value.,1.0,1.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,343.0,17.0,0.011736111111111109,7667.0,86.20710059171599,3509.0,Corrective,True,,
fd112f52dce71e1ebd3fc3ffe1b7d521c628877e,456003af25fc7d78867116749a2014611f3e4f64,antirez,antirez@gmail.com,Fri Oct 17 17:11:46 2014 +0200,1413558706,Diskless replication: less debugging printfs around.,0.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2070.0,131.0,0.01803240740740741,7668.0,56.45571245186136,3510.0,None,False,,
456003af25fc7d78867116749a2014611f3e4f64,2309f15d89e94babb2e9ef29225a40d822828379,antirez,antirez@gmail.com,Wed Oct 22 15:23:21 2014 +0200,1413984201,anet.c: new API anetSendTimeout().,16.0,0.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.3372900666170139,13.0,335.0,71.0,4.953587962962963,7669.5,1.15140540666838,3512.0,None,False,,
2309f15d89e94babb2e9ef29225a40d822828379,d4f6a1711defdc0b63629c797b550abbcca2b96f,antirez,antirez@gmail.com,Wed Oct 22 15:53:45 2014 +0200,1413986025,"Diskless replication: set / reset socket send timeout.We need to avoid that a child -> slaves transfer can continue forever.nWe use the same timeout used as global replication timeout, which isndocumented to also affect I/O operations during bulk transfers.n",2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1492.0,123.0,4.963854166666667,7671.0,1.2014563616141691,3513.0,None,False,,
d4f6a1711defdc0b63629c797b550abbcca2b96f,b50e3215d279d5eee6947bcba619fb1edb407f77,antirez,antirez@gmail.com,Wed Oct 22 15:58:13 2014 +0200,1413986293,Translate rio fdset target EWOULDBLOCK error into ETIMEDOUT.EWOULDBLOCK with the fdset rio target is returned when we try to writenbut the send timeout socket option triggered an error. Better tontranslate the error in something the user can actually recognize as antimeout.n,8.0,1.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,343.0,18.0,4.955219907407408,7672.0,1.2018073907285387,3514.0,Perfective,False,,
b50e3215d279d5eee6947bcba619fb1edb407f77,ebb3bd53c2944e987228bcf2f841f7412865bdab,antirez,antirez@gmail.com,Thu Oct 23 23:10:33 2014 +0200,1414098633,Diskless replication: child -> parent communication improved.Child now reports full info to the parent including IDs of slaves innfailure state and exit code.n,34.0,20.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1494.0,124.0,1.3033333333333332,7673.0,1.7672634271099743,3515.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
ebb3bd53c2944e987228bcf2f841f7412865bdab,d6797d34c0a3071bf5a458b719cd6c417932f81a,antirez,antirez@gmail.com,Fri Oct 24 09:49:22 2014 +0200,1414136962,Diskless replication tested with the multiple slaves consistency test.,67.0,64.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,172.0,25.0,84.54829861111111,7674.0,1.011827559116235,588.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
d6797d34c0a3071bf5a458b719cd6c417932f81a,18de5395b219bf407ac06dcf3baae48e4d36d1e5,antirez,antirez@gmail.com,Fri Oct 24 10:12:43 2014 +0200,1414138363,Diskless replication documented inside example redis.conf.,27.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,889.0,146.0,24.89320601851852,7675.0,1.0401716034188635,1352.0,Non Functional,False,,
18de5395b219bf407ac06dcf3baae48e4d36d1e5,c4dbc7cdecd876635318aff409e4382780ba2b15,antirez,antirez@gmail.com,Fri Oct 24 10:38:42 2014 +0200,1414139922,Remove duplicated log message about starting BGSAVE.,0.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2069.0,132.0,6.727037037037038,7676.0,1.1486538567417277,3516.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,dab5c09accf2b61957434a560d585005d6d9cf7d,Ben Dowling,ben.m.dowling@gmail.com,Sun Oct 26 11:09:45 2014 -0700,1414346985,Update redis_init_script.tplstatus command currently reports success when redis has crashed and the pid file still exists. Changing to check the actual process is running.,3.0,2.0,"utils/redis_init_script.tpl,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,43.0,3.0,225.18466435185184,0.0,0.0,0.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,b4c4be785cf5aeb480eabefd18a131655d36734f,zhanghailei,zhh5919@163.com,Mon Oct 27 14:02:52 2014 +0800,1414389772,FIXED redis-benchmark's idle mode.With idle mode shouldn't create write event,8.0,3.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,804.0,50.0,45.6540162037037,3.0,1.0219038779751184,3.0,Corrective,True,,
c4dbc7cdecd876635318aff409e4382780ba2b15,707352439c317dd2151d02606de25d2d2a147a67,antirez,antirez@gmail.com,Mon Oct 27 10:36:30 2014 +0100,1414402590,Diskless sync delay is now configurable.,17.0,3.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,1.395461844238322,13.0,2278.75,1282.0,9.048819444444444,7678.5,1.0483786791509897,3520.0,None,False,,
707352439c317dd2151d02606de25d2d2a147a67,3b9a97984a85e342cc11459a5a75b2cf80d79c08,antirez,antirez@gmail.com,Mon Oct 27 10:42:49 2014 +0100,1414402969,Document repl-diskless-sync-delay in redis.conf.,12.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,916.0,147.0,3.062569444444444,7681.0,1.3265232080905194,1353.0,Non Functional,False,,
3b9a97984a85e342cc11459a5a75b2cf80d79c08,a27befc495009693ee4c9c110fe7132f330ac25d,antirez,antirez@gmail.com,Mon Oct 27 10:48:32 2014 +0100,1414403312,Diskless replication: log BGSAVE delay only when it is non-zero.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2068.0,134.0,0.008356481481481482,7682.0,120.66759002770084,3521.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,2540736366eedbe421118a76556438c8fbe8ab48,Nan Xiao,xn212516@163.com,Mon Oct 27 17:53:12 2014 +0800,1414403592,Fix function prototype in redis-cli.c.Fix function prototype in redis-cli.c.,2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1994.0,118.0,12.105671296296293,0.0,0.0,0.0,Corrective,True,,
a27befc495009693ee4c9c110fe7132f330ac25d,8a416ca46e705e52587c8ef7163b8a158fff8357,antirez,antirez@gmail.com,Mon Oct 27 11:58:20 2014 +0100,1414407500,Added a function to get slave name for logs.,29.0,15.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.8338655824310741,13.0,1767.0,789.0,13.94207947530864,7684.0,1.0239377982778266,3524.0,Feature Addition,False,,
8a416ca46e705e52587c8ef7163b8a158fff8357,775cc30a98cd8f3ab3a14c76973234f84df3262d,antirez,antirez@gmail.com,Mon Oct 27 12:23:03 2014 +0100,1414408983,Use new slave name function for diskless repl reporting.,4.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1508.0,125.0,3.592013888888889,7686.0,1.278395360077332,3525.0,Feature Addition,False,,
775cc30a98cd8f3ab3a14c76973234f84df3262d,4b8f4b90b904c803cdc4a3ba82fee6e8ee8423fe,antirez,antirez@gmail.com,Mon Oct 27 12:30:07 2014 +0100,1414409407,Log slave ip:port in more log messages.,11.0,6.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2086.0,136.0,0.02207175925925926,7687.0,46.30676455165181,3526.0,None,False,,
4b8f4b90b904c803cdc4a3ba82fee6e8ee8423fe,9ec22d9223ca3d74aa81dd5af86809ceeb730670,antirez,antirez@gmail.com,Wed Oct 29 12:48:22 2014 +0100,1414583302,Diskless replication: missing listRewind() added.This caused BGSAVE to be triggered a second time without any need whennwe switch from socket to disk target via the commandnnCONFIG SET repl-diskless-sync nonnand there is already a slave waiting for the BGSAVE to start.nAlso comments clarified about what is happening.n,5.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2091.0,137.0,2.0126736111111105,7688.0,1.496851548348141,3527.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674 9ec22d9223ca3d74aa81dd5af86809ceeb730670,6fbaeddf3f547217df9f808da80a716661bfa591,antirez,antirez@gmail.com,Wed Oct 29 14:25:18 2014 +0100,1414589118,Merge branch 'memsync' into unstable,,,,,,,,,,,,,,,Merge,False,,
6fbaeddf3f547217df9f808da80a716661bfa591,e10c5444e79f8f6ce24112175dd42afb8d0b067a,Matt Stancliff,matt@genges.com,Fri Oct 17 08:21:16 2014 -0500,1413552076,redis-cli: ignore SIGPIPE network errorsCloses #2066n,4.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1994.0,119.0,-9.855509259259259,148.0,0.8985339089341833,85.0,None,False,,
6fbaeddf3f547217df9f808da80a716661bfa591,6c0abc4a0ee1450a7fc13076f5d04a6549286cf3,Matt Stancliff,matt@genges.com,Thu Oct 23 11:52:35 2014 -0400,1414079555,"Fix zero-ordering SORT when called against listsPeople mostly use SORT against lists, but our priornbehavior was pretending lists were an unordered bagnrequiring a forced-sort when no sort was requested.nnWe can just use the native list ordering to ensurenconsistency across replicaion and scripting calls.nnCloses #2079nCloses #545 (again)n",24.0,9.0,"src/sort.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9940302114769564,13.0,435.0,56.0,155.45244212962965,149.5,1.0038106884473477,30.0,Corrective,True,,
6fbaeddf3f547217df9f808da80a716661bfa591,bbf1af2da34001cf1f3af808cc3972dbc78fc6ab,Matt Stancliff,matt@genges.com,Thu Oct 23 13:44:42 2014 -0400,1414086282,Fix redis-trib.rb IP:Port disassembly for IPv6IP format is now any of:n  - 127.0.0.1:6379n  - ::1:6379n,7.0,5.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1345.0,98.0,27.115972222222233,151.0,1.0368786334417497,87.0,Corrective,True,,
bbf1af2da34001cf1f3af808cc3972dbc78fc6ab,daca1edb6ec8d8b467d2e94a39431c47dff7052b,Matt Stancliff,matt@genges.com,Thu Oct 23 13:45:16 2014 -0400,1414086316,"Parse cluster state file in IPv6 compatible wayWe need to pick the port based on the _last_ colon, not the first one.n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4720.0,414.0,15.11601851851852,152.0,1.0661549864321025,88.0,None,False,,
6fbaeddf3f547217df9f808da80a716661bfa591,14f2582da26013b09aef5a24230c2553eebfd73a,Matt Stancliff,matt@genges.com,Mon Oct 27 10:09:37 2014 -0400,1414418977,Fix redis-trib import SCAN call,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1347.0,99.0,3.8506365740740733,153.0,1.2596973203685056,89.0,Corrective,True,,
6fbaeddf3f547217df9f808da80a716661bfa591,0014966c1e39cf2dcb4ca271900b93990d823bec,Matt Stancliff,matt@genges.com,Tue Oct 28 12:25:16 2014 -0400,1414513516,"Networking: add more outbound IP binding fixesSame as the original bind fixes (we just missed these thenfirst time around).nnThis helps Redis not automatically sendnconnections from the first IP on an interface if we are boundnto a specific IP address (e.g. with multiple IP aliases on oneninterface, you want to send from _your_ IP, not from the first IPnon the interface).n",4.0,3.0,"src/cluster.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,13.0,3407.5,553.0,2.0683680555555557,154.5,1.2219918323402132,91.0,None,False,,
6fbaeddf3f547217df9f808da80a716661bfa591 e10c5444e79f8f6ce24112175dd42afb8d0b067a,2c42b645bcb412e447746619480d58b7cdc058e6,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 30 12:01:51 2014 +0100,1414666911,Merge pull request #2078 from mattsta/hiredis-sigpipeFix redis-cli from exiting after idle connection breaks,,,,,,,,,,,,,,,Merge,False,,
2c42b645bcb412e447746619480d58b7cdc058e6,7fcfbea0f53744f81f46d209dee0f5f70803f773,h0x91b,h0x91b@gmail.com,Thu Oct 30 21:05:50 2014 +0200,1414695950,"Reconnect redis-cli when cluster return movedif redis works in cluster-mode and redis-cli was run with argv, reconnect if needs.nexample:n./redis-cli set foo barnnif return is MOVED redis-cli just do nothing.n",32.0,24.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1997.0,120.0,13.239282407407408,0.0,0.0,0.0,None,False,True,"[""c494db89b5c2ef34758f599ee46ac7265782ad77"", ""9505dd2011ef7143670b68247ff1818ffbad9768""]"
2c42b645bcb412e447746619480d58b7cdc058e6 0014966c1e39cf2dcb4ca271900b93990d823bec,a07674307925c9af0226a71c11daffabea3ad764,Salvatore Sanfilippo,antirez@gmail.com,Fri Oct 31 10:01:59 2014 +0100,1414746119,Merge pull request #2110 from mattsta/more-outbound-bind-fixesNetworking: add more outbound IP binding fixes,,,,,,,,,,,,,,,Merge,False,,
a07674307925c9af0226a71c11daffabea3ad764 daca1edb6ec8d8b467d2e94a39431c47dff7052b,5a526c22cc39c4b455f7e2f69eb9d48112d5eb33,Salvatore Sanfilippo,antirez@gmail.com,Fri Oct 31 10:38:22 2014 +0100,1414748302,Merge pull request #2096 from mattsta/cluster-ipv6Enable Cluster IPv6 Support,,,,,,,,,,,,,,,Merge,False,,
5a526c22cc39c4b455f7e2f69eb9d48112d5eb33,6df9001d6c5cc7a9446bb5f42f0e8c4784d0f5ea,Mariano Pu00c3u00a9rez Rodru00c3u00adguez,mariano-perez-rodriguez@users.noreply.github.com,Fri Oct 31 14:17:49 2014 -0300,1414775869,Typo fixes in redis.confFix two typos in redis.conf:rnrn- trnasfers --> transfersrn- enalbed --> enabled,2.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,928.0,148.0,4.3159722222222205,2.0,1.2316975060337891,0.0,Corrective,True,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,84ee8268c7a635cbbc4327bac20dab82d66ff9c3,Sun He,sunheehnus@gmail.com,Sun Nov 2 10:40:28 2014 +0800,1414896028,sds.c: Correct some comments,4.0,4.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,48.0,358.1262384259259,0.0,0.0,0.0,None,False,,
84ee8268c7a635cbbc4327bac20dab82d66ff9c3,bea45da07aff43e9694a14317dc555bef4e39ef6,Sun He,sunheehnus@gmail.com,Sun Nov 2 10:42:26 2014 +0800,1414896146,sds.c/sdscatvprintf: set va_end to finish va_list cpy,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,49.0,0.0013657407407407407,1.0,733.2033898305086,1.0,None,False,,
bea45da07aff43e9694a14317dc555bef4e39ef6,0f706adc5c2270e1084bba88279b844a91233c33,Sun He,sunheehnus@gmail.com,Mon Nov 3 17:21:54 2014 +0800,1415006514,sds.c: Correct two spelling mistakes in comments,2.0,2.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,50.0,1.277407407407407,2.0,1.7828356045230502,2.0,None,False,,
5a526c22cc39c4b455f7e2f69eb9d48112d5eb33,3ab832193cb58a876eba9c62df3fc0ea3814453a,Charles Hooper,chooper@plumata.com,Mon Nov 10 22:40:25 2014 -0800,1415688025,override histfile from env - fixes #831 and copies #833,29.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2005.0,121.0,11.482349537037035,0.0,0.0,0.0,Corrective,True,,
5a526c22cc39c4b455f7e2f69eb9d48112d5eb33,bc1a3b96e6402996582602e17221f103bef3da8e,Pierre-Yves Ritschard,pyr@spootnik.org,Tue Nov 11 11:05:10 2014 +0100,1415700310,"Support daemon supervision by upstart or systemdBoth upstart and systemd provide a way for daemons tonbe supervised, as well as a mechanism for them tonsignal their readyness status.nnThis patch provides compatibility with this functionality whilennot interfering with other methods.nnWith this, it will be possible to use `expect stop` with upstartnand `Type=notify` with systemd.nnA more detailed explanation of the mechanism can be found here:nhttp://spootnik.org/entries/2014/11/09_pid-tracking-in-modern-init-systems.htmln",75.0,3.0,"src/debug.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.2705124523597987,13.0,2035.0,1083.0,21.00537422839506,1.0,0.6788930969816729,2.0,None,False,True,"[""36a3b75355bd5aea9e34889918c5b78fb79586e4"", ""129d14e1431e913426485526663e1a9aac67838c""]"
5a526c22cc39c4b455f7e2f69eb9d48112d5eb33,f5c6ebbfe3620d16c1e83c2ccaf1cec5a312aaae,antirez,antirez@gmail.com,Tue Nov 11 15:10:58 2014 +0100,1415715058,Disconnect timedout slave: regression introduced with diskless repl.,3.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2096.0,139.0,13.906736111111117,7689.0,1.0719075987356248,3528.0,None,False,,
f5c6ebbfe3620d16c1e83c2ccaf1cec5a312aaae,bb7fea0d5ca7b3a53532338e8654e409014c1194,antirez,antirez@gmail.com,Tue Nov 11 17:12:12 2014 +0100,1415722332,"Diskless SYNC: fix RDB EOF detection.RDB EOF detection was relying on the final part of the RDB transfer tonbe a magic 40 bytes EOF marker. However as the slave is put onlinenimmediately, and because of sockets timeouts, the replication stream isnactually contiguous with the RDB file.nnThis means that to detect the EOF correctly we should either:nn1) Scan all the stream searching for the mark. Sucks CPU-wise.n2) Start to send the replication stream only after an acknowledge.n3) Implement a proper chunked encoding.nnFor now solution 2 was picked, so the master does not start to sendnASAP the stream of commands in the case of diskless replication. We waitnfor the first REPLCONF ACK command from the slave, that certifies usnthat the slave correctly loaded the RDB file and is ready to get morendata.n",21.0,4.0,"src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.4821791902022728,13.0,1775.666666666667,797.0,5.1856790123456795,7691.0,1.0648735852687403,3531.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
bb7fea0d5ca7b3a53532338e8654e409014c1194,3ef0876b95a6ff342bc348f5603ae282265f0ca1,antirez,antirez@gmail.com,Wed Nov 12 10:43:32 2014 +0100,1415785412,THP detection / reporting functions added.,45.0,6.0,"src/latency.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.1184933284621594,13.0,339.0,62.0,154.2714699074074,7694.0,1.005833374734978,3534.0,Feature Addition,False,True,"[""620906693ee2e80f5b8ff835b7fa109b1ff22b63""]"
3ef0876b95a6ff342bc348f5603ae282265f0ca1,110f0464e09ef3ff2d4f3a3a319377c77ed70d93,antirez,antirez@gmail.com,Wed Nov 12 10:55:47 2014 +0100,1415786147,Check THP support at startup and warn about it.,7.0,2.0,"src/latency.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,13.0,1901.5,544.0,64.00508101851852,7696.5,1.007842430819268,3536.0,None,False,,
110f0464e09ef3ff2d4f3a3a319377c77ed70d93,7ea331d60162d5469ccc2f3682f07738a480538f,antirez,antirez@gmail.com,Wed Nov 12 11:17:12 2014 +0100,1415787432,THP detection for LATENCY DOCTOR.,13.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,604.0,23.0,0.023379629629629632,7698.0,43.77227722772277,3537.0,Non Functional,False,,
7ea331d60162d5469ccc2f3682f07738a480538f 3fecb96122e35cb0c5809699c26eb093efda19e8,a2f929ab1095bae3812712a7ac63c8fa69ea15d5,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 14 17:05:28 2014 +0100,1415981128,Merge pull request #1662 from mattsta/lua-add-bitopsLua: Add bitop,,,,,,,,,,,,,,,Merge,False,,
7ea331d60162d5469ccc2f3682f07738a480538f,e327c8edb907606765237a614ff05997b9f8b7c7,Matt Stancliff,matt@genges.com,Fri Apr 4 14:13:14 2014 -0400,1396635194,Lua: add cjson scripting testTwo simple decode tests added mainly to check thatnthe 'cjson' global gets registered and is usable.n,17.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,537.0,40.0,0.11016203703703704,156.0,10.077537297751627,31.0,None,False,,
e327c8edb907606765237a614ff05997b9f8b7c7,4fdcd213f026b55baccc0a99a15564092582a90e,Matt Stancliff,matt@genges.com,Fri Apr 4 15:08:39 2014 -0400,1396638519,"Lua: Upgrade cjson to 2.1.0 (2012-03-01)The new cjson has some improvements over our current version includingnincreased platform compatability, a new resource limit to restrictndecode depth, and better invalid number handling.nnOne minor change was required to deps/Makefile because this versionnof cjson doesn't export itself globally, so we added a quick littlendefine of -DENABLE_CJSON_GLOBAL.nncjson now has an optional higher performing float parsing interface,nbut we are not including it (g_fmt.c, dtoa.c) because it requiresnendianness declaration during compile time.nnThis commit is exactly lua_cjson.c from 2.1.0 with one minornchange of altering the two Lua includes for local searchninstead of system-wide importing.n",675.0,310.0,"deps/Makefile,CAS_DELIMITER,deps/lua/src/Makefile,CAS_DELIMITER,deps/lua/src/fpconv.c,CAS_DELIMITER,deps/lua/src/fpconv.h,CAS_DELIMITER,deps/lua/src/lua_cjson.c,CAS_DELIMITER,deps/lua/src/strbuf.c,CAS_DELIMITER,deps/lua/src/strbuf.h,CAS_DELIMITER",7.0,1.0,2.0,1.0897636984687304,13.0,279.7142857142857,17.0,440.4922371031746,160.0,1.0016921778961905,38.0,None,False,,
4fdcd213f026b55baccc0a99a15564092582a90e,a9900ad38edbae0d26d51068888017e556cdc5b2,Matt Stancliff,matt@genges.com,Fri Apr 4 15:21:04 2014 -0400,1396639264,"Lua: Use Redis solaris compatability for cjson toocjson calls isinf, but some Solaris versions don't have isinfneven with the attempted fix we have in deps/Makefile.nnWe can harmlessly include the Redis solarisfixes.h header tongive cjson proper isinf.nnNote: cjson has a compile-time setting for using their own definednisinf, but the Redis definition in solarisfixes.h is more complete.nnFixes antirez#1620n",2.0,0.0,"deps/lua/src/lua_cjson.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1425.0,3.0,0.008622685185185185,164.0,116.97315436241614,39.0,None,False,,
a9900ad38edbae0d26d51068888017e556cdc5b2,da18dd34a29dd1a65e62bf2b7d55acf8d914260d,Matt Stancliff,matt@genges.com,Fri Apr 4 16:05:12 2014 -0400,1396641912,Lua: remove new warning added by cjson headerclang doesn't like extern inline when no definitionnis given right away.n,1.0,1.0,"deps/lua/src/fpconv.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,22.0,1.0,0.03927083333333333,165.0,26.464190981432363,40.0,None,False,,
da18dd34a29dd1a65e62bf2b7d55acf8d914260d,90b6337c155aa0330143f5b0a0af1d430271d400,Matt Stancliff,matt@genges.com,Fri Apr 4 16:06:33 2014 -0400,1396641993,Lua: upgrade cmsgpack to 0.4.0Main reasons for upgrade:n  - Remove a warning when building Redisn  - Add multi pack/unpackn  - Improve memory usage and use Lua allocator properlyn  - Fix some edge case encoding/decoding bugsn,305.0,90.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,729.0,2.0,234.4297569444444,166.0,1.0042656700797459,41.0,None,False,True,"[""606437108570db1b74850a0ba2ea1e722055083c"", ""ff25d1896d3befe184aa1adebf5d5e961f5d4b15"", ""66e2bdf21021a787e959c943ba453e56f9787093""]"
90b6337c155aa0330143f5b0a0af1d430271d400,ace628c7922221c0156f5469c85a938ebe4f6c4f,Matt Stancliff,matt@genges.com,Fri Apr 4 17:20:04 2014 -0400,1396646404,Lua: add cmsgpack scripting testsBasically: test to make sure we can load cmsgpacknand do some sanity checks to make sure pack/unpack worksnproperly.  We also have a bonus test for circular encodingnand decoding because I was curious how it worked.n,52.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,554.0,41.0,0.12974537037037034,167.0,8.707404103479035,32.0,None,False,,
ace628c7922221c0156f5469c85a938ebe4f6c4f a2f929ab1095bae3812712a7ac63c8fa69ea15d5,8a75ec0fca824f789f578bffdfc897c4df1b5d2b,antirez,antirez@gmail.com,Fri Nov 14 17:10:48 2014 +0100,1415981448,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
8a75ec0fca824f789f578bffdfc897c4df1b5d2b,620906693ee2e80f5b8ff835b7fa109b1ff22b63,antirez,antirez@gmail.com,Fri Nov 14 17:13:35 2014 +0100,1415981615,Fix non-linux builds error introduced with THP checks.,2.0,2.0,"src/latency.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,490.5,51.0,2.2591782407407406,7699.5,1.3331302621594328,3539.0,Corrective,True,,
620906693ee2e80f5b8ff835b7fa109b1ff22b63,0ed2c601185eb04b3b791b218e2a48c5f0609493,antirez,antirez@gmail.com,Fri Nov 14 17:16:23 2014 +0100,1415981783,lua_cjson.c Lua includes: angled -> quoted.,2.0,2.0,"deps/lua/src/lua_cjson.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1427.0,4.0,223.8717476851852,7701.0,1.0044668432276065,711.0,None,False,,
0ed2c601185eb04b3b791b218e2a48c5f0609493,6739ef4447adb17ce2d644b530aea429b8d52445,Matt Stancliff,matt@genges.com,Fri Oct 10 10:35:34 2014 -0400,1412951734,Sentinel: Add initial quorum bounds checkFixes #2054n,6.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3899.0,167.0,70.82255787037037,168.0,1.0141197950211054,92.0,None,False,,
0ed2c601185eb04b3b791b218e2a48c5f0609493,f8c73e38b5f5a57d6d573fc6fdfed5b68d4879c8,Matt Stancliff,matt@genges.com,Wed Nov 19 13:17:08 2014 -0500,1416421028,"Add SENTINEL INFO-CACHE [masters...]Sentinel queries the INFO from every master and from every replica ofnevery master.nnWe can cache the INFO results in Sentinel so Sentinel can be a singlenplace to quickly get all INFO output for an entire Sentinel monitoringngroup.nnThis commit gives us SENTINEL INFO-CACHE in two forms:n  - SENTINEL INFO-CACHE u00e2u0080u0094 returns all masters and all replicasn  - SENTINEL INFO-CACHE master0 master1 ... masterN u00e2u0080u0094u00c2u00a0vararg specify mastersnnResults are returned as a multibulk reply with two top-level entriesnfor each master.  The first entry for each master is the name of the master.nThe second entry is a nested multibulk reply with the contents of INFO,nfirst for the master, then an additional entry for each of thenreplicas.n",69.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3905.0,168.0,40.15386574074074,169.0,1.024904202411211,93.0,Feature Addition,False,,
0ed2c601185eb04b3b791b218e2a48c5f0609493,e9b014cfacb443a0e828002d900a5a94a704d965,Mihir Joshi,mihir.coldplay@gmail.com,Fri Nov 21 22:35:42 2014 -0500,1416627342,"stricter options for SET commandIssue: #2157nAs the SET command is parsed, it remembers which options are already setnand if a duplicate option is found, raises an error because it isnessentially an invalid syntax.nnIt still allows mutually exclusive options like EX and PX because takingnan option over another (precedence) is not essentially a syntacticnerror.n",8.0,4.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,457.0,53.0,49.695659722222224,0.0,0.0,0.0,None,False,,
0ed2c601185eb04b3b791b218e2a48c5f0609493,8a09e129060435034d75d487e796ef6be8f6e246,antirez,antirez@gmail.com,Mon Nov 24 11:54:53 2014 +0100,1416826493,Attempt to prevent false positives in replication test.,15.0,11.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,175.0,26.0,31.128831018518518,7702.0,1.0321245600069306,589.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
8a09e129060435034d75d487e796ef6be8f6e246,606437108570db1b74850a0ba2ea1e722055083c,Matt Stancliff,matt@genges.com,Mon Nov 24 12:37:17 2014 -0500,1416850637,Fix lua-cmsgpack 64 bit integer on 32 bit platformThis syncs lua-cmsgpack with the mattsta/lua-cmsgpack upstream.nnFixes #2161n,32.0,14.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,944.0,3.0,233.8963425925926,170.0,1.004275398190992,42.0,Corrective,True,True,"[""66e2bdf21021a787e959c943ba453e56f9787093""]"
8a09e129060435034d75d487e796ef6be8f6e246 606437108570db1b74850a0ba2ea1e722055083c,02cdb353dd7394db581cb257b0ab6417ce790064,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 24 22:31:52 2014 +0100,1416864712,Merge pull request #2162 from mattsta/fix/lua/cmsgpack/64-bit-integers-on-32-bit-platformsFix lua-cmsgpack 64 bit integer on 32 bit platform,,,,,,,,,,,,,,,Merge,False,,
8a09e129060435034d75d487e796ef6be8f6e246,a8f9a989a78601339c6ab7a72ebd925143f3cf22,antirez,antirez@gmail.com,Tue Nov 25 14:48:30 2014 +0100,1416923310,"Avoid valgrind memory leak false positive in processInlineBuffer().zmalloc(0) cauesd to actually trigger a non-zero allocation since withnstandard libc malloc we have our own zmalloc header for memory tracking,nbut at the same time the returned pointer is at the end of the block andnnot in the middle. This triggers a false positive when testing withnvalgrind.nnWhen the inline protocol args count is 0, we now avoid reallocatingnc->argv, preventing the issue to happen.n",4.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1735.0,193.0,13.900208333333332,7703.0,1.071941367785255,3540.0,Preventative,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,9e579d91ccab01e78c8be46ae74b13e4058bac9d,Sun He,sunheehnus@gmail.com,Tue Nov 25 21:58:05 2014 +0800,1416923885,zipmap.c: update comments above,2.0,3.0,"src/zipmap.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,466.0,11.0,151.88153935185184,3.0,1.0065840786462097,3.0,None,False,,
a8f9a989a78601339c6ab7a72ebd925143f3cf22 02cdb353dd7394db581cb257b0ab6417ce790064,231c8c2ecf9e1a28238251abf3af9d2ec72cdaa8,antirez,antirez@gmail.com,Tue Nov 25 15:56:20 2014 +0100,1416927380,Merge remote-tracking branch 'origin/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
231c8c2ecf9e1a28238251abf3af9d2ec72cdaa8,e039791e394fef936bf3582de80344e2eebf587b,antirez,antirez@gmail.com,Tue Nov 25 18:23:34 2014 +0100,1416936214,Document redis-cli --stat in --help output.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2030.0,122.0,14.446631944444444,7704.0,1.0692202863508649,3541.0,Non Functional,False,,
e039791e394fef936bf3582de80344e2eebf587b,acf73a0592261426e460a8c2917c88b4f5e4db3b,antirez,antirez@gmail.com,Wed Nov 26 16:35:46 2014 +0100,1417016146,"Fix DEBUG OBJECT lru field to report seconds.Because of (not so) recent Redis changes, now the LRU internallynreported unit is milliseconds, not seconds, but the DEBUG OBJECT outputnwas still claiming seconds while providing milliseconds.nHowever OBJECT IDLETIME was working as expected, which is the correctnAPI to use.n",1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,966.0,85.0,15.229583333333334,7705.0,1.0656616782030588,3542.0,Corrective,True,True,"[""5127e3998058983351b6c0b94d1341f9d646c9cc""]"
acf73a0592261426e460a8c2917c88b4f5e4db3b,0ae65bec6054fe3b76a24bc65590fdaef2114ab6,Matthias Petschick,matthias@sec.t-labs.tu-berlin.de,Fri Nov 28 02:50:17 2014 +0100,1417139417,fix benchmark memleak in loop mode,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,809.0,51.0,31.824594907407413,0.0,0.0,0.0,Corrective,True,,
acf73a0592261426e460a8c2917c88b4f5e4db3b 0ae65bec6054fe3b76a24bc65590fdaef2114ab6,10c35b584edb9534240a99b82721fd90847120fc,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 28 09:21:31 2014 +0100,1417162891,Merge pull request #2169 from razzle/unstablefix benchmark memleak in loop mode,,,,,,,,,,,,,,,Merge,False,,
10c35b584edb9534240a99b82721fd90847120fc,640d30c5271059e24e029cb34c9bd9085a0bd943,antirez,antirez@gmail.com,Fri Nov 28 09:23:39 2014 +0100,1417163019,redis-benchmark: default num of requests is now 100000.10000 completes in a too short time and may easily provide unreliablenfigures because of tiny duration.n,2.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,809.0,52.0,0.2731712962962963,7706.0,4.660706719769512,3543.0,None,False,,
640d30c5271059e24e029cb34c9bd9085a0bd943,669aa2a21099b4b1ba36720df390562bcfee12cd,antirez,antirez@gmail.com,Fri Nov 28 10:03:07 2014 +0100,1417165387,Cluster PUBLISH message: fix totlen count.bulk_data field size was not removed from the count. It is not possiblento declare it simply as 'char bulk_data[]' since the structure is nestedninto another structure.n,7.0,3.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,2483.5,442.0,41.37119791666667,7707.5,1.0223332365355702,3545.0,None,False,,
669aa2a21099b4b1ba36720df390562bcfee12cd,8acb3a8843c2cb92c3acaf0ce30a765649496f69,antirez,antirez@gmail.com,Fri Nov 28 11:05:58 2014 +0100,1417169158,Test framework: exit on timeout with report.There was no sane way to detect tests that may never end because ofnRedis bugs or tests bugs.n,35.0,18.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,510.0,89.0,119.65289351851852,7709.0,1.008357507876274,590.0,Preventative,False,,
8acb3a8843c2cb92c3acaf0ce30a765649496f69,bd3a51615c7752186d8a4740affedc269ce5dfc6,antirez,antirez@gmail.com,Fri Nov 28 11:38:14 2014 +0100,1417171094,Test: try to cleanup still running Redis instances on exit.It's hard to run the Redis test continuously if it leaks processes onnexceptions / errors.n,27.0,9.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9910760598382222,13.0,421.5,130.0,59.84398726851853,7710.5,1.0083558405010498,592.0,Preventative,False,,
bd3a51615c7752186d8a4740affedc269ce5dfc6,fe0d3719956cc140115f30c4a684cbcb1a9928ad,antirez,antirez@gmail.com,Fri Nov 28 11:49:26 2014 +0100,1417171766,"Test: wait for actual startup in start_server.start_server now uses return value from Tcl exec to get the server pid,nhowever this introduces errors that depend from timing: a lot of thentesting code base assumed the server to be actually up and running whennserver_start returns.nnSo the old code that waits to see the pid in the log file was restored.n",6.0,0.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,316.0,41.0,0.007777777777777778,7712.0,129.57142857142858,593.0,Preventative,False,,
0ed2c601185eb04b3b791b218e2a48c5f0609493,560ec60ed4ede71e71157fdb9a883f3efdedae3f,azure provisioned user,azureuser@deepakvUSnorth.deepakvUSnorth.j4.internal.cloudapp.net,Mon Dec 1 21:42:40 2014 +0000,1417470160,redis-benchmark AUTH command to be discarded after the first send #2150,30.0,28.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,809.0,53.0,3.554872685185185,0.0,0.0,0.0,None,False,,
fe0d3719956cc140115f30c4a684cbcb1a9928ad,f3c1aac7e60f6b2978436fa75bcacd6c2e32cbb7,Jan-Erik Rediger,badboy@archlinux.us,Mon Dec 1 23:22:03 2014 +0100,1417472523,Fix implicit declaration of ioctl on Solaris,1.0,0.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,280.0,14.0,258.78119212962963,21.0,1.0038642684646846,11.0,Corrective,True,,
560ec60ed4ede71e71157fdb9a883f3efdedae3f,7923d71fb7a2b09f900160e0b65f312ea01c39fa,Deepak Verma,azureuser@deepakvUSnorth.deepakvUSnorth.j4.internal.cloudapp.net,Mon Dec 1 22:54:49 2014 +0000,1417474489,replaced // comments  #2150,2.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,811.0,54.0,0.050104166666666665,0.0,0.0,0.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,0ec7672a5dc2966962f33d55f959ed63da450bbd,Sun He,sunheehnus@gmail.com,Tue Dec 2 14:46:15 2014 +0800,1417502775,bitops.c/redisPopcount: little optimization in loop,20.0,8.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,588.0,23.0,110.87612268518518,4.0,1.009019074402875,4.0,None,False,,
fe0d3719956cc140115f30c4a684cbcb1a9928ad,e07dd8b3e9adad705c238ee3ebb53d572c395d8e,antirez,antirez@gmail.com,Tue Dec 2 14:13:28 2014 +0100,1417526008,Mark diskless replication as experimental in redis.conf.,4.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,928.0,149.0,31.8303125,7713.0,1.031416593852165,1354.0,None,False,,
e07dd8b3e9adad705c238ee3ebb53d572c395d8e,8a7ccc58a16954a250fcb8f5ea6d184094d14653,antirez,antirez@gmail.com,Tue Dec 2 16:57:23 2014 +0100,1417535843,"Mark PFCOUNT as read-only, even if not true.PFCOUNT is technically speaking a write command, since the cached valuenof the HLL is exposed in the data structure (design error, mea culpa), andncan be modified by PFCOUNT.nnHowever if we flag PFCOUNT as w, read only slaves can't execute thencommand, which is a problem since there are environments where slavesnare used to scale PFCOUNT reads.nnNor it is possible to just prevent PFCOUNT to modify the data structurenin slaves, since without the cache we lose too much efficiency.nnSo while this commit allows slaves to create a temporary inconsistencyn(the strings representing the HLLs in the master and slave can bendifferent in certain moments) it is actually harmless.nnIn the long run this should be probably fixed by turning the HLL into anmore opaque representation, for example by storing the cached value innthe part of the string which is not exposed (this should be possiblenwith SDS strings).n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3719.0,537.0,20.251111111111108,7714.0,1.0493800065840009,3546.0,Corrective,True,,
8a7ccc58a16954a250fcb8f5ea6d184094d14653,5bd3b9d93fe0747c71e86b601f936f4aae3664fb,antirez,antirez@gmail.com,Tue Dec 2 17:03:15 2014 +0100,1417536195,Over 80 chars comment trimmed in pfcountCommand().,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1556.0,86.0,111.26292824074072,7715.0,1.0089877195918868,3547.0,None,False,,
5bd3b9d93fe0747c71e86b601f936f4aae3664fb,92c5ab40295260352f0da09616ff15b499251bad,antirez,antirez@gmail.com,Tue Dec 2 18:19:30 2014 +0100,1417540770,Use exp format and more precision output for ZSCAN.Ref: issue #2175n,21.0,15.0,"src/db.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",5.0,1.0,1.0,1.208648950953065,13.0,928.8,762.0,129.08311342592594,7718.0,1.0047232097697034,3552.0,None,False,,
0ec7672a5dc2966962f33d55f959ed63da450bbd,c98d4f56756f5fba18a9035aab34a853b4fae574,Sun He,sunheehnus@gmail.com,Wed Dec 3 10:07:58 2014 +0800,1417572478,bitops.c/bitopCommand: skip short minlen for FAST PATH,1.0,1.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,600.0,24.0,0.8067476851851851,5.0,2.239544926330287,5.0,None,False,,
92c5ab40295260352f0da09616ff15b499251bad,3632026210817e527508e4b3b98f8cd6837547d3,antirez,antirez@gmail.com,Wed Dec 3 10:33:00 2014 +0100,1417599180,Handle infinite explicitly in createStringObjectFromLongLong().,20.0,8.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,707.0,63.0,0.6760416666666667,7721.0,2.4791987673343607,3553.0,Feature Addition,False,,
3632026210817e527508e4b3b98f8cd6837547d3,b8a48ad5fe65481bd41ab75a4a5ab8a4d8e5553e,antirez,antirez@gmail.com,Wed Dec 3 10:38:56 2014 +0100,1417599536,Regression test for issue #2175.,10.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,229.0,9.0,392.805,7722.0,1.0025457924415422,594.0,Preventative,False,,
b8a48ad5fe65481bd41ab75a4a5ab8a4d8e5553e,eca9fbdb50ab828b2382a813ccb8497bb5dd33ec,antirez,antirez@gmail.com,Wed Dec 3 10:50:47 2014 +0100,1417600247,Don't show the ASCII logo if syslog is enabled.Closes issue #1935.n,21.0,9.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3719.0,538.0,0.7454166666666666,7723.0,2.341531581889324,3554.0,None,False,,
eca9fbdb50ab828b2382a813ccb8497bb5dd33ec,1b732c09d010cfeee57a55e3d30e93ec6f535da8,antirez,antirez@gmail.com,Wed Dec 3 12:06:54 2014 +0100,1417604814,Network bandwidth tracking + refactoring.Track bandwidth used by clients and replication (but disklessnreplication is not tracked since the actual transfer happens in thenchild process).nnThis includes a refactoring that makes tracking new instantaneousnmetrics simpler.n,63.0,24.0,"src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,1.1951632057697583,13.0,2269.25,1341.0,7.617468171296296,7725.5,1.1001786373894955,3558.0,Feature Addition,False,True,"[""7e6b4ea67bf38595ae25bdd6aa253702a1fd5509"", ""de07deb4d2ca3b9971a29319937aeb0c76b58011"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
1b732c09d010cfeee57a55e3d30e93ec6f535da8,c3846becae5528e2987865ec1a5ef2cdeca3dadd,antirez,antirez@gmail.com,Thu Dec 4 10:54:31 2014 +0100,1417686871,Check that tcp-backlog is matched by /proc/sys/net/core/somaxconn.,19.0,0.0,"src/config.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.2974722489192897,13.0,1977.5,568.0,180.29983796296293,7728.5,1.0027768199071176,3560.0,None,False,,
c3846becae5528e2987865ec1a5ef2cdeca3dadd,af453642e18cd158d3c057b9713fd4cf7968cc98,Johan Bergstru00c3u00b6m,bugs@bergstroem.nu,Fri Dec 5 12:41:59 2014 +1100,1417743719,Silence _BSD_SOURCE warnings in glibc 2.20 and forwardSee https://sourceware.org/glibc/wiki/Release/2.20#Packaging_Changesn,1.0,0.0,"src/fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,60.0,8.0,128.1683101851852,14.0,1.007802240651805,7.0,None,False,,
c3846becae5528e2987865ec1a5ef2cdeca3dadd,ff25d1896d3befe184aa1adebf5d5e961f5d4b15,antirez,antirez@gmail.com,Fri Dec 5 10:51:09 2014 +0100,1417773069,Simplify lua_cmsgpack macro and fix build on old Linux distros.Thanks to @badboy for the help in checking the build after the fix.n,1.0,7.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,962.0,4.0,10.676296296296297,7730.0,1.0936654409213904,712.0,Corrective,True,,
ff25d1896d3befe184aa1adebf5d5e961f5d4b15,d4a9836f1a4177a188537875374142e09cb4da74,Serghei Iakovlev,sergeyklay@users.noreply.github.com,Fri Dec 5 14:50:45 2014 +0200,1417783845,getting pid fixes```shrn$ ~ pidof redis-serverrn# nothingrnrn$ ~ ps aux | grep [r]edisrnredis  593  0.0  0.0  36900  5564 ?Ssl  Dec02   1:37 /usr/bin/redis-server 127.0.0.1:6379rnklay 15927  0.0  0.0  16772  6068 pts/6S+   13:58   0:00 redis-clirnrn$ ~ uname -arnLinux edge 3.17.4-1-ARCH #1 SMP PREEMPT Fri Nov 21 21:14:42 CET 2014 x86_64 GNU/Linuxrn```,1.0,1.0,"utils/whatisdoing.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,18.0,1.0,1429.8001620370374,0.0,0.0,0.0,Corrective,True,,
d4a9836f1a4177a188537875374142e09cb4da74,8c0f86842ea7ad162257ae62c59982eef792d0b6,Serghei Iakovlev,sergeyklay@users.noreply.github.com,Fri Dec 5 18:48:20 2014 +0200,1417798100,Update whatisdoing.shImproved getting pid,1.0,1.0,"utils/whatisdoing.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,18.0,2.0,0.1649884259259259,1.0,7.061031217116803,1.0,None,False,,
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,c87a37661e14b288d2510b3e4de088a3fed3e5c0,Sun He,sunheehnus@gmail.com,Mon Dec 8 11:15:06 2014 +0800,1418008506,sparkline.c: mov label-ini into the AddSample Function,3.0,4.0,"src/latency.c,CAS_DELIMITER,src/sparkline.c,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,13.0,395.0,28.0,90.99487847222224,6.5,1.024060837646043,7.0,None,False,,
c87a37661e14b288d2510b3e4de088a3fed3e5c0,07a9e44b86eff660e55bc1044a667eda7b981973,Sun He,sunheehnus@gmail.com,Mon Dec 8 11:43:32 2014 +0800,1418010212,sparkline.c: AddSample skip Empty label,1.0,1.0,"src/sparkline.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,176.0,4.0,0.019745370370370368,8.0,51.64478311840563,8.0,None,False,,
c3846becae5528e2987865ec1a5ef2cdeca3dadd,7ecb880168d756e157c14094e4092cc4d37ae68a,Jan-Erik Rediger,badboy@archlinux.us,Tue Dec 9 00:57:46 2014 +0100,1418083066,Only ignore sigpipe in interactive modeThis allows shell pipes to correctly end redis-cli.nnRef #2066n,3.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2031.0,123.0,13.27375,22.0,1.0753366607025143,12.0,None,False,,
ff25d1896d3befe184aa1adebf5d5e961f5d4b15 7ecb880168d756e157c14094e4092cc4d37ae68a,b2eb202281cc9266ee7d5180512df88d5a143002,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 08:59:49 2014 +0100,1418111989,Merge pull request #2200 from badboy/iss2066-additionalOnly ignore sigpipe in interactive mode,,,,,,,,,,,,,,,Merge,False,,
b2eb202281cc9266ee7d5180512df88d5a143002 07a9e44b86eff660e55bc1044a667eda7b981973,4b03be6d2fd01d8cdab39d3bf5b77cdf9c07b594,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 11:27:40 2014 +0100,1418120860,Merge pull request #2197 from sunheehnus/sparklinesparkline.c: mov label-ini into the AddSample Function,,,,,,,,,,,,,,,Merge,False,,
4b03be6d2fd01d8cdab39d3bf5b77cdf9c07b594 8c0f86842ea7ad162257ae62c59982eef792d0b6,4dab2821456429780873d5413d84d4398999c750,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 12:09:08 2014 +0100,1418123348,Merge pull request #2192 from sergeyklay/patch-1getting pid fixes,,,,,,,,,,,,,,,Merge,False,,
4dab2821456429780873d5413d84d4398999c750,5b2bbef9fc763f05cf4f48b239ecd71b69a66ce6,antirez,antirez@gmail.com,Tue Dec 9 12:18:34 2014 +0100,1418123914,Mark whatisdoing.sh as deprecated in top-comment.,6.0,0.0,"utils/whatisdoing.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,18.0,3.0,3.7709953703703705,7731.0,1.2651819749918665,54.0,None,False,,
5b2bbef9fc763f05cf4f48b239ecd71b69a66ce6 af453642e18cd158d3c057b9713fd4cf7968cc98,b4b4192f19294f61b5b7fc430a56fda75d0b3567,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 12:24:04 2014 +0100,1418124244,Merge pull request #2189 from jbergstroem/glibc_220_default_warnSilence _BSD_SOURCE warnings in glibc 2.20 and forward,,,,,,,,,,,,,,,Merge,False,,
b4b4192f19294f61b5b7fc430a56fda75d0b3567 c98d4f56756f5fba18a9035aab34a853b4fae574,87f1e27b27a652a3c6eaad31e2c67013041d5e3e,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 12:46:15 2014 +0100,1418125575,Merge pull request #2179 from sunheehnus/bitops-readbitops.c/redisPopcount: optimization in loop,,,,,,,,,,,,,,,Merge,False,,
87f1e27b27a652a3c6eaad31e2c67013041d5e3e f3c1aac7e60f6b2978436fa75bcacd6c2e32cbb7,f04ec18a36a55e73106aeadb17ad36b7589c7f17,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 12:57:22 2014 +0100,1418126242,Merge pull request #2177 from badboy/solaris-ioctl-warn-fixFix implicit declaration of ioctl on Solaris,,,,,,,,,,,,,,,Merge,False,,
f04ec18a36a55e73106aeadb17ad36b7589c7f17,5f5a9f0d14b4b9f2f65393f2764ee760475f6b8c,antirez,antirez@gmail.com,Tue Dec 9 12:59:36 2014 +0100,1418126376,Include stropts only if __sun is defined.,2.0,0.0,"src/memtest.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,281.0,15.0,7.5677430555555585,7732.0,1.1321397928892274,3561.0,None,False,,
5f5a9f0d14b4b9f2f65393f2764ee760475f6b8c 0f706adc5c2270e1084bba88279b844a91233c33,c58db75a6927efed3103274a352d1990ee0e3cf7,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 15:13:05 2014 +0100,1418134385,Merge pull request #2119 from sunheehnus/unstablesds.c/sdscatvprintf: va_end needs to be fixed,,,,,,,,,,,,,,,Merge,False,,
c58db75a6927efed3103274a352d1990ee0e3cf7 7923d71fb7a2b09f900160e0b65f312ea01c39fa,562e72943bab6a85e5cbf90f46cd880d80863e4a,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 15:24:44 2014 +0100,1418135084,Merge pull request #2176 from deepakverma/redis_bench_authfixredis-benchmark AUTH command to be discarded after the first send #2150,,,,,,,,,,,,,,,Merge,False,,
562e72943bab6a85e5cbf90f46cd880d80863e4a 9e579d91ccab01e78c8be46ae74b13e4058bac9d,d2aa91ce1f5431f8df4499010e6f6dd742bd2531,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 9 15:57:17 2014 +0100,1418137037,Merge pull request #2165 from sunheehnus/zipmap-readzipmap.c: update comments above,,,,,,,,,,,,,,,Merge,False,,
d2aa91ce1f5431f8df4499010e6f6dd742bd2531,181300d4a7506f7214538178ed79b8f57a49be8a,Brochen,liuql_mobiler@163.com,Wed Dec 10 11:19:13 2014 +0800,1418181553,"Update sds.cin the case (all chars of the string s found in 'cset' ),rnline[573] will no more do the same thing line[572] did.rnthis will be more faster especially in the case that the string s is very long and all chars of string s found in 'cset'",1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,51.0,36.748136574074074,0.0,0.0,0.0,None,False,,
d2aa91ce1f5431f8df4499010e6f6dd742bd2531,9bb4ef871e0abc4d6e3df338be8a83e77f685453,antirez,antirez@gmail.com,Wed Dec 10 09:48:56 2014 +0100,1418201336,sds.c: more tests for sdstrim().,12.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,52.0,0.2289699074074074,7733.0,5.367386139614821,3562.0,None,False,,
9bb4ef871e0abc4d6e3df338be8a83e77f685453,0195afae39b590cfe30778f6685731f9bb663775,antirez,antirez@gmail.com,Wed Dec 10 09:50:27 2014 +0100,1418201427,test-sds target in Makefile to run sds.c tests.,4.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,251.0,111.0,118.99789351851852,7734.0,1.0084035100994824,3563.0,Preventative,False,,
d2aa91ce1f5431f8df4499010e6f6dd742bd2531 181300d4a7506f7214538178ed79b8f57a49be8a,6a378dc31209bb04f00c56eb4e4e7474017695b0,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 10 09:50:36 2014 +0100,1418201436,Merge pull request #2203 from Brochen/unstableUpdate sds.c,,,,,,,,,,,,,,,Merge,False,,
0195afae39b590cfe30778f6685731f9bb663775 6a378dc31209bb04f00c56eb4e4e7474017695b0,0b7f5e258afbddf2c4f38740290732901fec68d7,antirez,antirez@gmail.com,Wed Dec 10 09:51:00 2014 +0100,1418201460,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0b7f5e258afbddf2c4f38740290732901fec68d7 f8c73e38b5f5a57d6d573fc6fdfed5b68d4879c8,2d3f99a1b75c1278eb56e80af62c1ab013719559,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 10 11:02:42 2014 +0100,1418205762,Merge pull request #2148 from mattsta/feature/sentinel/info-cacheAdd SENTINEL INFO-CACHE [masters...],,,,,,,,,,,,,,,Merge,False,,
2d3f99a1b75c1278eb56e80af62c1ab013719559,7576a27d586eb2ba63848c91eaefcccaf505160e,antirez,antirez@gmail.com,Wed Dec 10 11:04:24 2014 +0100,1418205864,Sentinel: INFO-CACHE reply format command shortened.,3.0,7.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3974.0,169.0,20.657824074074075,7735.0,1.0484078088967277,3564.0,None,False,,
7576a27d586eb2ba63848c91eaefcccaf505160e,0422321617861a4a5b7b88d8767f6c3aa33189fa,antirez,antirez@gmail.com,Wed Dec 10 11:05:37 2014 +0100,1418205937,Sentinel: removed useless flag var from INFO-CACHE.,1.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3970.0,170.0,0.0008449074074074074,7736.0,1184.5616438356165,3565.0,None,False,,
0422321617861a4a5b7b88d8767f6c3aa33189fa,c83a917286ca538d521113bbc49b34fc2974a84e,antirez,antirez@gmail.com,Wed Dec 10 11:11:44 2014 +0100,1418206304,"Sentinel: INFO-CACHE GCC minior code cleanup.I guess the initial goal of the initialization was to suppress GCCnwarning, but if we have to initialize, we can do it with the base-casenvalue instead of NULL which is never retained.n",2.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3968.0,171.0,0.004247685185185185,7737.0,236.42234332425068,3566.0,None,False,,
c83a917286ca538d521113bbc49b34fc2974a84e,d8158771b552d0ef7f42befd894478f5fa00b894,antirez,antirez@gmail.com,Wed Dec 10 11:15:13 2014 +0100,1418206513,"Sentinel: INFO-CACHE comments reworked a bit.Changed in order to make them more review friendly, based on thenexperience of reviewing the code myself.n",12.0,10.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3966.0,172.0,0.0024189814814814816,7738.0,414.39712918660285,3567.0,None,False,,
d8158771b552d0ef7f42befd894478f5fa00b894 3ab832193cb58a876eba9c62df3fc0ea3814453a,3da87b70ddb8c4ff49b3a32424baf24f0a88c2fa,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 10 15:28:41 2014 +0100,1418221721,Merge pull request #2133 from chooper/histfile-overrideoverride histfile from env - fixes #831 and copies #833,,,,,,,,,,,,,,,Merge,False,,
3da87b70ddb8c4ff49b3a32424baf24f0a88c2fa,06e76bc3e22dd72a30a8a614d367246b03ff1312,antirez,antirez@gmail.com,Wed Dec 10 16:10:21 2014 +0100,1418224221,"Better read-only behavior for expired keys in slaves.Slaves key expire is orchestrated by the master. Sometimes the masternwill send the synthesized DEL to expire keys on the slave with a nonntrivial delay (when the key is not accessed, only the incremental expirynalgorithm will expire it in background).nnDuring that time, a key is logically expired, but slaves still returnnthe key if you GET (or whatever) it. This is a bad behavior.nnHowever we can't simply trust the slave view of the key, since we neednthe master to be able to send write commands to update the slave datanset, and DELs should only happen when the key is expired in the masternin order to ensure consistency.nnHowever 99.99% of the issues with this behavior is when a client whichnis not a master sends a read only command. In this case we are safe andncan consider the key as non existing.nnThis commit does a few changes in order to make this sane:nn1. lookupKeyRead() is modified in order to return NULL if the abovenconditions are met.n2. Calls to lookupKeyRead() in commands actually writing to the data setnare repliaced with calls to lookupKeyWrite().nnThere are redundand checks, so for example, if in 2 something wasnoverlooked, we should be still safe, since anyway, when the masternwrites the behavior is to don't care about what expireIfneeded()nreturns.nnThis commit is related to  #1768, #1770, #2131.n",32.0,7.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,1.3140830173571307,13.0,1915.2,796.0,41.80853472222223,7741.0,1.0378008620569903,3572.0,Perfective,False,True,"[""5877c02c5102d7f01e3a41937ffdea098a63befe"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
bc1a3b96e6402996582602e17221f103bef3da8e,b5686c1a4db3529cc3613f572a20789932c0cc7d,Pierre-Yves Ritschard,pyr@spootnik.org,Wed Dec 10 21:36:53 2014 +0100,1418243813,Do not expect UPSTART_JOB to be redis,0.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3773.0,541.0,6.446087962962962,3.0,1.155132850458396,3.0,None,False,,
06e76bc3e22dd72a30a8a614d367246b03ff1312 b5686c1a4db3529cc3613f572a20789932c0cc7d,9c385ada229f88d3d214c5b0da06836b2c32cb94,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 14:39:09 2014 +0100,1418305149,Merge pull request #2134 from pyr/feature/supervised-initSupport daemon supervision by upstart or systemd,,,,,,,,,,,,,,,Merge,False,,
9c385ada229f88d3d214c5b0da06836b2c32cb94 6df9001d6c5cc7a9446bb5f42f0e8c4784d0f5ea,8b81383401842ea30f6df9be695cc786300f15cd,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 14:40:18 2014 +0100,1418305218,Merge pull request #2117 from mariano-perez-rodriguez/patch-4Typo fixes in redis.conf,,,,,,,,,,,,,,,Merge,False,,
8b81383401842ea30f6df9be695cc786300f15cd 7fcfbea0f53744f81f46d209dee0f5f70803f773,4ff365b34a756e221abf0474ccfc941663e3a073,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 14:58:37 2014 +0100,1418306317,Merge pull request #2114 from h0x91b/redis-cli-fix-clusterReconnect redis-cli when cluster return moved,,,,,,,,,,,,,,,Merge,False,,
4ff365b34a756e221abf0474ccfc941663e3a073 14f2582da26013b09aef5a24230c2553eebfd73a,dea938440cc08d8f0d97a3e3c090d97670ef24a8,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 15:05:38 2014 +0100,1418306738,Merge pull request #2107 from mattsta/fix-trib-importFix redis-trib import SCAN call,,,,,,,,,,,,,,,Merge,False,,
dea938440cc08d8f0d97a3e3c090d97670ef24a8 2540736366eedbe421118a76556438c8fbe8ab48,599e52d93ed78fa7f637ef8f91236383194da4f0,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 15:08:51 2014 +0100,1418306931,Merge pull request #2106 from NanXiao/unstableFix function prototype in redis-cli.c.,,,,,,,,,,,,,,,Merge,False,,
599e52d93ed78fa7f637ef8f91236383194da4f0 b4c4be785cf5aeb480eabefd18a131655d36734f,f1742ac9df1ccf2ebe40bf4e1be14d2374218847,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 15:11:22 2014 +0100,1418307082,Merge pull request #2105 from Hailei/fix-redis-benchmark-idle-IDLEFIXED redis-benchmark's idle mode.With idle mode shouldn't create write event,,,,,,,,,,,,,,,Merge,False,,
f1742ac9df1ccf2ebe40bf4e1be14d2374218847,ff01ce55d8c71335eb5a69f71d2712013d8480ed,antirez,antirez@gmail.com,Thu Dec 11 15:16:20 2014 +0100,1418307380,Removed useless space in redis-benchmark.c.,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,811.0,55.0,9.639942129629633,7744.0,1.1037350625712128,3573.0,None,False,,
ff01ce55d8c71335eb5a69f71d2712013d8480ed,f24a0bc1c5ba15518cff8d058af7b8e49f02468f,antirez,antirez@gmail.com,Thu Dec 11 15:19:23 2014 +0100,1418307563,In redisIsSupervised() use MSG_NOSIGNAL only for Linux.,11.0,2.0,"src/config.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.961236604722876,13.0,1985.5,571.0,3.960891203703704,7745.5,1.1327168456027878,3575.0,None,False,True,"[""36a3b75355bd5aea9e34889918c5b78fb79586e4""]"
f24a0bc1c5ba15518cff8d058af7b8e49f02468f dab5c09accf2b61957434a560d585005d6d9cf7d,81772ce0e38c386579567c7ccd21cc473b13ea42,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 15:20:53 2014 +0100,1418307653,Merge pull request #2103 from coderholic/unstableUpdate redis_init_script.tpl,,,,,,,,,,,,,,,Merge,False,,
81772ce0e38c386579567c7ccd21cc473b13ea42 6c0abc4a0ee1450a7fc13076f5d04a6549286cf3,c50693d40fa4f950a21f48513edefd40714ff5e4,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 11 15:54:39 2014 +0100,1418309679,Merge pull request #2094 from mattsta/nosortFix zero-ordering SORT when called against lists,,,,,,,,,,,,,,,Merge,False,,
c50693d40fa4f950a21f48513edefd40714ff5e4,3cd36a4dd9b31b351c87f1084bc6166a44044315,antirez,antirez@gmail.com,Thu Dec 11 15:57:11 2014 +0100,1418309831,SORT: Don't sort Set elements if not needed.Related to #2094.n,3.0,1.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,566.0,34.0,48.961527777777775,7747.0,1.0204241992721041,3576.0,None,False,,
3cd36a4dd9b31b351c87f1084bc6166a44044315,2d90619f88b81d1a094a875d73f8afd244480730,Matt Stancliff,matt@genges.com,Thu Oct 23 12:40:02 2014 -0400,1414082402,Add centralized IP/Peer formatting functionsThis stops us from needing to manually check against : tonadd brackets around IPv6 addresses everywhere.n,37.0,0.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",4.0,1.0,1.0,1.335850324211327,13.0,472.5,147.0,6.685248842592591,172.5,1.3337778345830311,97.0,Feature Addition,False,,
2d90619f88b81d1a094a875d73f8afd244480730,491881e13b73ab1686328efdceb4cdf8bde64046,Matt Stancliff,matt@genges.com,Thu Oct 23 13:09:58 2014 -0400,1414084198,"Cleanup all IP formatting codeInstead of manually checking for strchr(n,':') everywhere,nwe can use our new centralized IP formatting functions.n",12.0,33.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",5.0,1.0,1.0,1.82811928653816,13.0,2915.0,1052.0,-44.681569444444456,177.0,0.990054816870737,102.0,Perfective,False,,
3cd36a4dd9b31b351c87f1084bc6166a44044315,7d4c2a98b6d8b1b85337c2b3d3c2fbb5a2efd102,Matt Stancliff,matt@genges.com,Tue Jun 17 10:42:19 2014 -0400,1403016139,Add maxmemory_policy to INFO outputAlso refactors getting human string values fromnthe defined value in `server.maxmemory_policy`ninto a common function.n,21.0,14.0,"src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.8997559594359127,13.0,2401.333333333333,1165.0,-159.20736882716048,181.0,0.9956932300245172,105.0,Feature Addition,False,,
7d4c2a98b6d8b1b85337c2b3d3c2fbb5a2efd102,ec5a0c548b0afbb1bd584b5761bf740460fd20a2,Matt Stancliff,matt@genges.com,Tue Jun 17 23:05:30 2014 -0400,1403060730,"Add cached total system memory to INFO outputThere is no standard cross-platform way of obtainingnsystem memory info, but I found a useful functionnconvering all common platforms.  I removed supportnfor uncommon Redis platforms (windows, AIX) and leftnothers intact.nnFor more info, see:nhttp://nadeausoftware.com/articles/2012/09/c_c_tip_how_get_physical_memory_size_systemnnThe system memory info is cached on startup, but some systemsnmay be able to change the amount of memory visible to Redisnat runtime if Redis is deployed in a VM or container.nnAlso see #1820n",61.0,1.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",2.0,1.0,1.0,0.20559250818508304,13.0,2642.5,1013.0,0.516099537037037,183.5,2.4532080464667763,107.0,Feature Addition,False,,
3cd36a4dd9b31b351c87f1084bc6166a44044315,391fc9b6335329e513664c69bdc18865ab944beb,Matt Stancliff,matt@genges.com,Mon Aug 25 15:53:11 2014 -0500,1408999991,"Sentinel: Improve INFO command behaviorImprovements:n  - Return empty string if asking for non-existing section (INFO foo)n  - Fix potential memory leak (caused by sdsempty() then returned if >2 args)n  - Clean up argument parsingn  - Allow all as valid section (same as default or zero args currently)n  - Move strcasecmp to end of evaluation chain in conditionalsnnAlso, since we're C99, I moved some variable declarations to be closernto where they are actually used (saves us from needing to free an empty infonif detect argument errors up front).nnCloses #1915nCloses #1966n",13.0,7.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3964.0,174.0,-58.84498842592593,185.0,0.9830061993935336,108.0,None,False,,
3cd36a4dd9b31b351c87f1084bc6166a44044315,badf0f008bede268d3235412243fc62d618e323c,Matt Stancliff,matt@genges.com,Thu Aug 7 09:43:16 2014 -0400,1407418996,"Bitops: Stop overallocating storage space on setPreviously the string was created empty then re-sizednto fit the offset, but sds resize causes the sds tonover-allocate by at least 1 MB (which is a lot whennyou are operating at bit-level access).nnThis also improves the speed of initial sets by 2% to 6%nbased on quick testing.nnPatch logic provided by @oranagrannFixes #1918n",4.0,6.0,"src/bitops.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,13.0,530.5,80.0,-117.3336574074074,186.5,0.9936146260232456,110.0,None,False,,
491881e13b73ab1686328efdceb4cdf8bde64046,ce269ad3c5a13636b2c87aa69473c30410b06c36,antirez,antirez@gmail.com,Thu Dec 11 18:20:30 2014 +0100,1418318430,"AnetFormatIP(): renamed, commented, now sticks to IP:port format.A few code style changes + consistent format: not nice for humans butnbetter for parsers.n",15.0,14.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",6.0,1.0,1.0,1.7300284863197055,13.0,2258.6666666666665,937.0,58.82174189814813,7750.5,1.0082347382896617,3582.0,None,False,,
ce269ad3c5a13636b2c87aa69473c30410b06c36,bbf0736c4e472c5488fae6990de51417bc8a2e42,antirez,antirez@gmail.com,Thu Dec 11 18:28:26 2014 +0100,1418318906,sdsformatip() removed.Specialized single-use function. Not the best match for sds.c btw.nAlso genClientPeerId() is no longer static: we need symbols.n,4.0,12.0,"src/networking.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",4.0,1.0,1.0,1.5919171866886992,13.0,1726.25,448.0,36.771388888888886,7755.5,1.0110499638498358,3586.0,None,False,,
bbf0736c4e472c5488fae6990de51417bc8a2e42,7ef1239bd1793da9fec1f9e572a3dc522f2aee9f,clark.kang,clark.kang@kakao.com,Fri Dec 12 12:02:39 2014 +0900,1418353359,remove_warning in db.c,2.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1239.0,148.0,1.4946527777777778,0.0,0.0,0.0,None,False,,
bbf0736c4e472c5488fae6990de51417bc8a2e42 7ef1239bd1793da9fec1f9e572a3dc522f2aee9f,67e8061b17b6bdff9bd44a0a62df6c1dd748e4d1,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 12 18:42:44 2014 +0100,1418406164,Merge pull request #2209 from charsyam/feature/remove_warningremove_warning in db.c,,,,,,,,,,,,,,,Merge,False,,
bbf0736c4e472c5488fae6990de51417bc8a2e42,66e2bdf21021a787e959c943ba453e56f9787093,antirez,antirez@gmail.com,Fri Dec 12 22:56:33 2014 +0100,1418421393,Lua cmsgpack lib updated to latest version.It fixes a bad bug that crashes the server in certain conditionsnas shown in issue #2210.n,27.0,26.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,956.0,5.0,7.50375,7758.0,1.1332666999833416,713.0,Corrective,True,,
66e2bdf21021a787e959c943ba453e56f9787093 67e8061b17b6bdff9bd44a0a62df6c1dd748e4d1,f2858dc8dc87499d64f71cadf681d3a8dda777f8,antirez,antirez@gmail.com,Fri Dec 12 22:57:29 2014 +0100,1418421449,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
f2858dc8dc87499d64f71cadf681d3a8dda777f8,7b72dbf599e22f13d007a6dd0ec5d7d559fac38e,Rhommel Lamas,roml@rhommell.com,Thu Oct 23 10:52:35 2014 +0200,1414054355,Add symlink to redis-sentinel during make install,1.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,255.0,112.0,-47.99851851851852,0.0,0.0,0.0,Feature Addition,False,,
7b72dbf599e22f13d007a6dd0ec5d7d559fac38e,97d43d063893cc88a7b9dc10e232d3ae61cca04c,antirez,antirez@gmail.com,Sat Dec 13 08:54:33 2014 +0100,1418457273,"List of commands flagged as admin commands modified.The old list did not made much sense... and the flag is currently notnused at all, so no side effects.n",7.0,7.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3835.0,545.0,178.20072916666663,7759.0,1.0056116493163434,3587.0,None,False,True,"[""0cb66fa156943dbae32a0ad86241a6e201f80fec""]"
97d43d063893cc88a7b9dc10e232d3ae61cca04c,d6410ed19a4930895f2591eed224d5ec5449393a,antirez,antirez@gmail.com,Sat Dec 13 08:57:06 2014 +0100,1418457426,"Don't log admin commands in MONITOR.Otherwise there are security risks, especially when providing Redis as anservice, the user may sniff for admin commands renamed to annunguessable string via rename-command in redis.conf.n",1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3835.0,546.0,0.0017708333333333332,7760.0,565.7058823529413,3588.0,None,False,,
d6410ed19a4930895f2591eed224d5ec5449393a,c147cd848760c44791d73b03dbe2a4b8aa5b8c8e,antirez,antirez@gmail.com,Sat Dec 13 19:26:48 2014 +0100,1418495208,CONTRIBUTING updated.,3.0,1.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,34.0,7.0,373.0284837962963,7761.0,1.0026807604336887,1355.0,None,False,,
c147cd848760c44791d73b03dbe2a4b8aa5b8c8e,288028876f4428edfc044d8a1f1d6784b0dbe739,Alon Diamant,diamant.alon@gmail.com,Tue Mar 11 15:38:55 2014 +0100,1394548735,"Added <count> parameter to SPOP: spopCommand() now runs spopWithCountCommand() in case the <count> param is found. Added intsetRandomMembers() to Intset: Copies N random members from the set into inputted 'values' array. Uses either the Knuth or Floyd sample algos depending on ratio count/size. Added setTypeRandomElements() to SET type: Returns a number of random elements from a non empty set. This is a version of setTypeRandomElement() that is modified in order to return multiple entries, using dictGetRandomKeys() and intsetRandomMembers(). Added tests for SPOP with <count>: unit/type/set, unit/scripting, integration/aof -- Cleaned up code a bit to match with required Redis coding style",414.0,12.0,"src/help.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",9.0,2.0,4.0,1.6913464928190247,13.0,940.3333333333336,1162.0,-28.644562757201648,4.0,0.8896653320345838,2.0,Feature Addition,False,True,"[""3c8a75583dd896c6b9f31b72fa394962650b8547""]"
e9b014cfacb443a0e828002d900a5a94a704d965,352172a7ef5015c0c487ba6258cdf3b4b31a551c,Mihir Joshi,mihir.coldplay@gmail.com,Sun Dec 14 10:12:58 2014 -0500,1418569978,"Stricter options for SET command- As per Antirez's suggestion, this commit raises an error when mutuallynexclusive options are provided. Duplicate options are allowed.n",12.0,8.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,461.0,56.0,129.06229166666665,1.0,1.007748196526548,1.0,None,False,,
c147cd848760c44791d73b03dbe2a4b8aa5b8c8e,90c7d8cfa19a8c378006943c83ace54c5d3da110,antirez,antirez@gmail.com,Mon Dec 15 10:18:22 2014 +0100,1418635102,Make sure buffer is enough in clusterSendPing().,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4723.0,420.0,3.665185185185185,7762.0,1.272837510105093,3589.0,None,False,,
90c7d8cfa19a8c378006943c83ace54c5d3da110,1aef29e0795681a3340a79c00379c246697bbcd6,antirez,antirez@gmail.com,Tue Dec 16 15:03:12 2014 +0100,1418738592,Fix comment in clusterHandleSlaveFailover().,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4723.0,421.0,1.197800925925926,7763.0,1.8348632718137017,3590.0,Corrective,True,,
1aef29e0795681a3340a79c00379c246697bbcd6,24f4c01832d183e40c1c55ea2a0a8e499cc1bd5c,Rhommel Lamas,roml@rhommell.com,Wed Dec 17 11:04:08 2014 +0100,1418810648,Add redis-sentinel symlink to a relative path,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,256.0,113.0,55.0496875,1.0,1.018165407387644,1.0,Feature Addition,False,,
1aef29e0795681a3340a79c00379c246697bbcd6 24f4c01832d183e40c1c55ea2a0a8e499cc1bd5c,25b06cd3ce94e595d6a043dead449d6c6ea362e1,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 17 12:27:22 2014 +0100,1418815642,Merge pull request #2221 from rhoml/rhoml/fix-redis-sentinel-lnFix redis-sentinel symlink to a relative path,,,,,,,,,,,,,,,Merge,False,,
25b06cd3ce94e595d6a043dead449d6c6ea362e1,a772747ffcacce26561af8902fa3c5414f854811,Matt Stancliff,matt@genges.com,Thu Mar 6 12:27:13 2014 -0500,1394126833,"Cluster: Notify user on accept errorIf we woke up to accept a connection, but we can'tnaccept it, inform the user of the error going onnwith their networking.nn(The previous message was the same for success or error!)n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4723.0,422.0,-284.85832175925924,188.0,0.9964894829337472,111.0,None,False,,
25b06cd3ce94e595d6a043dead449d6c6ea362e1 ec5a0c548b0afbb1bd584b5761bf740460fd20a2,e1e41f691f55fe54ec37822ad4084d0e06a37870,antirez,antirez@gmail.com,Wed Dec 17 17:07:30 2014 +0100,1418832450,Merge branch 'improve/INFO/add-system-memory-size' of git://github.com/mattsta/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e1e41f691f55fe54ec37822ad4084d0e06a37870,615f6923d5fde35478c82845c564eeaa38174676,antirez,antirez@gmail.com,Wed Dec 17 17:11:20 2014 +0100,1418832680,getMemorySize() moved into zmalloc.c with other low level mem utils.See issue #2218.n,51.0,50.0,"src/redis.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.0699493559974238,13.0,1429.0,591.0,116.44397376543208,7765.0,1.0032015305606976,3593.0,None,False,True,"[""aa5b4be02ecf280b68786986f3fe99a9abcf0446"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""8fd1031b10dec256d5b365b278815f9d8444e601""]"
615f6923d5fde35478c82845c564eeaa38174676,9a6354316b9cde662f3c65b90e14c970c3e864ea,antirez,antirez@gmail.com,Wed Dec 17 17:15:37 2014 +0100,1418832937,Add info as requested by the original getMemorySize() license.,8.0,0.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,415.0,29.0,0.0029745370370370373,7767.0,337.1867704280156,3594.0,Feature Addition,False,,
9a6354316b9cde662f3c65b90e14c970c3e864ea a772747ffcacce26561af8902fa3c5414f854811,abd95ffdfd664aa269960acf15f3e11a7cf369d1,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 17 17:48:18 2014 +0100,1418834898,Merge pull request #1582 from mattsta/add-error-mention-to-error-conditionCluster: Update accept error to mention error,,,,,,,,,,,,,,,Merge,False,,
abd95ffdfd664aa269960acf15f3e11a7cf369d1 288028876f4428edfc044d8a1f1d6784b0dbe739,70674ac6776d1b8402bec3f38fa25deb8e22fe88,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 17 17:59:59 2014 +0100,1418835599,"Merge pull request #2215 from advance512/spopWithCountSPOP optional count argument. (issue #1793, supersedes pull request #1803)",,,,,,,,,,,,,,,Merge,False,,
288028876f4428edfc044d8a1f1d6784b0dbe739,3c8a75583dd896c6b9f31b72fa394962650b8547,Alon Diamant,alon@everything.me,Thu Dec 18 12:39:58 2014 +0200,1418899198,"Fix: case when SPOP with count>MAXINT, setTypeRandomElements() will get negative count argument due to signed/unsigned mismatch.setTypeRandomElements() now returns unsigned long, and also uses unsigned long for anything related to count of members.nspopWithCountCommand() now uses unsigned long elements_returned instead of int, for values returned from setTypeRandomElements()n",7.0,7.0,"src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,13.0,1256.5,509.0,281.8340625,9.5,1.002661140365175,7.0,Corrective,True,,
70674ac6776d1b8402bec3f38fa25deb8e22fe88 3c8a75583dd896c6b9f31b72fa394962650b8547,efbf5a125ec4647553bea1f91705f35e4c4e560c,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 18 15:11:44 2014 +0100,1418911904,"Merge pull request #2224 from advance512/spopWithCountFix: case when SPOP with count>MAXINT, setTypeRandomElements() will get ...",,,,,,,,,,,,,,,Merge,False,,
efbf5a125ec4647553bea1f91705f35e4c4e560c,e3436dd9b886da95b62c347b68be5366877f7b91,antirez,antirez@gmail.com,Fri Dec 19 10:04:15 2014 +0100,1418979855,Fix adjustOpenFilesLimit() logging to match real state.Fixes issue #2225.n,12.0,12.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3786.0,549.0,1.7034143518518519,7768.0,1.5870562255817904,3595.0,Corrective,True,,
e3436dd9b886da95b62c347b68be5366877f7b91,b55f742e46a755e96c92eded47d9c69327f774e8,Matt Stancliff,matt@genges.com,Fri Dec 19 21:52:48 2014 -0500,1419043968,Improve redis-trib replica assignmentThis tiny bit of code has gone through so many revisions.  Hopefullynit's more correct now.nnFixes #2204n,42.0,25.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1347.0,100.0,53.52998842592593,189.0,1.0186811174335255,112.0,Corrective,True,True,"[""1c477f62bc34cc6c5ea42f48aac40148cd778441""]"
e3436dd9b886da95b62c347b68be5366877f7b91,d74a5a088036342ed430c6199d69f00610e14370,Alon Diamant,alon@everything.me,Sun Dec 21 15:08:44 2014 +0200,1419167324,Following @mattsta's friendly review:   1. memory leak in t_set.c has been fixed   2. end-of-line spaces has been removed (from all over the place)   3. for loops have been ordered up to match existing Redis style (less weird)   4. comments format has been fixed (added * in the beggining of every comment line),75.0,79.0,"src/intset.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.9225641366401656,13.0,594.0,50.0,144.02034143518517,11.5,1.003490637469879,9.0,None,False,,
d74a5a088036342ed430c6199d69f00610e14370,14b04c062efdca92cb91ef72a2efe0d531bb263f,Alon Diamant,alon@everything.me,Sun Dec 21 15:10:06 2014 +0200,1419167406,Fixed memory leaks in rdbSaveToSlavesSockets(),2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1508.0,126.0,55.07434027777778,13.0,1.0181572760555335,10.0,Corrective,True,,
e3436dd9b886da95b62c347b68be5366877f7b91 14b04c062efdca92cb91ef72a2efe0d531bb263f,5888290d260cd60aedcd695c8625eadb6f2c349e,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 22 11:00:39 2014 +0100,1419242439,Merge pull request #2229 from advance512/spopWithCountMemory leak fixes (+ code style fixes),,,,,,,,,,,,,,,Merge,False,,
5888290d260cd60aedcd695c8625eadb6f2c349e,32bba43ac7f9abd4efd7f79fc1ae6106656b9d8c,Matt Stancliff,matt@genges.com,Thu Dec 11 19:41:26 2014 -0500,1418344886,Add 'age' value to SENTINEL INFO-CACHE,5.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3972.0,177.0,0.30069444444444443,190.0,4.325635103926096,113.0,Feature Addition,False,,
5888290d260cd60aedcd695c8625eadb6f2c349e 32bba43ac7f9abd4efd7f79fc1ae6106656b9d8c,3a1ee895fad8798666d609a1dd327671327d73c6,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 23 10:58:43 2014 +0100,1419328723,Merge pull request #2234 from mattsta/feature/sentinel-info-cache/ageAdd 'age' value to SENTINEL INFO-CACHE,,,,,,,,,,,,,,,Merge,False,,
3a1ee895fad8798666d609a1dd327671327d73c6 b55f742e46a755e96c92eded47d9c69327f774e8,f7bc1fcea9b5ffe2bf7924a2a5d10981761dab16,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 23 11:00:00 2014 +0100,1419328800,Merge pull request #2227 from mattsta/fix/trib/assignment/master-replicaImprove redis-trib replica assignment,,,,,,,,,,,,,,,Merge,False,,
5888290d260cd60aedcd695c8625eadb6f2c349e,840435ad0be252094b118af428590ba45ba1cec2,antirez,antirez@gmail.com,Tue Dec 23 14:52:57 2014 +0100,1419342777,"INFO loading stats: three fixes.1. Server unxtime may remain not updated while loading AOF, so ETA isnnot updated correctly.nn2. Number of processed byte was not initialized.nn3. Possible division by zero condition (likely cause of issue #1932).n",5.0,4.0,"src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,2648.0,677.0,3.1151215277777777,7769.5,1.3265886036757204,3597.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
840435ad0be252094b118af428590ba45ba1cec2 f7bc1fcea9b5ffe2bf7924a2a5d10981761dab16,9e718a1f57a18d685fc63cff9ffdeef3af734969,antirez,antirez@gmail.com,Tue Dec 23 14:54:56 2014 +0100,1419342896,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
9e718a1f57a18d685fc63cff9ffdeef3af734969,ad41a7c40430bc043c2b95556197af2862a2bab5,Matt Stancliff,matt@genges.com,Sun Nov 16 13:03:54 2014 -0500,1416161034,Add addReplyBulkSds() functionRefactor a common pattern into one function so we don'tnend up with copy/paste programming.n,12.0,13.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",5.0,1.0,1.0,2.1346939516467023,13.0,3143.6,1821.0,27.25131944444445,193.0,1.0053946358337262,118.0,Feature Addition,False,,
ad41a7c40430bc043c2b95556197af2862a2bab5,27937c2821a85efd4245fcbac3ebed782129f5d7,Matt Stancliff,matt@genges.com,Sun Nov 16 13:05:48 2014 -0500,1416161148,Add DEBUG JEMALLOC INFOUses jemalloc function malloc_stats_print() to returnnstats about what jemalloc has allocated internally.n,21.0,0.0,"src/debug.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,13.0,1498.5,213.0,-24.42335069444445,196.5,0.9688242571360196,120.0,Corrective,True,True,"[""0f64080dcb9f44c923379f909aae82f6c2b2ed19"", ""f8909a25796d3a4e0cee6f5f2250e57143e10129"", ""78f35f8d2cff306d943366a5c05df9e75b0f028f""]"
27937c2821a85efd4245fcbac3ebed782129f5d7,8380655e85f0afd1f0afc99b464717cb97002b7a,Matt Stancliff,matt@genges.com,Sat Nov 8 10:16:54 2014 -0500,1415459814,Remove ziplist compiler warningsOnly happen when compiled with the test define.n,6.0,4.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1536.0,41.0,289.0589236111111,198.0,1.0034595022617097,121.0,Preventative,False,,
8380655e85f0afd1f0afc99b464717cb97002b7a,8febcffdc597566f1e307c0534014b2bdf687c02,Matt Stancliff,matt@genges.com,Wed Nov 12 21:58:57 2014 -0500,1415847537,"Allow all code tests to run using Redis argsPreviously, many files had individual main() functions for testing,nbut each required being compiled with their own testing flags.nThat gets difficult when you have 8 different flags you neednto set just to run all tests (plus, some test files requirednother files to be compiled aaginst them, and it seems some didn'tnbuild at all without including the rest of Redis).nnNow all individual test main() funcions are renamed to a testnfunction for the file itself and one global REDIS_TEST define enablesntesting across the entire codebase.nnTests can now be run with:n  - `./redis-server test <test>`nn  e.g. ./redis-server test ziplistnnIf REDIS_TEST is not defined, then no tests get included and nontests are included in the final redis-server binary.n",143.0,47.0,"src/crc64.c,CAS_DELIMITER,src/crc64.h,CAS_DELIMITER,src/endianconv.c,CAS_DELIMITER,src/endianconv.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/sha1.c,CAS_DELIMITER,src/sha1.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER,src/zipmap.c,CAS_DELIMITER,src/zipmap.h,CAS_DELIMITER",18.0,1.0,1.0,3.7315174415686334,13.0,563.0555555555555,1218.0,388.2656198559671,207.5,1.000326226128015,139.0,Preventative,False,True,"[""1dfcd75ae36f5f7bea86893c391ea863cd32dee9""]"
8febcffdc597566f1e307c0534014b2bdf687c02,9b343678d2edaaecb10aaa314f78e41b25534f44,Matt Stancliff,matt@genges.com,Thu Nov 20 13:00:08 2014 -0500,1416506408,Add simple ll2string() tests,42.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,648.0,21.0,7.625821759259257,217.0,1.1311334085124405,140.0,Feature Addition,False,,
9b343678d2edaaecb10aaa314f78e41b25534f44,d01d4ddcbb62a19e841e4505930acd1986547dbf,Matt Stancliff,matt@genges.com,Thu Nov 13 15:12:08 2014 -0500,1415909528,Allow forcing non-jemalloc build,4.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,256.0,114.0,-33.57777777777777,218.0,0.970218398411648,141.0,None,False,,
d01d4ddcbb62a19e841e4505930acd1986547dbf,fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70,Matt Stancliff,matt@genges.com,Thu Nov 13 22:17:57 2014 -0500,1415935077,"Fix how zipEntry returns valueszipEntry was returning a struct, but that caused somenproblems with tests under 32 bit builds.nnThe tests run better if we operate on structs allocated in thencaller without worrying about copying on return.n",16.0,18.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1537.0,43.0,1.0131944444444445,219.0,1.9869773817683345,142.0,Corrective,True,,
fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70,53b1ee34ddba1446d81f2ce07c402db271a94674,Matt Stancliff,matt@genges.com,Thu Nov 13 16:12:09 2014 -0500,1415913129,"Fix ziplistDeleteRange index parameterIt's valid to delete from negative offsets, so we *don't*nwant unsigned arguments here.n",2.0,2.0,"src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,792.5,49.0,0.2525694444444444,220.5,0.02153809797336881,144.0,Corrective,True,,
53b1ee34ddba1446d81f2ce07c402db271a94674,1dfcd75ae36f5f7bea86893c391ea863cd32dee9,Matt Stancliff,matt@genges.com,Thu Nov 13 16:12:44 2014 -0500,1415913164,"Fix ziplist test for pop()The previous test wasn't returning the new ziplist, so the testnwas invalid.  Now the test works properly.nnThese problems were simultaenously discovered in #2154 and thatnPR also had an additional fix we included here.n",6.0,6.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1535.0,45.0,0.00040509259259259264,222.0,2469.5714285714284,145.0,Corrective,True,,
1dfcd75ae36f5f7bea86893c391ea863cd32dee9,9b786b124d6a547b87700114acdb9a617521a4bf,Matt Stancliff,matt@genges.com,Thu Nov 13 16:21:27 2014 -0500,1415913687,"Cleanup ziplist valgrind warningsValgrind can't detect 'memset' initializes things, so let'snstatically initialize them to remove some unnecessary warnings.n",14.0,5.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1535.0,46.0,0.006053240740740741,223.0,166.20076481835562,146.0,Feature Addition,False,,
9b786b124d6a547b87700114acdb9a617521a4bf,d956d809acb848aec0f6524e1337d274a635980d,Matt Stancliff,matt@genges.com,Thu Nov 13 23:35:10 2014 -0500,1415939710,Fix three simple clang analyzer warnings,3.0,3.0,"src/rdb.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,13.0,2780.0,408.0,47.90109953703704,225.0,0.9859104774733292,149.0,Corrective,True,,
d956d809acb848aec0f6524e1337d274a635980d,5e362b84ab8b769bf2738daea97b45a375d223f1,Matt Stancliff,matt@genges.com,Thu Nov 13 14:11:47 2014 -0500,1415905907,Add quicklist implementationThis replaces individual ziplist vs. linkedlist representationsnfor Redis list operations.nnBig thanks for all the reviews and feedback from everybody innhttps://github.com/antirez/redis/pull/2143n,2495.0,480.0,"src/Makefile,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/quicklist.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER,tests/unit/type/list-2.tcl,CAS_DELIMITER,tests/unit/type/list-3.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",16.0,2.0,4.0,1.5266695699134007,13.0,792.875,1667.0,166.20779007523154,234.5,-0.4822734178249751,38.0,Feature Addition,False,True,"[""8d7021892ec79bfea3628bcc2999512d9a757a21"", ""5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f"", ""f704360462640a88975eeb68fd80617921d7c97d"", ""395e11255cc924c2ee4cc4ddcbf30d269b193316""]"
5e362b84ab8b769bf2738daea97b45a375d223f1,9d2dc0249c5ef99586710d711e1381c4178aeb39,Matt Stancliff,matt@genges.com,Fri Nov 21 14:52:10 2014 -0500,1416599530,"Add ziplistMerge()This started out as #2158 by sunheehnus, but I kept rewriting itnuntil I could understand things more easily and get a few morencorrectness guarantees out of the readability flow.nnThe original commit created and returned a new ziplist with the contents ofnboth input ziplists, but I prefer to grow one of the input ziplistsnand destroy the other one.nnSo, instead of malloc+copy as in #2158, the merge now reallocs one ofnthe existing ziplists and copies the other ziplist into the new space.nnAlso added merge test cases to ziplistTest()n",211.0,55.0,"src/quicklist.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER",3.0,1.0,1.0,0.8817110334835083,13.0,1249.6666666666667,54.0,7.970165895061728,244.0,1.0763396365451718,162.0,Feature Addition,False,,
9d2dc0249c5ef99586710d711e1381c4178aeb39,0f15eb183b13108b08141d164edabae5b4bbef99,Matt Stancliff,matt@genges.com,Fri Nov 21 21:03:25 2014 -0500,1416621805,Free ziplist test lists during testsFreeing our test lists helps keep valgrind output cleann,26.0,0.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1736.0,48.0,0.2578125,246.0,4.878787878787879,163.0,Perfective,False,,
0f15eb183b13108b08141d164edabae5b4bbef99,60a9418ed9adaff7844113b89fd4a4c01100f0b9,Matt Stancliff,matt@genges.com,Tue Nov 25 12:19:58 2014 -0500,1416935998,redis-benchmark: Add RPUSH and RPOP tests,12.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,811.0,56.0,-15.872476851851852,247.0,0.936997860552348,164.0,None,False,,
60a9418ed9adaff7844113b89fd4a4c01100f0b9,c6bf20c2a7423f464210dd19dd59073a6bb846a2,Matt Stancliff,matt@genges.com,Wed Nov 26 13:42:10 2014 -0500,1417027330,"Add adaptive quicklist fill factorFill factor now has two options:n  - negative (1-5) for size-based ziplist fillingn  - positive for length-based ziplist filling with implicit size cap.nnNegative offsets define ziplist size limits of:n  -1: 4kn  -2: 8kn  -3: 16kn  -4: 32kn  -5: 64knnPositive offsets now automatically limit their max size to 8k.  Anynelements larger than 8k will be in individual nodes.nnPositive ziplist fill factors will keep adding elementsnto a ziplist until one of:n  - ziplist has FILL number of elementsn- or -n  - ziplist grows above our ziplist max size (currently 8k)nnWhen using positive fill factors, if you insert a largenelement (over 8k), that element will automatically allocatenan individual quicklist node with one element and no other elements will benin the same ziplist inside that quicklist node.nnWhen using negative fill factors, elements up to the sizenlimit can be added to one quicklist node.  If an elementnis added larger than the max ziplist size, that elementnwill be allocated an individual ziplist in a new quicklist node.nnTests also updated to start testing at fill factor -5.n",173.0,74.0,"src/quicklist.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER",2.0,1.0,1.0,0.43335401849215177,13.0,1119.0,3.0,8.965410879629632,248.5,1.1288667133765349,166.0,Feature Addition,False,True,"[""5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f""]"
c6bf20c2a7423f464210dd19dd59073a6bb846a2,e1619772dbac6567462db4fac524e8df7e2556da,Matt Stancliff,matt@genges.com,Wed Dec 10 15:40:34 2014 -0500,1418244034,Add sdsnative()Use the existing memory space for an SDS to convert it to a regularncharacter buffer so we don't need to allocate duplicate space justnto extract a usable buffer for native operations.n,12.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,13.0,608.5,80.0,27.73723379629629,250.5,1.027039466354433,168.0,Feature Addition,False,,
e1619772dbac6567462db4fac524e8df7e2556da,127c15e2b2429c602797e56d8f7e1fdec312c68f,Matt Stancliff,matt@genges.com,Wed Dec 10 15:46:24 2014 -0500,1418244384,"Convert RDB ziplist loading to sdsnative()This saves us an unnecessary zmalloc, memcpy, and two frees.n",3.0,7.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1490.0,130.0,27.06570601851852,252.0,1.0369471241325017,169.0,None,False,,
127c15e2b2429c602797e56d8f7e1fdec312c68f,101b3a6e42e84e5cb423ef413225d8b8d8cc0bbc,Matt Stancliff,matt@genges.com,Wed Dec 10 13:53:12 2014 -0500,1418237592,"Convert quicklist RDB to store ziplist nodesTurns out it's a huge improvement during save/reload/migrate/restorenbecause, with compression enabled, we're compressing 4k or 8knchunks of data consisting of multiple elements in one ziplistninstead of compressing series of smaller individual elements.n",24.0,15.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.6789538995185759,13.0,800.5,145.0,28.683530092592587,253.5,-5.351708225185981,171.0,None,False,True,"[""a1944c3e4d2fb2b5aef7c6c3efc769ef2edd71ee""]"
101b3a6e42e84e5cb423ef413225d8b8d8cc0bbc,e0d94a7b017a6600332e94e95799d8af9bda1210,Matt Stancliff,matt@genges.com,Wed Dec 10 16:08:54 2014 -0500,1418245734,"Increase test size for migrating large valuesPreviously, the old test ran 5,000 loops and used about 500k.nnWith quicklist, storing those same 5,000 loops takes up 24k, so thenlarge value check failed!nnThis increases the test to 20,000 loops which makes the object dump 96k.n",2.0,2.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,220.0,10.0,202.30042824074073,255.0,1.0049431432681395,39.0,Corrective,True,,
e0d94a7b017a6600332e94e95799d8af9bda1210,8d7021892ec79bfea3628bcc2999512d9a757a21,Matt Stancliff,matt@genges.com,Wed Dec 10 20:37:15 2014 -0500,1418261835,Remove malloc failure checksWe trust zmalloc to kill the whole process on memory failuren,8.0,32.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2217.0,3.0,14.288252314814816,256.0,1.0699875658664808,172.0,Corrective,True,,
8d7021892ec79bfea3628bcc2999512d9a757a21,5127e3998058983351b6c0b94d1341f9d646c9cc,Matt Stancliff,matt@genges.com,Wed Dec 10 22:54:19 2014 -0500,1418270059,Add quicklist info to DEBUG OBJECTAdded field 'ql_nodes' and 'ql_avg_per_node'.nnql_nodes is the number of quicklist nodes in the quicklist.nql_avg_node is the average fill level in each quicklist node. (LLEN / QL_NODES)nnSample output:n127.0.0.1:6379> DEBUG object bnValue at:0x7fa42bf2fed0 refcount:1 encoding:quicklist serializedlength:18489 lru:8983768 lru_seconds_idle:3 ql_nodes:430 ql_avg_per_node:511.73n127.0.0.1:6379> llen bn(integer) 220044n,14.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,984.0,88.0,24.40869212962963,257.0,1.0409690119687365,173.0,Corrective,True,True,"[""9e11d07909086999d54181466eafecab44a0dbe3""]"
5127e3998058983351b6c0b94d1341f9d646c9cc,abdd1414a896c407c23a8f4165cfd6f027cf2b60,Matt Stancliff,matt@genges.com,Wed Dec 10 21:26:31 2014 -0500,1418264791,"Allow compression of interior quicklist nodesLet user set how many nodes to *not* compress.nnWe can specify a compression depth of how many nodesnto leave uncompressed on each end of the quicklist.nnDepth 0 = disable compression.nDepth 1 = only leave head/tail uncompressed.n  - (read as: skip 1 node on each end of the list before compressing)nDepth 2 = leave head, head->next, tail->prev, tail uncompressed.n  - (skip 2 nodes on each end of the list before compressing)nDepth 3 = Depth 2 + head->next->next + tail->prev->prevn  - (skip 3 nodes...)netc.nnThis also:n  - updates RDB storage to use native quicklist compression (if node isnalready compressed) instead of uncompressing, generating the RDB string,nthen re-compressing the quicklist node.n  - internalizes the fill parameter for the quicklist so we don'tnneed to pass it to _every_ function.  Now it's just a property ofnthe list.n  - allows a runtime-configurable compression option, so we cannexpose a compresion parameter in the configuration file if peoplenwant to trade slight request-per-second performance for up to 90%+nmemory savings in some situations.n  - updates the quicklist tests to do multiple passes: 200k+ tests now.n",1388.0,899.0,"src/debug.c,CAS_DELIMITER,src/quicklist.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",5.0,1.0,1.0,0.4592063340023425,13.0,1151.6,288.0,8.38248148148148,260.0,-9.721779826869817,178.0,None,False,True,"[""5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f"", ""f704360462640a88975eeb68fd80617921d7c97d"", ""552e5908bb0dc7e9c7db20db20315e961612db33"", ""7f1bb22ef3f77c940e6331512eeaddfdd1703be3"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""297950e8b817dbf3f2dbbbff497fdf3a047cc8f2""]"
abdd1414a896c407c23a8f4165cfd6f027cf2b60,5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f,Matt Stancliff,matt@genges.com,Mon Dec 29 23:37:43 2014 -0500,1419914263,Cleanup quicklist styleSmall fixes due to a new version of clang-format (it's lessncrazy than the older version).n,13.0,13.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2619.0,5.0,19.091111111111108,263.0,1.0523803980910256,179.0,Corrective,True,,
5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f,bbbbfb14422ee84e4b79330f299ddacf9be23d88,Matt Stancliff,matt@genges.com,Tue Dec 16 00:11:21 2014 -0500,1418706681,Add branch prediction hints to quicklistActually makes a noticeable difference.nnBranch hints were selected based on profiler hotspots.n,21.0,10.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2619.0,6.0,-13.976643518518514,264.0,0.9284520637107874,180.0,Feature Addition,False,,
bbbbfb14422ee84e4b79330f299ddacf9be23d88,02bb515a094c081fcbc3e33c60a5dbff440eb447,Matt Stancliff,matt@genges.com,Tue Dec 16 00:49:14 2014 -0500,1418708954,"Config: Add quicklist, remove old list optionsThis removes:n  - list-max-ziplist-entriesn  - list-max-ziplist-valuennThis adds:n  - list-max-ziplist-sizen  - list-compress-depthnnAlso updates config file with new sections and updatesntests to use quicklist settings instead of old list settings.n",72.0,41.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/unit/sort.tcl,CAS_DELIMITER,tests/unit/type/list-2.tcl,CAS_DELIMITER,tests/unit/type/list-3.tcl,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",10.0,3.0,4.0,2.73634787978863,13.0,1192.9,1599.0,40.02589004629629,269.5,1.0106405463413322,43.0,None,False,,
02bb515a094c081fcbc3e33c60a5dbff440eb447,9e11d07909086999d54181466eafecab44a0dbe3,Matt Stancliff,matt@genges.com,Fri Dec 19 10:41:52 2014 -0500,1419003712,"Add more quicklist info to DEBUG OBJECTAdds: ql_compressed (boolean, 1 if compression enabled for list, 0notherwise)nAdds: ql_uncompressed_size (actual uncompressed size of all quicklistNodes)nAdds: ql_ziplist_max (quicklist max ziplist fill factor)nnCompression ratio of the list is then ql_uncompressed_size / serializedlengthnnWe report ql_uncompressed_size for all quicklists because serializedlengthnis a _compressed_ representation anyway.nnSample output from a large list:n127.0.0.1:6379> llen abcn(integer) 38370061n127.0.0.1:6379> debug object abcnValue at:0x7ff97b51d140 refcount:1 encoding:quicklist serializedlength:19878335 lru:9718164 lru_seconds_idle:5 ql_nodes:21945 ql_avg_node:1748.46 ql_ziplist_max:-2 ql_compressed:0 ql_uncompressed_size:1643187761n(1.36s)nnThe 1.36s result time is because rdbSavedObjectLen() is serializing thenobject, not because of any new stats reporting.nnIf we run DEBUG OBJECT on a compressed list, DEBUG OBJECT takes almost *zero*ntime because rdbSavedObjectLen() reuses already-compressed ziplists:n127.0.0.1:6379> debug object abcnValue at:0x7fe5c5800040 refcount:1 encoding:quicklist serializedlength:19878335 lru:9718109 lru_seconds_idle:5 ql_nodes:21945 ql_avg_node:1748.46 ql_ziplist_max:-2 ql_compressed:1 ql_uncompressed_size:1643187761n",23.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,996.0,90.0,8.552326388888886,275.0,1.1169272493270594,186.0,Corrective,True,,
9e11d07909086999d54181466eafecab44a0dbe3,25e12d10bebfa38ce864956c0498b432c17eccdd,Matt Stancliff,matt@genges.com,Fri Dec 19 21:26:04 2014 -0500,1419042364,Set optional 'static' for Quicklist+RedisThis also defines REDIS_STATIC='' for building everythingninside src/ and everything inside deps/lua/.n,42.0,33.0,"deps/Makefile,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/quicklist.c,CAS_DELIMITER",3.0,2.0,2.0,0.3537247506981153,13.0,991.0,129.0,99.83018904320987,277.0,1.003526124316702,188.0,None,False,,
25e12d10bebfa38ce864956c0498b432c17eccdd,5870e22423e069452e9f858b80ac40bfc455bfe6,Matt Stancliff,matt@genges.com,Tue Dec 23 10:10:42 2014 -0500,1419347442,Upgrade LZF to 3.6 (2011) from 3.5 (2009)This is lzf_c and lzf_d fromnhttp://dist.schmorp.de/liblzf/liblzf-3.6.tar.gzn,107.0,50.0,"src/lzfP.h,CAS_DELIMITER,src/lzf_c.c,CAS_DELIMITER,src/lzf_d.c,CAS_DELIMITER",3.0,1.0,1.0,1.5700019762528856,13.0,201.3333333333333,7.0,179.93196759259254,280.0,1.0033963454036965,191.0,None,False,True,"[""e1222d8b10552cda6f6fdf1178a2ca25ad77894b""]"
9e718a1f57a18d685fc63cff9ffdeef3af734969,04607b53500f71498a502ffcfc41a82792013e2b,Jan-Erik Rediger,janerik@fnordig.de,Wed Jan 7 22:31:45 2015 +0100,1420666305,Check that the whole first argument is a numberFixes #2258n,3.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2034.0,127.0,52.14302083333333,23.0,1.0191780219868032,13.0,Corrective,True,,
9e718a1f57a18d685fc63cff9ffdeef3af734969 5870e22423e069452e9f858b80ac40bfc455bfe6,05ba119fbb9b0e05b7cca83bee8b01041e8877f2,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 8 09:51:55 2015 +0100,1420707115,Merge pull request #2143 from mattsta/quicklistQuicklist (linked list + ziplist),,,,,,,,,,,,,,,Merge,False,,
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,68bc02c36c00fa0e1601a76c38c89a5d47a80105,antirez,antirez@gmail.com,Tue Dec 23 19:26:34 2014 +0100,1419359194,RDB refactored to load plain strings from RDB.,73.0,21.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1508.0,134.0,7.525925925925926,7771.0,1.1328740157480317,3598.0,None,False,True,"[""5e3880a492efd6c305d7bde5be44c1de72e15cb0"", ""f86df924b01db43eb68f5c4b4cac4c44c1507390"", ""781f3fd8be048773d5a0052150df478db8d0979e""]"
68bc02c36c00fa0e1601a76c38c89a5d47a80105,f699b5e8019e264898048bac64282f57c5b7583e,antirez,antirez@gmail.com,Wed Jan 7 10:20:55 2015 +0100,1420622455,"Use RDB_LOAD_PLAIN to load quicklists and encoded types.Before we needed to create a string object with an embedded SDS, adnnbasically duplicate the SDS part into a plain zmalloc() allocation.n",5.0,9.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1560.0,135.0,14.621076388888893,7772.0,1.0683944173056874,3599.0,Feature Addition,False,,
f699b5e8019e264898048bac64282f57c5b7583e,32b10004e28ff6def8c310bbb264b70958460159,antirez,antirez@gmail.com,Wed Jan 7 10:25:31 2015 +0100,1420622731,sdsnative() removed: New rdb.c API can load native strings.,0.0,12.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,13.0,614.5,82.0,27.531215277777786,7773.5,1.027241805072273,3601.0,None,False,,
32b10004e28ff6def8c310bbb264b70958460159,e8614a1a77d2989f7be3cb7b24cd88b01f14f17e,antirez,antirez@gmail.com,Wed Jan 7 11:08:41 2015 +0100,1420625321,"New RDB v7 opcode: RESIZEDB.The new opcode is an hint about the size of the dataset (keys and numbernof expires) we are going to load for a given Redis database inside thenRDB file. Since hash tables are resized accordingly ASAP, uselessnrehashing is avoided, speeding up load times significantly, in the ordernof ~ 20% or more for larger data sets.nnRelated issue: #1719n",26.0,1.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.2285381439535281,13.0,837.0,151.0,13.834461805555556,7775.5,16.091343669158434,3603.0,Feature Addition,False,True,"[""7ba90225a07192219d526b2a347735ccb7c7a3e1""]"
e8614a1a77d2989f7be3cb7b24cd88b01f14f17e,1a30e7ded14f4cb2ea39e05d1b1e1fd0b4d20ad6,antirez,antirez@gmail.com,Wed Jan 7 15:25:58 2015 +0100,1420640758,rdbLoad() refactoring to make it simpler to follow.,20.0,11.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1580.0,137.0,0.17866898148148147,7777.0,6.596942411090237,3604.0,None,False,,
1a30e7ded14f4cb2ea39e05d1b1e1fd0b4d20ad6,206cd219b63c2255c0238cb9c602b65f05e98120,antirez,antirez@gmail.com,Thu Jan 8 08:56:35 2015 +0100,1420703795,"RDB AUX fields support.This commit introduces a new RDB data type called 'aux'. It is used innorder to insert inside an RDB file key-value pairs that may servendifferent needs, without breaking backward compatibility when newninformations are embedded inside an RDB file. The contract between Redisnversions is to ignore unknown aux fields when encountered.nnAux fields can be used in order to:nn1. Augment the RDB file with info like version of Redis that created thenRDB file, creation time, used memory while the RDB was created, and sonforth.n2. Add state about Redis inside the RDB file that we need to reloadnlater: replication offset, previos master run ID, in order to improvenfailovers safety and allow partial resynchronization after a slavenrestart.n3. Anything that we may want to add to RDB files without breaking thenability of past versions of Redis to load the file.n",55.0,0.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.13110652958234506,13.0,854.0,154.0,0.8189293981481481,7778.5,1.9905884226111463,3606.0,Feature Addition,False,True,"[""92cfab44b240750d957ae226efac7235c7ef655b"", ""60a4f12f8b998c44dfff0e88202b01598287390d""]"
206cd219b63c2255c0238cb9c602b65f05e98120,4c0e8923a6cb376c7b2a53fa76ae95f74610285c,antirez,antirez@gmail.com,Thu Jan 8 09:08:55 2015 +0100,1420704535,A few more AUX info fields added to RDB.,5.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1643.0,139.0,0.008564814814814815,7780.0,117.75675675675676,3607.0,Feature Addition,False,True,"[""a7722dc31b3a10c6b6bd0fb388f5cbc424d35f33""]"
4c0e8923a6cb376c7b2a53fa76ae95f74610285c,a7722dc31b3a10c6b6bd0fb388f5cbc424d35f33,antirez,antirez@gmail.com,Thu Jan 8 12:06:17 2015 +0100,1420715177,Typo fixed: fiels -> fields in rdbSaveInfoAuxFields().Thx to @badboy.n,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1648.0,140.0,0.12317129629629628,7781.0,9.118774666416089,3608.0,Corrective,True,,
a7722dc31b3a10c6b6bd0fb388f5cbc424d35f33,42357668e8fb569c30ae37f990309f0593410973,antirez,antirez@gmail.com,Thu Jan 8 14:41:26 2015 +0100,1420724486,Advertise Redis Cluster as experimental in redis.conf.,6.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,957.0,151.0,23.32791666666667,7782.0,1.0428670941468554,1356.0,None,False,,
a7722dc31b3a10c6b6bd0fb388f5cbc424d35f33,219ab66cc8f6b348d8c67b65f99d129604a05d0a,Jungtaek Lim,kabhwan@gmail.com,Fri Jan 9 00:07:25 2015 +0900,1420729645,Explain make distclean which seems not well known,7.0,0.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,154.0,16.0,299.0580439814815,0.0,0.0,0.0,Perfective,False,,
a7722dc31b3a10c6b6bd0fb388f5cbc424d35f33 219ab66cc8f6b348d8c67b65f99d129604a05d0a,161ff775721c87b816b750d91a9a16fe26868007,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 8 16:29:29 2015 +0100,1420730969,Merge pull request #2262 from HeartSaVioR/explain-make-distcleanExplain make distclean which seems not well known,,,,,,,,,,,,,,,Merge,False,,
42357668e8fb569c30ae37f990309f0593410973 161ff775721c87b816b750d91a9a16fe26868007,b45e16e7ee07bdef4c2f6287d95a3c82d6c0867e,antirez,antirez@gmail.com,Thu Jan 8 16:30:04 2015 +0100,1420731004,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
b45e16e7ee07bdef4c2f6287d95a3c82d6c0867e,622c69e93db2b7b03bb3a547f6573654819cc29b,antirez,antirez@gmail.com,Thu Jan 8 16:35:05 2015 +0100,1420731305,README section about make distclean reworded / extended.,17.0,5.0,"README,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,161.0,17.0,0.019212962962962963,7783.0,53.048192771084345,1357.0,Perfective,False,,
622c69e93db2b7b03bb3a547f6573654819cc29b,1c477f62bc34cc6c5ea42f48aac40148cd778441,Matt Stancliff,matt@genges.com,Thu Jan 8 13:28:35 2015 -0500,1420741715,Fix redis-trib cluster createUnder certain conditions the node list wasn't being fully populatednand 'create' would fail trying to call methods on nil objects.n,11.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1364.0,101.0,19.64984953703704,282.0,1.0508909749214694,192.0,Corrective,True,,
1c477f62bc34cc6c5ea42f48aac40148cd778441,bf58f8b513b95134e6122f97884046afe41de7d4,Matt Stancliff,matt@genges.com,Thu Jan 8 13:31:03 2015 -0500,1420741863,Remove end of line whitespace from redis-trib,6.0,6.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1373.0,102.0,0.001712962962962963,283.0,584.7837837837837,193.0,None,False,,
622c69e93db2b7b03bb3a547f6573654819cc29b bf58f8b513b95134e6122f97884046afe41de7d4,1019c72930c7d82aac91f4570736de35cc46f29f,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 8 19:43:14 2015 +0100,1420742594,Merge pull request #2265 from mattsta/fix/trib/createFix redis-trib creation failure,,,,,,,,,,,,,,,Merge,False,,
1019c72930c7d82aac91f4570736de35cc46f29f,da95d22ad2e8c3232fd34a2c09c30fe74d71532a,antirez,antirez@gmail.com,Fri Jan 9 10:39:05 2015 +0100,1420796345,Prevent Lua scripts from violating Redis Cluster keyspace access rules.Before this commit scripts were able to access / create keys outside thenset of hash slots served by the local node.n,18.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1164.0,102.0,279.7531134259259,7784.0,1.003574580413972,3609.0,Feature Addition,False,True,"[""e85d6f22cf2ddb2a4a5de80b211802bdacbf4a3b""]"
da95d22ad2e8c3232fd34a2c09c30fe74d71532a,f3fd58eb4a0b2a2b5966e48c6b70c344f3bc248e,antirez,antirez@gmail.com,Fri Jan 9 11:06:38 2015 +0100,1420797998,Cluster test: also write from Lua script in resharding test.,13.0,2.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER,tests/support/cluster.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.5665095065529053,11.0,198.0,11.0,166.60088541666667,7785.5,1.0068723649425324,596.0,Preventative,False,,
f3fd58eb4a0b2a2b5966e48c6b70c344f3bc248e,792a94153a44014b52655d4c1af0f298dc9dc9b1,antirez,antirez@gmail.com,Fri Jan 9 11:22:14 2015 +0100,1420798934,"Check for __sun macro in solarisfixes.h, not in includers.",4.0,5.0,"src/redis.h,CAS_DELIMITER,src/sha1.c,CAS_DELIMITER,src/solarisfixes.h,CAS_DELIMITER",3.0,1.0,1.0,1.5304930567574826,13.0,600.3333333333334,483.0,291.06785493827164,7788.0,1.0182518813635577,3612.0,Corrective,True,,
792a94153a44014b52655d4c1af0f298dc9dc9b1,0d22121c276873152668472735d7312c591b6a74,antirez,antirez@gmail.com,Fri Jan 9 11:53:47 2015 +0100,1420800827,"Add -lrt in Makefile for Solaris.This fix is from @NanXiao, however I was not able to retain authorshipnbecause the Pull Request original repository was removed.n",1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,260.0,117.0,20.35258101851852,7790.0,1.0491338174303355,3613.0,Corrective,True,,
0d22121c276873152668472735d7312c591b6a74,e6d499a446e1d34ceb9b393ddd79d38877aede67,rebx,rebs.guarina@gmail.com,Wed Apr 18 11:04:37 2012 +1200,1334703877,"Create PID file even if in foregroundPreviously, Redis only wrote the pid file ifnit was daemonizing, but many times it's useful to haventhe pid written out even if you're in the foreground.nnSome background for this is:nI usually run redis via daemontools. That entails runningnredis-server on the foreground. Given that, I'd also wantnredis-server to create a pidfile so other processes (e.g. nagios)ncan run checks for that.nnCloses #463n",4.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3808.0,555.0,-972.2809837962964,0.0,0.0,0.0,Feature Addition,False,True,"[""36a3b75355bd5aea9e34889918c5b78fb79586e4""]"
e6d499a446e1d34ceb9b393ddd79d38877aede67,5e8b7e4f356c2908bb3389e2df09473e290acae8,Matt Stancliff,matt@genges.com,Mon Aug 25 17:07:37 2014 -0400,1409000857,Define default pidfile when creating pidWe want pidfile to be NULL on startup so we can detect if the usernset an explicit value versus only using the default value.nnCloses #1967nFixes #2076n,5.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3809.0,556.0,859.91875,284.0,1.0011629005647336,194.0,Corrective,True,,
5e8b7e4f356c2908bb3389e2df09473e290acae8,36a3b75355bd5aea9e34889918c5b78fb79586e4,Matt Stancliff,matt@genges.com,Thu Jan 8 15:22:33 2015 -0500,1420748553,"Supervise redis processes only if configuredAdds configuration option 'supervised [no | upstart | systemd | auto]'nnAlso removed 'bzero' from the previous implementation because it's 2015.n(We could actually statically initialize those structs, but clangnthrows an invalid warning when we try, so it looks bad even though itnisn't bad.)nnFixes #2264n",119.0,23.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.561289035153432,13.0,2056.25,1342.0,39.81765335648149,286.5,1.911094889863472,197.0,Corrective,True,,
36a3b75355bd5aea9e34889918c5b78fb79586e4,eb7d67a3ab1e9a41e406f582676526194575f958,Matt Stancliff,matt@genges.com,Thu Jan 8 16:23:48 2015 -0500,1420752228,Remove RDB AUX memory leaks,2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1648.0,141.0,0.4288310185185185,289.0,3.3319208658335806,198.0,None,False,,
0d22121c276873152668472735d7312c591b6a74,6741bb981c53eb6b168e6ff96d915a0d51e0c7cd,Matt Stancliff,matt@genges.com,Fri Jan 9 17:00:43 2015 -0500,1420840843,Improve consistency of INFO MEMORY fieldsAdds used_memory_rss_human and used_memory_lua_human to matchnall the other fields reporting human-readable memory too.n,10.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3842.0,558.0,1.0681712962962964,290.0,1.936179434391592,199.0,Feature Addition,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
6741bb981c53eb6b168e6ff96d915a0d51e0c7cd,5a685f35a9e09cba3b08640912aed93acbc63351,Matt Stancliff,matt@genges.com,Fri Jan 9 17:01:05 2015 -0500,1420840865,"Add maxmemory limit to INFO MEMORYSince we have the eviction policy, we should have the memory limit too.n",10.0,4.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3851.0,559.0,0.0002546296296296296,291.0,3928.2727272727284,200.0,Feature Addition,False,,
0d22121c276873152668472735d7312c591b6a74,6274a6789deaeea35951e5409e94e4ff77de645a,antirez,antirez@gmail.com,Mon Jan 12 15:40:30 2015 +0100,1421073630,"Cluster: initialize mf_end.Can't be initialized by resetManualFailover() since it's actual statenthe function uses, so we need to initialize it at startup time. Notnreally a bug in practical terms, but showed up into valgrind and is notntechnically correct anyway.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4720.0,424.0,56.85875,7791.0,1.017587442566008,3614.0,None,False,,
0d22121c276873152668472735d7312c591b6a74 eb7d67a3ab1e9a41e406f582676526194575f958,e6416ca71cd7c55d8cddd0e1596fd989e24988d9,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 12 15:56:36 2015 +0100,1421074596,"Merge pull request #2266 from mattsta/improve/supervised/startupThree fixes: explicit supervise, pidfile create, remove memory leaks.",,,,,,,,,,,,,,,Merge,False,,
6274a6789deaeea35951e5409e94e4ff77de645a e6416ca71cd7c55d8cddd0e1596fd989e24988d9,10007cb78cff130d294465e64bec84c55ff0719f,antirez,antirez@gmail.com,Mon Jan 12 15:56:46 2015 +0100,1421074606,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
10007cb78cff130d294465e64bec84c55ff0719f,2c925b0c302ad8612cc4ac6261549482d3c69846,antirez,antirez@gmail.com,Mon Jan 12 15:57:50 2015 +0100,1421074670,Use REDIS_SUPERVISED_NONE instead of 0.,2.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1017.0,91.0,23.969421296296296,7792.0,1.0417198224203486,3615.0,None,False,,
2c925b0c302ad8612cc4ac6261549482d3c69846,f08586347d506dfec4ea74719d6bf637e88a3b1c,antirez,antirez@gmail.com,Mon Jan 12 15:58:23 2015 +0100,1421074703,Revert Use REDIS_SUPERVISED_NONE instead of 0.This reverts commit 2c925b0c302ad8612cc4ac6261549482d3c69846.nnNevermind.n,1.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1018.0,92.0,0.00038194444444444446,7793.0,2619.181818181818,3616.0,None,False,,
f08586347d506dfec4ea74719d6bf637e88a3b1c,237ab727b9b3ae025ef589bb5455443033f79bda,antirez,antirez@gmail.com,Tue Jan 13 09:31:37 2015 +0100,1421137897,"Suppress valgrind error about write sending uninitialized data.Valgrind checks that the buffers we transfer via syscalls are allncomposed of bytes actually initialized. This is useful, it makes we ablento avoid leaking informations in non initialized parts fo messagesntransferred to other hosts. This commit fixes one of such issues.n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4721.0,425.0,0.7438310185185185,7794.0,2.3443913672646923,3617.0,Corrective,True,,
237ab727b9b3ae025ef589bb5455443033f79bda,5b0f4a83ace5d44289bfc0186449611187f081f2,antirez,antirez@gmail.com,Tue Jan 13 10:20:49 2015 +0100,1421140849,"Cluster: clusterMsgDataGossip structure, explict padding + minor stuff.Also explicitly set version to 0, add a protocol version define, improvencomments in the gossip structure.nnNote that the structure layout is the same after the change, we are justnmaking the padding explicit with an additional not used 16 bits field.nSo this commit is still able to talk with the previous versions ofncluster nodes.n",10.0,6.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,1.2987949406953985,13.0,2166.0,931.0,16.86230709876543,7796.0,10.769925945033467,3620.0,None,False,,
5b0f4a83ace5d44289bfc0186449611187f081f2,cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,antirez,antirez@gmail.com,Tue Jan 13 10:48:49 2015 +0100,1421142529,"Cluster: fetch my IP even if msg is not MEET for the first time.In order to avoid that misconfigured cluster nodes at some time maynforce an IP update on other nodes, it is required that nodes updatentheir own address only on MEET messages. However it does not make sensento do this the first time a node is contacted and yet does not have annIP, we just risk that myself->ip remains not assigned if there arenmessages lost or cluster creation procedures that don't make sureneverybody is targeted by at least one incoming MEET message.nnAlso fix the logging of the IP switch avoiding the :-1 tail.n",7.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4724.0,427.0,0.019444444444444445,7798.0,52.42857142857143,3621.0,None,False,,
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,3447062d5e02cf14fd3d7765fa39a65de15f8c15,Chris Lamb,chris@chris-lamb.co.uk,Fri Jan 16 09:03:00 2015 +0000,1421398980,"Make some defaults explicit in the sentinel.conf for package maintainersThis may look a little pointless (and it is a complete no-op change here)nbut as package maintainers need to modify these lines to actuallyndaemonize (etc. etc) but it's far preferable if the diff is restricted tonactually changing just that bit, not adding docs, etc. The less diff thenbetter, in general.nnSigned-off-by: Chris Lamb <chris@chris-lamb.co.uk>n",25.0,0.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,181.0,20.0,248.98766203703704,2.0,1.0040162632630818,0.0,Feature Addition,False,,
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,f704360462640a88975eeb68fd80617921d7c97d,Matt Stancliff,matt@genges.com,Sun Jan 18 15:54:30 2015 -0500,1421614470,"Improve RDB type correctnessIt's possible large objects could be larger than 'int', so let'snupgrade all size counters to ssize_t.nnThis also fixes rdbSaveObject serialized bytes calculation.nSince entire serializations of data structures can be large,nso we don't want to limit their calculated size to a 32 bit signed max.nnThis commit increases object size calculation andncascades the change back up to serializedlength printing.nnBefore:n127.0.0.1:6379> debug object hihihin... encoding:quicklist serializedlength:-2147483559 ...nnAfter:n127.0.0.1:6379> debug object hihihin... encoding:quicklist serializedlength:2147483737 ...n",17.0,18.0,"src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",3.0,1.0,1.0,1.077252355627675,13.0,928.3333333333336,252.0,8.922391975308642,293.0,1.0863513696787337,203.0,Corrective,True,,
f704360462640a88975eeb68fd80617921d7c97d,53c082ec39fb4daafba09e416279265f20d46006,Matt Stancliff,matt@genges.com,Sun Jan 18 16:46:25 2015 -0500,1421617585,"Improve networking type correctnessread() and write() return ssize_t (signed long), not int.nnFor other offsets, we can use the unsigned size_t type insteadnof a signed offset (since our replication offsets and buffernpositions are never negative).n",13.0,12.0,"src/anet.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,2.1306993328423074,13.0,1888.2,1213.0,33.308067129629634,297.0,1.014131118912307,208.0,None,False,True,"[""47ab570441f8012fb9aa6a0b38606bc9462e2bd3""]"
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,839767ad0b304c5e3c18727b146a17356d1a5e7c,antirez,antirez@gmail.com,Tue Jan 20 18:01:28 2015 +0100,1421773288,Panic on recursive calls to luaRedisGenericCommand().Related to issue #2302.n,14.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1181.0,103.0,11.307210648148148,7799.0,1.0884391412805046,3622.0,None,False,,
839767ad0b304c5e3c18727b146a17356d1a5e7c,bc8675612f50399568c1686ae0ee0d8d0b925254,antirez,antirez@gmail.com,Tue Jan 20 23:13:47 2015 +0100,1421792027,luaRedisGenericCommand() recursion: just return an error.Instead of calling redisPanic() to abort the server.nnRelated to issue #2302.n,3.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1195.0,104.0,0.21688657407407408,7800.0,5.610704946902184,3623.0,None,False,,
bc8675612f50399568c1686ae0ee0d8d0b925254,e467cf5db31322868b8a374e57a74e9ed7150c78,antirez,antirez@gmail.com,Tue Jan 20 23:20:12 2015 +0100,1421792412,"luaRedisGenericCommand(): log error at WARNING level when re-entered.Rationale is that when re-entering, it is likely due to Lua debuggingnhooks. Returning an error will be ignored in most cases, going totallynunnoticed. With the log at least we leave a trace.nnRelated to issue #2302.n",5.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1197.0,105.0,0.004456018518518519,7801.0,225.41558441558442,3624.0,None,False,,
e467cf5db31322868b8a374e57a74e9ed7150c78,92cfab44b240750d957ae226efac7235c7ef655b,antirez,antirez@gmail.com,Wed Jan 21 14:51:42 2015 +0100,1421848302,Fix gcc warning for lack of casting to char pointer.,4.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1648.0,143.0,2.7063888888888887,7802.0,1.3694960484450376,3625.0,Corrective,True,,
92cfab44b240750d957ae226efac7235c7ef655b,b0146aafebd76e89638fe6b13947d0a53f5c7b27,Matt Stancliff,matt@genges.com,Fri Jan 9 17:43:48 2015 -0500,1420843428,Tell sentinel/cluster tests to allow valgrind,17.0,2.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,407.0,7.0,162.17916666666667,300.0,1.0061660200909488,44.0,Preventative,False,,
b0146aafebd76e89638fe6b13947d0a53f5c7b27,491d57abaae7ddb9f32951acc3c38e27f3638b90,Matt Stancliff,matt@genges.com,Tue Jan 13 11:15:30 2015 -0500,1421165730,Add --track-origins=yes to valgrind,3.0,3.0,"tests/instances.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,13.0,372.0,50.0,24.978391203703705,301.5,1.1440444311028792,46.0,Feature Addition,False,,
491d57abaae7ddb9f32951acc3c38e27f3638b90,59ad6ac5feac4f6760144861b723a51383a0f19b,antirez,antirez@gmail.com,Wed Jan 21 15:55:53 2015 +0100,1421852153,Cluster: set the slaves->slaveof filed to NULL when master is freed.Related to issue #2289.n,8.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4726.0,429.0,2.7149074074074075,7803.0,1.3683366870161318,3626.0,None,False,,
59ad6ac5feac4f6760144861b723a51383a0f19b,2601e3e4614800552a3ff5c91b4ac475a664df5a,antirez,antirez@gmail.com,Wed Jan 21 16:03:43 2015 +0100,1421852623,Cluster: node deletion cleanup / centralization.,20.0,13.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4734.0,430.0,0.005439814814814815,7804.0,184.82978723404256,3627.0,None,False,,
2601e3e4614800552a3ff5c91b4ac475a664df5a,a5bb0a0774fbe89d72de13624b23079031674932,antirez,antirez@gmail.com,Wed Jan 21 16:13:30 2015 +0100,1421853210,Cluster/Sentinel test: pause on exceptions as well.,1.0,0.0,"tests/cluster/run.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,26.0,6.0,173.86645833333333,7805.0,1.0057515406340354,597.0,Preventative,False,,
a5bb0a0774fbe89d72de13624b23079031674932,b3bf7584b0aa5c2dbc1acf4d7f6b2c3d420e8e42,antirez,antirez@gmail.com,Wed Jan 21 16:18:34 2015 +0100,1421853514,Cluster/Sentinel test: also pause on abort_sentinel_test call.,1.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,422.0,9.0,7.960462962962962,7806.0,1.1256208344480243,598.0,Preventative,False,,
b0146aafebd76e89638fe6b13947d0a53f5c7b27,4433f5a7f24350cb398ae448fca691a53a51a155,antirez,antirez@gmail.com,Wed Jan 21 16:39:38 2015 +0100,1421854778,"AOF rewrite: set iterator var to NULL when freed.The cleanup code expects that if 'di' is not NULL, it is a validniterator that should be freed.nnThe result of this bug was a crash of the AOF rewriting process if annerror occurred after the DBs data are written and the iterator is nonlonger valid.n",1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1481.0,131.0,68.8526736111111,7807.0,1.014523764257117,3628.0,None,False,,
b3bf7584b0aa5c2dbc1acf4d7f6b2c3d420e8e42,acb1d8debf23f3dbd9199d1276a86ada71750196,antirez,antirez@gmail.com,Wed Jan 21 16:46:51 2015 +0100,1421855211,Cluster test: wait for port to unbound in kill_instance.Otherwise kill_instance + restart_instance in short succession willnstill find the port busy and will fail.n,16.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,423.0,10.0,0.019641203703703702,7808.0,51.91337654684738,599.0,Preventative,False,,
acb1d8debf23f3dbd9199d1276a86ada71750196,72b8574cca7480f8d4a318727c6dacad891733d6,Matt Stancliff,matt@genges.com,Wed Jan 14 11:21:50 2015 -0500,1421252510,"Fix sending uninitialized bytesFixes valgrind error:nSyscall param write(buf) points to uninitialised byte(s)n   at 0x514C35D: ??? (syscall-template.S:81)n   by 0x456B81: clusterWriteHandler (cluster.c:1907)n   by 0x41D596: aeProcessEvents (ae.c:416)n   by 0x41D8EA: aeMain (ae.c:455)n   by 0x41A84B: main (redis.c:3832)n Address 0x5f268e2 is 2,274 bytes inside a block of size 8,192 alloc'dn   at 0x4932D1: je_realloc (jemalloc.c:1297)n   by 0x428185: zrealloc (zmalloc.c:162)n   by 0x4269E0: sdsMakeRoomFor.part.0 (sds.c:142)n   by 0x426CD7: sdscatlen (sds.c:251)n   by 0x4579E7: clusterSendMessage (cluster.c:1995)n   by 0x45805A: clusterSendPing (cluster.c:2140)n   by 0x45BB03: clusterCron (cluster.c:2944)n   by 0x423344: serverCron (redis.c:1239)n   by 0x41D6CD: aeProcessEvents (ae.c:311)n   by 0x41D8EA: aeMain (ae.c:455)n   by 0x41A84B: main (redis.c:3832)n Uninitialised value was created by a stack allocationn   at 0x457810: nodeUpdateAddressIfNeeded (cluster.c:1236)n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4741.0,431.0,-6.945752314814817,303.0,0.8560271148933618,209.0,Corrective,True,,
72b8574cca7480f8d4a318727c6dacad891733d6,30152554eab1d5fa3850ad6ad372aeb3dc1ebacf,Matt Stancliff,matt@genges.com,Wed Jan 14 11:31:17 2015 -0500,1421253077,Fix cluster reset memory leak[maybe] Fixes valgrind errors:n32 bytes in 4 blocks are definitely lost in loss record 107 of 228n   at 0x80EA447: je_malloc (jemalloc.c:944)n   by 0x806E59C: zrealloc (zmalloc.c:125)n   by 0x80A9AFC: clusterSetMaster (cluster.c:801)n   by 0x80AEDC9: clusterCommand (cluster.c:3994)n   by 0x80682A5: call (redis.c:2049)n   by 0x8068A20: processCommand (redis.c:2309)n   by 0x8076497: processInputBuffer (networking.c:1143)n   by 0x8073BAF: readQueryFromClient (networking.c:1208)n   by 0x8060E98: aeProcessEvents (ae.c:412)n   by 0x806123B: aeMain (ae.c:455)n   by 0x806C3DB: main (redis.c:3832)nn64 bytes in 8 blocks are definitely lost in loss record 143 of 228n   at 0x80EA447: je_malloc (jemalloc.c:944)n   by 0x806E59C: zrealloc (zmalloc.c:125)n   by 0x80AAB40: clusterProcessPacket (cluster.c:801)n   by 0x80A847F: clusterReadHandler (cluster.c:1975)n   by 0x30000FF: ???nn80 bytes in 10 blocks are definitely lost in loss record 148 of 228n   at 0x80EA447: je_malloc (jemalloc.c:944)n   by 0x806E59C: zrealloc (zmalloc.c:125)n   by 0x80AAB40: clusterProcessPacket (cluster.c:801)n   by 0x80A847F: clusterReadHandler (cluster.c:1975)n   by 0x2FFFFFF: ???n,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4741.0,432.0,0.0065625,304.0,153.38095238095238,210.0,Corrective,True,,
30152554eab1d5fa3850ad6ad372aeb3dc1ebacf,29049507ec34efd59ce6de7cff524fb44b47f934,Matt Stancliff,matt@genges.com,Wed Jan 14 11:10:25 2015 -0500,1421251825,"Fix potential invalid read past end of arrayIf array has N elements, we can't read +1 if we are already at N.nnAlso, we need to move elements by their storage size in the array,nnot just by individual bytes.n",5.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4742.0,433.0,-0.01449074074074074,305.0,-68.00958466453672,211.0,Corrective,True,,
29049507ec34efd59ce6de7cff524fb44b47f934,051a43e03a4db665b3bf6e8b45790298c86a96af,Matt Stancliff,matt@genges.com,Thu Jan 15 14:20:59 2015 -0500,1421349659,Fix cluster migrate memory leakFixes valgrind error:n48 bytes in 1 blocks are definitely lost in loss record 196 of 373n   at 0x4910D3: je_malloc (jemalloc.c:944)n   by 0x42807D: zmalloc (zmalloc.c:125)n   by 0x41FA0D: dictGetIterator (dict.c:543)n   by 0x41FA48: dictGetSafeIterator (dict.c:555)n   by 0x459B73: clusterHandleSlaveMigration (cluster.c:2776)n   by 0x45BF27: clusterCron (cluster.c:3123)n   by 0x423344: serverCron (redis.c:1239)n   by 0x41D6CD: aeProcessEvents (ae.c:311)n   by 0x41D8EA: aeMain (ae.c:455)n   by 0x41A84B: main (redis.c:3832)n,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4745.0,434.0,1.1323379629629629,306.0,1.8831285647116545,212.0,Corrective,True,,
051a43e03a4db665b3bf6e8b45790298c86a96af,7e79b3f51a06ced3c13a9b8fe756e322705d5ca9,antirez,antirez@gmail.com,Wed Jan 21 18:48:08 2015 +0100,1421862488,Cluster test initialization: use transaction for reset + set-config-epoch.Otherwise between the two commands other nodes may contact us making thennext SET-CONFIG-EPOCH call impossible.n,2.0,0.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,63.0,9.0,180.1464699074074,7809.0,1.0055510385549824,600.0,Feature Addition,False,,
4433f5a7f24350cb398ae448fca691a53a51a155 7e79b3f51a06ced3c13a9b8fe756e322705d5ca9,af8d1b4bda4e53607a6165dee67ff48419901a1c,antirez,antirez@gmail.com,Wed Jan 21 19:30:22 2015 +0100,1421865022,Merge branch 'clusterfixes' into unstable,,,,,,,,,,,,,,,Merge,False,,
af8d1b4bda4e53607a6165dee67ff48419901a1c,87301be15152bd3627c9e87533c2c96fa9d4fd67,antirez,antirez@gmail.com,Wed Jan 21 23:19:37 2015 +0100,1421878777,"getRandomHexChars(): use /dev/urandom just to seed.On Darwin /dev/urandom depletes terribly fast. This is not an issuennormally, but with Redis Cluster we generate a lot of unique IDs, fornexample during nodes handshakes. Our IDs need just to be unique withoutnother strong crypto requirements, so this commit turns the function intonsomething that gets a 20 bytes seed from /dev/urandom, and produces thenrest of the output just using SHA1 in counter mode.n",38.0,8.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,690.0,22.0,62.18019675925926,7810.0,1.0160822906989448,3629.0,None,False,,
87301be15152bd3627c9e87533c2c96fa9d4fd67,9826038f0bb41a79b2ab06fd7e5f1ffa745b7156,antirez,antirez@gmail.com,Thu Jan 22 11:00:26 2015 +0100,1421920826,counter must be static in getRandomHexChars().,4.0,2.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,720.0,23.0,0.4866782407407407,7811.0,3.0547456538799973,3630.0,None,False,,
9826038f0bb41a79b2ab06fd7e5f1ffa745b7156,a330b6ca97dc92222e0405e6cbae552f5aa324eb,antirez,antirez@gmail.com,Thu Jan 22 11:10:43 2015 +0100,1421921443,The seed must be static in getRandomHexChars().,1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,722.0,24.0,0.007141203703703703,7812.0,141.032414910859,3631.0,None,False,,
9826038f0bb41a79b2ab06fd7e5f1ffa745b7156,e4d65e35e6a26086ec955470baff159f5947f4c3,antirez,antirez@gmail.com,Thu Jan 22 11:10:43 2015 +0100,1421921443,The seed must be static in getRandomHexChars().,1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,722.0,25.0,0.0,7813.0,0.0,3632.0,None,False,,
a330b6ca97dc92222e0405e6cbae552f5aa324eb,d5ba544e674cf7606f1d7fedf5802cd9bc4037f4,antirez,antirez@gmail.com,Thu Jan 22 16:08:21 2015 +0100,1421939301,"Cluster test: when valgrind is enabled, use a larger node-timeout.Removes some percentage of timing related failures.n",6.0,1.0,"tests/cluster/tests/includes/init-tests.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,65.0,10.0,0.8890393518518519,7814.0,2.1248096025412364,601.0,Preventative,False,,
e4d65e35e6a26086ec955470baff159f5947f4c3 d5ba544e674cf7606f1d7fedf5802cd9bc4037f4,ca14440aa1d63632112b4c932867eedc586d1a9d,antirez,antirez@gmail.com,Thu Jan 22 16:31:14 2015 +0100,1421940674,Merge branch 'clusterfixes' into unstable,,,,,,,,,,,,,,,Merge,False,,
ca14440aa1d63632112b4c932867eedc586d1a9d,e22d75734e7bb2293cf8fb38c285cdc56378c60f,antirez,antirez@gmail.com,Thu Jan 22 18:57:45 2015 +0100,1421949465,Avoid duplicated instance execution code in Cluster test.,21.0,26.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,439.0,11.0,1.0909027777777778,7815.0,1.9166719714813163,602.0,Preventative,False,,
e22d75734e7bb2293cf8fb38c285cdc56378c60f,7885e1264e561afcc0182dd4763903def5138aa8,antirez,antirez@gmail.com,Fri Jan 23 18:10:14 2015 +0100,1422033014,DEBUG structsizeShow sizes of a few important data structures in Redis. More missing.n,7.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1017.0,94.0,4.8442592592592595,7816.0,1.2064299094002064,3633.0,Corrective,True,True,"[""a76b380e06d6758dcd84277003ca7af520c2b422""]"
7885e1264e561afcc0182dd4763903def5138aa8,8aaf5075c5bb76492e56188090f33266d5a7ad46,antirez,antirez@gmail.com,Fri Jan 23 18:11:05 2015 +0100,1422033065,dict.c: make chaining strategy more clear in dictAddRaw().,4.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1070.0,47.0,164.98817129629631,7817.0,1.0060610405712307,3634.0,None,False,,
8aaf5075c5bb76492e56188090f33266d5a7ad46,9802ec3c83cf6b61edad50bc41ddb3f6fdb13c6f,antirez,antirez@gmail.com,Sat Jan 24 07:52:24 2015 +0100,1422082344,"Cluster: initialized not used fileds in gossip section.Otherwise we risk sending not initialized data to other nodes, that mayncontain anything. This was actually not possible only because theninitialization of the buffer where the cluster packets header is creatednwas larger than the 3 gossip sections we use, so the memory was alreadynall filled with zeroes by the memset().n",2.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4746.0,435.0,8.480150462962962,7818.0,1.1179224359718023,3635.0,None,False,,
9802ec3c83cf6b61edad50bc41ddb3f6fdb13c6f,6ec5f1f78064264b9b33349858f8aa9157d4efe0,mattcollier,collier.matthew@gmail.com,Sun Jan 25 14:01:39 2015 -0500,1422212499,Update redis-cli.cCode was adding 'n'  (line 521) to the end of NIL values exlusively making csv output inconsistent.  Removed 'n',1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2035.0,128.0,17.89576388888889,0.0,0.0,0.0,Feature Addition,False,,
9802ec3c83cf6b61edad50bc41ddb3f6fdb13c6f,145473acc5798a499a0f37e42df48a014a3955c1,Matt Stancliff,matt@genges.com,Fri May 9 12:06:06 2014 -0400,1399651566,Convert check-dump to Redis check-rdb moderedis-check-dump is now named redis-check-rdb and it runsnas a mode of redis-server instead of an independent binary.nnYou can now use 'redis-server redis.conf --check-rdb' to checknthe RDB defined in redis.conf.  Using argument --check-rdbnchecks the RDB and exits.  We could potentially also allownthe server to continue starting if the RDB check succeeds.nnThis change also enables us to use RDB checking programaticallynfrom inside Redis for certain failure conditions.n,796.0,781.0,"src/Makefile,CAS_DELIMITER,src/redis-check-dump.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.1981492605223358,13.0,1282.8,1177.0,-165.68329398148148,309.0,0.9973771521571256,217.0,Corrective,True,,
145473acc5798a499a0f37e42df48a014a3955c1,764b000c3e7fcb88bdef51b4d3339fa9f620ee07,Matt Stancliff,matt@genges.com,Mon May 12 12:12:48 2014 -0400,1399911168,"Remove code duplication from check-rdbredis-check-rdb (previously redis-check-dump) had every RDB definencopy/pasted from rdb.h and some defines copied from redis.h.  Sincenthe initial copy, some constants had changed in Redis headers andncheck-dump was using incorrect values.nnSince check-rdb is now a mode of Redis, the old check-dump codenis cleaned up to:n  - replace all printf with redisLog (and remove n from all strings)n  - remove all copy/pasted defines to use defines from rdb.h and redis.hn  - replace all malloc/free with zmalloc/zfreen  - remove unnecessary include headersn",63.0,125.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,760.0,1.0,3.0046527777777787,312.0,1.332817158573509,218.0,Feature Addition,False,,
764b000c3e7fcb88bdef51b4d3339fa9f620ee07,d8c7db1bdba3938f31856a067b2966285acbf97f,Matt Stancliff,matt@genges.com,Mon May 12 11:44:37 2014 -0400,1399909477,"Improve RDB error-on-load handlingPreviouly if we loaded a corrupt RDB, Redis printed an error reportnwith a big REPORT ON GITHUB message at the bottom.  But, we knownRDB load failures are corrupt data, not corrupt code.nnNow when RDB failure is detected (duplicate keys or unknown datantypes in the file), we run check-rdb against the RDB then exit.  Thenautomatic check-rdb hopefully gives the user instant feedbacknabout what is wrong instead of providing a mysterious stackntrace.n",18.0,6.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1650.0,144.0,-253.92158564814807,313.0,0.9960617763257604,219.0,Corrective,True,,
9802ec3c83cf6b61edad50bc41ddb3f6fdb13c6f d8c7db1bdba3938f31856a067b2966285acbf97f,d3ef6c94bfa2d063f0fdbf128fba20119f5c1986,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 28 17:30:27 2015 +0100,1422462627,Merge pull request #1744 from mattsta/better-RDB-failure-errorImprove Loading RDB Failure Action,,,,,,,,,,,,,,,Merge,False,,
d3ef6c94bfa2d063f0fdbf128fba20119f5c1986,8899f91a7f29500e0005fa8a19211503267d884f,antirez,antirez@gmail.com,Wed Jan 28 23:26:42 2015 +0100,1422484002,create-cluster script added.Simple shell script to create / destroy Redis clusters for manualntesting.n,93.0,0.0,"utils/create-cluster/README,CAS_DELIMITER,utils/create-cluster/create-cluster,CAS_DELIMITER",2.0,1.0,1.0,0.869137580612638,1.0,0.0,0.0,0.0,7819.5,0.0,56.0,Feature Addition,False,,
8899f91a7f29500e0005fa8a19211503267d884f,69583be1812027a1877d14639bdaf76675549989,antirez,antirez@gmail.com,Wed Jan 28 23:28:27 2015 +0100,1422484107,Ignore redis-check-rdb after the name switch.,1.0,1.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,28.0,27.0,113.60818287037036,7821.0,1.0088021828598477,1358.0,None,False,,
69583be1812027a1877d14639bdaf76675549989,d59ad97d76eeb7cf39809e598bb3a34c57c81978,antirez,antirez@gmail.com,Thu Jan 29 13:21:42 2015 +0100,1422534102,create-cluster script: sane default timeout.,2.0,1.0,"utils/create-cluster/create-cluster,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,66.0,1.0,0.5798611111111112,7822.0,2.7245508982035926,57.0,Feature Addition,False,,
d59ad97d76eeb7cf39809e598bb3a34c57c81978,3fd43062c8127857f98c09a06bf70710b2dc2f68,antirez,antirez@gmail.com,Thu Jan 29 14:17:45 2015 +0100,1422537465,"Cluster: use a number of gossip sections proportional to cluster size.Otherwise it is impossible to receive the majority of failure reports innthe node_timeout*2 window in larger clusters.nnStill with a 200 nodes cluster, 20 gossip sections are a very reasonablenamount of bytes to send.nnA side effect of this change is also fater cluster nodes joins for largenclusters, because the cluster layout makes less time to propagate.n",42.0,17.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4748.0,436.0,5.267604166666667,7823.0,1.1898396250667405,3636.0,None,False,,
3fd43062c8127857f98c09a06bf70710b2dc2f68,1efacfe53d27913f640c886633340c37f76eafda,antirez,antirez@gmail.com,Thu Jan 29 15:01:26 2015 +0100,1422540086,CLUSTER count-failure-reports command added.,12.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4773.0,437.0,0.03033564814814815,7824.0,33.96451735978634,3637.0,Corrective,True,,
1efacfe53d27913f640c886633340c37f76eafda,e5a22064cce137cb4897779050966a719dd4bdce,antirez,antirez@gmail.com,Thu Jan 29 15:40:08 2015 +0100,1422542408,Cluster: magical 10% of nodes explained in comments.,26.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4785.0,438.0,0.026875,7825.0,38.2093023255814,3638.0,None,False,,
e5a22064cce137cb4897779050966a719dd4bdce,6b1c6334bec4277b2c5cb8f04975deb22e8e3a58,antirez,antirez@gmail.com,Fri Jan 30 10:41:45 2015 +0100,1422610905,Cluster: create-cluster script improved.,43.0,15.0,"utils/create-cluster/README,CAS_DELIMITER,utils/create-cluster/create-cluster,CAS_DELIMITER",2.0,1.0,1.0,0.21639693245126468,1.0,47.0,3.0,1.1788541666666663,7826.5,1.5524878208818906,59.0,None,False,,
6b1c6334bec4277b2c5cb8f04975deb22e8e3a58,69b4f00d28f471f66ddf83155bc41ad608918f44,antirez,antirez@gmail.com,Fri Jan 30 11:23:27 2015 +0100,1422613407,More correct wanted / maxiterations values in clusterSendPing().,6.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4809.0,439.0,0.8217476851851852,7828.0,2.2169185481485654,3639.0,None,False,,
69b4f00d28f471f66ddf83155bc41ad608918f44,233729fe7f6a26bfff62eba78716b711dc1719ce,antirez,antirez@gmail.com,Fri Jan 30 11:54:18 2015 +0100,1422615258,"Cluster: some bias towwards FAIL/PFAIL nodes in gossip sections.This improves PFAIL -> FAIL switch. Too late at this point in the RCnreleases to add proper PFAIL/FAIL separate dictionary to do this in anless randomized way. Tested in practice with experiments that thisnhelps. PFAIL -> FAIL average with 20 nodes and node-timeout set to 5nseconds takes 2.5 seconds without this commit, 1 second with thisncommit.n",6.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4813.0,440.0,0.021423611111111112,7829.0,47.677471636952994,3640.0,None,False,,
233729fe7f6a26bfff62eba78716b711dc1719ce,79fa67cdb8a92ed98a499dbb31483740dac0686c,antirez,antirez@gmail.com,Fri Jan 30 12:03:17 2015 +0100,1422615797,Cluster: Tcl script to check avg pfail->fail time.,50.0,0.0,"utils/cluster_fail_time.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7830.0,0.0,60.0,None,False,,
79fa67cdb8a92ed98a499dbb31483740dac0686c,6502947a8519e9109c6fa1575460290d92b48f38,antirez,antirez@gmail.com,Fri Jan 30 15:19:39 2015 +0100,1422627579,redis-check-rdb: initialize entry in case while is never entered.,1.0,1.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,698.0,2.0,262.9214236111111,7831.0,1.0038034177141804,3641.0,None,False,,
0d22121c276873152668472735d7312c591b6a74,c908774b9e071cc1e4fddd8f430e13aec31f9b67,Sun He,sunheehnus@gmail.com,Mon Feb 2 11:29:20 2015 +0800,1422847760,sort.c: REDIS_LIST's dontsort optimizationalso fix the situation dontsort DESC of a listn,30.0,3.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,569.0,36.0,80.34552083333334,9.0,1.0124462445401825,9.0,None,False,,
6502947a8519e9109c6fa1575460290d92b48f38,d5e01519e5348ddb9166473f465dfc2dfab303ac,Leandro Lu00c3u00b3pez (inkel),inkel.ar@gmail.com,Mon Feb 2 18:16:18 2015 -0300,1422911778,Support CLIENT commands in Redis SentinelWhen trying to debug sentinel connections or max connections errors itnwould be very useful to have the ability to see the list of connectednclients to a running sentinel. At the same time it would be very helpfulnto be able to name each sentinel connection or kill offending clients.nnThis commits adds the already defined CLIENT commands back to RedisnSentinel.n,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3974.0,180.0,80.69523148148149,0.0,0.0,0.0,Corrective,True,True,"[""0f0f787a37e6411a02d9a992ecc7bb8af7decf9a"", ""9d632230b65f978758721275bd8abf874361ba4d""]"
6502947a8519e9109c6fa1575460290d92b48f38 6ec5f1f78064264b9b33349858f8aa9157d4efe0,cdc0e9bfb55c8e285e50a50fd5e9a8723ac41cbc,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 2 22:47:57 2015 +0100,1422913677,Merge pull request #2318 from mattcollier/patch-1Fix redis-cli CSV NIL output,,,,,,,,,,,,,,,Merge,False,,
cdc0e9bfb55c8e285e50a50fd5e9a8723ac41cbc,128c642d055c4502db8d096c3d63b971d4708c92,antirez,antirez@gmail.com,Tue Feb 3 09:34:20 2015 +0100,1422952460,Ignore config.sh inside create-cluster script dir.,1.0,0.0,"utils/create-cluster/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7832.0,0.0,61.0,Feature Addition,False,,
128c642d055c4502db8d096c3d63b971d4708c92,45102a6f639712cd6025112bac6a988dc6e6b897,antirez,antirez@gmail.com,Tue Feb 3 10:09:21 2015 +0100,1422954561,"Norrow backtrace and setproctitle() to Linux+glibc.Backtrace is a glibc extension, while setproctitle() implementationndepends on the memory layout and is partially libc dependent.n",2.0,2.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,206.0,30.0,53.78469907407408,7833.0,1.0185926484151704,3642.0,None,False,,
45102a6f639712cd6025112bac6a988dc6e6b897,7d1e15808422a1233280440566a5c684de7aa92f,antirez,antirez@gmail.com,Tue Feb 3 10:25:01 2015 +0100,1422955501,"Handle redis-check-rdb as a standalone program.This also makes it backward compatible in the usage, but for the commandnname. However the old command name was less obvious so it is worth tonbreak it probably.nnWith the new setup the program main can perform argument parsing andneverything else useful for an RDB check regardless of the Redis servernitself.n",20.0,18.0,".gitignore,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,2.0,2.0,1.220068302234069,13.0,1534.0,1073.0,137.17357060185185,7835.5,1.0741964186206825,3645.0,Feature Addition,False,,
7d1e15808422a1233280440566a5c684de7aa92f,fad758b32292b9467a65f9f0f32ec8d4d0c84d4e,antirez,antirez@gmail.com,Tue Feb 3 10:33:05 2015 +0100,1422955985,Check RDB automatically in a few more cases.,3.0,3.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1662.0,145.0,266.74199074074073,7838.0,1.0037489410543237,3646.0,None,False,,
fad758b32292b9467a65f9f0f32ec8d4d0c84d4e 352172a7ef5015c0c487ba6258cdf3b4b31a551c,51010007bc49b8a41525d294e34660e36339a7f6,antirez,antirez@gmail.com,Tue Feb 3 14:13:30 2015 +0100,1422969210,Merge branch 'unstable' of git://github.com/mihirvj/redis into set-pr,,,,,,,,,,,,,,,Merge,False,,
51010007bc49b8a41525d294e34660e36339a7f6,1dbd8e94a7a0bed51c9c35f6c34486dad876ebc5,antirez,antirez@gmail.com,Tue Feb 3 14:17:06 2015 +0100,1422969426,More obvious indentation in setCommand().,8.0,4.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,465.0,57.0,50.91953703703704,7839.0,1.0196388274165304,3647.0,None,False,,
1dbd8e94a7a0bed51c9c35f6c34486dad876ebc5 c908774b9e071cc1e4fddd8f430e13aec31f9b67,5fbb36f9e7cfc4012018c433b3ed682b06246f03,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 3 15:32:38 2015 +0100,1422973958,Merge pull request #2346 from sunheehnus/sortLittle optimization & bug fix in sort.c,,,,,,,,,,,,,,,Merge,False,,
5fbb36f9e7cfc4012018c433b3ed682b06246f03,96abf659008e7e8e544e446bbfac922c059a5650,antirez,antirez@gmail.com,Tue Feb 3 15:38:21 2015 +0100,1422974301,Hopefully better sort.c optimization comments.Related to #2346.n,9.0,15.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,596.0,37.0,1.4645949074074074,7840.0,1.6827826554239338,3648.0,Perfective,False,,
96abf659008e7e8e544e446bbfac922c059a5650,719c6c2b96bdb9638dc3eae66f3568608181add6,antirez,antirez@gmail.com,Tue Feb 3 15:42:56 2015 +0100,1422974576,Suppress sign warning in sort.c.Related to #2346.n,1.0,1.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,590.0,38.0,0.0031828703703703693,7841.0,315.1818181818182,3649.0,None,False,,
96abf659008e7e8e544e446bbfac922c059a5650,c5dd686ecb90d8d969f521d02caade4a3fa6d56e,antirez,antirez@gmail.com,Wed Feb 4 11:24:46 2015 +0100,1423045486,Replication: put server.master client creation into separated function.,18.0,11.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2115.0,144.0,54.711296296296304,7842.0,1.0182777610419678,3650.0,None,False,,
c5dd686ecb90d8d969f521d02caade4a3fa6d56e 719c6c2b96bdb9638dc3eae66f3568608181add6,78dd2b313eb7b398bac64543390dcfd70e6fd148,antirez,antirez@gmail.com,Wed Feb 4 11:26:31 2015 +0100,1423045591,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
78dd2b313eb7b398bac64543390dcfd70e6fd148,2ac7b5a8b41bb71fce52c86f9ba420769663609e,antirez,antirez@gmail.com,Wed Feb 4 11:53:19 2015 +0100,1423047199,Fix RDB corruption test after server behavior change.,1.0,1.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,98.0,7.0,651.947650462963,7843.0,1.0015338654864234,603.0,Corrective,True,True,"[""95883313b5a405916fabed34c3af290d6072c817""]"
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,ba74711e0609b92721fc2d5a13c90aa88f623254,Chris Lamb,chris@chris-lamb.co.uk,Wed Feb 4 18:36:38 2015 +0000,1423074998,Support 1G etc. units in CONFIG SET maxmemorySigned-off-by: Chris Lamb <chris@chris-lamb.co.uk>n,3.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1979.0,157.0,26.926446759259267,3.0,1.0371382087261896,2.0,None,False,,
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,eaeba1b2c85812c6b16a8ef50bf889d72804db09,Chris Lamb,chris@chris-lamb.co.uk,Wed Feb 4 18:29:22 2015 +0000,1423074562,Tidy grammar in CONFIG SET maxmemory warning.Signed-off-by: Chris Lamb <chris@chris-lamb.co.uk>n,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1980.0,158.0,-0.005046296296296296,4.0,-197.1651376146789,3.0,None,False,True,"[""c241f5160752753c271366547e2ada8617f1e684""]"
2ac7b5a8b41bb71fce52c86f9ba420769663609e,2860cf4139827c2791c5f79324555d7acf150243,antirez,antirez@gmail.com,Sat Feb 7 14:50:12 2015 +0100,1423317012,Initial implementation of redis-cli --latency-dist.,153.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2035.0,129.0,12.783715277777775,7844.0,1.0782245206711012,3651.0,Feature Addition,False,,
2860cf4139827c2791c5f79324555d7acf150243,414df143f51bab2f984c0fb67fccc637733bc570,antirez,antirez@gmail.com,Sat Feb 7 15:05:40 2015 +0100,1423317940,Add missing latency-dest legend symbol.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2188.0,130.0,0.01074074074074074,7845.0,94.10344827586208,3652.0,Feature Addition,False,,
414df143f51bab2f984c0fb67fccc637733bc570,c83a739bd8c9e6451414bcacade98733aeaa9834,Mariano Pu00c3u00a9rez Rodru00c3u00adguez,mariano-perez-rodriguez@users.noreply.github.com,Sat Feb 7 14:02:33 2015 -0300,1423328553,Fix for #2371Fixing #2371 as per @mattsta's suggestion,5.0,4.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,206.0,31.0,4.328611111111111,3.0,1.2310209844060835,0.0,Corrective,True,,
414df143f51bab2f984c0fb67fccc637733bc570,ace1acc532516bd5bd4af7faa9f173e233fa0549,antirez,antirez@gmail.com,Sat Feb 7 18:06:10 2015 +0100,1423328770,redis-cli latency dist: add new top HL.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2188.0,131.0,0.12534722222222222,7846.0,8.977839335180056,3653.0,None,False,,
ace1acc532516bd5bd4af7faa9f173e233fa0549,2723412b7bd15f37b8e714dc43a91732b7b606a3,antirez,antirez@gmail.com,Sat Feb 7 20:15:40 2015 +0100,1423336540,redis-cli --latency-dist now uses a color palette.Still not happy with the result but low grays are hard to see in certainnmonitors with a non perfect gamma.n,14.0,8.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2189.0,132.0,0.08993055555555557,7847.0,12.119691119691119,3654.0,None,False,,
2723412b7bd15f37b8e714dc43a91732b7b606a3,cfe21852e79792b08afd2fe0872440edcddf577e,antirez,antirez@gmail.com,Sun Feb 8 17:39:42 2015 +0100,1423413582,"redis-cli --latecy-dist reverted to gray scale.So far not able to find a color palette within the 256 colors which isnnot confusing. However I believe it is a possible task, so will trynbetter later.n",10.0,8.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2195.0,133.0,0.8916898148148148,7848.0,2.12146621323434,3655.0,Perfective,False,,
cfe21852e79792b08afd2fe0872440edcddf577e,ca23b2a6b739f179ed0dab3a3639153d8b18fd59,antirez,antirez@gmail.com,Sun Feb 8 23:28:27 2015 +0100,1423434507,"redis-cli: interactive reconnection for latency modes.--stat mode already used to reconnect automatically if the server is nonlonger available. This is useful since this is an interactive mode usednfor debugging, however the same applies to --latency and --latency-distnmodes, so now both use the reconnecting command execution as well.nnThe reconnection code was modified to use basic VT100 escape sequencesnin order to play better with different kinds of output on the screennwhen the reconnection happens, and to hide the reconnection attemptnoutput when finally the reconnection happens.n",13.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2197.0,134.0,0.2421875,7849.0,5.129032258064517,3656.0,None,False,,
ca23b2a6b739f179ed0dab3a3639153d8b18fd59,bd128f7969d0b28dbefe56bfdfa0b5b54102dc97,antirez,antirez@gmail.com,Mon Feb 9 11:06:44 2015 +0100,1423476404,redis-cli --lru-test implemented (cache workload simulator).,102.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2201.0,135.0,0.4849189814814815,7850.0,3.062200157529179,3657.0,Preventative,False,,
bd128f7969d0b28dbefe56bfdfa0b5b54102dc97 c83a739bd8c9e6451414bcacade98733aeaa9834,50a57c67b2050178487d119d56dc536a2fd661d1,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 10 09:27:46 2015 +0100,1423556866,Merge pull request #2372 from mariano-perez-rodriguez/patch-2Fix HAVE_BACKTRACE on Linux,,,,,,,,,,,,,,,Merge,False,,
50a57c67b2050178487d119d56dc536a2fd661d1,9e9abe29fee509095dcd8af3648019bbe980279b,antirez,antirez@gmail.com,Tue Feb 10 09:29:14 2015 +0100,1423556954,HAVE_SYNC_FILE_RANGE should be protected by ifdef __linux__.Related to issue #2372.n,2.0,0.0,"src/config.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,207.0,32.0,2.6435300925925924,7851.0,1.3782820565584215,3658.0,None,False,,
9e9abe29fee509095dcd8af3648019bbe980279b,e1fce55237ee1092384017a157882d548c6a517f,antirez,antirez@gmail.com,Tue Feb 10 14:40:27 2015 +0100,1423575627,Added regression test for issue #2371.,25.0,0.0,"tests/integration/logging.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.2422921890824148,13.0,272.5,91.0,37.06326967592592,7852.5,0.5067452224853866,605.0,Feature Addition,False,,
e1fce55237ee1092384017a157882d548c6a517f,5e3dcc522b13d5441d6cdf4ee6ff48bd25df13cb,antirez,antirez@gmail.com,Tue Feb 10 14:47:45 2015 +0100,1423576065,"Faster memory efficiency test.This test on Linux was extremely slow, since in Tcl we can't enableneasily tcp-nodelay, so the busy loop used to take *a lot* with biggernwrites. Fixed using pipelining.n",6.0,1.0,"tests/unit/memefficiency.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,32.0,2.0,442.1850347222222,7854.0,1.0022614967072059,606.0,Corrective,True,,
5e3dcc522b13d5441d6cdf4ee6ff48bd25df13cb,170e41464dfff851f939fd73c1c4ec8a02507859,antirez,antirez@gmail.com,Wed Feb 4 22:12:46 2015 +0100,1423084366,Less blocking dictGetRandomKeys().Related to issue #2306.n,31.0,23.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1073.0,48.0,12.167835648148149,7855.0,1.0821838845392515,3659.0,None,False,,
170e41464dfff851f939fd73c1c4ec8a02507859,777020839a1ba68ea5bd77a5b17648f4b831caf7,antirez,antirez@gmail.com,Thu Feb 5 10:42:09 2015 +0100,1423129329,dict.c: prevent useless resize to same size.Related to issue #2306.n,3.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1081.0,49.0,0.5204050925925926,7856.0,2.9215799657496166,3660.0,None,False,,
777020839a1ba68ea5bd77a5b17648f4b831caf7,cd0fcf11e7704c72b68a19f92e093bc5976fe7fc,antirez,antirez@gmail.com,Thu Feb 5 10:51:05 2015 +0100,1423129865,dict.c: put a bound to max work dictRehash() call can do.Related to issue #2306.n,11.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1084.0,50.0,0.006203703703703704,7857.0,162.19402985074626,3661.0,None,False,,
cd0fcf11e7704c72b68a19f92e093bc5976fe7fc,88cd9ebc0964c9daf32d97631b5eeba5fd0e8b09,antirez,antirez@gmail.com,Thu Feb 5 10:58:28 2015 +0100,1423130308,dict.c: dictGetRandomKeys() visit pattern optimization.We use the invariant that the original table ht[0] is never populated upnto the index before the current rehashing index.nnRelated to issue #2306.n,4.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1093.0,51.0,0.005127314814814815,7858.0,196.03386004514672,3662.0,None,False,,
88cd9ebc0964c9daf32d97631b5eeba5fd0e8b09,1bcf67a75f775b342653505465b5e8ee03974809,antirez,antirez@gmail.com,Thu Feb 5 11:28:45 2015 +0100,1423132125,dict.c: dictGetRandomKeys() optimization for big->small table case.Related to issue #2306.n,8.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1097.0,52.0,0.0210300925925926,7859.0,48.55090809025866,3663.0,None,False,,
1bcf67a75f775b342653505465b5e8ee03974809,4f427bc298b0cfc45bd25381cd04df86868c0843,antirez,antirez@gmail.com,Thu Feb 5 12:15:58 2015 +0100,1423134958,"dict.c: don't try buckets that are empty for sure in dictGetRandomKey().This is very similar to the optimization applied to dictGetRandomKeys,nbut applied to the single key variant.nnRelated to issue #2306.n",5.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1104.0,53.0,0.03278935185185185,7860.0,31.497705612424987,3664.0,None,False,,
4f427bc298b0cfc45bd25381cd04df86868c0843,2385630d0d245482027e9e36c76d6f8675dd2f6b,Sun He,sunheehnus@gmail.com,Fri Feb 6 11:18:58 2015 +0800,1423192738,dict.c/dictRehash: check again to update,7.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1108.0,54.0,0.66875,10.0,2.4953271028037385,10.0,None,False,,
2385630d0d245482027e9e36c76d6f8675dd2f6b,f25fdd6246f01b6ee3c0ce557e2911bc8c068518,antirez,antirez@gmail.com,Fri Feb 6 10:48:13 2015 +0100,1423216093,"dict.c: avoid code repetition in dictRehash().Avoid code repetition introduced with PR #2367, also fixes the returnnvalue to always return 0 if there is nothing more to rehash.n",6.0,11.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1115.0,55.0,0.2703125,7861.0,4.699421965317919,3665.0,None,False,,
f25fdd6246f01b6ee3c0ce557e2911bc8c068518,5792a217f85633225209557d952ad2fa6a3fa0c0,antirez,antirez@gmail.com,Fri Feb 6 15:48:42 2015 +0100,1423234122,"dict.c: add dictGetSomeKeys(), specialized for eviction.",95.0,2.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.22742467664385024,13.0,1721.333333333333,638.0,55.90137345679011,7863.0,2.6014405931730624,3668.0,None,False,,
5792a217f85633225209557d952ad2fa6a3fa0c0,8696874d75977e2916c427db4002d053fbb3ff1f,antirez,antirez@gmail.com,Fri Feb 6 16:17:11 2015 +0100,1423235831,Remove optional single-key path from evictionPoolPopulate().,0.0,6.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3869.0,563.0,0.019780092592592592,7865.0,51.55588063194851,3669.0,None,False,,
8696874d75977e2916c427db4002d053fbb3ff1f,05841a638697c0bbbc90bf2dc2da90659b71c26a,antirez,antirez@gmail.com,Sat Feb 7 09:54:07 2015 +0100,1423299247,redis-cli --stat: show LOAD when loading.,4.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2303.0,136.0,-2.050428240740741,7866.0,0.5122970020941877,3670.0,None,False,,
05841a638697c0bbbc90bf2dc2da90659b71c26a,edda00b902910c73b5d2dcb56e43a66b6d541193,antirez,antirez@gmail.com,Sat Feb 7 10:11:43 2015 +0100,1423300303,dict.c Rehashing visualization code snippet added to utils.,145.0,0.0,"utils/hashtable/README,CAS_DELIMITER,utils/hashtable/rehashing.c,CAS_DELIMITER",2.0,1.0,1.0,0.4353177790414858,1.0,0.0,0.0,0.0,7867.5,0.0,63.0,Feature Addition,False,,
edda00b902910c73b5d2dcb56e43a66b6d541193,8ddc14523fe5773d99a2dffba748d349f4419994,antirez,antirez@gmail.com,Sun Feb 8 11:19:47 2015 +0100,1423390787,"dict.c: reset emptylen when bucket is not empty.Fixed by @oranagra, thank you.n",1.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1202.0,57.0,1.8132523148148147,7869.0,1.551495228672645,3671.0,None,False,,
8ddc14523fe5773d99a2dffba748d349f4419994,585d1a60bf5b451b83e066a454d87e02ead08666,antirez,antirez@gmail.com,Mon Feb 9 15:17:20 2015 +0100,1423491440,Separate latency monitoring of eviction loop and eviction DELs.,20.0,2.0,"src/latency.c,CAS_DELIMITER,src/latency.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,1.4353713907745331,13.0,1521.666666666667,599.0,51.8666512345679,7871.0,1.0095786737491506,3674.0,None,False,,
585d1a60bf5b451b83e066a454d87e02ead08666,6b5922dcbbfe5428accc093892ff330211acf5d7,antirez,antirez@gmail.com,Mon Feb 9 22:49:27 2015 +0100,1423518567,"SPOP with count: initial fixes to the implementation.Severan problems are addressed but still a few missing.nSince replication of this command was more complex than others since itnneeds to replicate multiple SREM commands, an old API able to do thisnwas reused (it was taken inside the implementation since it was prettynobvious soon or later that would be useful). The API was improved a bitnso that now a command may opt-out for the standard command replicationnwhen the server.dirty counter is incremented, in order to manuallynreplicate what it wants.n",54.0,42.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",3.0,1.0,1.0,1.0273571621065212,13.0,2135.0,1087.0,19.064182098765432,7874.0,2.116298734070537,3677.0,None,False,,
6b5922dcbbfe5428accc093892ff330211acf5d7,cc7f0434b5c590e5a61c3cefa6ed9fb193d021dd,antirez,antirez@gmail.com,Mon Feb 9 23:44:42 2015 +0100,1423521882,Change alsoPropagate() behavior to make it more usable.Now the API automatically creates its argv copy and increment ref countnof passed objects.n,24.0,9.0,"src/redis.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.9456603046006402,13.0,2442.5,607.0,0.03836805555555557,7876.5,20.5475113122172,3679.0,Feature Addition,False,,
cc7f0434b5c590e5a61c3cefa6ed9fb193d021dd,55003f7a118beb20ed1bc65926e29e207c3b721a,antirez,antirez@gmail.com,Mon Feb 9 23:57:52 2015 +0100,1423522672,alsoPropagate: handle REDIS_CALL_PROPAGATE and AOF loading.,10.0,5.0,"src/redis.c,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5665095065529053,13.0,2078.5,589.0,167.67781828703704,7878.5,55.68503525831104,607.0,None,False,True,"[""514a23472262de499005a31b1af3cca08a1c84ba""]"
55003f7a118beb20ed1bc65926e29e207c3b721a,9feee428f25a5681a06cd13ed1c4cc644759e719,antirez,antirez@gmail.com,Tue Feb 10 22:59:12 2015 +0100,1423605552,"SPOP: reimplemented for speed and better distribution.The old version of SPOP with count argument used an API call of dict.cnwhich was actually designed for a different goal, and was not capable ofngood distribution. We follow a different three-cases approach optimizednfor different ratiion between sets and requested number of elements.nnThe implementation is simpler and allowed the removal of a large amountnof code.n",80.0,301.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",5.0,1.0,1.0,1.4449983626218468,13.0,522.0,139.0,37.46734953703704,7882.0,1.1141499198932177,3685.0,None,False,,
9feee428f25a5681a06cd13ed1c4cc644759e719,a37d0f8b48e91d1ec50ac97ef7fa832794cf6edd,antirez,antirez@gmail.com,Wed Feb 11 10:11:28 2015 +0100,1423645888,SPOP with count: fix replication for code path #3.,10.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,943.0,43.0,0.4668518518518519,7885.0,3.1420071400238,3686.0,None,False,,
a37d0f8b48e91d1ec50ac97ef7fa832794cf6edd,dffbbb5a78154d42395284e9b8bf33b236a45599,antirez,antirez@gmail.com,Wed Feb 11 10:12:00 2015 +0100,1423645920,SPOP explicit tests for the three different code paths.,27.0,0.0,"tests/unit/type/set.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,573.0,23.0,336.77297453703704,7886.0,1.002969359407104,608.0,Preventative,False,,
dffbbb5a78154d42395284e9b8bf33b236a45599,a1d9ec0d448b3f0d41eff9c8ba48af3c47976ef2,antirez,antirez@gmail.com,Wed Feb 11 10:45:01 2015 +0100,1423647901,SPOP replication tests.,19.0,0.0,"tests/integration/replication-4.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,136.0,6.0,561.7539583333332,7887.0,1.0017801387692342,609.0,Preventative,False,,
a1d9ec0d448b3f0d41eff9c8ba48af3c47976ef2,2b3eba056cd1c36171436dad74bfeeedcdbed425,Masahiko Sawada,sawada.mshk@gmail.com,Thu Feb 12 21:20:22 2015 +0900,1423743622,Unify to uppercase the headline,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,974.0,153.0,34.66515046296296,0.0,0.0,0.0,None,False,,
a1d9ec0d448b3f0d41eff9c8ba48af3c47976ef2,29b54db32091fb04a75a9dc196adc492e4933493,antirez,antirez@gmail.com,Thu Feb 12 16:40:41 2015 +0100,1423755641,Better memtoll() error checking.Related to PR #2357.n,18.0,5.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,722.0,26.0,21.22914351851852,7888.0,1.0471050562698248,3687.0,Perfective,False,,
29b54db32091fb04a75a9dc196adc492e4933493 ba74711e0609b92721fc2d5a13c90aa88f623254,866b3fc0ec5c61fc3504df2b15445e79437a6b78,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 12 16:42:09 2015 +0100,1423755729,Merge pull request #2357 from lamby/config-set-maxmemory-unitsSupport 1G etc. units in CONFIG SET maxmemory,,,,,,,,,,,,,,,Merge,False,,
866b3fc0ec5c61fc3504df2b15445e79437a6b78,cd4e0f43dfa02f718ee2e836ea96bd262c4cf28e,antirez,antirez@gmail.com,Thu Feb 12 16:51:20 2015 +0100,1423756280,Extend memory unit support in CONFIG SET.Related to PR #2357.n,5.0,5.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1980.0,159.0,7.89025462962963,7889.0,1.1267386221282114,3688.0,None,False,,
cd4e0f43dfa02f718ee2e836ea96bd262c4cf28e 2b3eba056cd1c36171436dad74bfeeedcdbed425,b1de179c01d90378b1402526e42a7035d0bc72a0,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 12 17:07:04 2015 +0100,1423757224,Merge pull request #2390 from sawaman/fix-typoUnify to uppercase the headline,,,,,,,,,,,,,,,Merge,False,,
b1de179c01d90378b1402526e42a7035d0bc72a0,3101d2bffb9437a3a82920ef48c51955783a7070,antirez,antirez@gmail.com,Fri Feb 13 12:44:40 2015 +0100,1423827880,"redis-cli --latency-dist, hopefully better palette.Less grays: more readable palette since usually we have a non linearndistribution of percentages and very near gray tones are hard to takenapart. Final part of the palette is gradient from yellow to red. The rednpart is hardly reached because of usual distribution of latencies, butnshows up mainly when latencies are very high because of the logarithmicnscale, this is coherent to what people expect: red = bad.n",2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2307.0,137.0,6.1184375,7890.0,1.1634404208590836,3689.0,Perfective,False,,
3101d2bffb9437a3a82920ef48c51955783a7070,f638f045ce4d54b04d2e089bb3a57b6d4740c3f5,antirez,antirez@gmail.com,Fri Feb 13 14:38:21 2015 +0100,1423834701,"redis-cli --latency-dist: one gray more, and --mono support.",17.0,7.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2307.0,138.0,0.07894675925925926,7891.0,13.666764404046328,3690.0,None,False,,
f638f045ce4d54b04d2e089bb3a57b6d4740c3f5,cac9a900cb7e44b73d5d212309472b26c2a23765,antirez,antirez@gmail.com,Fri Feb 13 14:55:09 2015 +0100,1423835709,README -> README.md.,168.0,173.0,"README,CAS_DELIMITER,README.md,CAS_DELIMITER",2.0,1.0,1.0,0.999844907299876,8.0,86.5,18.0,17.965300925925924,7892.5,1.0278314291567718,1361.0,None,False,,
cac9a900cb7e44b73d5d212309472b26c2a23765,097b3079b4be704879505a51189a7e7f7028457d,antirez,antirez@gmail.com,Fri Feb 13 14:55:53 2015 +0100,1423835753,Fix README minor grammar issues.,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,168.0,1.0,0.0005092592592592592,7894.0,1964.6363636363642,1362.0,Corrective,True,,
097b3079b4be704879505a51189a7e7f7028457d,c414db2f98b4d78f7b0dc8205f870b4b77346c99,antirez,antirez@gmail.com,Fri Feb 13 14:57:05 2015 +0100,1423835825,A few more README markdown conversions.,3.0,3.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,168.0,2.0,0.0008333333333333334,7895.0,1201.0,1363.0,None,False,,
c414db2f98b4d78f7b0dc8205f870b4b77346c99,2576864ba7d26ee5ce2de883b06a41131c4babd9,Jan-Erik Rediger,janerik@fnordig.de,Fri Feb 13 15:10:20 2015 +0100,1423836620,"Use code tags where necessary, escape special markers",8.0,8.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,168.0,3.0,0.009201388888888893,24.0,109.67924528301886,3.0,None,False,,
c414db2f98b4d78f7b0dc8205f870b4b77346c99,f916a589b5e423a63269a3237da5cc10040ce298,antirez,antirez@gmail.com,Fri Feb 13 15:34:22 2015 +0100,1423838062,README: give idea about what Redis is.,25.0,0.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,168.0,4.0,0.016689814814814814,7896.0,60.916782246879336,1364.0,None,False,,
f916a589b5e423a63269a3237da5cc10040ce298,78c44ca6464de71e31021b6dc8355429cd703718,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 13 15:37:19 2015 +0100,1423838239,Fix links into README.,4.0,4.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,193.0,5.0,0.0020486111111111113,5.0,489.1355932203389,0.0,Corrective,True,,
78c44ca6464de71e31021b6dc8355429cd703718,9795ad1bc25d30fc12f7c90824937a13eb9dcf5f,antirez,antirez@gmail.com,Fri Feb 13 15:39:44 2015 +0100,1423838384,Fix README links again.Apparently no refernece-style links supported in Github markdown.n,4.0,9.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,193.0,6.0,0.0016782407407407408,7897.0,596.8620689655173,1365.0,Corrective,True,,
2576864ba7d26ee5ce2de883b06a41131c4babd9,07a89654dae420fc060743c101837e8383c69537,Jan-Erik Rediger,janerik@fnordig.de,Fri Feb 13 15:10:46 2015 +0100,1423836646,Link files in README,5.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,188.0,7.0,-0.02011574074074074,25.0,-48.71231300345225,4.0,None,False,,
9795ad1bc25d30fc12f7c90824937a13eb9dcf5f 07a89654dae420fc060743c101837e8383c69537,e5760987e9b327c18e6c0358a14da5c19341c123,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 13 15:55:44 2015 +0100,1423839344,Merge pull request #2393 from badboy/readme-fixReadme fix,,,,,,,,,,,,,,,Merge,False,,
9795ad1bc25d30fc12f7c90824937a13eb9dcf5f,41a1fb8186f2687fb738fe5cbab74e02595474e4,antirez,antirez@gmail.com,Sat Feb 14 17:19:17 2015 +0100,1423930757,Version bumped to 3.1.999 (3.2 alpha versions).,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,22.0,234.11716435185184,7898.0,1.0042713655906796,3691.0,None,False,,
41a1fb8186f2687fb738fe5cbab74e02595474e4 e5760987e9b327c18e6c0358a14da5c19341c123,cfe5eaaed6c136f34db8ada4a704dc81491e2742,antirez,antirez@gmail.com,Sat Feb 14 17:19:37 2015 +0100,1423930777,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
cfe5eaaed6c136f34db8ada4a704dc81491e2742,395e11255cc924c2ee4cc4ddcbf30d269b193316,John Doe,tonglizhei@gmail.com,Tue Feb 17 00:03:21 2015 +0800,1424102601,Fix quicklist Pop() resultCloses #2398n,1.0,1.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2639.0,8.0,58.56755787037037,0.0,0.0,0.0,Corrective,True,,
395e11255cc924c2ee4cc4ddcbf30d269b193316,552e5908bb0dc7e9c7db20db20315e961612db33,Matt Stancliff,matt@genges.com,Tue Feb 17 11:28:45 2015 -0500,1424190525,Fix quicklist tests for Pop()Now the tests actually compare return values instead of justnverifying _something_ got returned.n,12.0,1.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2639.0,9.0,1.0176388888888892,314.0,1.982666848642009,220.0,Corrective,True,,
cfe5eaaed6c136f34db8ada4a704dc81491e2742,acb933a747ea5ecc85d984867e8627a813ffe2c1,Sisir Koppaka,sisir.koppaka@gmail.com,Wed Feb 18 08:16:41 2015 -0500,1424265401,rehashing.c: Fix compile error originating from SPOP rewrite,1.0,1.0,"utils/hashtable/rehashing.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,132.0,1.0,11.17011574074074,0.0,0.0,0.0,None,False,,
cfe5eaaed6c136f34db8ada4a704dc81491e2742,1024664247a0853569bcd8abe1127cd107a20fc8,antirez,antirez@gmail.com,Thu Feb 19 22:42:31 2015 +0100,1424382151,"Example redis.conf binds just to 127.0.0.1.It's hard to pick a good approach here. A few arguments:nn1) There are many exposed instances on the internet.n2) Changing the default when bind is not given is very dangerous,n   after an upgrade the server changes a fundamental behavior.n3) Usually Redis, when used in a proper way, will be protected *and*n   accessed often from other computers, so this new default is likelyn   not what most people want.n4) However if users end with this default, they are using the examplen   redis.conf: likely they are reading what is inside, and they'll seen   the warning.n",42.0,28.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,974.0,154.0,7.390381944444441,7899.0,1.135311003885493,1366.0,None,False,,
1024664247a0853569bcd8abe1127cd107a20fc8,0aa5acc8f31a45ba4ee625227bae80e125fd8bdb,antirez,antirez@gmail.com,Thu Feb 19 22:47:32 2015 +0100,1424382452,Give obvious instructions on how to bind all interfaces.,3.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,988.0,155.0,0.0034837962962962965,7900.0,288.04318936877075,1367.0,None,False,,
0aa5acc8f31a45ba4ee625227bae80e125fd8bdb,db9461e466afeeb9b50a80b78934144922482f5b,Jason Roth,jroth2@gmail.com,Sat Feb 21 15:01:18 2015 +0000,1424530878,added a new hvstrlen commandthe hvstrlen command returns the length of a hash field valuen,47.0,0.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.1528217340010505,13.0,1668.75,1103.0,272.0899508101852,1.5,0.7633172066728144,2.0,Feature Addition,False,,
0aa5acc8f31a45ba4ee625227bae80e125fd8bdb,fc365a3a001d0ec55e6bde914708911aa1b524c4,antirez,antirez@gmail.com,Mon Feb 23 11:24:24 2015 +0100,1424687064,Change RENAME behavior when src and dst keys are the same.Fixes issue #2392.n,21.0,6.0,"src/db.c,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9990102708804812,13.0,1022.5,185.0,108.13097800925924,7901.5,1.0091326632689672,610.0,Corrective,True,,
fc365a3a001d0ec55e6bde914708911aa1b524c4 552e5908bb0dc7e9c7db20db20315e961612db33,5ff00ac8c1e70c33e539f4d2079b665d457016fd,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 24 17:13:39 2015 +0100,1424794419,Merge pull request #2401 from mattsta/fix/quicklist/popFix quicklist Pop(),,,,,,,,,,,,,,,Merge,False,,
5ff00ac8c1e70c33e539f4d2079b665d457016fd 5a685f35a9e09cba3b08640912aed93acbc63351,3689a0582bef619a574835044c68c05dd8bd13f7,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 24 17:19:17 2015 +0100,1424794757,Merge pull request #2273 from mattsta/improve/consistency/INFO/memoryImprove consistency of INFO MEMORY,,,,,,,,,,,,,,,Merge,False,,
3689a0582bef619a574835044c68c05dd8bd13f7 391fc9b6335329e513664c69bdc18865ab944beb,46bd13b8062227b529c851bd2ee7431309fdcfbb,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 24 17:20:09 2015 +0100,1424794809,Merge pull request #1966 from mattsta/fix-sentinel-infoSentinel: Improve INFO command behavior,,,,,,,,,,,,,,,Merge,False,,
46bd13b8062227b529c851bd2ee7431309fdcfbb 53c082ec39fb4daafba09e416279265f20d46006,d83c810265c5c27ceec418b394860f82bb9ac446,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 24 17:22:53 2015 +0100,1424794973,Merge pull request #2301 from mattsta/fix/lengthsImprove type correctness,,,,,,,,,,,,,,,Merge,False,,
d83c810265c5c27ceec418b394860f82bb9ac446,47ab570441f8012fb9aa6a0b38606bc9462e2bd3,Matt Stancliff,matt@genges.com,Tue Feb 24 11:31:04 2015 -0500,1424795464,Fix types broken by previous type cleanupRevert some size_t back to off_tnSet reply_bytes needs to 64 bits everywherenRevert bufpos to int since it's a max of 16k into buf[]n,4.0,4.0,"src/redis.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1533.0,484.0,3.062337962962963,315.0,1.3265478899110308,221.0,Corrective,True,,
47ab570441f8012fb9aa6a0b38606bc9462e2bd3 6739ef4447adb17ce2d644b530aea429b8d52445,e00cb78f6712ec2f796f430c7de90e1e64c1ec6d,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 25 10:09:40 2015 +0100,1424855380,Merge pull request #2054 from mattsta/fix-set-sentinel-quorumSentinel: Add initial quorum bounds check,,,,,,,,,,,,,,,Merge,False,,
e00cb78f6712ec2f796f430c7de90e1e64c1ec6d badf0f008bede268d3235412243fc62d618e323c,9454f7b3db48c33cd8bb2d508a6402c4b51cf964,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 25 10:18:07 2015 +0100,1424855887,Merge pull request #2050 from mattsta/bitops-no-overallocBitops: Stop overallocating storage space on set,,,,,,,,,,,,,,,Merge,False,,
9454f7b3db48c33cd8bb2d508a6402c4b51cf964,954151f62b79a86b90f8b840fe7c1d1df78c71c3,antirez,antirez@gmail.com,Wed Feb 25 10:31:29 2015 +0100,1424856689,"Test: split basic unit into string, incr, keyspace units.",819.0,818.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/basic.tcl,CAS_DELIMITER,tests/unit/keyspace.tcl,CAS_DELIMITER,tests/unit/type/incr.tcl,CAS_DELIMITER,tests/unit/type/string.tcl,CAS_DELIMITER",5.0,1.0,3.0,1.7506379245739137,13.0,272.6,129.0,3.35807175925926,7905.0,1.0611351994899825,615.0,Preventative,False,,
954151f62b79a86b90f8b840fe7c1d1df78c71c3,27c30b0e84224cfc5f4189c26e16800f3e0dcd27,antirez,antirez@gmail.com,Wed Feb 25 10:33:37 2015 +0100,1424856817,"Cast sentlen to int before comparison wit bufpos.This is safe since bufpos is small, inside the range of the localnclient buffer.n",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1730.0,199.0,37.49111111111111,7908.0,1.0266729891529844,3693.0,None,False,,
27c30b0e84224cfc5f4189c26e16800f3e0dcd27,74354ceef53651aa30486a1b7181438d71cfbd1b,antirez,antirez@gmail.com,Wed Feb 25 10:37:52 2015 +0100,1424857072,Test: fixes a few tests after basic unit refactoring.,4.0,2.0,"tests/unit/type/string.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,420.0,1.0,0.00443287037037037,7909.0,226.58746736292431,616.0,Preventative,False,,
74354ceef53651aa30486a1b7181438d71cfbd1b acb933a747ea5ecc85d984867e8627a813ffe2c1,126462ee3676777e8e72669d1abb3ae5c429805f,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 25 12:52:23 2015 +0100,1424865143,Merge pull request #2405 from sisirkoppaka/unstablerehashing.c: Fix compile error originating from SPOP rewrite,,,,,,,,,,,,,,,Merge,False,,
126462ee3676777e8e72669d1abb3ae5c429805f,cc0d339bd19d37367806cc95111f1539aa268004,antirez,antirez@gmail.com,Wed Feb 25 13:02:04 2015 +0100,1424865724,utils/hashtable/rehashing.c test updated to use new API.,22.0,12.0,"utils/hashtable/rehashing.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,132.0,2.0,6.9481828703703705,7910.0,1.1439225217091469,64.0,Feature Addition,False,,
cc0d339bd19d37367806cc95111f1539aa268004,7fda935ad3b00dee511283f9bed92cd43cabcbf5,Tommy Wang,Tommy.Wang@tekcomms.com,Wed Feb 25 12:29:06 2015 -0600,1424888946,Add last_dbid to migrateCachedSocket to avoid redundant SELECTAvoid redundant SELECT calls when continuously migrating keys tonthe same dbid within a target Redis instance.n,36.0,23.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4816.0,441.0,26.31583333333333,0.0,0.0,0.0,Feature Addition,False,True,"[""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e"", ""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
7fda935ad3b00dee511283f9bed92cd43cabcbf5,832b0c7ccef0e7e11e0663530367de1d3fb9a959,antirez,antirez@gmail.com,Thu Feb 26 10:25:15 2015 +0100,1424942715,"Improvements to PR #24251. Remove useless cs initialization.n2. Add a select var to capture a condition checked multiple times.n3. Avoid duplication of the same if (!copy) conditional.n4. Don't increment dirty if copy is given (no deletion is performed),n   otherwise we propagate MIGRATE when not needed.n",10.0,10.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4829.0,442.0,0.6223263888888889,7911.0,2.6068738492439882,3694.0,Feature Addition,False,True,"[""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
832b0c7ccef0e7e11e0663530367de1d3fb9a959,7e6b4ea67bf38595ae25bdd6aa253702a1fd5509,antirez,antirez@gmail.com,Thu Feb 26 18:31:06 2015 +0100,1424971866,server.current_client fix and minor refactoring.Thanks to @codeslinger (Toby DiPasquale) for identifying the issue.nnRelated to issue #2409.n,11.0,17.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,13.0,944.0,203.0,225.22092013888889,7912.5,1.0022233335832,3696.0,Corrective,True,,
7e6b4ea67bf38595ae25bdd6aa253702a1fd5509,c95507881acb0d8cdaf7e0a29f445ee2fdaa2c80,antirez,antirez@gmail.com,Fri Feb 27 15:20:58 2015 +0100,1425046858,Utils: added function to get radix 10 string length of signed integer.,14.0,0.0,"src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,13.0,392.0,33.0,60.709131944444465,7914.5,1.0375748051942382,3698.0,None,False,,
c95507881acb0d8cdaf7e0a29f445ee2fdaa2c80,d8f8b0575f489bba28cd2b03380bdbbbc48b6f66,antirez,antirez@gmail.com,Fri Feb 27 15:22:49 2015 +0100,1425046969,Hash: API to get value string len by field name.,23.0,1.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,785.0,36.0,5.973275462962962,7916.0,1.1674123361965234,3699.0,None,False,,
7e6b4ea67bf38595ae25bdd6aa253702a1fd5509 db9461e466afeeb9b50a80b78934144922482f5b,b49c00a79c77cc49bfe3876daf4a1de023a68a3d,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 27 15:24:04 2015 +0100,1425047044,Merge pull request #2415 from landmime/unstableadded a new hvstrlen command,,,,,,,,,,,,,,,Merge,False,,
d8f8b0575f489bba28cd2b03380bdbbbc48b6f66 b49c00a79c77cc49bfe3876daf4a1de023a68a3d,8855b8161fa08a38a8defa7968658c01facef7fc,antirez,antirez@gmail.com,Fri Feb 27 15:24:25 2015 +0100,1425047065,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
8855b8161fa08a38a8defa7968658c01facef7fc,4e54b85a19027855f05b4c825ad4ac0c71fd9fea,antirez,antirez@gmail.com,Fri Feb 27 15:30:15 2015 +0100,1425047415,"Hash: HSTRLEN (was HVSTRLEN) improved.1. HVSTRLEN -> HSTRLEN. It's unlikely one needs the length of the key,n   not clear how the API would work (by value does not make sense) andn   there will be better names anyway.n2. Default is to return 0 when field is missing.n3. Default is to return 0 when key is missing.n4. The implementation was slower than needed, and produced unnecessary COW.nnRelated issue #2415.n",17.0,24.0,"src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,tests/unit/type/hash.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.4377750645169052,13.0,1686.0,1109.0,3.7195341435185183,7918.5,1.1148181035521834,617.0,None,False,,
4e54b85a19027855f05b4c825ad4ac0c71fd9fea,0ace1e6d04c6c7cb38a5e74c4bc5e53aac891905,antirez,antirez@gmail.com,Fri Feb 27 15:37:04 2015 +0100,1425047824,Hash: HSTRLEN crash fixed when getting len of int-encoded value,1.0,1.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,802.0,38.0,0.004733796296296297,7921.0,212.24694376528115,3703.0,None,False,,
0ace1e6d04c6c7cb38a5e74c4bc5e53aac891905,084a59c324d4213772e863d949c01a7d1b621b90,antirez,antirez@gmail.com,Fri Feb 27 15:44:44 2015 +0100,1425048284,"Test: HSTRLEN stress test of corner cases.Main point here is to correctly report LLONG_MIN length, since to takenthe absolute value we need care in sdigits10().n",16.0,0.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,499.0,19.0,0.01005787037037037,7922.0,100.42462600690449,618.0,Preventative,False,,
084a59c324d4213772e863d949c01a7d1b621b90,0e5e8ca9e67dbd9e8cd943db343564d26ca7e398,antirez,antirez@gmail.com,Fri Feb 27 16:01:45 2015 +0100,1425049305,Utils: Include stdint.h and fix signess in sdigits10().,2.0,1.0,"src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,399.0,35.0,0.028321759259259262,7923.5,27.48140580302411,3705.0,None,False,,
0e5e8ca9e67dbd9e8cd943db343564d26ca7e398,4f56f035a70293be6fbc20a0545c1be53a131e7c,antirez,antirez@gmail.com,Fri Feb 27 16:08:50 2015 +0100,1425049730,"String: use new sdigits10() API in stringObjectLen().Should be much faster, and regardless, the code is more obvious nowncompared to generating a string just to get the return value of thenll2stirng() function.n",1.0,3.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,715.0,65.0,105.8312847222222,7925.0,1.009449001801544,3706.0,None,False,,
4f56f035a70293be6fbc20a0545c1be53a131e7c,c77081a45a7c350428785b6e7fafeb2b57ea4330,antirez,antirez@gmail.com,Fri Feb 27 22:33:54 2015 +0100,1425072834,Migrate: replace conditional with pre-computed value.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4829.0,443.0,1.5060069444444444,7926.0,1.6640075623083486,3707.0,None,False,,
c77081a45a7c350428785b6e7fafeb2b57ea4330,509a6cc1e89e3d988511d8595dbc47a4e04b999c,antirez,antirez@gmail.com,Wed Mar 4 11:48:16 2015 -0800,1425498496,"Fix iterator for issue #2438.Itereator misuse due to analyzeLatencyForEvent() accessing thendictionary during the iteration, without the iterator beingnreclared as safe.n",1.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,623.0,27.0,23.229814814814816,7927.0,1.0430481262107285,3708.0,Corrective,True,,
509a6cc1e89e3d988511d8595dbc47a4e04b999c,a664040eb773922bd3190bd13a272bfeb70e092e,antirez,antirez@gmail.com,Sun Mar 8 15:33:42 2015 +0100,1425825222,Config: activerehashing option support in CONFIG SET.,5.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1980.0,160.0,23.94608796296297,7928.0,1.0417604746773954,3709.0,None,False,,
a664040eb773922bd3190bd13a272bfeb70e092e,d68f28a367389ebf28cc31775e678d3e655aa660,antirez,antirez@gmail.com,Tue Mar 10 12:37:39 2015 +0100,1425987459,"CONFIG SET refactoring of bool and value fields.Not perfect since The Solution IMHO is to have a DSL with a table ofnconfiguration functions with type, limits, and aux functions to handlenthe odd ones. However this hacky macro solution is already better andnforces to put limits in the range of numerical fields.nnMore field types to be refactored in the next commits hopefully.n",101.0,149.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1985.0,161.0,1.8777430555555559,7929.0,1.5325542262245977,3710.0,Perfective,False,True,"[""c32c690de631115ed1f3534b46743a045dec4206"", ""e4e5a670e7e28485d6ba812759d7faabd90966d2"", ""d6ba4fd56d9e386abaf6926fa47ead1525ff56cb"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
d68f28a367389ebf28cc31775e678d3e655aa660,3da7408359190fe3e5f7dadce1681609439b546e,antirez,antirez@gmail.com,Tue Mar 10 13:00:33 2015 +0100,1425988833,CONFIG SET: additional 2 numerical fields refactored.,10.0,9.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1937.0,162.0,0.015902777777777776,7930.0,63.882096069869,3711.0,None,False,True,"[""1210dd8a20ae4ffea88c3c68457e7e057410110e"", ""e4e5a670e7e28485d6ba812759d7faabd90966d2""]"
3da7408359190fe3e5f7dadce1681609439b546e,6201eb0c55503310a41a0f3448d1581069624303,Michel Martens,michel@soveran.com,Tue Mar 10 16:43:19 2015 +0000,1426005799,Add command CLUSTER MYID,3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4829.0,444.0,10.798206018518519,6.0,1.0926079756475324,2.0,Feature Addition,False,,
3da7408359190fe3e5f7dadce1681609439b546e 6201eb0c55503310a41a0f3448d1581069624303,36c1a7cba311997433dbb3b3dde2439ceed5b905,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 10 17:46:09 2015 +0100,1426005969,Merge pull request #2445 from soveran/add-cluster-myidAdd command CLUSTER MYID,,,,,,,,,,,,,,,Merge,False,,
3da7408359190fe3e5f7dadce1681609439b546e,4a2a0d9e9d0112b1c870914aaeccf58ebc6c6ef2,antirez,antirez@gmail.com,Wed Mar 11 09:02:04 2015 +0100,1426060924,CONFIG SET: memory and special field macros.,39.0,29.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1938.0,163.0,0.8343865740740741,7931.0,2.198485247811793,3712.0,None,False,True,"[""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
4a2a0d9e9d0112b1c870914aaeccf58ebc6c6ef2,8e219224b9c9112806ecc868156fdc0b5e0b6d80,antirez,antirez@gmail.com,Wed Mar 11 16:59:56 2015 +0100,1426089596,CONFIG refactoring: configEnum abstraction.Still many things to convert inside config.c in the next commits.nSome const safety in String objects creation and addReply() familynfunctions.n,108.0,93.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",5.0,1.0,1.0,1.1192977974862142,13.0,1964.6,1487.0,9.885717592592592,7934.0,1.6350543547986471,3717.0,None,False,True,"[""14086a46ca69f267d909817eb6bbcd1d976d94f2"", ""e610dbce14af98cbac60ee53248788e80f1ec6a0""]"
8e219224b9c9112806ecc868156fdc0b5e0b6d80 36c1a7cba311997433dbb3b3dde2439ceed5b905,4cd4910f267d2d9b6e24ab8f5ba1d390973e2a2b,antirez,antirez@gmail.com,Wed Mar 11 17:05:14 2015 +0100,1426089914,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
4cd4910f267d2d9b6e24ab8f5ba1d390973e2a2b,535b295f96e9644bff01650c6696ea67cc6f2470,antirez,antirez@gmail.com,Wed Mar 11 17:24:55 2015 +0100,1426091095,Net: better Unix socket error. Issue #2449.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3903.0,571.0,0.017349537037037042,7937.0,58.63842561707805,3718.0,None,False,,
535b295f96e9644bff01650c6696ea67cc6f2470,50b41b6ad3beee554e49fadc667ff0e6b00dfafa,antirez,antirez@gmail.com,Wed Mar 11 23:20:57 2015 +0100,1426112457,CONFIG SET refactoring: use enums in more places.,65.0,150.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1963.0,165.0,0.26459490740740743,7938.0,4.779362232623244,3719.0,None,False,,
50b41b6ad3beee554e49fadc667ff0e6b00dfafa,792c531688d81bbb1a6f4ca1b575f7137c24c8b9,antirez,antirez@gmail.com,Thu Mar 12 09:59:10 2015 +0100,1426150750,CONFIG GET syslog-facility added.Was missing for some reason. Trivial to add after config.c refactoring.n,2.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1878.0,166.0,0.44320601851851854,7939.0,3.2562870498524528,3720.0,Feature Addition,False,,
792c531688d81bbb1a6f4ca1b575f7137c24c8b9,b2e8eca70d3cf0c52c251f5a0a050d13846336a1,antirez,antirez@gmail.com,Thu Mar 12 14:43:07 2015 +0100,1426167787,Config: improve loglevel message error.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1880.0,167.0,0.1971875,7940.0,6.071315372424723,3721.0,None,False,,
b2e8eca70d3cf0c52c251f5a0a050d13846336a1,e1b6c9dd1839f5ce46ce06e87f6b4095e3f92a4f,antirez,antirez@gmail.com,Fri Mar 13 11:26:04 2015 +0100,1426242364,Cluster: CLUSTER NODES speedup.,32.0,16.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4832.0,445.0,2.738020833333333,7941.0,1.3652273159596728,3722.0,None,False,,
e1b6c9dd1839f5ce46ce06e87f6b4095e3f92a4f,4ed7582c7ba37dae64491e52f8b0d310e95298b8,antirez,antirez@gmail.com,Fri Mar 13 11:32:51 2015 +0100,1426242771,Cluster: ignore various node files in create-cluster dir.,4.0,0.0,"utils/create-cluster/.gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,1.0,1.0,38.08230324074074,7942.0,1.0262589159504982,65.0,None,False,,
4ed7582c7ba37dae64491e52f8b0d310e95298b8,93b1320fac8eae53fd9fca570a1784cbd2a89d27,antirez,antirez@gmail.com,Fri Mar 13 13:16:30 2015 +0100,1426248990,Cluster: fix CLUSTER NODES optimization error in 'j' increment.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4848.0,446.0,0.07668981481481481,7943.0,14.039541201328099,3723.0,None,False,,
93b1320fac8eae53fd9fca570a1784cbd2a89d27,e791e2dda19b83307790527ecd5f0086322a1478,antirez,antirez@gmail.com,Fri Mar 13 17:30:13 2015 +0100,1426264213,"Test: fix SPOP replication test count.If count is 0 SADD is called without element arguments, which isncurrently invalid.n",1.0,1.0,"tests/integration/replication-4.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,155.0,7.0,30.281388888888888,7944.0,1.0330235843431517,619.0,Preventative,False,,
e791e2dda19b83307790527ecd5f0086322a1478 d5e01519e5348ddb9166473f465dfc2dfab303ac,61fb441c8c9b350a48b9f5c3f69a3ce23aa3f9e8,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 13 18:23:36 2015 +0100,1426267416,Merge pull request #2386 from inkel/sentinel-add-client-commandSupport CLIENT commands in Redis Sentinel,,,,,,,,,,,,,,,Merge,False,,
61fb441c8c9b350a48b9f5c3f69a3ce23aa3f9e8,438a1a84e8aa37a19a744c38488b261dd62c145c,antirez,antirez@gmail.com,Wed Mar 18 12:09:31 2015 +0100,1426676971,Cluster: more robust slave check in CLUSTER REPLICATE.There are rare conditions where node->slaveof may be NULL even if thennode is a slave. To check by flag is much more robust.n,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4848.0,447.0,4.953483796296296,7945.0,1.2018781207576972,3724.0,None,False,,
438a1a84e8aa37a19a744c38488b261dd62c145c,2ecb5edf3454e3752a428e50b6ee068e357c7fae,antirez,antirez@gmail.com,Fri Mar 20 09:46:10 2015 +0100,1426841170,Cluster: move clusterBeforeSleep() call before unblocked clients processing.Related to issue #2288.n,6.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3903.0,572.0,8.68142361111111,7946.0,1.1151884811518848,3725.0,None,False,True,"[""d544600aa524e008338bf690ced7377876d5a657""]"
2ecb5edf3454e3752a428e50b6ee068e357c7fae,25c0f5ac63320e85f81750bd0f999fc6f5eba5c1,antirez,antirez@gmail.com,Fri Mar 20 09:57:10 2015 +0100,1426841830,"Cluster: better cluster state transiction handling.Before we relied on the global cluster state to make sure all the hashnslots are linked to some node, when getNodeByQuery() is called. Sonfinding the hash slot unbound was checked with an assertion. Howevernthis is fragile. The cluster state is often updated in thenclusterBeforeSleep() function, and not ASAP on state change, so it maynhappen to process clients with a cluster state that is 'ok' but yetncertain hash slots set to NULL.nnWith this commit the condition is also checked in getNodeByQuery() andnreported with a identical error code of -CLUSTERDOWN but slightlyndifferent error message so that we have more debugging clue in thenfuture.nnRoot cause of issue #2288.n",21.0,2.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",3.0,1.0,1.0,0.6784070909375675,13.0,3002.0,1049.0,22.63310185185185,7948.0,1.1845137522586968,3728.0,None,False,,
25c0f5ac63320e85f81750bd0f999fc6f5eba5c1,4f2555aa17504b1f99a5f35a69302cc425b30d74,antirez,antirez@gmail.com,Fri Mar 20 16:42:49 2015 +0100,1426866169,"Cluster: refactoring around configEpoch handling.This commit moves the process of generating a new config epoch withoutnconsensus out of the clusterCommand() implementation, in order to makenit reusable for other reasons (current target is to have a CLUSTERnFAILOVER option forcing the failover when no master majority isnreachable).nnMoreover the commit moves other functions which are similarly related tonconfig epochs in a new logical section of the cluster.c file, just fornclarity.n",157.0,124.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4864.0,449.0,0.2817013888888889,7950.0,4.549858252187847,3729.0,None,False,True,"[""36704d653bdb26c1e801eac904828242ad37d11c""]"
4f2555aa17504b1f99a5f35a69302cc425b30d74,230d14142032bd054efceab21801068b5aa8a330,antirez,antirez@gmail.com,Fri Mar 20 16:56:44 2015 +0100,1426867004,Cluster: separate unknown master check from the rest.In no case we should try to attempt to failover if myself->slaveof isnNULL.n,5.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4897.0,450.0,0.009664351851851851,7951.0,104.47305389221556,3730.0,None,False,,
230d14142032bd054efceab21801068b5aa8a330,a7010ae20813658c5cd3b6f1a6651ec5cb0909e2,antirez,antirez@gmail.com,Fri Mar 20 17:55:22 2015 +0100,1426870522,Cluster: non-conditional steps of slave failover refactored into a function.,40.0,27.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4900.0,451.0,0.04071759259259259,7952.0,25.559408754974427,3731.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
a7010ae20813658c5cd3b6f1a6651ec5cb0909e2,5fe4a2313177a8c9bcd231dacda38317da17a3cf,antirez,antirez@gmail.com,Sat Mar 21 09:03:46 2015 +0100,1426925026,"Net: clientsArePaused() should not touch blocked clients.When the list of unblocked clients were processed, btype was set tonblocking type none, but the client remained flagged with REDIS_BLOCKED.nWhen timeout is reached (or when the client disconnects), unblocking itnwill trigger an assertion.nnThere is no need to process pending requests from blocked clients, sonnow clientsArePaused() just avoid touching blocked clients.nnClose #2467.n",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1726.0,202.0,9.669328703703703,7953.0,1.1034197957937828,3732.0,None,False,,
5fe4a2313177a8c9bcd231dacda38317da17a3cf,2b278a3394ab6b32b4bdcb7db56323649622f784,antirez,antirez@gmail.com,Sat Mar 21 09:13:29 2015 +0100,1426925609,"Net: processUnblockedClients() and clientsArePaused() minor changes.1. No need to set btype in processUnblockedClients(), since clientsn   flagged REDIS_UNBLOCKED should have it already cleared.n2. When putting clients in the unblocked clients list, clientsArePaused()n   should flag them with REDIS_UNBLOCKED. Not strictly needed with then   current code but is more coherent.n",6.0,2.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,13.0,941.0,207.0,11.309756944444445,7954.5,1.0442162110867366,3734.0,None,False,True,"[""e3dfd8c811e12b6b1d3f7febf732b23fdaab497b""]"
2b278a3394ab6b32b4bdcb7db56323649622f784,d544600aa524e008338bf690ced7377876d5a657,antirez,antirez@gmail.com,Sat Mar 21 09:19:02 2015 +0100,1426925942,Fix typo in beforeSleep() comment.,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3908.0,574.0,0.9735185185185186,7956.0,2.0272018261365803,3735.0,Corrective,True,,
d544600aa524e008338bf690ced7377876d5a657,2950824ab67e5fef59aae87bf4c0ada8ab39d570,antirez,antirez@gmail.com,Sat Mar 21 11:54:32 2015 +0100,1426935272,Cluster: TAKEOVER option for manual failover.,20.0,7.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4913.0,452.0,0.7494212962962963,7957.0,2.3343629343629337,3736.0,None,False,,
2950824ab67e5fef59aae87bf4c0ada8ab39d570,94030fa4d7962a8e241ad27cadbc71a0f1b61d1b,antirez,antirez@gmail.com,Sat Mar 21 12:12:23 2015 +0100,1426936343,Two cluster.c comments improved.,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4926.0,453.0,0.012395833333333332,7958.0,81.67226890756302,3737.0,None,False,,
94030fa4d7962a8e241ad27cadbc71a0f1b61d1b,2f4240b9d9e36b83fcd6bf2525484effabe69298,antirez,antirez@gmail.com,Sun Mar 22 22:23:41 2015 +0100,1427059421,Cluster: fix Lua scripts replication to slave nodes.,5.0,2.0,"src/redis.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,13.0,2554.0,681.0,31.252824074074073,7959.5,1.3316456933925689,3739.0,None,False,,
2f4240b9d9e36b83fcd6bf2525484effabe69298,3b4de6aa18b9937632c1e18042a11f5c8ce5b4b6,antirez,antirez@gmail.com,Sun Mar 22 22:24:49 2015 +0100,1427059489,Cluster: new tests1 for manual failover and scripts replication.,95.0,0.0,"tests/cluster/tests/10-manual-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7961.0,0.0,620.0,None,False,,
3b4de6aa18b9937632c1e18042a11f5c8ce5b4b6,631538cfe06c16c3e12fae63d1d81a26ce73070e,antirez,antirez@gmail.com,Sun Mar 22 22:44:02 2015 +0100,1427060642,Cluster: more tests for manual failover + FORCE.,93.0,1.0,"tests/cluster/tests/10-manual-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,95.0,1.0,0.013344907407407408,7962.0,75.93495229835213,621.0,None,False,,
631538cfe06c16c3e12fae63d1d81a26ce73070e,f300680408c3c444f773dd0de27f8641d4cb7184,antirez,antirez@gmail.com,Sun Mar 22 22:44:23 2015 +0100,1427060663,Cluster: CLUSTER FAILOVER TAKEOVER tests.,59.0,0.0,"tests/cluster/tests/11-manual-takeover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7963.0,0.0,622.0,None,False,,
f300680408c3c444f773dd0de27f8641d4cb7184,9b0bcf25e1407a610f71704db17394e6d6be6622,antirez,antirez@gmail.com,Sun Mar 22 22:58:53 2015 +0100,1427061533,Cluster: unit 10 modified to leave cluster in proper state.,5.0,0.0,"tests/cluster/tests/10-manual-failover.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,187.0,2.0,0.0103125,7964.0,97.96969696969695,623.0,None,False,,
9b0bcf25e1407a610f71704db17394e6d6be6622,761fc16b4a98f3be56d1bd5079a4880bd44d37f8,superlogical,jake.net@gmail.com,Tue Mar 24 09:44:52 2015 +1300,1427143492,create-cluster fix for stop and watch commands,2.0,2.0,"utils/create-cluster/create-cluster,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,95.0,3.0,52.460497685185175,0.0,0.0,0.0,Corrective,True,,
9b0bcf25e1407a610f71704db17394e6d6be6622 761fc16b4a98f3be56d1bd5079a4880bd44d37f8,eff68bd656e09b33b1edc6ff927c2cf06978a503,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 24 09:07:22 2015 +0100,1427184442,Merge pull request #2470 from superlogical/unstablecreate-cluster fix for stop and watch commands,,,,,,,,,,,,,,,Merge,False,,
eff68bd656e09b33b1edc6ff927c2cf06978a503,9b7f8b1c9b379ab842d40df4636dfbbeb6376fcb,antirez,antirez@gmail.com,Tue Mar 24 11:07:10 2015 +0100,1427191630,"Cluster: redirection refactoring + handling of blocked clients.There was a bug in Redis Cluster caused by clients blocked in a blockingnlist pop operation, for keys no longer handled by the instance, ornin a condition where the cluster became down after the client blocked.nnA typical situation is:nn1) BLPOP <somekey> 0n2) <somekey> hash slot is resharded to another master.nnThe client will block forever int this case.nnA symmentrical non-cluster-specific bug happens when an instance isnturned from master to slave. In that case it is more serious since thisnwill desynchronize data between slaves and masters. This other bug wasndiscovered as a side effect of thinking about the bug explained andnfixed in this commit, but will be fixed in a separated commit.n",102.0,29.0,"src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",4.0,1.0,1.0,1.2166075698511367,13.0,2311.25,1064.0,2.9031163194444445,7966.5,1.1689554323461115,3743.0,None,False,True,"[""d303bca58787300efe29212940e7806ee625ae9f"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
9b7f8b1c9b379ab842d40df4636dfbbeb6376fcb,c3ad70901f962808a1c0c474951406af81d26a3f,antirez,antirez@gmail.com,Tue Mar 24 16:00:09 2015 +0100,1427209209,"Replication: disconnect blocked clients when switching to slave role.Bug as old as Redis and blocking operations. It's hard to trigger sincenonly happens on instance role switch, but the results are quite badnsince an inconsistency between master and slave is created.nnHow to trigger the bug is a good description of the bug itself.nn1. Client does BLPOP mylist 0 in master.n2. Master is turned into slave, that replicates from New-Master.n3. Client does LPUSH mylist foo in New-Master.n4. New-Master propagates write to slave.n5. Slave receives the LPUSH, the blocked client get served.nnNow Master mylist key has foo, Slave mylist key is empty.nnHighlights:nn* At step 2 above, the client remains attached, basically escaping anyn  check performed during command dispatch: read only slave, in that case.n* At step 5 the slave (that was the master), serves the blocked clientn  consuming a list element, which is not consumed on the master side.nnThis scenario is technically likely to happen during failovers, howevernsince Redis Sentinel already disconnects clients using the CLIENTncommand when changing the role of the instance, the bug is avoided innSentinel deployments.nnCloses #2473.n",26.0,0.0,"src/blocked.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,0.4681666405523326,13.0,1270.6666666666667,638.0,20.451060956790126,7970.0,2.6690770111423068,3746.0,None,False,,
c3ad70901f962808a1c0c474951406af81d26a3f,9cd8333ed283689b028a062fc43820fcf15fa81c,antirez,antirez@gmail.com,Fri Mar 27 10:10:22 2015 +0100,1427447422,"dict.c: add casting to avoid compilation warning.rehashidx is always positive in the two code paths, since the onlynnegative value it could have is -1 when there is no rehashing innprogress, and the condition is explicitly checked.n",1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1128.0,59.0,44.46608796296297,7972.0,1.0224890483019988,3747.0,None,False,,
9cd8333ed283689b028a062fc43820fcf15fa81c,068d3c9737b368f921808e753f6f000a12ca5ae8,antirez,antirez@gmail.com,Fri Mar 27 10:14:52 2015 +0100,1427447692,"dict.c: convert types to unsigned long where appropriate.No semantical changes since to make dict.c truly able to scale over then32 bit table size limit, the hash function shoulds and other internalsnrelated to hash function output should be 64 bit ready.n",7.0,7.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1128.0,60.0,0.003125,7973.0,321.0,3748.0,None,False,,
068d3c9737b368f921808e753f6f000a12ca5ae8,37260bc3bed5fb46649262789c65089ab7de0dc6,antirez,antirez@gmail.com,Fri Mar 27 12:10:46 2015 +0100,1427454646,Test: regression for issue #2473.,44.0,8.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,179.0,27.0,123.0110300925926,7974.0,1.0081293522966783,624.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
37260bc3bed5fb46649262789c65089ab7de0dc6,221d2932b51dc605130130369301c92f34336987,antirez,antirez@gmail.com,Mon Mar 30 11:54:49 2015 +0200,1427709289,Ensure array index is in range in addReplyLongLongWithPrefix().Change done in order to remove a warning and improve code robustness. Nonactual bug here.n,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1731.0,204.0,9.07037037037037,7975.0,1.1102490812576562,3749.0,Corrective,True,,
221d2932b51dc605130130369301c92f34336987,34460dd6ee0c9ae6561de54f1005f493bfcc543c,antirez,antirez@gmail.com,Mon Mar 30 12:17:46 2015 +0200,1427710666,Check bio.c job type at thread startup.Another one just to avoid a warning. Slightly more defensive codenanyway.n,7.0,0.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,220.0,19.0,802.7204398148148,7976.0,1.0012457637184755,3750.0,None,False,,
34460dd6ee0c9ae6561de54f1005f493bfcc543c,7f330b16f93d9feed0113e928a1b96f182b73e45,antirez,antirez@gmail.com,Mon Mar 30 12:24:57 2015 +0200,1427711097,"Set: setType*() API more defensive initializing both values.This change fixes several warnings compiling at -O3 level with GCCn4.8.2, and at the same time, in case of misuse of the API, we have thenpointer initialize to NULL or the integer initialized to the valuen-123456789 which is easy to spot by naked eye.n",6.0,0.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,951.0,44.0,47.05103009259259,7977.0,1.0212535198067307,3751.0,None,False,,
7f330b16f93d9feed0113e928a1b96f182b73e45,65090401b713a074b5261342e3079754377b6bbf,antirez,antirez@gmail.com,Mon Mar 30 14:29:01 2015 +0200,1427718541,Sentinel / Cluster test: exit with non-zero error code on failures.,16.0,0.0,"tests/cluster/run.tcl,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER",3.0,1.0,3.0,0.6685644431995964,13.0,161.0,23.0,125.4699074074074,7979.0,1.008271184895798,627.0,Preventative,False,,
65090401b713a074b5261342e3079754377b6bbf,66f9393ee4d526e27df38e7b610daef30a4c89bd,antirez,antirez@gmail.com,Tue Mar 31 15:22:56 2015 +0200,1427808176,Fix setTypeNext call assuming NULL can be passed.Segfault introduced during a refactoring / warning suppression a fewncommits away. This particular call assumed that it is safe to pass NULLnto the object pointer argument when we are sure the set has a givennencoding. This can't be assumed and is now guaranteed to segfaultnbecause of the new API of setTypeNext().n,10.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,957.0,45.0,1.123599537037037,7981.0,1.88999680672442,3752.0,Corrective,True,,
66f9393ee4d526e27df38e7b610daef30a4c89bd,159875b5a3a8dd7780aadbf1f7674061fc760920,Oran Agra,oran@redislabs.com,Tue Mar 31 23:42:08 2015 +0300,1427834528,"fixes to diskless replication. master was closing the connection if the RDB transfer took long time. and also sent PINGs to the slave before it got the initial ACK, in which case the slave wouldn't be able to find the EOF marker.",2.0,1.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,1927.0,351.0,4.343506944444443,0.5,0.5575571774599698,1.0,Corrective,True,,
66f9393ee4d526e27df38e7b610daef30a4c89bd,386804246f35e27a8db0d31fd0badd85cc6ecc04,antirez,antirez@gmail.com,Tue Mar 31 23:43:38 2015 +0200,1427838218,Test: be more patient waiting for servers to exit.This should likely fix a false positive when running with the --valgrindnoption.n,6.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,322.0,43.0,77.22787037037038,7982.0,1.0129486932010967,628.0,Preventative,False,,
386804246f35e27a8db0d31fd0badd85cc6ecc04 159875b5a3a8dd7780aadbf1f7674061fc760920,d5a35c39468f7a8d1890ee61070d68a1e3a5cda1,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 1 09:43:34 2015 +0200,1427874214,Merge pull request #2485 from oranagra/diskless-repl-fixesfixes to diskless replication.,,,,,,,,,,,,,,,Merge,False,,
d5a35c39468f7a8d1890ee61070d68a1e3a5cda1,6c60526db91e23fb2d666fc52facc9a11780a2a3,antirez,antirez@gmail.com,Wed Apr 1 10:07:08 2015 +0200,1427875628,"Net: improve prepareClientToWrite() error handling and comments.When we fail to setup the write handler it does not make sense to takenthe client around, it is missing writes: whatever is a client or a slavenanyway the connection should terminated ASAP.nnMoreover what the function does exactly with its return value, and innwhich case the write handler is installed on the socket, was not clear,nso the functions comment are improved to make the goals of the functionnmore obvious.nnAlso related to #2485.n",37.0,10.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.6071716548713029,13.0,1927.5,353.0,0.4756944444444444,7983.5,2.576642335766423,3754.0,None,False,True,"[""69c30965eb15ed86acadd8e9db79feb7b7633497""]"
6c60526db91e23fb2d666fc52facc9a11780a2a3,626b4f69078276e35ed947e0d4ebd704e7f09992,Glenn Nethercutt,glenn.nethercutt@inin.com,Fri Apr 17 09:27:54 2015 -0400,1429277274,"uphold the smove contract to return 0 when the element is not a member of the source set, even if source=dest",5.0,1.0,"src/t_set.c,CAS_DELIMITER,tests/unit/type/set.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6500224216483541,13.0,782.5,70.0,41.090578703703706,0.5,0.5060841197151956,0.0,None,False,,
6c60526db91e23fb2d666fc52facc9a11780a2a3,42b36c5ce9071ebdfd5580fa0499a7bf354f1841,FuGangqiang,fu_gangqiang@163.com,Sun Apr 19 23:42:27 2015 +0800,1429458147,fix typo,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1112.0,58.0,102.26175925925926,0.0,0.0,0.0,Corrective,True,,
42b36c5ce9071ebdfd5580fa0499a7bf354f1841,239494db645c6ed87e605cc4b0a10db78b50e5cd,FuGangqiang,fu_gangqiang@163.com,Mon Apr 20 21:46:48 2015 +0800,1429537608,fix doc example,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1112.0,59.0,0.9196875,1.0,2.08732585796806,1.0,Corrective,True,,
239494db645c6ed87e605cc4b0a10db78b50e5cd,26a1a08fc798fb36c8086138b5f78119aa8c0e21,FuGangqiang,fu_gangqiang@163.com,Mon Apr 20 23:03:34 2015 +0800,1429542214,sdsfree x and y,3.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1112.0,60.0,0.05331018518518518,2.0,19.758141554494138,2.0,None,False,,
6c60526db91e23fb2d666fc52facc9a11780a2a3,921ca063f70b6e725ca6159a00aa02d8af1e4181,Itamar Haber,itamar@garantiadata.com,Tue Apr 21 18:54:49 2015 +0300,1429631689,update copyright year,1.0,1.0,"COPYING,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,10.0,3.0,442.2388310185185,0.0,0.0,0.0,None,False,,
6c60526db91e23fb2d666fc52facc9a11780a2a3,066d7a29ebe5a5a2a567f15e65a6689ff71e8248,Itamar Haber,itamar@garantiadata.com,Fri Apr 24 01:33:41 2015 +0300,1429828421,Added reference to IANA ticket for port 6379Just so it's extra official :smile:,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,991.0,156.0,63.03204861111111,1.0,1.0158649452466586,1.0,Feature Addition,False,,
6c60526db91e23fb2d666fc52facc9a11780a2a3 066d7a29ebe5a5a2a567f15e65a6689ff71e8248,b100fee900d0091083233aa16a4e87d80066fb59,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 24 09:05:14 2015 +0200,1429859114,Merge pull request #2539 from itamarhaber/patch-4Added reference to IANA ticket for port 6379,,,,,,,,,,,,,,,Merge,False,,
b100fee900d0091083233aa16a4e87d80066fb59,49c1b60bd8cbca6bbec7a171645dfeb67c1a7ddf,Yossi Gottlieb,yossigo@gmail.com,Sun Apr 26 12:04:16 2015 +0300,1430039056,Fix Redis server crash when Lua command exceeds client output buffer limit.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1757.0,207.0,25.03967592592593,5.0,1.0399366191063442,4.0,Corrective,True,,
6c60526db91e23fb2d666fc52facc9a11780a2a3,1a93501f8baebfb44bc2548b2026d47c3cc91d1f,antirez,antirez@gmail.com,Sun Apr 26 19:23:24 2015 +0200,1430069004,Example redis.conf doc about pidfile fixed.An user changed the behavior via a PR without upgrading the doc.n,9.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,991.0,157.0,2.784525462962963,7985.0,1.3591276191584607,1368.0,Corrective,True,,
1a93501f8baebfb44bc2548b2026d47c3cc91d1f b100fee900d0091083233aa16a4e87d80066fb59,1d6eb701d8cd4265ff657f1a27dee55c7293117b,antirez,antirez@gmail.com,Mon Apr 27 12:05:32 2015 +0200,1430129132,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1d6eb701d8cd4265ff657f1a27dee55c7293117b,1b25757f415d6e6da0cdf1769f94f8e318e5be25,antirez,antirez@gmail.com,Mon Apr 27 12:07:49 2015 +0200,1430129269,sha1.c: use standard uint32_t.,11.0,11.0,"src/sha1.c,CAS_DELIMITER,src/sha1.h,CAS_DELIMITER",2.0,1.0,1.0,0.9456603046006402,13.0,125.5,7.0,136.64390625,7986.5,1.0064596318240713,3756.0,None,False,,
1b25757f415d6e6da0cdf1769f94f8e318e5be25,3ff49afff1bf9b0d84d8ad53fb2d6b9b5d4b039c,Jan-Erik Rediger,janerik@fnordig.de,Tue Apr 28 11:07:21 2015 +0200,1430212041,Fix spelling and grammatical errors in readmeCloses #2549n,3.0,3.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,191.0,8.0,73.78929398148149,26.0,1.013552101477634,5.0,Corrective,True,,
3ff49afff1bf9b0d84d8ad53fb2d6b9b5d4b039c,fb53288110b6a55802999a1e9f036abefc02e01d,Jan-Erik Rediger,janerik@fnordig.de,Tue Apr 28 15:21:11 2015 +0200,1430227271,One more small fix,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,191.0,9.0,0.17627314814814815,27.0,6.67301378857518,6.0,Corrective,True,,
1b25757f415d6e6da0cdf1769f94f8e318e5be25,eff212ea959e27058df2d459f8acbe690376b888,clark.kang,clark.kang@kakao.com,Wed Apr 29 00:05:26 2015 +0900,1430233526,fix sentinel memory leak,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3975.0,181.0,84.7424537037037,1.0,1.0118004607642874,1.0,Corrective,True,,
1b25757f415d6e6da0cdf1769f94f8e318e5be25,c806dd799bc8f3c578581194d499b50acec44b7d,antirez,antirez@gmail.com,Tue Apr 28 22:10:23 2015 +0200,1430251823,"Fix Sentinel memory leak (hiredis bug)This fixes issue #2535, that was actually an hiredis library bug (Insubmitted an issue and fix to the redis/hiredis repo as well).nnWhen an asynchronous hiredis connection subscribes to a Pub/Sub channelnand gets an error, and in other related conditions, the functionnredisProcessCallbacks() enters a code path where the link isndisconnected, however the function returns before freeing the allocatednreply object. This causes a memory leak. The memory leak was trivial tontrigger in Redis Sentinel, which uses hiredis, every time we tried tonsubscribe to an instance that required a password, in case the Sentinelnwas configured either with the wrong password or without password atnall. In this case, the -AUTH error caused the leaking code path to benexecuted.nnIt was verified with Valgrind that after this change the leak no longernhappens in Sentinel with a misconfigured authentication password.n",1.0,0.0,"deps/hiredis/async.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,698.0,7.0,369.03853009259257,7988.0,1.002709744155303,714.0,Corrective,True,,
c806dd799bc8f3c578581194d499b50acec44b7d fb53288110b6a55802999a1e9f036abefc02e01d,fe0d71d52f53ec8675e8bbcfe4efc4e6f45771c0,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 29 10:06:46 2015 +0200,1430294806,Merge pull request #2550 from badboy/readme-fixesFix spelling and grammatical errors in readme,,,,,,,,,,,,,,,Merge,False,,
c806dd799bc8f3c578581194d499b50acec44b7d,9e7f39d29dbd382212478f1c425ca4dcba89228b,antirez,antirez@gmail.com,Wed Apr 29 10:33:21 2015 +0200,1430296401,Add header guard for ziplist.hAs suggested in #2543.n,5.0,0.0,"src/ziplist.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,51.0,7.0,158.52859953703702,7989.0,1.0063080100557271,3757.0,Feature Addition,False,,
9e7f39d29dbd382212478f1c425ca4dcba89228b fe0d71d52f53ec8675e8bbcfe4efc4e6f45771c0,7af420e78dea827fdc37d51da47b2b3b7e4bc63e,antirez,antirez@gmail.com,Wed Apr 29 10:34:08 2015 +0200,1430296448,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
7af420e78dea827fdc37d51da47b2b3b7e4bc63e eff212ea959e27058df2d459f8acbe690376b888,827d07f005c8fcdfa839d9541e7f2c2a9d4aa0fd,Salvatore Sanfilippo,antirez@gmail.com,Mon May 4 12:17:41 2015 +0200,1430734661,Merge pull request #2551 from charsyam/feature/sentinel-memory-leak-1fix sentinel memory leak,,,,,,,,,,,,,,,Merge,False,,
827d07f005c8fcdfa839d9541e7f2c2a9d4aa0fd 49c1b60bd8cbca6bbec7a171645dfeb67c1a7ddf,22d00d80cee85219a2c6e489592b4d8b86c16bd4,Salvatore Sanfilippo,antirez@gmail.com,Mon May 4 12:19:44 2015 +0200,1430734784,Merge pull request #2542 from yossigo/lua_client_buffer_crashFix Redis server crash when Lua command exceeds client output buffer limit.,,,,,,,,,,,,,,,Merge,False,,
22d00d80cee85219a2c6e489592b4d8b86c16bd4,99c93f34a76fd7b64847bdbb5b8828f3bb5ea09e,antirez,antirez@gmail.com,Mon May 4 12:50:44 2015 +0200,1430736644,"Sentinel: remove useless sentinelFlushConfig() callTo rewrite the config in the loop that adds slaves back after a masternreset, in order to handle switching to another master, is useless: itnjust adds latency since there is an fsync call in the inner loop,nwithout providing any additional guarantee, but the contrary, since ifnafter the first loop iteration the server crashes we end with just ansingle slave entry losing all the other informations.nnIt is wiser to rewrite the config at the end when the full newnstate is configured.n",1.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3976.0,182.0,5.823125,7990.0,1.1717290973489325,3758.0,None,False,,
99c93f34a76fd7b64847bdbb5b8828f3bb5ea09e,cc799d253fc16f9f9dbc5f32269da0e90d78409f,therealbill,therealbill@me.com,Thu Apr 23 11:56:15 2015 -0500,1429808175,"Making sentinel flush config on +slaveOriginally, only the +slave event which occurs when a slave isnreconfigured during sentinelResetMasterAndChangeAddress triggers a flushnof the config to disk.  However, newly discovered slaves don'tnapparently trigger this flush but do trigger the +slave event issuance.nnSo if you start up a sentinel, add a master, then add a slave to thenmaster (as a way to reproduce it) you'll see the +slave event issued,nbut the sentinel config won't be updated with the known-slave entry.nnThis change makes sentinel do the flush of the config if a new slave isndeteted in sentinelRefreshInstanceInfo.n",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3973.0,183.0,-10.746168981481485,0.0,0.0,0.0,Feature Addition,False,,
cc799d253fc16f9f9dbc5f32269da0e90d78409f 921ca063f70b6e725ca6159a00aa02d8af1e4181,5a23ef88bfada3c1998c51dcb4aba9fdf8ad32b0,Salvatore Sanfilippo,antirez@gmail.com,Mon May 4 12:56:02 2015 +0200,1430736962,Merge pull request #2534 from itamarhaber/patch-3update copyright year,,,,,,,,,,,,,,,Merge,False,,
5a23ef88bfada3c1998c51dcb4aba9fdf8ad32b0 26a1a08fc798fb36c8086138b5f78119aa8c0e21,8af99d0c09324598faf9f8e5b9aa300fc913ff3c,Salvatore Sanfilippo,antirez@gmail.com,Mon May 4 13:00:02 2015 +0200,1430737202,Merge pull request #2530 from FuGangqiang/unstablefix sds.c,,,,,,,,,,,,,,,Merge,False,,
8af99d0c09324598faf9f8e5b9aa300fc913ff3c,9f9c44feef1b68bb443270118570c030c04b0085,antirez,antirez@gmail.com,Tue May 5 11:17:40 2015 +0200,1430817460,Fix order of release scripts.,32.0,32.0,"utils/releasetools/00_test_release.sh,CAS_DELIMITER,utils/releasetools/03_release_hash.sh,CAS_DELIMITER,utils/releasetools/03_test_release.sh,CAS_DELIMITER,utils/releasetools/04_release_hash.sh,CAS_DELIMITER",4.0,1.0,1.0,1.8112781244591327,6.0,8.0,5.0,113.84913483796295,7992.5,1.0027446995457356,69.0,Corrective,True,,
8af99d0c09324598faf9f8e5b9aa300fc913ff3c,8d18692018fb8125df354898e26fda85ca30a47f,clark.kang,clark.kang@kakao.com,Tue May 5 22:51:27 2015 +0900,1430833887,fix compile error for struct msghdr,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3898.0,577.0,42.15575231481481,2.0,1.023721555068739,2.0,Corrective,True,,
9f9c44feef1b68bb443270118570c030c04b0085,f7bd816bbbcb5bb944750c10d798b6b9e63e1d3b,antirez,antirez@gmail.com,Tue May 5 16:32:53 2015 +0200,1430836373,Don't put clients into unblocked list multiple times,6.0,2.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,181.0,7.0,41.98106481481481,7995.0,1.023820262883068,3759.0,None,False,,
f7bd816bbbcb5bb944750c10d798b6b9e63e1d3b,2bc1527a9564cf9d7776fc817b8dc13c3e53c1b0,antirez,antirez@gmail.com,Tue May 5 16:35:44 2015 +0200,1430836544,processUnblockedClients: don't process clients that blocekd again,8.0,3.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,185.0,8.0,0.0019791666666666677,7996.0,506.26315789473676,3760.0,None,False,,
2bc1527a9564cf9d7776fc817b8dc13c3e53c1b0,23e304e3132b575d49c3b4c409fec0e40aa602c9,antirez,antirez@gmail.com,Tue May 5 16:36:35 2015 +0200,1430836595,Substitute DISQUE to REDIS after merge from DisqueProbably this stuff should be called CLIENT_* in order to cross mergenmore easily.n,1.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,190.0,9.0,0.0005902777777777778,7997.0,1695.1176470588236,3761.0,Non Functional,False,,
23e304e3132b575d49c3b4c409fec0e40aa602c9 8d18692018fb8125df354898e26fda85ca30a47f,0610cb62964b86c45028f7704cbe4f97e92853f5,Salvatore Sanfilippo,antirez@gmail.com,Tue May 5 18:44:46 2015 +0200,1430844286,Merge pull request #2564 from charsyam/feature/compile-error-freebsd-1fix compile error for struct msghdr in FreeBSD 10,,,,,,,,,,,,,,,Merge,False,,
23e304e3132b575d49c3b4c409fec0e40aa602c9,794fc4c9a8b2e4721196df341b84cb0569ab0efa,antirez,antirez@gmail.com,Wed May 6 16:19:14 2015 +0200,1430921954,"Sentinel: persist its unique ID across restarts.Previously Sentinels always changed unique ID across restarts, relyingnon the server.runid field. This is not a good idea, and forced Sentinelnto rely on detection of duplicated Sentinels and a potentially dangerousnclean-up and re-add operation of the Sentinel instance that wasnrebooted.nnNow the ID is generated at the first start and persisted in thenconfiguration file, so that a given Sentinel will have its uniquenID forever (unless the configuration is manually deleted or there is anfilesystem corruption).n",42.0,17.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3974.0,184.0,12.890960648148148,7998.0,1.0775737376984122,3762.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
794fc4c9a8b2e4721196df341b84cb0569ab0efa,a0cd75cd1b441915655eac070bd7f93cfa0f7990,antirez,antirez@gmail.com,Thu May 7 10:03:40 2015 +0200,1430985820,"Sentinel: don't detect duplicated Sentinels, just address switchSince with a previous commit Sentinels now persist their unique ID, wenno longer need to detect duplicated Sentinels and re-add them. We removenand re-add back using different events only in the case of addressnswitch of the same Sentinel, without generating a new +sentinel event.n",17.0,26.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3999.0,185.0,0.7391898148148148,7999.0,2.3528324930322864,3763.0,None,False,,
a0cd75cd1b441915655eac070bd7f93cfa0f7990,b849886a0df86f17d8c2f4be35f503c58dd5d178,antirez,antirez@gmail.com,Fri May 8 17:04:01 2015 +0200,1431097441,Sentinel: clarify arguments of SENTINEL IS-MASTER-DOWN-BY-ADDR,17.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3990.0,186.0,1.2919097222222222,8000.0,1.7740478942134543,3764.0,None,False,,
b849886a0df86f17d8c2f4be35f503c58dd5d178,b91434cab122f7760b7ae4b5c514eda17e644ac8,antirez,antirez@gmail.com,Fri May 8 17:12:13 2015 +0200,1431097933,Sentinel: Use privdata instead of c->data in sentinelReceiveHelloMessages()This way we may later share the hiredis link c among the same Sentinelninstance referenced multiple times for multiple masters.n,4.0,6.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4006.0,187.0,0.005694444444444446,8001.0,176.60975609756096,3765.0,None,False,,
b91434cab122f7760b7ae4b5c514eda17e644ac8,3eca0752a68e6b2185c35ed95b053f7f3562b618,antirez,antirez@gmail.com,Fri May 8 17:15:26 2015 +0200,1431098126,"Sentinel: generate +sentinel again, removed in prev commit.",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4004.0,188.0,0.0022337962962962962,8002.0,448.66839378238336,3766.0,None,False,,
3eca0752a68e6b2185c35ed95b053f7f3562b618,611283f7438009fe690023673c1fac5d9393034d,antirez,antirez@gmail.com,Fri May 8 17:17:59 2015 +0200,1431098279,Sentinel: suppress warnings for not used args.,2.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4005.0,189.0,0.0017708333333333332,8003.0,565.7058823529413,3767.0,None,False,,
611283f7438009fe690023673c1fac5d9393034d,1029276c0d46e643a5740120d44a9cce8ba652b9,antirez,antirez@gmail.com,Mon May 11 13:15:26 2015 +0200,1431342926,Sentinel: connection sharing WIP #1,295.0,220.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4007.0,190.0,2.8315625,8004.0,1.3531619026597506,3768.0,None,False,True,"[""aa578446bacd9b6565f40e7daf9eb14d3a6f6edd""]"
0610cb62964b86c45028f7704cbe4f97e92853f5,4e8ccbe7eac053011a281760e570ba29c4dfb905,therealbill,therealbill@me.com,Mon May 11 14:08:57 2015 -0500,1431371337,adding a sentinel command: flushconfigThis new command triggers a config flush to save the in-memory config tondisk. This is useful for cases of a configuration management system or anpackage manager wiping out your sentinel config while the process isnstill running - and has not yet been restarted. It can also be usefulnfor scripting a backup and migrate or clone of a running sentinel.n,4.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4082.0,191.0,0.3288310185185185,1.0,4.041075639717011,1.0,Feature Addition,False,,
1029276c0d46e643a5740120d44a9cce8ba652b9,d6e1347869d22f19746b004551d43059b375868e,antirez,antirez@gmail.com,Mon May 11 23:49:19 2015 +0200,1431380959,Sentinel: add link refcount to instance description,4.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4086.0,192.0,0.11136574074074074,8005.0,9.979422157555602,3769.0,None,False,,
0610cb62964b86c45028f7704cbe4f97e92853f5,6b953a268186a37084d07046267dcbf263d61372,Jungtaek Lim,kabhwan@gmail.com,Tue May 12 10:04:52 2015 +0900,1431392692,protocol error log should be seen debug/verbose level,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1757.0,208.0,15.667083333333334,1.0,1.063828089678466,0.0,Corrective,True,,
d6e1347869d22f19746b004551d43059b375868e,e0a5246f06951f76bc6bbfaa9900b8103f093dea,antirez,antirez@gmail.com,Tue May 12 12:12:25 2015 +0200,1431425545,"Sentinel: add sentinelGetInstanceTypeString() fuctionThis is useful for debugging and logging activities: given ansentinelRedisInstance object returns a C string representing theninstance type: master, slave, sentinel.n",7.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4090.0,193.0,0.5160416666666666,8006.0,2.9378280177634237,3770.0,None,False,,
e0a5246f06951f76bc6bbfaa9900b8103f093dea,9d5e2ed3922dd6f424a17c1d6712e672d4ee5fa0,antirez,antirez@gmail.com,Tue May 12 17:03:00 2015 +0200,1431442980,Sentinel: same-Sentinel link sharing across masters,34.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4097.0,194.0,0.20179398148148148,8007.0,5.955549182678522,3771.0,None,False,,
9d5e2ed3922dd6f424a17c1d6712e672d4ee5fa0,0eb0b55ff0840c52527ff65f0fbcac84a6e0e231,antirez,antirez@gmail.com,Tue May 12 17:03:53 2015 +0200,1431443033,"Sentinel: PING trigger improvedIt's ok to ping as soon as the ping period has elapsed since we receivednthe last PONG, but it's not good that we ping again if there is anpending ping... With this change we'll send a new ping if there is onenpending only if two times the ping period elapsed since the ping whichnis still pending was sent.n",4.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4122.0,195.0,0.0006134259259259259,8008.0,1631.1886792452829,3772.0,None,False,,
0eb0b55ff0840c52527ff65f0fbcac84a6e0e231,3ab49895b4533fac367dec7dc6be48036067f31a,antirez,antirez@gmail.com,Wed May 13 14:23:57 2015 +0200,1431519837,Sentinel: limit reconnection frequency to the ping period,7.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4125.0,196.0,0.8889351851851852,8009.0,2.1249414093015986,3773.0,None,False,,
3ab49895b4533fac367dec7dc6be48036067f31a,58d2bb951a3ad85b312e9e009a66eb1397e38780,antirez,antirez@gmail.com,Thu May 14 09:56:23 2015 +0200,1431590183,"Sentinel: use active/last time for ping logicThe PING trigger was improved again by using two fields instead of ansingle one to remember when the last ping was sent:nn1. The active ping is the time at which we sent the last ping thatnstill received no reply. However we continue to ping non replyingninstances even if they have an old active ping: the link may bendisconnected and reconencted in the meantime so the older pings may getnlost even if it's a TCP socket.nn2. The last ping is the time at which we really sent the last pingnon the wire, and this is used in order to throttle the amount of pingsnwe send during failures (when no pong is received).nnAll in all the failure detector effectiveness should be identical but wenavoid to flood instances with pings during failures or when they arenslow.n",37.0,21.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4132.0,197.0,0.8141898148148148,8010.0,2.228214823870583,3774.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
58d2bb951a3ad85b312e9e009a66eb1397e38780,05dbc820051daab748761ec67c9c1bba37f2717e,antirez,antirez@gmail.com,Thu May 14 10:52:32 2015 +0200,1431593552,Sentinel: debugging code removed from sentinelSendPing(),0.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4148.0,198.0,0.038993055555555566,8011.0,26.645592163846835,3775.0,None,False,,
05dbc820051daab748761ec67c9c1bba37f2717e,5a0516b5b96b7bbd16c1942b281c798f3db03630,antirez,antirez@gmail.com,Thu May 14 13:39:26 2015 +0200,1431603566,Sentinel: rewrite callback chain removing instances with shared linksOtherwise pending commands callbacks will fire with a reference that nonlonger exists.n,17.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4139.0,199.0,0.11590277777777774,8012.0,9.627920910724985,3776.0,None,False,,
5a0516b5b96b7bbd16c1942b281c798f3db03630,87b6013adb750b1f5ba161202876a84ffac45d3a,antirez,antirez@gmail.com,Thu May 14 13:40:23 2015 +0200,1431603623,Sentinel: remove SHARED! debugging printf,0.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4155.0,200.0,0.0006597222222222222,8013.0,1516.7894736842104,3777.0,None,False,,
87b6013adb750b1f5ba161202876a84ffac45d3a,b44c37482c6d944e54765318e38f63d92f36c09b,antirez,antirez@gmail.com,Thu May 14 14:08:19 2015 +0200,1431605299,Sentinel: fix access to NULL link->cc in releaseInstanceLink(),1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4154.0,201.0,0.019398148148148147,8014.0,52.55131264916468,3778.0,None,False,,
b44c37482c6d944e54765318e38f63d92f36c09b,f9e942d4ae310a9416d0f91fa0e32c799009b8bc,antirez,antirez@gmail.com,Thu May 14 14:12:45 2015 +0200,1431605565,Sentinel: remove debugging message from releaseInstanceLink(),0.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4154.0,202.0,0.0030787037037037037,8015.0,325.812030075188,3779.0,None,False,,
f9e942d4ae310a9416d0f91fa0e32c799009b8bc,4dee18cb66fe37190c619232d61f4bea43d6dfb0,antirez,antirez@gmail.com,Thu May 14 17:44:52 2015 +0200,1431618292,Sentinel: config-rewrite unique ID just one time,4.0,4.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4153.0,203.0,0.14730324074074075,8016.0,7.788716901076451,3780.0,None,False,,
4dee18cb66fe37190c619232d61f4bea43d6dfb0,b43431ac256c8eeb80b144b7492b04b6d692e061,antirez,antirez@gmail.com,Fri May 15 09:47:05 2015 +0200,1431676025,Sentinel: port address update code to shared links logic,38.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4153.0,204.0,0.6682060185185185,8017.0,2.496544437323541,3781.0,None,False,,
0610cb62964b86c45028f7704cbe4f97e92853f5 6b953a268186a37084d07046267dcbf263d61372,7f7ddbba3ce01101dceebe5ffaec054458fb2b00,Salvatore Sanfilippo,antirez@gmail.com,Fri May 15 17:06:18 2015 +0200,1431702378,Merge pull request #2573 from HeartSaVioR/fix-protocol-error-log-levelprotocol error log should be seen by debug/verbose level,,,,,,,,,,,,,,,Merge,False,,
7f7ddbba3ce01101dceebe5ffaec054458fb2b00 626b4f69078276e35ed947e0d4ebd704e7f09992,cb9a5a78219db209a7b6a4b368ce9bf87d99a7d5,Salvatore Sanfilippo,antirez@gmail.com,Fri May 15 17:36:18 2015 +0200,1431704178,"Merge pull request #2529 from gnethercutt/issue_2517Issue #2517, smove contract violation",,,,,,,,,,,,,,,Merge,False,,
cb9a5a78219db209a7b6a4b368ce9bf87d99a7d5,eb138f1511127c3aff428729feed99741b4f0124,antirez,antirez@gmail.com,Fri May 15 17:38:48 2015 +0200,1431704328,Rewrite smoveCommand test with ternary operator,1.0,4.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,968.0,47.0,28.090902777777767,8018.0,1.035598713502048,3782.0,Preventative,False,,
b43431ac256c8eeb80b144b7492b04b6d692e061,abc65e8987df5a6c94132d7ff1da3cdfbe4a989e,antirez,antirez@gmail.com,Mon May 18 12:52:03 2015 +0200,1431946323,"Sentinel: SENTINEL CKQUORUM commandA way for monitoring systems to check that Sentinel is technically ablento reach the quorum and failover, using the currently visible Sentinels.n",51.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4189.0,205.0,3.1284490740740742,8019.0,1.3196472041968494,3783.0,None,False,,
abc65e8987df5a6c94132d7ff1da3cdfbe4a989e,d614f1c37e7cef759f655d72eadd9f9e421b2196,antirez,antirez@gmail.com,Tue May 19 12:26:09 2015 +0200,1432031169,Sentinel: CKQUORUM tests,34.0,0.0,"tests/sentinel/tests/06-ckquorum.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8020.0,0.0,629.0,None,False,,
eb138f1511127c3aff428729feed99741b4f0124 d614f1c37e7cef759f655d72eadd9f9e421b2196,164b6bbab5c4cf3daf2e26653b114697bafb502b,antirez,antirez@gmail.com,Tue May 19 12:26:57 2015 +0200,1432031217,Merge branch 'sentinel-32' into unstable,,,,,,,,,,,,,,,Merge,False,,
164b6bbab5c4cf3daf2e26653b114697bafb502b,c54de703f20d17d9484a5becabe211a4681cd746,antirez,antirez@gmail.com,Wed May 20 09:59:55 2015 +0200,1432108795,Sentinel: fix sentinelTryConnectionSharing() by checking for no matchTrivial omission of the obvious no-match case.n,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4240.0,206.0,1.8804629629629632,8021.0,1.5317839381554976,3784.0,None,False,,
c54de703f20d17d9484a5becabe211a4681cd746,8c423c0bd6e2e54cc398c15f15164995b502f121,Huachao Huang,huachao.huang@gmail.com,Thu May 21 17:40:17 2015 +0800,1432201217,Update anet.c,1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,637.0,52.0,122.49574074074074,0.0,0.0,0.0,None,False,,
c54de703f20d17d9484a5becabe211a4681cd746,575eeb1a1c473ee3425175ac44bbc37fdea55e74,Itamar Haber,itamar@garantiadata.com,Thu May 21 13:24:51 2015 +0300,1432203891,Removed incorrect suggestionDEL/INCR/DECR and others could be NTH but apparently never made it to the implementation of SORT,1.0,1.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,590.0,39.0,106.82077546296296,2.0,1.009361474822346,0.0,None,False,,
c54de703f20d17d9484a5becabe211a4681cd746,fb3af75f7478c6d0717d076289976f16b2389e28,antirez,antirez@gmail.com,Fri May 22 11:49:11 2015 +0200,1432288151,"Sentinel: initial failure simulator implementedThis commit adds the SENTINEL simulate-failure, that sets specificnhooks inside the state machine that will crash Sentinel, for testingnpurposes.n",48.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4241.0,207.0,2.07587962962963,8022.0,1.4817234996320168,3785.0,None,False,,
fb3af75f7478c6d0717d076289976f16b2389e28,5080f2d69908e2324311f03224a5dc7c98322569,antirez,antirez@gmail.com,Mon May 25 10:24:27 2015 +0200,1432542267,Sentinel: help subcommand in simulate-failure command,4.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4287.0,208.0,2.9411574074074074,8023.0,1.340002203717987,3786.0,None,False,,
5080f2d69908e2324311f03224a5dc7c98322569,20700fe566938d5bea945f739dbb5ab73131febb,antirez,antirez@gmail.com,Mon May 25 10:32:28 2015 +0200,1432542748,Sentinel: clarify effect of resetting failover_start_time.,4.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4291.0,209.0,0.005567129629629629,8024.0,180.62577962577961,3787.0,None,False,,
20700fe566938d5bea945f739dbb5ab73131febb 4e8ccbe7eac053011a281760e570ba29c4dfb905,4082c38a60eedd524c78ef48c1b241105f4ddc50,Salvatore Sanfilippo,antirez@gmail.com,Mon May 25 12:06:25 2015 +0200,1432548385,Merge pull request #2571 from therealbill/sentinel-flushconfig-commandadding a sentinel command: flushconfig per RCP4,,,,,,,,,,,,,,,Merge,False,,
4082c38a60eedd524c78ef48c1b241105f4ddc50 575eeb1a1c473ee3425175ac44bbc37fdea55e74,c3297a72922bc33deb3993abf380a3bbc9f16116,Salvatore Sanfilippo,antirez@gmail.com,Thu May 28 15:09:51 2015 +0200,1432818591,Merge pull request #2587 from itamarhaber/patch-5Removed incorrect suggestion,,,,,,,,,,,,,,,Merge,False,,
c3297a72922bc33deb3993abf380a3bbc9f16116 8c423c0bd6e2e54cc398c15f15164995b502f121,a391c36324f43435099391c832b596603e67993a,Salvatore Sanfilippo,antirez@gmail.com,Thu May 28 15:10:25 2015 +0200,1432818625,Merge pull request #2586 from huachaohuang/patch-1Update anet.c,,,,,,,,,,,,,,,Merge,False,,
4082c38a60eedd524c78ef48c1b241105f4ddc50,382a943414d17ace950901aad07dbde577f2142a,antirez,antirez@gmail.com,Thu May 28 18:06:16 2015 +0200,1432829176,ZADD implemenation able to take options.,49.0,10.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2855.0,102.0,195.4799305555556,8025.0,1.0051156146677462,3788.0,Feature Addition,False,True,"[""5dc4fe1529bb9e1134245db505883364caac3280""]"
382a943414d17ace950901aad07dbde577f2142a,5d32abbb9e1b74ee08f03cae4305126063744a7a,antirez,antirez@gmail.com,Fri May 29 09:59:42 2015 +0200,1432886382,ZADD NX and XX options,26.0,6.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2894.0,103.0,0.6621064814814814,8026.0,2.5103310841520123,3789.0,Feature Addition,False,,
5d32abbb9e1b74ee08f03cae4305126063744a7a,c043a4e6f407d03e794a07d3b449ebe9cd74c507,antirez,antirez@gmail.com,Fri May 29 11:22:03 2015 +0200,1432891323,"ZADD RETCH option: Return number of elements added or updatedNormally ZADD only returns the number of elements added to a sortednset, using the RETCH option it returns the sum of elements added ornfor which the score was updated.n",4.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2914.0,104.0,0.0571875,8027.0,18.486338797814206,3790.0,Feature Addition,False,,
c043a4e6f407d03e794a07d3b449ebe9cd74c507,910e72d1c10ac8bcb7d869714dcad43dc318c8c5,antirez,antirez@gmail.com,Fri May 29 11:23:49 2015 +0200,1432891429,Test: ZADD NX and XX options tests,59.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,952.0,32.0,310.73038194444445,8028.0,1.0032182240878489,630.0,Preventative,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
910e72d1c10ac8bcb7d869714dcad43dc318c8c5,23ba5c10920b9893eb1ed82503157850131819af,antirez,antirez@gmail.com,Fri May 29 11:28:49 2015 +0200,1432891729,Test: ZADD INCR test,14.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1011.0,33.0,0.003472222222222222,8029.0,289.0,631.0,Preventative,False,,
23ba5c10920b9893eb1ed82503157850131819af,d8a8dca7fd52d6be8383b2a0d2b7e403f3c1d71d,antirez,antirez@gmail.com,Fri May 29 11:32:22 2015 +0200,1432891942,ZADD RETCH option renamed CHFrom Twitter:nn@antirez thatu00e2u0080u0099s an awfully-named command :(n http://en.wikipedia.org/wiki/Retchingn,4.0,4.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2917.0,105.0,0.0071643518518518514,8030.0,140.5799676898223,3791.0,Feature Addition,False,,
d8a8dca7fd52d6be8383b2a0d2b7e403f3c1d71d,39b49bcaaf221d9d8bd6ca62fe1ea0befe4089fd,antirez,antirez@gmail.com,Fri May 29 11:34:43 2015 +0200,1432892083,Test: ZADD CH tests,7.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1025.0,34.0,0.004097222222222223,8031.0,245.0677966101695,632.0,Preventative,False,,
a391c36324f43435099391c832b596603e67993a 39b49bcaaf221d9d8bd6ca62fe1ea0befe4089fd,28a250d9e4ab0aa659a4ed74ad5c52272cb8dda7,antirez,antirez@gmail.com,Fri May 29 12:26:27 2015 +0200,1432895187,Merge branch 'zaddnx' into unstable,,,,,,,,,,,,,,,Merge,False,,
28a250d9e4ab0aa659a4ed74ad5c52272cb8dda7,0dc6a5d497904776b3a6296b08207b917ef59bab,linfangrong,linfangrong.liuxin@qq.com,Tue Jun 2 18:12:57 2015 +0800,1433239977,Update t_zset.c,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2917.0,106.0,4.028182870370372,0.0,0.0,0.0,None,False,,
28a250d9e4ab0aa659a4ed74ad5c52272cb8dda7,357a40c4fc1f5ad3c143e6afbb0ada8d68432221,antirez,antirez@gmail.com,Wed Jun 3 08:44:43 2015 +0200,1433313883,Scripting: Lua cmsgpack lib updated to include str8 support,42.0,29.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,957.0,6.0,172.3667824074074,8032.0,1.005801581871131,715.0,None,False,,
357a40c4fc1f5ad3c143e6afbb0ada8d68432221,fdf9d455098f54f7666c702ae464e6ea21e25411,Ben Murphy,benmmurphy@gmail.com,Mon May 11 23:24:24 2015 +0100,1431383064,disable loading lua bytecode,1.0,1.0,"deps/lua/src/ldo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,519.0,2.0,742.5163194444444,0.0,0.0,0.0,None,False,,
fdf9d455098f54f7666c702ae464e6ea21e25411,ffd6637e90d816b7a17a96f144f75153c952d8cf,Ben Murphy,benmmurphy@gmail.com,Mon May 11 23:24:37 2015 +0100,1431383077,hide access to debug table,9.0,6.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1201.0,107.0,50.04231481481482,1.0,1.0199830883863101,0.0,Corrective,True,,
ffd6637e90d816b7a17a96f144f75153c952d8cf,a401a84eb2fb0b22e003cdd2c5231995f57bab8b,antirez,antirez@gmail.com,Thu Jun 11 12:29:37 2015 +0200,1434018577,Don't try to bind the source address for MIGRATERelated to issues #2609 and #2612.n,2.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5007.0,455.0,79.01559027777778,8033.0,1.0126557302993564,3792.0,Feature Addition,False,,
a401a84eb2fb0b22e003cdd2c5231995f57bab8b,8fa8b251a9766f987a7704f034e66c645f0c3afe,antirez,antirez@gmail.com,Thu Jun 11 12:46:55 2015 +0200,1434019615,"anetTcpGenericConnect(), jump to error not end on errorTwo code paths jumped to the ok, return the socket to the user codenpath to handle error conditions.nnRelated to issues #2609 and #2612.n",2.0,2.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,637.0,53.0,21.04627314814815,8034.0,1.0475143505437203,3793.0,None,False,,
8fa8b251a9766f987a7704f034e66c645f0c3afe,a017b7ec0e68792fa79b611023f3065c4e0c9394,antirez,antirez@gmail.com,Thu Jun 11 12:55:58 2015 +0200,1434020158,"anet.c: new API anetTcpNonBlockBestEffortBindConnect()This performs a best effort source address binding attempt. If it isnpossible to bind the local address and still have a successfulnconnect(), then this socket is returned. Otherwise the call is retriednwithout source address binding attempt.nnRelated to issues #2609 and #2612.n",22.0,3.0,"src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER",2.0,1.0,1.0,0.2422921890824148,13.0,357.0,80.0,90.8696238425926,8035.5,80.56076224412105,3795.0,None,False,,
a017b7ec0e68792fa79b611023f3065c4e0c9394,8366907bed1f8e798889f51ce46c8035a28a6cae,antirez,antirez@gmail.com,Thu Jun 11 12:57:53 2015 +0200,1434020273,"Use best effort address binding to connect to the masterWe usually want to reach the master using the address of the interfacenRedis is bound to (via the bind config option). That's useful sincenthe master will get (and publish) the slave address getting the peernname of the incoming socket connection from the slave.nnHowever, when this is not possible, for example because the slave isnbound to the loopback interface but repliaces from a master accessed vianan external interface, we want to still connect with the master evennfrom a different interface: in this case it is not really important thatnthe master will provide any other address, while it is vital to be ablento replicate correctly.nnRelated to issues #2609 and #2612.n",1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2125.0,148.0,71.11857638888887,8037.0,1.0140610238671233,3796.0,Feature Addition,False,,
8366907bed1f8e798889f51ce46c8035a28a6cae 0dc6a5d497904776b3a6296b08207b917ef59bab,4b5a0f0376e122316f3f04709fd7c502b159428d,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 11 15:15:22 2015 +0200,1434028522,Merge pull request #2614 from linfangrong/patch-1Update t_zset.c,,,,,,,,,,,,,,,Merge,False,,
4b5a0f0376e122316f3f04709fd7c502b159428d,821a986643717018cad8af9f35cba49818e60294,antirez,antirez@gmail.com,Fri Jun 12 18:33:03 2015 +0200,1434126783,"Sentinel: fix bug in config rewriting during failoverWe have a check to rewrite the config properly when a failover is innprogress, in order to add the current (already failed over) master asnslave, and don't include in the slave list the promoted slave itself.nnHowever there was an issue, the variable with the right address wasncomputed but never used when the code was modified, and no tests arenavailable for this feature for two reasons:nn1. The Sentinel unit test currently does not test Sentinel ability tonpersist its state at all.n2. It is a very hard to trigger state since it lasts for little time innthe context of the testing framework.nnHowever this feature should be covered in the test in some way.nnThe bug was found by @badboy using the clang static analyzer.nnEffects of the bug on safety of Sentineln===nnThis bug results in severe issues in the following case:nn1. A Sentinel is elected leader.n2. During the failover, it persists a wrong config with a known-slavenentry listing the master address.n3. The Sentinel crashes and restarts, reading invalid configuration fromndisk.n4. It sees that the slave now does not obey the logical configurationn(should replicate from the current master), so it sends a SLAVEOFncommand to the master (since the slave master is the same) creating anreplication loop (attempt to replicate from itself) which Redis isncurrently unable to detect.n5. This means that the master is no longer available because of the bug.nnHowever the lack of availability should be only transient (at leastnin my tests, but other states could be possible where the problemnis not recovered automatically) because:nn6. Sentinels treat masters reporting to be slaves as failing.n7. A new failover is triggered, and a slave is promoted to master.nnBug lifetimen===nnThe bug is there forever. Commit 16237d78 actually tried to fix the bugnbut in the wrong way (the computed variable was never used! My fault).nSo this bug is there basically since the start of Sentinel.nnSince the bug is hard to trigger, I remember little reports matchingnthis condition, but I remember at least a few. Also in automated testsnwhere instances were stopped and restarted multiple times automaticallynI remember hitting this issue, however I was not able to reproduce nornto determine with the information I had at the time what was causing thenissue.n",1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4293.0,210.0,18.333738425925926,8038.0,1.0545442493379251,3797.0,None,False,,
821a986643717018cad8af9f35cba49818e60294,7f4ac3d19c28e0a7a608fe94411e92bc59097e11,Matt Stancliff,matt@genges.com,Mon May 12 14:38:17 2014 -0400,1399919897,"[In-Progress] Add Geo CommandsCurrent todo:n  - replace functions in zset.{c,h} with a new unified Redisnzset access API.nnOnce we get the zset interface fixed, we can squashnrelevant commits in this branch and have one nice commitnto merge into unstable.nnThis commit adds:n  - Geo commandsn  - Tests; runnable with: ./runtest --single unit/geon  - Geo helpers in deps/geohash-int/n  - src/geo.{c,h} and src/geojson.{c,h} implementing geo commandsn  - Updated build configurations to get everything workingn  - TEMPORARY: src/zset.{c,h} implementing zset score and zsetnrange reading without writing to client output buffers.n  - Modified linkage of one t_zset.c function for use in zset.cnnConflicts:ntsrc/Makefilentsrc/redis.cn",2167.0,6.0,"deps/Makefile,CAS_DELIMITER,deps/geohash-int/Makefile,CAS_DELIMITER,deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,src/geojson.c,CAS_DELIMITER,src/geojson.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/zset.c,CAS_DELIMITER,src/zset.h,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",17.0,3.0,4.0,2.9624608441513978,13.0,511.29411764705884,1299.0,-75.14809232026144,324.0,0.9967052598743468,47.0,Feature Addition,False,True,"[""f29e384853660434da912c49e8b29ebabe76bec3"", ""41030ae2dee2d88451cb0bfe6b6a1b72ea0d84eb"", ""eaa713e93b6aadf08fda33238670cd3577a7db52"", ""504ccad1fa018b2b432eda092bd536134ee6b39f"", ""3961071b20c988bee574cbf28d6c3ba3b48e9567"", ""1e6bb9ef0c60c22eab9e8d334be9f83a5845b2bb"", ""356a6304ec77783e7fdaf00668a09dc293b810a0"", ""f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c"", ""b2cd9fcab6122ccbf8b08f71f59a0af01931083b""]"
7f4ac3d19c28e0a7a608fe94411e92bc59097e11,5e46e8a58a3b85dae8e37a71183f8a7139ea88b9,antirez,antirez@gmail.com,Mon Jun 22 11:02:27 2015 +0200,1434963747,"Geo: removed useless functions, Marcatore coordinates, bool usage",92.0,213.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER",4.0,1.0,1.0,1.7545913379960474,13.0,191.75,4.0,405.6001157407408,8040.5,1.0012841054849853,719.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
5e46e8a58a3b85dae8e37a71183f8a7139ea88b9,73134f6a0b764ee1bc2df8d31180ed47ae55137e,antirez,antirez@gmail.com,Mon Jun 22 11:16:36 2015 +0200,1434964596,Geo: removed JSON failing test (false positive)Server output is matched to a pre-computed output. The last digitsndiffer because of rouding errors.n,0.0,8.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,53.0,1.0,405.6099421296296,8043.0,1.0024654228018908,633.0,None,False,,
73134f6a0b764ee1bc2df8d31180ed47ae55137e,f193b3caa8e2de38573831d81da4bf6438c2ae79,antirez,antirez@gmail.com,Mon Jun 22 11:24:58 2015 +0200,1434965098,Geo: removed bool usage from Geo code inside Redis,34.0,34.0,"src/geo.c,CAS_DELIMITER,src/zset.c,CAS_DELIMITER,src/zset.h,CAS_DELIMITER",3.0,1.0,1.0,0.9204889941522968,13.0,321.6666666666667,3.0,405.6157523148148,8045.0,1.0015066256860674,3800.0,None,False,,
f193b3caa8e2de38573831d81da4bf6438c2ae79,b18c68aa7fa780ab0d591c91ad758246fa9fdc9e,antirez,antirez@gmail.com,Mon Jun 22 11:53:14 2015 +0200,1434966794,Geo: JSON features removedThe command can only return data in the normal Redis protocol. It is upnto the caller to translate to JSON if needed.n,25.0,460.0,"src/Makefile,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,src/geojson.c,CAS_DELIMITER,src/geojson.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",6.0,1.0,1.0,1.5262049460101959,13.0,874.1666666666665,704.0,338.0327565586419,8049.5,1.00134902043179,3806.0,None,False,,
b18c68aa7fa780ab0d591c91ad758246fa9fdc9e,fc03d08ee0bc7abcb5f036454458d5b085fff10c,antirez,antirez@gmail.com,Mon Jun 22 13:08:46 2015 +0200,1434971326,Geo: addReplyDoubleDistance() precision set to 4 digitsAlso:n1. The function was renamed.n2. An useless initialization of a buffer was removed.n,8.0,6.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,625.0,3.0,0.0524537037037037,8053.0,20.06443071491616,3807.0,None,False,,
fc03d08ee0bc7abcb5f036454458d5b085fff10c,2f66550729924ccfc20c1418f498f21e0e4bdeca,antirez,antirez@gmail.com,Mon Jun 22 13:40:26 2015 +0200,1434973226,"Geo: Pub/Sub feature removedThis feature apparently is not going to be very useful, to send anGEOADD+PUBLISH combo is exactly the same. One that would make a ton ofndifference is the ability to subscribe to a position and a radius, andnget the updates in terms of objects entering/exiting the area.n",0.0,32.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,627.0,4.0,0.02199074074074074,8054.0,46.47368421052632,3808.0,None,False,,
2f66550729924ccfc20c1418f498f21e0e4bdeca,575e247a0e91d662163fd92032b47e7a3b1f2b6b,antirez,antirez@gmail.com,Mon Jun 22 15:00:37 2015 +0200,1434978037,Geo: fix tests after distance precision change,2.0,2.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,45.0,2.0,0.15556712962962962,8055.0,7.428093147831262,634.0,None,False,,
575e247a0e91d662163fd92032b47e7a3b1f2b6b,9fc47ddf0b8174e5e652ba11bc3d368f6536ba40,antirez,antirez@gmail.com,Mon Jun 22 17:26:36 2015 +0200,1434986796,Geo: zsetScore refactoringNow used both in geo.c and t_zset to provide ZSCORE.n,24.0,43.0,"src/redis.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/zset.c,CAS_DELIMITER,src/zset.h,CAS_DELIMITER",4.0,1.0,1.0,1.1452125903585308,13.0,1168.75,601.0,203.05901041666667,8057.5,1.0015396280478412,3812.0,None,False,,
9fc47ddf0b8174e5e652ba11bc3d368f6536ba40,3d9031eda43c3018244c1e0495a4cfb2ef606974,antirez,antirez@gmail.com,Mon Jun 22 17:28:48 2015 +0200,1434986928,Geo: compile again with optimizationsFor some reason the Geo PR included disabling the fact that Redis isncompiled with optimizations. Apparently it was just @mattsta attempt tonspeedup the modify-compile-test iteration and there are no othernreasons.n,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,260.0,121.0,0.2330324074074074,8060.0,5.291248634151186,3813.0,None,False,,
3d9031eda43c3018244c1e0495a4cfb2ef606974,0b93139048c9e541feeaeacb79a604f50f6a2149,antirez,antirez@gmail.com,Mon Jun 22 18:08:06 2015 +0200,1434989286,"Geo: big refactoring of geo.c, zset.[ch] removed.This commit simplifies the implementation in a few ways:nn1. zsetScore implementation improved a bit and moved into t_zset.c wheren   is now also used to implement the ZSCORE command.nn2. Range extraction from the sorted set remains a separatedn   implementation from the one in t_zset.c, but was hyper-specialized inn   order to avoid accumulating results into a list and remove the onesn   outside the radius.nn3. A new type is introduced: geoArray, which can accumulate geoPointn   structures in a vector with power of two expansion policy. This isn   useful since we have to call qsort() against it before returning then   result to the user.nn4. As a result of 1, 2, 3, the two files zset.c and zset.h are nown   removed, including the function to merge two lists (now handled withn   functions that can add elements to existing geoArray arrays) andn   the machinery used in order to pass zset results.nn5. geoPoint structure simplified because of the general code structuren   simplification, so we no longer need to take references to objects.nn6. Not counting the JSON removal the refactoring removes 200 lines ofn   code for the same functionalities, with a simpler to readn   implementation.nn7. GEORADIUS is now 2.5 times faster testing with 10k elements and an   radius resulting in 124 elements returned. However this is mostly an   side effect of the refactoring and simplification. More speed gainsn   can be achieved by trying to optimize the code.n",190.0,331.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/zset.c,CAS_DELIMITER,src/zset.h,CAS_DELIMITER",7.0,2.0,2.0,1.492465656264627,13.0,410.1428571428572,627.0,0.12222056878306875,8064.0,2.91109893955256,3819.0,None,False,,
0b93139048c9e541feeaeacb79a604f50f6a2149,51b4a4724b9570584ae1bbb0e30e3bf4d8db736a,antirez,antirez@gmail.com,Tue Jun 23 09:03:56 2015 +0200,1435043036,Geo: use the high level API to decode in geoAppendIfWithinRadius(),7.0,12.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,645.0,6.0,0.6221064814814815,8068.0,2.607441860465116,3820.0,None,False,,
51b4a4724b9570584ae1bbb0e30e3bf4d8db736a,a3018a215f958d42224413de04f9e34387cac4c4,antirez,antirez@gmail.com,Tue Jun 23 09:30:14 2015 +0200,1435044614,"Geo: rename x,y to lat,lon for clarity",12.0,13.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,640.0,7.0,0.01826388888888889,8069.0,55.75285171102662,3821.0,None,False,,
a3018a215f958d42224413de04f9e34387cac4c4,ae5fd11563230e06fbc637d63028b59a65e4bf51,antirez,antirez@gmail.com,Tue Jun 23 09:35:43 2015 +0200,1435044943,"Geo: more x,y renamed lat,lon",8.0,8.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,639.0,8.0,0.0038078703703703694,8070.0,263.613981762918,3822.0,None,False,,
ae5fd11563230e06fbc637d63028b59a65e4bf51,bb3284563c1465556f0d02ab7b4616dcc414b930,antirez,antirez@gmail.com,Tue Jun 23 10:18:23 2015 +0200,1435047503,"Geo: GEOADD implementation improved, replication fixed1. We no longer use a fake client but just rewriting.n2. We group all the inserts into a single ZADD dispatch (big speed win).n3. As a side effect of the correct implementation, replication works.n4. The return value of the command is now correct.n",39.0,37.0,"src/geo.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.6601223977103859,13.0,1312.0,709.0,14.334830246913581,8072.0,12.265625637254946,3825.0,None,False,,
bb3284563c1465556f0d02ab7b4616dcc414b930,0425c60381f9f2d1adf5a08b48f305ecf30dbfa6,antirez,antirez@gmail.com,Tue Jun 23 10:19:40 2015 +0200,1435047580,Geo: test GEOADD with wrong input coordinates,8.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,45.0,3.0,0.8048958333333334,8074.0,2.2423967904749578,635.0,None,False,,
0425c60381f9f2d1adf5a08b48f305ecf30dbfa6,8d5ad19d154dde494a87ce0af29811bc2d3217e1,antirez,antirez@gmail.com,Tue Jun 23 10:27:45 2015 +0200,1435048065,"Geo: return REDIS_* where appropriate, improve commenting",19.0,12.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,630.0,10.0,0.006504629629629629,8075.0,154.73665480427047,3826.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
8d5ad19d154dde494a87ce0af29811bc2d3217e1,cf89a19f162ce0550b1c3cfbaf11a64659856ded,antirez,antirez@gmail.com,Tue Jun 23 15:02:37 2015 +0200,1435064557,"Geo: GEORADIUS fuzzy testing by reimplementing it in Tcl.We set random points in the world, pick a random position, and check ifnthe returned points by Redis match the ones computed by Tcl by brutenforcing all the points using the distance between two points formula.nnThis approach is sounding since immediately resulted in finding a bug innthe original implementation.n",63.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,53.0,4.0,0.19649305555555555,8076.0,6.0892383813394595,636.0,None,False,True,"[""356a6304ec77783e7fdaf00668a09dc293b810a0""]"
cf89a19f162ce0550b1c3cfbaf11a64659856ded,55c4a365d74c5218a9303e31f1f7b67c424c9c2c,antirez,antirez@gmail.com,Wed Jun 24 10:42:16 2015 +0200,1435135336,"Geo: Fix geohashEstimateStepsByRadius() step underestimation.The returned step was in some case not enough towards normalncoordinates (for example when our search position was was already near thenmargin of the central area, and we had to match, using the east or westnneighbor, a very far point). Example:nngeoadd points 67.575457940146066 -62.001317572780565 farngeoadd points 66.685439060295664 -58.925040587282297 centerngeoradius points 66.685439060295664 -58.925040587282297 200 kmnnIn the above case the code failed to find a match (happens at smallernlatitudes too) even if far and center are at less than 200km.nnAnother fix introduced by this commit is a progressively larger areantowards the poles, since meridians are a lot less far away, so we neednto compensate for this.nnThe current implementation works comparably to the Tcl brute-forcenstress tester implemented in the fuzzy test in the geo.tcl unit fornlatitudes between -70 and 70, and is pretty accurate over +/-80 too,nwith sporadic false negatives.nnA more mathematically clean implementation is possible by computing thenmeridian distance at the specified latitude and computing the stepnaccording to it.n",20.0,11.0,"deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER",3.0,2.0,2.0,0.8865703508911296,13.0,303.6666666666667,15.0,1.6606828703703702,8078.0,1.31867127144577,3827.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52"", ""356a6304ec77783e7fdaf00668a09dc293b810a0""]"
821a986643717018cad8af9f35cba49818e60294,d28c51d166f554633da2fd44a26ecec2be420ee7,Jan-Erik Rediger,janerik@fnordig.de,Wed Jun 24 12:55:00 2015 +0200,1435143300,Do not attempt to lock on Solaris,7.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5007.0,456.0,13.017627314814815,28.0,1.0768189145238427,14.0,None,False,,
d28c51d166f554633da2fd44a26ecec2be420ee7,c7462ca9ffd8ccafee2605bd5c69e6a5bc5b240a,Jan-Erik Rediger,janerik@fnordig.de,Wed Jun 24 14:48:48 2015 +0200,1435150128,Don't include sysctl headerIt's not needed (anymore) and is not available on Solaris.n,0.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3904.0,580.0,2.1219212962962963,29.0,1.4712710135599507,15.0,None,False,,
55c4a365d74c5218a9303e31f1f7b67c424c9c2c,87521f44550a4a7825af5decb8add0eab3ff8812,antirez,antirez@gmail.com,Wed Jun 24 16:31:14 2015 +0200,1435156274,"Geo: GEOHASH command added, returning standard geohash strings.",57.0,0.0,"src/geo.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",3.0,1.0,1.0,0.254385027430421,13.0,2027.0,1085.0,0.5241319444444444,8081.0,3.6508387063616685,3830.0,None,False,True,"[""5a72c5058c27cdc778cde8f61d16691b11a6adc5""]"
87521f44550a4a7825af5decb8add0eab3ff8812,5fd756bf13e05429318ceafddb89b5f8039ff7b9,antirez,antirez@gmail.com,Wed Jun 24 16:34:17 2015 +0200,1435156457,Geo: GEOHASH command test.,7.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,116.0,5.0,1.0636574074074074,8083.0,1.940152339499456,637.0,None,False,,
5fd756bf13e05429318ceafddb89b5f8039ff7b9,03ce18962848fdd1b7a8427a7365096a0c7b3d4f,antirez,antirez@gmail.com,Wed Jun 24 17:37:20 2015 +0200,1435160240,Geo: explain increment magic in membersOfGeoHashBox().,20.0,0.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,692.0,13.0,0.04590277777777778,8084.0,22.78517397881997,3831.0,None,False,,
03ce18962848fdd1b7a8427a7365096a0c7b3d4f,fa9d62d34fd739160b2a45b713e912a6c4dabb75,antirez,antirez@gmail.com,Thu Jun 25 18:05:45 2015 +0200,1435248345,"Geo: from lat,lon API to lon,lat API according to GIS standardThe GIS standard and all the major DBs implementing GIS relatednfunctions take coordinates as x,y that is longitude,latitude.nIt was a bad start for Redis to do things differently, so even if thisnmeans that existing users of the Geo module will be required to changentheir code, Redis now conforms to the standard.nnUsually Redis is very backward compatible, but this is not an exceptionnto this rule, since this is the first Geo implementation entering thenofficial Redis source code. It is not wise to try to be backwardncompatible with code forks... :-)nnClose #2637.n",146.0,176.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",7.0,3.0,3.0,2.395719806897212,13.0,216.28571428571428,34.0,1.998556547619048,8088.0,1.1408334123020882,638.0,None,False,True,"[""f29e384853660434da912c49e8b29ebabe76bec3"", ""eaa713e93b6aadf08fda33238670cd3577a7db52"", ""356a6304ec77783e7fdaf00668a09dc293b810a0""]"
821a986643717018cad8af9f35cba49818e60294,c2322357343756b56adefd8f2f70dc09f43b1bb8,MOON_CLJ,lijunli2598@gmail.com,Fri Jun 26 17:58:45 2015 +0800,1435312725,pfcount support multi keys,1.0,1.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3904.0,582.0,1.8107754629629629,0.0,0.0,0.0,None,False,,
fa9d62d34fd739160b2a45b713e912a6c4dabb75,710c05ac2ab0eedc56cc19ba16ad8fc40d24e81d,antirez,antirez@gmail.com,Sat Jun 27 09:38:39 2015 +0200,1435390719,Geo: remove useless variable. geoRadiusGeneric() top comment improved.,4.0,8.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,709.0,15.0,1.6478472222222222,8092.0,1.6068523747313417,3834.0,None,False,,
710c05ac2ab0eedc56cc19ba16ad8fc40d24e81d,cd91beea1c11a37be9811260c16dfe8eb8e57e9e,antirez,antirez@gmail.com,Sat Jun 27 09:43:47 2015 +0200,1435391027,Geo: only one way to specify any given option.,11.0,10.0,"src/geo.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9587118829771318,13.0,414.0,23.0,0.827488425925926,8093.5,141.561859289043,639.0,None,False,,
cd91beea1c11a37be9811260c16dfe8eb8e57e9e,a3b07b1718368447f76788dd8febe01635a11f69,antirez,antirez@gmail.com,Sat Jun 27 10:23:58 2015 +0200,1435393438,Geo: COUNT option for GEORADIUS.,20.0,2.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,706.0,17.0,0.02790509259259259,8095.0,36.835752799668185,3836.0,None,False,True,"[""319d18013646bb9c14d0c070a566d058558bf762""]"
a3b07b1718368447f76788dd8febe01635a11f69,7d59e0a8c3fb42bcf0e362a41f8abd01c1509429,antirez,antirez@gmail.com,Mon Jun 29 09:16:27 2015 +0200,1435562187,Geo: commands top comment as in other Redis code.,7.0,12.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,724.0,18.0,1.953113425925926,8096.0,1.5120030340920538,3837.0,None,False,,
7d59e0a8c3fb42bcf0e362a41f8abd01c1509429,6d21027a23864500aadcc200fecfc594b98e9c88,antirez,antirez@gmail.com,Mon Jun 29 09:20:07 2015 +0200,1435562407,"Geo: GEOADD form using radius removed.Can't immagine how this is useful in the context of the API exported bynRedis, and we are always in time to add more bloat if needed, later.n",5.0,19.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,719.0,19.0,0.0025462962962962965,8097.0,393.7272727272728,3838.0,None,False,,
6d21027a23864500aadcc200fecfc594b98e9c88,db3df441844f8479cd341d1e2d7553139ee4cfec,antirez,antirez@gmail.com,Mon Jun 29 09:21:31 2015 +0200,1435562491,Geo: debugging printf calls removed.,0.0,7.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,705.0,20.0,0.0009722222222222224,8098.0,1029.5714285714287,3839.0,None,False,,
db3df441844f8479cd341d1e2d7553139ee4cfec,1884bff12d1e91983e91c27637b5fa8854f68cba,antirez,antirez@gmail.com,Mon Jun 29 09:24:22 2015 +0200,1435562662,Geo: fix comment indentation.,1.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,698.0,21.0,0.0019791666666666677,8099.0,506.26315789473676,3840.0,None,False,,
1884bff12d1e91983e91c27637b5fa8854f68cba,6a8e108e2d220e95668a14db4bc891bfe1bb9743,antirez,antirez@gmail.com,Mon Jun 29 09:34:05 2015 +0200,1435563245,"Geo: GEOENCODE now returns score ranges.If GEOENCODE must be our door to enter the Geocoding implementationndetails and do fancy things client side, than return the scores as wellnso that we can query the sorted sets directly if we wish to do the samensearch multiple times, or want to compute the boxes in the client sidento refine our search needs.n",22.0,9.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,698.0,22.0,0.0067476851851851856,8100.0,149.19897084048026,3841.0,None,False,,
6a8e108e2d220e95668a14db4bc891bfe1bb9743,ddc7b85c5f28fd96009a006e5bed5c775bc7f367,antirez,antirez@gmail.com,Mon Jun 29 09:39:34 2015 +0200,1435563574,Geo: GEOENCODE: fix command arity check.,3.0,3.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,711.0,23.0,0.0038078703703703694,8101.0,263.613981762918,3842.0,None,False,,
ddc7b85c5f28fd96009a006e5bed5c775bc7f367,7cd2a4e19600e827afe883b36cb899b0a5473187,antirez,antirez@gmail.com,Mon Jun 29 09:46:58 2015 +0200,1435564018,Geo: GEOENCODE test fixed for new return value.,2.0,1.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,123.0,8.0,2.0022106481481483,8102.0,1.4994479481591527,640.0,None,False,,
7cd2a4e19600e827afe883b36cb899b0a5473187,f6edd0cb933c1c82c3e9e9dd33597654602a1ba4,antirez,antirez@gmail.com,Mon Jun 29 09:52:23 2015 +0200,1435564343,Geo: GEORADIUS COUNT tests.,8.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,124.0,9.0,0.0037615740740740734,8103.0,266.84615384615387,641.0,None,False,,
f6edd0cb933c1c82c3e9e9dd33597654602a1ba4,aae0a1f9cce0ced9e6aa2e76977d6db72f6b4edc,antirez,antirez@gmail.com,Mon Jun 29 10:47:07 2015 +0200,1435567627,Geo: GEOPOS command and tests.,52.0,0.0,"src/geo.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.1629036750625397,13.0,1572.25,1110.0,1.9490509259259257,8105.5,6.477088697835272,642.0,None,False,,
aae0a1f9cce0ced9e6aa2e76977d6db72f6b4edc,a12192f5ff33298eb7082cc3f6e2de17957e7d26,antirez,antirez@gmail.com,Mon Jun 29 12:07:18 2015 +0200,1435572438,"Geo: command function names converted to lowercase, as elsewhere.In Redis MULTIWORDCOMMANDNAME are mapped to functions where the commandnname is all lowercase: multiwordcommandnameCommand().n",21.0,27.0,"src/geo.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER",4.0,1.0,1.0,1.9056390622295665,13.0,1555.0,1107.0,0.97953125,8109.5,5.683915655588131,3849.0,None,False,,
a12192f5ff33298eb7082cc3f6e2de17957e7d26,f108c687ad122d76e8468f98934255ffb51cc7e8,antirez,antirez@gmail.com,Mon Jun 29 12:44:31 2015 +0200,1435574671,Geo: GEODIST and tests.,94.0,20.0,"deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",6.0,3.0,3.0,1.174450021853896,13.0,1100.5,1125.0,1.2854841820987652,8114.5,1.1535424061155397,643.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
f108c687ad122d76e8468f98934255ffb51cc7e8,083acbebc85191314840a02a8618f051f49d0319,antirez,antirez@gmail.com,Mon Jun 29 15:57:17 2015 +0200,1435586237,"Geo: remove static declarations.Stack traces produced by Redis on crash are the most useful tool wenhave to fix non easily reproducible crashes, or even easily reproduciblenones where the user just posts a bug report and does not collaboratenfurhter.nnBy declaring functions static they no longer show up in the stackntrace.n",6.0,6.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,792.0,27.0,0.13386574074074073,8118.0,8.470171191423137,3853.0,None,False,,
083acbebc85191314840a02a8618f051f49d0319,69c5b27273272c93822a5d2bd776ddc11210e88a,antirez,antirez@gmail.com,Mon Jun 29 16:02:33 2015 +0200,1435586553,"Geo: support units only in abbreviated form.I'm not a strong believer in multiple syntax for the same stuff, sonnow units can be specified only as m, km, ft, mi.n",7.0,7.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,792.0,28.0,0.003657407407407408,8119.0,274.4177215189873,3854.0,None,False,,
69c5b27273272c93822a5d2bd776ddc11210e88a,d308cadc8a18fe8aea41898d8d881f91103617a0,antirez,antirez@gmail.com,Mon Jun 29 16:34:02 2015 +0200,1435588442,Geo: added my copyright notice in modified files.,5.0,0.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER",5.0,2.0,2.0,2.3219280948873617,13.0,283.6,46.0,1.6426504629629626,8122.0,1.1498807155132629,3855.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52"", ""356a6304ec77783e7fdaf00668a09dc293b810a0""]"
d308cadc8a18fe8aea41898d8d881f91103617a0,4160bf0448e93e25607f844a149b1418e3fa3dd4,antirez,antirez@gmail.com,Wed Jul 1 16:12:08 2015 +0200,1435759928,"Geo: sync faster decoding from krtm that synched from Ardb.Instead of successive divisions in iteration the new code uses bitwisenmagic to interleave / deinterleave two 32bit values into a 64bit one.nAll tests still passing and is measurably faster, so worth it.n",96.0,57.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER",2.0,2.0,2.0,0.10053087773783526,13.0,522.5,35.0,1.9847916666666667,8125.5,1.3778734124068437,3856.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52"", ""7659619824755b929251faff457d3873b9742f2b""]"
4160bf0448e93e25607f844a149b1418e3fa3dd4,5254c2d3c350f4edbb2f5dfde506fcb1ec58ee66,antirez,antirez@gmail.com,Fri Jul 3 09:47:08 2015 +0200,1435909628,Removed useless tryObjectEncoding() call from ZRANK.,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2922.0,109.0,10.680925925925926,8127.0,1.0936248417913552,3857.0,None,False,,
5254c2d3c350f4edbb2f5dfde506fcb1ec58ee66,5e04189887ed9100577374cede428c62d23fabe4,antirez,antirez@gmail.com,Mon Jul 6 18:39:25 2015 +0200,1436200765,"Geo: validate long,lat passed by user via API",25.0,9.0,"deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER",3.0,2.0,2.0,1.383099991189334,13.0,398.66666666666674,41.0,5.763877314814812,8129.0,1.111953688778913,3858.0,None,False,True,"[""f29e384853660434da912c49e8b29ebabe76bec3"", ""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
5e04189887ed9100577374cede428c62d23fabe4,1e12784259483991710183d127dc3abd4bd21f56,antirez,antirez@gmail.com,Thu Jul 9 11:25:10 2015 +0200,1436433910,Geo: -Ofast breaks builds on older GCCs.,2.0,2.0,"deps/geohash-int/Makefile,CAS_DELIMITER,src/geo.c,CAS_DELIMITER",2.0,2.0,2.0,1.0,13.0,411.0,33.0,212.65716435185183,8131.5,1.0023587085450596,3859.0,None,False,,
1e12784259483991710183d127dc3abd4bd21f56,965abcf10a2e0453ddc88dd96782418ff1d587f9,antirez,antirez@gmail.com,Thu Jul 9 11:27:53 2015 +0200,1436434073,Geo: use ULL suffix for unsigned 64 bit constants.,14.0,14.0,"deps/geohash-int/geohash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,295.0,7.0,2.700324074074074,8133.0,1.3703259211000052,737.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
965abcf10a2e0453ddc88dd96782418ff1d587f9,b96af595a5fddbbdcbf78ed3c51acd60976416f4,antirez,antirez@gmail.com,Thu Jul 9 17:42:59 2015 +0200,1436456579,"GEOENCODE / GEODECODE commands removed.Rationale:nn1. The commands look like internals exposed without a real strong usencase.n2. Whatever there is an use case, the client would implement thencommands client side instead of paying RTT just to use a simple tonreimplement library.n3. They add complexity to an otherwise quite straightforward API.nnSo for now KILLED ;-)n",0.0,108.0,"src/geo.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",3.0,2.0,2.0,0.6600033746738285,13.0,1625.333333333333,631.0,6.89230324074074,8135.0,2.3184165807141253,644.0,None,False,,
b96af595a5fddbbdcbf78ed3c51acd60976416f4,5c4fcaf3fe448c5575a9911edbcd421c6dbebb54,antirez,antirez@gmail.com,Mon Jul 13 15:30:11 2015 +0200,1436794211,"Geo: fix command table keys position indexes for three commands.GEOHASH, GEOPOS and GEODIST where declared as commands not acceptingnkeys, so the Redis Cluster redirection did not worked.nnClose #2671.n",3.0,3.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3904.0,587.0,3.9077777777777776,8137.0,1.2558999147000285,3862.0,None,False,,
5c4fcaf3fe448c5575a9911edbcd421c6dbebb54,4c7ee0d5848ab12b9d2b18bca62cffcbfac0e885,antirez,antirez@gmail.com,Mon Jul 13 18:06:24 2015 +0200,1436803584,"EXISTS is now variadic.The new return value is the number of keys existing, among the onesnspecified in the command line, counting the same key multiple times ifngiven multiple times (and if it exists).nnSee PR #2667.n",10.0,6.0,"src/db.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,13.0,2573.5,738.0,70.17299189814814,8138.5,1.0071280043711606,3864.0,Feature Addition,False,True,"[""2ffa533f8556b3c642b1099b98ba8b59889b1250""]"
4c7ee0d5848ab12b9d2b18bca62cffcbfac0e885,0f64080dcb9f44c923379f909aae82f6c2b2ed19,antirez,antirez@gmail.com,Tue Jul 14 17:15:37 2015 +0200,1436886937,"DEBUG HTSTATS <dbid> added.The command reports information about the hash table internal statenrepresenting the specified database ID.nnThis can be used in order to investigate rehashings, memory usage issuesnand for other debugging purposes.n",66.0,91.0,"src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",4.0,1.0,1.0,0.8885797241611753,13.0,1163.5,317.0,146.48955150462965,8141.5,1.0033448089012147,3868.0,Corrective,True,True,"[""f8909a25796d3a4e0cee6f5f2250e57143e10129"", ""78f35f8d2cff306d943366a5c05df9e75b0f028f""]"
0f64080dcb9f44c923379f909aae82f6c2b2ed19,f15df8ba5db09bdf4be58c53930799d82120cc34,Oran Agra,oran@redislabs.com,Thu Apr 9 10:37:01 2015 +0300,1428565021,sds size classes - memory optimization,364.0,139.0,"src/Makefile,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",8.0,1.0,1.0,1.6228576251405993,13.0,1065.75,831.0,-33.17145978009259,5.5,0.9949207712745276,9.0,None,False,True,"[""a76b380e06d6758dcd84277003ca7af520c2b422"", ""f86df924b01db43eb68f5c4b4cac4c44c1507390""]"
f15df8ba5db09bdf4be58c53930799d82120cc34,a76b380e06d6758dcd84277003ca7af520c2b422,antirez,antirez@gmail.com,Tue Jul 14 16:04:00 2015 +0200,1436882640,Fix DEBUG structsize output.,7.0,7.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1048.0,97.0,96.26873842592592,8144.0,1.0103875880825992,3869.0,Corrective,True,,
a76b380e06d6758dcd84277003ca7af520c2b422,056a0ca199edbc9f4644684468b8833884e74cd7,antirez,antirez@gmail.com,Tue Jul 14 17:33:30 2015 +0200,1436888010,"Fix redis-benchmark sds binding.Same as redis-cli, now redis-benchmark requires to use hiredis sds copynsince it is different compared to the memory optimized fork of Redisnsds.n",2.0,2.0,"src/Makefile,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,541.5,182.0,136.53596064814815,8145.5,1.0070214624538465,3871.0,Corrective,True,,
056a0ca199edbc9f4644684468b8833884e74cd7,0ab27a4594aa73ffdabf2afb935d85ab6c03f0ee,antirez,antirez@gmail.com,Wed Jul 15 12:24:49 2015 +0200,1436955889,"SDS: New sds type 5 implemented.This is an attempt to use the refcount feature of the sds.c forknprovided in the Pull Request #2509. A new type, SDS_TYPE_5 is introducednhaving a one byte header with just the string length, withoutninformation about the available additional length at the end of thenstring (this means that sdsMakeRoomFor() will be required each timenwe want to append something, since the string will always report to haven0 bytes available).nnMore work needed in order to avoid common SDS functions will pay thencost of this type. For example both sdscatprintf() and sdscatfmt()nshould try to upgrade to SDS_TYPE_8 ASAP when appending chars.n",83.0,57.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.9994110647387552,13.0,726.0,89.0,97.1165277777778,8147.5,1.0077226813721776,3873.0,None,False,True,"[""cf68f4ee6a4c466b893fbb269f6aff14c7c75e6a"", ""9682b616a21b5e675a1ca82109a11d6f4de1d2de""]"
0ab27a4594aa73ffdabf2afb935d85ab6c03f0ee,3da97ea67f3b25097d5a57aeda9ce5d94461035e,antirez,antirez@gmail.com,Thu Jul 16 09:14:39 2015 +0200,1437030879,Add sdshdr5 to DEBUG structsize.,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1048.0,98.0,1.7157291666666667,8149.0,1.582842571792848,3874.0,Corrective,True,,
0f64080dcb9f44c923379f909aae82f6c2b2ed19,e0bb454a16eff5596814e5773540c7e5e5409bde,antirez,antirez@gmail.com,Thu Jul 16 09:26:36 2015 +0200,1437031596,Clarify a comment in clientsCron().,5.0,5.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3904.0,589.0,2.6390277777777778,8150.0,1.378927424872375,3875.0,None,False,,
0f64080dcb9f44c923379f909aae82f6c2b2ed19,92c146dfd3f756855a37cb50c8fe29c9fb4b12c2,Jiahao Huang,july2993@gmail.com,Tue Jul 14 22:32:53 2015 +0800,1436884373,config tcp-keepalive should be numerical field not bool,4.0,4.0,"src/config.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,13.0,1540.0,277.0,110.16167824074074,4.5,1.0063005262581046,5.0,None,False,True,"[""e4e5a670e7e28485d6ba812759d7faabd90966d2""]"
e0bb454a16eff5596814e5773540c7e5e5409bde,25e1cb3f040262deb13c9be6a07e19b6cac485f0,antirez,antirez@gmail.com,Thu Jul 16 10:54:12 2015 +0200,1437036852,"Client timeout handling improved.The previos attempt to process each client at least once every tennseconds was not a good idea, because:nn1. Usually because of the past min iterations set to 50, you get muchnbetter processing period most of the times.nn2. However when there are many clients and a normal setting fornserver.hz, the edge case is triggered, and waiting 10 seconds for anBLPOP that asked for 1 second is not ok.nn3. Moreover, because of the high min-itereations limit of 50, when HZnwas set to an high value, the actual behavior was to process a lot ofnclients per second.nnAlso the function checking for timeouts called gettimeofday() at eachniteration which can be costly.nnThe new implementation will try to process each client once per second,ngets the current time as argument, and does not attempt to process morenthan 5 clients per iteration if not needed.nnSo now:nn1. The CPU usage of an idle Redis process is the same or better.n2. The CPU usage of a busy Redis process is the same or better.n3. However a non trivial amount of work may be performed per iterationnwhen there are many many clients. In this particular case the user maynwant to raise the HZ value if needed.nnBtw with 4000 clients it was still not possible to noticy any actualnlatency created by processing 400 clients per second, since the worknperformed for each client is pretty small.n",20.0,12.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3904.0,590.0,0.060833333333333336,8151.0,17.43835616438356,3876.0,None,False,,
25e1cb3f040262deb13c9be6a07e19b6cac485f0 92c146dfd3f756855a37cb50c8fe29c9fb4b12c2,f049cfdb0dbb92d64a274ecdaefa4dcc7cfee06d,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 17 10:34:43 2015 +0200,1437122083,Merge pull request #2676 from july2993/unstableconfig tcp-keepalive should be numerical field not bool,,,,,,,,,,,,,,,Merge,False,,
f049cfdb0dbb92d64a274ecdaefa4dcc7cfee06d,6142ddc6ebf2bdaf75dca73c795e36d1f0470422,Tom Kiemes,tom.kiemes@sap.com,Wed Jul 15 16:11:40 2015 +0200,1436969500,Fix: aof_delayed_fsync is not resetaof_delayed_fsync was not set to 0 when calling CONFIG RESETSTATn,1.0,0.0,"src/redis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3912.0,591.0,-0.779537037037037,0.0,0.0,0.0,Corrective,True,,
6142ddc6ebf2bdaf75dca73c795e36d1f0470422,427794d845534ea0e84e0ef9582f9ae5800c96cf,Yongyue Sun,abioy.sun@gmail.com,Fri Jul 10 15:25:40 2015 +0800,1436513140,bugfix: errno might change before loggingSigned-off-by: Yongyue Sun <abioy.sun@gmail.com>n,2.0,2.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,1572.0,278.0,163.2842418981481,0.5,0.5015310724237305,1.0,Corrective,True,,
427794d845534ea0e84e0ef9582f9ae5800c96cf c2322357343756b56adefd8f2f70dc09f43b1bb8,29391002f6825d972718225354b24059a11531cd,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 17 10:55:58 2015 +0200,1437123358,Merge pull request #2644 from MOON-CLJ/command_info_fixpfcount support multi keys,,,,,,,,,,,,,,,Merge,False,,
29391002f6825d972718225354b24059a11531cd c7462ca9ffd8ccafee2605bd5c69e6a5bc5b240a,bcb4d091233a98b025aac18b3a7e4966356323eb,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 17 11:00:44 2015 +0200,1437123644,Merge pull request #2636 from badboy/cluster-lock-fixCluster lock fix,,,,,,,,,,,,,,,Merge,False,,
3da97ea67f3b25097d5a57aeda9ce5d94461035e,cf68f4ee6a4c466b893fbb269f6aff14c7c75e6a,antirez,antirez@gmail.com,Mon Jul 20 16:18:06 2015 +0200,1437401886,Fix SDS type 5 sdsIncrLen() bug and added test.Thanks to @oranagra for spotting this error.n,27.0,15.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1216.0,63.0,5.1620023148148135,8152.0,1.1937232761655348,3877.0,Corrective,True,,
cf68f4ee6a4c466b893fbb269f6aff14c7c75e6a,ea9bd243ecf02760ac7a5e9a25bd2d067b71ee84,antirez,antirez@gmail.com,Thu Jul 23 09:16:47 2015 +0200,1437635807,"SDS: use type 8 if we are likely to append to the string.When empty strings are created, or when sdsMakeRoomFor() is called, wenare likely into an appending pattern. Use at least type 8 SDS stringsnsince TYPE 5 does not remember the free allocation size and requires toncall sdsMakeRoomFor() at every new piece appended.n",11.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1228.0,64.0,2.707418981481481,8153.0,1.3693554661616532,3878.0,None,False,,
bcb4d091233a98b025aac18b3a7e4966356323eb ea9bd243ecf02760ac7a5e9a25bd2d067b71ee84,935251259f19666bb0d8b7a83db771ca49d5e182,antirez,antirez@gmail.com,Fri Jul 24 08:49:23 2015 +0200,1437720563,Merge branch 'sds' into unstable,,,,,,,,,,,,,,,Merge,False,,
935251259f19666bb0d8b7a83db771ca49d5e182,64fcd0e6ff1f7a6b85f5432767a298a95eacfe00,antirez,antirez@gmail.com,Fri Jul 24 09:39:12 2015 +0200,1437723552,SDS: avoid compiler warning in sdsIncrLen().,1.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1239.0,65.0,1.0155671296296296,8154.0,1.9846714912530627,3879.0,None,False,,
64fcd0e6ff1f7a6b85f5432767a298a95eacfe00,6b836b6b4148a3623e35807e998097865b9ebb3a,antirez,antirez@gmail.com,Fri Jul 24 10:15:04 2015 +0200,1437725704,"Jemalloc: use LG_QUANTUM of 3 for AMD64 and I386.This gives us a 24 bytes size class which is dict.c dictEntry size, thusnimproving the memory efficiency of Redis significantly.nMoreover other non 16 bytes aligned tiny classes are added that furthernreduce the fragmentation of the allocator.nnTechnically speaking LG_QUANTUM should be 4 on i386 / AMD64 because ofnSSE types and other 16 bytes types, however we don't use those, and ournjemalloc only targets Redis.nnNew versions of Jemalloc will have an explicit configure switch in ordernto specify the quantum value for a platform without requiring any changento the Jemalloc source code: we'll switch to this system when available.nnThis change was originally proposed by Oran Agra (@oranagra) as a changento the Jemalloc script to generate the size classes define. We endedndoing it differently by changing LG_QUANTUM since it is apparently thensupported Jemalloc method to obtain a 24 bytes size class, moreover itnalso provides us other potentially useful size classes.nnRelated to issue #2510.n",2.0,2.0,"deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,1028.0,5.0,398.8026157407408,8155.0,1.002507506120898,738.0,None,False,,
64fcd0e6ff1f7a6b85f5432767a298a95eacfe00,ef29748d0d758c956f8adca70bc74902b0c2e20c,Rogerio Goncalves,rogerlz@gmail.com,Fri Jul 24 14:08:50 2015 +0200,1437739730,Check args before run ckquorum. Fix issue #2635,1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4293.0,211.0,41.816516203703706,0.0,0.0,0.0,Corrective,True,,
6b836b6b4148a3623e35807e998097865b9ebb3a,11425c89cf4a2c36941ac7b85c5f4d74636d4e45,antirez,antirez@gmail.com,Sat Jul 25 17:05:20 2015 +0200,1437836720,SDS: sdsjoinsds() call ported from antirez/sds fork.,13.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,0.3912435636292557,13.0,751.0,94.0,5.752309027777778,8156.5,1.4251941604950351,3881.0,None,False,,
11425c89cf4a2c36941ac7b85c5f4d74636d4e45,9894495c5a8e37a8e1dad9698e49cf842a027b2e,antirez,antirez@gmail.com,Sat Jul 25 17:08:44 2015 +0200,1437836924,SDS: Copyright notice updated.,6.0,4.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,757.5,96.0,0.002361111111111111,8158.5,318.64705882352933,3883.0,None,False,,
9894495c5a8e37a8e1dad9698e49cf842a027b2e,cb2782c314f0af3df56853974f7ba5541c095eeb,antirez,antirez@gmail.com,Sat Jul 25 17:25:44 2015 +0200,1437837944,SDS: changes to unify Redis SDS with antirez/sds repo.,75.0,27.0,"src/networking.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER,src/sdsalloc.h,CAS_DELIMITER",4.0,1.0,1.0,1.4035772179356385,13.0,819.25,309.0,26.837277199074073,8161.5,1.00931616951876,3887.0,None,False,,
cb2782c314f0af3df56853974f7ba5541c095eeb,c6333def1347c104e0861d21721121824554acee,antirez,antirez@gmail.com,Sat Jul 25 17:41:56 2015 +0200,1437838916,SDS: Copyright updated further.,2.0,0.0,"src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,758.0,100.0,0.01125,8164.5,67.66666666666666,3889.0,None,False,,
c6333def1347c104e0861d21721121824554acee,b684e2dad1d884af7bf1047febbb54ee6e0324ba,antirez,antirez@gmail.com,Sat Jul 25 17:50:47 2015 +0200,1437839447,deps/hiredis SDS updated to version 2.0.0.,513.0,145.0,"deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/sdsalloc.h,CAS_DELIMITER",3.0,1.0,1.0,1.1697191598351355,13.0,401.33333333333326,17.0,226.8098842592593,8167.0,1.0019798035470735,741.0,None,False,,
b684e2dad1d884af7bf1047febbb54ee6e0324ba,cef054e86856463d3e79d4a5048507377c85eab7,antirez,antirez@gmail.com,Sun Jul 26 15:14:57 2015 +0200,1437916497,RDMF (Redis/Disque merge friendlyness) refactoring WIP 1.,5612.0,5612.0,"src/Makefile,CAS_DELIMITER,src/Makefile.dep,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/crc16.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/geo.h,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redis.c,CAS_DELIMITER,src/redis.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/sparkline.c,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",39.0,1.0,1.0,2.0274573649022565,13.0,1046.025641025641,3777.0,162.51790034425454,8188.0,1.0027001037903651,3928.0,Non Functional,False,,
cef054e86856463d3e79d4a5048507377c85eab7,424fe9afd9264991cddb502204276a244537c87f,antirez,antirez@gmail.com,Sun Jul 26 15:17:43 2015 +0200,1437916663,RDMF: redisLog -> serverLog.,395.0,395.0,"src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",14.0,1.0,1.0,3.1205903084178566,13.0,1980.0714285714291,1765.0,0.0019212962962962962,8214.5,121.88424484293677,3942.0,None,False,,
424fe9afd9264991cddb502204276a244537c87f,554bd0e7bd81715e319cafda437ed2aebd44b6e9,antirez,antirez@gmail.com,Sun Jul 26 15:20:46 2015 +0200,1437916846,"RDMF: use client instead of redisClient, like Disque.",619.0,619.0,"src/aof.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",29.0,1.0,1.0,3.561045665537442,13.0,1361.6206896551723,2571.0,38.99819923371646,8236.0,29.067178943494874,3971.0,None,False,True,"[""55ba77270363400625f4563788d8f842408389a2"", ""f29e384853660434da912c49e8b29ebabe76bec3"", ""f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c"", ""65a9740fa880a8e5b4640037a3670f8a2f33080b""]"
554bd0e7bd81715e319cafda437ed2aebd44b6e9,14ff572482cfe02c5ac61a1816cb8099d458e499,antirez,antirez@gmail.com,Sun Jul 26 15:28:00 2015 +0200,1437917280,RDMF: OBJ_ macros for object related stuff.,578.0,578.0,"src/aof.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",23.0,1.0,1.0,3.9113955135412266,13.0,1457.0869565217392,2269.0,0.005198772141706927,8262.0,32.910938226632155,3994.0,None,False,True,"[""34e489cb8cee04b52b5cbbfe53280ad8419d0a96"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
14ff572482cfe02c5ac61a1816cb8099d458e499,2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,antirez,antirez@gmail.com,Sun Jul 26 15:29:53 2015 +0200,1437917393,RDMF: redisAssert -> serverAssert.,209.0,209.0,"src/aof.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redisassert.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",24.0,1.0,1.0,3.9041367807494978,13.0,1542.333333333333,2442.0,29.42015817901236,8285.5,65.32599404858742,4018.0,None,False,True,"[""7d9dd80db3c4bc028072071d87bd97ea171195f5"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,40eb548a80797b93cc733876654ff0978d7381cf,antirez,antirez@gmail.com,Sun Jul 26 23:17:55 2015 +0200,1437945475,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,512.0,512.0,"src/aof.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",24.0,1.0,1.0,4.139710918772788,13.0,1577.791666666667,2531.0,0.3252411265432098,8309.5,1.483693649790098,4042.0,None,False,True,"[""292fec058a32323d5aa52dddfa86be280e29fe65"", ""8e55537459f8be2d4310117f9f36c5a2ffa1451c"", ""f29e384853660434da912c49e8b29ebabe76bec3"", ""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e"", ""5e3880a492efd6c305d7bde5be44c1de72e15cb0"", ""22be435efe63af749149db4ad9177c0f2515be70"", ""65a9740fa880a8e5b4640037a3670f8a2f33080b"", ""f782006782c9eb82c893c12084bec1c0cf7d521e"", ""b660fc2fbe545f4a20a907ffa6c8333396435907"", ""fbef85ca5aca774c7533c6e0760edfd6258948c7"", ""cd87b3c71f79062d9e95abada186e1cac03f5cc6"", ""2d4366c5440ddd565e91142d59455232b6894dbd"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
40eb548a80797b93cc733876654ff0978d7381cf,32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,antirez,antirez@gmail.com,Mon Jul 27 09:41:48 2015 +0200,1437982908,RDMF: More consistent define names.,1740.0,1740.0,"src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",33.0,1.0,1.0,4.1980860291041076,13.0,1310.3333333333333,2891.0,4.184030934343432,8338.0,1.215140862519794,4075.0,None,False,True,"[""292fec058a32323d5aa52dddfa86be280e29fe65"", ""55ba77270363400625f4563788d8f842408389a2"", ""8e55537459f8be2d4310117f9f36c5a2ffa1451c"", ""ed6228851cfc7731a4e84201a3b2d6c11d925438"", ""514a23472262de499005a31b1af3cca08a1c84ba"", ""7be917058560c2281a1ee891cb6ff6a7b8de345b"", ""36801f7e43089bc3051e4732b38c4cfa65e92caf"", ""acc2336fd189ddf9e97b0fc589c43ae26a1fd153"", ""a1c9c05e17a1d49425ac0d87196fe91869645a08"", ""31a70a8bcf01ceb35ccbd2ae1f567ddf45321b2f"", ""a1a07225b3963eb251b518737a3f6b59515faaa1"", ""e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947"", ""60a4f12f8b998c44dfff0e88202b01598287390d"", ""f782006782c9eb82c893c12084bec1c0cf7d521e"", ""c85ae56edc982d28df5cb29eedcd9d8bc9840a05"", ""cec404f099e3a1a3ce6e94c01ce45d851bd3e843"", ""e3dfd8c811e12b6b1d3f7febf732b23fdaab497b"", ""69c30965eb15ed86acadd8e9db79feb7b7633497"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec"", ""48d591a010bbe4cf0c09a4d84a55ee3f31e5664f"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6"", ""129d14e1431e913426485526663e1a9aac67838c""]"
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,3325a9b11f9761aaee5f7993b555be44e3d51342,antirez,antirez@gmail.com,Mon Jul 27 14:55:45 2015 +0200,1438001745,RDMF: more names updated.,271.0,271.0,"src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",8.0,1.0,1.0,1.5550465178766473,13.0,1619.125,857.0,122.43155526620369,8358.5,1.8607762179285885,4083.0,None,False,True,"[""e0f22df9950b584569771d486fd4e933432fe395""]"
3325a9b11f9761aaee5f7993b555be44e3d51342,02b1d5213da7c05605766bbbc33a0cdefb359b99,antirez,antirez@gmail.com,Mon Jul 27 15:08:58 2015 +0200,1438002538,RDMF: use representClusterNodeFlags() generic name.,4.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5014.0,465.0,0.00917824074074074,8363.0,109.95334174022699,4084.0,None,False,True,"[""a3778f3b0f0aacbb34ecc77541615a9eda251443""]"
02b1d5213da7c05605766bbbc33a0cdefb359b99,a83e79b176eb0bce412668539edf04978596a052,antirez,antirez@gmail.com,Tue Jul 28 10:14:33 2015 +0200,1438071273,Use mstime_t as return value of mstime().,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3908.0,8.0,0.8047222222222222,8364.0,2.2426648256817394,4085.0,None,False,,
a83e79b176eb0bce412668539edf04978596a052,5cfb792777c18778092334bf251d97b681afda84,antirez,antirez@gmail.com,Tue Jul 28 11:03:01 2015 +0200,1438074181,RDMF: dictRedisObjectDestructor -> dictObjectDestructor.,8.0,8.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3908.0,9.0,0.033657407407407414,8365.0,30.711141678129298,4086.0,None,False,,
5cfb792777c18778092334bf251d97b681afda84,813ff7fdde5d03bfe7109c4a8991fd9509fafd8f,antirez,antirez@gmail.com,Tue Jul 28 11:10:42 2015 +0200,1438074642,Avoid magic 0 argument to prepareForShutdown().Backported from Disque.n,5.0,4.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,13.0,2754.5,17.0,0.5335358796296297,8366.5,95.17789959718266,4088.0,None,False,,
813ff7fdde5d03bfe7109c4a8991fd9509fafd8f,54c71f2d9678881b22577951f4e5b6823d0c193e,antirez,antirez@gmail.com,Tue Jul 28 11:19:20 2015 +0200,1438075160,RDMF: Redis -> Server in adjustOpenFilesLimit().,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3908.0,11.0,0.0059953703703703705,8368.0,167.79536679536682,4089.0,None,False,,
54c71f2d9678881b22577951f4e5b6823d0c193e,278ea9d16b24add67379e569c236c69fecf55bdb,antirez,antirez@gmail.com,Tue Jul 28 14:36:50 2015 +0200,1438087010,replicationHandleMasterDisconnection() belongs to replication.c.,14.0,14.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,1946.0,375.0,1.2048842592592592,8369.5,1.6224664271579796,4091.0,None,False,,
278ea9d16b24add67379e569c236c69fecf55bdb,c1e94b6b9c6432ade2ec427dc8602189c19758e7,antirez,antirez@gmail.com,Tue Jul 28 16:14:52 2015 +0200,1438092892,"Force slaves to resync after unsuccessful PSYNC.Using chained replication where C is slave of B which is in turn slave ofnA, if B reconnects the replication link with A but discovers it is nonlonger possible to PSYNC, slaves of B must be disconnected and PSYNCnnot allowed, since the new B dataset may be completely different afternthe synchronization with the master.nnNote that there are varius semantical differences in the way this isnhandled now compared to the past. In the past the semantics was:nn1. When a slave lost connection with its master, disconnected the chainednslaves ASAP. Which is not needed since after a successful PSYNC with thenmaster, the slaves can continue and don't need to resync in turn.nn2. However after a failed PSYNC the replication backlog was not reset, so anslave was able to PSYNC successfully even if the instance did a fullnsync with its master, containing now an entirely different data set.nnNow instead chained slaves are not disconnected when the slave lose thenconnection with its master, but only when it is forced to full SYNC withnits master. This means that if the slave having chained slaves does ansuccessful PSYNC all its slaves can continue without troubles.nnSee issue #2694 for more details.n",10.0,6.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2139.0,157.0,0.0680787037037037,8371.0,15.688881332879975,4092.0,Feature Addition,False,,
c1e94b6b9c6432ade2ec427dc8602189c19758e7,e6f39338e6464fb29f630120d8949b0d535e2e3f,antirez,antirez@gmail.com,Tue Jul 28 16:58:04 2015 +0200,1438095484,CLIENT_MASTER introduced.,20.0,10.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.8207881683421487,13.0,2285.75,417.0,0.41486979166666665,8373.5,1.7686734152605084,4096.0,None,False,,
e6f39338e6464fb29f630120d8949b0d535e2e3f,3c8861a73af8a472053fc3c0b47452a2b6051d53,antirez,antirez@gmail.com,Tue Jul 28 17:01:19 2015 +0200,1438095679,Support for CLIENT KILL TYPE MASTER.,1.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1760.0,221.0,0.0022569444444444442,8376.0,444.0769230769232,4097.0,None,False,,
3c8861a73af8a472053fc3c0b47452a2b6051d53,4bc42ca7f6608c3e77c451c580c4b9c629480169,antirez,antirez@gmail.com,Wed Jul 29 12:13:20 2015 +0200,1438164800,checkTcpBacklogSetting() now called in Sentinel mode too.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3908.0,13.0,0.8022685185185185,8377.0,2.246465462519476,4098.0,None,False,,
4bc42ca7f6608c3e77c451c580c4b9c629480169,6233d210cd624ba3645426f1a6b52f5de0388dc1,antirez,antirez@gmail.com,Wed Jul 29 12:27:25 2015 +0200,1438165645,Sentinel: add more commonly useful sections to INFO.Debugging is hard without those when there are problems like the oneninvestigated in issue #2700.n,15.0,6.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4294.0,218.0,2.115011574074074,8378.0,1.472810651373285,4099.0,None,False,,
6233d210cd624ba3645426f1a6b52f5de0388dc1,d1ff328170a161fc002e47954e5dd0e0989d2ce9,antirez,antirez@gmail.com,Tue Aug 4 13:14:25 2015 +0200,1438686865,Test PSYNC with diskless replication.Thanks to Oran Agra from Redis Labs for providing this patch.n,17.0,13.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,115.0,4.0,403.78081018518515,8379.0,1.002476591196945,645.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
d1ff328170a161fc002e47954e5dd0e0989d2ce9,292fec058a32323d5aa52dddfa86be280e29fe65,antirez,antirez@gmail.com,Tue Aug 4 16:56:00 2015 +0200,1438700160,"PSYNC initial offset fix.This commit attempts to fix a bug involving PSYNC and disklessnreplication (currently experimental) found by Yuval Inbar from Redis Labsnand that was later found to have even more far reaching effects (the bug alsonexists when diskstore is off).nnThe gist of the bug is that, a Redis master replies with +FULLRESYNC tona PSYNC attempt that fails and requires a full resynchronization.nHowever, the baseline offset sent along with FULLRESYNC was always thencurrent master replication offset. This is not ok, because there arenmany reasosn that may delay the RDB file creation. And... guess what,nthe master offset we communicate must be the one of the time the RDBnwas created. So for example:nn1) When the BGSAVE for replication is delayed since there is onen   already but is not good for replication.n2) When the BGSAVE is not needed as we attach one currently ongoing.n3) When because of diskless replication the BGSAVE is delayed.nnIn all the above cases the PSYNC reply is wrong and the slave maynreconnect later claiming to need a wrong offset: this may causendata curruption later.n",61.0,17.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",4.0,1.0,1.0,1.0701291839568683,13.0,1388.75,331.0,7.603041087962962,8381.5,1.0658395021137648,4103.0,Corrective,True,,
292fec058a32323d5aa52dddfa86be280e29fe65,62b5c60ead59e29663a44a79148ee4ffdf2f6ec2,antirez,antirez@gmail.com,Wed Aug 5 08:41:57 2015 +0200,1438756917,syncCommand() comments improved.,8.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2176.0,159.0,0.6569097222222222,8384.0,2.5222791902320423,4104.0,None,False,,
62b5c60ead59e29663a44a79148ee4ffdf2f6ec2,76e0be416d9ba1a81a91ddda08c0dad6e1c9fbe6,antirez,antirez@gmail.com,Wed Aug 5 09:18:54 2015 +0200,1438759134,PSYNC test: also test the vanilla SYNC.,27.0,18.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,119.0,5.0,0.8364467592592593,8385.0,2.1955333545503604,646.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
76e0be416d9ba1a81a91ddda08c0dad6e1c9fbe6,a5a06a8ecd463ab32129134ed567ef07360eeb6a,antirez,antirez@gmail.com,Wed Aug 5 11:23:22 2015 +0200,1438766602,Don't send SELECT to slaves in WAIT_BGSAVE_START state.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2183.0,160.0,0.1120949074074074,8386.0,9.921011874032008,4105.0,None,False,,
a5a06a8ecd463ab32129134ed567ef07360eeb6a,175707e550658cf592a6d8ac7e3284649c274dad,antirez,antirez@gmail.com,Wed Aug 5 12:27:15 2015 +0200,1438770435,Test: csvdump now scans all DBs.,36.0,32.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,373.0,22.0,364.9003587962963,8387.0,1.0027404741483366,647.0,Preventative,False,,
175707e550658cf592a6d8ac7e3284649c274dad,15de6b108b5d67c4d21fc67b50b1297c4c052bc6,antirez,antirez@gmail.com,Wed Aug 5 13:34:46 2015 +0200,1438774486,"Make sure we re-emit SELECT after each new slave full sync setup.In previous commits we moved the FULLRESYNC to the moment we start thenBGSAVE, so that the offset we provide is the right one. However thisnalso means that we need to re-emit the SELECT statement every time a newnslave starts to accumulate the changes.nnTo obtian this effect in a more clean way, the function that sends thenFULLRESYNC reply was overloaded with a more important role of also doingnthis and chanigng the slave state. So it was renamed tonreplicationSetupSlaveForFullResync() to better reflect what it does now.n",26.0,17.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5395046027107565,13.0,1819.0,326.0,0.6039197530864198,8389.0,1.921787755425509,4108.0,Feature Addition,False,,
15de6b108b5d67c4d21fc67b50b1297c4c052bc6,54ece2c583c3205ad10a6793d7de5dc5dcfda316,antirez,antirez@gmail.com,Wed Aug 5 13:58:56 2015 +0200,1438775936,Remove slave state change handled by replicationSetupSlaveForFullResync().,0.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1663.0,156.0,0.01678240740740741,8391.0,60.58620689655172,4109.0,None,False,,
54ece2c583c3205ad10a6793d7de5dc5dcfda316,1d5949734337fb9873ca0a257c4163add43cb152,antirez,antirez@gmail.com,Wed Aug 5 14:05:34 2015 +0200,1438776334,Fix RDB encoding test for new csvdump format.,13.0,13.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,98.0,8.0,182.05017361111112,8392.0,1.0054929911911876,648.0,Corrective,True,,
1d5949734337fb9873ca0a257c4163add43cb152,55ba77270363400625f4563788d8f842408389a2,antirez,antirez@gmail.com,Wed Aug 5 16:49:16 2015 +0200,1438786156,"Fix replication slave pings period.For PINGs we use the period configured by the user, but for the newlinesnof slaves waiting for an RDB to be created (including slaves waiting fornthe FULLRESYNC reply) we need to ping with frequency of 1 second, sincenthe timeout is fixed and needs to be refreshed.n",26.0,20.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2193.0,162.0,0.13506944444444444,8393.0,8.403598971722365,4110.0,Corrective,True,,
55ba77270363400625f4563788d8f842408389a2,7ab3af0edc238c869827c185f997c0a99f4506b5,antirez,antirez@gmail.com,Wed Aug 5 16:51:50 2015 +0200,1438786310,"Fix synchronous readline n handling.Our function to read a line with a timeout handles newlines as requestsnto refresh the timeout, however the code kept subtracting the buffernsize left every time a newline was received, for a bug in the loopnlogic. Fixed by this commit.n",3.0,0.0,"src/syncio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,150.0,11.0,0.9971064814814816,8394.0,2.0029019152640744,4111.0,Corrective,True,,
7ab3af0edc238c869827c185f997c0a99f4506b5,3e6d4d599a07ec347ef2f77c6b292223e7be6a16,antirez,antirez@gmail.com,Thu Aug 6 09:23:23 2015 +0200,1438845803,"Replication: add REPLCONF CAPA EOF support.Add the concept of slaves capabilities to Redis, the slave now presentsnto the Redis master with a set of capabilities in the form:nnREPLCONF capa SOMECAPA capa OTHERCAPA ...nnThis has the effect of setting slave->slave_capa with the correspondingnSLAVE_CAPA macros that the master can test later to understand if itnthe slave will understand certain formats and protocols of thenreplication process. This makes it much simpler to introduce newnreplication capabilities in the future in a way that don't break oldnslaves or masters.nnThis patch was designed and implemented together with Oran Agran(@oranagra).n",51.0,11.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5215912118439294,13.0,1855.666666666667,396.0,3.3992592592592588,8396.0,1.1066461226562792,4114.0,None,False,,
3e6d4d599a07ec347ef2f77c6b292223e7be6a16,fd08839a3a9e8dba242886286f6d182044686e69,antirez,antirez@gmail.com,Thu Aug 6 09:41:11 2015 +0200,1438846871,Client structure comments improved.,27.0,27.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1615.0,12.0,0.012361111111111113,8398.0,81.89887640449439,4115.0,None,False,True,"[""22be435efe63af749149db4ad9177c0f2515be70""]"
fd08839a3a9e8dba242886286f6d182044686e69,ce5761e0618b8d5788c2f6f8f6a514a77040ab24,antirez,antirez@gmail.com,Thu Aug 6 09:49:38 2015 +0200,1438847378,startBgsaveForReplication(): log what you really do.,3.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2233.0,164.0,0.018229166666666668,8399.0,55.85714285714285,4116.0,None,False,,
ce5761e0618b8d5788c2f6f8f6a514a77040ab24,55cb64bbfb7d4a32fd1289137631f0f0de4cd2d1,antirez,antirez@gmail.com,Thu Aug 6 15:08:54 2015 +0200,1438866534,"flushSlavesOutputBuffers(): details clarified via comments.Talking with @oranagra we had to reason a little bit to understand ifnthis function could ever flush the output buffers of the wrong slaves,nhaving online state but actually not being ready to receive writesnbefore the first ACK is received from them (this happens with disklessnreplication).nnNext time we'll just read this comment.n",6.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1759.0,223.0,0.2399421296296297,8400.0,5.167671602913512,4117.0,None,False,,
55cb64bbfb7d4a32fd1289137631f0f0de4cd2d1,88c716a0f57084bc7c4043371a95895664e3a578,antirez,antirez@gmail.com,Thu Aug 6 16:49:30 2015 +0200,1438872570,syncWithMaster(): non blocking state machine.,207.0,94.0,"src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/syncio.c,CAS_DELIMITER",3.0,1.0,1.0,0.5381304758302218,13.0,1334.0,190.0,0.5291319444444444,8402.0,2.9191229896433257,4120.0,None,False,True,"[""ed6228851cfc7731a4e84201a3b2d6c11d925438"", ""498f65ffb77e7fab9c9085394657ba7b46bedde9"", ""e8d68b6b72c7bbba63120d9024138dacd583d22d""]"
88c716a0f57084bc7c4043371a95895664e3a578,bea1259190a9f3c3850b074ef7d0af0bc3ea36a7,antirez,antirez@gmail.com,Fri Aug 7 12:04:35 2015 +0200,1438941875,"slaveTryPartialResynchronization and syncWithMaster: better synergy.It is simpler if removing the read event handler from the FD is up tonslaveTryPartialResynchronization, after all it is only called in thencontext of syncWithMaster.nnThis commit also makes sure that on error all the event handlers arenremoved from the socket before closing it.n",16.0,14.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2347.0,166.0,0.8021412037037037,8404.0,2.2466632999062117,4121.0,None,False,,
bea1259190a9f3c3850b074ef7d0af0bc3ea36a7,97a2248309937a2cecb8b800af40526e06fc64c4,Sebastian Waisbrot,seppo0010@users.noreply.github.com,Tue Aug 11 22:56:17 2015 -0700,1439358977,Fix race condition in unit/introspectionMake sure monitor is attached in one connection before issuing commands to be monitored in another one,4.0,3.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,59.0,8.0,376.4697685185186,0.0,0.0,0.0,Corrective,True,,
bea1259190a9f3c3850b074ef7d0af0bc3ea36a7,f18e5b634dbca5a31b88e6cc4e4a571afed0753b,antirez,antirez@gmail.com,Thu Aug 20 17:39:48 2015 +0200,1440085188,"startBgsaveForReplication(): handle waiting slaves state change.Before this commit, after triggering a BGSAVE it was up to the caller ofnstartBgsavForReplication() to handle slaves in WAIT_BGSAVE_START innorder to update them accordingly. However when the replication target isnthe socket, this is not possible since the process of updating thenslaves and sending the FULLRESYNC reply must be coupled with the processnof starting an RDB save (the reason is, we need to send the FULLSYNCncommand and spawn a child that will start to send RDB data to the slavesnASAP).nnThis commit moves the responsibility of handling slaves innWAIT_BGSAVE_START to startBgsavForReplication() so that for bothndiskless and disk-based replication we have the same chain ofnresponsiblity. In order accomodate such change, the syncCommand() alsonneeds to put the client in the slave list ASAP (just after the initialnchecks) and not at the end, so that startBgsavForReplication() can findnthe new slave alrady in the list.nnAnother related change is what happens if the BGSAVE fails because ofnfork() or other errors: we now remove the slave from the list of slavesnand send an error, scheduling the slave connection to be terminated.nnAs a side effect of this change the following errors found bynOran Agra are fixed (thanks!):nn1. rdbSaveToSlavesSockets() on failed fork will get the slaves cleanednup, otherwise they remain in a wrong state forever since we setup themnfor full resync before actually trying to fork.nn2. updateSlavesWaitingBgsave() with replication target set as socketnwas broken since the function changed the slaves state fromnWAIT_BGSAVE_START to WAIT_BGSAVE_END vianreplicationSetupSlaveForFullResync(), so later rdbSaveToSlavesSockets()nwill not find any slave in the right state (WAIT_BGSAVE_START) to feed.n",60.0,47.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2349.0,167.0,13.232789351851851,8405.0,1.07556985707326,4122.0,None,False,True,"[""dcffca0a31bfd2ed9aec0f2cc49d14767c7ffec6"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""bea0384f5d616dd44b5202ccb2c5345f4a671d13""]"
f18e5b634dbca5a31b88e6cc4e4a571afed0753b,d036abe27d3a7bb985f94c14b596846e321dce39,antirez,antirez@gmail.com,Fri Aug 21 15:29:07 2015 +0200,1440163747,Log client details on SLAVEOF command having an effect.,8.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2362.0,168.0,0.9092476851851852,8406.0,2.099810333634593,4123.0,None,False,,
d036abe27d3a7bb985f94c14b596846e321dce39,413d8239dfc9ddc275b6ab87caa3819f7dfb20f8,kmiku7,kakoimiku@gmail.com,Sun Aug 23 16:47:42 2015 +0800,1440319662,fix boundary case for _dictNextPower,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1082.0,62.0,39.730613425925924,0.0,0.0,0.0,Corrective,True,,
d036abe27d3a7bb985f94c14b596846e321dce39,467de61c84965208aea6d446010a504181b453f0,antirez,antirez@gmail.com,Mon Sep 7 11:14:50 2015 +0200,1441617290,"Test: print info on HSTRLEN test failure.This additional info may provide more clues about the test randomlynfailing from time to time. Probably the failure is due to some previousntest that overwrites the logical content in the Tcl variable, but thisnwill make the problem more obvious.n",4.0,1.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,515.0,20.0,191.77090277777785,8407.0,1.0052145554175067,649.0,Preventative,False,,
467de61c84965208aea6d446010a504181b453f0,11381b09d9feb7b355497704929354e801d39968,ubuntu,avi@redislabs.com,Mon Sep 7 11:20:52 2015 +0000,1441624852,SCAN iter parsing changed from atoi to chartoull,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2317.0,142.0,42.152129629629634,0.0,0.0,0.0,None,False,,
467de61c84965208aea6d446010a504181b453f0 11381b09d9feb7b355497704929354e801d39968,5f813035033a8a355c211e9bfb1694d8025c6634,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 7 13:24:43 2015 +0200,1441625083,Merge pull request #2753 from ofirluzon/unstableSCAN iter parsing changed from atoi to chartoull,,,,,,,,,,,,,,,Merge,False,,
5f813035033a8a355c211e9bfb1694d8025c6634,8e55537459f8be2d4310117f9f36c5a2ffa1451c,antirez,antirez@gmail.com,Mon Sep 7 16:09:23 2015 +0200,1441634963,"Undo slaves state change on failed rdbSaveToSlavesSockets().As Oran Agra suggested, in startBgsaveForReplication() when the BGSAVEnattempt returns an error, we scan the list of slaves in order to removenthem since there is no way to serve them currently.nnHowever we check for the replication state BGSAVE_START, which wasnmodified by rdbSaveToSlaveSockets() before forking(). So when fork failsnthe state of slaves remain BGSAVE_END and no cleanup is performed.nnThis commit fixes the problem by making rdbSaveToSlavesSockets() able tonundo the state change on fork failure.n",26.0,10.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1662.0,157.0,33.09059027777778,8408.0,1.0302200713739325,4124.0,Corrective,True,,
8e55537459f8be2d4310117f9f36c5a2ffa1451c ef29748d0d758c956f8adca70bc74902b0c2e20c,0c62d955383a5df85ec78808cf7b79e94827e427,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 8 09:24:45 2015 +0200,1441697085,Merge pull request #2695 from rogerlz/unstableredis-sentinel crash if ckquorum command is executed without args,,,,,,,,,,,,,,,Merge,False,,
0c62d955383a5df85ec78808cf7b79e94827e427,33769f840cd53f03caf8f4b886a7c95182492027,antirez,antirez@gmail.com,Tue Sep 8 09:27:43 2015 +0200,1441697263,Sentinel: command arity check added where missing.,2.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4303.0,219.0,40.87520833333333,8409.0,1.0244647071115844,4125.0,None,False,,
33769f840cd53f03caf8f4b886a7c95182492027,f529a01c1b52367b4337119ae8f86fd1d790a5ea,antirez,antirez@gmail.com,Mon Sep 14 12:28:22 2015 +0200,1442226502,"MOVE now can move TTL metadata as well.MOVE was not able to move the TTL: when a key was moved into a differentndatabase number, it became persistent like if PERSIST was used.nnIn some incredible way (I guess almost nobody uses Redis MOVE) this bugnremained unnoticed inside Redis internals for many years.nFinally Andy Grunwald discovered it and opened an issue.nnThis commit fixes the bug and adds a regression test.nnClose #2765.n",16.0,1.0,"src/db.c,CAS_DELIMITER,tests/unit/keyspace.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7871265862012691,13.0,748.0,158.0,125.07758680555555,8410.5,1.0121788095933115,650.0,None,False,True,"[""4fec5ee1650131eed40044a1614bd3d70ba1696c""]"
f529a01c1b52367b4337119ae8f86fd1d790a5ea,4fec5ee1650131eed40044a1614bd3d70ba1696c,antirez,antirez@gmail.com,Mon Sep 14 12:33:48 2015 +0200,1442226828,MOVE re-add TTL check fixed.getExpire() returns -1 when no expire exists.nnRelated to #2765.n,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1249.0,158.0,0.003773148148148148,8412.0,266.0306748466257,4127.0,Corrective,True,,
4fec5ee1650131eed40044a1614bd3d70ba1696c,0a91fc459f8fb1c6ad37e6e8943bedd7903d8b69,antirez,antirez@gmail.com,Mon Sep 14 12:35:51 2015 +0200,1442226951,Test: MOVE expire test improved.Related to #2765.n,13.0,0.0,"tests/unit/keyspace.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,262.0,2.0,0.00519675925925926,8413.0,193.4276169265033,651.0,Preventative,False,,
0a91fc459f8fb1c6ad37e6e8943bedd7903d8b69,3c23b5ffd0d7dd01df79154c1701d4d3ded7bf66,antirez,antirez@gmail.com,Mon Sep 14 23:05:40 2015 +0200,1442264740,"GEORADIUS: Don't report duplicates when radius is huge.Georadius works by computing the center + neighbors squares covering allnthe area of the specified position and radius. Then a distance filter isnused to remove elements which are actually outside the range.nnWhen a huge radius is used, like 5000 km or more, adjacent neighbors mayncollide and be the same, leading to the reporting of the same elementnmultiple times. This only happens in the edge case of huge radius but isnnot ideal.nnA robust but slow solution would involve qsorting the range to removenall the duplicates. However since the collisions are only in adjacentnboxes, for the way they are ordered in the code, it is much faster tonjust check if the current box is the same as the previous one processed.nnThis commit adds a regression test for the bug.nnFixes #2767.n",16.0,1.0,"src/geo.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8739810481273578,13.0,432.0,50.0,58.607789351851864,8414.5,1.0142673462755667,652.0,None,False,,
3c23b5ffd0d7dd01df79154c1701d4d3ded7bf66,846da5b22e7877614694b4bda94fe0fdca34ada9,antirez,antirez@gmail.com,Tue Sep 15 09:37:30 2015 +0200,1442302650,"Test: fix false positive in HSTRLEN test.HINCRBY* tests later used the value tmp that was sometimes generatednby the random key generation function. The result was ovewriting whatnTcl expected to be inside Redis with another value, causing the nextnHSTRLEN test to fail.n",5.0,5.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,518.0,21.0,7.932407407407408,8416.0,1.126065133652387,653.0,Preventative,False,,
846da5b22e7877614694b4bda94fe0fdca34ada9,622366aa74e8584a5a2ba9da8461432d3200ddb9,antirez,antirez@gmail.com,Tue Sep 29 17:30:24 2015 +0200,1443540624,Mark version of unstable branch in an unique way.,1.0,1.0,"src/version.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,1.0,23.0,226.96605324074073,8417.0,1.004405945231551,4129.0,None,False,,
622366aa74e8584a5a2ba9da8461432d3200ddb9,d1b6a17d1ed64c919d55a27ea780e973196a5e98,antirez,antirez@gmail.com,Wed Sep 30 16:24:17 2015 +0200,1443623057,"redis-cli pipe mode: don't stay in the write loop forever.The code was broken and resulted in redis-cli --pipe to, most of thentimes, writing everything received in the standard input to the Redisnconnection socket without ever reading back the replies, until all thencontent to write was written.nnThis means that Redis had to accumulate all the output in the outputnbuffers of the client, consuming a lot of memory.nnFixed thanks to the original report of anomalies in the behaviornprovided by Twitter user @fsaintjacques.n",6.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2317.0,143.0,23.127372685185186,8418.0,1.0432388068291292,4130.0,None,False,,
d1b6a17d1ed64c919d55a27ea780e973196a5e98,1c7d87df0cd64fd786bebd5cb9636912504359d5,antirez,antirez@gmail.com,Mon Sep 28 18:25:57 2015 +0200,1443457557,Avoid installing the client write handler when possible.,56.0,7.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.558674239110854,13.0,2415.75,421.0,51.39634548611111,8420.5,1.010299456573161,4134.0,None,False,True,"[""69c30965eb15ed86acadd8e9db79feb7b7633497""]"
1c7d87df0cd64fd786bebd5cb9636912504359d5,481a0db31504a01178392a9a7e93810f72faadf7,antirez,antirez@gmail.com,Mon Sep 28 19:06:36 2015 +0200,1443459996,Move handleClientsWithPendingWrites() in networking.c.,29.0,28.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.1098746521432359,13.0,2446.333333333333,255.0,0.028229166666666663,8424.0,22.648216482164827,4137.0,None,False,True,"[""01c08b508927adfb9ca6857db076c849f945e1be""]"
481a0db31504a01178392a9a7e93810f72faadf7,b741a90ce9a7e0ff4e98523a49947a9ec545a62f,antirez,antirez@gmail.com,Mon Sep 28 19:27:51 2015 +0200,1443461271,handleClientsWithPendingWrites(): detect dead clients.,17.0,7.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1801.0,226.0,0.014756944444444444,8426.0,68.76470588235293,4138.0,None,False,,
b741a90ce9a7e0ff4e98523a49947a9ec545a62f,063ecbd5e59d536d2db661c2953eaef016a60ee7,antirez,antirez@gmail.com,Mon Sep 28 19:33:09 2015 +0200,1443461589,writeToClient(): don't remove write handler if not needed.,4.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1811.0,227.0,0.0036805555555555545,8427.0,272.6981132075472,4139.0,None,False,,
063ecbd5e59d536d2db661c2953eaef016a60ee7,825f65d2bdc86b4efae3d79fd39b0de3343c3474,antirez,antirez@gmail.com,Mon Sep 28 23:25:52 2015 +0200,1443475552,Reverse list of clients with pending writes.May potentially improve locality... not exactly clear if this makes andifference or not. But for sure is harmless.n,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1811.0,228.0,0.1616087962962963,8428.0,7.187781995273223,4140.0,None,False,True,"[""69c30965eb15ed86acadd8e9db79feb7b7633497""]"
825f65d2bdc86b4efae3d79fd39b0de3343c3474,fdb3be939ec30be0d39ea639c3988be8b1516c2c,antirez,antirez@gmail.com,Wed Sep 30 16:41:48 2015 +0200,1443624108,Refactoring: new function to test if client has pending output.,17.0,8.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8663137138648348,13.0,1937.0,415.0,1.8488387345679007,8430.0,1.3453615955022729,4143.0,None,False,True,"[""e6a51174263d2501a8c35baa9a5773b2da9d00bf"", ""69c30965eb15ed86acadd8e9db79feb7b7633497""]"
fdb3be939ec30be0d39ea639c3988be8b1516c2c,1e7153831dc4b03bf6e116430aa55a87707658a7,antirez,antirez@gmail.com,Wed Sep 30 16:56:02 2015 +0200,1443624962,Refactoring: unlinkClient() added to lower freeClient() complexity.,48.0,51.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8764409728690031,13.0,1940.0,418.0,0.00988425925925926,8433.0,62.82669789227165,4146.0,None,False,,
1e7153831dc4b03bf6e116430aa55a87707658a7,01c08b508927adfb9ca6857db076c849f945e1be,antirez,antirez@gmail.com,Wed Sep 30 17:23:34 2015 +0200,1443626614,"Fix processEventsWhileBlocked() to handle PENDING_WRITE clients.After the introduction of the list with clients with pending writes, tonprocess clients incrementally outside of the event loop we also need tonprocess the pending writes list.n",7.0,3.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,13.0,1732.0,249.0,0.019120370370370367,8435.5,40.22518159806295,4148.0,Corrective,True,,
01c08b508927adfb9ca6857db076c849f945e1be,712ea7296dd92f3ccac15304373e8ea796851758,antirez,antirez@gmail.com,Wed Sep 30 17:41:52 2015 +0200,1443627712,Call writeToClient() directly instead of the write handler.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1839.0,232.0,0.012708333333333334,8437.0,79.68852459016394,4149.0,None,False,,
712ea7296dd92f3ccac15304373e8ea796851758,0c05436cef6f65cb2d62c8764522abefeb964314,antirez,antirez@gmail.com,Thu Jul 30 11:46:31 2015 +0200,1438249591,Lazyfree: a first implementation of non blocking DEL.,341.0,53.0,"src/Makefile,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",8.0,1.0,1.0,2.0932881498674303,13.0,1128.875,480.0,-21.227293113425926,8441.5,1.0180640004049608,4157.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
0c05436cef6f65cb2d62c8764522abefeb964314,4ff3c17a20cca084acce8d0cb618547f09a18da1,antirez,antirez@gmail.com,Fri Jul 31 14:59:54 2015 +0200,1438347594,Lazyfree: client output buffers no longer use Redis Objects.,72.0,97.0,"src/networking.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.1615707655688139,13.0,1519.5,350.0,-28.44578703703704,8446.5,0.9830297169940828,4159.0,None,False,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
4ff3c17a20cca084acce8d0cb618547f09a18da1,86d48efbfd40cba447025c36ac6b0c5507b032fd,antirez,antirez@gmail.com,Fri Jul 31 18:01:23 2015 +0200,1438358483,Lazyfree: Convert Sets to use plains SDS (several commits squashed).,183.0,163.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",9.0,1.0,1.0,1.6982984151638032,13.0,1520.4444444444446,870.0,-2.1904552469135807,8452.0,1.1217409613205982,4168.0,None,False,True,"[""f86df924b01db43eb68f5c4b4cac4c44c1507390"", ""cd87b3c71f79062d9e95abada186e1cac03f5cc6"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
86d48efbfd40cba447025c36ac6b0c5507b032fd,a7c5be18a81c120b4bdeb139072f27c899fe1a4d,antirez,antirez@gmail.com,Tue Aug 4 09:20:55 2015 +0200,1438672855,Lazyfree: Sorted sets convereted to plain SDS. (several commits squashed),306.0,266.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",10.0,1.0,1.0,1.4515200231229664,13.0,2033.5,1274.0,0.376991898148148,8461.5,0.9983529319157072,4178.0,None,False,True,"[""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
a7c5be18a81c120b4bdeb139072f27c899fe1a4d,34e489cb8cee04b52b5cbbfe53280ad8419d0a96,antirez,antirez@gmail.com,Fri Sep 4 10:09:32 2015 +0200,1441354172,SORT memory leak fixed.,3.0,3.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,592.0,48.0,31.033761574074074,8467.0,1.0322229710250597,4179.0,Corrective,True,,
34e489cb8cee04b52b5cbbfe53280ad8419d0a96,afc4b9241c37f37d1ca15be1ec3130c6a9c04a2a,antirez,antirez@gmail.com,Fri Sep 4 10:22:24 2015 +0200,1441354944,DEBUG DIGEST Set type memory leak fixed.,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1048.0,108.0,31.042696759259247,8468.0,1.0322136961152295,4180.0,Corrective,True,True,"[""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
afc4b9241c37f37d1ca15be1ec3130c6a9c04a2a,1c247556c691bb61be65734be0670d50512f710c,antirez,antirez@gmail.com,Thu Sep 10 17:26:48 2015 +0200,1441898808,Lazyfree: Hash converted to use plain SDS WIP 1.,188.0,163.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",5.0,1.0,1.0,1.2622289199554138,13.0,1258.4,178.0,102.73422222222223,8471.0,1.0100693914959666,4185.0,None,False,True,"[""1dab60df8132e5137ab8e9680dcf88fafc4842a6"", ""71aa9b75f2c4dd6faa20a4849ff732536bdfceab""]"
1c247556c691bb61be65734be0670d50512f710c,777396aeba81c2346041d5d1a4b507693d6177e2,antirez,antirez@gmail.com,Tue Sep 15 14:43:14 2015 +0200,1442320994,Lazyfree: Hash converted to use plain SDS WIP 2.,64.0,37.0,"src/object.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",4.0,1.0,1.0,1.5055098456890543,13.0,590.25,163.0,4.886412037037037,8475.5,1.1065880915046922,4189.0,None,False,True,"[""1dab60df8132e5137ab8e9680dcf88fafc4842a6"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
777396aeba81c2346041d5d1a4b507693d6177e2,4a18352877488c2e3af801f9302ceac7ce6c627b,antirez,antirez@gmail.com,Tue Sep 22 09:42:46 2015 +0200,1442907766,Lazyfree: Hash converted to use plain SDS WIP 3.,20.0,29.0,"src/db.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",2.0,1.0,1.0,0.6420642892306891,13.0,1028.0,210.0,27.90325810185185,8478.5,1.0191604499609024,4191.0,None,False,,
4a18352877488c2e3af801f9302ceac7ce6c627b,974514b936c7b7b970b03224963f05818c568c60,antirez,antirez@gmail.com,Wed Sep 23 09:33:23 2015 +0200,1442993603,Lazyfree: Hash converted to use plain SDS WIP 4.,76.0,70.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER",9.0,1.0,1.0,2.3639996672247308,13.0,1369.0,663.0,18.68733667695473,8484.0,1.0114878061755728,4200.0,None,False,True,"[""1dab60df8132e5137ab8e9680dcf88fafc4842a6"", ""71aa9b75f2c4dd6faa20a4849ff732536bdfceab"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec"", ""b0c8d6c227e172ec93d9b1f1c0f0ac49f8575a8f""]"
974514b936c7b7b970b03224963f05818c568c60,36be34bb87f6292b6259172d974c211023e5ba43,antirez,antirez@gmail.com,Wed Sep 23 10:34:00 2015 +0200,1442997240,Test: support for stack logging for OSX malloc/leaks.,7.0,0.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8631205685666309,13.0,437.5,137.0,192.70586226851847,8489.5,1.0041471019993269,655.0,Preventative,False,,
36be34bb87f6292b6259172d974c211023e5ba43,97ba4e3886ab2458756d1c67bdc0eb94b85e57a3,antirez,antirez@gmail.com,Wed Sep 23 10:34:53 2015 +0200,1442997293,Lazyfree: Hash converted to use plain SDS WIP 5.,30.0,34.0,"src/rdb.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER",3.0,1.0,1.0,0.6449742087569881,13.0,1103.6666666666667,242.0,16.712260802469135,8492.0,1.0199624507101772,4203.0,None,False,True,"[""cd87b3c71f79062d9e95abada186e1cac03f5cc6""]"
97ba4e3886ab2458756d1c67bdc0eb94b85e57a3,1dab60df8132e5137ab8e9680dcf88fafc4842a6,antirez,antirez@gmail.com,Wed Sep 23 11:43:28 2015 +0200,1443001408,Hash new implementation memleaks fixed.,52.0,12.0,"src/server.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",2.0,1.0,1.0,0.11611507530476972,13.0,1220.0,74.0,0.06898148148148148,8494.5,10.1590745908018,4205.0,Corrective,True,,
1dab60df8132e5137ab8e9680dcf88fafc4842a6,5b850d7a09cd084c850ced9f6801dcb72835cabf,antirez,antirez@gmail.com,Wed Sep 23 11:44:40 2015 +0200,1443001480,Test: stack_logging var should be initialized to 0.,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,553.0,94.0,0.04907407407407408,8496.0,21.37735849056604,656.0,Preventative,False,,
5b850d7a09cd084c850ced9f6801dcb72835cabf,4d50d691e3fa80c9b9aef5aa0498a0a92654b324,antirez,antirez@gmail.com,Wed Sep 23 16:09:16 2015 +0200,1443017356,bio.c: new API bioWaitStepOfType().,32.0,5.0,"src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER",2.0,1.0,1.0,0.3033748360864139,13.0,134.0,31.0,58.051053240740735,8497.5,1.0129196622305836,4207.0,None,False,,
4d50d691e3fa80c9b9aef5aa0498a0a92654b324,9253d8507320dd1d7665a55e11e2cba3ae91c78d,antirez,antirez@gmail.com,Wed Sep 23 16:46:36 2015 +0200,1443019596,Threaded lazyfree WIP #1.,36.0,8.0,"src/bio.c,CAS_DELIMITER,src/bio.h,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.6180664372999758,13.0,1220.6,79.0,11.154319444444445,8501.0,12.58223350620867,4212.0,None,False,,
9253d8507320dd1d7665a55e11e2cba3ae91c78d,7af4eeb7455b40ef73c436d7b9eb05df31eb6886,antirez,antirez@gmail.com,Fri Sep 25 10:06:28 2015 +0200,1443168388,"Lazyfree: incremental removed, only threaded survived.",24.0,191.0,"src/lazyfree.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.9844689683292978,13.0,1944.333333333333,49.0,1.7221296296296298,8505.0,1.3548577880531212,4215.0,None,False,,
7af4eeb7455b40ef73c436d7b9eb05df31eb6886,7e5d69019e233d306accce19611f68c92ff45da8,antirez,antirez@gmail.com,Fri Sep 25 10:06:47 2015 +0200,1443168407,"Atomic vars implemented in a more general way.We have them into zmalloc.c, but this is going to replace thatnimplementation, so that it's possible to use the same idea everywhereninside the code base.n",94.0,0.0,"src/atomicvar.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8507.0,0.0,4216.0,None,False,True,"[""2000abc86f8f5051191c022e08ce8659f51591c5"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""297950e8b817dbf3f2dbbbff497fdf3a047cc8f2""]"
7e5d69019e233d306accce19611f68c92ff45da8,c7b46a471996e45a464a2b52d6cdc81487f19a05,antirez,antirez@gmail.com,Fri Sep 25 15:34:16 2015 +0200,1443188056,zmalloc.c converted to use atomicvar.h.,5.0,33.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,423.0,30.0,281.8879513888889,8508.0,1.003547508841981,4217.0,None,False,True,"[""28e80bf96dba35f8937518421a2ee5a3a9c36c4d""]"
c7b46a471996e45a464a2b52d6cdc81487f19a05,b08c36c5f2e635a128f2a306b6f38a0159ed56e6,antirez,antirez@gmail.com,Fri Sep 25 16:22:25 2015 +0200,1443190945,Lazyfree: keep count of objects to free.,11.0,3.0,"src/bio.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER",2.0,1.0,1.0,0.74959525725948,13.0,166.0,29.0,1.1221412037037035,8509.5,1.4749053856897616,4219.0,None,False,True,"[""28e80bf96dba35f8937518421a2ee5a3a9c36c4d""]"
b08c36c5f2e635a128f2a306b6f38a0159ed56e6,c69c6c80fb5376a30e8cda34443a55b6326c9aa7,antirez,antirez@gmail.com,Mon Sep 28 10:47:45 2015 +0200,1443430065,Lazyfree: ability to free whole DBs in background.,106.0,14.0,"src/bio.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",7.0,1.0,1.0,2.0483064136930667,13.0,1667.4285714285709,970.0,10.210241402116404,8514.0,1.0645697886536585,4226.0,None,False,True,"[""535969679673f8b3cb904eef3de0f8104cacf072"", ""28e80bf96dba35f8937518421a2ee5a3a9c36c4d"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
c69c6c80fb5376a30e8cda34443a55b6326c9aa7,1f26a9468ff3e61ee9ae4225628647d4054fe20c,antirez,antirez@gmail.com,Mon Sep 28 10:51:25 2015 +0200,1443430285,Lazyfree: pending objects count in INFO output.,10.0,2.0,"src/lazyfree.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3250112108241772,13.0,1907.666666666667,55.0,1.01210262345679,8519.0,132.12874796246712,4229.0,None,False,,
1f26a9468ff3e61ee9ae4225628647d4054fe20c,ecdbc333a3be42b1bc766263083d2f902a2a7d07,antirez,antirez@gmail.com,Mon Sep 28 11:05:39 2015 +0200,1443431139,FLUSHDB and FLUSHALL ASYNC option implemented.,39.0,8.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.419921097375718,13.0,2620.0,189.0,0.011157407407407408,8521.5,63.63010269130022,4231.0,None,False,,
ecdbc333a3be42b1bc766263083d2f902a2a7d07,535969679673f8b3cb904eef3de0f8104cacf072,antirez,antirez@gmail.com,Mon Sep 28 11:07:24 2015 +0200,1443431244,Fixed a bug in the emptyDb() new implementation.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1328.0,166.0,0.0012152777777777778,8523.0,823.8571428571429,4232.0,Corrective,True,,
535969679673f8b3cb904eef3de0f8104cacf072,252cfa0a39d8483b3f990af02551b63d306a289a,antirez,antirez@gmail.com,Fri Oct 2 15:27:57 2015 +0200,1443792477,Lazyfree: cond vars to enabled/disable it based on DEL context.,51.0,35.0,"src/db.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.8045877645902773,13.0,2320.25,393.0,4.187427662037036,8525.5,1.1244778684264236,4236.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
252cfa0a39d8483b3f990af02551b63d306a289a,880c606a7ce30ac2c72184ed62d392c25bb9c88b,antirez,antirez@gmail.com,Mon Oct 5 12:11:27 2015 +0200,1444039887,Lazyfree options implemented in the configuration.,36.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1880.0,178.0,68.80096064814815,8528.0,1.0145346807745033,4237.0,None,False,,
880c606a7ce30ac2c72184ed62d392c25bb9c88b,19f6ab50c39cbfb497bd8ee3003375c1327a5266,antirez,antirez@gmail.com,Mon Oct 5 12:24:13 2015 +0200,1444040653,Lazyfree options documented in the example redis.conf.,52.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,998.0,158.0,161.70890046296296,8529.0,1.006183951514957,1369.0,Non Functional,False,,
19f6ab50c39cbfb497bd8ee3003375c1327a5266,319d18013646bb9c14d0c070a566d058558bf762,antirez,antirez@gmail.com,Tue Oct 6 09:25:28 2015 +0200,1444116328,Fix GEORADIUS COUNT option arity checks.,1.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,714.0,39.0,63.00315972222222,8530.0,1.015872219812609,4238.0,Corrective,True,,
319d18013646bb9c14d0c070a566d058558bf762,ceaf58dfd59f852b88e90228f339e42cea3cf3de,antirez,antirez@gmail.com,Tue Oct 6 09:27:29 2015 +0200,1444116449,Regression test for GEORADIUS COUNT arity check.,5.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,163.0,14.0,21.43181712962963,8531.0,1.0466595993214916,657.0,Preventative,False,,
ceaf58dfd59f852b88e90228f339e42cea3cf3de,e3ded0273c43986a49ddd9d5fb4a20d187d015de,antirez,antirez@gmail.com,Tue Oct 6 10:56:16 2015 +0200,1444121776,Added a README into deps on dependencies and how to upgrade.,66.0,0.0,"deps/README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8532.0,0.0,742.0,Feature Addition,False,,
e3ded0273c43986a49ddd9d5fb4a20d187d015de,a9951b1b6a326532163e0fe4ee1a26e972258a1e,antirez,antirez@gmail.com,Tue Oct 6 16:18:30 2015 +0200,1444141110,Jemalloc updated to 4.0.3.,25333.0,15474.0,"deps/jemalloc/.autom4te.cfg,CAS_DELIMITER,deps/jemalloc/.gitattributes,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/jemalloc-config.in,CAS_DELIMITER,deps/jemalloc/bin/jeprof.in,CAS_DELIMITER,deps/jemalloc/bin/pprof,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/pages.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.txt,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/quarantine.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/size_classes.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/valgrind.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_protos.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_typedefs.h.in,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/C99/stdbool.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/C99/stdint.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/inttypes.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/stdbool.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/stdint.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/strings.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/windows_extra.h,CAS_DELIMITER,deps/jemalloc/jemalloc.pc.in,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/pages.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/valgrind.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/include/test/btalloc.h,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test_defs.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/math.h,CAS_DELIMITER,deps/jemalloc/test/include/test/mq.h,CAS_DELIMITER,deps/jemalloc/test/include/test/test.h,CAS_DELIMITER,deps/jemalloc/test/include/test/thd.h,CAS_DELIMITER,deps/jemalloc/test/include/test/timer.h,CAS_DELIMITER,deps/jemalloc/test/integration/MALLOCX_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocm.c,CAS_DELIMITER,deps/jemalloc/test/integration/chunk.c,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/mremap.c,CAS_DELIMITER,deps/jemalloc/test/integration/overflow.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocm.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/sdallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.c,CAS_DELIMITER,deps/jemalloc/test/src/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/src/btalloc.c,CAS_DELIMITER,deps/jemalloc/test/src/btalloc_0.c,CAS_DELIMITER,deps/jemalloc/test/src/btalloc_1.c,CAS_DELIMITER,deps/jemalloc/test/src/mq.c,CAS_DELIMITER,deps/jemalloc/test/src/mtx.c,CAS_DELIMITER,deps/jemalloc/test/src/test.c,CAS_DELIMITER,deps/jemalloc/test/src/thd.c,CAS_DELIMITER,deps/jemalloc/test/src/timer.c,CAS_DELIMITER,deps/jemalloc/test/stress/microbench.c,CAS_DELIMITER,deps/jemalloc/test/unit/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/unit/atomic.c,CAS_DELIMITER,deps/jemalloc/test/unit/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/unit/ckh.c,CAS_DELIMITER,deps/jemalloc/test/unit/hash.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_alloc.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_free.c,CAS_DELIMITER,deps/jemalloc/test/unit/lg_chunk.c,CAS_DELIMITER,deps/jemalloc/test/unit/mallctl.c,CAS_DELIMITER,deps/jemalloc/test/unit/math.c,CAS_DELIMITER,deps/jemalloc/test/unit/mq.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.h,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum_a.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum_b.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_active.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_thread_name.c,CAS_DELIMITER,deps/jemalloc/test/unit/rb.c,CAS_DELIMITER,deps/jemalloc/test/unit/rtree.c,CAS_DELIMITER,deps/jemalloc/test/unit/size_classes.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats.c,CAS_DELIMITER,deps/jemalloc/test/unit/tsd.c,CAS_DELIMITER,deps/jemalloc/test/unit/util.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.c,CAS_DELIMITER",140.0,1.0,13.0,5.141176328764159,10.0,384.35,264.0,437.7948654927249,8602.5,0.9857967396359959,882.0,None,False,,
a9951b1b6a326532163e0fe4ee1a26e972258a1e,3f38b51ad785ab98f6721ddb2adcfc0a6cf7a76b,antirez,antirez@gmail.com,Wed Oct 7 09:17:06 2015 +0200,1444202226,Jemalloc configure script fixed to work nested.Now way to make unmodified Jemalloc configure to work when the jemallocnsource tree is inside a subdirectory of a different git repository.nnProblem signaled here:nhttp://www.canonware.com/pipermail/jemalloc-discuss/2015-October/001174.htmln,0.0,18.0,"deps/jemalloc/configure,CAS_DELIMITER",1.0,1.0,1.0,0.0,10.0,9720.0,6.0,0.7073611111111111,8673.0,2.4137050854113493,883.0,Corrective,True,,
3f38b51ad785ab98f6721ddb2adcfc0a6cf7a76b,f29e384853660434da912c49e8b29ebabe76bec3,antirez,antirez@gmail.com,Wed Oct 7 22:27:18 2015 +0200,1444249638,"Fix extractLongLatOrReply() sanity check conditionals.the check for lat/long valid ranges were performed inside the for loop,ntwo times instead of one, and the first time when the second element ofnthe array, xy[1], was yet not populated. This resulted into issue #2799.nnClose issue #2799.n",9.0,9.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,714.0,40.0,1.5429398148148148,8674.0,1.6481134198484737,4239.0,Corrective,True,,
f29e384853660434da912c49e8b29ebabe76bec3,363c0f67b9bd295dbe08815497e8b0b084440139,antirez,antirez@gmail.com,Wed Oct 7 22:32:24 2015 +0200,1444249944,Test: fix attach_to_replication_stream to handle newlines.,5.0,2.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,554.0,95.0,14.449814814814815,8675.0,1.0692050391521102,658.0,Preventative,False,,
363c0f67b9bd295dbe08815497e8b0b084440139,6ddcba6ec9001826ffcafcd943e64b632e4f41f5,antirez,antirez@gmail.com,Fri Oct 9 09:47:17 2015 +0200,1444376837,Test: basic lazyfree unit test.,40.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/lazyfree.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.16866093149667025,13.0,278.5,96.0,0.7343344907407408,8676.5,1.6808886226978634,660.0,Preventative,False,,
6ddcba6ec9001826ffcafcd943e64b632e4f41f5,c372a595201451721ddc76bc627e169c9b465c20,antirez,antirez@gmail.com,Fri Oct 9 16:15:53 2015 +0200,1444400153,"Cluster: redis-trib fix, coverage for migrating=1 case.Kinda related to #2770.n",12.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1373.0,103.0,273.822800925926,8678.0,1.0036519968264823,4240.0,None,False,,
c372a595201451721ddc76bc627e169c9b465c20,73427462ed8fc089a0fd6cecf0ae73f1339f68f6,antirez,antirez@gmail.com,Tue Oct 13 10:58:08 2015 +0200,1444726688,"Server: restartServer() API.This new function is able to restart the server in place. The currentnRedis process executes the same executable it was executed with, usingnthe same arguments and configuration file.n",73.0,4.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4394969869215134,13.0,2806.0,55.0,10.812627314814815,8679.5,1.0693633451115434,4242.0,None,False,True,"[""d8f8701032b8f87b998129e03dddf992baa803d2"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
73427462ed8fc089a0fd6cecf0ae73f1339f68f6,35a0c772b5ef407b700db051233144b6bac8fea3,antirez,antirez@gmail.com,Tue Oct 13 11:08:24 2015 +0200,1444727304,DEBUG RESTART/CRASH-AND-RECOVER [delay] implemented.,17.0,0.0,"src/debug.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.6722948170756379,13.0,2532.0,138.0,7.510734953703704,8681.5,1.0665871871062909,4244.0,Corrective,True,,
c372a595201451721ddc76bc627e169c9b465c20,03d0de7cdffb12edf1dae9c46d8c49d4fd06c755,David Thomson,david@ludometrics.com,Wed Oct 14 06:56:14 2015 +0100,1444802174,Update import command to optionally use copy and replace parameters,7.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1383.0,104.0,4.653020833333334,0.0,0.0,0.0,None,False,,
03d0de7cdffb12edf1dae9c46d8c49d4fd06c755,8a85ad2d1cc93dab909fbdff82ff54fa063759bf,David Thomson,david@ludometrics.com,Wed Oct 14 06:58:36 2015 +0100,1444802316,Add back blank line,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1387.0,105.0,0.0016435185185185185,1.0,609.4507042253521,1.0,Feature Addition,False,,
35a0c772b5ef407b700db051233144b6bac8fea3,ed6228851cfc7731a4e84201a3b2d6c11d925438,antirez,antirez@gmail.com,Thu Oct 15 10:20:09 2015 +0200,1444897209,PR 2813 fix ported to unstable.,25.0,20.0,"src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.2623112196143366,13.0,2010.0,204.0,7.379936342592592,8683.5,1.0729801377476385,4246.0,Corrective,True,True,"[""acc2336fd189ddf9e97b0fc589c43ae26a1fd153""]"
ed6228851cfc7731a4e84201a3b2d6c11d925438,5f0fef5eb9d4ca2e4f5a21388b92d9443e495da9,antirez,antirez@gmail.com,Thu Oct 15 11:23:13 2015 +0200,1444900993,Regression test for issue #2813.,53.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,215.0,28.0,201.9253125,8685.0,1.004952326123056,661.0,Preventative,False,,
5f0fef5eb9d4ca2e4f5a21388b92d9443e495da9,6ed12bd430c14198e858916e3ebe4103fe2497ed,antirez,antirez@gmail.com,Thu Oct 15 12:46:07 2015 +0200,1444905967,Redis.conf example: make clear user must pass its path as argument.,6.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1049.0,159.0,10.015208333333334,8686.0,1.0998481476088449,1370.0,None,False,,
6ed12bd430c14198e858916e3ebe4103fe2497ed 8a85ad2d1cc93dab909fbdff82ff54fa063759bf,bdcb14556644ff501acb061b0a6bdfc24d6b5b81,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 15 13:02:35 2015 +0200,1444906955,Merge pull request #2810 from dwlt/add-copy-replace-parameters-to-redis-trib-importAdd copy & replace parameters to redis-trib import,,,,,,,,,,,,,,,Merge,False,,
bdcb14556644ff501acb061b0a6bdfc24d6b5b81,86f0a2ee877c0822402a113777cc623c91c9eac0,antirez,antirez@gmail.com,Wed Oct 21 20:43:37 2015 +0200,1445453017,"CLIENT REPLY command implemented: ON, OFF and SKIP modes.Sometimes it can be useful for clients to completely disable repliesnfrom the Redis server. For example when the client sends fire and forgetncommands or performs a mass loading of data, or in caching contextsnwhere new data is streamed constantly. In such contexts to use serverntime and bandwidth in order to send back replies to clients, which arengoing to be ignored, is a shame.nnMultiple mechanisms are possible to implement such a feature. Fornexample it could be a feature of MULTI/EXEC, or a command prefixnsuch as NOREPLY SADD myset foo, or a different mechanism that allowsnto switch on/off requests using the CLIENT command.nnThe MULTI/EXEC approach has the problem that transactions are notnstrictly part of the no-reply semantics, and if we want to insert a lotnof data in a bulk way, creating a huge MULTI/EXEC transaction in thenserver memory is bad.nnThe prefix is the best in this specific use case since it does not allowndesynchronizations, and is pretty clear semantically. However Redisninternals and client libraries are not prepared to handle thisncurrently.nnSo the implementation uses the CLIENT command, providing a new REPLYnsubcommand with three options:nnCLIENT REPLY OFF disables the replies, and does not reply itself.nCLIENT REPLY ON re-enables the replies, replying +OK.nCLIENT REPLY SKIP only discards the reply of the next command, andn  like OFF does not reply anything itself.nnThe reason to add the SKIP command is that it allows to have an easynway to send conceptually single commands that don't need a replynas the sum of two pipelined commands:nnCLIENT REPLY SKIPnSET key valuennNote that CLIENT REPLY ON replies with +OK so it should be used whennsending multiple commands that don't need a reply. However since itnreplies with +OK the client can check that the connection is stillnactive and all the previous commands were received.nnThis is currently just into Redis unstable so the proposal can benmodified or abandoned based on users inputs.n",31.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4488644887230294,13.0,1740.0,266.0,44.2728125,8687.5,1.011736001242734,4248.0,None,False,,
86f0a2ee877c0822402a113777cc623c91c9eac0,d37ef7845b205018149aedf387b3681164577103,antirez,antirez@gmail.com,Tue Oct 27 12:06:26 2015 +0100,1445943986,CONTRIBUTING updated.,7.0,5.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,36.0,8.0,317.6941898148148,8689.0,1.003147681109884,1371.0,None,False,,
d37ef7845b205018149aedf387b3681164577103,9dd3d2e9bd24bc5f68197e10b5884c40aa0e104a,antirez,antirez@gmail.com,Thu Oct 29 10:44:30 2015 +0100,1446111870,call(): don't inherit CLIENT_PREVENT_PROP + minor refactoring.,6.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4020.0,28.0,16.025069444444444,8690.0,1.0624022256793826,4249.0,None,False,,
9dd3d2e9bd24bc5f68197e10b5884c40aa0e104a,cdda6748c25be6994dfccd769dc7c3521baf4760,antirez,antirez@gmail.com,Thu Oct 29 11:05:27 2015 +0100,1446113127,call(): selective ability to prevent propagation on AOF / slaves.,35.0,7.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,2846.0,61.0,3.8273553240740736,8691.5,35.432861021530755,4251.0,None,False,True,"[""514a23472262de499005a31b1af3cca08a1c84ba"", ""2dabf82d5f9f9eb63efb32f7b172a54f000f607f""]"
cdda6748c25be6994dfccd769dc7c3521baf4760,fc38235664b120603595bb49f61c0ef31247b482,antirez,antirez@gmail.com,Thu Oct 29 12:39:07 2015 +0100,1446118747,"Scripting: single commands replication mode implemented.By calling redis.replicate_commands(), the scripting engine of Redisnswitches to commands replication instead of replicating whole scripts.nThis is useful when the script execution is costly but only results in anfew writes performed to the dataset.nnMorover, in this mode, it is possible to call functions with sideneffects freely, since the script execution does not need to bendeterministic: anyway we'll capture the outcome from the point of viewnof changes to the dataset.nnIn this mode math.random() returns different sequences at every call.nnIf redis.replicate_commnads() is not called before any other write, thencommand returns false and sticks to whole scripts replication instead.n",72.0,8.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.4330632257501236,13.0,2306.6666666666665,181.0,30.02466435185185,8694.0,1.0111100105508148,4254.0,None,False,True,"[""2dabf82d5f9f9eb63efb32f7b172a54f000f607f"", ""530fcf868786950fbd07f294dd73f9f9bd631cb6""]"
fc38235664b120603595bb49f61c0ef31247b482,a3e8de043005f0e764f6506d1e38143d788cddc4,antirez,antirez@gmail.com,Thu Oct 29 13:50:04 2015 +0100,1446123004,Lua script selective replication WIP.,58.0,3.0,"src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.2829047929798921,13.0,1468.0,153.0,0.04927083333333333,8696.5,16.221987315010573,4256.0,None,False,True,"[""514a23472262de499005a31b1af3cca08a1c84ba""]"
a3e8de043005f0e764f6506d1e38143d788cddc4,514a23472262de499005a31b1af3cca08a1c84ba,antirez,antirez@gmail.com,Thu Oct 29 15:57:41 2015 +0100,1446130661,Lua script selective replication fixes.,32.0,20.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2736509190759928,13.0,2346.333333333333,186.0,0.10504629629629628,8699.0,7.290563958341528,4259.0,Corrective,True,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
514a23472262de499005a31b1af3cca08a1c84ba,2dabf82d5f9f9eb63efb32f7b172a54f000f607f,antirez,antirez@gmail.com,Fri Oct 30 09:41:04 2015 +0100,1446194464,"Fix call() FORCE_REPL/AOF flags setting.This commit also inverts two stanzas of the code just becuase they arenmore logical like that, not because currently it makes any difference.n",16.0,15.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.5547781633412736,13.0,2686.0,153.0,0.7384606481481482,8701.5,2.015626224472204,4261.0,Corrective,True,,
2dabf82d5f9f9eb63efb32f7b172a54f000f607f,ebaa9226ee71f85d9e79eddfd3da7bffb0331aeb,antirez,antirez@gmail.com,Fri Oct 30 09:53:45 2015 +0100,1446195225,Scripting: fix error reporting of many Redis provided functions.,14.0,14.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1315.0,122.0,0.00880787037037037,8703.0,114.53482260183969,4262.0,None,False,,
ebaa9226ee71f85d9e79eddfd3da7bffb0331aeb,eda06b51fb848a38e09733e936134e977a7c6852,antirez,antirez@gmail.com,Fri Oct 30 10:02:10 2015 +0100,1446195730,Scripting: test Redis provided Lua functions error reporting.,9.0,0.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,606.0,43.0,597.7661458333333,8704.0,1.0016728950057985,662.0,None,False,,
eda06b51fb848a38e09733e936134e977a7c6852,ff6d2960008d4662d5eff431ec77650110a9fb89,antirez,antirez@gmail.com,Fri Oct 30 10:13:04 2015 +0100,1446196384,"Scripting: ability to turn on Lua commands style replication globally.Currently this feature is only accessible via DEBUG for testing, sincenotherwise depending on the instance configuration a given script worksnor is broken, which is against the Redis philosophy.n",8.0,1.0,"src/debug.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.6577427265048887,13.0,2028.25,304.0,4.4498900462962965,8706.5,1.0581121874669832,4266.0,None,False,,
ff6d2960008d4662d5eff431ec77650110a9fb89,073a42b997c682e0c6ff3010c8645de677bf1b6c,antirez,antirez@gmail.com,Fri Oct 30 10:18:25 2015 +0100,1446196705,Scripting: execute tests with command replication as well.,88.0,79.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,615.0,44.0,0.011284722222222222,8709.0,89.61538461538461,663.0,None,False,True,"[""99b5696390735fb53756dc0f2e54edaa0cf0c9e2""]"
073a42b997c682e0c6ff3010c8645de677bf1b6c,f26072eb66eec84b0d44d386ab9911a3b3ad082e,antirez,antirez@gmail.com,Fri Oct 30 11:57:36 2015 +0100,1446202656,More reliable DEBUG loadaof.Make sure to flush the AOF output buffers before reloading.nResult: less false timing related false positives on AOF tests.n,1.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1066.0,113.0,0.0725925925925926,8710.0,14.775510204081636,4267.0,Corrective,True,True,"[""7d269d5e633911628625d279b54e48c8b38fec90""]"
f26072eb66eec84b0d44d386ab9911a3b3ad082e,5b63ae37ff0d28b1a26ff06b082a814910f8c0bf,antirez,antirez@gmail.com,Fri Oct 30 12:02:15 2015 +0100,1446202935,Scripting: commands replication tests.,107.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,624.0,45.0,0.07210648148148148,8711.0,14.868378812199035,664.0,None,False,,
5b63ae37ff0d28b1a26ff06b082a814910f8c0bf,77362b9027133e2a35e7b7f816133c60aab12087,antirez,antirez@gmail.com,Fri Oct 30 12:15:07 2015 +0100,1446203707,Dependencies updated.,150.0,106.0,"src/Makefile.dep,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,142.0,10.0,95.9167824074074,8712.0,1.010425704187537,4268.0,None,False,,
77362b9027133e2a35e7b7f816133c60aab12087,30b324698f9ff0c3b49357d2e1977c1f4fa83063,antirez,antirez@gmail.com,Tue Nov 3 19:03:09 2015 +0100,1446573789,Test: improve PFCOUNT with multiple keys testing.An user raised a question about a given behavior of PFCOUNT. Added antest to show the behavior (union) is correct when most of the items arenin common.n,17.0,2.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,170.0,5.0,533.1799189814815,8713.0,1.0018755395025196,665.0,Preventative,False,,
30b324698f9ff0c3b49357d2e1977c1f4fa83063,35afefc7cbdb903fad41ce24908dfc849b6c2f5d,Jan-Erik Rediger,janerik@fnordig.de,Wed Nov 4 11:48:14 2015 +0100,1446634094,Remove printf,0.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1315.0,124.0,5.066087962962963,30.0,1.197390966621736,16.0,None,False,,
30b324698f9ff0c3b49357d2e1977c1f4fa83063,15d57c35c3122606187be2fb7da22d081e444474,antirez,antirez@gmail.com,Wed Nov 4 12:29:54 2015 +0100,1446636594,README now has info about Redis codebase layout.,257.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,191.0,10.0,189.9227199074074,8714.0,1.0052652994885896,1372.0,None,False,,
15d57c35c3122606187be2fb7da22d081e444474,d80d051792280bed846b3afa8da35f6fd1251c4f,antirez,antirez@gmail.com,Wed Nov 4 12:41:54 2015 +0100,1446637314,A few README typos fixed.,6.0,6.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,11.0,0.008333333333333333,8715.0,121.0,1373.0,Corrective,True,,
d80d051792280bed846b3afa8da35f6fd1251c4f,8badf160b66d84b6eb16dea80ce2b3d1f265091a,antirez,antirez@gmail.com,Wed Nov 4 12:44:36 2015 +0100,1446637476,A few README typos fixed #2.,2.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,12.0,0.001875,8716.0,534.3333333333334,1374.0,Corrective,True,,
8badf160b66d84b6eb16dea80ce2b3d1f265091a,b9fb24014af9e96d0af43042799947254b55d6a6,antirez,antirez@gmail.com,Wed Nov 4 12:50:32 2015 +0100,1446637832,"README operations -> commands, is more clear now.",1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,13.0,0.0041203703703703715,8717.0,243.6966292134832,1375.0,None,False,,
b9fb24014af9e96d0af43042799947254b55d6a6,73510f4e3802d4ed5a398e606396110c6ae2f2d9,antirez,antirez@gmail.com,Wed Nov 4 12:51:45 2015 +0100,1446637905,"README operations -> commands, is more clear now #2.",2.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,14.0,0.0008449074074074074,8718.0,1184.5616438356165,1376.0,None,False,,
73510f4e3802d4ed5a398e606396110c6ae2f2d9,462026ceb74415752a15e0ce90c05b0331026071,antirez,antirez@gmail.com,Wed Nov 4 12:52:37 2015 +0100,1446637957,README: remove garbage at end of line.,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,15.0,0.0006018518518518519,8719.0,1662.5384615384617,1377.0,None,False,,
462026ceb74415752a15e0ce90c05b0331026071,8bc8f6f6955a895819ff303fd96a7b2e03856d3f,Joe Pettersson,joe@8-bit.co.uk,Wed Nov 4 11:54:50 2015 +0000,1446638090,Fix typo in READme sever/server,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,16.0,0.0015393518518518519,0.0,0.0,0.0,Corrective,True,,
462026ceb74415752a15e0ce90c05b0331026071,dfe90acbd58b5cd62f32a9823c29ac5c53b42b26,antirez,antirez@gmail.com,Wed Nov 4 12:58:26 2015 +0100,1446638306,README new internals section improved a bit more.,9.0,8.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,17.0,0.0025,8720.0,401.0,1378.0,Feature Addition,False,,
dfe90acbd58b5cd62f32a9823c29ac5c53b42b26 8bc8f6f6955a895819ff303fd96a7b2e03856d3f,de776a402f96e0ec0f93b886cc6d8e3c0e6f76ea,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 4 12:59:11 2015 +0100,1446638351,Merge pull request #2850 from Joe8Bit/fix_typo-in-readmeFix typo in READme sever/server,,,,,,,,,,,,,,,Merge,False,,
de776a402f96e0ec0f93b886cc6d8e3c0e6f76ea,f6255703b0bd4996ab2278e1253796468aed108a,antirez,antirez@gmail.com,Wed Nov 4 17:02:34 2015 +0100,1446652954,Add regression test for HINCRBYFLOAT formatting change.This test was kindly provided by Jan-Erik Rediger (@badboy here onnGithub) that discovered the issue.nnSee issue #2846.n,7.0,0.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,518.0,22.0,50.35074074074074,8721.0,1.019860681000684,666.0,Feature Addition,False,,
f6255703b0bd4996ab2278e1253796468aed108a,71aa9b75f2c4dd6faa20a4849ff732536bdfceab,antirez,antirez@gmail.com,Wed Nov 4 17:16:34 2015 +0100,1446653794,"Fix HINCRBYFLOAT to work with long doubles.During the refactoring needed for lazy free, specifically the conversionnof t_hash from struct robj to plain SDS strings, HINCRBFLOAT wasnaccidentally moved away from long doubles to doubles for internalnprocessing of increments and formatting.nnThe diminished precision created more obvious artifacts in the way smallnnumbers are formatted once we convert from decimal number in radix 10 tondouble and back to its string in radix 10.nnBy using more precision, we now have less surprising results at leastnwith small numbers like 1.23, exactly like in the previous versions ofnRedis.nnSee issue #2846.n",8.0,8.0,"src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",3.0,1.0,1.0,1.4056390622295662,13.0,572.3333333333334,95.0,44.91391589506172,8723.0,1.014299533077879,4271.0,Corrective,True,,
71aa9b75f2c4dd6faa20a4849ff732536bdfceab,9aa1f94449652c4dcad6d8038967a619857f2bf2,antirez,antirez@gmail.com,Thu Nov 5 10:36:52 2015 +0100,1446716212,scripting.c source code better organized into sections.,182.0,155.0,"src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.02919037746178885,13.0,1497.0,162.0,3.4834837962962966,8725.5,1.5978394724465683,4273.0,Perfective,False,True,"[""d3d1fa9437314082b3e18dedd48c768e097a9d61""]"
9aa1f94449652c4dcad6d8038967a619857f2bf2,cd8f19e9ca1f1e2e2a1015fa1c87979448685ddd,antirez,antirez@gmail.com,Thu Nov 5 11:10:46 2015 +0100,1446718246,Initialize all Lua scripting related things into scripting.c,33.0,12.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8747689961890864,13.0,2360.0,198.0,2.029050925925926,8728.0,15.269024917262005,4276.0,Feature Addition,False,True,"[""c494db89b5c2ef34758f599ee46ac7265782ad77""]"
cd8f19e9ca1f1e2e2a1015fa1c87979448685ddd,111d24f2465a41ddc100a11549dab3f0cd5ddc1b,antirez,antirez@gmail.com,Mon Nov 9 11:10:53 2015 +0100,1447063853,Fix error reply in subscribed Pub/Sub mode.PING is now a valid command to issue in this context.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4054.0,35.0,4.000081018518519,8730.0,1.249994936445153,4277.0,Corrective,True,,
111d24f2465a41ddc100a11549dab3f0cd5ddc1b,1b5d24eb2b8f5ef26c6067c895fcb5ebb89a991b,antirez,antirez@gmail.com,Mon Nov 9 11:43:18 2015 +0100,1447065798,"Scripting: fix redis.call() error reporting.Arguments arity and arguments type error of redis.call() were notnreported correctly to Lua, so the command acted in this regard likenredis.pcall(), but just for two commands. Redis.call() should alwaysnraise errors instead.n",18.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1366.0,127.0,4.022592592592591,8731.0,1.2485958935641286,4278.0,None,False,,
1b5d24eb2b8f5ef26c6067c895fcb5ebb89a991b,b719eedfc6db1aa34cc89e8f771189a344a03e23,antirez,antirez@gmail.com,Mon Nov 9 17:07:46 2015 +0100,1447085266,"Use clientHasPendingReplies() in flushSlavesOutputBuffers()The old version only flushed data to slaves if there were stringsnpending in the client->reply list. Now also static buffers are flushed.nDoes not help to free memory (which is the only use we have right now innthe fuction), but is more correct conceptually, and may be used innother contexts.n",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1841.0,236.0,18.89177083333333,8732.0,1.0529331002806557,4279.0,None,False,,
b719eedfc6db1aa34cc89e8f771189a344a03e23,87a12a608512603a56851507b75bb43e55abcca2,antirez,antirez@gmail.com,Mon Nov 9 17:26:56 2015 +0100,1447086416,Best effort flush of slave buffers before SHUTDOWN.,14.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.8366407419411673,13.0,2947.5,273.0,0.13722800925925924,8733.5,40.387002909796315,4281.0,None,False,,
87a12a608512603a56851507b75bb43e55abcca2 35afefc7cbdb903fad41ce24908dfc849b6c2f5d,c950facf43cb6bf6f8696da39927b513e0be5aa1,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 9 18:06:41 2015 +0100,1447088801,Merge pull request #2848 from badboy/removed-printfRemove printf,,,,,,,,,,,,,,,Merge,False,,
c950facf43cb6bf6f8696da39927b513e0be5aa1,54f5ecfd49a2430046eb85860a73d1b2bfcd64e5,antirez,antirez@gmail.com,Tue Nov 10 13:31:25 2015 +0100,1447158685,call() deserves a good top-comment.,38.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4065.0,37.0,0.8364467592592593,8735.0,2.1955333545503604,4282.0,None,False,,
54f5ecfd49a2430046eb85860a73d1b2bfcd64e5,8a0258aa4374212d8bf7004fa9022f821f6c93ed,antirez,antirez@gmail.com,Fri Nov 13 09:32:07 2015 +0100,1447403527,AOF: rewriting child killed by SIGUSR1 is not an error.,4.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1478.0,143.0,51.04078703703704,8736.0,1.0195921743776084,4283.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
8a0258aa4374212d8bf7004fa9022f821f6c93ed,0cb66fa156943dbae32a0ad86241a6e201f80fec,antirez,antirez@gmail.com,Tue Nov 17 15:33:09 2015 +0100,1447770789,Fix MIGRATE entry in command table.Thanks to Oran Agra (@oranagra) for reporting. Key extraction would notnwork otherwise and it does not make sense to take wrong data in thencommand table.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4101.0,38.0,7.0845370370370375,8737.0,1.1411524838916265,4284.0,Corrective,True,,
0cb66fa156943dbae32a0ad86241a6e201f80fec,f3dd472e978d8db7b4ce368bd295fd8fc3af7c0c,antirez,antirez@gmail.com,Tue Nov 17 15:38:34 2015 +0100,1447771114,Update redis-cli help and the script to generate it.,183.0,9.0,"src/help.h,CAS_DELIMITER,utils/generate-command-help.rb,CAS_DELIMITER",2.0,2.0,2.0,0.14609425012013633,13.0,487.5,19.0,542.6547048611111,8738.5,1.0012723867476472,70.0,None,False,,
f3dd472e978d8db7b4ce368bd295fd8fc3af7c0c,7cfdccd94e873c1f350b111332c0cb66b1e65f43,antirez,antirez@gmail.com,Tue Nov 17 15:40:47 2015 +0100,1447771247,"Remove s flag for MIGRATE in command table.Maybe there are legitimate use cases for MIGRATE inside Lua scripts, atnleast for now. When the command will be executed in an asynchronousnfashion (planned) it is possible we'll no longer be able to permit itnfrom within Lua scripts.n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4101.0,39.0,0.005300925925925926,8740.0,189.64628820960698,4286.0,None,False,,
7cfdccd94e873c1f350b111332c0cb66b1e65f43,c494db89b5c2ef34758f599ee46ac7265782ad77,antirez,antirez@gmail.com,Fri Nov 6 16:19:59 2015 +0100,1446823199,Lua debugger: foundations implemented.,206.0,21.0,"src/aof.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,0.735412974040734,13.0,2192.6,495.0,3.551203703703704,8743.0,1.0074433794972606,4291.0,Corrective,True,True,"[""d3d1fa9437314082b3e18dedd48c768e097a9d61"", ""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""7be917058560c2281a1ee891cb6ff6a7b8de345b"", ""87672adee2c282ad9d6a989f4401094fda90ebba"", ""34aadf79c333527da4a188bc3470ce6cacd7a13b"", ""22959e07dc54370564b21f94c62f926a48c0cfe0"", ""58573f1dd2d6d3cfd5dbaea7484c55571f856b3b"", ""4b0b28b4694067fef56d7bb9bd09efdaf02ca032"", ""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
c494db89b5c2ef34758f599ee46ac7265782ad77,d3d1fa9437314082b3e18dedd48c768e097a9d61,antirez,antirez@gmail.com,Mon Nov 9 11:08:57 2015 +0100,1447063737,Lua debugger: initial REPL.,164.0,20.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.3478169135710633,13.0,1941.0,274.0,2.7840046296296297,8746.5,1.2693961037341293,4293.0,Corrective,True,True,"[""5417217c873b5d7a0cf94edabc1e0a5371fa7578"", ""5c4f492844d50c29ebf303bc9bd52c6db07fe377"", ""1f8d6144237e10fe91b71b883578a0083b95920c"", ""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""e386cd8ccf9698a8218208e75528a460cb4cc277"", ""4b0b28b4694067fef56d7bb9bd09efdaf02ca032""]"
d3d1fa9437314082b3e18dedd48c768e097a9d61,5417217c873b5d7a0cf94edabc1e0a5371fa7578,antirez,antirez@gmail.com,Mon Nov 9 17:01:41 2015 +0100,1447084901,Lua debugger: log Redis commands. List command.,82.0,7.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.15510327210303426,13.0,2013.0,276.0,0.2449537037037037,8748.5,4.061803061803062,4295.0,Corrective,True,True,"[""5c4f492844d50c29ebf303bc9bd52c6db07fe377"", ""1f8d6144237e10fe91b71b883578a0083b95920c"", ""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""7492237c3ce377f7d8983b6a2943808cf05c1bea"", ""e386cd8ccf9698a8218208e75528a460cb4cc277"", ""fb53459ce8053d0345fe2ef663fb681d25307855""]"
5417217c873b5d7a0cf94edabc1e0a5371fa7578,5c4f492844d50c29ebf303bc9bd52c6db07fe377,antirez,antirez@gmail.com,Tue Nov 10 09:40:38 2015 +0100,1447144838,Lua debugger: ability to show local vars content.,85.0,7.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1752.0,131.0,0.6937152777777778,8750.0,2.441513589268732,4296.0,Corrective,True,True,"[""1f8d6144237e10fe91b71b883578a0083b95920c"", ""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""f4805800dcf2c6a8b298edecb97d80d52838e03f"", ""1f8fdafe65c8c19a94dc886b2cfc3f5de806c728"", ""7492237c3ce377f7d8983b6a2943808cf05c1bea"", ""70a51694deff3a27f8cacb195a96fe5aa68eb943"", ""0cc19174f98947bfc7c1002c80f53d6952193231""]"
5c4f492844d50c29ebf303bc9bd52c6db07fe377,1f8d6144237e10fe91b71b883578a0083b95920c,antirez,antirez@gmail.com,Tue Nov 10 11:45:59 2015 +0100,1447152359,Lua debugger: breakpoints.,148.0,12.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.9224062617590724,13.0,2089.5,279.0,0.43390625,8751.5,2.2165597953302583,4298.0,Corrective,True,True,"[""cf4700bda4929d8d952df16bdd3ca73019d15249"", ""1f8fdafe65c8c19a94dc886b2cfc3f5de806c728"", ""cd112db0ae0e30d2005680b62509a1e517b3612a"", ""7492237c3ce377f7d8983b6a2943808cf05c1bea"", ""e386cd8ccf9698a8218208e75528a460cb4cc277"", ""70a51694deff3a27f8cacb195a96fe5aa68eb943"", ""4b0b28b4694067fef56d7bb9bd09efdaf02ca032""]"
1f8d6144237e10fe91b71b883578a0083b95920c,cf4700bda4929d8d952df16bdd3ca73019d15249,antirez,antirez@gmail.com,Wed Nov 11 10:15:26 2015 +0100,1447233326,"Lua debugger: output improvements, eval command.",186.0,54.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,13.0,2157.5,281.0,0.9371180555555556,8753.5,1.8003260587646819,4300.0,Corrective,True,True,"[""3a04cb05eea3799a3f10ec97745c172aeebef071"", ""1f8fdafe65c8c19a94dc886b2cfc3f5de806c728"", ""e6eb6eadec7e34df82e2a5bd502fe9c3487d7e61"", ""a076e421e9ac3401b35557d259e8e59961ff29a0"", ""7492237c3ce377f7d8983b6a2943808cf05c1bea"", ""e57cccdefbbac1bef7b397d65df6a353bd9cfeee"", ""0cc19174f98947bfc7c1002c80f53d6952193231""]"
cf4700bda4929d8d952df16bdd3ca73019d15249,3a04cb05eea3799a3f10ec97745c172aeebef071,antirez,antirez@gmail.com,Wed Nov 11 10:28:35 2015 +0100,1447234115,Lua debugger: redis.breakpoint() implemented.,27.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2026.0,134.0,0.009131944444444444,8755.0,110.50570342205324,4301.0,Corrective,True,True,"[""7492237c3ce377f7d8983b6a2943808cf05c1bea""]"
3a04cb05eea3799a3f10ec97745c172aeebef071,36392dd86732587ee01516f51de49a3cdc634652,antirez,antirez@gmail.com,Wed Nov 11 10:34:05 2015 +0100,1447234445,Lua debugger: added comment about helper functions.,3.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2051.0,135.0,0.003819444444444444,8756.0,262.8181818181818,4302.0,Corrective,True,,
36392dd86732587ee01516f51de49a3cdc634652,f4805800dcf2c6a8b298edecb97d80d52838e03f,antirez,antirez@gmail.com,Wed Nov 11 10:43:00 2015 +0100,1447234980,Lua debugger: print now handles ARGV and KEYS.,10.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2054.0,136.0,0.00619212962962963,8757.0,162.49532710280374,4303.0,Corrective,True,True,"[""7492237c3ce377f7d8983b6a2943808cf05c1bea""]"
f4805800dcf2c6a8b298edecb97d80d52838e03f,1f8fdafe65c8c19a94dc886b2cfc3f5de806c728,antirez,antirez@gmail.com,Wed Nov 11 19:46:55 2015 +0100,1447267615,Lua debugger: much better Lua values pretty printer.,70.0,17.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.15790637433488172,13.0,2241.5,286.0,0.3872916666666667,8758.5,2.9053875993867964,4305.0,Corrective,True,True,"[""3969e9d3df754e604eb7db38eba503be84b3f526"", ""b754c8e18bbbefc3ea01a7a1939227a67f0ca328"", ""a75aa4bf92013445f600297d500fe1852a8532af""]"
1f8fdafe65c8c19a94dc886b2cfc3f5de806c728,e6eb6eadec7e34df82e2a5bd502fe9c3487d7e61,antirez,antirez@gmail.com,Wed Nov 11 22:29:56 2015 +0100,1447277396,"Lua debugger: try to eval as expression first.It's handly to just eval 5+5 without the return and see it printed onnthe screen as result. However prepending return does not always resultninto valid Lua code. So what we do is to exploit a common Lua communityntrick of trying to compile with return prepended, and if compilationnfails then it's not an expression that can be returned, so we try againnwithout prepending return. Works great apparently.n",13.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2115.0,138.0,0.11320601851851853,8760.0,9.83345261220734,4306.0,Corrective,True,,
e6eb6eadec7e34df82e2a5bd502fe9c3487d7e61,a076e421e9ac3401b35557d259e8e59961ff29a0,antirez,antirez@gmail.com,Wed Nov 11 22:56:38 2015 +0100,1447278998,Lua debugger: redis command implemented.,26.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2124.0,139.0,0.018541666666666668,8761.0,54.93258426966293,4307.0,Corrective,True,True,"[""7492237c3ce377f7d8983b6a2943808cf05c1bea""]"
a076e421e9ac3401b35557d259e8e59961ff29a0,cd112db0ae0e30d2005680b62509a1e517b3612a,antirez,antirez@gmail.com,Wed Nov 11 23:07:57 2015 +0100,1447279677,Lua debugger: removing breakpoints now works.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2149.0,140.0,0.007858796296296296,8762.0,128.2459499263623,4308.0,Corrective,True,,
cd112db0ae0e30d2005680b62509a1e517b3612a,23a4d70e56a9b486cbe9cb11a590f5b6a6267885,antirez,antirez@gmail.com,Wed Nov 11 23:29:43 2015 +0100,1447280983,"Lua debugger: redis-cli, mark end of debugging session.",1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2421.0,150.0,0.15472222222222226,8763.0,7.463195691202872,4309.0,Corrective,True,True,"[""e386cd8ccf9698a8218208e75528a460cb4cc277""]"
23a4d70e56a9b486cbe9cb11a590f5b6a6267885,7492237c3ce377f7d8983b6a2943808cf05c1bea,antirez,antirez@gmail.com,Thu Nov 12 08:33:52 2015 +0100,1447313632,Lua debugger: redis.debug() implemented.,44.0,15.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.1239498677110076,13.0,2285.5,292.0,0.3854398148148148,8764.5,2.9717742617047436,4311.0,Corrective,True,True,"[""56d9bb8c554b3d8f64d6a5c6c77c9287dabf541b"", ""fb53459ce8053d0345fe2ef663fb681d25307855""]"
7492237c3ce377f7d8983b6a2943808cf05c1bea,e386cd8ccf9698a8218208e75528a460cb4cc277,antirez,antirez@gmail.com,Thu Nov 12 08:48:59 2015 +0100,1447314539,"Lua debugger: clear end of session protocol.When the debugger exits now it produces an <endsession> tag that informsnredis-cli (or other debugging clients) that the session terminated.nThis way the client knows there is yet another reply to read (the one ofnthe EVAL script itself), and can switch to non-debugging mode ASAP.n",23.0,9.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,13.0,2300.0,294.0,0.010497685185185185,8766.5,72.44432194046307,4313.0,Corrective,True,True,"[""3ab0b4d6d045a35a1b587acf6569a8a303fc09a5"", ""87672adee2c282ad9d6a989f4401094fda90ebba""]"
e386cd8ccf9698a8218208e75528a460cb4cc277,56d9bb8c554b3d8f64d6a5c6c77c9287dabf541b,antirez,antirez@gmail.com,Thu Nov 12 11:21:20 2015 +0100,1447323680,"Lua debugger: fix help typo, beark -> break.",4.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2181.0,143.0,0.10579861111111112,8768.0,10.451919921234,4314.0,Corrective,True,,
56d9bb8c554b3d8f64d6a5c6c77c9287dabf541b,3ab0b4d6d045a35a1b587acf6569a8a303fc09a5,antirez,antirez@gmail.com,Thu Nov 12 12:59:19 2015 +0100,1447329559,"Lua debugger: inform user changes are rolled back.When redis-cli will support the synchronous mode, this will not benprinted.n",1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2433.0,153.0,0.1738425925925926,8769.0,6.752330226364848,4315.0,Corrective,True,True,"[""87672adee2c282ad9d6a989f4401094fda90ebba""]"
3ab0b4d6d045a35a1b587acf6569a8a303fc09a5,7be917058560c2281a1ee891cb6ff6a7b8de345b,antirez,antirez@gmail.com,Fri Nov 13 09:31:01 2015 +0100,1447403461,Lua debugger: handle forked sessions children during shutdown.,51.0,5.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.9591963191047148,13.0,2655.333333333333,225.0,4.7851273148148135,8771.0,1.4278418211154005,4318.0,Corrective,True,,
7be917058560c2281a1ee891cb6ff6a7b8de345b,87672adee2c282ad9d6a989f4401094fda90ebba,antirez,antirez@gmail.com,Fri Nov 13 10:17:34 2015 +0100,1447406254,Lua debugger: better support for synchronous mode.,22.0,3.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.7950402793845223,13.0,2327.0,299.0,0.46,8773.5,2.1067483567037137,4320.0,Corrective,True,True,"[""58573f1dd2d6d3cfd5dbaea7484c55571f856b3b"", ""db74d71eb349465b674ff42af3437969dc594f61""]"
87672adee2c282ad9d6a989f4401094fda90ebba,d99ce09343a4abe99aa4c3b6f18a349adea42196,antirez,antirez@gmail.com,Fri Nov 13 10:18:32 2015 +0100,1447406312,Lua debugger: ldbSendLogs() memory leak fixed.,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2227.0,146.0,0.0006712962962962962,8775.0,1490.6551724137933,4321.0,Corrective,True,,
d99ce09343a4abe99aa4c3b6f18a349adea42196,01636435fae33d3c43b23bd376f0d4634a7294a8,antirez,antirez@gmail.com,Fri Nov 13 13:11:31 2015 +0100,1447416691,Lua debugger: abort implemented.,5.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2228.0,147.0,0.1201273148148148,8776.0,9.32450139705174,4322.0,Corrective,True,True,"[""7bad78bd2f533844bfb6f79e8a3c9507079abc3a""]"
01636435fae33d3c43b23bd376f0d4634a7294a8,333547dab6928380be70f612aadf18f48a3cb1b4,antirez,antirez@gmail.com,Sat Nov 14 22:13:32 2015 +0100,1447535612,Lua debugger: call wait3() if there are pending forked debugging sessions.,10.0,1.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3221793455166668,13.0,2674.6666666666665,231.0,1.4784837962962962,8778.0,1.4320377771137085,4325.0,Corrective,True,,
333547dab6928380be70f612aadf18f48a3cb1b4,3d24cd6bf802eb4a198620f0c9e9cc6985604bb6,antirez,antirez@gmail.com,Sat Nov 14 22:16:15 2015 +0100,1447535775,Lua debugger: reply +OK to SCRIPT DEBUG no.Thanks to Itamar Haber for reporting.n,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2239.0,149.0,0.0018865740740740746,8780.0,531.0613496932515,4326.0,Corrective,True,,
3d24cd6bf802eb4a198620f0c9e9cc6985604bb6,34aadf79c333527da4a188bc3470ce6cacd7a13b,antirez,antirez@gmail.com,Sat Nov 14 22:18:02 2015 +0100,1447535882,Lua debugging: fix error message for SCRIPT DEBUG.async -> sync.nnThanks to Itamar Haber for reporting.n,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2240.0,150.0,0.001238425925925926,8781.0,808.4766355140187,4327.0,Corrective,True,,
34aadf79c333527da4a188bc3470ce6cacd7a13b,e57cccdefbbac1bef7b397d65df6a353bd9cfeee,antirez,antirez@gmail.com,Mon Nov 16 10:29:35 2015 +0100,1447666175,"Lua debugger: use sds_malloc() to allocate eval cli array.Redis-cli handles the debugger eval command in a special way sincensdssplitargs() would not be ok: we need to send the Redis debugger thenwhole Lua script without any parsing. However in order to later free thenargument vector inside redis-cli using just sdsfreesplitres(), we neednto allocate the array of SDS pointers using the same allocator SDS isnusing, that may differ to what Redis is using.nnSo now a newer version of SDS exports sds_malloc() and other allocatornfunctions to give access, to the program it is linked to, the allocatornused internally by SDS.n",35.0,1.0,"deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",5.0,2.0,2.0,2.1960736118322672,13.0,1098.8,276.0,91.59234953703705,8784.0,1.0045232033313147,4330.0,Corrective,True,,
e57cccdefbbac1bef7b397d65df6a353bd9cfeee,6de2306add95460a488d76e57b5cf2b5db17d5da,antirez,antirez@gmail.com,Mon Nov 16 12:07:08 2015 +0100,1447672028,Lua debugger: redis-cli error when --ldb is without --eval.Otherwise the result is a messed CLI without prompt.nThanks to Itamar Haber for reporting this issue.n,7.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2446.0,156.0,0.06774305555555556,8787.0,15.761660686827268,4331.0,Corrective,True,,
6de2306add95460a488d76e57b5cf2b5db17d5da,fb53459ce8053d0345fe2ef663fb681d25307855,antirez,antirez@gmail.com,Mon Nov 16 12:26:02 2015 +0100,1447673162,"Lua debugger: default behavior of list command changed.Now it lists code around the current position by default. Can list anynother part using other arguments, but a new whole command was added innorder to show the whole source code easily.n",14.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2240.0,151.0,1.5888888888888888,8788.0,1.6293706293706294,4332.0,Corrective,True,,
fb53459ce8053d0345fe2ef663fb681d25307855,70a51694deff3a27f8cacb195a96fe5aa68eb943,antirez,antirez@gmail.com,Mon Nov 16 12:43:44 2015 +0100,1447674224,Lua debugger: print without args show all local vars.,34.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2250.0,152.0,0.012291666666666666,8789.0,82.35593220338984,4333.0,Corrective,True,,
70a51694deff3a27f8cacb195a96fe5aa68eb943,22959e07dc54370564b21f94c62f926a48c0cfe0,antirez,antirez@gmail.com,Mon Nov 16 13:23:29 2015 +0100,1447676609,Lua debugger: redis-cli: show compile errors in LDB mode.,12.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2453.0,157.0,0.053020833333333336,8790.0,19.860510805500983,4334.0,Corrective,True,True,"[""58573f1dd2d6d3cfd5dbaea7484c55571f856b3b""]"
22959e07dc54370564b21f94c62f926a48c0cfe0,c560c645e9d79df607c829de64b86d0513b8a08c,antirez,antirez@gmail.com,Mon Nov 16 13:58:17 2015 +0100,1447678697,Lua debugger: trace command implemented.,24.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2279.0,153.0,0.051770833333333335,8791.0,20.3158953722334,4335.0,Corrective,True,True,"[""1f35f2dd5ace63862ecd819c4d28f8d844720df1""]"
c560c645e9d79df607c829de64b86d0513b8a08c,0cc19174f98947bfc7c1002c80f53d6952193231,antirez,antirez@gmail.com,Mon Nov 16 16:20:02 2015 +0100,1447687202,Lua debugger: maxlen command implemented.Let the user control the replies truncation.n,55.0,14.0,"src/redis-cli.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.10928571467638523,13.0,2382.5,312.0,0.11052083333333332,8792.5,7.340181790955616,4337.0,Corrective,True,,
0cc19174f98947bfc7c1002c80f53d6952193231,58573f1dd2d6d3cfd5dbaea7484c55571f856b3b,antirez,antirez@gmail.com,Tue Nov 17 12:11:13 2015 +0100,1447758673,Lua debugger: redis-cli can restart Lua debugging sessions.,74.0,44.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2463.0,159.0,0.8272106481481482,8794.0,2.2088819241370627,4338.0,Corrective,True,True,"[""6604e04260b1b6b17afcec9e54d20cda041751b1""]"
58573f1dd2d6d3cfd5dbaea7484c55571f856b3b,6604e04260b1b6b17afcec9e54d20cda041751b1,antirez,antirez@gmail.com,Tue Nov 17 13:15:48 2015 +0100,1447762548,Lua debugger: redis-cli: allow restart after end of session.,3.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2493.0,160.0,0.044849537037037035,8795.0,23.296774193548387,4339.0,Corrective,True,,
6604e04260b1b6b17afcec9e54d20cda041751b1,1f35f2dd5ace63862ecd819c4d28f8d844720df1,antirez,antirez@gmail.com,Tue Nov 17 16:24:23 2015 +0100,1447773863,Lua debugger: fix trace command infinite loop.Thanks to Itamar Haber for bug report and test case to reproduce.n,6.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2343.0,155.0,1.0030208333333333,8796.0,1.9969882646173016,4340.0,Corrective,True,,
1f35f2dd5ace63862ecd819c4d28f8d844720df1,4b0b28b4694067fef56d7bb9bd09efdaf02ca032,antirez,antirez@gmail.com,Wed Nov 18 10:23:49 2015 +0100,1447838629,Lua debugger: infinite loop detection.,35.0,7.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2344.0,156.0,0.7496064814814815,8797.0,2.3340332890714257,4341.0,Corrective,True,,
4b0b28b4694067fef56d7bb9bd09efdaf02ca032,4d625bb4c80965c5b90fb01c1c1639b0e9b49059,antirez,antirez@gmail.com,Fri Nov 20 15:45:25 2015 +0100,1448030725,Added Tcl program to show commits graphicaly.Used to generate http://antirez.com/news/98.n,112.0,0.0,"utils/graphs/commits-over-time/README.md,CAS_DELIMITER,utils/graphs/commits-over-time/genhtml.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,1.0,0.0,0.0,0.0,8798.5,0.0,72.0,Feature Addition,False,,
4d625bb4c80965c5b90fb01c1c1639b0e9b49059,a0d41e51c24bd2299d3e46a2164fc5408de220dc,antirez,antirez@gmail.com,Fri Nov 27 08:59:17 2015 +0100,1448611157,Redis Cluster: hint about validity factor when slave can't failover.,3.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5017.0,468.0,59.96634259259259,8800.0,1.0166760211939876,4342.0,None,False,,
a0d41e51c24bd2299d3e46a2164fc5408de220dc,36801f7e43089bc3051e4732b38c4cfa65e92caf,Itamar Haber,itamar@garantiadata.com,Fri Nov 27 15:55:38 2015 +0200,1448632538,Revert Lua's `redis.LOG_<level>` to originalFixes #2898,4.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2372.0,157.0,9.188761574074077,3.0,1.108828593705324,1.0,Corrective,True,,
a0d41e51c24bd2299d3e46a2164fc5408de220dc 36801f7e43089bc3051e4732b38c4cfa65e92caf,816441865bbcc0ff6a4ae0d8f2e382ecbff1facb,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 27 15:46:16 2015 +0100,1448635576,Merge pull request #2899 from itamarhaber/patch-1Revert Lua's `redis.LOG_<level>` to original,,,,,,,,,,,,,,,Merge,False,,
a0d41e51c24bd2299d3e46a2164fc5408de220dc,da82723858215e1b42c9b5b744e082418644d7d8,antirez,antirez@gmail.com,Fri Nov 27 16:05:52 2015 +0100,1448636752,"Handle wait3() errors.My guess was that wait3() with WNOHANG could never return -1 and annerror. However issue #2897 may possibly indicate that this could happennunder non clear conditions. While we try to understand this better,nbetter to handle a return value of -1 explicitly, otherwise in thencase a BGREWRITE is in progress but wait3() returns -1, the effect is tonmatch the first branch of the if/else block since server.rdb_child_pidnis -1, and call backgroundSaveDoneHandler() without a good reason, thatnwill, in turn, crash the Redis server with an assertion.n",7.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4108.0,43.0,12.744675925925925,8801.0,1.078464137166936,4343.0,Perfective,False,,
da82723858215e1b42c9b5b744e082418644d7d8 816441865bbcc0ff6a4ae0d8f2e382ecbff1facb,c2c68c50eff0de927a66606512d26bb659f8bfef,antirez,antirez@gmail.com,Fri Nov 27 16:12:23 2015 +0100,1448637143,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
c2c68c50eff0de927a66606512d26bb659f8bfef,e6a51174263d2501a8c35baa9a5773b2da9d00bf,antirez,antirez@gmail.com,Fri Nov 27 16:17:21 2015 +0100,1448637441,Fix typo in prepareClientToWrite() comment.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1843.0,238.0,17.951678240740737,8802.0,1.0557050982414855,4344.0,Corrective,True,True,"[""69c30965eb15ed86acadd8e9db79feb7b7633497""]"
e6a51174263d2501a8c35baa9a5773b2da9d00bf,96628cc40df778716b70f4b661ceb1bd329591dd,antirez,antirez@gmail.com,Sat Nov 28 09:05:41 2015 +0100,1448697941,fix sprintf and snprintf format stringThere are some cases of printing unsigned integer with %d conversionnspecificator and vice versa (signed integer with %u specificator).nnPatch by Sergey Polovko. Backported to Redis from Disque.n,3.0,3.0,"src/debug.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,1781.0,275.0,19.853460648148147,8803.5,1.0299049147647108,4346.0,Corrective,True,,
96628cc40df778716b70f4b661ceb1bd329591dd,fceaa46dda37a2d4db4e0a48cc1dab3fe208cb2c,antirez,antirez@gmail.com,Sat Nov 28 09:28:35 2015 +0100,1448699315,"Test HINCRBYFLOAT rounding only in x86_64 and when valgrind is not in use.64 bit double math is not enough to make the test passing, and roundingnto 1.2999999 instead of 1.23 is not an error in the implementation.nValgrind and sometimes other archs are not able to work with 80 bitndoubles.n",16.0,5.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,525.0,23.0,23.684733796296296,8805.0,1.0422212894010392,667.0,Preventative,False,,
fceaa46dda37a2d4db4e0a48cc1dab3fe208cb2c,acc2336fd189ddf9e97b0fc589c43ae26a1fd153,antirez,antirez@gmail.com,Thu Dec 3 10:34:56 2015 +0100,1449135296,"Centralize slave replication handshake aborting.Now we have a single function to call in any state of the slavenhandshake, instead of using different functions for different statesnwhich is error prone. Change performed in the context of issue #2479 butndoes not fix it, since should be functionally identical to the past.nJust an attempt to make replication.c simpler to follow.n",23.0,22.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2359.0,175.0,49.05193287037037,8806.0,1.0203865564817334,4347.0,Corrective,True,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
acc2336fd189ddf9e97b0fc589c43ae26a1fd153,f1472252ebf852de4446e8adc94950e004eb34d2,antirez,antirez@gmail.com,Thu Dec 3 11:03:20 2015 +0100,1449137000,Fix typo UNCOMMENT -> COMMENT in example redis.conf.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1054.0,160.0,48.97028935185186,8807.0,1.0204205450536548,1379.0,Corrective,True,,
f1472252ebf852de4446e8adc94950e004eb34d2,e0f22df9950b584569771d486fd4e933432fe395,antirez,antirez@gmail.com,Wed Dec 9 22:52:53 2015 +0100,1449697973,"Fix replicas migration by adding a new flag.Some time ago I broken replicas migration (reported in #2924).nThe idea was to prevent masters without replicas from getting replicasnbecause of replica migration, I remember it to create issues with tests,nbut there is no clue in the commit message about why it was sonundesirable.nnHowever my patch as a side effect totally ruined the concept of replicasnmigration since we want it to work also for instances that, technically,nnever had slaves in the past: promoted slaves.nnSo now instead the ability to be targeted by replicas migration, is annew flag migrate-to. It only applies to masters, and is set in thenfollowing two cases:nn1. When a master gets a slave, it is set.n2. When a slave turns into a master because of fail over, it is set.nnThis way replicas migration targets are only masters that used to havenslaves, and slaves of masters (that used to have slaves... obviously)nand are promoted.nnThe new flag is only internal, and is never exposed in the output nornpersisted in the nodes configuration, since all the information tonhandle it are implicit in the cluster configuration we already have.n",31.0,20.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.2386845113510013,13.0,2637.5,502.0,73.97594907407405,8808.5,1.0431286155192685,4349.0,Corrective,True,True,"[""4159055f8349dcc2df0a77ee777e12ff332fcddb""]"
e0f22df9950b584569771d486fd4e933432fe395,69897f5f30398f313497a695344aa9ed08919441,antirez,antirez@gmail.com,Wed Dec 9 23:06:44 2015 +0100,1449698804,unlinkClient(): clear flags according to ops performed.,2.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1843.0,239.0,12.28429398148148,8810.0,1.081404759728764,4350.0,None,False,,
69897f5f30398f313497a695344aa9ed08919441,4159055f8349dcc2df0a77ee777e12ff332fcddb,antirez,antirez@gmail.com,Thu Dec 10 08:56:33 2015 +0100,1449734193,Remove debugging message left there for error.,0.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5030.0,470.0,0.41921296296296295,8811.0,3.385422418553285,4351.0,Corrective,True,,
4159055f8349dcc2df0a77ee777e12ff332fcddb,b55affbc0cba4b33df6fc817d2db945d332fe2da,antirez,antirez@gmail.com,Thu Dec 10 09:10:56 2015 +0100,1449735056,Cluster: more reliable replicas migration test.,75.0,0.0,"tests/cluster/tests/07-replica-migration.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,47.0,1.0,499.8903356481482,8812.0,1.0020004387536388,668.0,None,False,,
b55affbc0cba4b33df6fc817d2db945d332fe2da,41db54a5573a04d035156d3a42e30ae5bbce3230,antirez,antirez@gmail.com,Thu Dec 10 12:58:28 2015 +0100,1449748708,"Cluster: more reliable migration tests.The old version was modeled with two failovers, however after the firstnit is possible that another slave will migrate to the new master, sincenfor some time the new master is not backed by any slave. Probably therenshould be some pause after a failover, before the migration. Anyway thentest is simpler in this way, and depends less on timing.n",24.0,43.0,"tests/cluster/tests/07-replica-migration.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,122.0,2.0,0.15800925925925927,8813.0,7.328743041312628,669.0,None,False,,
41db54a5573a04d035156d3a42e30ae5bbce3230,adc2fe69934fae596aee29c49db6acdc203a62d9,antirez,antirez@gmail.com,Fri Dec 11 09:19:06 2015 +0100,1449821946,"Cluster: replica migration with delay.We wait a fixed amount of time (5 seconds currently) much greater thannthe usual Cluster node to node communication latency, before migrating.nThis way when a failover occurs, before detecting the new master as antarget for migration, we give the time to its natural slaves (the slavesnof the failed over master) to announce they switched to the new master,npreventing an useless migration operation.n",39.0,17.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.22228483068568802,13.0,2642.5,505.0,1.2252662037037036,8814.5,1.6963281553339635,4353.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
adc2fe69934fae596aee29c49db6acdc203a62d9,3d254e05f40ec1a9db94bc7c43262b24f6197a9f,daniele,daniele.mazzini@gmail.com,Sun Dec 6 22:47:57 2015 +0100,1449438477,redis-trib.rb: --timeout XXXXX option added to fix and reshard commands. Defaults to 15000 milliseconds,10.0,4.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1388.0,106.0,53.65927083333333,0.0,0.0,0.0,None,False,,
3d254e05f40ec1a9db94bc7c43262b24f6197a9f,e7945cf839908a513dc49302e1d76f7340a0b887,antirez,antirez@gmail.com,Fri Dec 11 11:00:27 2015 +0100,1449828027,Cluster: redis-trib migrate default timeout set to 60 sec.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1394.0,107.0,4.5086805555555545,8816.0,1.22179437812861,4354.0,None,False,,
e7945cf839908a513dc49302e1d76f7340a0b887,9ebf7a6776503d7c688ad1a2dedb55c71e8c8a82,antirez,antirez@gmail.com,Fri Dec 11 11:56:45 2015 +0100,1449831405,Pipelined multiple keys MIGRATE.,115.0,63.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.0888796956845758,13.0,3447.0,712.0,0.8221064814814815,8817.5,5.871175832888718,4356.0,None,False,True,"[""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e"", ""f5a1e608cc2140a98c51431958b9c274019ffbc5"", ""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
9ebf7a6776503d7c688ad1a2dedb55c71e8c8a82,29d680ed5a4143243cc9655aa7360afd5768b989,antirez,antirez@gmail.com,Fri Dec 11 13:41:58 2015 +0100,1449837718,Test: pipelined MIGRATE tests added.,54.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,220.0,11.0,365.6479629629629,8819.0,1.0027348709723327,670.0,Preventative,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
29d680ed5a4143243cc9655aa7360afd5768b989,d85fc1e9cfb8fb7496cda524db8808bb1ab9e1e6,antirez,antirez@gmail.com,Fri Dec 11 13:48:41 2015 +0100,1449838121,MIGRATE: fix replies processing and argument rewriting.We need to process replies after errors in order to delete keysnsuccessfully transferred. Also argument rewriting was fixed sincenit was broken in several ways. Now a fresh argument vector is creatednand set if we are acknowledged of at least one key.n,40.0,15.0,"src/cluster.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.9299429352091804,13.0,3473.0,714.0,0.07773148148148147,8820.5,10.648600357355573,4358.0,None,False,True,"[""f917e0da4cda8a0e6cd3242180b268706cdd2dd2"", ""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
d85fc1e9cfb8fb7496cda524db8808bb1ab9e1e6,ac0a7310570c1f2845e531620ca7cc866be3698a,antirez,antirez@gmail.com,Fri Dec 11 14:26:41 2015 +0100,1449840401,MIGRATE: Fix new argument rewriting refcount handling.,2.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5113.0,474.0,0.02638888888888889,8822.0,38.89473684210526,4359.0,None,False,,
ac0a7310570c1f2845e531620ca7cc866be3698a,82fd74a11840903d3b1a39d38b652491217fba3d,antirez,antirez@gmail.com,Fri Dec 11 14:27:08 2015 +0100,1449840428,MIGRATE: test more corner cases.,37.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,274.0,12.0,0.031365740740740736,8823.0,32.881918819188186,671.0,None,False,,
82fd74a11840903d3b1a39d38b652491217fba3d,4e252e4c099b4d8e160bc196e1a2124d6e0cb79d,antirez,antirez@gmail.com,Fri Dec 11 18:09:01 2015 +0100,1449853741,MIGRATE: Fix key extraction for new form.,29.0,1.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5608251769947302,13.0,2376.333333333333,254.0,37.0230787037037,8825.0,1.011709608755924,4362.0,None,False,,
4e252e4c099b4d8e160bc196e1a2124d6e0cb79d,f0b168e8944af41c4161249040f01ece227cfc0c,antirez,antirez@gmail.com,Fri Dec 11 18:10:40 2015 +0100,1449853840,"Cluster: redis-trib: use variadic MIGRATE.We use the new variadic/pipelined MIGRATE for faster migration.nTesting is not easy because to see the time it takes for a slot to benmigrated requires a very large data set, but even with all the overheadnof migrating multiple slots and to setup them properly, what used tontake 4 seconds (1 million keys, 200 slots migrated) is now 1.6 which isna good improvement. However the improvement can be a lot larger if:nn1. We use large datasets where a single slot has many keys.n2. By moving more than 10 keys per iteration, making this configurable,n   which is planned.nnClose #2710nClose #2711n",13.0,15.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1394.0,108.0,0.29876157407407405,8827.0,4.347150660519894,4363.0,None,False,True,"[""67b70a18130bb22663494689b19db5b47cfed4fd""]"
69897f5f30398f313497a695344aa9ed08919441,3a47c8cfb85af1b69cccf30eaaa690e4a23ab20a,Sun He,sunheehnus@gmail.com,Sun Dec 13 13:47:22 2015 +0800,1449985642,lua_struct.c/getnum: throw error if overflow happenFix issue #2855n,6.0,4.0,"deps/lua/src/lua_struct.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,421.0,2.0,1053.8322106481482,11.0,1.0009489176644022,0.0,None,False,,
f0b168e8944af41c4161249040f01ece227cfc0c 3a47c8cfb85af1b69cccf30eaaa690e4a23ab20a,9f63e75a07e73f40fec72ef83545f6e7f0438e90,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 14 17:57:43 2015 +0100,1450112263,Merge pull request #2943 from sunheehnus/issue2855lua_struct.c/getnum: throw error if overflow happen,,,,,,,,,,,,,,,Merge,False,,
9f63e75a07e73f40fec72ef83545f6e7f0438e90,3782902bec9c9856d47833a799aca42c62b3cc8b,antirez,antirez@gmail.com,Mon Dec 14 18:14:52 2015 +0100,1450113292,Initial implementation of redis-trib info subcommand.,22.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1392.0,109.0,3.0029166666666667,8828.0,1.3330095740252532,4364.0,Feature Addition,False,,
3782902bec9c9856d47833a799aca42c62b3cc8b,cba1c29580e6ffa12fdb19b83007050264b4bf87,antirez,antirez@gmail.com,Tue Dec 15 12:54:40 2015 +0100,1450180480,Cluster: redis-trib rebalance initial implementation.,154.0,17.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1414.0,110.0,0.7776388888888889,8829.0,2.2859439185568853,4365.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
cba1c29580e6ffa12fdb19b83007050264b4bf87,9df1ae8808ae52506e348065c241c5367fd88c07,antirez,antirez@gmail.com,Tue Dec 15 15:48:49 2015 +0100,1450190929,"Cluster: rebalancing option --simulate, and a fix.",12.0,8.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1551.0,111.0,0.1209375,8830.0,9.268733850129198,4366.0,None,False,,
9df1ae8808ae52506e348065c241c5367fd88c07,8f8c3992ac86993d50a2694f746464b5833a62af,antirez,antirez@gmail.com,Tue Dec 15 16:08:00 2015 +0100,1450192080,Cluster: allows abbreviated node IDs with rebalance --weight option.,19.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1555.0,112.0,0.013321759259259259,8831.0,76.06516072980018,4367.0,None,False,,
8f8c3992ac86993d50a2694f746464b5833a62af,6db8e8569d7f41fc4450ceef7b7f91819829d4ca,antirez,antirez@gmail.com,Tue Dec 15 18:00:29 2015 +0100,1450198829,Log address causing SIGSEGV.,4.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1067.0,115.0,17.371388888888887,8832.0,1.057565920974783,4368.0,Feature Addition,False,,
9f63e75a07e73f40fec72ef83545f6e7f0438e90,2f3f3fd5e0cb19ea2df5712198dc40f093bd1255,Paul Kulchenko,paul@kulchenko.com,Tue Dec 15 18:13:09 2015 -0800,1450231989,Update global protection error message to fix a typo.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2372.0,158.0,18.51216435185185,0.0,0.0,0.0,Corrective,True,,
9f63e75a07e73f40fec72ef83545f6e7f0438e90,3969e9d3df754e604eb7db38eba503be84b3f526,Paul Kulchenko,paul@kulchenko.com,Tue Dec 15 18:15:39 2015 -0800,1450232139,Update pretty printing in debugging to generate valid Lua code for tables.,2.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2372.0,159.0,0.001736111111111111,1.0,577.0,1.0,Corrective,True,,
9f63e75a07e73f40fec72ef83545f6e7f0438e90,b754c8e18bbbefc3ea01a7a1939227a67f0ca328,Paul Kulchenko,paul@kulchenko.com,Tue Dec 15 20:24:41 2015 -0800,1450239881,Update pretty printing in debugging to generate valid Lua code for userdata-like types.,2.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2373.0,160.0,0.08960648148148148,2.0,12.159907000774991,2.0,Corrective,True,,
6db8e8569d7f41fc4450ceef7b7f91819829d4ca,30f057d88f9c2a8f29d762b37392e976845fd4fd,antirez,antirez@gmail.com,Wed Dec 16 09:13:41 2015 +0100,1450253621,Crash report format improvements.,35.0,24.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1071.0,116.0,0.6341666666666667,8833.0,2.576872536136662,4369.0,None,False,True,"[""36e71b88b5f6c2fc6b3aee26b7ebd42df3c52c1b""]"
30f057d88f9c2a8f29d762b37392e976845fd4fd,ac8f4a6af9334898d816c057e3abe743111da308,antirez,antirez@gmail.com,Wed Dec 16 12:31:42 2015 +0100,1450265502,memtest.c now can be called as API in non interactive mode.,73.0,43.0,"src/memtest.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.0715037894499587,13.0,985.0,59.0,188.37318865740738,8834.5,1.0026713088043009,4371.0,Preventative,False,True,"[""a1c9c05e17a1d49425ac0d87196fe91869645a08""]"
ac8f4a6af9334898d816c057e3abe743111da308,b9aeb9815684aa9a2652f15ec2c6753919aed2c0,antirez,antirez@gmail.com,Wed Dec 16 12:36:29 2015 +0100,1450265789,Suppress harmless warnings.,8.0,4.0,"src/cluster.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272448,13.0,2855.666666666666,753.0,1.7880555555555555,8837.0,1.1956637923656548,4374.0,None,False,True,"[""00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e""]"
b9aeb9815684aa9a2652f15ec2c6753919aed2c0,a1c9c05e17a1d49425ac0d87196fe91869645a08,antirez,antirez@gmail.com,Wed Dec 16 17:41:20 2015 +0100,1450284080,"Hopefully better memory test on crash.The old test, designed to do a transformation on the bits that wasninvertible, in order to avoid touching the original memory content, wasnnot effective as it was redis-server --test-memory. The former oftennreported OK while the latter was able to spot the error.nnSo the test was substituted with one that may perform better, howevernthe new one must backup the memory tested, so it tests memory in smallnpieces. This limits the effectiveness because of the CPU caches. Howevernsome attempt is made in order to trash the CPU cache between the fillnand the check stages, but not for the addressing test unfortunately.nnWe'll see if this test will be able to find errors where the old failed.n",133.0,86.0,"src/debug.c,CAS_DELIMITER,src/memtest.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0512157722905824,13.0,1027.3333333333333,179.0,0.2139158950617284,8840.0,3.8751038454708073,4377.0,Corrective,True,,
a1c9c05e17a1d49425ac0d87196fe91869645a08,218e522c82fc1e05b3db8ba5f59856e2c29ccdc0,antirez,antirez@gmail.com,Thu Dec 17 09:22:16 2015 +0100,1450340536,Fix processCommand() comment about return value.,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4114.0,45.0,5.634201388888887,8842.0,1.1774874433796567,4378.0,Corrective,True,,
218e522c82fc1e05b3db8ba5f59856e2c29ccdc0,bb215375967cea35a1562feedbce97cf0222f811,antirez,antirez@gmail.com,Thu Dec 17 09:39:43 2015 +0100,1450341583,"Fix a race that may lead to the active (slave) client to be freed.In issue #2948 a crash was reported in processCommand(). Later Oran Agran(@oranagra) traced the bug (in private chat) in the following sequencenof events:nn1. Some maxmemory is set.n2. The slave is the currently active client and is executing PING orn   REPLCONF or whatever a slave can send to its master.n3. freeMemoryIfNeeded() is called since maxmemory is set.n4. flushSlavesOutputBuffers() is called by freeMemoryIfNeeded().n5. During slaves buffers flush, a write error could be encoutered inn   writeToClient() or sendReplyToClient() depending on the version ofn   Redis. This will trigger freeClient() against the currently activen   client, so a segmentation fault will likely happen inn   processCommand() immediately after the call to freeMemoryIfNeeded().nnThere are different possible fixes:nn1. Add flags to writeToClient() (recent versions code base) so thatn   we can ignore the write errors, and use this flag inn   flushSlavesOutputBuffers(). However this is not simple to do in oldern   versions of Redis.n2. Use freeClientAsync() during write errors. This works but changes then   current behavior of releasing clients ASAP when possible. Normallyn   we write to clients during the normal event loop processing, in then   writable client, where there is no active client, so no care must ben   taken.n3. The fix of this commit: to detect that the current client is non   longer valid. This fix is a bit ad-hoc, but works across all then   versions and has the advantage of not changing the remainingn   behavior. Only alters what happens during this race condition,n   hopefully.n",6.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4114.0,46.0,0.012118055555555556,8843.0,83.5214899713467,4379.0,Corrective,True,,
bb215375967cea35a1562feedbce97cf0222f811,9b4dd92c3bc881dc7b77ab4f95f1ba4bdb6fbaa2,antirez,antirez@gmail.com,Thu Dec 17 17:52:11 2015 +0100,1450371131,"Cluster: resharding test now checks AOF consistency.It's a key invariant that when AOF is enabled, after the clusternreshards, a crash-recovery event causes all the keys to be still finenwith the expected logical content. Now this is part of unit 04.n",42.0,0.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,102.0,4.0,342.28163194444437,8844.0,1.002921570737872,672.0,None,False,,
9b4dd92c3bc881dc7b77ab4f95f1ba4bdb6fbaa2,77f849b52f822f201f75257b0e6eb4074ce56a67,antirez,antirez@gmail.com,Fri Dec 18 11:33:49 2015 +0100,1450434829,Cluster: verify slaves consistency after resharding.,23.0,0.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,144.0,5.0,0.7372453703703704,8845.0,2.3564005149298253,673.0,None,False,,
77f849b52f822f201f75257b0e6eb4074ce56a67,628af70214c63b5dfcfefec1d4f92bf94ae8399f,antirez,antirez@gmail.com,Fri Dec 18 12:27:14 2015 +0100,1450438034,Cluster: redis-trib reshard / rebalance --pipeline support.,21.0,5.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1571.0,113.0,2.8466898148148148,8846.0,1.3512851996714832,4380.0,None,False,,
628af70214c63b5dfcfefec1d4f92bf94ae8399f,80b70371e8f1e371edfbb6e605cf53ff86863c2f,antirez,antirez@gmail.com,Fri Dec 18 15:51:39 2015 +0100,1450450299,Cluster: rebalance now supports --threshold option.,24.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1587.0,114.0,0.14195601851851852,8847.0,8.04443538524256,4381.0,None,False,,
80b70371e8f1e371edfbb6e605cf53ff86863c2f b754c8e18bbbefc3ea01a7a1939227a67f0ca328,f054b4ac4781c5fe5386e8339771f9ce28e24352,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 22 08:59:48 2015 +0100,1450771188,Merge pull request #2957 from pkulchenko/debug-userdata-pretty-printingUpdate pretty printing in debugging to generate valid Lua code for userdata-like types.,,,,,,,,,,,,,,,Merge,False,,
f054b4ac4781c5fe5386e8339771f9ce28e24352 3969e9d3df754e604eb7db38eba503be84b3f526,075ea1646f9e23ec08495fb43d169055777368cf,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 22 09:00:36 2015 +0100,1450771236,Merge pull request #2954 from pkulchenko/debug-table-pretty-printingUpdate pretty printing during debugging to generate valid Lua code for tables,,,,,,,,,,,,,,,Merge,False,,
075ea1646f9e23ec08495fb43d169055777368cf,b1f84d41fbf7558137a1a4db08ce8b7673c86951,antirez,antirez@gmail.com,Tue Dec 29 15:27:26 2015 +0100,1451399246,Cluster/Sentinel test: report ability to run via valgrind.,1.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,448.0,13.0,274.0822337962963,8848.0,1.003648540024463,674.0,Preventative,False,,
b1f84d41fbf7558137a1a4db08ce8b7673c86951,190babe2df31556500bda417a93eb2d560009d08,antirez,antirez@gmail.com,Sat Jan 2 13:13:32 2016 +0100,1451736812,redis-trib: Remove duplicated key in hash initialization.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1609.0,115.0,14.89019675925926,8849.0,1.067158279784192,4382.0,None,False,,
190babe2df31556500bda417a93eb2d560009d08,8b3aa734c9d62271a931b65b28f2e1b7eba1e42b,antirez,antirez@gmail.com,Sat Jan 2 13:14:23 2016 +0100,1451736863,Cluster test: do leaks detection with OSX leaks utility.,32.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,449.0,14.0,3.9076041666666654,8850.0,1.2559112840881828,675.0,Preventative,False,,
8b3aa734c9d62271a931b65b28f2e1b7eba1e42b,00d637f2cc57f56b13fa6d818f6e4d177be2f972,antirez,antirez@gmail.com,Wed Jan 6 12:14:49 2016 +0100,1452078889,"Cluster: don't send -ASK to MIGRATE.For non existing keys, we don't want to send -ASK redirections tonMIGRATE, since when moving slots from the migrating node to thenimporting node, we want just to ignore keys that are no longer there.nThey may be expired or deleted between the GETKEYSINSLOT call and thenMIGRATE call. Otherwise this causes an error during migrations withnredis-trib (or equivalent cluster management tools).n",5.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5112.0,476.0,20.984953703703702,8851.0,1.0476531906679167,4383.0,None,False,True,"[""e15e518a674ce75ada1badb3e4fe11c18c255016""]"
00d637f2cc57f56b13fa6d818f6e4d177be2f972,edd4d555df57dc84265fdfb4ef59a4678832f6da,antirez,antirez@gmail.com,Thu Jan 7 13:00:08 2016 +0100,1452168008,"New security feature: Redis protected mode.An exposed Redis instance on the internet can be cause of seriousnissues. Since Redis, by default, binds to all the interfaces, it is easynto forget an instance without any protection layer, for error.nnProtected mode try to address this feature in a soft way, providing anlayer of protection, but giving clues to Redis users about why thenserver is not accepting connections.nnWhen protected mode is enabeld (the default), and if there are nonminumum hints about the fact the server is properly configured (nonbind directive is used in order to restrict the server to certainninterfaces, nor a password is set), clients connecting from externalnintefaces are refused with an error explaining what to do in order tonfix the issue.nnClients connecting from the IPv4 and IPv6 lookback interfaces are stillnaccepted normally, similarly Unix domain socket connections are notnrestricted in any way.n",75.0,3.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,2.0,2.0,1.4804173112975865,13.0,2127.2,674.0,39.813354166666656,8854.0,1.010663585063352,4387.0,Feature Addition,False,True,"[""08c7bba32a7195ce04bc132fa4e68573e598552d""]"
edd4d555df57dc84265fdfb4ef59a4678832f6da,08c7bba32a7195ce04bc132fa4e68573e598552d,antirez,antirez@gmail.com,Thu Jan 7 14:35:07 2016 +0100,1452173707,Fix protected mode error message typo.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1900.0,243.0,0.06596064814814814,8857.0,16.160554483242677,4388.0,Corrective,True,,
08c7bba32a7195ce04bc132fa4e68573e598552d,1e7a8f8221aa37bf2d6454e833b005e2bb9c6465,antirez,antirez@gmail.com,Thu Jan 7 22:42:43 2016 +0100,1452202963,Another typo in protected mode error message.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1900.0,244.0,0.3386111111111111,8858.0,3.9532403609516,4389.0,None,False,,
1e7a8f8221aa37bf2d6454e833b005e2bb9c6465,a75aa4bf92013445f600297d500fe1852a8532af,antirez,antirez@gmail.com,Fri Jan 8 09:14:13 2016 +0100,1452240853,"Lua debugger: fix crash printing nested or deep objects.Example of offending code:nn> script debug yesnOKn> eval local a = {1} a[1] = anprint(a) 0n1) * Stopped at 1, stop reason = step overn2) -> 1   local a = {1} a[1] = an> nextn1) * Stopped at 2, stop reason = step overn2) -> 2   print(a)n> printnn... server crash ...nnClose #2955.n",14.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2377.0,162.0,22.85953703703704,8859.0,1.0437454178700032,4390.0,Corrective,True,,
a75aa4bf92013445f600297d500fe1852a8532af,7c1a5ff3ce540637c5728d7c6269e7821a422f66,antirez,antirez@gmail.com,Fri Jan 8 09:42:56 2016 +0100,1452242576,Lua debugger: support direct calls to SCRIPT DEBUG in redis-cli.Previously it was possible to activate a debugging session only usingnthe --ldb option in redis-cli. Now calling SCRIPT DEBUG can alsonactivate the debugging mode without putting the redis-cli in andesynchronized state.nnRelated to #2952.n,21.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2495.0,162.0,41.02586805555556,8860.0,1.0243748651130509,4391.0,Corrective,True,,
7c1a5ff3ce540637c5728d7c6269e7821a422f66,36704d653bdb26c1e801eac904828242ad37d11c,antirez,antirez@gmail.com,Fri Jan 8 12:07:52 2016 +0100,1452251272,Fix typos & grammar in clusterBumpConfigEpochWithoutConsensus() comment.,4.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5114.0,477.0,1.9951736111111111,8861.0,1.501209516019561,4392.0,Corrective,True,True,"[""9e46bf22edc167cd8b573acef1affe0fea50cd81""]"
36704d653bdb26c1e801eac904828242ad37d11c,e15e518a674ce75ada1badb3e4fe11c18c255016,antirez,antirez@gmail.com,Fri Jan 8 15:04:16 2016 +0100,1452261856,"Allow MIGRATE to always be called on local keys for open slots.Extend the MIGRATE extra freedom to be able to be called in the contextnof the local slot, anytime there is a slot open in one or the otherndirection (importing or migrating). This is useful for redis-trib to fixnthe cluster when it has in an odd state.nnThix fix allows redis-trib fix to make its work in certain cases wherenpreviously an error was reported.n",7.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5114.0,478.0,0.1225,8862.0,9.16326530612245,4393.0,Corrective,True,,
e15e518a674ce75ada1badb3e4fe11c18c255016,f43c794b0b43b9134385a487e96bcd791bb0472a,antirez,antirez@gmail.com,Fri Jan 8 15:42:43 2016 +0100,1452264163,"Scripting: handle trailing comments.This fix, provided by Paul Kulchenko (@pkulchenko), allows the Luanscripting engine to evaluate statements with a trailing comment like thenfollowing one:nnEVAL print() --comment 0nnLua can't parse the above if the string does not end with a newline, sonnow a final newline is always added automatically. This does not changenthe SHA1 of scripts since the SHA1 is computed on the body we pass tonEVAL, without the other code we add to register the function.nnClose #2951.n",5.0,1.0,"src/scripting.c,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9182958340544896,13.0,1558.5,209.0,35.21144675925926,8863.5,2.8603818171574997,676.0,None,False,,
f43c794b0b43b9134385a487e96bcd791bb0472a,524be1e4656f53c347367fb5c7b1ac7e80b890e9,antirez,antirez@gmail.com,Mon Jan 11 15:00:45 2016 +0100,1452520845,Cluster: don't allow CLUSTER SETSLOT with slaves.,5.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5115.0,479.0,2.9975578703703705,8865.0,1.3336049021387009,4395.0,None,False,,
524be1e4656f53c347367fb5c7b1ac7e80b890e9,b58796f5208b910f07ffc8e3b11c77e984dc4973,antirez,antirez@gmail.com,Mon Jan 11 15:01:14 2016 +0100,1452520874,Cluster: CLUSTER BUMPEPOCH introduced to help redis-trib fix.Sometimes during fixes we have to setup a new configuration and assignnslots to nodes. With BUMPEPOCH we can make sure the new configuration ofnthe node will win if there are conflicting configurations (for examplenanother node is *also* claiming the same slot because the cluster isntotally messed up).n,7.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5120.0,480.0,0.0003356481481481481,8866.0,2980.3103448275865,4396.0,None,False,True,"[""02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11""]"
b58796f5208b910f07ffc8e3b11c77e984dc4973,04ae459bc2e8517ac3e33fc5b28e92b6e7baff6e,antirez,antirez@gmail.com,Mon Jan 11 15:04:35 2016 +0100,1452521075,Cluster: implement redis-trib fix for uncovered slots.,32.0,9.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1609.0,116.0,9.077118055555557,8867.0,1.1101671250588132,4397.0,None,False,,
04ae459bc2e8517ac3e33fc5b28e92b6e7baff6e,e4eb6c7a5dd01f2948eba9b4c1763f7f259159f8,antirez,antirez@gmail.com,Mon Jan 11 15:04:59 2016 +0100,1452521099,Cluster: implement redis-trib fix when slot is open without owners.Still work to do.n,39.0,9.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1632.0,117.0,0.00027777777777777783,8868.0,3601.0,4398.0,None,False,True,"[""02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11"", ""cad9ea5c68fa0b36c1620aa35fe5a946c0a84ced""]"
e4eb6c7a5dd01f2948eba9b4c1763f7f259159f8,02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11,antirez,antirez@gmail.com,Mon Jan 11 15:39:09 2016 +0100,1452523149,CLUSTER BUMPEPOCH initial implementation fixed.,25.0,14.0,"src/cluster.c,CAS_DELIMITER,src/redis-trib.rb,CAS_DELIMITER",2.0,1.0,1.0,0.9418285354475155,13.0,3394.5,599.0,0.025028935185185185,8869.5,29.977450295369373,4400.0,Corrective,True,,
02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11,c6e508856aca6863e1e9bec5a09367233ac41aa9,antirez,antirez@gmail.com,Mon Jan 11 16:37:33 2016 +0100,1452526653,Cluster: fix redis-trib reference of variable in warning.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1673.0,119.0,0.04055555555555555,8871.0,25.657534246575345,4401.0,None,False,,
c6e508856aca6863e1e9bec5a09367233ac41aa9,e6d970534b41825e9b32504b4e80d0039a389d28,Daniel Shih,hotingwow@gmail.com,Tue Jan 12 17:06:47 2016 +0800,1452589607,Fix a possible race condition of sdown detection if the connection to master/slave/sentinel decames disconnected just after the last PONG and before the next PING.,2.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4305.0,220.0,126.06879629629627,0.0,0.0,0.0,Corrective,True,,
c6e508856aca6863e1e9bec5a09367233ac41aa9,152e9f67f885eea48da815412740ccd3029bf46d,antirez,antirez@gmail.com,Tue Jan 12 12:15:59 2016 +0100,1452597359,Cluster: redis-trib move_to_slot: don't send SETSLOT to slaves.,1.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1673.0,120.0,0.8183564814814814,8872.0,2.2219613611291837,4402.0,None,False,,
152e9f67f885eea48da815412740ccd3029bf46d,28e80bf96dba35f8937518421a2ee5a3a9c36c4d,root,shfbai@gmail.com,Wed Jan 13 00:49:28 2016 -0800,1452674968,fix linux compile bug,9.0,9.0,"src/lazyfree.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,263.0,37.0,108.4004340277778,4.5,1.0069792201646648,1.0,Corrective,True,,
152e9f67f885eea48da815412740ccd3029bf46d,f984cef2171f18158ffbfba34f988f559f855bba,antirez,antirez@gmail.com,Wed Jan 13 17:30:53 2016 +0100,1452702653,Cluster: fix rebalancing to always empty nodes.Because of rounding error even with weight=0 sometimes a node was leftnwith an assigned slot.nnClose #3001.n,24.0,3.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1674.0,121.0,1.2186805555555555,8873.0,1.820559576044219,4403.0,None,False,,
8b3aa734c9d62271a931b65b28f2e1b7eba1e42b,15dacfec6f25fe291ce8aaa702c7fabbee9e3d00,Jan-Erik Rediger,janerik@fnordig.de,Wed Jan 13 10:22:29 2016 -0700,1452705749,Fix nanosecond conversion1 microsecond = 1000 nanosecondsn1e3 = 1000n10e3 = 10000n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2516.0,163.0,5.360798611111111,31.0,1.1865393708182472,17.0,Corrective,True,,
f984cef2171f18158ffbfba34f988f559f855bba,a411d557d4e7a0cdda074430ecf2a17d20805003,antirez,antirez@gmail.com,Thu Jan 14 11:58:31 2016 +0100,1452769111,Cluster: clarify node->slave may be NULL.,4.0,1.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,258.0,35.0,34.11070601851852,8874.0,1.0293163090631166,4404.0,None,False,,
a411d557d4e7a0cdda074430ecf2a17d20805003,fc3ca8ff8714124901a438cd7277d9e4e1cdae46,antirez,antirez@gmail.com,Thu Jan 14 17:34:49 2016 +0100,1452789289,"Cluster: fix setting nodes slaveof pointer to NULL on node release.With this commit we preserve the list of nodes that have .slaveof setnto the node, even when the node is turned into a slave, and make sure tonfix the .slaveof pointers to NULL when a node is freed from memory,nregardless of the fact it's a slave or a master.nnBasically we try to remember the logical master in the currentnconfiguration even if the logical master advertised it as a slavenalready. However we still remember the associations, so that when a nodenis freed we can fix them.nnThis should fix issue #3002.n",3.0,14.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5127.0,482.0,3.0803240740740736,8875.0,1.3246411663034494,4405.0,None,False,,
fc3ca8ff8714124901a438cd7277d9e4e1cdae46,5432fc81dbe828aeb9af05549250ffc9557838a0,antirez,antirez@gmail.com,Fri Jan 15 10:19:28 2016 +0100,1452849568,Detect and show crashes on Sentinel/Cluster tests.,18.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,481.0,15.0,12.878530092592593,8876.0,1.0776486130645588,677.0,Preventative,False,,
5432fc81dbe828aeb9af05549250ffc9557838a0 97a2248309937a2cecb8b800af40526e06fc64c4,8637384191ade8afbe380c10c2596f4dbc1eedbc,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 15 16:24:06 2016 +0100,1452871446,Merge pull request #2726 from seppo0010/patch-2Fix race condition in unit/introspection,,,,,,,,,,,,,,,Merge,False,,
5432fc81dbe828aeb9af05549250ffc9557838a0,b01b32b3c358ebd261b931409a8988824e7acc6f,antirez,antirez@gmail.com,Fri Jan 15 16:50:35 2016 +0100,1452873035,Test: Handle LOADING in restart_instance.,12.0,0.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,499.0,16.0,0.2716087962962963,8877.0,4.68176588400733,678.0,Preventative,False,,
b01b32b3c358ebd261b931409a8988824e7acc6f 8637384191ade8afbe380c10c2596f4dbc1eedbc,cfc879b5638a4b7442853fa3d4e9d1fd1a60da3a,antirez,antirez@gmail.com,Fri Jan 15 16:51:18 2016 +0100,1452873078,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
cfc879b5638a4b7442853fa3d4e9d1fd1a60da3a,00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e,antirez,antirez@gmail.com,Mon Jan 18 16:49:21 2016 +0100,1453132161,"Various fixes to MIGRATE with multiple keys.In issue #3016 Kevin McGehee identified multiple very serious issues innthe new implementation of MIGRATE. This commit attempts to restructurenthe code in oder to avoid mistakes, an analysis of the newnimplementation is in progress in order to check for possible edge cases.n",45.0,12.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5116.0,483.0,3.9684259259259274,8878.0,1.2519890804731797,4406.0,Corrective,True,True,"[""f5a1e608cc2140a98c51431958b9c274019ffbc5"", ""3ce1c28d47eefd6e7121f0257563e380153cae54""]"
00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e,f5a1e608cc2140a98c51431958b9c274019ffbc5,antirez,antirez@gmail.com,Tue Jan 19 09:28:43 2016 +0100,1453192123,"More variadic MIGRATE fixes.Another leak was fixed in the case of syntax error by restructuring thenallocation strategy for the two dynamic vectors.nnWe also make sure to always close the cached socket on I/O errors so thatnall the I/O errors are handled the same, even if we had a previouslynqueued error of a different kind from the destination server.nnThanks to Kevin McGehee. Related to issue #3016.n",9.0,8.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5149.0,484.0,0.6940046296296296,8879.0,2.4409125779660448,4407.0,Corrective,True,True,"[""f917e0da4cda8a0e6cd3242180b268706cdd2dd2""]"
f5a1e608cc2140a98c51431958b9c274019ffbc5,83b862a30ee90ee5f85eefcc63ff5241b501f073,antirez,antirez@gmail.com,Tue Jan 19 09:53:04 2016 +0100,1453193584,Minor MIGRATE refactoring.Centralize cleanup of newargv in a single place.nAdd more comments to help a bit following a complex function.nnRelated to issue #3016.n,12.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5150.0,485.0,0.016909722222222222,8880.0,60.1375770020534,4408.0,Feature Addition,False,True,"[""f917e0da4cda8a0e6cd3242180b268706cdd2dd2""]"
83b862a30ee90ee5f85eefcc63ff5241b501f073,57f8230234870c8db116d7627282b619394f0b01,Itamar Haber,itamar@redislabs.com,Wed Jan 20 17:08:28 2016 +0200,1453302508,Removes an extra space in protected mode message,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1900.0,245.0,12.726215277777778,4.0,1.0785779572459515,2.0,None,False,,
83b862a30ee90ee5f85eefcc63ff5241b501f073 57f8230234870c8db116d7627282b619394f0b01,7837c480e899dfeef96a975b9623517f959e0441,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 20 16:38:35 2016 +0100,1453304315,Merge pull request #3023 from itamarhaber/patch-2Removes an extra space in protected mode message,,,,,,,,,,,,,,,Merge,False,,
83b862a30ee90ee5f85eefcc63ff5241b501f073,bc1558622a2e8cefadbcf3558415b2285f3423d1,antirez,antirez@gmail.com,Tue Jan 19 15:04:17 2016 +0100,1453212257,Fix memory leak in masterauth config option loading.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1924.0,180.0,12.086215277777775,8881.0,1.0827388869895973,4409.0,Corrective,True,,
bc1558622a2e8cefadbcf3558415b2285f3423d1 7837c480e899dfeef96a975b9623517f959e0441,22892ce04351474e78c765e6298280c597cd8fb0,antirez,antirez@gmail.com,Mon Jan 25 15:24:55 2016 +0100,1453731895,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
22892ce04351474e78c765e6298280c597cd8fb0,592419b4ca08fbf125b2ff2afd3289ef3d7b6a68,antirez,antirez@gmail.com,Tue Jan 26 12:32:53 2016 +0100,1453807973,"Better address udpate strategy when processing gossip sections.The change covers the case where:nn1. There is a node we can't reach (in fail or pfail state).n2. We see a different address for this node, in the gossip section sentnto us by a node that, instead, is able to talk with the node we cannotntalk to.nnIn this case it's a good bet to switch to the address reported by thisnnode, since there was an address switch and it is able to talk with thennode and we are not.nnHowever previosuly this was done in a dangerous way, by initiating annhandshake. The handshake, using the MEET packet, forces the receiver tonjoin our cluster, and this is not a good idea. If the node in questionnreally just switched address, but is the same node, it already knows aboutnus, so we just need to perform an address update and a reconnection.nnSo with this commit instead we just update the address of the node,nrelease the node link if any, and attempt to reconnect in the nextnclusterCron() cycle.nnThe commit also improves debugging messages printed by Cluster duringnaddress or ID switches.n",15.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5157.0,486.0,7.1109837962962965,8882.0,1.1406275177452718,4410.0,Feature Addition,False,,
592419b4ca08fbf125b2ff2afd3289ef3d7b6a68,d6c5922f75021fc690feb89b565f87bd1806a8f4,antirez,antirez@gmail.com,Tue Jan 26 14:18:13 2016 +0100,1453814293,Cluster: fix missing ntohs() call to access gossip section port.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5166.0,487.0,0.07314814814814814,8883.0,14.670886075949365,4411.0,None,False,,
d6c5922f75021fc690feb89b565f87bd1806a8f4,fe44a7cb609e1161a47494f3ab71d9e45973fb51,antirez,antirez@gmail.com,Tue Jan 26 14:21:18 2016 +0100,1453814478,Cluster: mismatch sender ID log put back at DEBUG level.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5166.0,488.0,0.0021412037037037038,8884.0,468.02702702702703,4412.0,None,False,,
fe44a7cb609e1161a47494f3ab71d9e45973fb51,5bc7e019e1519ebb569b2964341c3440ef28645c,antirez,antirez@gmail.com,Tue Jan 26 15:28:22 2016 +0100,1453818502,Use a smoother running average for avg_ttl in INFO.Reported here:nhttps://www.reddit.com/r/redis/comments/42r0i0/avg_ttl_varies_a_lot/n,9.0,5.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4121.0,48.0,19.102939814814814,8885.0,1.0523479637005648,4413.0,None,False,,
5bc7e019e1519ebb569b2964341c3440ef28645c,751b5666fbbe5c415f6fad64e7f59e24721996be,antirez,antirez@gmail.com,Wed Jan 27 16:27:49 2016 +0100,1453908469,"Sentinel: improve handling of known Sentinel instances.1. Bug #3035 is fixed (NULL pointer access). This was happening with then   folling set of conditions:nn* For some reason one of the Sentinels, let's call it Sentinel_A, changed ID (reconfigured from scratch), but is as the same address at which it used to be.nn* Sentinel_A performs a failover and/or has a newer configuration compared to another Sentinel, that we call, Sentinel_B.nn* Sentinel_B receives an HELLO message from Sentinel_A, where the address and/or ID is mismatched, but it is reporting a newer configuration for the master they are both monitoring.nn2. Sentinels now must have an ID otherwise they are not loaded nor persisted in the configuration. This allows to have conflicting Sentinels with the same address since now the master->sentinels dictionary is indexed by Sentinel ID.nn3. The code now detects if a Sentinel is annoucing itself with an IP/port pair already busy (of another Sentinel). The old Sentinel that had the same port/pair is set as having port 0, that means, the address is invalid. We may discover the right address later via HELLO messages.n",34.0,19.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4307.0,221.0,15.264606481481481,8886.0,1.0655110238978756,4414.0,None,False,,
751b5666fbbe5c415f6fad64e7f59e24721996be,5bbb09ed2c9a6ee1cb34d214d3d2c6744e99158f,antirez,antirez@gmail.com,Tue Jan 19 13:16:24 2016 +0100,1453205784,Cluster: check packets length before accessing far fields.,10.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5166.0,489.0,-7.0450694444444455,8887.0,0.8580567575826277,4415.0,None,False,,
5bbb09ed2c9a6ee1cb34d214d3d2c6744e99158f,8870a7e14337a9fe88d40a883f3d67769ce53eb0,antirez,antirez@gmail.com,Thu Jan 28 13:06:02 2016 +0100,1453982762,03_test_release.sh: proper cleanup before testing.,2.0,0.0,"utils/releasetools/03_test_release.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,24.0,1.0,268.1169212962963,8888.0,1.0037297161073058,73.0,Preventative,False,,
8870a7e14337a9fe88d40a883f3d67769ce53eb0,9e46bf22edc167cd8b573acef1affe0fea50cd81,Itamar Haber,itamar@redislabs.com,Thu Jan 28 21:47:18 2016 +0200,1454010438,Fixes a typo,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5171.0,490.0,9.313125,5.0,1.1073753439366485,3.0,Corrective,True,,
8870a7e14337a9fe88d40a883f3d67769ce53eb0,a455e4b94871f6c7c78920859bd9158e690e98d5,antirez,antirez@gmail.com,Tue Jan 19 13:17:20 2016 +0100,1453205840,Cluster: add announce ip field in messages header.,3.0,2.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,261.0,36.0,5.054733796296296,8889.0,1.1978343549432258,4416.0,None,False,,
a455e4b94871f6c7c78920859bd9158e690e98d5,b0939303e6a9288efaef159cc4a08b656c3b9ff3,antirez,antirez@gmail.com,Tue Jan 19 15:05:52 2016 +0100,1453212352,Cluster announce ip / port configuration handling.,12.0,0.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2516291673878228,13.0,2580.0,276.0,1.690929783950617,8891.0,304.1760843652925,4419.0,None,False,,
b0939303e6a9288efaef159cc4a08b656c3b9ff3,11436b144980037b75d1c3184d412377dd2e71ab,antirez,antirez@gmail.com,Thu Jan 21 16:57:35 2016 +0100,1453391855,Cluster announce ip / port initial implementation.,127.0,42.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.4358807876601096,13.0,2637.0,807.0,0.2452337962962965,8895.0,0.7920406237758646,4424.0,Feature Addition,False,True,"[""a3778f3b0f0aacbb34ecc77541615a9eda251443""]"
11436b144980037b75d1c3184d412377dd2e71ab,dc98907e5067c554250f9022ae13d877de971457,antirez,antirez@gmail.com,Fri Jan 22 13:26:43 2016 +0100,1453465603,Cluster announce ip: take myself->ip always in sync.,30.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5226.0,492.0,0.8535648148148148,8898.0,2.171557194771384,4425.0,None,False,True,"[""35ca6700600f2b1991e71e6196ec03ba4bad997f""]"
dc98907e5067c554250f9022ae13d877de971457,1c038379f7861a6c341c1fedae5ff358f024798f,antirez,antirez@gmail.com,Fri Jan 22 15:56:15 2016 +0100,1453474575,Cluster: persist bus port in nodes.conf.,8.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5250.0,493.0,0.1038425925925926,8899.0,10.629959875167184,4426.0,None,False,,
1c038379f7861a6c341c1fedae5ff358f024798f,4abf486ca35468c66f24358a3a77c72bf2849e74,antirez,antirez@gmail.com,Fri Jan 22 16:53:15 2016 +0100,1453477995,Cluster announce port: set port/bport for myself at startup.,7.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5256.0,494.0,0.03958333333333333,8900.0,26.26315789473684,4427.0,None,False,,
4abf486ca35468c66f24358a3a77c72bf2849e74,d0a8512eda00996c586be8488b50d4133427f3b3,antirez,antirez@gmail.com,Mon Jan 25 15:19:16 2016 +0100,1453731556,Cluster anounce-ip/port WIP.,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5261.0,495.0,2.9347337962962965,8901.0,1.3407464081621383,4428.0,None,False,,
8870a7e14337a9fe88d40a883f3d67769ce53eb0,c285862621b2db70ec9152f5e081a091d49a0a45,antirez,antirez@gmail.com,Fri Jan 29 12:00:38 2016 +0100,1454065238,"Cluster: include node IDs in SLOTS output.CLUSTER SLOTS now includes IDs in the nodes description associated withna given slot range. Certain client libraries implementations need a waynto reference a node in an unique way, so they were relying on CLUSTERnNODES, that is not a stable API and may change frequently depending onnRedis Cluster future requirements.n",6.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5262.0,496.0,3.862060185185185,8902.0,1.2589291600985368,4429.0,None,False,,
c285862621b2db70ec9152f5e081a091d49a0a45,cdbe8a6ae1f5adac4513c53173124cd0e7cec8d7,antirez,antirez@gmail.com,Fri Jan 29 12:08:10 2016 +0100,1454065690,Typo ASII -> ASCII fixed in comment.,1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1696.0,48.0,7.799016203703704,8903.0,1.1282213004667314,4430.0,Corrective,True,,
cdbe8a6ae1f5adac4513c53173124cd0e7cec8d7 d0a8512eda00996c586be8488b50d4133427f3b3,e27b9b1cec576a49a46a4d31d96e9d11cfc350f1,antirez,antirez@gmail.com,Mon Feb 1 18:01:22 2016 +0100,1454346082,Merge branch 'cluster-docker' into unstable,,,,,,,,,,,,,,,Merge,False,,
e27b9b1cec576a49a46a4d31d96e9d11cfc350f1,5ac5e3ebd7da8f041ebd7c4d20020208a3066b2d,antirez,antirez@gmail.com,Mon Feb 1 18:08:01 2016 +0100,1454346481,Cluster announce ip/port/bus-port documented in redis.conf.,33.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1073.0,162.0,25.21380787037037,8904.0,1.0396608082817644,1381.0,Non Functional,False,,
5ac5e3ebd7da8f041ebd7c4d20020208a3066b2d,92b9de24170d5808992fb69c2f1f021af86aad0f,antirez,antirez@gmail.com,Mon Feb 1 18:16:25 2016 +0100,1454346985,"Cluster announce: WIP, allow building again.",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5266.0,497.0,3.2609606481481483,8905.0,1.3066581010623006,4431.0,None,False,,
92b9de24170d5808992fb69c2f1f021af86aad0f,b841f3ad1a88e11a9d4abca1c7f0cf9df63e613d,antirez,antirez@gmail.com,Tue Feb 2 08:20:04 2016 +0100,1454397604,Cluster: store busport with different separator in CLUSTER NODES.We need to be able to correctly parse the node address in the case ofnIPv6 addresses.n,13.0,9.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5266.0,498.0,0.5858680555555555,8906.0,2.706868962247378,4432.0,None,False,True,"[""a3778f3b0f0aacbb34ecc77541615a9eda251443""]"
b841f3ad1a88e11a9d4abca1c7f0cf9df63e613d,cbcffed90792ef83bcba3bfcbbd5e64380d1b0b9,antirez,antirez@gmail.com,Tue Feb 2 08:27:36 2016 +0100,1454398056,Cluster: redis-trib: support @busport format in ClusterNode.,1.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1695.0,122.0,19.622719907407404,8907.0,1.0509613348566682,4433.0,None,False,,
cbcffed90792ef83bcba3bfcbbd5e64380d1b0b9,5b7b2353676c4a5e4afc39e8452e3e6bbbace68c,antirez,antirez@gmail.com,Tue Feb 2 11:03:53 2016 +0100,1454407433,Fix to Cluster test to support @busport format.,4.0,2.0,"tests/support/cluster.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,305.0,9.0,388.9980902777778,8908.0,1.002570706707804,679.0,Corrective,True,,
5b7b2353676c4a5e4afc39e8452e3e6bbbace68c,68e779f34bd7a06397ebea520f5ce43372fad000,Itamar Haber,itamar@redislabs.com,Tue Feb 2 09:58:19 2016 -0800,1454435899,Adds keyspace notifications for lrem,6.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,957.0,69.0,190.4281365740741,6.0,1.0052513248199066,4.0,Feature Addition,False,True,"[""b2eb48df89d8513a359faa677146d3c36e6266ab""]"
68e779f34bd7a06397ebea520f5ce43372fad000,31a70a8bcf01ceb35ccbd2ae1f567ddf45321b2f,Itamar Haber,itamar@redislabs.com,Wed Feb 3 11:04:09 2016 -0800,1454526249,Fixes a typo,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4128.0,51.0,13.129560185185184,7.0,1.0761640135614257,5.0,Corrective,True,,
5b7b2353676c4a5e4afc39e8452e3e6bbbace68c 31a70a8bcf01ceb35ccbd2ae1f567ddf45321b2f,aa953b6ec3517b74b24e88bb76627faac431e239,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 5 15:52:57 2016 +0100,1454683977,Merge pull request #3059 from itamarhaber/keyspacenotif-lremAdds keyspace notifications for LREM,,,,,,,,,,,,,,,Merge,False,,
aa953b6ec3517b74b24e88bb76627faac431e239,fdbefc9d839c23442f773d340b2a65a03c77b427,yoav@monfort.co.il,yoav@monfort.co.il,Sun Feb 7 20:24:28 2016 +0200,1454869468,"cmsgpack: pass correct osize values to lua allocator, update correct buf free space in cmsgpack",4.0,4.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,970.0,7.0,249.4859375,0.0,0.0,0.0,None,False,,
aa953b6ec3517b74b24e88bb76627faac431e239,c30ffaab05fe7f2ddc5723d9b81382b5c9876d25,David Cavar,wizzard405@yahoo.com,Tue Feb 9 15:04:42 2016 +0100,1455026682,Reverse redirect address parseFix issue in case the redirect address is in ipv6 format. Parse from behind to extract last part of the response which represents actual port.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2516.0,164.0,26.862650462962964,0.0,0.0,0.0,Corrective,True,,
aa953b6ec3517b74b24e88bb76627faac431e239 fdbefc9d839c23442f773d340b2a65a03c77b427,66dbc5e61fb1364e1a4cb9c0f68acabb54dcd7c6,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 10 09:03:29 2016 +0100,1455091409,Merge pull request #3072 from yoav-steinberg/cmsgpack_fixcmsgpack: pass correct osize values to lua allocator,,,,,,,,,,,,,,,Merge,False,,
66dbc5e61fb1364e1a4cb9c0f68acabb54dcd7c6,fcd7df5eab40983ca8044c4bb00405f984d877db,antirez,antirez@gmail.com,Wed Feb 10 09:12:17 2016 +0100,1455091937,Remove Lua state reference from buffers in lua_cmsgpack.,25.0,28.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,970.0,8.0,2.574872685185185,8909.0,1.388368716540282,886.0,None,False,,
fcd7df5eab40983ca8044c4bb00405f984d877db,b0ec22f948370d46ecbe3cca5dd87082e9a1025e,antirez,antirez@gmail.com,Mon Feb 15 16:14:56 2016 +0100,1455549296,Include full paths on RDB/AOF files errors.Close #3086.n,32.0,4.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.997772472089982,13.0,1583.0,306.0,123.1371527777778,8910.5,1.006980923408531,4435.0,None,False,,
b0ec22f948370d46ecbe3cca5dd87082e9a1025e,15f37ebd4a3aafe2c7da0b8cff990f70c1a4dd65,antirez,antirez@gmail.com,Wed Feb 17 12:30:00 2016 +0100,1455708600,"Cluster: resharding test provides more state when failing.Now elements added to lists are incremental numbers in order tonunderstand, when inconsistencies are found, what is the order in whichnthe elements were added. Also the error now provides both the expectednand found value.n",8.0,3.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,167.0,6.0,61.039016203703696,8912.0,1.016382963917091,680.0,None,False,,
15f37ebd4a3aafe2c7da0b8cff990f70c1a4dd65,bb75ecddfdcab4fb530bb9c78088e53b28687816,antirez,antirez@gmail.com,Thu Feb 18 10:24:11 2016 +0100,1455787451,New options for GEORADIUS: STORE and STOREDIST.Related to issue #3019.n,116.0,49.0,"src/geo.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",4.0,1.0,1.0,0.7098207536662614,13.0,2374.5,259.0,91.53753472222223,8914.5,1.005730038922766,4439.0,Feature Addition,False,True,"[""f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c"", ""b2eb48df89d8513a359faa677146d3c36e6266ab""]"
bb75ecddfdcab4fb530bb9c78088e53b28687816,f4befcc0ffd52fcec776b6e1174b6d6984353a2e,antirez,antirez@gmail.com,Thu Feb 18 14:42:42 2016 +0100,1455802962,GEOADD STORE/STOREDIST tests.,54.0,0.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,168.0,15.0,135.26056712962966,8917.0,1.0073931377135334,681.0,Feature Addition,False,,
f4befcc0ffd52fcec776b6e1174b6d6984353a2e,cf42c48adcea05c1bd4b939fcd36a01f23ec6303,antirez,antirez@gmail.com,Thu Feb 18 22:08:47 2016 +0100,1455829727,"addReplyHumanLongDouble() API added.Send a long double or double as a bulk reply, in a human friendlynformat.n",10.0,0.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,13.0,1798.5,296.0,14.869762731481485,8918.5,1.0339065307515891,4441.0,Feature Addition,False,,
cf42c48adcea05c1bd4b939fcd36a01f23ec6303,4e9c3027b12b543c8b03d9c92ffd9f148a436469,Itamar Haber,itamar@redislabs.com,Thu Feb 18 15:00:39 2016 -0800,1455836439,Adjusts accuracy for GEODIST,1.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,772.0,42.0,0.5669907407407407,8.0,2.7636972319751774,6.0,None,False,,
4e9c3027b12b543c8b03d9c92ffd9f148a436469,41030ae2dee2d88451cb0bfe6b6a1b72ea0d84eb,Itamar Haber,itamar@redislabs.com,Thu Feb 18 15:01:34 2016 -0800,1455836494,Fixes a typo in a comment,1.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,772.0,43.0,0.0006365740740740741,9.0,1571.909090909091,7.0,Corrective,True,,
41030ae2dee2d88451cb0bfe6b6a1b72ea0d84eb,b5149f08684b55a11b158e12770d35d78d44b2f4,Itamar Haber,itamar@redislabs.com,Thu Feb 18 15:11:30 2016 -0800,1455837090,Eliminates engineers near the equator & prime meridian,4.0,4.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,772.0,44.0,0.006898148148148148,10.0,145.96644295302013,8.0,None,False,,
cf42c48adcea05c1bd4b939fcd36a01f23ec6303 b5149f08684b55a11b158e12770d35d78d44b2f4,438ae496af66811b4386cc9e101592023adfd103,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 19 12:08:24 2016 +0100,1455880104,Merge pull request #3101 from itamarhaber/geohumanizedFixes double conversions in GEO,,,,,,,,,,,,,,,Merge,False,,
438ae496af66811b4386cc9e101592023adfd103,eca0187370c14aa2c126fe07e5310e44c2780a95,James Rouzier,jrouzier@inverse.ca,Sat Sep 19 14:01:10 2015 -0400,1442685670,If the unit of a timeout is seconds treat it a float,16.0,6.0,"src/blocked.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9023932827949788,13.0,512.5,54.0,165.9692013888889,0.5,0.5015063035666131,0.0,None,False,,
438ae496af66811b4386cc9e101592023adfd103,70af626d613ebd88123f87a941b0dd3570f9e7d2,antirez,antirez@gmail.com,Thu Feb 25 23:31:45 2016 +0100,1456439505,"BITFIELD command initial implementation.The new bitfield command is an extension to the Redis bit operations,nwhere not just single bit operations are performed, but the array ofnbits composing a string, can be addressed at random, not alignednoffsets, with any width unsigned and signed integers like u8, s5, u10n(up to 64 bit signed integers and 63 bit unsigned integers).nnThe BITFIELD command supports subcommands that can SET, GET, or INCRBYnthose arbitrary bit counters, with multiple overflow semantics.nnTrivial and credits:nnA similar command was imagined a few times in the past, but fornsome reason looked a bit far fetched or not well specified.nFinally the command was proposed again in a clear form bynYoav Steinberg from Redis Labs, that proposed a set of commands onnarbitrary sized integers stored at bit offsets.nnStarting from this proposal I wrote an initial specification of a singlencommand with sub-commands similar to what Yoav envisioned, using shortnnames for types definitions, and adding control on the overflow.nnThis commit is the resulting implementation.nnExamples:nnBITFIELD mykey OVERFLOW wrap INCRBY i2 10 -1 GET i2 10n",476.0,32.0,"src/bitops.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.04105722851366008,13.0,2141.333333333333,135.0,76.07418595679012,8921.0,1.004528151026307,4444.0,Feature Addition,False,True,"[""fe64960ad5dfea17c8f22cb10a7f4fdaf4fff4b7"", ""77a91442452548e901c2830c7e6b77c4e542d4bb"", ""5d96b7ed4ffc1b90195fd4074ead331236e8e28f"", ""188d90fc87002cdf89f1ce3b359a24edad39fa46""]"
70af626d613ebd88123f87a941b0dd3570f9e7d2,2800d090a7ca705b3dc03ae508511cea6bad650d,antirez,antirez@gmail.com,Fri Feb 26 15:16:24 2016 +0100,1456496184,BITFIELD: Support #<index> offsets form.,23.0,6.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1040.0,32.0,0.6560069444444444,8923.0,2.5243741068120467,4445.0,None,False,,
2800d090a7ca705b3dc03ae508511cea6bad650d,11745e09810a531093b527d6161cbfc2ddd6ac91,antirez,antirez@gmail.com,Fri Feb 26 15:53:29 2016 +0100,1456498409,BITFIELD: Fix #<index> form parsing.,4.0,6.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1057.0,33.0,0.025752314814814808,8924.0,39.831460674157306,4446.0,None,False,,
11745e09810a531093b527d6161cbfc2ddd6ac91,32289d57194f2173dda5089a773f3ea4c4dd0c7a,antirez,antirez@gmail.com,Mon Feb 29 09:08:46 2016 +0100,1456733326,BITFIELD: refactoring & fix of retval on FAIL.,24.0,8.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1055.0,34.0,2.71894675925926,8925.0,1.3677894745803836,4447.0,None,False,,
32289d57194f2173dda5089a773f3ea4c4dd0c7a,e85d6f22cf2ddb2a4a5de80b211802bdacbf4a3b,antirez,antirez@gmail.com,Wed Mar 2 08:51:27 2016 +0100,1456905087,"Fix INFO commandstats reporting when argv is rewritten.We want to report the original command in the stats, for example GEOADD,neven when what is actually executed is the ZADD implementation.n",3.0,3.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,3258.0,218.0,29.55153935185185,8926.5,1.017768287343327,4449.0,Corrective,True,True,"[""f03aed3ca9b5e45635707b1b28011cedbd8914bc""]"
32289d57194f2173dda5089a773f3ea4c4dd0c7a,93cc8baf1ae5e3d028b4847b711b07c7e20cef4c,Sun He,sunheehnus@gmail.com,Wed Mar 2 18:11:30 2016 +0800,1456913490,"bitops/bitfield: fix length, overflow condition and *sign",8.0,5.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1071.0,35.0,2.0852314814814816,12.0,1.4795630647632156,11.0,None,False,True,"[""fe64960ad5dfea17c8f22cb10a7f4fdaf4fff4b7""]"
e85d6f22cf2ddb2a4a5de80b211802bdacbf4a3b 93cc8baf1ae5e3d028b4847b711b07c7e20cef4c,235f55344b2474eaac0951a6183b79edb6be739a,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 2 15:12:38 2016 +0100,1456927958,"Merge pull request #3118 from sunheehnus/bitfield-fix-minor-bugbitops/bitfield: fix length, overflow condition and *sign",,,,,,,,,,,,,,,Merge,False,,
235f55344b2474eaac0951a6183b79edb6be739a,fe64960ad5dfea17c8f22cb10a7f4fdaf4fff4b7,antirez,antirez@gmail.com,Wed Mar 2 15:13:45 2016 +0100,1456928025,More BITFIELD fixes. Overflow conditional simplified.See issue #3114.n,8.0,9.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1074.0,36.0,0.16822916666666668,8928.0,6.944272445820433,4450.0,Corrective,True,,
fe64960ad5dfea17c8f22cb10a7f4fdaf4fff4b7,27fc01a7b864572b85f64aad5efffb7199ec0dba,antirez,antirez@gmail.com,Wed Mar 2 15:14:53 2016 +0100,1456928093,Fix typo in bitops.tcl comment.,1.0,1.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,341.0,13.0,579.8160185185185,8929.0,1.0017246850174215,682.0,Corrective,True,,
27fc01a7b864572b85f64aad5efffb7199ec0dba,9a00da0d1470f83fa5927ac05923ef207fd19f64,antirez,antirez@gmail.com,Wed Mar 2 15:15:18 2016 +0100,1456928118,BITFIELD: overflow fuzzy testing.,53.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/bitfield.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.13503620280212764,13.0,279.0,97.0,72.63472800925926,8930.5,1.006883759514268,684.0,None,False,,
9a00da0d1470f83fa5927ac05923ef207fd19f64,fc843784c340865f105fa8da37001f044a613829,antirez,antirez@gmail.com,Wed Mar 2 16:20:28 2016 +0100,1456932028,BITFIELD: Farest bit set is offset+bits-1. Off by one error fixed.,4.0,2.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1073.0,37.0,0.04633101851851852,8932.0,22.583812140894327,4451.0,None,False,True,"[""5d96b7ed4ffc1b90195fd4074ead331236e8e28f""]"
fc843784c340865f105fa8da37001f044a613829,ae7317e8e9a5f530508d171f3307021d20dbef9f,antirez,antirez@gmail.com,Wed Mar 2 16:31:02 2016 +0100,1456932662,BITFIELD basic unit tests.,85.0,1.0,"tests/unit/bitfield.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,52.0,1.0,0.052592592592592594,8933.0,20.014084507042245,685.0,Preventative,False,,
ae7317e8e9a5f530508d171f3307021d20dbef9f,28c291c55c35b8acaedffbb7eb98b3fc175e1237,antirez,antirez@gmail.com,Wed Mar 2 17:22:42 2016 +0100,1456935762,BITFIELD: overflow wrap behavior fuzz tester.,51.0,0.0,"tests/unit/bitfield.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,136.0,2.0,0.03587962962962963,8934.0,28.87096774193548,686.0,None,False,,
28c291c55c35b8acaedffbb7eb98b3fc175e1237,d5aa7e2abe0d832fcad348caff99d006f2ab7740,Ryosuke Hasebe,ryosuke.hasebe@linecorp.com,Wed Mar 30 21:56:22 2016 +0900,1459342582,fix check_open_slots,2.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1695.0,123.0,57.22831018518519,0.0,0.0,0.0,Corrective,True,,
d5aa7e2abe0d832fcad348caff99d006f2ab7740,cad9ea5c68fa0b36c1620aa35fe5a946c0a84ced,Ryosuke Hasebe,ryosuke.hasebe@linecorp.com,Wed Mar 30 23:09:36 2016 +0900,1459346976,fix variable,5.0,5.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1696.0,124.0,0.05085648148148148,1.0,20.663177059626765,1.0,Corrective,True,,
28c291c55c35b8acaedffbb7eb98b3fc175e1237,67b70a18130bb22663494689b19db5b47cfed4fd,antirez,antirez@gmail.com,Fri Jan 8 15:05:14 2016 +0100,1452261914,"Fix ae.c to avoid timers infinite loop.This fix was suggested by Anthony LaTorre, that provided also a goodntest case that was used to verify the fix.nnThe problem with the old implementation is that, the time returned byna timer event (that is the time after it want to run again) is addednto the event *start time*. So if the event takes, in order to run, morenthan the time it says it want to be scheduled again for running, anninfinite loop is triggered.n",28.0,30.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/redis-trib.rb,CAS_DELIMITER",4.0,1.0,1.0,0.7192123754256801,13.0,589.75,174.0,453.8869010416667,8936.5,1.0007455846554405,4455.0,Corrective,True,True,"[""8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3""]"
67b70a18130bb22663494689b19db5b47cfed4fd,ace780c00252b7ab9d3296443b2b9572dfb40af2,antirez,antirez@gmail.com,Mon Apr 4 12:23:10 2016 +0200,1459765390,ae.c: comment to explain why we have a useless maxId check.,5.0,1.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,458.0,17.0,86.84578703703704,8939.0,1.0115146633373653,4456.0,None,False,,
ace780c00252b7ab9d3296443b2b9572dfb40af2,b9feef9ae893cb5fc90a4e670eb2bb8142083616,antirez,antirez@gmail.com,Mon Apr 4 14:08:16 2016 +0200,1459771696,ae.c: Fix delay until next timer event.This fix was written by Anthony LaTorre.nThe old code mis-calculated the amount of time to wait till next event.n,12.0,9.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,462.0,18.0,0.07298611111111111,8940.0,14.701236917221696,4457.0,None,False,,
b9feef9ae893cb5fc90a4e670eb2bb8142083616,8a98b8d0c9e99df9cf83a08cb032657531598e18,antirez,antirez@gmail.com,Wed Apr 6 13:37:27 2016 +0200,1459942647,"Linenoise updated.As a side effect, cat commands.txt | redis-cli now is able to handlenlines more than 4096 bytes.n",45.0,15.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,1105.0,9.0,561.9455208333334,8941.0,1.0017795319349054,887.0,None,False,,
8a98b8d0c9e99df9cf83a08cb032657531598e18,d6e2cc71c6072b013cbca6dd6ee5cdd55620a70d,antirez,antirez@gmail.com,Tue Apr 12 23:39:18 2016 +0200,1460497158,Linenoise updated again (hints support).,248.0,8.0,"deps/linenoise/README.markdown,CAS_DELIMITER,deps/linenoise/example.c,CAS_DELIMITER,deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER",4.0,1.0,1.0,1.2708695741913203,12.0,329.25,21.0,437.64847800925935,8943.5,1.00101768707799,891.0,None,False,,
d6e2cc71c6072b013cbca6dd6ee5cdd55620a70d,d1ddf7e9585eea836a47847602f7b05038856a49,antirez,antirez@gmail.com,Wed Apr 13 12:34:14 2016 +0200,1460543654,redis-cli hints.,62.0,1.0,"deps/linenoise/linenoise.c,CAS_DELIMITER,deps/linenoise/linenoise.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,2.0,2.0,0.7458547791848442,13.0,1258.3333333333333,182.0,21.64337962962963,8947.0,1.934245904476297,4458.0,None,False,,
d1ddf7e9585eea836a47847602f7b05038856a49,70b3314141220bee2ecd73aa9e9ccd8a9a2e855f,antirez,antirez@gmail.com,Wed Apr 13 12:35:14 2016 +0200,1460543714,redis-cli help.h updated.,18.0,8.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1032.0,12.0,147.8310185185185,8949.0,1.0067644802154612,4459.0,None,False,,
70b3314141220bee2ecd73aa9e9ccd8a9a2e855f,e0eb5f6bbf2407c802a231594acb90aa7a6a8e9a,antirez,antirez@gmail.com,Wed Apr 13 13:58:30 2016 +0200,1460548710,redis-cli preferences and rc file support.,85.0,17.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2569.0,166.0,0.058518518518518525,8950.0,18.088607594936708,4460.0,None,False,True,"[""18d32c7e1c3fac6f927fc5d1187ac205edb0fec2""]"
e0eb5f6bbf2407c802a231594acb90aa7a6a8e9a,b1f181a7367a2329e37d96244ecaf65249a7171c,antirez,antirez@gmail.com,Thu Apr 14 12:48:34 2016 +0200,1460630914,ZADD refactored into a proper API.,182.0,86.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2968.0,118.0,56.05859953703704,8951.0,1.017838476313332,4461.0,Feature Addition,False,,
b1f181a7367a2329e37d96244ecaf65249a7171c,b73c7af0f4af95b0feb4afc29d4521d714e9b384,antirez,antirez@gmail.com,Thu Apr 14 15:58:49 2016 +0200,1460642329,zsetAdd() API exposed into server.h.,16.0,15.0,"src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.9992492479956564,13.0,2381.5,171.0,24.387957175925933,8952.5,1.0205297641012787,4463.0,Feature Addition,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
b73c7af0f4af95b0feb4afc29d4521d714e9b384,6f926c3e83dd4f0997e5b73bb25b4aa6bb658df2,antirez,antirez@gmail.com,Fri Apr 15 12:46:18 2016 +0200,1460717178,ZRANK refactored into proper API.,72.0,50.0,"src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.0685860940364442,13.0,2382.0,173.0,0.8663078703703704,8954.5,1.8657430292989885,4465.0,None,False,,
6f926c3e83dd4f0997e5b73bb25b4aa6bb658df2,dda0f37f115ef2d58333df94de05ee0b05b3df59,antirez,antirez@gmail.com,Fri Apr 15 15:20:25 2016 +0200,1460726425,ZREM refactored into proper API.,48.0,49.0,"src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.08283655281361223,13.0,2393.0,175.0,0.10702546296296296,8956.5,8.00767816589164,4467.0,None,False,,
dda0f37f115ef2d58333df94de05ee0b05b3df59,0b4bb502a25fca129907c993c7570c872172461d,Damian Janowski,damian.janowski@gmail.com,Mon Apr 18 00:35:54 2016 -0300,1460950554,Fix ZINCRBY return value.,8.0,0.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,13.0,2050.0,157.0,163.67245370370372,5.5,1.194273582630937,3.0,Corrective,True,,
dda0f37f115ef2d58333df94de05ee0b05b3df59 0b4bb502a25fca129907c993c7570c872172461d,4cbe0444390b87a0c366d098c066bf9249d7c9fd,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 18 12:27:59 2016 +0200,1460975279,Merge pull request #3174 from djanowski/fix-zincrby-return-valueFix ZINCRBY return value.,,,,,,,,,,,,,,,Merge,False,,
4cbe0444390b87a0c366d098c066bf9249d7c9fd,5565cc629edcbed650a49444c79340153758824f,bogdanvlviv,bogdanvlviv@gmail.com,Tue Apr 19 14:43:06 2016 +0300,1461066186,fix pidfile in redis.conf,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1106.0,163.0,77.77436342592594,0.0,0.0,0.0,Corrective,True,,
4cbe0444390b87a0c366d098c066bf9249d7c9fd,14086a46ca69f267d909817eb6bbcd1d976d94f2,therealbill,therealbill@me.com,Fri Apr 22 10:43:48 2016 -0500,1461339828,"fix for #3187I've renamed maxmemoryToString to evictPolicyToString since that isnmore accurate (and easier to mentally connect with the correct data), asnwell as updated the function to user server.maxmemory_policy rather thannserver.maxmemory. Now with a default config it is actually returningnthe correct policy rather than volatile-lru.n",4.0,4.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.5,13.0,2601.0,293.0,50.13934027777778,3.0,1.0081654348534352,4.0,Corrective,True,,
4cbe0444390b87a0c366d098c066bf9249d7c9fd,b5548957156207f066b536f2a1bdd5193760199b,Oran Agra,oran@monfort.co.il,Mon Apr 25 14:18:40 2016 +0300,1461583120,additional fix to issue #2948,3.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1909.0,247.0,66.59019675925926,10.0,1.0150172254876384,10.0,Corrective,True,,
b5548957156207f066b536f2a1bdd5193760199b,7ba90225a07192219d526b2a347735ccb7c7a3e1,Oran Agra,oran@monfort.co.il,Mon Apr 25 14:19:28 2016 +0300,1461583168,fix small issues in redis 3.2,3.0,1.0,"src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,1828.5,346.0,36.326458333333335,11.5,1.1844114189217367,12.0,Corrective,True,,
7ba90225a07192219d526b2a347735ccb7c7a3e1,f8909a25796d3a4e0cee6f5f2250e57143e10129,Oran Agra,oran@monfort.co.il,Mon Apr 25 16:47:42 2016 +0300,1461592062,add DEBUG JEMALLC PURGE and JEMALLOC INFO cleanup,17.0,2.0,"src/debug.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.4854607607459134,13.0,1859.0,286.0,71.47762731481481,13.5,1.0073179082018404,14.0,Corrective,True,True,"[""78f35f8d2cff306d943366a5c05df9e75b0f028f""]"
f8909a25796d3a4e0cee6f5f2250e57143e10129,7b52ef1da22079e3a8e6630b2698a881eb4c2330,Oran Agra,oran@monfort.co.il,Mon Apr 25 16:48:09 2016 +0300,1461592089,networking.c minor optimization,5.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1912.0,248.0,0.10380787037037036,15.0,10.633180956628387,15.0,None,False,True,"[""f86df924b01db43eb68f5c4b4cac4c44c1507390""]"
7b52ef1da22079e3a8e6630b2698a881eb4c2330,6ed8c2823065fc32bd8eaa63b42ca41a82b25b39,Oran Agra,oran@monfort.co.il,Mon Apr 25 16:48:25 2016 +0300,1461592105,dict.c minor optimization,4.0,4.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1085.0,64.0,270.16798611111113,16.0,1.0037014008002736,16.0,None,False,,
6ed8c2823065fc32bd8eaa63b42ca41a82b25b39,5e3880a492efd6c305d7bde5be44c1de72e15cb0,Oran Agra,oran@monfort.co.il,Mon Apr 25 16:49:57 2016 +0300,1461592197,various cleanups and minor fixes,39.0,45.0,"src/adlist.c,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/unit/bitops.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",12.0,2.0,3.0,2.9627243811303137,13.0,724.1666666666665,700.0,390.4553665123457,22.5,1.0004695464433613,3.0,Corrective,True,,
cf76af6b9fb7f808ac6f0ab79393d390a14f9cd9,82ae4f30ed8d2c55c27a465429adee572654bdb2,Chris Lamb,chris@chris-lamb.co.uk,Fri Apr 29 16:45:53 2016 +0100,1461944753,Use SOURCE_DATE_EPOCH over unreproducible uname + date calls.See <https://reproducible-builds.org/specs/source-date-epoch/> for morendetails.nnSigned-off-by: Chris Lamb <chris@chris-lamb.co.uk>n,3.0,0.0,"src/mkreleasehdr.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,11.0,4.0,1159.9596875,5.0,1.000862098925313,4.0,None,False,True,"[""7c95e89ec320c2f8ecc767e7dc5e93abfbbd07bf""]"
4cbe0444390b87a0c366d098c066bf9249d7c9fd,da26f2bbd2dcf0abe961428b745eb62a98b65715,Seth Bergman,seth.atxwebs@gmail.com,Sat Apr 30 11:58:48 2016 -0500,1462035528,Fixed typo in README.md,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,447.0,18.0,178.20858796296295,0.0,0.0,0.0,Corrective,True,,
4cbe0444390b87a0c366d098c066bf9249d7c9fd,4fdde78c72ac18f51460be9ac96d1d638a969c9d,antirez,antirez@gmail.com,Mon May 2 16:41:56 2016 +0200,1462200116,"New masters with slots are now targets of migration if others are.This fixes issue #3043.nnBefore this fix, after a complete resharding of a master slotsnto other nodes, the master remains empty and the slaves migrate awaynto other masters with non-zero nodes. However the old master now empty,nis no longer considered a target for migration, because the system hasnno way to tell it had slaves in the past.nnThis fix leaves the algorithm used in the past untouched, but adds annew rule. When a new or old master which is empty and without slaves,nare assigend with their first slot, if other masters in the cluster havenslaves, they are automatically considered to be targets for replicasnmigration.n",35.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5270.0,499.0,90.30685185185185,8958.0,1.0110733568881407,4468.0,Corrective,True,,
4fdde78c72ac18f51460be9ac96d1d638a969c9d,9c48f28e54336c07d5d7764293e41fe6f753d95d,antirez,antirez@gmail.com,Mon May 2 18:36:09 2016 +0200,1462206969,"Cluster regression test for #3043.The test works but is very slow so far, since it involves reshardingn1/5 of all the cluster slots from master 0 to the other 4 masters andnback into the original master.n",61.0,0.0,"tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8959.0,0.0,687.0,Preventative,False,True,"[""0bb787d3ad49977ed92dfe711f54494ed0abccdf""]"
9c48f28e54336c07d5d7764293e41fe6f753d95d,2c22f59c3f3d02ffa995bd35ec333bd712718f96,antirez,antirez@gmail.com,Wed May 4 08:59:56 2016 +0200,1462345196,Reply with error on negative geo radius.Thanks to @tidwall for reporting.nClose #3194.n,4.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,772.0,45.0,75.32530092592594,8960.0,1.0132757518085906,4469.0,None,False,True,"[""f3e81de17688e310b7a5ef5108a3a6c8962eb133""]"
2c22f59c3f3d02ffa995bd35ec333bd712718f96 5e3880a492efd6c305d7bde5be44c1de72e15cb0,b5352eea51f2881d13ec4e3e1fa90cea037d4f29,Salvatore Sanfilippo,antirez@gmail.com,Wed May 4 09:11:36 2016 +0200,1462345896,Merge pull request #3191 from oranagra/minor_fixMinor fixes found during merge and code review,,,,,,,,,,,,,,,Merge,False,,
b5352eea51f2881d13ec4e3e1fa90cea037d4f29,840ac20855855b134662683ca3e7d9e364d4bca8,antirez,antirez@gmail.com,Wed May 4 12:45:55 2016 +0200,1462358755,DEBUG command self documentation.,49.0,2.0,"src/debug.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.2386845113510013,13.0,2612.5,176.0,10.333449074074077,8961.5,1.080539168133148,4471.0,Corrective,True,True,"[""78f35f8d2cff306d943366a5c05df9e75b0f028f"", ""8c7f90e91e1e6324db8a1e9ca20e3dc95ce049d0""]"
840ac20855855b134662683ca3e7d9e364d4bca8,5500c510837aa2106ef53636ff62b5893a71237e,antirez,antirez@gmail.com,Wed May 4 15:42:14 2016 +0200,1462369334,Command r flag removed from commands not accessing the key space.Thanks to @oranagra for the hint about misplaced 'r' flags.n,35.0,35.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4129.0,57.0,0.12244212962962962,8963.0,9.16712354664902,4472.0,None,False,True,"[""efa084070718ccfb5628f40bffd88b2799498d68""]"
5500c510837aa2106ef53636ff62b5893a71237e,995b9ffe07ee497d0a8c7590e393a2ad2d8365da,antirez,antirez@gmail.com,Wed May 4 15:45:38 2016 +0200,1462369538,Allow CONFIG GET during loading.Thanks to @oranagra for the idea of allowing CONFIG GET during loading.n,7.0,1.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,13.0,3044.0,243.0,4.551932870370371,8964.5,1.1098576954465946,4474.0,None,False,,
995b9ffe07ee497d0a8c7590e393a2ad2d8365da,b632f7846b97d8485ebeb2454d47000d8815eb98,antirez,antirez@gmail.com,Wed May 4 22:34:17 2016 +0200,1462394057,Minor redis-cli wording change in --help output.,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2637.0,168.0,9.282349537037037,8966.0,1.1077313449585098,4475.0,None,False,,
b632f7846b97d8485ebeb2454d47000d8815eb98,b76d27ca74b7e2baadbd3d171969a44eeaeb9d1d,antirez,antirez@gmail.com,Wed May 4 22:41:57 2016 +0200,1462394517,"Added a tool for generating changelogs automatically.Sometimes Redis patch releases are released in a matter of weeks or daysnone after the other. In order to have less release friction the idea isnto stop writing changelogs by hand, in order to also cover everythingninteresting there is to say. Useless things can be deleted manually bynthe changelog. Also this gives more credits to contributors since oftennin the commit message involved people are cited even when they are notnthe authors of the commit.n",26.0,0.0,"utils/releasetools/changelog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8967.0,0.0,74.0,Feature Addition,False,,
b76d27ca74b7e2baadbd3d171969a44eeaeb9d1d cad9ea5c68fa0b36c1620aa35fe5a946c0a84ced,09153b912792e0890594532e380fe807f9aaec5b,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 08:56:28 2016 +0200,1462431388,Merge pull request #3152 from be-hase/fix/check_open_slotsFix redis-trib.rb,,,,,,,,,,,,,,,Merge,False,,
09153b912792e0890594532e380fe807f9aaec5b da26f2bbd2dcf0abe961428b745eb62a98b65715,de3a6736f704704619d8dab6fd967208e859df46,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 08:57:30 2016 +0200,1462431450,Merge pull request #3193 from sethbergman/patch-1Fixed typo in README.md,,,,,,,,,,,,,,,Merge,False,,
de3a6736f704704619d8dab6fd967208e859df46 14086a46ca69f267d909817eb6bbcd1d976d94f2,91b4966783cc0c4ec3985806f93606db60158ca7,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 09:02:25 2016 +0200,1462431745,Merge pull request #3188 from therealbill/unstablemaxmemory_policy fix for #3187,,,,,,,,,,,,,,,Merge,False,,
91b4966783cc0c4ec3985806f93606db60158ca7,d827dbfda770d040d23802fb462487eea3699f0b,Chris Thunes,cthunes@brewtab.com,Fri Mar 11 15:22:36 2016 -0500,1457727756,Ensure slots are rechecked on EXEC.Fixes #2515.n,7.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4129.0,59.0,-53.7243287037037,0.0,0.0,0.0,Corrective,True,,
d827dbfda770d040d23802fb462487eea3699f0b,0bb787d3ad49977ed92dfe711f54494ed0abccdf,antirez,antirez@gmail.com,Thu May 5 09:45:31 2016 +0200,1462434331,Quick fix to avoid false positive in replica migration test.,4.0,1.0,"tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,61.0,1.0,2.63150462962963,8968.0,1.3800107317845551,688.0,Corrective,True,,
0bb787d3ad49977ed92dfe711f54494ed0abccdf,c77b95fd01cb6959005121b91e21037cd3da1c88,antirez,antirez@gmail.com,Thu May 5 10:02:42 2016 +0200,1462435362,Bind both IPv4 and IPv6 or exit with an error by default.Thanks to @tushar2708 for the PR. I applied a slightly different fix.nThanks to @cespare for reporting.nnClose #3024nClose #3020n,10.0,8.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4134.0,60.0,54.48618055555556,8969.0,1.0183532776532276,4476.0,Corrective,True,True,"[""92038286e8c047966f779e8d7eefa6d2786bfa43""]"
c77b95fd01cb6959005121b91e21037cd3da1c88 c30ffaab05fe7f2ddc5723d9b81382b5c9876d25,a4df1568727c5f250a1862ca0beb550e2116048d,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 10:13:00 2016 +0200,1462435980,Merge pull request #3077 from Palethorn/ipv6-redirect-parseFix for #3076 Reverse redirect address parse,,,,,,,,,,,,,,,Merge,False,,
a4df1568727c5f250a1862ca0beb550e2116048d 9e46bf22edc167cd8b573acef1affe0fea50cd81,330715afd824e8022f5f14a5dec9f1905e659d6c,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 10:15:17 2016 +0200,1462436117,Merge pull request #3039 from itamarhaber/patch-3Fixes a typo in the comments,,,,,,,,,,,,,,,Merge,False,,
330715afd824e8022f5f14a5dec9f1905e659d6c,971e3c51b63e7a5ced6a953bdfd2d9bd53b25e52,antirez,antirez@gmail.com,Thu May 5 11:33:43 2016 +0200,1462440823,"Cluster: make getNodeByQuery() responsible of -CLUSTERDOWN errors.This fixes a bug introduced by d827dbf, and makes the code consistentnwith the logic of always allowing, while the cluster is down, commandsnthat don't target any key.nnAs a side effect the code is also simpler now.n",21.0,18.0,"src/cluster.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,4720.0,561.0,1.424583333333333,8970.5,1.3549612167703793,4478.0,None,False,,
971e3c51b63e7a5ced6a953bdfd2d9bd53b25e52,4c53bab17b936c9875bfd884a30686ed1c438d67,antirez,antirez@gmail.com,Thu May 5 11:49:27 2016 +0200,1462441767,Cluster test 12: reshard back just a few slots to speedup the test.,7.0,7.0,"tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,64.0,2.0,0.08606481481481483,8972.0,12.619150080688536,689.0,Preventative,False,,
4c53bab17b936c9875bfd884a30686ed1c438d67,02db338a82fe77b3939512d96f3e494948ae7e53,antirez,antirez@gmail.com,Thu May 5 13:57:57 2016 +0200,1462449477,"redis-cli: don't free historyfile, is used later.",1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2638.0,169.0,0.6414351851851852,8973.0,2.5590039696860343,4479.0,None,False,,
02db338a82fe77b3939512d96f3e494948ae7e53 15dacfec6f25fe291ce8aaa702c7fabbee9e3d00,7b90815fc3ccade17128a35590a9066fdccfcc6a,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 16:21:21 2016 +0200,1462458081,Merge pull request #3008 from badboy/fix-2911Fix nanosecond conversion,,,,,,,,,,,,,,,Merge,False,,
7b90815fc3ccade17128a35590a9066fdccfcc6a 28e80bf96dba35f8937518421a2ee5a3a9c36c4d,0c1f84f0ea3d7bdbfd4429814e418db4325441e7,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 16:23:47 2016 +0200,1462458227,Merge pull request #3006 from baishaofei/unstablefix linux compile Error zmalloc.c:109: error: invalid lvalue in unary `&',,,,,,,,,,,,,,,Merge,False,,
0c1f84f0ea3d7bdbfd4429814e418db4325441e7 e6d970534b41825e9b32504b4e80d0039a389d28,f5ff91f675843b132bfee9c0c4b19cc1908cacb9,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 17:16:58 2016 +0200,1462461418,Merge pull request #2998 from danielhtshih/unstableFix a possible race condition of sdown event detection if sentinel's connection to master/slave/sentinel became disconnected just after the last PONG and before the next PING.,,,,,,,,,,,,,,,Merge,False,,
f5ff91f675843b132bfee9c0c4b19cc1908cacb9,efa084070718ccfb5628f40bffd88b2799498d68,Ruben Bridgewater,ruben.bridgewater@fintura.de,Mon Jan 4 11:39:45 2016 +0100,1451903985,Fix commandCommand arity,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4130.0,62.0,-121.95414351851852,0.0,0.0,0.0,Corrective,True,True,"[""68dd1c915549f4660bbcfeae367bb30ebe5989f1""]"
efa084070718ccfb5628f40bffd88b2799498d68 2f3f3fd5e0cb19ea2df5712198dc40f093bd1255,f0fcc36ce15554a54aa5d629c2a76ec6e4e3e716,Salvatore Sanfilippo,antirez@gmail.com,Thu May 5 17:26:35 2016 +0200,1462461995,Merge pull request #2956 from pkulchenko/global-protection-msg-typoUpdate global protection error message,,,,,,,,,,,,,,,Merge,False,,
efa084070718ccfb5628f40bffd88b2799498d68,68dd1c915549f4660bbcfeae367bb30ebe5989f1,antirez,antirez@gmail.com,Thu May 5 17:35:33 2016 +0200,1462462533,"Revert Fix commandCommand arityThis reverts commit 1189a4eae6d009fc0da8d50fd542ba1391542165.nnActually this is wrong, the command can be called without args at all.n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4130.0,63.0,122.20541666666666,8974.0,1.008182943336527,4480.0,Corrective,True,,
68dd1c915549f4660bbcfeae367bb30ebe5989f1 f0fcc36ce15554a54aa5d629c2a76ec6e4e3e716,bdbeb07a9ec6b66fd27c39aa4e8811cc980e90e1,antirez,antirez@gmail.com,Thu May 5 17:39:40 2016 +0200,1462462780,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
bdbeb07a9ec6b66fd27c39aa4e8811cc980e90e1,94dc71ff08e3db4cb035130208470b0646c20a05,antirez,antirez@gmail.com,Thu May 5 18:05:37 2016 +0200,1462464337,redis-cli: remove debugging message.,0.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2638.0,170.0,0.17199074074074075,8975.0,6.814266487213997,4481.0,None,False,,
94dc71ff08e3db4cb035130208470b0646c20a05,2205c465ca5e289d1024a8a88bde4cdc75720369,antirez,antirez@gmail.com,Thu May 5 23:37:08 2016 +0200,1462484228,Cluster: don't check scripts key slots during AOF loading.,4.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2387.0,165.0,64.57339120370371,8976.0,1.0154862549629056,4482.0,None,False,,
2205c465ca5e289d1024a8a88bde4cdc75720369,f9ee039a76f55df4380c68ad68bcaf9573fd7d09,antirez,antirez@gmail.com,Fri May 6 09:12:56 2016 +0200,1462518776,Scripting test: match new error message.,1.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,735.0,48.0,10.724293981481482,8977.0,1.0932462315679503,690.0,Preventative,False,,
f9ee039a76f55df4380c68ad68bcaf9573fd7d09,8eb43bf72c2109092e498870869109419e13e895,antirez,antirez@gmail.com,Sat May 7 13:03:25 2016 +0200,1462619005,"redis-cli: integrate help.h with COMMAND output.Use the COMMAND output to fill with partial information the built-innhelp. This makes redis-cli able to at least complete commands that arenexported by the Redis server it is connected to, but were not availablenin the help.h file when the redis-cli binary was compiled.n",70.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2637.0,171.0,1.7901388888888892,8978.0,1.5586158740010865,4483.0,None,False,True,"[""892565f924c53ead19f90afc5f652d20ca6e69c8""]"
f9ee039a76f55df4380c68ad68bcaf9573fd7d09 45fa113d004b98197883ba26a11ccf562a315d62,b44ad302d2337b45a02b6a3e4920089a48292c6d,Salvatore Sanfilippo,antirez@gmail.com,Sun May 8 18:04:41 2016 +0200,1462723481,Merge pull request #732 from evilpacket/remove_dofileRemoves dofile() from Lua,,,,,,,,,,,,,,,Merge,False,,
8eb43bf72c2109092e498870869109419e13e895 b44ad302d2337b45a02b6a3e4920089a48292c6d,3b644e82b0cc96113e29672d1551248c9e9db893,antirez,antirez@gmail.com,Sun May 8 18:04:53 2016 +0200,1462723493,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
3b644e82b0cc96113e29672d1551248c9e9db893,9682b616a21b5e675a1ca82109a11d6f4de1d2de,oranagra,oran@redislabs.com,Mon May 9 09:12:38 2016 +0300,1462774358,"minor fixes - mainly signalModifiedKey, and GEORADIUS",19.0,16.0,"src/geo.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",6.0,1.0,1.0,2.206318373407876,13.0,1984.5,416.0,83.47031249999998,2.5,0.8366944143458243,5.0,Corrective,True,True,"[""f3e81de17688e310b7a5ef5108a3a6c8962eb133""]"
3b644e82b0cc96113e29672d1551248c9e9db893,6dead2cff563375543b23c1ecec78a1462ad611a,antirez,antirez@gmail.com,Sun Mar 6 13:44:24 2016 +0100,1457268264,Modules: first preview 31 March 2016.,2625.0,4.0,"redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/.gitignore,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER",13.0,2.0,3.0,1.8050435613157607,13.0,917.0,883.0,4.805852920227919,8985.0,1.0278307539680411,4495.0,None,False,True,"[""e453d36e1e3b39c19586340d95eb54fbd6b69ef0"", ""87312ff7810a67d6ef6ff38745242dab128aa95b"", ""5831dd860a5a355d242eb32da2e95aa93451d896"", ""b6c4822f7cfdb87b211826789128e1ff4162d3e6"", ""f9c9b4bf4c40820350bf037d6c33f28092b70423"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15"", ""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95"", ""3b0f0086156e79e0c7e13c8e7118799b9b40dd08"", ""a12f07792f8fc0a96710e22f18752f7bb8f212b9"", ""e978bdf9ef62404083afed28d98e7a455bcecd3b"", ""1833d008b3af8628835b5f082c5b4b1359557893""]"
6dead2cff563375543b23c1ecec78a1462ad611a,34f2fb7d8c941fad5557d5b6fb7c4562ceb3c32a,Dvir Volk,dvirsky@gmail.com,Thu Mar 31 16:17:33 2016 +0300,1459430253,fixed makefile for linux,12.0,2.0,"src/modules/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,17.0,1.0,25.02302083333333,0.0,0.0,0.0,Corrective,True,,
34f2fb7d8c941fad5557d5b6fb7c4562ceb3c32a,6020469452217da57768f0b25dbcf27aba007cc7,antirez,antirez@gmail.com,Thu Mar 31 17:02:13 2016 +0200,1459436533,Modules: remove warnings due to void/function pointer conversion.,7.0,6.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1384.0,1.0,25.09570601851852,8992.0,1.0398474543518357,4496.0,None,False,,
6020469452217da57768f0b25dbcf27aba007cc7,85919f80ed675dad7f2bee25018fec2833b8bbde,antirez,antirez@gmail.com,Thu Mar 31 17:43:37 2016 +0200,1459439017,"Modules: avoid conflict between modules func pointers and dynamic symbols.In modules we fill a set of function pointers defined in redismodule.h,npopulating a set of APIs that are callable from the module. We use thisnmanual process instead of resorting to dynamic linking so that we havenexact control on how we pass the API to the module, and we can even passndifferent functions for the same name, depending on the API versionndeclared by the module.nnHowever if the function pointers in redismodule.h and the functionsndefined in module.c have the same name, they conflict since the corenexports the symbols to the module.nnThere is probably some compiler flags trick to avoid this, but in ordernto be safer in the future and be more easily compatible with differentnbuilidng systems, this commit changes the internal function prefix fromnRedisModule_ to RM_, so for example:nnRM_StringSet() will be exported as RedisModule_StringSet()n",95.0,88.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.12068101401352382,13.0,768.5,3.0,12.57660300925926,8993.5,18.41118252954304,4498.0,None,False,,
85919f80ed675dad7f2bee25018fec2833b8bbde,e443ad9c29ab9ed23a965d129f3b0a2d0e8712d4,Yossi Gottlieb,yossigo@gmail.com,Thu Mar 31 21:18:45 2016 +0300,1459448325,Log loadmodule dlopen() errors.,4.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1391.0,3.0,0.10773148148148147,6.0,10.282337773957886,5.0,None,False,,
e443ad9c29ab9ed23a965d129f3b0a2d0e8712d4,e711a9ac450246dce43a778e910fc7327a681db3,Dvir Volk,dvirsky@gmail.com,Sun Apr 3 19:04:32 2016 +0300,1459699472,fixed the doc with a right function name,3.0,2.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,695.0,1.0,28.13898148148148,1.0,1.0355378889835836,1.0,Corrective,True,,
e711a9ac450246dce43a778e910fc7327a681db3,2967c00c2ca07fdffd938945cbd5467502f879c5,antirez,antirez@gmail.com,Tue Apr 5 15:53:04 2016 +0200,1459864384,Modules: RedisModule_ReplyWithNull() implemented.,9.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,13.0,773.5,6.0,4.8693634259259255,8995.5,1.1551728410217137,4500.0,None,False,True,"[""ae5cb3f7d5b1f6c6ce38a3cc939cf859f257168c""]"
2967c00c2ca07fdffd938945cbd5467502f879c5,ae5cb3f7d5b1f6c6ce38a3cc939cf859f257168c,Dvir Volk,dvirsky@gmail.com,Tue Apr 5 17:02:08 2016 +0300,1459864928,renamed RedisModule_ReplyWithNull to RM_ReplyWithNull to fix compilation,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,5.0,0.006296296296296296,2.0,159.82352941176467,2.0,Corrective,True,,
ae5cb3f7d5b1f6c6ce38a3cc939cf859f257168c,e453d36e1e3b39c19586340d95eb54fbd6b69ef0,Dvir Volk,dvirsky@gmail.com,Wed Apr 6 12:58:21 2016 +0300,1459936701,fixed case in moduleCreateCallReplyFromProto,4.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,6.0,0.8307060185185186,3.0,2.2037952990678944,3.0,Corrective,True,,
e453d36e1e3b39c19586340d95eb54fbd6b69ef0,4efe9e19c13fca310fe3a28907a082fbf2416fdb,antirez,antirez@gmail.com,Wed Apr 6 12:34:04 2016 +0200,1459938844,Add the last break for consistency in moduleCreateCallReplyFromProto.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,7.0,0.02480324074074074,8997.0,41.31731217918806,4501.0,Feature Addition,False,,
4efe9e19c13fca310fe3a28907a082fbf2416fdb,fded8aa4e57c71a27c4b9e4bede49e4db7365d59,Sun He,sunheehnus@gmail.com,Wed Apr 6 22:42:24 2016 +0800,1459953744,modules: correct protolen,4.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,8.0,0.1724537037037037,13.0,6.798657718120806,12.0,None,False,,
fded8aa4e57c71a27c4b9e4bede49e4db7365d59,1868dee6f2e1030f2aea9c96d484e8c9403dbfab,Sun He,sunheehnus@gmail.com,Wed Apr 6 22:46:22 2016 +0800,1459953982,modules/RM_StringSet: set key->value,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,9.0,0.002754629629629629,14.0,364.0252100840337,13.0,None,False,,
1868dee6f2e1030f2aea9c96d484e8c9403dbfab,3a7b1702056673d05916574064fdaf6ae84967b1,Sun He,sunheehnus@gmail.com,Wed Apr 6 22:47:52 2016 +0800,1459954072,modules/RM_OpenKey: avoid decrRefCount obj twice,0.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1402.0,10.0,0.0010416666666666669,15.0,961.0,14.0,None,False,,
3a7b1702056673d05916574064fdaf6ae84967b1,2e464bf0b110ee225757a5126331a6c25c2317f9,Sun He,sunheehnus@gmail.com,Wed Apr 6 22:49:29 2016 +0800,1459954169,modules/RM_StringTruncate: correct reallocate condition,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1401.0,11.0,0.0011226851851851851,16.0,891.7216494845361,15.0,None,False,,
2e464bf0b110ee225757a5126331a6c25c2317f9,6054089fa8f030cb6e43c2dbb6d486d2ad195013,Itamar Haber,itamar@redislabs.com,Sat Apr 9 13:25:50 2016 -0700,1460233550,Stops SPLICE from accepting negative counts,6.0,2.0,"src/modules/helloworld.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,334.0,1.0,34.32043981481481,11.0,1.0291371557414697,9.0,None,False,,
6054089fa8f030cb6e43c2dbb6d486d2ad195013,f4e0129fa9c127700bd2193b696d9051f391b2ef,antirez,antirez@gmail.com,Mon Apr 11 12:23:04 2016 +0200,1460370184,Modules: RedisModule_ReplyWithCallReply().,31.0,1.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,2.0,1.3771905092405703,13.0,647.5,19.0,5.0033593750000005,8999.5,1.1019452854618683,4505.0,None,False,,
f4e0129fa9c127700bd2193b696d9051f391b2ef,11b3df24cb77c382c956c845151b1b8f0252c9f2,antirez,antirez@gmail.com,Mon Apr 11 17:12:11 2016 +0200,1460387531,Modules: expire API and documentation.,101.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,2.0,1.8723075866109689,13.0,655.0,23.0,0.20077546296296292,9003.5,3.5941084913817947,4509.0,None,False,,
11b3df24cb77c382c956c845151b1b8f0252c9f2,f199504ac933533e6e8c14ed65d727bb597ecb8d,antirez,antirez@gmail.com,Thu Apr 14 12:49:16 2016 +0200,1460630956,Modules: ZSET API WIP.,14.0,5.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER",2.0,1.0,2.0,0.7424875695421236,13.0,1085.5,18.0,2.8174189814814814,9006.5,1.2662010886309951,4511.0,None,False,,
f199504ac933533e6e8c14ed65d727bb597ecb8d,4457e4acbe487779e233747effa481c698789916,antirez,antirez@gmail.com,Thu Apr 14 15:58:49 2016 +0200,1460642329,Modules: ZSET API WIP #2.,93.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.38238067515378016,13.0,810.5,20.0,1.5403414351851852,9008.5,4.9607717389144455,4513.0,None,False,True,"[""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
4457e4acbe487779e233747effa481c698789916,e1b34ecf98c701187473531d3e19cb4b6b737967,antirez,antirez@gmail.com,Fri Apr 15 12:46:56 2016 +0200,1460717216,Modules: ZSET API WIP #3.,24.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,13.0,856.5,22.0,0.8667476851851852,9010.5,1.865303724277912,4515.0,None,False,,
e1b34ecf98c701187473531d3e19cb4b6b737967,d5ecedd18574cbafe1d2070ff67d9308f9106bad,antirez,antirez@gmail.com,Fri Apr 15 15:35:11 2016 +0200,1460727311,Modules: ZSET API WIP #4.,33.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,13.0,868.5,24.0,0.11684027777777778,9012.5,7.419019316493312,4517.0,None,False,,
d5ecedd18574cbafe1d2070ff67d9308f9106bad,556d593d37e751b562d02a9180e06d262d4a1e55,antirez,antirez@gmail.com,Mon Apr 18 12:25:34 2016 +0200,1460975134,Remove useless space.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1588.0,18.0,2.86832175925926,9014.0,1.3486359216053394,4518.0,None,False,,
556d593d37e751b562d02a9180e06d262d4a1e55,eac5a13cb7f3c7bbcb16a6a5bc2080821d591663,antirez,antirez@gmail.com,Tue Apr 19 15:22:33 2016 +0200,1461072153,Modules: sorted set iterators WIP.,221.0,1.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,2.0,1.372587592496079,13.0,969.5,90.0,14.266122685185184,9016.5,1.2738267043719709,4522.0,None,False,,
eac5a13cb7f3c7bbcb16a6a5bc2080821d591663,6eeeda39e9ed9e6f26c5fd74d180b132c7ee972e,antirez,antirez@gmail.com,Tue Apr 19 17:02:24 2016 +0200,1461078144,Modules: sorted set iterators WIP #2.,34.0,4.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.5907239186406503,13.0,2175.333333333333,204.0,-6.4978086419753085,9020.0,8.193716442358724,4525.0,None,False,,
6eeeda39e9ed9e6f26c5fd74d180b132c7ee972e,bdbb5a0253bc2d01c60391273001bf6242350fcb,antirez,antirez@gmail.com,Tue Apr 19 17:12:48 2016 +0200,1461078768,Modules: put zset iterator current element in auto memory pool.,6.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1756.0,21.0,0.007222222222222222,9022.0,139.46153846153848,4526.0,None,False,,
bdbb5a0253bc2d01c60391273001bf6242350fcb,f362f7a18a64a21e2feef3851d6c6b4dee06de50,antirez,antirez@gmail.com,Wed Apr 20 12:38:14 2016 +0200,1461148694,Modules: sorted set iterators WIP #3.,134.0,24.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,2.0,0.9037694105399378,13.0,1033.0,97.0,0.8494155092592592,9024.5,1.6268089900622518,4530.0,None,False,,
f362f7a18a64a21e2feef3851d6c6b4dee06de50,0fd6d548cac3db5718547a440b92a6811bdde504,antirez,antirez@gmail.com,Wed Apr 20 13:31:31 2016 +0200,1461151891,Modules: fix top comments to be user-facing doc quality. About 33% done.,137.0,51.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1844.0,23.0,0.03700231481481482,9027.0,28.025336252736945,4531.0,None,False,True,"[""8521cde570f574006ee36a2d3e0ed1b2f6953d2f""]"
0fd6d548cac3db5718547a440b92a6811bdde504,d998170809f7474c3cb9fedc2ec266eaea39fa6c,antirez,antirez@gmail.com,Wed Apr 20 19:06:19 2016 +0200,1461171979,Simple Ruby script to generate reference doc added.,38.0,0.0,"src/modules/gendoc.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9028.0,0.0,4532.0,Feature Addition,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
d998170809f7474c3cb9fedc2ec266eaea39fa6c,083f5277c55951853570ffe0fd7ec56e9069f610,antirez,antirez@gmail.com,Wed Apr 20 23:01:40 2016 +0200,1461186100,Modules: zset iterator redesign #1.,76.0,106.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,2.0,1.0446693147070638,13.0,1082.0,102.0,0.4236892361111111,9030.5,2.278666321286332,4536.0,None,False,True,"[""7f9b9512b877af96ded1c9758c23c075bab36f8d""]"
083f5277c55951853570ffe0fd7ec56e9069f610,2b04f86ae567bf245235f8be456542150affb6ea,antirez,antirez@gmail.com,Thu Apr 21 09:27:13 2016 +0200,1461223633,Modules: zset lex iterator #1.,77.0,4.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.6133778969798926,13.0,2241.333333333333,213.0,0.8509066358024692,9034.0,2.28156680532865,4539.0,None,False,,
2b04f86ae567bf245235f8be456542150affb6ea,db3ade22eb553d743bb4667c1b864201a574bb9d,antirez,antirez@gmail.com,Thu Apr 21 11:17:00 2016 +0200,1461230220,Modules: zset lex iterator #2.,30.0,6.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.3516441151533924,13.0,2265.6666666666665,216.0,0.07623842592592593,9037.0,9.015788674662213,4542.0,None,False,True,"[""5daece2ec6fae603742538284422ed416f021b2f"", ""7f9b9512b877af96ded1c9758c23c075bab36f8d""]"
db3ade22eb553d743bb4667c1b864201a574bb9d,00109e111339221c414e340f191bcd47037d0e4c,antirez,antirez@gmail.com,Thu Apr 21 11:45:52 2016 +0200,1461231952,Modules: zset lex iterator #3.,49.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.1841636411194805,13.0,884.6666666666665,45.0,0.3604783950617285,9040.0,18.541653353250695,4545.0,None,False,,
00109e111339221c414e340f191bcd47037d0e4c,33e1231e533168915f006f2b39751b7013247a2d,antirez,antirez@gmail.com,Thu Apr 21 14:02:42 2016 +0200,1461240162,Modules: postponed array lengths.,86.0,3.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.3562048039313226,13.0,1111.5,40.0,0.09502314814814816,9042.5,8.892813641900123,4547.0,None,False,True,"[""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
33e1231e533168915f006f2b39751b7013247a2d,5bf5fd24c6054ccecb068f2a74c9c84aa2f2d79f,antirez,antirez@gmail.com,Mon Apr 25 10:39:02 2016 +0200,1461573542,Modules: a few fixes for the zset iterator.,13.0,6.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER",2.0,1.0,2.0,0.7424875695421236,13.0,1285.0,37.0,3.9060763888888888,9044.5,1.193584703110674,4549.0,None,False,,
5bf5fd24c6054ccecb068f2a74c9c84aa2f2d79f,10993ca0d51e21ff2dc68de9dce56ce2becb0e0c,antirez,antirez@gmail.com,Mon Apr 25 15:39:33 2016 +0200,1461591573,Modules: Hash type API WIP #1.,212.0,6.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,2.0,1.1162588213446083,13.0,1132.75,117.0,2.1667418981481483,9047.5,2.8814963016970383,4553.0,None,False,True,"[""a1f8e22b790c8a392b8f6550b61226fa237f3314"", ""cfaef8d5d494dc199117cb7a6841dfbdc43dd22e"", ""cc8f06ece996238111150f6730d8339e3603b5ff""]"
10993ca0d51e21ff2dc68de9dce56ce2becb0e0c,9b0556cf10dbd646bd011ccffcf619732b9dbef1,antirez,antirez@gmail.com,Mon Apr 25 17:09:26 2016 +0200,1461596966,Modules: Hash type API WIP #2.,60.0,4.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,0.8539462461631789,13.0,997.0,55.0,0.06241898148148148,9051.0,10.790469126645654,4556.0,None,False,True,"[""a1f8e22b790c8a392b8f6550b61226fa237f3314""]"
9b0556cf10dbd646bd011ccffcf619732b9dbef1,42f72210fdadcc348d0fc186d7489da5d39e848c,antirez,antirez@gmail.com,Mon Apr 25 17:13:15 2016 +0200,1461597195,Modules: Hash API defines made more uniform.,38.0,42.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,0.9917601481809736,13.0,1015.6666666666664,58.0,0.0026504629629629643,9054.0,231.56768558951958,4559.0,None,False,True,"[""cfaef8d5d494dc199117cb7a6841dfbdc43dd22e""]"
42f72210fdadcc348d0fc186d7489da5d39e848c,02c4a6c7f9b86cac0a79aeb5cda2b7e63f048636,antirez,antirez@gmail.com,Tue Apr 26 11:29:34 2016 +0200,1461662974,Modules: REDISMODULE_POSTPONED_ARRAY_LEN doc.,45.0,0.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,725.0,5.0,11.944652777777774,9056.0,1.083719470009244,4560.0,None,False,,
02c4a6c7f9b86cac0a79aeb5cda2b7e63f048636,a1f8e22b790c8a392b8f6550b61226fa237f3314,Dvir Volk,dvirsky@gmail.com,Tue Apr 26 18:06:20 2016 +0300,1461683180,fixed return value of HashGet (and a slight error in the documentation),2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2297.0,33.0,0.9951967592592592,4.0,2.0048264232133506,4.0,Corrective,True,,
a1f8e22b790c8a392b8f6550b61226fa237f3314,676a6a4d194eb1397b4880603bce210e3676a65c,Ramon Snir,r@mon.co.il,Tue Apr 26 22:34:41 2016 +0300,1461699281,tiny typo in Redis Modules API documentation,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2297.0,34.0,0.18635416666666665,0.0,0.0,0.0,Non Functional,False,,
676a6a4d194eb1397b4880603bce210e3676a65c,227d68094bce9f4feec54cd9c3d336a01c705b38,antirez,antirez@gmail.com,Wed Apr 27 18:09:31 2016 +0200,1461773371,Modules: command <-> core interface modified to get flags & keys.,177.0,40.0,"src/db.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",7.0,1.0,2.0,1.6013228056213988,13.0,1580.2857142857142,371.0,8.936703042328043,9060.0,1.1948520097328783,4567.0,None,False,True,"[""d41bd233d559df1b2c00395712638fb571b6c478"", ""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
227d68094bce9f4feec54cd9c3d336a01c705b38,1186f92b1bb54e83c094783a41263b42616ebe41,Itamar Haber,itamar@redislabs.com,Wed Apr 27 12:16:44 2016 -0700,1461784604,typo: %s/Emtpy/Empty/g,5.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2423.0,36.0,0.13001157407407407,12.0,8.691622896821865,10.0,None,False,,
1186f92b1bb54e83c094783a41263b42616ebe41,7f5e1340f9bf6e1566be630f424accdb2ad0aed7,antirez,antirez@gmail.com,Thu Apr 28 08:45:47 2016 +0200,1461825947,Modules: add ZADD_INCR flag to zset increment API.,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2423.0,37.0,0.4785069444444445,9064.0,3.089833829185109,4568.0,None,False,,
7f5e1340f9bf6e1566be630f424accdb2ad0aed7,8fc67080a2448298d13af3f7d6bbbee4bc9e64fb,Dvir Volk,dvirsky@gmail.com,Thu Apr 28 12:50:55 2016 +0300,1461837055,second attempt at vector formtting,12.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2424.0,38.0,0.12856481481481485,5.0,8.778177889809147,5.0,None,False,True,"[""87de31f9687594965b2fe60c7c2fffa90a0b3fc7"", ""a00e8725604ffdc9efed550dc64bd6ea47d684e8""]"
8fc67080a2448298d13af3f7d6bbbee4bc9e64fb,87de31f9687594965b2fe60c7c2fffa90a0b3fc7,Dvir Volk,dvirsky@gmail.com,Thu Apr 28 13:10:00 2016 +0300,1461838200,fixed comment,3.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2435.0,39.0,0.013252314814814814,6.0,76.45851528384279,6.0,Corrective,True,,
87de31f9687594965b2fe60c7c2fffa90a0b3fc7,a00e8725604ffdc9efed550dc64bd6ea47d684e8,Dvir Volk,dvirsky@gmail.com,Thu Apr 28 13:12:09 2016 +0300,1461838329,another small comment fix,2.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2437.0,40.0,0.0014930555555555554,7.0,670.767441860465,7.0,Corrective,True,,
a00e8725604ffdc9efed550dc64bd6ea47d684e8,909a707b720335eff2512f7ddc094144746c4817,Ramon Snir,r@mon.co.il,Thu Apr 28 13:30:57 2016 +0300,1461839457,vector of strings is implemented now,1.0,1.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,769.0,7.0,0.7648842592592593,1.0,2.3073873437641863,1.0,None,False,,
909a707b720335eff2512f7ddc094144746c4817,d41bd233d559df1b2c00395712638fb571b6c478,Dvir Volk,dvirsky@gmail.com,Thu Apr 28 13:38:38 2016 +0300,1461839918,fixed comment formatting in RM_CreateCommand,13.0,13.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2438.0,41.0,0.018391203703703705,8.0,55.37382001258653,8.0,Corrective,True,,
d41bd233d559df1b2c00395712638fb571b6c478,3816f16a53d32e373182e662d1f38fa238a85628,Itamar Haber,itamar@redislabs.com,Mon Apr 25 01:41:29 2016 -0700,1461573689,Avoids reallocating and double String on truncate,17.0,18.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2438.0,42.0,-3.081354166666667,13.0,0.6754673608059227,11.0,None,False,,
3816f16a53d32e373182e662d1f38fa238a85628,9a71df505cd254a03c1a17e14d7d1dd3a7c77020,Dvir Volk,dvirsky@gmail.com,Fri Apr 29 18:58:09 2016 +0300,1461945489,fixed crash when calling CreateStringFromCallReply on array elements,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2437.0,43.0,4.3032407407407405,9.0,1.2323830016137711,9.0,Corrective,True,,
9a71df505cd254a03c1a17e14d7d1dd3a7c77020,6250a6b11f96926e11bbc083615e09d93488c653,antirez,antirez@gmail.com,Tue May 3 14:32:39 2016 +0200,1462278759,Modules: RM_GetClientId() implemented.,19.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.4854607607459134,13.0,1335.0,61.0,4.853344907407409,9065.5,1.1811354948489723,4570.0,None,False,,
6250a6b11f96926e11bbc083615e09d93488c653,ef2b4f64967706197c64ce95c1638f57672c678f,antirez,antirez@gmail.com,Wed May 4 16:01:49 2016 +0200,1462370509,Trailing spaces removed from moduleCreateArgvFromUserFormat().,4.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2455.0,45.0,1.0619212962962965,9067.0,1.9416893732970029,4571.0,Feature Addition,False,,
ef2b4f64967706197c64ce95c1638f57672c678f,5f977c3f8b5425ba57afaca728482c944b1986f8,antirez,antirez@gmail.com,Wed May 4 16:12:37 2016 +0200,1462371157,Modules: commandFlagsFromString() top comment back to 80 cols max.,29.0,24.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2455.0,46.0,0.0075,9068.0,134.33333333333334,4572.0,None,False,True,"[""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
5f977c3f8b5425ba57afaca728482c944b1986f8,5daece2ec6fae603742538284422ed416f021b2f,antirez,antirez@gmail.com,Tue May 10 00:38:48 2016 +0200,1462833528,RM_ZsetRangeNext()/Prev() typo in define name leading to crash fixed.,2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2460.0,47.0,5.351516203703704,9069.0,1.1868629304173488,4573.0,Corrective,True,,
3b644e82b0cc96113e29672d1551248c9e9db893,77a91442452548e901c2830c7e6b77c4e542d4bb,oranagra,oran@redislabs.com,Tue May 10 11:19:45 2016 +0300,1462868385,fix crash in BITFIELD GET when key is integer encoded,15.0,3.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1075.0,38.0,68.70783564814815,6.0,1.0145543807422632,6.0,Corrective,True,True,"[""c4433d2a6aa9deac835c1032d72622ca9d2aadc6""]"
5daece2ec6fae603742538284422ed416f021b2f,745845df0a0c5b2424122e03ac6d5783d235b849,antirez,antirez@gmail.com,Tue May 10 15:50:21 2016 +0200,1462888221,Modules doc: mention the functions not yet documented.,25.0,8.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,769.0,8.0,12.138472222222227,9070.0,1.0823826904813667,4574.0,Non Functional,False,,
745845df0a0c5b2424122e03ac6d5783d235b849,646c958bbd506839f02dbe8801275e11e2657955,antirez,antirez@gmail.com,Tue May 10 18:54:58 2016 +0200,1462899298,Modules: doc layout improved.,1475.0,575.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/modules/INTRO.md,CAS_DELIMITER,src/modules/gendoc.rb,CAS_DELIMITER",4.0,1.0,2.0,1.1204473904144936,13.0,821.0,58.0,5.220387731481481,9072.5,1.9025454745492392,4578.0,None,False,,
646c958bbd506839f02dbe8801275e11e2657955,af1e63c36564ea935d13da22522523b064fe5906,Michiel De Mey,de.mey.michiel@gmail.com,Fri May 13 11:47:55 2016 +0200,1463132875,"Allow non-interactive execution of install_serverThis PR adds the ability to execute the installation script non-interactively, useful for automated provisioning scripts such as Chef, Puppet, Ansible, Salt, etc.rnSimply feed the environment variables into the install script to skip the prompts.rnrnFor debug and verification purposes, the script will still output the selected config variables.rnThe plus side is that the environment variables also support command substitution (see REDIS_EXECUTABLE).rnrn```rnsudo REDIS_PORT=1234 REDIS_CONFIG_FILE=/etc/redis/1234.conf REDIS_LOG_FILE=/var/log/redis_1234.log REDIS_DATA_DIR=/var/lib/redis/1234 REDIS_EXECUTABLE=`command -v redis-server` ./utils/install_server.shrnrnWelcome to the redis service installerrnThis script will help you easily set up a running redis serverrnrnSelected config:rnPort   : 1234rnConfig file: /etc/redis/1234.confrnLog file   : /var/log/redis_1234.logrnData dir   : /var/lib/redis/1234rnExecutable : /usr/local/bin/redis-serverrnCli Executable : /usr/local/bin/redis-clirnCopied /tmp/1234.conf => /etc/init.d/redis_1234rnInstalling service...rnSuccessfully added to chkconfig!rnSuccessfully added to runlevels 345!rnStarting Redis server...rnInstallation successful!rn```",45.0,28.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,245.0,17.0,638.6777546296296,0.0,0.0,0.0,Corrective,True,,
646c958bbd506839f02dbe8801275e11e2657955,9aff5640459ac2b882a1619dd0630460c6a6b0c0,antirez,antirez@gmail.com,Sat May 14 19:41:58 2016 +0200,1463247718,Modules: initial pool allocator and a LEFTPAD usage example.,147.0,4.0,"src/module.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.0487197673738506,13.0,1071.0,80.0,10.770547839506174,9076.0,1.1087752130299642,4581.0,None,False,,
9aff5640459ac2b882a1619dd0630460c6a6b0c0,283a8125cb85524ce6df6ac9b4edbda23124d95d,oranagra,oran@redislabs.com,Mon May 16 20:12:11 2016 +0300,1463418731,reduce struct padding by reordering members,1.0,1.0,"src/quicklist.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,169.0,3.0,522.6150462962963,7.0,1.0019134542854953,7.0,Feature Addition,False,,
9aff5640459ac2b882a1619dd0630460c6a6b0c0 283a8125cb85524ce6df6ac9b4edbda23124d95d,b1b1f4e8e8078c06c7fc21a48032cc7e8d50f279,Salvatore Sanfilippo,antirez@gmail.com,Tue May 17 00:49:11 2016 -0700,1463471351,Merge pull request #3238 from oranagra/struct_fixreduce struct padding by reordering members,,,,,,,,,,,,,,,Merge,False,,
9aff5640459ac2b882a1619dd0630460c6a6b0c0,cfaef8d5d494dc199117cb7a6841dfbdc43dd22e,Dvir Volk,dvirsky@gmail.com,Tue May 17 16:47:36 2016 +0300,1463492856,fixed bad transfer of ownership in HashSet causing a potential crash,7.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2544.0,50.0,2.83724537037037,10.0,1.352454535812481,10.0,Corrective,True,,
b1b1f4e8e8078c06c7fc21a48032cc7e8d50f279,0f36e5e5d8031496a07cde241d2c932d1e73ea38,whatacold,whatacold@gmail.com,Wed May 18 16:39:52 2016 +0800,1463560792,fix the wrong description of intsetGet().,1.0,1.0,"src/intset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,98.0,14.0,462.44490740740736,0.0,0.0,0.0,Corrective,True,,
9aff5640459ac2b882a1619dd0630460c6a6b0c0,968e838417acaa14570b870d992c0e795ee14eeb,antirez,antirez@gmail.com,Wed May 18 11:58:36 2016 +0200,1463565516,"Actually use --with-lg-quantum=3 to build jemalloc.This change is documented in deps/README.md but was lost in one way ornthe other, neutralizing the benefits of 24 bytes size classes (andnothers).nnClose #3208.n",1.0,1.0,"deps/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,90.0,8.0,736.6391087962962,9078.0,1.0013575168465247,894.0,Non Functional,False,,
968e838417acaa14570b870d992c0e795ee14eeb b1b1f4e8e8078c06c7fc21a48032cc7e8d50f279,c6c86ea05df9cd4681718578560107ba16db3680,antirez,antirez@gmail.com,Wed May 18 11:59:37 2016 +0200,1463565577,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
c6c86ea05df9cd4681718578560107ba16db3680,078f46126cb7a0549f2cc5b5d7f76d1d8edc8a80,antirez,antirez@gmail.com,Wed May 18 14:53:30 2016 +0200,1463576010,Test for BITFIELD regression #3221.,5.0,0.0,"tests/unit/bitfield.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,187.0,3.0,76.85472222222222,9079.0,1.0130115622187603,691.0,Preventative,False,,
078f46126cb7a0549f2cc5b5d7f76d1d8edc8a80 77a91442452548e901c2830c7e6b77c4e542d4bb,4c9c9d726aab135a3eb9cf6f7b1718c408386c33,Salvatore Sanfilippo,antirez@gmail.com,Wed May 18 05:53:53 2016 -0700,1463576033,Merge pull request #3221 from oranagra/bitfield_fixfix crash in BITFIELD GET when key is integer encoded,,,,,,,,,,,,,,,Merge,False,,
4c9c9d726aab135a3eb9cf6f7b1718c408386c33,ffd1600ccfce01526d4b4be578b1e3bf3e851433,antirez,antirez@gmail.com,Wed May 18 15:23:18 2016 +0200,1463577798,Clarify that the LOG_STR_SIZE includes null term.,1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1749.0,67.0,20.884571759259263,9080.0,1.0478822362999445,4582.0,None,False,,
ffd1600ccfce01526d4b4be578b1e3bf3e851433,bee963c4459223d874e3294a0d8638a588d33c8e,antirez,antirez@gmail.com,Wed May 18 15:35:17 2016 +0200,1463578517,Code to access object string bytes repeated 3x refactored into 1 function.,39.0,35.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1087.0,39.0,8.219120370370371,9081.0,1.1216675209679328,4583.0,None,False,True,"[""c4433d2a6aa9deac835c1032d72622ca9d2aadc6""]"
bee963c4459223d874e3294a0d8638a588d33c8e cfaef8d5d494dc199117cb7a6841dfbdc43dd22e,01a83d0a2ae1450118b2230d47c613bb9fc07952,Salvatore Sanfilippo,antirez@gmail.com,Wed May 18 07:15:15 2016 -0700,1463580915,Merge pull request #3239 from dvirsky/fix_hashset_crashfixed bad transfer of ownership in HashSet causing a potential crash,,,,,,,,,,,,,,,Merge,False,,
01a83d0a2ae1450118b2230d47c613bb9fc07952,e3edae957b7c4d5f1194828bf342397bc9fa6515,antirez,antirez@gmail.com,Wed May 18 16:17:46 2016 +0200,1463581066,Modules: RM_HashSet() SDS ownership business clarified in comments.Related to #3239.n,5.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2547.0,51.0,1.020949074074074,9082.0,1.9794807844915536,4584.0,None,False,,
e3edae957b7c4d5f1194828bf342397bc9fa6515 9682b616a21b5e675a1ca82109a11d6f4de1d2de,bafed3ddd65eb1537a9239111777563ed5e3edcf,Salvatore Sanfilippo,antirez@gmail.com,Wed May 18 07:50:53 2016 -0700,1463583053,"Merge pull request #3222 from oranagra/more_minir_fixesminor fixes - mainly signalModifiedKey, and GEORADIUS",,,,,,,,,,,,,,,Merge,False,,
bafed3ddd65eb1537a9239111777563ed5e3edcf,b09a6b6a5d7c7c2de81325b3c1ab687536059009,antirez,antirez@gmail.com,Wed May 18 17:48:06 2016 +0200,1463586486,"Fix modules compilation when libc malloc is used.Compiling Redis worked as a side effect of jemalloc target specifyingn-ldl as needed linker options, otherwise it is not provided duringnlinking and dlopen() API will remain unresolved symbols.n",2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,260.0,128.0,73.12756944444446,9083.0,1.013674733176517,4585.0,Corrective,True,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009,46b07cbb5c52a6a9321ab8c2134d3c6be9ddae86,Dvir Volk,dvirsky@gmail.com,Thu May 19 12:16:14 2016 +0300,1463649374,Optimized autoMemoryFreed loop,4.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2547.0,52.0,0.7906018518518518,11.0,2.2648591673010485,11.0,None,False,,
46b07cbb5c52a6a9321ab8c2134d3c6be9ddae86,137fd86a6133b4a83c2a95215241c9906ec6877f,Dvir Volk,dvirsky@gmail.com,Thu May 19 13:51:55 2016 +0300,1463655115,optimized amFree even further,9.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2550.0,53.0,0.06644675925925926,12.0,16.049642919352028,12.0,None,False,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009,892565f924c53ead19f90afc5f652d20ca6e69c8,Jan-Erik Rediger,janerik@fnordig.de,Sat May 21 13:50:01 2016 +0200,1463831401,Remove debug printing,0.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2697.0,172.0,14.032361111111117,32.0,1.0712638444864548,18.0,Corrective,True,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009,5fa711fa3749eb2605ff02e1dd08d62e3fc56f0e,oranagra,oran@redislabs.com,Sun May 22 20:35:14 2016 +0300,1463938514,"config set list-max-ziplist-size didn't support negative values, unlike config file",3.0,3.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1967.0,187.0,77.2019675925926,8.0,1.0129530377422136,8.0,None,False,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009 892565f924c53ead19f90afc5f652d20ca6e69c8,8c4f4d12d856e57534277c1737d7cb07890bbe63,Salvatore Sanfilippo,antirez@gmail.com,Sun May 22 23:32:03 2016 +0200,1463952723,Merge pull request #3249 from badboy/rcli-debug-printingRemove debug printing,,,,,,,,,,,,,,,Merge,False,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009,8d9d8d16e4216207f4c58d4c41bb33f8eea399ff,oranagra,oran@redislabs.com,Mon May 23 11:42:21 2016 +0300,1463992941,CLIENT error message was out of date,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1911.0,250.0,77.83190972222222,9.0,1.0128482007388608,9.0,None,False,,
b09a6b6a5d7c7c2de81325b3c1ab687536059009,f3e81de17688e310b7a5ef5108a3a6c8962eb133,oranagra,oran@redislabs.com,Mon May 23 13:58:50 2016 +0300,1464001130,fix georadius returns multiple replies,5.0,2.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,776.0,47.0,14.19875,10.0,1.070428734923849,10.0,Corrective,True,,
8c4f4d12d856e57534277c1737d7cb07890bbe63,c4433d2a6aa9deac835c1032d72622ca9d2aadc6,oranagra,oran@redislabs.com,Tue May 24 14:52:43 2016 +0300,1464090763,fix crash in BITFIELD GET on non existing key or wrong type see #3259this was a bug in the recent refactoring: bee963c4459223d874e3294a0d8638a588d33c8en,5.0,3.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1091.0,40.0,5.9287731481481485,11.0,1.1686689598357038,11.0,Corrective,True,True,"[""5d96b7ed4ffc1b90195fd4074ead331236e8e28f""]"
c4433d2a6aa9deac835c1032d72622ca9d2aadc6,5d96b7ed4ffc1b90195fd4074ead331236e8e28f,oranagra,oran@redislabs.com,Tue May 24 23:31:36 2016 +0300,1464121896,"check WRONGTYPE in BITFIELD before looping on the operations.optimization: lookup key only once, and grow at once to the max neednfixes #3259 and #3221, and also an early return if wrongtype is discovered by SETn",18.0,9.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1093.0,41.0,0.36033564814814817,12.0,3.7751903125301127,12.0,Corrective,True,True,"[""2f2fd64c0db00b82e6c336d0ee9e19d50a3aad5f"", ""d490752d58ecd0a815bdbbb350b550919fcc7a4a""]"
8c4f4d12d856e57534277c1737d7cb07890bbe63,aa578446bacd9b6565f40e7daf9eb14d3a6f6edd,MOON_CLJ,lijunli2598@gmail.com,Thu May 26 13:10:12 2016 +0800,1464239412,fix check when can't send the command to the promoted slave,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4322.0,222.0,119.57109953703704,1.0,1.0083632249253531,1.0,Corrective,True,,
8c4f4d12d856e57534277c1737d7cb07890bbe63,2866e023f84edcdb8adfc386a849d7b383b669c3,Itamar Haber,itamar@redislabs.com,Sat May 28 20:01:46 2016 +0300,1464454906,Allow SPOP from Lua scriptsThe existing `R` flag appears to be sufficient and there's no apparent reason why the command should be blocked.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4149.0,67.0,31.036284722222234,14.0,1.0322203514032076,12.0,None,False,,
8c4f4d12d856e57534277c1737d7cb07890bbe63,3432061cbb9adc5e5dff5d556195031ae54929c2,jamespedwards42,james.p.edwards42@gmail.com,Sun May 29 15:53:24 2016 -0700,1464562404,Fix modules intro typos.,3.0,4.0,"src/modules/INTRO.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,786.0,1.0,19.248912037037037,0.0,0.0,0.0,Corrective,True,,
8c4f4d12d856e57534277c1737d7cb07890bbe63,41dacdbcbefb7e90e78caf695db808833d652c8a,wenduo,hrxwwd@163.com,Mon May 30 16:21:08 2016 +0800,1464596468,bitcount bug:return non-zero value when start > end (both negative),4.0,0.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1102.0,42.0,5.492731481481481,0.0,0.0,0.0,Corrective,True,True,"[""eb45e114965175e766136d6e0d8fbe242bc256b1""]"
8c4f4d12d856e57534277c1737d7cb07890bbe63,40671320928502b9e798d67e6246ba0c8c6e8a24,ideal,idealities@gmail.com,Mon May 30 16:57:36 2016 +0800,1464598656,fix mistake comment in object.c,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,714.0,79.0,250.05848379629631,0.0,0.0,0.0,Corrective,True,,
bafed3ddd65eb1537a9239111777563ed5e3edcf,4eff3dc4e4a7ee4b45347789e8921fce31848cdb,antirez,antirez@gmail.com,Mon May 30 12:45:49 2016 +0200,1464605149,Fix GEORADIUS wrong output with radius > Earth radius.Close #3266n,2.0,0.0,"deps/geohash-int/geohash_helper.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,195.0,6.0,335.8415162037037,9084.0,1.0029775949421138,895.0,Corrective,True,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
4eff3dc4e4a7ee4b45347789e8921fce31848cdb 8c4f4d12d856e57534277c1737d7cb07890bbe63,18a513f86d5cd53350c988780b409d37fa438834,antirez,antirez@gmail.com,Mon May 30 12:47:28 2016 +0200,1464605248,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
18a513f86d5cd53350c988780b409d37fa438834,5d4b5fbd6f0105bfac6ec97e29f1f6f142a0b1ac,antirez,antirez@gmail.com,Mon May 30 15:31:19 2016 +0200,1464615079,"Geo: fix typo in geohashEstimateStepsByRadius().I'm the author of this line but I can't see a good reason for it tondon't be a typo, a step of 26 should be valid with 52 bits perncoordinate, moreover the line was:nnif (step > 26) step = 25;nnSo a step of 26 was actually already used, except when one of 27 wasncomputed (which is invalid) only then it was trimmed to 25 instead ofn26.nnAll tests passing after the change.n",1.0,1.0,"deps/geohash-int/geohash_helper.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,197.0,7.0,0.11493055555555555,9085.0,9.700906344410877,896.0,None,False,True,"[""eaa713e93b6aadf08fda33238670cd3577a7db52""]"
5d4b5fbd6f0105bfac6ec97e29f1f6f142a0b1ac 2866e023f84edcdb8adfc386a849d7b383b669c3,9200312ab64d65a908709dc5dfb0dd1431733b21,Salvatore Sanfilippo,antirez@gmail.com,Mon May 30 17:47:23 2016 +0200,1464623243,Merge pull request #3278 from itamarhaber/patch-8Allow SPOP from Lua scripts,,,,,,,,,,,,,,,Merge,False,,
9200312ab64d65a908709dc5dfb0dd1431733b21,2503acfc83753e78045346c4b4993d5d34cf57d2,antirez,antirez@gmail.com,Tue May 31 11:52:07 2016 +0200,1464688327,"Avoid undefined behavior in BITFIELD implementation.Probably there is no compiler that will actaully break the code or raisena signal for unsigned -> signed overflowing conversion, still it wasnapparently possible to write it in a more correct way.nnAll tests passing.n",15.0,8.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1106.0,43.0,1.0631828703703703,9086.0,1.9405719635528365,4586.0,Preventative,False,,
2503acfc83753e78045346c4b4993d5d34cf57d2,231c9db1b512b491c0082f503df066daac006027,antirez,antirez@gmail.com,Tue May 31 16:43:21 2016 +0200,1464705801,Now that SPOP can be called by scripts use BLPOP on 's' flag test.,1.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,735.0,49.0,25.31278935185185,9087.0,1.0395057212423269,692.0,Preventative,False,,
231c9db1b512b491c0082f503df066daac006027,b64fcbc74c93d45ec1ab46909be9145dd261373f,antirez,antirez@gmail.com,Tue May 31 16:43:49 2016 +0200,1464705829,Test: run GEO tests by default.Thanks to @oranagra for noticing it was missing.n,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,559.0,98.0,90.01980324074074,9088.0,1.0111086668044107,693.0,Preventative,False,,
b64fcbc74c93d45ec1ab46909be9145dd261373f,4aae4f7d3526320aad0e7bcaf071d85910d933b6,antirez,antirez@gmail.com,Wed Jun 1 11:35:47 2016 +0200,1464773747,RDB v8: ability to save uint64_t lengths.,34.0,44.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.5623174742705301,13.0,1189.6666666666667,252.0,120.2482175925926,9090.0,1.0109370905280208,4589.0,None,False,,
4aae4f7d3526320aad0e7bcaf071d85910d933b6,e6554bed92d7468fd42e525b04a0169af158c957,antirez,antirez@gmail.com,Wed Jun 1 11:55:47 2016 +0200,1464774947,RDB v8: new ZSET storage format with binary doubles.,27.0,5.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.4488644887230294,13.0,918.5,186.0,0.013888888888888888,9092.5,55.0,4591.0,None,False,,
e6554bed92d7468fd42e525b04a0169af158c957,27e5f385c1839157574b80f2079d79bf40e32639,antirez,antirez@gmail.com,Wed Jun 1 20:18:28 2016 +0200,1464805108,RDB v8: fix rdbLoadLen() return value.,61.0,36.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",3.0,1.0,1.0,1.106594202606192,13.0,856.3333333333335,195.0,103.71343364197531,9095.0,2.4333845802678344,4594.0,None,False,True,"[""188d90fc87002cdf89f1ce3b359a24edad39fa46""]"
27e5f385c1839157574b80f2079d79bf40e32639,8ec28002be78ee890211265bef4f0b1207627fb4,antirez,antirez@gmail.com,Wed May 18 11:45:40 2016 +0200,1463564740,Modules: support for modules native data types.,991.0,35.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/hellotype.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",11.0,1.0,2.0,2.190815671250168,13.0,920.7272727272727,747.0,5.654387626262628,9102.0,1.018985576093797,4605.0,None,False,True,"[""87312ff7810a67d6ef6ff38745242dab128aa95b"", ""188d90fc87002cdf89f1ce3b359a24edad39fa46"", ""5831dd860a5a355d242eb32da2e95aa93451d896"", ""f86df924b01db43eb68f5c4b4cac4c44c1507390"", ""365dd037dcc00249c7631caac82c49a9c0c8c0f6"", ""b1c2e1a19c549a49cc124571849976e7ab91d4d1"", ""60a4f12f8b998c44dfff0e88202b01598287390d"", ""3b0f0086156e79e0c7e13c8e7118799b9b40dd08"", ""d7d028a7a72388cf3908a5f40c8188e68a447dee"", ""cc8f06ece996238111150f6730d8339e3603b5ff""]"
8ec28002be78ee890211265bef4f0b1207627fb4,31eb8eccef2b68d509eccbc45ef3cf052d64aa57,antirez,antirez@gmail.com,Fri Jun 3 18:19:25 2016 +0200,1464970765,Modules: top comments in helloworld.c and hellotype.c.,74.0,0.0,"src/modules/hellotype.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER",2.0,1.0,1.0,0.9994730201859836,13.0,398.5,15.0,18.10805555555556,9108.5,1.0445309262030054,4607.0,None,False,,
31eb8eccef2b68d509eccbc45ef3cf052d64aa57,5830d8821b81532a958efbe3737ad46c29a8cfde,antirez,antirez@gmail.com,Fri Jun 3 18:32:32 2016 +0200,1464971552,Modules: pool allocator doc.,53.0,1.0,"src/modules/INTRO.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,785.0,2.0,4.735509259259259,9110.0,1.2111705299793718,4608.0,None,False,,
5830d8821b81532a958efbe3737ad46c29a8cfde,c3f5b6ebf9dc8a1c90bf2a13e617d558e75269fd,antirez,antirez@gmail.com,Sat Jun 4 12:54:18 2016 +0200,1465037658,"Modules: native types doc, 70% done.",305.0,0.0,"src/modules/TYPES.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9111.0,0.0,4609.0,None,False,,
c3f5b6ebf9dc8a1c90bf2a13e617d558e75269fd,550fa7e14fd1a5402fc6daace9c7026aca028091,antirez,antirez@gmail.com,Sat Jun 4 12:55:39 2016 +0200,1465037739,modules API.md updated.,232.0,10.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,895.0,10.0,24.75047453703704,9112.0,1.0404032657435955,4610.0,None,False,,
550fa7e14fd1a5402fc6daace9c7026aca028091,2bd13cf0eb9b2369ade0ec495a2d9e2c2a3be680,Yossi Gottlieb,yossigo@gmail.com,Sun Jun 5 10:03:34 2016 +0300,1465110214,Allow passing arguments to modules on load.,46.0,13.0,"src/config.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3663616103149376,13.0,2277.6666666666665,313.0,16.4454012345679,8.0,1.0419352818147825,8.0,None,False,,
2bd13cf0eb9b2369ade0ec495a2d9e2c2a3be680,cc58f11ccc295cbe6b96eb47e4c01627ca718252,Yossi Gottlieb,yossigo@gmail.com,Sun Jun 5 13:18:24 2016 +0300,1465121904,Use RedisModuleString for OnLoad argv.,5.0,11.0,"src/config.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2987949406953985,13.0,2288.6666666666665,316.0,0.13530092592592596,11.0,5.516680923866552,11.0,None,False,,
550fa7e14fd1a5402fc6daace9c7026aca028091,87312ff7810a67d6ef6ff38745242dab128aa95b,Yossi Gottlieb,yossigo@gmail.com,Sun Jun 5 13:27:38 2016 +0300,1465122458,Fix MODULE UNLOAD crash and/or wrong error message.,14.0,7.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3064.0,57.0,0.0064120370370370355,13.0,156.956678700361,12.0,Corrective,True,,
550fa7e14fd1a5402fc6daace9c7026aca028091,188d90fc87002cdf89f1ce3b359a24edad39fa46,Pierre Chapuis,catwell-github@catwell.info,Sun Jun 5 15:34:43 2016 +0200,1465133683,fix some compiler warnings,17.0,10.0,"src/bitops.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",3.0,1.0,1.0,0.9682702474096179,13.0,1209.3333333333333,220.0,9.038865740740741,5.0,1.0912577397458565,4.0,Corrective,True,,
550fa7e14fd1a5402fc6daace9c7026aca028091,3e9c20f63b9649bf2a8ddce8f4743c7fb5d435b4,Pierre Chapuis,catwell-github@catwell.info,Sun Jun 5 16:06:22 2016 +0200,1465135582,"untangle LINSERT and {L,R}PUSHX implementations",45.0,40.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,962.0,70.0,123.83892361111113,7.0,1.0080750055866141,5.0,None,False,,
3e9c20f63b9649bf2a8ddce8f4743c7fb5d435b4,b670a1628263cd2655e70ee5c9c947f49fc94647,Pierre Chapuis,catwell-github@catwell.info,Sun Jun 5 16:09:55 2016 +0200,1465135795,remove unused variable,2.0,2.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,967.0,71.0,0.0024652777777777767,8.0,406.6338028169015,6.0,None,False,,
b670a1628263cd2655e70ee5c9c947f49fc94647,d88c3c77beb975c84c23b7586ed6984b4c74b82d,Pierre Chapuis,catwell-github@catwell.info,Sun Jun 5 16:22:52 2016 +0200,1465136572,make RPUSHX and LPUSHX variadic,18.0,9.0,"src/server.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,tests/unit/type/list.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.1730125852957602,13.0,1984.666666666667,180.0,89.2490162037037,10.0,1.085695712921475,8.0,None,False,,
550fa7e14fd1a5402fc6daace9c7026aca028091,90a3647c9c3d1657c2d2d1d3ff9413789fc43c29,Saurabh Jha,saurabh.jhaa@gmail.com,Sun Nov 15 20:03:18 2015 +0530,1447597998,Fix typos in documentation,15.0,16.0,"CONTRIBUTING,CAS_DELIMITER,README.md,CAS_DELIMITER",2.0,1.0,1.0,0.5547781633412736,8.0,242.5,28.0,-73.97869212962964,0.5,0.4966206485569935,1.0,Corrective,True,,
90a3647c9c3d1657c2d2d1d3ff9413789fc43c29,0f10b16202ccdd1e0c176f790d0b4e70bc9598fb,Saurabh Jha,saurabh.jhaa@gmail.com,Wed Nov 18 22:38:53 2015 +0530,1447866533,Address grammatical comments,2.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,20.0,3.1080439814814813,2.0,1.3217457687079897,2.0,Feature Addition,False,,
0f10b16202ccdd1e0c176f790d0b4e70bc9598fb,61717ac0951d825084c9261d509161d947fe4603,Saurabh Jha,saurabh.jhaa@gmail.com,Thu Nov 26 18:36:35 2015 +0530,1448543195,More edits to README,15.0,15.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,21.0,7.831736111111113,3.0,1.1276856096544507,3.0,None,False,,
61717ac0951d825084c9261d509161d947fe4603,319b1263ecf4e0f41e848e3e88ea1576d2470d3e,Saurabh Jha,saurabh.jhaa@gmail.com,Thu Jan 21 16:57:36 2016 +0530,1453375656,Fixup,8.0,8.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,22.0,55.93126157407407,4.0,1.0178790889362583,4.0,Corrective,True,,
550fa7e14fd1a5402fc6daace9c7026aca028091,2fd6ca3cf8912ce76a743c7a3bdce31ae5cfb0e7,Yossi Gottlieb,yossigo@gmail.com,Tue Jun 7 13:31:33 2016 +0300,1465295493,Remove gcc warning when redismodule.h is included by a multi-file module.,1.0,0.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,284.0,20.0,20.031863425925923,14.0,1.0499204681430567,13.0,None,False,,
550fa7e14fd1a5402fc6daace9c7026aca028091 2fd6ca3cf8912ce76a743c7a3bdce31ae5cfb0e7,30c1a8570bbced4f21e0ba59146694fa006b83c0,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 7 17:20:46 2016 +0200,1465312846,Merge pull request #3301 from yossigo/fix_unused_warningRemove gcc warning when redismodule.h is included by a multi-file module.,,,,,,,,,,,,,,,Merge,False,,
30c1a8570bbced4f21e0ba59146694fa006b83c0,4df95e8419f8c8b1e1bbb451b3710056b6707fec,jspraul,jspraul@yahoo.com,Tue Jun 7 16:46:00 2016 -0400,1465332360,Include 'fd_set' type nameFix an MSYS2-build-breaking error: unknown type name u00e2u0080u0098fd_setu00e2u0080u0099,1.0,0.0,"src/ae_select.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,105.0,3.0,1075.2542939814814,0.0,0.0,0.0,Corrective,True,,
550fa7e14fd1a5402fc6daace9c7026aca028091,b664aebda176ae8ac7e1a5284370164a89348b2d,antirez,antirez@gmail.com,Wed Jun 8 16:07:32 2016 +0200,1465394852,Improve timer callback creation comment.,3.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4149.0,69.0,2.989351851851852,9113.0,1.3345206752361778,4611.0,None,False,,
30c1a8570bbced4f21e0ba59146694fa006b83c0 4df95e8419f8c8b1e1bbb451b3710056b6707fec,53c008a78591fbca6dcac9faf82e61eb784e42f1,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 08:59:50 2016 +0200,1465541990,Merge pull request #3303 from jspraul/patch-1Include select.h to fix unknown type name 'fd_set' compile error in ae_select (MSYS2),,,,,,,,,,,,,,,Merge,False,,
b664aebda176ae8ac7e1a5284370164a89348b2d 53c008a78591fbca6dcac9faf82e61eb784e42f1,54813368729009fb599701565036bf2dd89fcfd4,antirez,antirez@gmail.com,Fri Jun 10 09:00:02 2016 +0200,1465542002,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
53c008a78591fbca6dcac9faf82e61eb784e42f1 5565cc629edcbed650a49444c79340153758824f,bac4de7d1b7d7b59cc00d10d7ce93cf2816567ad,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 09:02:06 2016 +0200,1465542126,Merge pull request #3180 from bogdanvlviv/fix_pidfilefix pidfile in redis.conf,,,,,,,,,,,,,,,Merge,False,,
54813368729009fb599701565036bf2dd89fcfd4 bac4de7d1b7d7b59cc00d10d7ce93cf2816567ad,67fcd26cf361c89a9bfbab88467af6d037f6ef97,antirez,antirez@gmail.com,Fri Jun 10 09:02:13 2016 +0200,1465542133,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
bac4de7d1b7d7b59cc00d10d7ce93cf2816567ad 319b1263ecf4e0f41e848e3e88ea1576d2470d3e,01a34b191e4be30107bae00ab113a31d32193555,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 09:07:42 2016 +0200,1465542462,Merge pull request #2870 from SaurabhJha/documenation-fixesDocumentation fixes,,,,,,,,,,,,,,,Merge,False,,
67fcd26cf361c89a9bfbab88467af6d037f6ef97 01a34b191e4be30107bae00ab113a31d32193555,243c9dc151091b19f6019643e2e46c580cc9eaf9,antirez,antirez@gmail.com,Fri Jun 10 09:08:11 2016 +0200,1465542491,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
243c9dc151091b19f6019643e2e46c580cc9eaf9,2a57ad5d90e38969e8b821a4d44b75cf8ceb3aca,antirez,antirez@gmail.com,Fri Jun 10 09:15:01 2016 +0200,1465542901,Fixed typo in Sentinel compareSlavesForPromotion() comment.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4322.0,223.0,15.08667824074074,9114.0,1.0662836433602432,4612.0,Corrective,True,,
2a57ad5d90e38969e8b821a4d44b75cf8ceb3aca,93a09877fe9295206b48febd6520fef02f92e1b3,andyli,zhiangli029@gmail.com,Tue Jun 7 14:42:50 2016 +0800,1465281770,fix comment b>a to a > b,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4322.0,224.0,-3.022349537037037,0.0,0.0,0.0,Corrective,True,,
01a34b191e4be30107bae00ab113a31d32193555 d88c3c77beb975c84c23b7586ed6984b4c74b82d,ab73544396de1ba9ca7ef6b065517c9411a1a1bf,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 10:10:08 2016 +0200,1465546208,Merge pull request #3296 from catwell/pr-2-variadic-pushxmake RPUSHX and LPUSHX variadic,,,,,,,,,,,,,,,Merge,False,,
af1e63c36564ea935d13da22522523b064fe5906,90781dec56d01a779f55ad16484e69813c2a4f7c,Michiel De Mey,de.mey.michiel@gmail.com,Fri Jun 10 10:11:46 2016 +0200,1465546306,Added documentation for non-interactive install procedure,19.0,3.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,262.0,18.0,27.93322916666667,1.0,1.0357996561741354,1.0,Feature Addition,False,,
93a09877fe9295206b48febd6520fef02f92e1b3 ab73544396de1ba9ca7ef6b065517c9411a1a1bf,5beec9743e5e926375705ebb730500a56510a1e5,antirez,antirez@gmail.com,Fri Jun 10 10:12:11 2016 +0200,1465546331,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
5beec9743e5e926375705ebb730500a56510a1e5,a1684ff1bbd9b6023f16ad697ab12e29a987e6b8,antirez,antirez@gmail.com,Fri Jun 10 10:15:37 2016 +0200,1465546537,"Remove tryObjectEncoding() calls from list type.All lists are now represented via quicklists.nQuicklists are never represented referencing robj structures, so tryingnto compress their representation does not make sense. That the new waynis faster was experimentally verified with micro benchmarks in order tonprove that the intuition was correct.n",0.0,3.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,974.0,73.0,4.744965277777778,9115.0,1.2107496981449637,4613.0,Feature Addition,False,,
a1684ff1bbd9b6023f16ad697ab12e29a987e6b8 87312ff7810a67d6ef6ff38745242dab128aa95b,b4327ae5fe3c749d1f2918c18297a91008f0a0ee,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 10:18:49 2016 +0200,1465546729,Merge pull request #3294 from yossigo/fix_unloadFix MODULE UNLOAD crash and/or wrong error message.,,,,,,,,,,,,,,,Merge,False,,
b4327ae5fe3c749d1f2918c18297a91008f0a0ee 188d90fc87002cdf89f1ce3b359a24edad39fa46,688996f415e6c0d4ea4ff9a4af25608cd5599d4a,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 10 10:20:28 2016 +0200,1465546828,Merge pull request #3295 from catwell/pr-1-warningsfix some compiler warnings,,,,,,,,,,,,,,,Merge,False,,
688996f415e6c0d4ea4ff9a4af25608cd5599d4a,e4567f243bedd41188d8502e80a257f474f479dd,antirez,antirez@gmail.com,Fri Jun 10 10:36:09 2016 +0200,1465547769,Explain why module type names are 9 chars.,52.0,0.0,"src/modules/TYPES.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,305.0,1.0,5.9040625,9116.0,1.169374900756894,4614.0,None,False,,
e4567f243bedd41188d8502e80a257f474f479dd,e71f22f5f2cfa64cd5fceb7b98cc1c2ffa8b28a0,antirez,antirez@gmail.com,Fri Jun 10 10:39:38 2016 +0200,1465547978,Fix typo: after -> before.,1.0,1.0,"src/modules/TYPES.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,357.0,2.0,0.0024189814814814816,9117.0,414.39712918660285,4615.0,Corrective,True,,
e71f22f5f2cfa64cd5fceb7b98cc1c2ffa8b28a0 cc58f11ccc295cbe6b96eb47e4c01627ca718252,e8d5387a44bce6aee9f11b39064b547201dc1ee4,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 13 09:31:59 2016 +0200,1465803119,Merge pull request #3293 from yossigo/module_configAllow passing arguments to modules on load.,,,,,,,,,,,,,,,Merge,False,,
e8d5387a44bce6aee9f11b39064b547201dc1ee4,1ad5c2276323c11864c4cdc3990aeb8a1593cb71,antirez,antirez@gmail.com,Mon Jun 13 09:39:44 2016 +0200,1465803584,Minor changes to unifor C style to Redis code base for PR #3293.,8.0,6.0,"src/config.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.448815635725185,13.0,2289.0,320.0,7.887677469135803,9119.0,1.0774681010782274,4618.0,None,False,,
1ad5c2276323c11864c4cdc3990aeb8a1593cb71,b6cd0085084af91f156fcd190e3fdb024dcc8a0a,antirez,antirez@gmail.com,Mon Jun 13 09:40:28 2016 +0200,1465803628,Make sure modules arguments are raw strings.Related to PR #3293.n,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1980.0,191.0,0.0005092592592592592,9121.0,1964.6363636363642,4619.0,None,False,,
b6cd0085084af91f156fcd190e3fdb024dcc8a0a,9a02dac2e8fa209f68b8e487313892cdd11c21a0,antirez,antirez@gmail.com,Mon Jun 13 09:45:53 2016 +0200,1465803953,"Free module context after loading.Now that modules receive RedisModuleString objects on loading, they arenallowed to call the String API, so the context must be releasedncorrectly.nnRelated to #3293.n",1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3073.0,59.0,0.004270833333333333,9122.0,235.14634146341461,4620.0,None,False,,
9a02dac2e8fa209f68b8e487313892cdd11c21a0,a4bce77e920be0a0140ac81d2cbc79e2ed88eefb,antirez,antirez@gmail.com,Mon Jun 13 09:51:06 2016 +0200,1465804266,Don't assume no padding or specific ordering in moduleLoadQueueEntry structure.We need to be free to shuffle fields or add more fields in a structurenwithout breaking code.nnRelated to issue #3293.n,4.0,3.0,"src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,13.0,1898.0,265.0,0.00763888888888889,9123.5,101.43887147335423,4622.0,Feature Addition,False,,
a4bce77e920be0a0140ac81d2cbc79e2ed88eefb,5831dd860a5a355d242eb32da2e95aa93451d896,antirez,antirez@gmail.com,Mon Jun 13 09:57:10 2016 +0200,1465804630,Fix example modules to have the right OnLoad() prototype.Related to #3293.n,8.0,2.0,"src/modules/hellotype.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,13.0,435.5,17.0,9.651215277777778,9125.5,1.0777104207515604,4624.0,Corrective,True,,
5831dd860a5a355d242eb32da2e95aa93451d896,5ba9bdec75292434b7b062cc8e7f0ae1e9b9fce4,antirez,antirez@gmail.com,Mon Jun 13 10:05:23 2016 +0200,1465805123,Modules: document how to pass config params to modules.Related to #3293.n,19.0,1.0,"src/modules/INTRO.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,837.0,3.0,9.6478125,9127.0,1.1036504388948272,4625.0,None,False,,
5ba9bdec75292434b7b062cc8e7f0ae1e9b9fce4,c6e3ce38ceaebac7ea801619958e51d24fbf97d7,antirez,antirez@gmail.com,Mon Jun 13 12:03:14 2016 +0200,1465812194,Enable tcp-keepalive by default.,3.0,2.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1114.0,165.0,98.88807870370373,9128.0,1.0101124424006285,1383.0,None,False,,
c6e3ce38ceaebac7ea801619958e51d24fbf97d7,cd8e6882264bc509520a47f86143e6a88bfd158f,antirez,antirez@gmail.com,Tue Jun 14 14:45:28 2016 +0200,1465908328,redis-cli help.h updated.,13.0,8.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1042.0,13.0,62.09043981481482,9129.0,1.016105539000569,4626.0,None,False,,
cd8e6882264bc509520a47f86143e6a88bfd158f,41d804d9dc48292f61fc1e1efd2241404dc9a6e8,antirez,antirez@gmail.com,Tue Jun 14 15:33:59 2016 +0200,1465911239,TTL and TYPE LRU access fixed. TOUCH implemented.,60.0,8.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5391576560200011,13.0,2442.6666666666665,316.0,11.457789351851847,9131.0,1.0320308131263711,4629.0,Corrective,True,True,"[""ec55df117f0554aaf0d36e2fbb875aea93105b3d"", ""e978bdf9ef62404083afed28d98e7a455bcecd3b""]"
41d804d9dc48292f61fc1e1efd2241404dc9a6e8,b7b9aa6d9bbed5a292f3e939bf0c5906bdf965ca,zach shipko,zachshipko@gmail.com,Tue Jun 14 13:46:42 2016 +0000,1465912002,BSDs don't have -ldl,15.0,5.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,260.0,129.0,26.91569444444445,0.0,0.0,0.0,None,False,,
41d804d9dc48292f61fc1e1efd2241404dc9a6e8 b7b9aa6d9bbed5a292f3e939bf0c5906bdf965ca,82554cae4d2181317506d41abf4725347f8850c9,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 11:18:04 2016 +0200,1465982284,Merge pull request #3313 from zshipko/unstableBSDs don't have -ldl,,,,,,,,,,,,,,,Merge,False,,
82554cae4d2181317506d41abf4725347f8850c9 90781dec56d01a779f55ad16484e69813c2a4f7c,3deb7badb1bb60212c3852e5f5d7f870b3e22ec2,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 11:20:01 2016 +0200,1465982401,Merge pull request #3226 from MichielDeMey/patch-1Allow non-interactive execution of install_server,,,,,,,,,,,,,,,Merge,False,,
41d804d9dc48292f61fc1e1efd2241404dc9a6e8,212f157855120157675b5e18a0c0b93924774fb7,antirez,antirez@gmail.com,Wed Jun 15 11:49:49 2016 +0200,1465984189,Regression test for #3282.,10.0,0.0,"tests/unit/bitops.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,341.0,15.0,50.833240740740735,9133.0,1.0196721669802675,694.0,Preventative,False,,
3deb7badb1bb60212c3852e5f5d7f870b3e22ec2 41dacdbcbefb7e90e78caf695db808833d652c8a,001cadc854d780b67f6d792b71404aebd746124c,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 12:15:34 2016 +0200,1465985734,Merge pull request #3282 from wenduo/unstablebitcount bug:return non-zero value when start > end (both negative),,,,,,,,,,,,,,,Merge,False,,
212f157855120157675b5e18a0c0b93924774fb7 001cadc854d780b67f6d792b71404aebd746124c,ca54335f40f104eee1ca326d13ccaee365840478,antirez,antirez@gmail.com,Wed Jun 15 12:15:46 2016 +0200,1465985746,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ca54335f40f104eee1ca326d13ccaee365840478,eb45e114965175e766136d6e0d8fbe242bc256b1,antirez,antirez@gmail.com,Wed Jun 15 12:16:39 2016 +0200,1465985799,Remove additional round brackets from fix for #3282.,1.0,1.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1113.0,45.0,9.862453703703702,9134.0,1.1013946457993982,4630.0,Corrective,True,,
eb45e114965175e766136d6e0d8fbe242bc256b1,2d86995273e431b40c2bd30c694ea405cc698118,antirez,antirez@gmail.com,Wed Jun 15 12:48:58 2016 +0200,1465987738,"GETRANGE: return empty string with negative, inverted start/end.",6.0,2.0,"src/bitops.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,791.0,109.0,162.07620949074072,9135.5,23.28106801287029,4632.0,None,False,,
2d86995273e431b40c2bd30c694ea405cc698118 3432061cbb9adc5e5dff5d556195031ae54929c2,bd2cd7059a4fc64f503f2c51f29c27a6311ecbc3,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 12:51:15 2016 +0200,1465987875,Merge pull request #3281 from jamespedwards42/unstableFix modules intro typos.,,,,,,,,,,,,,,,Merge,False,,
bd2cd7059a4fc64f503f2c51f29c27a6311ecbc3 40671320928502b9e798d67e6246ba0c8c6e8a24,226f679651ca62394021738af0ce467a290c7b90,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 15:53:19 2016 +0200,1465998799,Merge pull request #3283 from ideal/unstablefix mistake in comment in object.c,,,,,,,,,,,,,,,Merge,False,,
226f679651ca62394021738af0ce467a290c7b90,3bd20ea2f1be58001dd6330a7763bed3d4221695,antirez,antirez@gmail.com,Wed Jun 15 17:15:18 2016 +0200,1466003718,Test TOUCH and new TTL / TYPE behavior about object access time.,24.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/introspection-2.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.2498822928331855,13.0,280.0,99.0,7.510931712962963,9137.5,1.0665696373110491,696.0,Feature Addition,False,,
3bd20ea2f1be58001dd6330a7763bed3d4221695 aa578446bacd9b6565f40e7daf9eb14d3a6f6edd,5d83f6cfdeef7b493a67559c8d79d852abec16e9,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 15 17:24:11 2016 +0200,1466004251,Merge pull request #3274 from MOON-CLJ/fix_promoted_slaveSentinel: fix check when can't send the command to the promoted slave,,,,,,,,,,,,,,,Merge,False,,
5d83f6cfdeef7b493a67559c8d79d852abec16e9 5d96b7ed4ffc1b90195fd4074ead331236e8e28f,33a9836fe32acffdf6fb34c8712e805d0986a956,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 16 12:52:36 2016 +0200,1466074356,Merge pull request #3264 from oranagra/bitfield_fix2fix crash in BITFIELD GET on non existing key or wrong type see #3259,,,,,,,,,,,,,,,Merge,False,,
33a9836fe32acffdf6fb34c8712e805d0986a956,2f2fd64c0db00b82e6c336d0ee9e19d50a3aad5f,antirez,antirez@gmail.com,Thu Jun 16 12:54:33 2016 +0200,1466074473,"Minor aesthetic fixes to PR #3264.Comment format fixed + local var modified from camel case to underscorenseparators as Redis code base normally does (camel case is mostly usednfor global symbols like structure names, function names, global vars,n...).n",5.0,5.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1113.0,47.0,1.0038773148148148,9139.0,1.9961376606906087,4633.0,Corrective,True,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
2f2fd64c0db00b82e6c336d0ee9e19d50a3aad5f f3e81de17688e310b7a5ef5108a3a6c8962eb133,64b834b8b2b75460f7a0cd9cd60dc3bd09bc0f16,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 16 12:57:59 2016 +0200,1466074679,Merge pull request #3256 from oranagra/georasius_negfix georadius returns multiple replies,,,,,,,,,,,,,,,Merge,False,,
64b834b8b2b75460f7a0cd9cd60dc3bd09bc0f16 8d9d8d16e4216207f4c58d4c41bb33f8eea399ff,8272ceadaa161989ead1406eecaa17ddd57dbcb7,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 16 12:59:05 2016 +0200,1466074745,Merge pull request #3255 from oranagra/error_stringCLIENT error message was out of date,,,,,,,,,,,,,,,Merge,False,,
8272ceadaa161989ead1406eecaa17ddd57dbcb7,a3f893b8004bae824a3c1827666ffb0d7e342355,antirez,antirez@gmail.com,Thu Jun 16 15:53:57 2016 +0200,1466085237,"RESTORE: accept RDB dumps with older versions.Reference issue #3218.nnChecking the code I can't find a reason why the original RESTOREncode was so opinionated about restoring only the current version. Thencode in to `rdb.c` appears to be capable as always to restore data fromnolder versions of Redis, and the only places where it is needed thencurrent version in order to correctly restore data, is while loading thenopcodes, not the values itself as it happens in the case of RESTORE.nnFor the above reasons, this commit enables RESTORE to accept oldernversions of values payloads.n",1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5313.0,501.0,42.18071759259259,9140.0,1.0237075151176571,4634.0,None,False,,
a3f893b8004bae824a3c1827666ffb0d7e342355,7c8f275a24db26a6b9eb5a14439d1156c244dd67,antirez,antirez@gmail.com,Thu Jun 16 17:23:31 2016 +0200,1466090611,"redis-cli: really connect to the right server.I recently introduced populating the autocomplete help array with thenCOMMAND command if available. However this was performed before parsingnthe arguments, defaulting to instance 6379. After the connection isnperformed it remains stable.nnThe effect is that if there is an instance running on port 6339,nwhatever port you specify is ignored and 6379 is connected to instead.nThe right port will be selected only after a reconnection.nnClose #3314.n",5.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2694.0,173.0,26.148263888888888,9141.0,1.0382434567835659,4635.0,None,False,,
7c8f275a24db26a6b9eb5a14439d1156c244dd67,f7351f4c07f5e0b1c9bdb6949f45f84576ffd75f,antirez,antirez@gmail.com,Thu Jun 16 19:24:34 2016 +0200,1466097874,"Fix Sentinel pending commands counting.This bug most experienced effect was an inability of Redis tonreconfigure back old masters to slaves after they are reachable againnafter a failover. This was due to failing to reset the count of thenpending commands properly, so the master appeared fovever down.nnWas introduced in Redis 3.2 new Sentinel connection sharing featurenwhich is a lot more complex than the 3.0 code, but more scalable.nnMany thanks to people reporting the issue, and especially ton@sskorgal for investigating the issue in depth.nnHopefully closes #3285.n",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4322.0,225.0,9.445648148148148,9142.0,1.1058688598511954,4636.0,Corrective,True,,
f7351f4c07f5e0b1c9bdb6949f45f84576ffd75f,7a5538d3a90ffbfa618b0f8776564db617616752,Misha Nasledov,mnasledov@ifwe.co,Thu Jun 16 16:50:53 2016 -0700,1466121053,Fix incorrect comment for checkForSentinelMode function,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4151.0,71.0,2.4284027777777784,0.0,0.0,0.0,Corrective,True,,
f7351f4c07f5e0b1c9bdb6949f45f84576ffd75f 5fa711fa3749eb2605ff02e1dd08d62e3fc56f0e,0b4b7ebd957448cb59cf3e3c365772b29067ede7,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 17 14:48:41 2016 +0200,1466167721,Merge pull request #3252 from oranagra/config_fixfix: config set list-max-ziplist-size didn't support negative values,,,,,,,,,,,,,,,Merge,False,,
0b4b7ebd957448cb59cf3e3c365772b29067ede7,8f3a4df77599e4523bee7dc1db60b0863d6a6a49,Yossi Gottlieb,yossigo@gmail.com,Mon Jun 20 23:08:06 2016 +0300,1466453286,Use const in Redis Module API where possible.,38.0,38.0,"src/debug.c,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/intset.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/quicklist.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",13.0,1.0,1.0,3.1960881774987464,13.0,1217.6153846153845,703.0,115.72117966524216,21.0,1.0034481784753393,26.0,None,False,True,"[""de474186bdb1a595bb77ccec577754134884bb52""]"
0b4b7ebd957448cb59cf3e3c365772b29067ede7,a8e20345480ac83b3bc60b7a6539b099e806d944,Yossi Gottlieb,yossigo@gmail.com,Tue Jun 21 10:22:19 2016 +0300,1466493739,Fix occasional RM_OpenKey() crashes.,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3074.0,61.0,0.4682060185185185,28.0,3.1358119298939515,27.0,Corrective,True,,
a8e20345480ac83b3bc60b7a6539b099e806d944,e22f3e40d517b8eca10a0d02a5554987b1a22b77,Yossi Gottlieb,yossigo@gmail.com,Wed Jun 22 07:30:06 2016 +0300,1466569806,Cleanup: remove zset reset function from RM_ZsetRangeStop().,13.0,7.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3075.0,62.0,0.8804050925925926,29.0,2.1358407719510435,28.0,Perfective,False,,
0b4b7ebd957448cb59cf3e3c365772b29067ede7,4e10b08fb3ead01e305b65f47180b44334bf9b8a,antirez,antirez@gmail.com,Wed Jun 22 15:24:51 2016 +0200,1466601891,Modules doc: hint about replacing libc malloc calls.,15.0,1.0,"src/modules/TYPES.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,357.0,3.0,12.198067129629633,9143.0,1.0819802014018234,4637.0,Non Functional,False,,
0b4b7ebd957448cb59cf3e3c365772b29067ede7,dc7f3fefad5f136c0655734a35ae624758d73845,Dvir Volk,dvirsky@gmail.com,Wed Jun 22 17:32:41 2016 +0300,1466605961,added RM_Calloc implementation,13.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.74959525725948,13.0,1683.0,85.0,1.0927662037037038,13.5,2.423632690347236,14.0,Feature Addition,False,True,"[""19c401d81dc09652806d348dee4371899bc2e500""]"
4e10b08fb3ead01e305b65f47180b44334bf9b8a,61172ed01ef3b888d499e191df6bc6408313ae68,Yossi Gottlieb,yossigo@gmail.com,Wed Jun 22 20:57:24 2016 +0300,1466618244,Add RedisModule_CreateStringFromString().,26.0,2.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,2.0,1.8702538164316216,13.0,1408.6,256.0,4.479136574074074,32.0,2.4461949553153817,33.0,Feature Addition,False,,
4e10b08fb3ead01e305b65f47180b44334bf9b8a 137fd86a6133b4a83c2a95215241c9906ec6877f,2fe9b7989792d1a722d5863734e379c15d57b56a,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 08:59:38 2016 +0200,1466665178,Merge pull request #3244 from dvirsky/optimize_autoMemoryFreedOptimized autoMemoryFreed loop,,,,,,,,,,,,,,,Merge,False,,
2fe9b7989792d1a722d5863734e379c15d57b56a,f2dbc02f6510cc3cc415ac354888948af64434d1,antirez,antirez@gmail.com,Thu Jun 23 09:09:51 2016 +0200,1466665791,"Modules: implement zig-zag scanning in autoMemoryFreed().Most of the time to check the last element is the way to go, howevernthere are patterns where the contrary is the best choice. Zig-zagnscanning implemented in this commmit always checks the obvious elementnfirst (the last added -- think at a loop where the last elementnallocated gets freed again and again), and continues checking onenelement in the head and one in the tail.nnThanks to @dvisrky that fixed the original implementation of thenfunction and proposed zig zag scanning.n",20.0,16.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3102.0,65.0,0.5503125,9144.0,2.817149346961953,4638.0,None,False,,
f2dbc02f6510cc3cc415ac354888948af64434d1,b507289750eb77b554847afa03da8eb044f49a3a,antirez,antirez@gmail.com,Thu Jun 23 09:38:30 2016 +0200,1466667510,"Commit change in autoMemoryFreed(): first -> last.It's more natural to call the last entry added as last, the originalncommet got me confused until I actually read the code.n",2.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3106.0,66.0,0.01989583333333333,9145.0,51.26178010471204,4639.0,None,False,,
b507289750eb77b554847afa03da8eb044f49a3a,715794b82976511786307b9e14165f1efbb28240,Yossi Gottlieb,yossigo@gmail.com,Wed Jun 15 16:27:16 2016 +0300,1465997236,Add RedisModule_Log() logging API function.,42.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.3774190952228331,13.0,1508.0,103.0,-7.3776620370370365,36.0,0.9196686036341926,36.0,Feature Addition,False,,
715794b82976511786307b9e14165f1efbb28240,4b12c6a3600eb2f8bfb8e440db5a526054bd2d9b,antirez,antirez@gmail.com,Thu Jun 23 12:11:30 2016 +0200,1466676690,"Modules: changes to logging function.This commit changes what provided by PR #3315 (merged) in order tonlet the user specify the log level as a string.nnThe define could be also used, but when this happens, they must bendecoupled from the defines in the Redis core, like in the other part ofnthe Redis modules implementations, so that a switch statement (or anfunction) remaps between the two, otherwise we are no longer free tonchange the internal Redis defines.n",39.0,19.0,"src/module.c,CAS_DELIMITER,src/modules/API.md,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.4467855508270953,13.0,1522.0,106.0,7.864050925925926,9147.0,1.0777094549447055,4642.0,None,False,True,"[""ec55df117f0554aaf0d36e2fbb875aea93105b3d""]"
4b12c6a3600eb2f8bfb8e440db5a526054bd2d9b 8f3a4df77599e4523bee7dc1db60b0863d6a6a49,3d48c9312222e29a0fdda13fb8f852b37127fc7a,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 12:29:52 2016 +0200,1466677792,Merge pull request #3330 from yossigo/fix_constUse const in Redis Module API where possible.,,,,,,,,,,,,,,,Merge,False,,
3d48c9312222e29a0fdda13fb8f852b37127fc7a,f648c5a70c802aeb60ee9773dfdcf7cf08a06357,tielei,43289893@qq.com,Thu Jun 23 19:53:56 2016 +0800,1466682836,A string with 21 chars is not representable as a 64-bit integer.,2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,728.0,83.0,0.7475925925925926,0.0,0.0,0.0,None,False,,
3d48c9312222e29a0fdda13fb8f852b37127fc7a f648c5a70c802aeb60ee9773dfdcf7cf08a06357,393c4686ef1741c3a2c0e462655b80f607473ed4,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 16:06:15 2016 +0200,1466690775,Merge pull request #3338 from tielei/unstableA string with 21 chars is not representable as a 64-bit integer.,,,,,,,,,,,,,,,Merge,False,,
393c4686ef1741c3a2c0e462655b80f607473ed4 e22f3e40d517b8eca10a0d02a5554987b1a22b77,a66dd43331f278e000f222aa63e36922f14f3c21,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 16:12:07 2016 +0200,1466691127,Merge pull request #3331 from yossigo/fix_openkey_crashFix occasional RM_OpenKey() crashes.,,,,,,,,,,,,,,,Merge,False,,
a66dd43331f278e000f222aa63e36922f14f3c21,c0ca87dcc09212053e4718d9f78a2127ce33ef85,antirez,antirez@gmail.com,Thu Jun 23 16:12:59 2016 +0200,1466691179,Minor change to conform PR #3331 to Redis code base style.Also avoid static in order to have symbols during crashes.n,1.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3149.0,69.0,0.16769675925925925,9149.0,6.963144454413693,4643.0,None,False,,
c0ca87dcc09212053e4718d9f78a2127ce33ef85 61172ed01ef3b888d499e191df6bc6408313ae68,28ea585fce601613500f0e36215851d8d88c6228,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 16:16:28 2016 +0200,1466691388,Merge pull request #3336 from yossigo/create_string_from_stringAdd RedisModule_CreateStringFromString().,,,,,,,,,,,,,,,Merge,False,,
c0ca87dcc09212053e4718d9f78a2127ce33ef85,0f484d83123366397f489e6f7e6481fc6d8765dc,antirez,antirez@gmail.com,Thu Jun 23 16:18:14 2016 +0200,1466691494,Actually remove static from #3331.I forgot -a when amending in the previous commit.n,1.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3148.0,70.0,0.003645833333333333,9150.0,275.2857142857143,4644.0,None,False,,
0f484d83123366397f489e6f7e6481fc6d8765dc 28ea585fce601613500f0e36215851d8d88c6228,c026b5cd3e41aa2bfeb15b34b07bcedd6bced153,antirez,antirez@gmail.com,Thu Jun 23 16:18:57 2016 +0200,1466691537,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
c026b5cd3e41aa2bfeb15b34b07bcedd6bced153 dc7f3fefad5f136c0655734a35ae624758d73845,3a0b776b94eedcaec9e69e2efb1c6ee354de00bd,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 16:19:14 2016 +0200,1466691554,Merge pull request #3335 from dvirsky/rm_callocadded RM_Calloc implementation,,,,,,,,,,,,,,,Merge,False,,
3a0b776b94eedcaec9e69e2efb1c6ee354de00bd,18983113c57aeeeaf3e71b8c569a1717a2c9a74a,antirez,antirez@gmail.com,Thu Jun 23 16:20:48 2016 +0200,1466691648,Modules: mention RedisModule_Calloc() in the doc.,1.0,0.0,"src/modules/INTRO.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,855.0,4.0,10.260706018518519,9151.0,1.097459180508164,4645.0,None,False,,
18983113c57aeeeaf3e71b8c569a1717a2c9a74a 7a5538d3a90ffbfa618b0f8776564db617616752,f60aa4de302992ac458f2f39d0e4918d4734723d,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 23 16:39:51 2016 +0200,1466692791,Merge pull request #3324 from mishan/fix-wrong-comment-about-sentinel-modeFix incorrect comment for checkForSentinelMode function,,,,,,,,,,,,,,,Merge,False,,
646c958bbd506839f02dbe8801275e11e2657955 f60aa4de302992ac458f2f39d0e4918d4734723d,4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,rojingeorge,itsmerojin@gmail.com,Thu Jun 23 21:34:03 2016 +0530,1466697843,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,4242fdf45c633701cae7d536bc8af0b6f40e11cd,rojingeorge,itsmerojin@gmail.com,Thu Jun 23 21:58:03 2016 +0530,1466699283,"Display the nodes summary once the cluster is established using redis-trib.rbDisplay the nodes summary once the cluster is established usingnredis-trib.rbnAfter the cluster meet and join was done, when the summary was shown, itnwas giving info regarding the nodes. This fix ensures that confusionnwhere the slaves were shown as masters.nFix would be to reset the nodes and reload the cluster informationnbefore checking the cluster status after creating it.n",5.0,0.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1696.0,126.0,167.09917824074077,0.0,0.0,0.0,Corrective,True,,
f60aa4de302992ac458f2f39d0e4918d4734723d,19c401d81dc09652806d348dee4371899bc2e500,Yossi Gottlieb,yossigo@gmail.com,Thu Jun 23 22:30:32 2016 +0300,1466710232,Fix RedisModule_Calloc() definition typo.,1.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,292.0,26.0,0.3882175925925926,38.0,3.575875022360026,37.0,Corrective,True,,
f60aa4de302992ac458f2f39d0e4918d4734723d 19c401d81dc09652806d348dee4371899bc2e500,ae4f5b303eef35a878ea2f6894d169ad292089dc,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 24 08:58:23 2016 +0200,1466751503,Merge pull request #3342 from yossigo/fix_callocFix RedisModule_Calloc() definition typo.,,,,,,,,,,,,,,,Merge,False,,
18983113c57aeeeaf3e71b8c569a1717a2c9a74a,5e176e1af599637f4b5df1c60b22d110c6b1ae0c,antirez,antirez@gmail.com,Mon Jun 27 18:02:33 2016 +0200,1467043353,"Fix quicklistReplaceAtIndex() by updating the quicklist ziplist size.The quicklist takes a cached version of the ziplist representation sizenin bytes. The implementation must update this length every time thenunderlying ziplist changes. However quicklistReplaceAtIndex() failed tonfix the length.nnDuring LSET calls, the size of the ziplist blob and the cached sizeninside the quicklist diverged. Later, when this size is used in annauthoritative way, for example during nodes splitting in order to copynthe nodes, we end with a duplicated node that may contain randomngarbage.nnThis commit should fix issue #3343, however several problems were foundnreviewing the quicklist.c code in search of this bug that should benaddressed soon or later.nnFor example:nn1. To take a cached ziplist length is fragile since failing to update itnleads to this kind of issues.nn2. The node splitting code needs auditing. For example it works just forna side effect of ziplistDeleteRange() to be able to cope with a wrongncount of elements to remove. The code inside quicklist.c assumes thatn-1 means delete till the end while actually it's just a count of hownmany elements to delete, and is an unsigned count. So -1 gets convertedninto the maximum integer, and just by chance the ziplist code stopsndeleting elements after there are no more to delete.nn3. Node splitting is extremely inefficient, it copies the node andnremoves elements from both nodes even when actually there is to move ansingle entry from one node to the other, or when the new resulting nodenis empty at all so there is nothing to copy but just to create a newnnode.nnHowever at least for Redis 3.2 to introduce fresh code insidenquicklist.c may be even more risky, so instead I'm writing a betternfuzzy tester to stress the internals a bit more in order to anticipatenother possible bugs.nnThis bug was found using a fuzzy tester written after having some cluenabout where the bug could be. The tester eventually created a ~2000ncommands sequence able to always crash Redis. I wrote a better versionnof the tester that searched for the smallest sequence that could crashnRedis automatically. Later this smaller sequence was minimized bynremoving random commands till it still crashed the server. This resultedninto a sequence of 7 commands. With this small sequence it was just anmatter of filling the code with enough printf() to understand enoughnstate to fix the bug.n",1.0,0.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2650.0,11.0,6.829479166666666,9152.0,1.1464240501502372,4646.0,Corrective,True,,
5e176e1af599637f4b5df1c60b22d110c6b1ae0c ae4f5b303eef35a878ea2f6894d169ad292089dc,dc18a6a6f84dfe3a09c2219f43bf3a7dd8faf2a5,antirez,antirez@gmail.com,Mon Jun 27 18:12:46 2016 +0200,1467043966,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
dc18a6a6f84dfe3a09c2219f43bf3a7dd8faf2a5,49899866c89e9383a590e02d1846fb88e1729bc5,antirez,antirez@gmail.com,Tue Jun 28 09:26:28 2016 +0200,1467098788,Regression test for issue #3343 exact min crash sequence.Note: it was verified that it can crash the test suite without the patchnapplied.n,16.0,0.0,"tests/unit/type/list-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,78.0,5.0,560.0675231481481,9153.0,1.0017854989955122,697.0,Preventative,False,,
49899866c89e9383a590e02d1846fb88e1729bc5,f983318e521a6540146eabeeb40634157fdc34b9,antirez,antirez@gmail.com,Tue Jun 28 09:33:36 2016 +0200,1467099216,Stress tester WIP.,3.0,0.0,"tests/unit/type/list-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,94.0,6.0,0.004953703703703704,9154.0,202.86915887850463,698.0,Preventative,False,,
f983318e521a6540146eabeeb40634157fdc34b9,24bd9b19f60712f635ce512a7fa29d6de2d98e39,antirez,antirez@gmail.com,Tue Jun 28 09:42:20 2016 +0200,1467099740,Test: new randomized stress tester for #3343 alike bugs.,27.0,2.0,"tests/unit/type/list-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,97.0,7.0,0.0060648148148148145,9155.0,165.8854961832061,699.0,Preventative,False,,
24bd9b19f60712f635ce512a7fa29d6de2d98e39,b6c4822f7cfdb87b211826789128e1ff4162d3e6,Yusaku Kaneta,yusaku.kaneta@gmail.com,Wed Jun 29 18:09:16 2016 +0900,1467191356,"Fix the firstkey, lastkey, and keystep of moduleCommand",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4151.0,72.0,12.387766203703706,0.0,0.0,0.0,Corrective,True,,
4242fdf45c633701cae7d536bc8af0b6f40e11cd 24bd9b19f60712f635ce512a7fa29d6de2d98e39,d0f53079e31641c860ea577f876f4361d23f53f3,Rojin George,rojingeorge@huawei.com,Thu Jun 30 16:34:01 2016 +0530,1467284641,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,,,,,,,,,,,,,,,Merge,False,,
24bd9b19f60712f635ce512a7fa29d6de2d98e39,e97fadb045c8bd10efd00d18374417009feb18c5,antirez,antirez@gmail.com,Thu Jun 30 23:44:44 2016 +0200,1467323084,"In Redis RDB check: initial POC.So far we used an external program (later executed within Redis) andnparser in order to check RDB files for correctness. This forces, at eachnRDB format update, to have two copies of the same format implementationnthat are hard to keep in sync. Morover the former RDB checker onlynchecked the very high-level format of the file, without actually tryingnto load things in memory. Certain corruptions can only be handled bynreally loading key-value pairs.nnThis first commit attempts to unify the Redis RDB loadig code with thentask of checking the RDB file for correctness. More work is needed butnit looks like a sounding direction so far.n",189.0,660.0,"src/redis-check-rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.023959046315850968,13.0,2437.0,82.0,13.43245949074074,9156.5,1.0383430567859624,4648.0,None,False,True,"[""24882e31f2fd52a2750a1953a5e479576e392ee1"", ""6eb996540c662832370ddaac25484c4cbbca4e7a"", ""f31b0405f0023d8916efac3aa9b0c16d4db69fc4"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
24bd9b19f60712f635ce512a7fa29d6de2d98e39,9dfd9d14120c7beaa2369a70ea77bb28aeb4ea07,sskorgal,santosh.korgal@huawei.com,Fri Jul 1 10:42:22 2016 +0530,1467349942,Fix for redis_cli printing default DB when select command fails.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2697.0,174.0,14.575590277777774,0.0,0.0,0.0,Corrective,True,,
e97fadb045c8bd10efd00d18374417009feb18c5,e9f31ba9c2dcea13c825653e7b2e0ffdd99129c5,antirez,antirez@gmail.com,Fri Jul 1 09:36:52 2016 +0200,1467358612,In Redis RDB check: better error reporting.,71.0,14.0,"src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.0271924855346928,13.0,2005.5,330.0,8.785743634259259,9159.5,1.0357852891642652,4652.0,None,False,True,"[""6eb996540c662832370ddaac25484c4cbbca4e7a"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
e9f31ba9c2dcea13c825653e7b2e0ffdd99129c5,2ab70971783c31ecd01c539146026d6a8666201b,antirez,antirez@gmail.com,Fri Jul 1 09:52:35 2016 +0200,1467359555,In Redis RDB check: minor output message changes.,4.0,1.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,300.0,11.0,0.010914351851851852,9162.0,92.62248144220571,4653.0,None,False,,
2ab70971783c31ecd01c539146026d6a8666201b,c0f4d19331689c407e79a0f94dba3b3ef0ce827c,antirez,antirez@gmail.com,Fri Jul 1 09:55:18 2016 +0200,1467359718,Added a trivial program to randomly corrupt RDB files in /utils.,44.0,0.0,"utils/corrupt_rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9163.0,0.0,75.0,Feature Addition,False,True,"[""ab1e87f5b1eddbe3c556b8f2529757f869690436""]"
c0f4d19331689c407e79a0f94dba3b3ef0ce827c,df3c69e89eeea31245d2d4759589be216ad0b65f,antirez,antirez@gmail.com,Fri Jul 1 11:40:40 2016 +0200,1467366040,In Redis RDB check: log object type on error.,27.0,2.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,303.0,12.0,0.07505787037037037,9164.0,14.323053199691596,4654.0,None,False,,
df3c69e89eeea31245d2d4759589be216ad0b65f,e697153d18531e6b12d110bc0c57658ae686fb08,antirez,antirez@gmail.com,Fri Jul 1 11:59:25 2016 +0200,1467367165,In Redis RDB check: log decompression errors.,23.0,2.0,"src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.7950402793845223,13.0,1068.0,183.0,0.056006944444444436,9165.5,10.51459152366677,4656.0,None,False,,
e697153d18531e6b12d110bc0c57658ae686fb08,7e220a964afdcb18bb660e898bc74a727a2a5848,antirez,antirez@gmail.com,Fri Jul 1 15:26:55 2016 +0200,1467379615,In Redis RDB check: more details in error reportings.,21.0,13.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1812.0,171.0,0.1440972222222222,9167.0,7.939759036144579,4657.0,None,False,,
7e220a964afdcb18bb660e898bc74a727a2a5848,b99ad1bd808fcfa5f57301a65c875d8c16d7cf71,antirez,antirez@gmail.com,Mon Jul 4 12:08:37 2016 +0200,1467626917,"Make tcp-keepalive default to 300 in internal conf.We already changed the default in the redis.conf template, but I forgotnto change the internal config as well.n",1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1820.0,78.0,3.1053819444444444,9168.0,1.3220215799183763,4658.0,None,False,,
b99ad1bd808fcfa5f57301a65c875d8c16d7cf71,a0dd0140f3771b9651a7eeca2f723239a9d44d0d,antirez,antirez@gmail.com,Mon Jul 4 12:41:25 2016 +0200,1467628885,Fix test for new RDB checksum failure message.,1.0,1.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,98.0,9.0,333.9415625,9169.0,1.0029945359077608,700.0,Corrective,True,,
a0dd0140f3771b9651a7eeca2f723239a9d44d0d,b2cc8bccdb8caa52e112e52231b1e591f569c426,antirez,antirez@gmail.com,Mon Jul 4 16:09:07 2016 +0200,1467641347,CONFIG GET is now no longer case sensitive.Like CONFIG SET always was. Close #3369.n,12.0,12.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1981.0,193.0,21.262511574074075,9170.0,1.0470311325412434,4659.0,None,False,,
b2cc8bccdb8caa52e112e52231b1e591f569c426,c383be3b0fc99bbde492d6fe70ab38d8e23829f8,antirez,antirez@gmail.com,Mon Jul 4 18:45:24 2016 +0200,1467650724,"Sentinel: fix cross-master Sentinel address update.This commit both fixes the crash reported with issue #3364 andnalso properly closes the old links after the Sentinel address for thenother masters gets updated.nnThe two problems where:nn1. The Sentinel that switched address may not monitor all the masters,n   it is possible that there is no match, and the 'match' variable isn   NULL. Now we check for no match and 'continue' to the next master.nn2. By ispecting the code because of issue 1 I noticed that there was an   problem in the code that disconnects the link of the Sentinel thatn   needs the address update. Basically link->disconnected is non-zeron   even if just *a single link* (cc -- command link or pc -- pubsubn   link) are disconnected, so to check with if (link->disconnected)n   in order to close the links risks to leave one link connected.nnI was able to manually reproduce the crash at 1 and verify that thencommit resolves the issue.nnClose #3364.n",9.0,2.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4323.0,226.0,17.972800925925924,9171.0,1.0556396303570854,4660.0,None,False,,
c383be3b0fc99bbde492d6fe70ab38d8e23829f8 9dfd9d14120c7beaa2369a70ea77bb28aeb4ea07,0df286596d538fc9a22ca5dc2ec835205c055c26,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 5 15:12:06 2016 +0200,1467724326,Merge pull request #3365 from sskorgal/unstableFix for redis_cli printing default DB when select command fails. #3361,,,,,,,,,,,,,,,Merge,False,,
0df286596d538fc9a22ca5dc2ec835205c055c26,ef6a4df29c17e3c79a1e9b328fe3e2d1f2a9df39,antirez,antirez@gmail.com,Tue Jul 5 15:18:40 2016 +0200,1467724720,"redis-cli: check SELECT reply type just in state updated.In issues #3361 / #3365 a problem was reported / fixed with redis-clinnot updating correctly the current DB on error after SELECT.nnIn theory this bug was fixed in 0042fb0e, but actually the commit onlynfixed the prompt updating, not the fact the state was set in a wrongnway.nnThis commit removes the check in the prompt update, now that hopefullynit is the state that is correct, there is no longer need for this check.n",1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2697.0,175.0,4.3377083333333335,9172.0,1.2305364775947358,4661.0,None,False,,
ef6a4df29c17e3c79a1e9b328fe3e2d1f2a9df39,23791828f1cd54ebea95d8c860058e55ff28aebf,antirez,antirez@gmail.com,Wed Jul 6 11:43:33 2016 +0200,1467798213,getLongLongFromObject: use string2ll() instead of strict_strtoll().strict_strtoll() has a bug that reports the empty string as ok andnparses it as zero.nnApparently nobody ever replaced this old call with the faster/sanernstring2ll() which is used otherwise in the rest of the Redis core.nnThis commit close #3333.n,1.0,15.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,728.0,84.0,12.909456018518519,9173.0,1.0774625978480818,4662.0,None,False,,
23791828f1cd54ebea95d8c860058e55ff28aebf,abb3385e8d9b3edc2d85561854b0d2a0c34d3743,antirez,antirez@gmail.com,Wed Jul 6 11:50:13 2016 +0200,1467798613,Regression test for issue #3333.,6.0,0.0,"tests/unit/expire.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,201.0,15.0,1195.961099537037,9174.0,1.000836147597432,701.0,Preventative,False,,
abb3385e8d9b3edc2d85561854b0d2a0c34d3743,10361829f9a38dfa40910556d222a1010bb5e52d,antirez,antirez@gmail.com,Wed Jul 6 12:24:45 2016 +0200,1467800685,Generate Makefile.dep at every build.Normally we used to update it from time to time. Too fragile... betternto generate dependencies at every run and delete them on 'make clean'.n,6.0,194.0,".gitignore,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/Makefile.dep,CAS_DELIMITER",3.0,2.0,2.0,0.3919099137650845,13.0,161.66666666666666,170.0,263.62208719135805,9176.0,1.0016799436363055,4664.0,Perfective,False,,
10361829f9a38dfa40910556d222a1010bb5e52d,0610683d5e7565f997057afb74aef5cb941d04a0,antirez,antirez@gmail.com,Wed Jul 6 12:56:43 2016 +0200,1467802603,"Makefile: don't build dependencies file for clean, distclean.",3.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,267.0,131.0,0.022199074074074072,9178.0,46.04692387904067,4665.0,None,False,,
0610683d5e7565f997057afb74aef5cb941d04a0,b46239e58b00774d121de89e0e033b2ed3181eb0,antirez,antirez@gmail.com,Wed Jul 6 15:24:06 2016 +0200,1467811446,Expire and LRU related code moved into different files.,4.0,633.0,"src/Makefile,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,0.9234830408470016,13.0,1672.8,544.0,5.925106481481483,9181.0,2.986155277465066,4670.0,None,False,,
b46239e58b00774d121de89e0e033b2ed3181eb0,4a140d320f7a8e1a63f9c3ca588f61f21838f3ac,antirez,antirez@gmail.com,Wed Jul 6 15:28:18 2016 +0200,1467811698,Add expire.c and evict.c.,718.0,0.0,"src/evict.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER",2.0,1.0,1.0,0.9998600703666356,1.0,0.0,0.0,0.0,9184.5,0.0,4672.0,Feature Addition,False,True,"[""5877c02c5102d7f01e3a41937ffdea098a63befe"", ""ec55df117f0554aaf0d36e2fbb875aea93105b3d"", ""d1a005ab3963c16b65e805675a76f0e40c723158"", ""0af467d18f9d12b137af3b709c0af579c29d8414""]"
4a140d320f7a8e1a63f9c3ca588f61f21838f3ac,eaa713e93b6aadf08fda33238670cd3577a7db52,antirez,antirez@gmail.com,Wed Jul 6 16:02:38 2016 +0200,1467813758,"geohash.c and geohash_helper.c are part of Redis.They were under /deps since they originate from a different source tree,nhowever at this point they are very modified and we took ownership ofnboth the files making changes, fixing bugs, so there is no upgrade pathnfrom the original code tree.nnGiven that, better to move the code under /src with proper dependenciesnand with a more simpler editing experience.n",686.0,717.0,"deps/Makefile,CAS_DELIMITER,deps/geohash-int/Makefile,CAS_DELIMITER,deps/geohash-int/geohash.c,CAS_DELIMITER,deps/geohash-int/geohash.h,CAS_DELIMITER,deps/geohash-int/geohash_helper.c,CAS_DELIMITER,deps/geohash-int/geohash_helper.h,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/geohash.c,CAS_DELIMITER,src/geohash.h,CAS_DELIMITER,src/geohash_helper.c,CAS_DELIMITER,src/geohash_helper.h,CAS_DELIMITER",11.0,2.0,3.0,2.9681265211034162,13.0,96.72727272727272,171.0,141.04279776936025,9191.0,1.0026949302914594,4677.0,Corrective,True,True,"[""356a6304ec77783e7fdaf00668a09dc293b810a0""]"
eaa713e93b6aadf08fda33238670cd3577a7db52,504ccad1fa018b2b432eda092bd536134ee6b39f,antirez,antirez@gmail.com,Wed Jul 6 16:31:11 2016 +0200,1467815471,Fix definition of M_PI in geohash_helper.c.Without the right feature macros M_PI is not defined in math.h.n,2.0,1.0,"src/geohash_helper.c,CAS_DELIMITER,src/geohash_helper.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,13.0,134.0,2.0,0.01982638888888889,9197.5,38.82837127845885,4679.0,Corrective,True,,
504ccad1fa018b2b432eda092bd536134ee6b39f,3961071b20c988bee574cbf28d6c3ba3b48e9567,antirez,antirez@gmail.com,Wed Jul 6 16:38:05 2016 +0200,1467815885,Fix signess issue in geohashEstimateStepsByRadius().,2.0,1.0,"src/geohash_helper.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,199.0,2.0,0.0047916666666666646,9199.0,209.69565217391303,4680.0,Corrective,True,True,"[""1e6bb9ef0c60c22eab9e8d334be9f83a5845b2bb""]"
3961071b20c988bee574cbf28d6c3ba3b48e9567,1e6bb9ef0c60c22eab9e8d334be9f83a5845b2bb,antirez,antirez@gmail.com,Wed Jul 6 16:39:23 2016 +0200,1467815963,"Remove dead code from geohash_helper.c.The function removed also had potential bugs related to signess of thenexpression, and is not used anyway.n",0.0,6.0,"src/geohash_helper.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,200.0,3.0,0.0009027777777777775,9200.0,1108.6923076923078,4681.0,Corrective,True,,
1e6bb9ef0c60c22eab9e8d334be9f83a5845b2bb,24882e31f2fd52a2750a1953a5e479576e392ee1,antirez,antirez@gmail.com,Wed Jul 6 19:00:43 2016 +0200,1467824443,Fix redis_check_rdb() return value.,3.0,2.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,345.0,14.0,5.292569444444443,9201.0,1.1889441433876111,4682.0,Corrective,True,,
24882e31f2fd52a2750a1953a5e479576e392ee1,eee878cbc5c6c02e2e3e4073d71de2c970305676,antirez,antirez@gmail.com,Wed Jul 6 19:05:44 2016 +0200,1467824744,redis_check_rdb_main(): create shared objects only if needed.Otherwise Valgrind will complain a memory leak under certain tests wherenRDB checking is invoked from within Redis.n,5.0,1.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,346.0,15.0,0.0034837962962962965,9202.0,288.04318936877075,4683.0,None,False,,
eee878cbc5c6c02e2e3e4073d71de2c970305676,51c1d40d0854ae2677c26ed039d01f5ce0f129a3,antirez,antirez@gmail.com,Wed Jul 6 19:12:24 2016 +0200,1467825144,"redis_check_rdb(): the rio structure must be global.The rio structure is referenced in the global 'riostate' structurenin order for the logging functions to be always able to access the statenof the pseudo-loading of the RDB, needed for the check.nnCourtesy of Valgrind.n",1.0,1.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,350.0,16.0,0.0046296296296296285,9203.0,217.0,4684.0,None,False,,
eee878cbc5c6c02e2e3e4073d71de2c970305676,32a549432b119d827693d547def557931bad352a,antirez,antirez@gmail.com,Mon Jul 11 16:22:09 2016 +0200,1468246929,LRU: test-lru.rb improved in different ways.1. Scan keys with pause to account for actual LRU precision.n2. Test cross-DB with 100 keys allocated in DB1.n3. Output results that don't fluctuate depending on number of keys.n4. Output results in percentage to make more sense.n5. Save file instead of outputting to STDOUT.n6. Support running multiple times with average of outputs.n7. Label each square (DIV) with its ID as HTML title.n,180.0,98.0,"utils/lru/README,CAS_DELIMITER,utils/lru/test-lru.rb,CAS_DELIMITER",2.0,1.0,1.0,0.22350515908481447,1.0,62.5,3.0,753.5924537037038,9204.5,1.000924702841801,77.0,None,False,,
32a549432b119d827693d547def557931bad352a 51c1d40d0854ae2677c26ed039d01f5ce0f129a3,6a1c00c9ea8d646acdc66d64633e1a3904509c41,antirez,antirez@gmail.com,Mon Jul 11 16:24:21 2016 +0200,1468247061,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
6a1c00c9ea8d646acdc66d64633e1a3904509c41,b19b2dff46f013b256f6966d3ace0d1cebcc10be,antirez,antirez@gmail.com,Mon Jul 11 16:26:02 2016 +0200,1468247162,LRU: Fix output fixes to new test-lru.rb.,6.0,6.0,"utils/lru/test-lru.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,188.0,3.0,0.0026967592592592594,9206.0,371.8154506437768,78.0,None,False,,
b19b2dff46f013b256f6966d3ace0d1cebcc10be,382991f82ee1cc213e4225ce5f28284974715def,antirez,antirez@gmail.com,Mon Jul 11 19:18:17 2016 +0200,1468257497,"Remove useless memmove() from freeMemoryIfNeeded().We start from the end of the pool to the initial item, zero-ingnevery entry we use or every ghost entry, there is nothing to memmovensince to the right everything should be already set to NULL.n",2.0,7.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,364.0,1.0,5.159710648148149,9207.0,1.1938093176521258,4685.0,Feature Addition,False,,
382991f82ee1cc213e4225ce5f28284974715def,2a1247309a63dc5a0e1593a3a89b78c0e17645d2,antirez,antirez@gmail.com,Tue Jul 12 11:22:41 2016 +0200,1468315361,"redis-benchmark: new option to show server errors on stdout.Disabled by default, can be activated with -e. Maybe the reverse wasnmore safe but departs from the past behavior.n",17.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,823.0,60.0,351.0700578703704,9208.0,1.0028484343155497,4686.0,None,False,,
2a1247309a63dc5a0e1593a3a89b78c0e17645d2,3b9495d20d7deaddb235e1f82bf4ec922a75a030,antirez,antirez@gmail.com,Fri Jul 8 14:17:11 2016 +0200,1467980231,LRU: use C99 variable len stack array in evictionPoolPopulate().,1.0,11.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,359.0,2.0,-3.2090972222222223,9209.0,0.6883858821492719,4687.0,None,False,,
3b9495d20d7deaddb235e1f82bf4ec922a75a030,d8e92a8207d0bafe133c26067e671b1ab6383079,antirez,antirez@gmail.com,Thu Jul 7 15:01:58 2016 +0200,1467896518,Move prototype of evictionPoolAlloc() in server.h.,3.0,2.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,13.0,2741.0,156.0,0.9846296296296296,9210.5,1.7617077299228887,4689.0,None,False,,
d8e92a8207d0bafe133c26067e671b1ab6383079,965905c9f22c52abe5413e10a1ea919bb9729c94,antirez,antirez@gmail.com,Thu Jul 7 15:04:25 2016 +0200,1467896665,Move the struct evictionPoolEntry() into only file using it.Local scope is always better when possible.n,22.0,12.0,"src/evict.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9596868937742168,13.0,1087.5,84.0,-0.4827488425925926,9212.5,-0.03482428908784563,4691.0,Perfective,False,,
965905c9f22c52abe5413e10a1ea919bb9729c94,e64bf05f43cacec7bff5fd72dffd9cdb8235762d,antirez,antirez@gmail.com,Tue Jul 12 12:31:37 2016 +0200,1468319497,"LRU: cache SDS strings in the eviction pool.To destroy and recreate the pool[].key element is slow, so we allocatenin pool[].cached SDS strings that can account up to 255 chars keys andntry to reuse them. This provides a solid 20% performance improvementnin real world workload alike benchmarks.n",29.0,13.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,370.0,4.0,4.893888888888889,9214.0,1.2043364740606195,4692.0,None,False,,
e64bf05f43cacec7bff5fd72dffd9cdb8235762d,e423f76e75bea83106c271b56d516c20cf74a16a,antirez,antirez@gmail.com,Wed Jul 13 10:45:37 2016 +0200,1468399537,LRU: Make cross-database choices for eviction.The LRU eviction code used to make local choices: for each DB visited itnselected the best key to evict. This was repeated for each DB. Howevernthis means that there could be DBs with very frequently accessed keysnthat are targeted by the LRU algorithm while there were other DBs withnmany better candidates to expire.nnThis commit attempts to fix this problem for the LRU policy. However thenTTL policy is still not fixed by this commit. The TTL policy will benfixed in a successive commit.nnThis is an initial (partial because of TTL policy) fix for issue #2647.n,161.0,110.0,"src/evict.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.1953236244347995,13.0,1952.666666666667,164.0,4.189548611111111,9216.0,1.4357357701824396,4695.0,None,False,True,"[""f0e09bf8030680ad22682f2040f03b14ffd592a5"", ""d1a005ab3963c16b65e805675a76f0e40c723158""]"
e423f76e75bea83106c271b56d516c20cf74a16a,09fcb002490815f268c838b5b210aacd8314686e,antirez,antirez@gmail.com,Thu Jul 14 15:21:48 2016 +0200,1468502508,"LFU: Simulation of the algorithm planned for Redis.We have 24 total bits of space in each object in order to implementnan LFU (Least Frequently Used) eviction policy.nnWe split the 24 bits into two fields:nn  8 bits  16 bitsn+--------+----------------+n| LOG_C  | Last decr time |n+--------+----------------+nnLOG_C is a logarithmic counter that provides an indication of the accessnfrequency. However this field must also be deceremented otherwise what usednto be a frequently accessed key in the past, will remain ranked like thatnforever, while we want the algorithm to adapt to access pattern changes.nnSo the remaining 16 bits are used in order to store the decrement time,na reduced-precision unix time (we take 16 bits of the time convertednin minutes since we don't care about wrapping around) where the LOG_Cncounter is halved if it has an high value, or just decremented if itnhas a low value.nnNew keys don't start at zero, in order to have the ability to collectnsome accesses before being trashed away, so they start at COUNTER_INIT_VAL.nThe logaritmic increment performed on LOG_C takes care of COUNTER_INIT_VALnwhen incrementing the key, so that keys starting at COUNTER_INIT_VALn(or having a smaller value) have a very high chance of being incrementednon access.nnThe simulation starts with a power-law access pattern, and later convertsninto a flat access pattern in order to see how the algorithm adapts.nCurrenty the decrement operation period is 1 minute, however note thatnit is not guaranteed that each key will be scanned 1 time every minute,nso the actual frequency can be lower. However under high load, we accessn3/5 keys every newly inserted key (because of how Redis eviction works).nnThis is a work in progress at this point to evaluate if this works well.n",163.0,0.0,"utils/lru/lfu-simulation.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9218.0,0.0,79.0,None,False,,
09fcb002490815f268c838b5b210aacd8314686e,f50dc38bc29373b0f74db043cdb200995a324cf3,antirez,antirez@gmail.com,Thu Jul 14 15:51:51 2016 +0200,1468504311,LRU simulator: fix new entry creation.,2.0,2.0,"utils/lru/lfu-simulation.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,163.0,1.0,0.02086805555555556,9219.0,48.920133111480865,80.0,None,False,,
f50dc38bc29373b0f74db043cdb200995a324cf3,fc92c667f7181a287fa97a028de16bdd037318b6,antirez,antirez@gmail.com,Thu Jul 14 15:55:17 2016 +0200,1468504517,LRU simulator: fix new entry creation decr time.,1.0,1.0,"utils/lru/lfu-simulation.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,163.0,2.0,0.002384259259259259,9220.0,420.41747572815535,81.0,None,False,,
fc92c667f7181a287fa97a028de16bdd037318b6,ada70c7c532f8a1d1fe946dd7663c9e48d834a02,antirez,antirez@gmail.com,Thu Jul 14 16:06:36 2016 +0200,1468505196,LFU simulator: remove dead code.,0.0,5.0,"utils/lru/lfu-simulation.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,163.0,3.0,0.007858796296296296,9221.0,128.2459499263623,82.0,None,False,,
ada70c7c532f8a1d1fe946dd7663c9e48d834a02,5d07984c5d48d6253ea5884d69da3f06cdc90f1b,antirez,antirez@gmail.com,Fri Jul 15 12:12:52 2016 +0200,1468577572,LFU: Redis object level implementation.Implementation of LFU maxmemory policy for anything related to Redisnobjects. Still no actual eviction implemented.n,142.0,15.0,"src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.6169928041871031,13.0,1243.2,543.0,6.53830324074074,9224.0,1.050444516314522,4700.0,None,False,True,"[""e0582b35984f8bc215f4a31860bcee5679f75330""]"
5d07984c5d48d6253ea5884d69da3f06cdc90f1b,b8450d7cc515a55f0e1278f70806c12cb6d9fa58,antirez,antirez@gmail.com,Mon Jul 18 10:53:02 2016 +0200,1468831982,redis-cli LRU test mode: remove newline from key names.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2697.0,176.0,12.815532407407408,9227.0,1.07803031260894,4701.0,Preventative,False,,
b8450d7cc515a55f0e1278f70806c12cb6d9fa58,24dd4a8f0444377af55cb1842ff0cfd5a8f74788,antirez,antirez@gmail.com,Mon Jul 18 10:56:11 2016 +0200,1468832171,redis-cli LRU test mode: randomize value of key when setting.This way it is possible from an observer to tell when the key isnreplaced with a new one having the same name.n,4.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2697.0,177.0,0.0021875,9228.0,458.1428571428571,4702.0,Preventative,False,,
24dd4a8f0444377af55cb1842ff0cfd5a8f74788,a8e2d0849e2a40f8bec14cd1b7ff170c17f772c3,antirez,antirez@gmail.com,Mon Jul 18 13:49:31 2016 +0200,1468842571,LFU: Initial naive eviction cycle.It is possible to get better results by using the pool like in the LRUncase. Also from tests during the morning I believe the currentnimplementation has issues in the frequency decay function that shouldndecrease the counter at periodic intervals.n,49.0,4.0,"src/db.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",3.0,1.0,1.0,1.225153943904632,13.0,844.0,269.0,3.0671180555555555,9230.0,1.1992460348906977,4705.0,None,False,,
a8e2d0849e2a40f8bec14cd1b7ff170c17f772c3,dbce190ad018fc757d9c494952531db31eaac700,antirez,antirez@gmail.com,Mon Jul 18 14:19:38 2016 +0200,1468844378,LFU: Fix bugs in frequency decay code.,2.0,2.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,561.0,8.0,0.02091435185185185,9232.0,48.81405644714997,4706.0,None,False,,
dbce190ad018fc757d9c494952531db31eaac700,6416ab19d0bd51fa90c17d856baebd581a7d991c,antirez,antirez@gmail.com,Mon Jul 18 18:17:57 2016 +0200,1468858677,LFU: Use the LRU pool for the LFU algorithm.Verified to have better real world performances with power-law accessnpatterns because of the data accumulated across calls.n,25.0,36.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,561.0,9.0,0.16549768518518518,9233.0,7.0423805860549695,4707.0,None,False,,
6416ab19d0bd51fa90c17d856baebd581a7d991c,6854c7b9ee16595f74a773b911b6a195384e9665,antirez,antirez@gmail.com,Wed Jul 20 15:00:35 2016 +0200,1469019635,LFU: make counter log factor and decay time configurable.,95.0,14.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,2.0,2.0,1.200029234381333,13.0,1826.6,533.0,11.279219907407406,9236.0,1.0221037743373294,4711.0,None,False,True,"[""e4e5a670e7e28485d6ba812759d7faabd90966d2""]"
6854c7b9ee16595f74a773b911b6a195384e9665,9f1b7ab2ed820384e7fa0dca5987e2d644576286,antirez,antirez@gmail.com,Wed Jul 20 19:02:20 2016 +0200,1469034140,test-lru.rb: support for testing volatile-ttl policy.,49.0,14.0,"utils/lru/test-lru.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,188.0,4.0,9.108541666666667,9239.0,1.109787058850438,83.0,Preventative,False,,
9f1b7ab2ed820384e7fa0dca5987e2d644576286,2d5eb1f1a03b9109137e2fbfe8df488a09e4cd6c,antirez,antirez@gmail.com,Wed Jul 20 19:53:27 2016 +0200,1469037207,Volatile-ttl eviction policy implemented in terms of the pool.Precision of the eviction improved sensibly. Also this allows us to havena single code path for most eviction types.n,25.0,48.0,"src/evict.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4986751363204344,13.0,1190.5,96.0,0.2033796296296297,9240.5,4.687684953334851,4713.0,None,False,,
2d5eb1f1a03b9109137e2fbfe8df488a09e4cd6c,e0582b35984f8bc215f4a31860bcee5679f75330,antirez,antirez@gmail.com,Thu Jul 21 11:14:15 2016 +0200,1469092455,Fix maxmemory shared integer check bug introduced with LFU.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,722.0,88.0,2.8921759259259265,9242.0,1.345760432840838,4714.0,Corrective,True,,
e0582b35984f8bc215f4a31860bcee5679f75330,780a8b1d766daa6504f701bf09f6a4938179ba66,antirez,antirez@gmail.com,Thu Jul 21 12:10:56 2016 +0200,1469095856,Replication: start BGSAVE for replication always in replicationCron().This makes the replication code conceptually simpler by removing thensynchronous BGSAVE trigger in syncCommand(). This also means thatnsocket and disk BGSAVE targets are handled by the same code.n,15.0,12.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2360.0,176.0,231.025,9243.0,1.004328535872741,4715.0,None,False,,
780a8b1d766daa6504f701bf09f6a4938179ba66,0a628e51025c4307c70cb00094dff9cdd1732f31,antirez,antirez@gmail.com,Thu Jul 21 18:34:53 2016 +0200,1469118893,"Avoid simultaneous RDB and AOF child process.This patch, written in collaboration with Oran Agra (@oranagra) is a companionnto 780a8b1. Together the two patches should avoid that the AOF and RDB savingnprocesses can be spawned at the same time. Previously conditions thatncould lead to two saving processes at the same time were:nn1. When AOF is enabled via CONFIG SET and an RDB saving process isn   already active.nn2. When the SYNC command decides to start an RDB saving process ASAP inn   order to serve a new slave that cannot partially resynchronize (butn   only if we have a disk target for replication, for disklessn   replication there is not such a problem).nnCondition 1 is not very severe but 2 can happen often and isndefinitely good at degrading Redis performances in an unexpected way.nnThe two commits have the effect of always spawning RDB savings fornreplication in replicationCron() instead of attempting to start an RDBnsave synchronously. Moreover when a BGSAVE or AOF rewrite must benperformed, they are instead just postponed using flags that will try tonperform such operations ASAP.nnFinally the BGSAVE command was modified in order to accept a SCHEDULEnoption so that if an AOF rewrite is in progress, when this option isngiven, the command no longer returns an error, but instead schedules annRDB rewrite operation for when it will be possible to start it.n",51.0,8.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.5046880110342575,13.0,2206.5,485.0,21.62724247685185,9245.5,1.0126622302475776,4719.0,None,False,True,"[""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
0a628e51025c4307c70cb00094dff9cdd1732f31,3e9ce38b0a9f19d9c5cd792f260c7fdbbe5e98ee,antirez,antirez@gmail.com,Fri Jul 22 10:51:25 2016 +0200,1469177485,"Sentinel: check Slave INFO state more often when disconnected.During the initial handshake with the master a slave will report to havena very high disconnection time from its master (since technically it wasndisconnected since forever, so the current UNIX time in seconds isnreported).nnHowever when the slave is connected again the Sentinel may re-scan thenINFO output again only after 10 seconds, which is a long time. Duringnthis time Sentinels will consider this instance unable to failover, sona useless delay is introduced.nnActaully this hardly happened in the practice because when a slave'snmaster is down, the INFO period for slaves changes to 1 second. Howevernwhen a manual failover is attempted immediately after adding slavesn(like in the case of the Sentinel unit test), this problem may happen.nnThis commit changes the INFO period to 1 second even in the case thenslave's master is not down, but the slave reported to be disconnectednfrom the master (by publishing, last time we checked, a masterndisconnection time field in INFO).nnThis change is required as a result of an unrelated change in thenreplication code that adds a small delay in the master-slave firstnsynchronization.n",10.0,3.0,"src/sentinel.c,CAS_DELIMITER,tests/sentinel/tests/05-manual.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7793498372920852,13.0,2187.0,228.0,390.8419444444445,9248.5,1.0289348396157474,702.0,None,False,,
3e9ce38b0a9f19d9c5cd792f260c7fdbbe5e98ee,8b76d55f2e8550cb473c87d7355c1f0e24a3afda,antirez,antirez@gmail.com,Fri Jul 22 16:39:22 2016 +0200,1469198362,Sentinel: new test unit 07 that tests master down conditions.,68.0,0.0,"tests/sentinel/tests/07-down-conditions.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9250.0,0.0,703.0,None,False,,
8b76d55f2e8550cb473c87d7355c1f0e24a3afda,03f5b508e5e939c941fb0c456b0f48b8e7a2c657,antirez,antirez@gmail.com,Fri Jul 22 17:03:18 2016 +0200,1469199798,"Replication: when possible start RDB saving ASAP.In a previous commit the replication code was changed in order toncentralize the BGSAVE for replication trigger in replicationCron(),nhowever after further testings, the 1 second delay imposed by thisnchange is not acceptable.nnSo now the BGSAVE is only delayed if the AOF rewriting process isnactive. However past comments made sure that replicationCron() is alwaysnable to trigger the BGSAVE when needed, making the code generally morenrobust.nnThe new code is more similar to the initial @oranagra patch where thenBGSAVE was delayed only if an AOF rewrite was in progress.nnTrivia: delaying the BGSAVE uncovered a minor Sentinel issue that is nownfixed.n",8.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2363.0,177.0,1.2030324074074077,9251.0,1.8312328029093148,4721.0,None,False,True,"[""d982f443727bb226652d5c6a8320ed1962df1727""]"
03f5b508e5e939c941fb0c456b0f48b8e7a2c657,356a6304ec77783e7fdaf00668a09dc293b810a0,antirez,antirez@gmail.com,Wed Jul 27 11:07:23 2016 +0200,1469610443,"Multiple GEORADIUS bugs fixed.By grepping the continuous integration errors log a number of GEORADIUSntests failures were detected.nnFortunately when a GEORADIUS failure happens, the test suite logs enoughninformation in order to reproduce the problem: the PRNG seed,ncoordinates and radius of the query.nnBy reproducing the issues, three different bugs were discovered andnfixed in this commit. This commit also improves the already goodnreporting of the fuzzer and adds the failure vectors as regressionntests.nnThe issues found:nn1. We need larger squares around the poles in order to cover the areanrequested by the user. There were already checks in order to use ansmaller step (larger squares) but the limit set (+/- 67 degrees) is notnenough in certain edge cases, so 66 is used now.nn2. Even near the equator, when the search area center is very near thenedge of the square, the north, south, west or ovest square may not benable to fully cover the specified radius. Now a test is performed at thenedge of the initial guessed search area, and larger squares are used inncase the test fails.nn3. Because of rounding errors between Redis and Tcl, sometimes the testnsignaled false positives. This is now addressed.nnWhenever possible the original code was improved a bit in other ways. Andebugging example stanza was added in order to make the next debuggingnsession simpler when the next bug is found.n",199.0,21.0,"src/debugmacro.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/geohash.c,CAS_DELIMITER,src/geohash.h,CAS_DELIMITER,src/geohash_helper.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",6.0,2.0,2.0,1.7618931440648011,13.0,268.0,70.0,47.848464506172846,9254.5,0.8412995887155944,704.0,Corrective,True,True,"[""b00e1891c04bd375bb7d9877397c675335f8b40c""]"
356a6304ec77783e7fdaf00668a09dc293b810a0,55385f99debddb23da8a8045273c88b50be24c0f,antirez,antirez@gmail.com,Wed Jul 27 16:41:20 2016 +0200,1469630480,"Ability of slave to announce arbitrary ip/port to master.This feature is useful, especially in deployments using Sentinel innorder to setup Redis HA, where the slave is executed with NAT or portnforwarding, so that the auto-detected port/ip addresses, as listed innthe INFO replication output of the master, or as provided by thenROLE command, don't match the real addresses at which the slave isnreachable for connections.n",129.0,17.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,2.0,2.0,2.1363059434274203,13.0,2160.833333333333,959.0,16.036043595679008,9260.5,1.0430135549395951,4731.0,Feature Addition,False,,
55385f99debddb23da8a8045273c88b50be24c0f,8966d4ca5e2d5376c1bfee326335e235d2bf762d,antirez,antirez@gmail.com,Thu Jul 28 14:15:31 2016 +0200,1469708131,Changelog format modified to be less verbose.,5.0,1.0,"utils/releasetools/changelog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,26.0,1.0,84.64831018518518,9264.0,1.0118135849116456,84.0,None,False,,
8966d4ca5e2d5376c1bfee326335e235d2bf762d,9d524114eda67dedc38a9f97c9d5f3a5c3747829,antirez,antirez@gmail.com,Fri Jul 29 11:28:16 2016 +0200,1469784496,Update linenoise to fix insecure redis-cli history file creation.The problem was fixed in antirez/linenoise repository applying a patchncontributed by @lamby. Here the new version is updated in the Redisnsource tree.nnClose #1418nClose #3322n,6.0,1.0,"deps/linenoise/linenoise.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1194.0,12.0,106.9541898148148,9265.0,1.009349797345307,903.0,Corrective,True,,
9d524114eda67dedc38a9f97c9d5f3a5c3747829,9424fe4580abdebd0329d1915601591aec33031c,antirez,antirez@gmail.com,Tue Aug 2 10:32:36 2016 +0200,1470126756,Remove extra - from ASCII horizontal bar in comment.,2.0,2.0,"src/modules/hellotype.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,438.5,19.0,50.02460648148149,9266.5,1.014992621686642,4733.0,None,False,,
9424fe4580abdebd0329d1915601591aec33031c,d982f443727bb226652d5c6a8320ed1962df1727,Qu Chen,quchen@amazon.com,Mon Aug 1 12:16:17 2016 -0700,1470078977,Fix a bug to delay bgsave while AOF rewrite in progress for replication,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2419.0,179.0,5.1909375,0.0,0.0,0.0,Corrective,True,,
d982f443727bb226652d5c6a8320ed1962df1727,7829e4ed2c4cda26a9891216ecf97c0b6e637195,antirez,antirez@gmail.com,Tue Aug 2 15:29:04 2016 +0200,1470144544,"Modules: StringAppendBuffer() and ability to retain strings.RedisModule_StringRetain() allows, when automatic memory management isnon, to keep string objects living after the callback returns. Can alsonbe used in order to use Redis reference counting of objects insidenmodules.nnThe reason why this is useful is that sometimes when implementing newndata types we want to reference RedisModuleString objects inside thenmodule private data structures, so those string objects must be validnafter the callback returns even if not referenced inside the Redis keynspace.n",91.0,5.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,0.6219446462825325,13.0,1157.0,101.0,51.95665895061728,9269.0,1.0133495562420345,4736.0,None,False,True,"[""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
7829e4ed2c4cda26a9891216ecf97c0b6e637195,04340e1ff100b080e520e06d14c0c7e95a194909,antirez,antirez@gmail.com,Wed Aug 3 10:23:03 2016 +0200,1470212583,Modules: initial draft for a testing module.,235.0,93.0,"src/module.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.0082092439177008,13.0,1173.3333333333333,100.0,0.5249922839506173,9272.0,2.058216611061303,4739.0,None,False,,
04340e1ff100b080e520e06d14c0c7e95a194909,ede6e22cd398a048a0c25543017dbb9b477b9963,antirez,antirez@gmail.com,Wed Aug 3 10:56:26 2016 +0200,1470214586,Fix comment over 80 cols.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3682.0,81.0,6.7604861111111125,9274.0,1.1479183572844656,4740.0,Corrective,True,,
ede6e22cd398a048a0c25543017dbb9b477b9963,a81a92ca2ceba364f4bb51efde9284d939e7ff47,antirez,antirez@gmail.com,Wed Aug 3 11:12:13 2016 +0200,1470215533,"Security: Cross Protocol Scripting protection.This is an attempt at mitigating problems due to cross protocolnscripting, an attack targeting services using line oriented protocolsnlike Redis that can accept HTTP requests as valid protocol, byndiscarding the invalid parts and accepting the payloads sent, fornexample, via a POST request.nnFor this to be effective, when we detect POST and Host: and terminatenthe connection asynchronously, the networking code was modified in ordernto never process further input. It was later verified that in anpipelined request containing a POST command, the successive commands arennot executed.n",27.0,2.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.574828144380386,13.0,2478.6666666666665,422.0,4.517951388888889,9276.0,1.1229663177802287,4743.0,None,False,,
a81a92ca2ceba364f4bb51efde9284d939e7ff47,13f18d2b17b577bfc9b0d28397cb7be3bb291b90,antirez,antirez@gmail.com,Wed Aug 3 18:09:36 2016 +0200,1470240576,Modules: handle NULL replies more gracefully.After all crashing at every API misuse makes everybody's life morencomplex.n,6.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3239.0,73.0,0.3239930555555556,9278.0,4.086485907191083,4744.0,None,False,,
13f18d2b17b577bfc9b0d28397cb7be3bb291b90,e7f1798179c3b4e01a617e98ec7bb3d258642711,antirez,antirez@gmail.com,Wed Aug 3 18:10:11 2016 +0200,1470240611,Modules: basic call/reply tests in test module.,71.0,0.0,"src/modules/testmodule.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,125.0,1.0,0.32439814814814816,9279.0,4.082631654060226,4745.0,None,False,,
e7f1798179c3b4e01a617e98ec7bb3d258642711,4bd72ab729135a4cde76bffe0fb119d9aeb72672,Guo Xiao,guoxiao08@gmail.com,Thu Aug 4 15:09:42 2016 +0800,1470294582,Use the standard predefined identifier __func__ (since C99)Fix warning: ISO C does not support '__FUNCTION__' predefined identifiern[-Wpedantic]n,1.0,1.0,"src/debugmacro.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,41.0,1.0,7.918275462962963,0.0,0.0,0.0,Corrective,True,,
e7f1798179c3b4e01a617e98ec7bb3d258642711 4bd72ab729135a4cde76bffe0fb119d9aeb72672,c5414cef71c4ff1501ee62cbdfbb6cec52ca4296,Salvatore Sanfilippo,antirez@gmail.com,Thu Aug 4 10:25:53 2016 +0200,1470299153,Merge pull request #3429 from guoxiao/warningUse the standard predefined identifier __func__ (since C99),,,,,,,,,,,,,,,Merge,False,,
c5414cef71c4ff1501ee62cbdfbb6cec52ca4296 d0f53079e31641c860ea577f876f4361d23f53f3,9f779b33b54615d4bbaaafadfc5d5f9b93e2166b,Salvatore Sanfilippo,antirez@gmail.com,Fri Aug 5 15:10:41 2016 +0200,1470402641,Merge pull request #3340 from rojingeorge/unstableDisplay the nodes' proper summary once the cluster is created using redis-trib,,,,,,,,,,,,,,,Merge,False,,
9f779b33b54615d4bbaaafadfc5d5f9b93e2166b,4426cb11e28dd35c08ac45282fb2a7a42a7638af,antirez,antirez@gmail.com,Tue Aug 9 11:07:32 2016 +0200,1470733652,RDB AOF preamble: WIP 1.,72.0,35.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.0517894948360451,13.0,1334.0,435.0,31.587236689814812,9281.5,1.0241207976526443,4749.0,None,False,,
4426cb11e28dd35c08ac45282fb2a7a42a7638af,feda52381de20a6ac8ec993d20fdbaca863c0a75,antirez,antirez@gmail.com,Tue Aug 9 16:41:40 2016 +0200,1470753700,RDB AOF preamble: WIP 2.,37.0,28.0,"src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.362708774596242,13.0,2187.4,694.0,3.9850254629629633,9286.0,1.9120934439716688,4754.0,None,False,,
feda52381de20a6ac8ec993d20fdbaca863c0a75,f1c32f0dcbe850ccc057ee1fd834c7b4f3eb0aff,antirez,antirez@gmail.com,Thu Aug 11 15:27:23 2016 +0200,1470922043,RDB AOF preamble: WIP 3 (RDB loading refactoring).,38.0,29.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1855.0,175.0,1.948414351851852,9289.0,1.513237853667809,4755.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
f1c32f0dcbe850ccc057ee1fd834c7b4f3eb0aff,543e25efa6e25e96f976f68ed16aa0c2ff6fa91b,antirez,antirez@gmail.com,Thu Aug 11 15:42:28 2016 +0200,1470922948,RDB AOF preamble: WIP 4 (Mixed RDB/AOF loading).,33.0,6.0,"src/aof.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.17203694935311378,13.0,834.5,176.0,2.0749074074074074,9290.5,1.3757340427220277,4757.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
9f779b33b54615d4bbaaafadfc5d5f9b93e2166b,e0d4146620b841ad11e981e4cdb335cb34951895,antirez,antirez@gmail.com,Thu Aug 11 19:53:01 2016 +0200,1470937981,Sentinel example config: warn about protected mode.,16.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,206.0,21.0,573.3680671296296,9292.0,1.0017440803862798,1387.0,None,False,,
543e25efa6e25e96f976f68ed16aa0c2ff6fa91b,764cc69e2bf447e72fc0858818c8fbd741feb525,antirez,antirez@gmail.com,Wed Aug 24 15:33:39 2016 +0200,1472045619,Document RDB preamble in AOF rewrites in redis.conf.,14.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1204.0,168.0,27.952997685185185,9293.0,1.0357743384542255,1388.0,Non Functional,False,,
764cc69e2bf447e72fc0858818c8fbd741feb525,dacb69ed007b9b1a0767cac420904b7af020f9e4,antirez,antirez@gmail.com,Wed Aug 24 15:39:39 2016 +0200,1472045979,RDB AOF preamble: test it in the aofrw unit.,52.0,49.0,"tests/unit/aofrw.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,210.0,10.0,649.7693518518519,9294.0,1.0015390076450206,705.0,None,False,,
e0d4146620b841ad11e981e4cdb335cb34951895,9f76d82689e1d31189761f9ea4ba7b6f42ed33d1,antirez,antirez@gmail.com,Thu Sep 1 11:04:22 2016 +0200,1472720662,sds: don't check for impossible string size in 32 bit systems.,3.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1262.0,72.0,115.11925925925928,9295.0,1.0086866438025623,4758.0,None,False,True,"[""b05a22e261bf2ed278d6b1a6afb3ade7ff4cacfc""]"
9f76d82689e1d31189761f9ea4ba7b6f42ed33d1,57a0db94956441ac14a252cd09daa45e3f3a9453,antirez,antirez@gmail.com,Thu Sep 1 11:08:44 2016 +0200,1472720924,"Fix rdb.c var types when calling rdbLoadLen().Technically as soon as Redis 64 bit gets proper support for loadingncollections and/or DBs with more than 2^32 elements, the 32 bit versionnshould be modified in order to check if what we read from rdbLoadLen()noverflows. This would only apply to huge RDB files created with a 64 bitninstance and later loaded into a 32 bit instance.n",3.0,3.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1864.0,176.0,20.82038194444445,9296.0,1.0480298585620726,4759.0,Corrective,True,,
57a0db94956441ac14a252cd09daa45e3f3a9453,91a59e03a8be94cc8176637ccee4b0c92e6d5f58,antirez,antirez@gmail.com,Wed Sep 7 10:32:57 2016 +0200,1473237177,dict.c benchmark.,60.0,1.0,"src/Makefile,CAS_DELIMITER,src/dict.c,CAS_DELIMITER",2.0,1.0,1.0,0.4090731390438265,13.0,677.0,199.0,98.77598958333333,9297.5,1.010496434453863,4761.0,None,False,,
91a59e03a8be94cc8176637ccee4b0c92e6d5f58,1074f73629daab5937218ebac264704385fca8a3,antirez,antirez@gmail.com,Wed Sep 7 10:44:19 2016 +0200,1473237859,dict.c benchmark: take optional count argument.,11.0,3.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1141.0,66.0,0.007893518518518518,9299.0,127.68621700879768,4762.0,None,False,,
1074f73629daab5937218ebac264704385fca8a3,ed6a4517f583c44da1559768e238d71a2a4667b9,antirez,antirez@gmail.com,Wed Sep 7 10:53:24 2016 +0200,1473238404,dict.c benchmark improvements.,27.0,4.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1149.0,67.0,0.006307870370370371,9300.0,159.53211009174308,4763.0,None,False,,
ed6a4517f583c44da1559768e238d71a2a4667b9,0f708ab2a91ab399a981974dd546b47cfddb09ae,antirez,antirez@gmail.com,Wed Sep 7 11:06:03 2016 +0200,1473239163,dict.c benchmark: finish rehashing before testing lookups.,5.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1172.0,68.0,0.008784722222222222,9301.0,114.83399209486169,4764.0,None,False,,
0f708ab2a91ab399a981974dd546b47cfddb09ae,bd6c4cade6d2d3c19309cf8251656a0336d6bd7f,antirez,antirez@gmail.com,Wed Sep 7 12:34:37 2016 +0200,1473244477,dict.c benchmark: mixed del/insert benchmark.,11.0,0.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1177.0,69.0,0.06150462962962961,9302.0,17.258938652615733,4765.0,None,False,,
bd6c4cade6d2d3c19309cf8251656a0336d6bd7f,0d179d17ba8a93d0a74ea8ecbbe383cc884fcb85,antirez,antirez@gmail.com,Wed Sep 7 15:27:25 2016 +0200,1473254845,dict.c benchmark minor improvements.,19.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1188.0,70.0,0.12,9303.0,9.333333333333334,4766.0,None,False,,
0d179d17ba8a93d0a74ea8ecbbe383cc884fcb85,24811fcb1b824b4f0e115ce2713f89f85cd006b9,oranagra,oran@redislabs.com,Mon Jul 4 23:28:32 2016 +0300,1467664112,crash log - add hex dump of function code,22.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1143.0,122.0,14.014189814814815,13.0,1.0713562477184997,13.0,Feature Addition,False,True,"[""d35deb2327fb6caabf509f243ff1a12bc3c5c929"", ""6782e774f13499cf51e4301ad4f1262acde664e1""]"
0d179d17ba8a93d0a74ea8ecbbe383cc884fcb85,f9c9b4bf4c40820350bf037d6c33f28092b70423,wyx,wyx@zhihu.com,Fri Sep 9 10:22:57 2016 +0800,1473387777,fix memory error on module unload,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3245.0,74.0,36.4259375,0.0,0.0,0.0,Corrective,True,,
24811fcb1b824b4f0e115ce2713f89f85cd006b9,6211e77ab643b6370a0b3cc2a07946ce31d6ad69,antirez,antirez@gmail.com,Fri Sep 9 10:59:29 2016 +0200,1473411569,crash log - improve code dump with more info and called symbols.,59.0,20.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1165.0,123.0,66.52149305555554,9304.0,1.0150327353471282,4767.0,None,False,,
6211e77ab643b6370a0b3cc2a07946ce31d6ad69,d35deb2327fb6caabf509f243ff1a12bc3c5c929,antirez,antirez@gmail.com,Fri Sep 9 11:15:10 2016 +0200,1473412510,"debug.c: no need to define _GNU_SOURCE, is defined in fmacros.h.",0.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1204.0,124.0,0.010891203703703705,9305.0,92.817215727949,4768.0,Corrective,True,,
d35deb2327fb6caabf509f243ff1a12bc3c5c929,92038286e8c047966f779e8d7eefa6d2786bfa43,oranagra,oran@redislabs.com,Sun Aug 21 20:39:15 2016 +0300,1471801155,fix tcp binding when IPv6 is unsupported,14.0,10.0,"src/anet.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,13.0,2170.0,139.0,224.70168981481478,14.5,1.0022560181780849,15.0,Corrective,True,True,"[""f9624813aff019f95e370524152d130d22ee37f3""]"
92038286e8c047966f779e8d7eefa6d2786bfa43,f9624813aff019f95e370524152d130d22ee37f3,antirez,antirez@gmail.com,Fri Sep 9 14:59:48 2016 +0200,1473425988,fix the fix for the TCP binding.This commit attempts to fix a problem with PR #3467.n,15.0,10.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3689.0,85.0,18.8059375,9306.0,1.0531746954917829,4769.0,Corrective,True,True,"[""a28683217073e8670bba79ff1f38d93fb3e90d65""]"
f9624813aff019f95e370524152d130d22ee37f3 dacb69ed007b9b1a0767cac420904b7af020f9e4,3793afa0ba4a214c1e25ed74309d0594e7a1490c,antirez,antirez@gmail.com,Fri Sep 9 15:03:21 2016 +0200,1473426201,Merge branch 'aofrdb' into unstable,,,,,,,,,,,,,,,Merge,False,,
d35deb2327fb6caabf509f243ff1a12bc3c5c929,56dba3adcc7f88f254c30d68448e5457c0463d57,antirez,antirez@gmail.com,Fri Sep 9 16:01:29 2016 +0200,1473429689,Example modules: Add C99 standard to cflags.,2.0,2.0,"src/modules/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,37.0,4.0,38.022511574074066,9307.0,1.0263002089709892,4770.0,None,False,,
56dba3adcc7f88f254c30d68448e5457c0463d57 3793afa0ba4a214c1e25ed74309d0594e7a1490c,c6dc8d5288c3196179b20479346bc08df70afa7a,antirez,antirez@gmail.com,Fri Sep 9 16:01:43 2016 +0200,1473429703,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
c6dc8d5288c3196179b20479346bc08df70afa7a f9c9b4bf4c40820350bf037d6c33f28092b70423,d680eb6dbdf2d2030cb96edfb089be1e2a775ac1,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 9 16:05:06 2016 +0200,1473429906,Merge pull request #3492 from wyxustcsa09/fix-memoryfix memory error on module unload,,,,,,,,,,,,,,,Merge,False,,
d680eb6dbdf2d2030cb96edfb089be1e2a775ac1,27d08fb8f0c5cbb2258dd6df6722228693d218c4,Alexander Zhukov,zhukovaa90@gmail.com,Mon Sep 12 13:53:47 2016 +0300,1473677627,Fix an article usage,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1218.0,169.0,18.88898148148148,0.0,0.0,0.0,Corrective,True,,
d680eb6dbdf2d2030cb96edfb089be1e2a775ac1,68bf45fa1e77c7e2e3f3ab4a7894f9bc1a1da57b,oranagra,oran@redislabs.com,Mon May 9 18:01:09 2016 +0300,1462806069,Optimize repeated keyname hashing.(Change cherry-picked and modified by @antirez from a larger commitnprovided by @oranagra in PR #3223).n,56.0,59.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",5.0,1.0,1.0,1.5463575922946484,13.0,1950.8,508.0,1.02280555555555,18.0,1.045138729017554,20.0,None,False,,
68bf45fa1e77c7e2e3f3ab4a7894f9bc1a1da57b,8c24325f8f1017d49596201903d8dd3c4da57482,oranagra,oran@redislabs.com,Mon May 9 18:01:09 2016 +0300,1462806069,Adding objectComputeSize() function.,113.0,0.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,722.0,89.0,-72.75909722222222,21.0,0.9862560141868476,21.0,Feature Addition,False,,
8c24325f8f1017d49596201903d8dd3c4da57482,89dec6921d8fa0ffa0226b9f4d99f373d4d16cfd,antirez,antirez@gmail.com,Tue Sep 13 10:26:36 2016 +0200,1473755196,"objectComputeSize(): estimate collections sampling N elements.For most tasks, we need the memory estimation to be O(1) by default.nThis commit also implements an initial MEMORY command.nNote that objectComputeSize() takes the number of samples to check asnargument, so MEMORY should be able to get the sample size as optionnto make precision VS CPU tradeoff tunable.nnRelated to: PR #3223.n",51.0,31.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.3207683390885857,13.0,2125.6666666666665,267.0,55.09194058641975,9309.0,1.007200745697095,4773.0,None,False,True,"[""8c84c962cfb6359401c2df92f79d7e848a34802f"", ""2564963dc8a9894f7b066988808af7e401f572e8"", ""5113a53df6cd08f1f35ac9335531ca4f444a5fea""]"
89dec6921d8fa0ffa0226b9f4d99f373d4d16cfd,8c84c962cfb6359401c2df92f79d7e848a34802f,antirez,antirez@gmail.com,Tue Sep 13 17:39:22 2016 +0200,1473781162,MEMORY OVERHEAD implemented (using Oran Agra initial implementation).This code was extracted from @oranagra PR #3223 and modified in ordernto provide only certain amounts of information compared to the originalncode. It was also moved from DEBUG to the newly introduced MEMORYncommand. Thanks to Oran for the implementation and the PR.nnIt implements detailed memory usage stats that can be useful in bothnprovisioning and troubleshooting memory usage in Redis.n,104.0,2.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.26242731887210463,13.0,2132.333333333333,270.0,0.3005324074074074,9312.0,3.0334283293537703,4776.0,Corrective,True,,
8c84c962cfb6359401c2df92f79d7e848a34802f,afcbcc0e58749ebbebcd595c120d17a0e3dbb82e,oranagra,oran@redislabs.com,Mon May 9 18:01:09 2016 +0300,1462806069,dict.c: introduce dictUnlink().Notes by @antirez:nnThis patch was picked from a larger commit by Oran and adapted to changenthe API a bit. The basic idea is to avoid double lookups when there isnto use the value of the deleted entry.nnBEFORE:nnentry = dictFind( ... ); /* 1st lookup. */n/* Do somethjing with the entry. */ndictDelete(...); /* 2nd lookup. */nnAFTER:nnentry = dictUnlink( ... ); /* 1st lookup. */n/* Do somethjing with the entry. */ndictFreeUnlinkedEntry(entry); /* No lookups!. */n,45.0,11.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER",3.0,1.0,1.0,0.5983801989671903,13.0,1544.333333333333,172.0,-40.82449074074074,23.0,0.33061165550967764,24.0,None,False,,
afcbcc0e58749ebbebcd595c120d17a0e3dbb82e,a636aeac07240fea0acb6066bf1752d0913a9b4e,antirez,antirez@gmail.com,Wed Sep 14 15:10:53 2016 +0200,1473858653,Apply the new dictUnlink() where possible.Optimizations suggested and originally implemented by @oranagra.nRe-applied by @antirez using the modified API.n,9.0,8.0,"src/dict.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,1.4466479595102752,13.0,1478.666666666667,209.0,167.0094637345679,9315.0,1.0041644274335797,4779.0,Feature Addition,False,,
a636aeac07240fea0acb6066bf1752d0913a9b4e,041ab04419235010c8f7a54f256a8701390370cd,antirez,antirez@gmail.com,Wed Sep 14 16:41:05 2016 +0200,1473864065,Trim comment to 80 cols.,1.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,4336.0,229.0,127.9860648148148,9317.0,1.007813350628812,4780.0,None,False,,
041ab04419235010c8f7a54f256a8701390370cd,09a50d34a2e959be6b2fd1c6b7f51cb56c0d29d0,antirez,antirez@gmail.com,Wed Sep 14 16:43:38 2016 +0200,1473864218,dict.c: dictReplaceRaw() -> dictAddOrFind().What they say about naming things in programming?n,4.0,4.0,"src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",3.0,1.0,1.0,1.5,13.0,905.3333333333336,276.0,62.05771990740741,9319.0,1.0132544394652323,4783.0,None,False,,
09a50d34a2e959be6b2fd1c6b7f51cb56c0d29d0,be5439bde3338fadaa5f84afbcc0078d0dbdb44d,antirez,antirez@gmail.com,Thu Sep 15 09:37:55 2016 +0200,1473925075,MEMORY OVERHEAD refactored into a generic API.,130.0,73.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,953.0,92.0,1.6656597222222222,9321.0,1.6003627191428156,4784.0,None,False,True,"[""8b070b5d1285b988d6413699f92a941475bea54c""]"
be5439bde3338fadaa5f84afbcc0078d0dbdb44d,bf2624ea99ac92ae51db5453297aea4128692bad,antirez,antirez@gmail.com,Thu Sep 15 09:42:51 2016 +0200,1473925371,C struct memoh renamed redisMemOverhead. API prototypes added.,28.0,26.0,"src/object.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9640787648082292,13.0,1430.0,186.0,0.8362557870370371,9322.5,147.2448975393164,4786.0,Feature Addition,False,,
bf2624ea99ac92ae51db5453297aea4128692bad,7229af38988edee95634d5c1289ebee1a2b5fc25,antirez,antirez@gmail.com,Thu Sep 15 10:33:23 2016 +0200,1473928403,INFO: new memory reporting fields added.,15.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3696.0,88.0,1.7041782407407406,9324.0,1.5867930807315898,4787.0,None,False,,
7229af38988edee95634d5c1289ebee1a2b5fc25,5443726d4df2ccd93c29bbe1977881dde30eeeba,antirez,antirez@gmail.com,Thu Sep 15 15:25:05 2016 +0200,1473945905,"MEMORY USAGE: SAMPLES option added + fixes to size computation.The new SAMPLES option is added, defaulting to 5, and with 0 being anspecial value to scan the whole set of elements.nnFixes to the object size computation were made since the original PRnassumed data structures still contaning robj structures, while now afternthe lazyfree changes, are all SDS strings.n",27.0,18.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,991.0,94.0,0.23766203703703706,9325.0,5.2076555955975445,4788.0,None,False,,
5443726d4df2ccd93c29bbe1977881dde30eeeba,e9629e148bb445474e172134c1bc0d248adf2454,antirez,antirez@gmail.com,Thu Sep 15 17:33:11 2016 +0200,1473953591,MEMORY command: HELP + dataset percentage (like in INFO).,20.0,8.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.9591963191047148,13.0,2193.6666666666665,278.0,0.2357021604938272,9327.0,6.094549596088876,4791.0,None,False,True,"[""78f35f8d2cff306d943366a5c05df9e75b0f028f""]"
e9629e148bb445474e172134c1bc0d248adf2454,adcfb77b5bf273f5e4fc463edcc91045defb5cd9,antirez,antirez@gmail.com,Thu Sep 15 17:43:13 2016 +0200,1473954193,"objectComputeSize(): skiplist nodes have different sizes.The size of the node depends on the node level, however it is not storedninto the node itself, is an implicit information, so we usenzmalloc_size() in order to compute the sorted set size.n",6.0,6.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1015.0,96.0,0.006967592592592593,9329.0,144.52159468438538,4792.0,None,False,,
adcfb77b5bf273f5e4fc463edcc91045defb5cd9,123891dbbf34026c51f1298f7fd6c69a4a3fd8d0,antirez,antirez@gmail.com,Fri Sep 16 10:11:52 2016 +0200,1474013512,Group MEMORY command related APIs together in the source code.,53.0,53.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1015.0,97.0,0.6865625,9330.0,2.4565316340464265,4793.0,None,False,,
123891dbbf34026c51f1298f7fd6c69a4a3fd8d0,78f35f8d2cff306d943366a5c05df9e75b0f028f,antirez,antirez@gmail.com,Fri Sep 16 10:26:23 2016 +0200,1474014383,Memory related subcommands of DEBUG moved to MEMORY.,43.0,41.0,"src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",3.0,1.0,1.0,1.2606945063674475,13.0,1639.333333333333,401.0,22.318503086419753,9332.0,1.10061053592206,4796.0,Corrective,True,,
78f35f8d2cff306d943366a5c05df9e75b0f028f,309c2bcd1bf00ac6a224a76aad9c05733d2f4a18,oranagra,oran@redislabs.com,Wed May 18 08:08:43 2016 +0300,1463548123,add zmalloc used mem to DEBUG SDSLEN,7.0,3.0,"src/debug.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,13.0,1519.5,221.0,-120.78546296296295,25.5,0.9938026655940044,26.0,Corrective,True,,
309c2bcd1bf00ac6a224a76aad9c05733d2f4a18,d9325ac6c8b0be33b0813f4fa7b886b95690f85e,antirez,antirez@gmail.com,Fri Sep 16 10:43:19 2016 +0200,1474015399,Provide percentage of memory peak used info.,13.0,1.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.1488348542809168,13.0,2210.6666666666665,285.0,40.62538580246913,9335.0,29.807615242082854,4799.0,None,False,,
d9325ac6c8b0be33b0813f4fa7b886b95690f85e,44e714a59c3d65b03dc19486e133cd2a01ddff21,antirez,antirez@gmail.com,Fri Sep 16 16:36:53 2016 +0200,1474036613,MEMORY DOCTOR initial implementation.,104.0,8.0,"src/object.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.4827521926736709,13.0,2336.25,467.0,0.2484722222222222,9338.5,3.1009898801923867,4803.0,Feature Addition,False,True,"[""4263b121479cd42bb6ddf7ccd1104779ff70ec74"", ""3c9b817217b03d0377bed3857f0159a473711490"", ""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
44e714a59c3d65b03dc19486e133cd2a01ddff21,8a00ffc0e6b366220f199f74690892a80734383d,antirez,antirez@gmail.com,Fri Sep 16 16:40:25 2016 +0200,1474036825,Surround allocator name with quotes in MEMORY DOCTOR output.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1152.0,101.0,0.002453703703703704,9341.0,408.5471698113208,4804.0,Non Functional,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
8a00ffc0e6b366220f199f74690892a80734383d,4263b121479cd42bb6ddf7ccd1104779ff70ec74,antirez,antirez@gmail.com,Fri Sep 16 16:52:00 2016 +0200,1474037520,Typo fixed from MEMORY DOCTOR output.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1152.0,102.0,0.008043981481481482,9342.0,125.31654676258991,4805.0,Corrective,True,,
4263b121479cd42bb6ddf7ccd1104779ff70ec74,b13759e90ae8a9bab7662a1806d61d40eb3d12cf,antirez,antirez@gmail.com,Mon Sep 19 09:47:35 2016 +0200,1474271255,redis-cli: allocator-stats -> malloc-stats.It was changed in Redis but not in redis-cli.nThanks to @oranagra for signaling.n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2702.0,180.0,2.715763888888889,9343.0,1.368220523179993,4806.0,None,False,,
b13759e90ae8a9bab7662a1806d61d40eb3d12cf,945a2f948eb518090325b0ceab92588a905e0f92,antirez,antirez@gmail.com,Mon Sep 19 10:28:05 2016 +0200,1474273685,zmalloc: zmalloc_get_smap_bytes_by_field() modified to work for any PID.The goal is to get copy-on-write amount of the child from the parent.n,24.0,12.0,"src/aof.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",5.0,1.0,1.0,1.5577277787393191,13.0,905.2,408.0,273.68980787037043,9346.0,1.006433797626134,4811.0,None,False,,
945a2f948eb518090325b0ceab92588a905e0f92,e1eccf9a6be88c93b71e28f24ad7e14bef434142,antirez,antirez@gmail.com,Mon Sep 19 10:34:39 2016 +0200,1474274079,zmalloc: Make fp var non local to fix build.,3.0,2.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,407.0,33.0,0.004560185185185185,9349.0,220.28934010152284,4812.0,None,False,,
e1eccf9a6be88c93b71e28f24ad7e14bef434142,e565632e599bd1801abca2359453feac51312b28,antirez,antirez@gmail.com,Mon Sep 19 13:45:20 2016 +0200,1474285520,Child -> Parent pipe for COW info transferring.,132.0,3.0,"src/Makefile,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/childinfo.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,1.0,1.7385354712691026,13.0,1546.666666666667,656.0,3.028215663580246,9352.5,1.0744083631071624,4818.0,None,False,,
e565632e599bd1801abca2359453feac51312b28,e9d861ec69a11208578fc2a8b7dcdf4c52df316e,antirez,antirez@gmail.com,Mon Sep 19 14:11:17 2016 +0200,1474287077,"Clear child data when opening the pipes.This is important both to reset the magic to 0, so that it will notnmatch if the structure is not explicitly set, and to initialize othernthings we may add like counters and such.n",2.0,0.0,"src/childinfo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,83.0,1.0,0.01802083333333333,9356.0,56.4913294797688,4819.0,Feature Addition,False,,
e9d861ec69a11208578fc2a8b7dcdf4c52df316e,670586715a19e7aff9b3af793a7a9b334b418752,antirez,antirez@gmail.com,Tue Sep 20 17:22:30 2016 +0200,1474384950,"dict.c: fix dictGenericDelete() return ASAP condition.Recently we moved the return ASAP condition for the Delete() functionnfrom checking .size to checking .used, which is smarter, however whilentesting the first table alone always works to ensure the dict is totallynemtpy, when we test the .size field, testing .used requires testing bothnT0 and T1, since a rehashing could be in progress.n",2.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1236.0,75.0,6.02699074074074,9357.0,1.165920281449959,4820.0,None,False,,
670586715a19e7aff9b3af793a7a9b334b418752,a91650fc57077f53eac658d2da452bcf10d14ee6,Dvir Volk,dvirsky@gmail.com,Wed Sep 21 12:30:38 2016 +0300,1474450238,added RM_CreateStringPrintf,52.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,2.0,1.3757626695967229,13.0,1223.0,210.0,59.32919270833334,16.5,1.0055987810533542,18.0,Feature Addition,False,,
670586715a19e7aff9b3af793a7a9b334b418752 a91650fc57077f53eac658d2da452bcf10d14ee6,6e866ee05e49ab93e626b5a576e4c0f28cca71f0,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 21 11:46:53 2016 +0200,1474451213,Merge pull request #3511 from dvirsky/create_string_printfadded RM_CreateStringPrintf,,,,,,,,,,,,,,,Merge,False,,
6e866ee05e49ab93e626b5a576e4c0f28cca71f0,ca6fc4f0314d5d899cab8f19f9807d867ac3676d,charsyam,charsyam@naver.com,Sat Sep 24 15:53:57 2016 +0900,1474700037,Simple change just using slaves instead of server.slaves,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2419.0,180.0,53.48449074074074,18.0,1.0186970089113754,18.0,None,False,,
670586715a19e7aff9b3af793a7a9b334b418752,6d9f8e2462fc2c426d48c941edeb78e5df7d2977,antirez,antirez@gmail.com,Sun Sep 25 22:48:41 2016 +0200,1474836521,"Security: CONFIG SET client-output-buffer-limit overflow fixed.This commit fixes a vunlerability reported by Cory Duplantisnof Cisco Talos, see TALOS-2016-0206 for reference.nnCONFIG SET client-output-buffer-limit accepts as client class masternwhich is actually only used to implement CLIENT KILL. The master classnhas ID 3. What happens is that the global structure:nnserver.client_obuf_limits[class]nnIs accessed with class = 3. However it is a 3 elements array, so writingnthe 4th element means to write up to 24 bytes of memory *after* the endnof the array, since the structure is defined as:nntypedef struct clientBufferLimitsConfig {nunsigned long long hard_limit_bytes;nunsigned long long soft_limit_bytes;ntime_t soft_limit_seconds;n} clientBufferLimitsConfig;nnEVALUATION OF IMPACT:nnChecking what's past the boundaries of the array in the globaln'server' structure, we find AOF state fields:nnclientBufferLimitsConfig client_obuf_limits[CLIENT_TYPE_OBUF_COUNT];n/* AOF persistence */nint aof_state;  /* AOF_(ON|OFF|WAIT_REWRITE) */nint aof_fsync;  /* Kind of fsync() policy */nchar *aof_filename; /* Name of the AOF file */nint aof_no_fsync_on_rewrite;/* Don't fsync if a rewrite is in prog. */nint aof_rewrite_perc;   /* Rewrite AOF if % growth is > M and... */noff_t aof_rewrite_min_size; /* the AOF file is at least N bytes. */noff_t aof_rewrite_base_size;/* AOF size on latest startup or rewrite. */noff_t aof_current_size; /* AOF current size. */nnWriting to most of these fields should be harmless and only cause problems innRedis persistence that should not escalate to security problems.nHowever unfortunately writing to aof_filename could be potentially ansecurity issue depending on the access pattern.nnSearching for aof.filename accesses in the source code returns many differentnusages of the field, including using it as input for open(), logging to thenRedis log file or syslog, and calling the rename() syscall.nnIt looks possible that attacks could lead at least to informationsndisclosure of the state and data inside Redis. However note that thenattacker must already have access to the server. But, worse than that,nit looks possible that being able to change the AOF filename can be usednto mount more powerful attacks: like overwriting random files with AOFndata (easily a potential security issue as demostrated here:nhttp://antirez.com/news/96), or even more subtle attacks where thenAOF filename is changed to a path were a malicious AOF file is loadednin order to exploit other potential issues when the AOF parser is fednwith untrusted input (no known issue known currently).nnThe fix checks the places where the 'master' class is specifiedf innorder to access configuration data structures, and return an error innthis cases.nnWHO IS AT RISK?nnThe master client class was introduced in Redis in Jul 28 2015.nEvery Redis instance released past this date is not vulnerablenwhile all the releases after this date are. Notably:nnRedis 3.0.x is NOT vunlerable.nRedis 3.2.x IS vulnerable.nRedis unstable is vulnerable.nnIn order for the instance to be at risk, at least one of the followingnconditions must be true:nn1. The attacker can access Redis remotely and is able to sendn   the CONFIG SET command (often banned in managed Redis instances).nn2. The attacker is able to control the redis.conf file andn   can wait or trigger a server restart.nnThe problem was fixed 26th September 2016 in all the releases affected.n",5.0,3.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2027.0,198.0,47.25487268518518,9358.0,1.021161838836432,4821.0,None,False,,
6d9f8e2462fc2c426d48c941edeb78e5df7d2977 6e866ee05e49ab93e626b5a576e4c0f28cca71f0,2564031a1542baf354d4138a12f1d66ba5743ce5,antirez,antirez@gmail.com,Mon Sep 26 09:10:52 2016 +0200,1474873852,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
2564031a1542baf354d4138a12f1d66ba5743ce5,6782e774f13499cf51e4301ad4f1262acde664e1,antirez,antirez@gmail.com,Tue Sep 27 00:29:47 2016 +0200,1474928987,debug.c: include dlfcn.h regardless of BACKTRACE support.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1169.0,127.0,131.72296296296295,9359.0,1.0075916907538829,4822.0,Corrective,True,,
2564031a1542baf354d4138a12f1d66ba5743ce5,0d9febf6a02abf7c232b79d02c65d00427368df1,antirez,antirez@gmail.com,Sun Oct 2 11:01:36 2016 +0200,1475398896,Add compiler optimizations to example module makefile.,2.0,2.0,"src/modules/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,37.0,5.0,22.791747685185186,9360.0,1.043875529591353,4823.0,Feature Addition,False,,
0d9febf6a02abf7c232b79d02c65d00427368df1 6782e774f13499cf51e4301ad4f1262acde664e1,4674efdee247e34720e2f87cbd090f06f81e295f,antirez,antirez@gmail.com,Sun Oct 2 16:50:37 2016 +0200,1475419837,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
4674efdee247e34720e2f87cbd090f06f81e295f,a1b1fd4f392c59c5fc194e66856e1cb8d6a4f932,antirez,antirez@gmail.com,Sun Oct 2 16:51:37 2016 +0200,1475419897,Modules: API to log from module I/O callbacks.,40.0,16.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.22228483068568802,13.0,1783.5,107.0,11.222905092592592,9361.5,1.066827616718867,4825.0,None,False,,
a1b1fd4f392c59c5fc194e66856e1cb8d6a4f932,3dc84c530063e2ebd4f975e4066dd834cd6cbe9f,antirez,antirez@gmail.com,Mon Oct 3 00:08:35 2016 +0200,1475446115,"Modules: API to save/load single precision floating point numbers.When double precision is not needed, to take 2x space in thenserialization is not good.n",48.0,2.0,"src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,1.0,1.4864795725813362,13.0,1401.0,314.0,16.59779513888889,9364.5,1.8496098828560308,4829.0,None,False,True,"[""365dd037dcc00249c7631caac82c49a9c0c8c0f6""]"
3dc84c530063e2ebd4f975e4066dd834cd6cbe9f,72279e3ea4e8a8d19005b91b0bf7ee7a8ecc87fc,antirez,antirez@gmail.com,Thu Oct 6 08:48:21 2016 +0200,1475736501,Copyright notice added to module.c.,30.0,1.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,13.0,3518.0,172.0,10.077355324074077,9367.5,1.173575598733676,4831.0,Feature Addition,False,,
72279e3ea4e8a8d19005b91b0bf7ee7a8ecc87fc,152c1b6802b88fbad0113adb97500d92a84e3c63,antirez,antirez@gmail.com,Thu Oct 6 17:05:38 2016 +0200,1475766338,"Module: Ability to get context from IO context.It was noted by @dvirsky that it is not possible to use string functionsnwhen writing the AOF file. This sometimes is critical since the commandnrewriting may need to be built in the context of the AOF callback, andnwithout access to the context, and the limited types that the AOFnproduction functions will accept, this can be an issue.nnMoreover there are other needs that we can't anticipate regarding thenability to use Redis Modules APIs using the context in order to buildnrepresentations to emit AOF / RDB.nnBecause of this a new API was added that allows the user to get antemporary context from the IO context. The context is auto releasednif obtained when the RDB / AOF callback returns.nnCalling multiple time the function to get the context, always returnsnthe same one, since it is invalid to have more than a single context.n",30.0,0.0,"src/aof.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.994949047732144,13.0,1799.6,545.0,8.407219907407407,9371.0,1.0453369785288755,4836.0,None,False,True,"[""799208de85abfc686f56acd72f8cc7b7f4cd6e23"", ""a5998d1fda00862e57671d6986f2d8865ef5fd19"", ""ec8fd6e5e454e5ab1d0515cc4b85d450ce3df89c""]"
152c1b6802b88fbad0113adb97500d92a84e3c63,799208de85abfc686f56acd72f8cc7b7f4cd6e23,antirez,antirez@gmail.com,Thu Oct 6 17:10:47 2016 +0200,1475766647,Fix name of mispelled function.,1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1902.0,100.0,0.003576388888888889,9374.0,280.6116504854369,4837.0,Corrective,True,,
799208de85abfc686f56acd72f8cc7b7f4cd6e23,a5998d1fda00862e57671d6986f2d8865ef5fd19,antirez,antirez@gmail.com,Thu Oct 6 18:26:02 2016 +0200,1475771162,Fix typos in GetContextFromIO API declaration.,2.0,3.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,309.0,33.0,0.05583333333333333,9375.0,18.910447761194032,4838.0,Corrective,True,,
a5998d1fda00862e57671d6986f2d8865ef5fd19,8fadfe52a2d1abf3d4d12707004f1209703d446c,antirez,antirez@gmail.com,Fri Oct 7 11:55:35 2016 +0200,1475834135,"Module: API to block clients with threading support.Just a draft to align the main ideas, never executed code. Compiles.n",185.0,11.0,"src/blocked.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.629807934178737,13.0,2294.75,292.0,96.5896527777778,9377.5,1.0025973430930917,4842.0,None,False,True,"[""4b2229e4b882c49eae04b65792606b255af3d215"", ""3b0f0086156e79e0c7e13c8e7118799b9b40dd08""]"
8fadfe52a2d1abf3d4d12707004f1209703d446c,3879923db822789bbb508c171ed20ab2f5d6312f,antirez,antirez@gmail.com,Fri Oct 7 13:07:13 2016 +0200,1475838433,Enable warning in example modules Makefile.,2.0,2.0,"src/modules/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,37.0,6.0,5.087233796296296,9380.0,1.196570482120959,4843.0,None,False,,
3879923db822789bbb508c171ed20ab2f5d6312f,3aa816e61a1512d5878040c114d074bc662e03f8,antirez,antirez@gmail.com,Fri Oct 7 13:10:29 2016 +0200,1475838629,Modules: introduce warning suppression macro for unused args.,22.0,0.0,"src/modules/hellotype.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.1770225546116342,13.0,263.0,41.0,27.65328317901235,9382.0,1.0131163240497043,4846.0,None,False,,
3aa816e61a1512d5878040c114d074bc662e03f8,ffb00fbcbeeb2b0f17e70fbce81928e1f7fd4b46,antirez,antirez@gmail.com,Fri Oct 7 13:48:05 2016 +0200,1475840885,"Modules: blocking commands WIP: API exported, a first example.",38.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.4124993887955275,13.0,1287.6666666666667,124.0,0.044205246913580236,9385.0,10.909948734143176,4849.0,None,False,True,"[""5bfdfbe1742f113d3ea1d0dbe857b805da4e3381""]"
ffb00fbcbeeb2b0f17e70fbce81928e1f7fd4b46,f156038db84e25304862fcac43f1222a4382abef,antirez,antirez@gmail.com,Fri Oct 7 16:34:19 2016 +0200,1475850859,Modules: RM_Milliseconds() API added.,8.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,13.0,1928.0,119.0,0.1154398148148148,9387.5,7.4968919189893715,4851.0,None,False,,
f156038db84e25304862fcac43f1222a4382abef,34599691b373151c77854b20b3c7a621077f6c64,antirez,antirez@gmail.com,Fri Oct 7 16:34:40 2016 +0200,1475850880,Modules: fixes to the blocking commands API: examples now works.,10.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3541.0,84.0,0.0002430555555555556,9389.0,4115.285714285715,4852.0,None,False,,
34599691b373151c77854b20b3c7a621077f6c64,7dde8bf3ab721b87f1e48b277dcdc39aab4c8b4c,antirez,antirez@gmail.com,Fri Oct 7 16:35:06 2016 +0200,1475850906,Modules: blocking command example added.,115.0,0.0,"src/modules/helloblock.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9390.0,0.0,4853.0,None,False,,
a5998d1fda00862e57671d6986f2d8865ef5fd19,16f65068b04812e1ddc06d175ce1c420f9d98039,yyoshiki41,yyoshiki41@gmail.com,Mon Oct 10 01:13:20 2016 +0900,1476029600,Refactor redis-trib.rb,1.0,2.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1701.0,127.0,107.9897800925926,0.0,0.0,0.0,None,False,,
a5998d1fda00862e57671d6986f2d8865ef5fd19,c76b9b644c11f8b7284755664670d9baa64f1907,jybaek,oops.jybaek@gmail.com,Thu Oct 13 15:17:07 2016 +0900,1476339427,Remove Duplicate Processing,0.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2702.0,181.0,23.93717592592593,0.0,0.0,0.0,None,False,,
7dde8bf3ab721b87f1e48b277dcdc39aab4c8b4c,870274bea8b67fdcc828ed77c783d7146b86af11,antirez,antirez@gmail.com,Thu Oct 13 12:41:48 2016 +0200,1476355308,Example modules: remove warnings about types and not used args.,13.0,2.0,"src/modules/helloblock.c,CAS_DELIMITER,src/modules/helloworld.c,CAS_DELIMITER",2.0,1.0,1.0,0.9967916319816366,13.0,366.5,18.0,38.96385416666666,9391.5,1.0920621759064242,4855.0,None,False,,
870274bea8b67fdcc828ed77c783d7146b86af11,553aa0e259a5b2c5f53dbc322a94b8f6930bc537,antirez,antirez@gmail.com,Thu Oct 13 12:48:36 2016 +0200,1476355716,module.c: trim comment to 80 cols.,4.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3549.0,85.0,5.843009259259259,9393.0,1.1711446885721304,4856.0,None,False,,
553aa0e259a5b2c5f53dbc322a94b8f6930bc537,58601c8f7d6c279fe67a95950787775f11aec393,antirez,antirez@gmail.com,Thu Oct 13 16:57:28 2016 +0200,1476370648,Modules: blocking API documented.,265.0,0.0,"src/modules/BLOCK.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9394.0,0.0,4857.0,None,False,,
58601c8f7d6c279fe67a95950787775f11aec393,95c17c0cb24ebfff814b0c10e21d1a12b02fb478,antirez,antirez@gmail.com,Thu Oct 13 16:57:40 2016 +0200,1476370660,Modules: AbortBlock() API implemented.,12.0,1.0,"src/module.c,CAS_DELIMITER,src/modules/INTRO.md,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,0.9912642605354288,13.0,1576.0,128.0,39.40492669753086,9396.0,2.932985510514465,4860.0,None,False,,
95c17c0cb24ebfff814b0c10e21d1a12b02fb478,a3b3ca7c2191cbe09750e2eb45b856b8cbbaa831,antirez,antirez@gmail.com,Thu Oct 13 17:00:29 2016 +0200,1476370829,Modules: use RedisModule_AbortBlock() in the example.,1.0,1.0,"src/modules/helloblock.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,122.0,2.0,0.1796412037037037,9398.0,6.566651633271053,4861.0,None,False,,
a3b3ca7c2191cbe09750e2eb45b856b8cbbaa831,c7a4e694ad3689d934897b0d2c37144d7b2d0b97,antirez,antirez@gmail.com,Fri Oct 14 15:28:04 2016 +0200,1476451684,"SWAPDB command.This new command swaps two Redis databases, so that immediately all thenclients connected to a given DB will see the data of the other DB, andnthe other way around. Example:nnSWAPDB 0 1nnThis will swap DB 0 with DB 1. All the clients connected with DB 0 willnimmediately see the new data, exactly like all the clients connectednwith DB 1 will see the data that was formerly of DB 0.nnMOTIVATION AND HISTORYn---nnThe command was recently demanded by Pedro Melo, but was suggested innthe past multiple times, and always refused by me.nnThe reason why it was asked: Imagine you have clients operating in DB 0.nAt the same time, you create a new version of the dataset in DB 1.nWhen the new version of the dataset is available, you immediately wantnto swap the two views, so that the clients will transparently use thennew version of the data. At the same time you'll likely destroy thenDB 1 dataset (that contains the old data) and start to build a newnversion, to repeat the process.nnThis is an interesting pattern, but the reason why I always opposed tonimplement this, was that FLUSHDB was a blocking command in Redis beforenRedis 4.0 improvements. Now we have FLUSHDB ASYNC that releases thenold data in O(1) from the point of view of the client, to reclaim memorynincrementally in a different thread.nnAt this point, the pattern can really be supported without latencynspikes, so I'm providing this implementation for the users to comment.nIn case a very compelling argument will be made against this new commandnit may be removed.nnBEHAVIOR WITH BLOCKING OPERATIONSn---nnIf a client is blocking for a list in a given DB, after the swap it willnstill be blocked in the same DB ID, since this is the most logical thingnto do: if I was blocked for a list push to list foo, even after thenswap I want still a LPUSH to reach the key foo in the same DB in ordernto unblock.nnHowever an interesting thing happens when a client is, for instance,nblocked waiting for new elements in list foo of DB 0. Then the DBn0 and 1 are swapped with SWAPDB. However the DB 1 happened to havena list called foo containing elements. When this happens, thisnimplementation can correctly unblock the client.nnIt is possible that there are subtle corner cases that are not coverednin the implementation, but since the command is self-contained from thenPOV of the implementation and the Redis core, it cannot cause anythingnbad if not used.nnTests and documentation are yet to be provided.n",88.0,1.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.17757518221539376,13.0,2309.6666666666665,374.0,14.747546296296294,9400.0,1.0276507084445037,4864.0,Feature Addition,False,True,"[""6b818efeb62356358ea5a5187fd02889940d4bd0""]"
c7a4e694ad3689d934897b0d2c37144d7b2d0b97,f63321207347d96852948cd0a9fb01bf0f0b4252,antirez,antirez@gmail.com,Fri Oct 14 15:48:11 2016 +0200,1476452891,"Fix SELECT test, broken cause change in error msg.",1.0,1.0,"tests/unit/other.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,246.0,23.0,171.99877314814816,9402.0,1.005813994958782,706.0,Corrective,True,,
f63321207347d96852948cd0a9fb01bf0f0b4252,2000abc86f8f5051191c022e08ce8659f51591c5,Pedro Melo,melo@simplicidade.org,Mon Oct 17 12:50:04 2016 +0100,1476705004,"Fixes compilation on MacOS 10.8.5, Clang tags/Apple/clang-421.0.57Redis fails to compile on MacOS 10.8.5 with Clang 4, version 421.0.57n(based on LLVM 3.1svn).nnWhen compiling zmalloc.c, we get these warnings:nnCC zmalloc.onzmalloc.c:109:5: warning: implicit declaration of function '__atomic_add_fetch' is invalid in C99 [-Wimplicit-function-declaration]nupdate_zmalloc_stat_alloc(zmalloc_size(ptr));n^nzmalloc.c:75:9: note: expanded from macro 'update_zmalloc_stat_alloc'natomicIncr(used_memory,__n,used_memory_mutex); n^n./atomicvar.h:57:37: note: expanded from macro 'atomicIncr'n#define atomicIncr(var,count,mutex) __atomic_add_fetch(&var,(count),__ATOMIC_RELAXED)n^nzmalloc.c:145:5: warning: implicit declaration of function '__atomic_sub_fetch' is invalid in C99 [-Wimplicit-function-declaration]nupdate_zmalloc_stat_free(oldsize);n^nzmalloc.c:85:9: note: expanded from macro 'update_zmalloc_stat_free'natomicDecr(used_memory,__n,used_memory_mutex); n^n./atomicvar.h:58:37: note: expanded from macro 'atomicDecr'n#define atomicDecr(var,count,mutex) __atomic_sub_fetch(&var,(count),__ATOMIC_RELAXED)n^nzmalloc.c:205:9: warning: implicit declaration of function '__atomic_load_n' is invalid in C99 [-Wimplicit-function-declaration]natomicGet(used_memory,um,used_memory_mutex);n^n./atomicvar.h:60:14: note: expanded from macro 'atomicGet'ndstvar = __atomic_load_n(&var,__ATOMIC_RELAXED); n ^n3 warnings generated.nnAlso on lazyfree.c:nnCC lazyfree.onlazyfree.c:68:13: warning: implicit declaration of function '__atomic_add_fetch' is invalid in C99 [-Wimplicit-function-declaration]natomicIncr(lazyfree_objects,1,lazyfree_objects_mutex);n^n./atomicvar.h:57:37: note: expanded from macro 'atomicIncr'n#define atomicIncr(var,count,mutex) __atomic_add_fetch(&var,(count),__ATOMIC_RELAXED)n^nlazyfree.c:111:5: warning: implicit declaration of function '__atomic_sub_fetch' is invalid in C99 [-Wimplicit-function-declaration]natomicDecr(lazyfree_objects,1,lazyfree_objects_mutex);n^n./atomicvar.h:58:37: note: expanded from macro 'atomicDecr'n#define atomicDecr(var,count,mutex) __atomic_sub_fetch(&var,(count),__ATOMIC_RELAXED)n^n2 warnings generated.nnThen in the linking stage:nnLINK redis-servernUndefined symbols for architecture x86_64:n  ___atomic_add_fetch, referenced from:n  _zmalloc in zmalloc.on  _zcalloc in zmalloc.on  _zrealloc in zmalloc.on  _dbAsyncDelete in lazyfree.on  _emptyDbAsync in lazyfree.on  _slotToKeyFlushAsync in lazyfree.on  ___atomic_load_n, referenced from:n  _zmalloc_used_memory in zmalloc.on  _zmalloc_get_fragmentation_ratio in zmalloc.on  ___atomic_sub_fetch, referenced from:n  _zrealloc in zmalloc.on  _zfree in zmalloc.on  _lazyfreeFreeObjectFromBioThread in lazyfree.on  _lazyfreeFreeDatabaseFromBioThread in lazyfree.on  _lazyfreeFreeSlotsMapFromBioThread in lazyfree.onld: symbol(s) not found for architecture x86_64nclang: error: linker command failed with exit code 1 (use -v to see invocation)nmake[1]: *** [redis-server] Error 1nmake: *** [all] Error 2nnWith this patch, the compilation is sucessful, no warnings.nnRunning `make test` we get a almost clean bill of health. Test pass withnone exception:nn[err]: Check for memory leaks (pid 52793) in tests/unit/dump.tcln[err]: Check for memory leaks (pid 53103) in tests/unit/auth.tcln[err]: Check for memory leaks (pid 53117) in tests/unit/auth.tcln[err]: Check for memory leaks (pid 53131) in tests/unit/protocol.tcln[err]: Check for memory leaks (pid 53145) in tests/unit/protocol.tcln[ok]: Check for memory leaks (pid 53160)n[err]: Check for memory leaks (pid 53175) in tests/unit/scan.tcln[ok]: Check for memory leaks (pid 53189)n[err]: Check for memory leaks (pid 53221) in tests/unit/type/incr.tcln.n.n.nnFull debug log (289MB, uncompressed) available atnhttps://dl.dropboxusercontent.com/u/75548/logs/redis-debug-log-macos-10.8.5.log.xznnMost if not all of the memory leak tests fail. Not sure if this isnrelated. They are the only ones that fail. I belive they are not related,nbut just the memory leak detector is not working properly on 10.8.5.nnSigned-off-by: Pedro Melo <melo@simplicidade.org>n",1.0,1.0,"src/atomicvar.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,94.0,1.0,388.1550578703704,6.0,1.0025762900153523,3.0,Corrective,True,,
f63321207347d96852948cd0a9fb01bf0f0b4252 2000abc86f8f5051191c022e08ce8659f51591c5,ea95262d8dc3e90f3dfa6d233445d388ea2ff2a9,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 17 16:11:00 2016 +0200,1476713460,"Merge pull request #3560 from melo/fix-macos-10-8-compileFixes compilation on MacOS 10.8.5, Clang tags/Apple/clang-421.0.57",,,,,,,,,,,,,,,Merge,False,,
ea95262d8dc3e90f3dfa6d233445d388ea2ff2a9,a9f50a389b55f93563275acc86a62930fb8f3d06,antirez,antirez@gmail.com,Mon Oct 17 16:41:39 2016 +0200,1476715299,Better target MacOS on __atomic macros conditional compilation.,2.0,1.0,"src/atomicvar.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,94.0,2.0,0.1191550925925926,9403.0,9.39242350655658,4865.0,Perfective,False,True,"[""95883313b5a405916fabed34c3af290d6072c817""]"
a9f50a389b55f93563275acc86a62930fb8f3d06,f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd,antirez,antirez@gmail.com,Wed Oct 19 10:43:40 2016 +0200,1476866620,Remove Hey! warning...,0.0,1.0,"src/atomicvar.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,95.0,3.0,1.7514004629629634,9404.0,1.5709716430634215,4866.0,None,False,,
f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd,949a274817085cb0117430056c5b22ec8f051878,sunhe,sunheehnus@gmail.com,Sat Oct 22 01:54:46 2016 +0800,1477072486,bitops.c/bitfieldCommand: update higest_write_offset with check,3.0,2.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1113.0,48.0,127.29181712962965,0.0,0.0,0.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd,20feafda091d865f68ccaab6e50166a0cf35f369,Michel Tresseras,m.tresseras@gmail.com,Mon Oct 24 17:27:48 2016 +0200,1477322868,Typo,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1218.0,170.0,42.19028935185185,0.0,0.0,0.0,None,False,,
a5998d1fda00862e57671d6986f2d8865ef5fd19,a06d59b583e34905f438319ebfea952028467019,jybaek,oops.jybaek@gmail.com,Fri Oct 28 10:42:54 2016 +0900,1477618974,Add missing fclose(),1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2701.0,182.0,14.80957175925926,1.0,1.0675238971292185,1.0,Feature Addition,False,,
f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd,7f1bb22ef3f77c940e6331512eeaddfdd1703be3,deep,ieshen.zheng@163.com,Fri Oct 28 19:47:29 2016 +0800,1477655249,fix a bug for quicklistDup() function,3.0,3.0,"src/quicklist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2651.0,12.0,122.82287037037035,0.0,0.0,0.0,Corrective,True,,
f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd,8b070b5d1285b988d6413699f92a941475bea54c,Guy Benoish,guy.benoish@redislabs.com,Mon Oct 31 15:08:17 2016 +0200,1477919297,Fixed wrong sizeof(client) in object.c,7.0,7.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1152.0,104.0,40.15114583333333,0.0,0.0,0.0,Corrective,True,,
f39e7d4d7e8f3a0d5a8eb29e2bc86700a26397fd 8b070b5d1285b988d6413699f92a941475bea54c,fbfa0a12ee8ebe6d6aaee3c2aac3dd2e010af62f,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 31 15:34:16 2016 +0100,1477924456,Merge pull request #3579 from guybe7/unstableFixed wrong sizeof(client) in object.c,,,,,,,,,,,,,,,Merge,False,,
fbfa0a12ee8ebe6d6aaee3c2aac3dd2e010af62f a06d59b583e34905f438319ebfea952028467019,f48ca5581edb565be6ca1898356293927a4b9d06,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 31 15:36:38 2016 +0100,1477924598,Merge pull request #3573 from jybaek/module-io-contextAdd missing fclose(),,,,,,,,,,,,,,,Merge,False,,
f48ca5581edb565be6ca1898356293927a4b9d06 949a274817085cb0117430056c5b22ec8f051878,77b1abf185229f4990c871993958ac80e2ce1edc,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 31 15:40:46 2016 +0100,1477924846,Merge pull request #3565 from sunheehnus/bitfield-fix-highest_write_offsetbitops.c/bitfieldCommand: update higest_write_offset with check,,,,,,,,,,,,,,,Merge,False,,
77b1abf185229f4990c871993958ac80e2ce1edc,9749e96f42745e4234f59d09a13ebcaa5371706e,antirez,antirez@gmail.com,Mon Oct 31 15:46:58 2016 +0100,1477925218,Test: regression test for #3564 added.,9.0,0.0,"tests/unit/bitfield.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,192.0,4.0,166.0787962962963,9405.0,1.0060212382453442,707.0,Preventative,False,,
9749e96f42745e4234f59d09a13ebcaa5371706e,ec8fd6e5e454e5ab1d0515cc4b85d450ce3df89c,Dvir Volk,dvirsky@gmail.com,Mon Oct 31 18:48:16 2016 +0200,1477932496,fixed sizeof in allocating io RedisModuleCtx*,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3557.0,87.0,18.07680555555556,19.0,1.0553195085783655,19.0,Corrective,True,,
9749e96f42745e4234f59d09a13ebcaa5371706e ec8fd6e5e454e5ab1d0515cc4b85d450ce3df89c,c17fc39243774217d85be4a59d5a70deb5b38dbd,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 2 10:58:30 2016 +0100,1478080710,Merge pull request #3581 from dvirsky/fix_io_ctx_sizeof[MODULES] fixed sizeof in allocating io RedisModuleCtx*,,,,,,,,,,,,,,,Merge,False,,
c17fc39243774217d85be4a59d5a70deb5b38dbd 7f1bb22ef3f77c940e6331512eeaddfdd1703be3,b3e707339d2db8d25287f5c4c732a785c3f5d3d8,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 2 11:00:24 2016 +0100,1478080824,Merge pull request #3575 from deep011/unstablefix a bug for quicklistDup() function,,,,,,,,,,,,,,,Merge,False,,
b3e707339d2db8d25287f5c4c732a785c3f5d3d8 16f65068b04812e1ddc06d175ce1c420f9d98039,25811bc9839d2af54524fea5f1dfa3042e4ce3c0,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 2 11:02:32 2016 +0100,1478080952,Merge pull request #3547 from yyoshiki41/refactor/redis-tribRefactor redis-trib.rb,,,,,,,,,,,,,,,Merge,False,,
25811bc9839d2af54524fea5f1dfa3042e4ce3c0 ca6fc4f0314d5d899cab8f19f9807d867ac3676d,fa2dc4b60c5dd8fabafd99fa23badfc6b00b15bc,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 2 11:04:52 2016 +0100,1478081092,Merge pull request #3514 from charsyam/feature/simple-refactoringSimple change just using slaves instead of server.slaves,,,,,,,,,,,,,,,Merge,False,,
fa2dc4b60c5dd8fabafd99fa23badfc6b00b15bc,18d32c7e1c3fac6f927fc5d1187ac205edb0fec2,antirez,antirez@gmail.com,Wed Nov 2 15:14:48 2016 +0100,1478096088,redis-cli typo fixed: perferences -> preferences.Thanks to @qiaodaimadelaowang for signaling the issue.nClose #3585.n,2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2702.0,183.0,5.5221527777777775,9406.0,1.1810887963882846,4867.0,Corrective,True,,
18d32c7e1c3fac6f927fc5d1187ac205edb0fec2 20feafda091d865f68ccaab6e50166a0cf35f369,b399288ff535cd95e278dbf4babd25bfb896c0d7,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 2 15:18:44 2016 +0100,1478096324,Merge pull request #3568 from MichaelTSS/patch-1Typo,,,,,,,,,,,,,,,Merge,False,,
18d32c7e1c3fac6f927fc5d1187ac205edb0fec2,2669fb8364c4c4080b7b75809ca94fc8022151de,antirez,antirez@gmail.com,Wed Nov 9 11:31:06 2016 +0100,1478687466,"PSYNC2: different improvements to Redis replication.The gist of the changes is that now, partial resynchronizations betweennslaves and masters (without the need of a full resync with RDB transfernand so forth), work in a number of cases when it was impossiblenin the past. For instance:nn1. When a slave is promoted to mastrer, the slaves of the old master cannpartially resynchronize with the new master.nn2. Chained slalves (slaves of slaves) can be moved to replicate to othernslaves or the master itsef, without requiring a full resync.nn3. The master itself, after being turned into a slave, is able tonpartially resynchronize with the new master, when it joins replicationnagain.nnIn order to obtain this, the following main changes were operated:nn* Slaves also take a replication backlog, not just masters.nn* Same stream replication for all the slaves and sub slaves. Thenreplication stream is identical from the top level master to its slavesnand is also the same from the slaves to their sub-slaves and so forth.nThis means that if a slave is later promoted to master, it has thensame replication backlong, and can partially resynchronize with itsnslaves (that were previously slaves of the old master).nn* A given replication history is no longer identified by the `runid` ofna Redis node. There is instead a `replication ID` which changes everyntime the instance has a new history no longer coherent with the pastnone. So, for example, slaves publish the same replication history ofntheir master, however when they are turned into masters, they publishna new replication ID, but still remember the old ID, so that they arenable to partially resynchronize with slaves of the old master (up to angiven offset).nn* The replication protocol was slightly modified so that a new extendedn+CONTINUE reply from the master is able to inform the slave of anreplication ID change.nn* REPLCONF CAPA is used in order to notify masters that a slave is ablento understand the new +CONTINUE reply.nn* The RDB file was extended with an auxiliary field that is able tonselect a given DB after loading in the slave, so that the slave canncontinue receiving the replication stream from the point it wasndisconnected without requiring the master to insert SELECT statements.nThis is useful in order to guarantee the same stream property, becausenthe slave must be able to accumulate an identical backlog.nn* Slave pings to sub-slaves are now sent in a special form, when thentop-level master is disconnected, in order to don't interfer with thenreplication stream. We just use out of band n bytes as in other partsnof the Redis protocol.nnAn old design document is available here:nnhttps://gist.github.com/antirez/ae068f95c0d084891305nnHowever the implementation is not identical to the description becausenduring the work to implement it, different changes were needed in ordernto make things working well.n",440.0,143.0,"redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",10.0,2.0,2.0,1.574995448884419,13.0,1735.4,1473.0,38.6266111111111,9411.5,1.0125543463344957,4876.0,None,False,True,"[""22be435efe63af749149db4ad9177c0f2515be70"", ""dcffca0a31bfd2ed9aec0f2cc49d14767c7ffec6"", ""fbef85ca5aca774c7533c6e0760edfd6258948c7"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
2669fb8364c4c4080b7b75809ca94fc8022151de,4e5e366ed265f2571124edfa9c2f9eaa0d450c45,antirez,antirez@gmail.com,Wed Nov 9 15:36:25 2016 +0100,1478702185,PSYNC2: Wrap debugging code with if(0),3.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2641.0,182.0,0.1703587962962963,9417.0,6.86996399211903,4877.0,None,False,,
4e5e366ed265f2571124edfa9c2f9eaa0d450c45,28c96d73b2e157a37465560bc421280d17005708,antirez,antirez@gmail.com,Thu Nov 10 12:35:29 2016 +0100,1478777729,"PSYNC2: Save replication ID/offset on RDB file.This means that stopping a slave and restarting it will still make itnable to PSYNC with the master. Moreover the master itself will retainnits ID/offset, in case it gets turned into a slave, or if a slave willntry to PSYNC with it with an exactly updated offset (otherwise there isnno backlog).nnThis change was possible thanks to PSYNC v2 that makes saving the currentnreplication state much simpler.n",29.0,3.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.7136135511938808,13.0,2555.0,566.0,1.002120949074074,9419.5,1.5162923090845142,4881.0,None,False,,
b399288ff535cd95e278dbf4babd25bfb896c0d7,a1a07225b3963eb251b518737a3f6b59515faaa1,oranagra,oran@redislabs.com,Thu Nov 10 16:59:52 2016 +0200,1478789992,fix unsigned int overflow in adjustOpenFilesLimit,3.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3743.0,98.0,0.14193287037037036,27.0,8.045584277909157,27.0,Corrective,True,,
b399288ff535cd95e278dbf4babd25bfb896c0d7,dbb6cb442a4b432bf1db42a60f4871c4854fa11d,hylepo,hylepo.doploy@gmail.com,Fri Nov 11 10:33:48 2016 +0800,1478831628,Update redis-benchmark.cFixing typo in the usage of redis-benchmark,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,839.0,61.0,121.71605324074072,0.0,0.0,0.0,Corrective,True,,
b399288ff535cd95e278dbf4babd25bfb896c0d7 dbb6cb442a4b432bf1db42a60f4871c4854fa11d,0b57a19c1b852f5387a5126eaea333c4120e0282,hylepo,hylepo.doploy@gmail.com,Fri Nov 11 10:34:37 2016 +0800,1478831677,Merge pull request #1 from hylepo/Fixing-typo-in-the-usage-of-redis-benchmarkFixing typo in the usage of redis-benchmark,,,,,,,,,,,,,,,Merge,False,,
b399288ff535cd95e278dbf4babd25bfb896c0d7,13a92a5bb1bed9dc34442613b65d6bc1b43a6b7e,deep011,diguo58@gmail.com,Wed Nov 16 11:04:33 2016 +0800,1479265473,fix a possible bug for 'replconf getack',1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2642.0,184.0,5.645185185185183,0.0,0.0,0.0,Corrective,True,,
18d32c7e1c3fac6f927fc5d1187ac205edb0fec2,cfdb3a22140b50fd61718aa9715cc900d74ca0f4,antirez,antirez@gmail.com,Wed Nov 16 14:13:13 2016 +0100,1479301993,Cluster: handle zero bytes at the end of nodes.conf.,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5313.0,502.0,152.97171296296298,9422.0,1.0065371563188426,4882.0,None,False,,
cfdb3a22140b50fd61718aa9715cc900d74ca0f4 b399288ff535cd95e278dbf4babd25bfb896c0d7,59f2e7c16259ba22e75d52c2bd486e56bbbf9a6e,antirez,antirez@gmail.com,Wed Nov 16 14:13:37 2016 +0100,1479302017,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
59f2e7c16259ba22e75d52c2bd486e56bbbf9a6e,e3a61950a212a5e603234f4009e1ec3801d5a423,oranagra,oran@redislabs.com,Wed Nov 16 21:30:59 2016 +0200,1479324659,"when a slave loads an RDB, stop an AOFRW fork before flusing db and parsing rdb file, to avoid a CoW disaster.",19.0,13.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2642.0,185.0,0.6850231481481481,28.0,2.4598046835400265,28.0,None,False,True,"[""c9e2900efc1ed33727356df114fb716442ae2ce6"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
59f2e7c16259ba22e75d52c2bd486e56bbbf9a6e 28c96d73b2e157a37465560bc421280d17005708,8fb3ad244474612d8ba53a6a7ba715a325538371,antirez,antirez@gmail.com,Thu Nov 17 09:37:03 2016 +0100,1479371823,Merge branch 'psync2' into unstable,,,,,,,,,,,,,,,Merge,False,,
8fb3ad244474612d8ba53a6a7ba715a325538371 13a92a5bb1bed9dc34442613b65d6bc1b43a6b7e,5b83fa482c1b82995a52c7ae549dbf550cbb0d07,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 18 10:45:09 2016 +0100,1479462309,Merge pull request #3612 from deep011/unstablefix a possible bug for 'replconf getack',,,,,,,,,,,,,,,Merge,False,,
8fb3ad244474612d8ba53a6a7ba715a325538371,f115461f4eb8e1ec928829f176c02935785547ff,antirez,antirez@gmail.com,Fri Nov 18 13:10:29 2016 +0100,1479471029,Test: WAIT tests added in wait.tcl unit.,43.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/wait.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.15935006268563445,13.0,280.5,100.0,77.9358275462963,9423.5,1.0064155346230588,709.0,Preventative,False,,
f115461f4eb8e1ec928829f176c02935785547ff 5b83fa482c1b82995a52c7ae549dbf550cbb0d07,73dd51c04400fdf2518b210bdc581deef1208020,antirez,antirez@gmail.com,Fri Nov 18 13:10:57 2016 +0100,1479471057,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
73dd51c04400fdf2518b210bdc581deef1208020,5b7d42fff32ba4e8cf1f415b104bfec086023a86,antirez,antirez@gmail.com,Wed Nov 23 16:12:20 2016 +0100,1479913940,"PSYNC2: bugfixing pre release.1. Master replication offset was cleared after switching configurationnto some other slave, since it was assumed you can't PSYNC after answitch. Note the case anymore and when we successfully PSYNC we need tonhave our offset untouched.nn2. Secondary replication ID was not reset to 000... pattern atnstartup.nn3. Master in error state replying -LOADING or other transient errorsnforced the slave to discard the cached master and full resync. This isnnow fixed.nn4. Better logging of what's happening on failed PSYNCs.n",39.0,11.0,"src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.14144054254182067,13.0,3195.5,285.0,9.914519675925924,9425.5,1.0985252206676477,4884.0,None,False,,
5b7d42fff32ba4e8cf1f415b104bfec086023a86,1f55170b9c480130d1dd120358ff715379e8cbd4,antirez,antirez@gmail.com,Thu Nov 24 11:05:19 2016 +0100,1479981919,"Modules: fix client blocking calls access to invalid struct field.We already have reference to the client pointer, no need to access thenalready freed structure.nnClose #3634.n",1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3557.0,88.0,23.72017361111111,9427.0,1.0421582074564402,4885.0,None,False,,
1f55170b9c480130d1dd120358ff715379e8cbd4,e09e31b12e6a631bc7e501e48849fe110e7113ec,antirez,antirez@gmail.com,Thu Nov 24 15:48:18 2016 +0100,1479998898,"PSYNC2: on transient error jump to error, not write_error.",1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2675.0,187.0,0.9833101851851852,9428.0,2.0169730925869254,4886.0,None,False,,
e09e31b12e6a631bc7e501e48849fe110e7113ec,790310d89460655305bd615bc442eeaf7f0f1b38,antirez,antirez@gmail.com,Fri Nov 25 10:55:16 2016 +0100,1480067716,Better protocol errors logging.,29.0,10.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1956.0,254.0,15.97511574074074,9429.0,1.0625973555515305,4887.0,Perfective,False,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d""]"
790310d89460655305bd615bc442eeaf7f0f1b38,16559a02fc12e4bf3d91657b9f775e144474abbb,antirez,antirez@gmail.com,Mon Nov 28 10:13:24 2016 +0100,1480324404,"PSYNC2: Test (WIP).This is the PSYNC2 test that helped find issues in the code, and thatnstill can show a protocol desync from time to time. Work is in progressnin order to find the issue. For now the test is not enabled in makentest and must be run manually.n",127.0,0.0,"tests/integration/psync2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,9430.0,0.0,710.0,None,False,,
16559a02fc12e4bf3d91657b9f775e144474abbb,eab865a0a1d7e3cb2494c02e601dbdb93b48533c,antirez,antirez@gmail.com,Mon Nov 28 17:54:04 2016 +0100,1480352044,"PSYNC2: stop sending newlines to sub-slaves when master is down.This actually includes two changes:nn1) No newlines to take the master-slave link up when the upstream masternis down. Doing this is dangerous because the sub-slave often is receivednreplication protocol for an half-command, so can't receive newlinesnwithout desyncing the replication link, even with the code in order toncancel out the bytes that PSYNC2 was using. Moreover this is probablynalso not needed/sane, because anyway the slave can keep servingnrequests, and because if it's configured to don't serve stale data, it'sna good idea, actually, to break the link.nn2) When a +CONTINUE with a different ID is received, we now breaknconnection with the sub-slaves: they need to be notified as well. Thisnwas part of the original specification but for some reason it was notnimplemented in the code, and was alter found as a PSYNC2 bug in thenintegration testing.n",6.0,30.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,tests/integration/psync2.tcl,CAS_DELIMITER",3.0,2.0,2.0,1.0848840292766129,13.0,1592.333333333333,444.0,2.566026234567901,9432.0,1.1897706270229391,711.0,None,False,,
eab865a0a1d7e3cb2494c02e601dbdb93b48533c,8abf9729f0f171533d19a8591fae514708f3e119,andyli,zhiangli029@gmail.com,Tue Nov 29 16:34:41 2016 +0800,1480408481,Modify MIN->MAX,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5313.0,503.0,12.806574074074076,1.0,1.078084895633753,1.0,None,False,,
eab865a0a1d7e3cb2494c02e601dbdb93b48533c,c8f0690255a0f25f27dc3573bfe7a348b85ac108,antirez,antirez@gmail.com,Tue Nov 29 10:22:40 2016 +0100,1480411360,PSYNC2 test: modify the test for production.,33.0,17.0,"tests/integration/psync2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,128.0,2.0,0.6865277777777777,9434.0,2.4566053004248443,712.0,Preventative,False,,
c8f0690255a0f25f27dc3573bfe7a348b85ac108,6eb720ff2d20d3e739d6214415ca832008ba9dfb,antirez,antirez@gmail.com,Tue Nov 29 10:24:46 2016 +0100,1480411486,PSYNC2: Minor memory leak reading -NOMASTERLINK master reply fixed.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2660.0,189.0,0.6879861111111111,9435.0,2.4535177147471483,4890.0,None,False,,
6eb720ff2d20d3e739d6214415ca832008ba9dfb,f6e42f0e3f709706d6587573bcc3a05ec900569f,antirez,antirez@gmail.com,Tue Nov 29 10:25:42 2016 +0100,1480411542,PSYNC2 test: test added to the default tests.,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,562.0,101.0,10.885567129629633,9436.0,1.0918647589134869,713.0,Preventative,False,,
f6e42f0e3f709706d6587573bcc3a05ec900569f,93c5198c1780cf55199653591458e39342b21c5d,antirez,antirez@gmail.com,Tue Nov 29 10:27:53 2016 +0100,1480411673,PSYNC2 test: 20 seconds are enough...,5.0,1.0,"tests/integration/psync2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,144.0,3.0,0.003622685185185185,9437.0,277.03833865814687,714.0,Preventative,False,,
93c5198c1780cf55199653591458e39342b21c5d,ce1f9cf81d4758197147294c292bf6a50b3f96d6,antirez,antirez@gmail.com,Tue Nov 29 11:15:12 2016 +0100,1480414512,PSYNC2 test: check ability to resync after restart.,35.0,1.0,"tests/integration/psync2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,148.0,4.0,0.032858796296296296,9438.0,31.433251144769287,715.0,Preventative,False,True,"[""ba809f26d4bd81d23fa929d0c018f235ab298564""]"
ce1f9cf81d4758197147294c292bf6a50b3f96d6,8521cde570f574006ee36a2d3e0ed1b2f6953d2f,Dvir Volk,dvirsky@gmail.com,Wed Nov 30 11:49:49 2016 +0200,1480499389,fix memory corruption on RM_FreeCallReply,3.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3557.0,89.0,5.989236111111111,20.0,1.1669662009391848,20.0,Corrective,True,,
ce1f9cf81d4758197147294c292bf6a50b3f96d6,71e8d15e493217df16e82a81fa2c587b64a74ef9,antirez,antirez@gmail.com,Wed Nov 30 11:13:55 2016 +0100,1480500835,Modules: change type registration API to use a struct of methods.,65.0,10.0,"src/module.c,CAS_DELIMITER,src/modules/hellotype.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,2.0,1.3802449275715438,13.0,1523.5,238.0,30.43094039351852,9440.5,15.946900998701992,4894.0,None,False,True,"[""5f5b4f1508e001ec42968fd0f94ea3e9e9e60fc9""]"
71e8d15e493217df16e82a81fa2c587b64a74ef9 8521cde570f574006ee36a2d3e0ed1b2f6953d2f,3c4fe59e095d1ff06cf5f99706c357a0c6f7b5b1,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 30 11:21:10 2016 +0100,1480501270,Merge pull request #3648 from dvirsky/fix_reply_crashfix memory corruption on RM_FreeCallReply,,,,,,,,,,,,,,,Merge,False,,
3c4fe59e095d1ff06cf5f99706c357a0c6f7b5b1,a28683217073e8670bba79ff1f38d93fb3e90d65,Thomas SOu00c3u008bTE,thomas.soete@corp.ovh.com,Wed Nov 30 15:26:59 2016 +0100,1480516019,Fix typo (unsupproted => unsupported) in error message,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3744.0,100.0,6.968506944444441,0.0,0.0,0.0,Corrective,True,,
3c4fe59e095d1ff06cf5f99706c357a0c6f7b5b1,5f5b4f1508e001ec42968fd0f94ea3e9e9e60fc9,Yossi Gottlieb,yossigo@gmail.com,Wed Nov 30 22:05:59 2016 +0200,1480536359,Fix typo in RedisModuleTypeMethods declaration.,1.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,337.0,39.0,0.4111574074074074,39.0,3.4321585407048762,38.0,Corrective,True,,
3c4fe59e095d1ff06cf5f99706c357a0c6f7b5b1 5f5b4f1508e001ec42968fd0f94ea3e9e9e60fc9,ff1d5487383df2718a1dbbe4a409d078f353ee6d,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 1 09:09:37 2016 +0100,1480579777,Merge pull request #3651 from yossigo/datatype_methods_typoFix typo in RedisModuleTypeMethods declaration.,,,,,,,,,,,,,,,Merge,False,,
ff1d5487383df2718a1dbbe4a409d078f353ee6d,6eb0c52d4c9f56561eec76db64190f720661efe6,Chris Lamb,chris@chris-lamb.co.uk,Thu Dec 1 12:10:14 2016 +0000,1480594214,src/rdb.c: Correct whenver -> whenever typo.,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1915.0,183.0,21.024131944444445,6.0,1.0475643894664697,5.0,None,False,,
71e8d15e493217df16e82a81fa2c587b64a74ef9,434e6b2da368bbcf4d8aa6153f39e0479deb063b,antirez,antirez@gmail.com,Fri Dec 2 10:21:20 2016 +0100,1480670480,PSYNC2: Do not accept WAIT in slave instances.No longer makes sense since writable slaves only do local writes now:nwrites are no longer passed to sub-slaves in the stream.n,5.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2661.0,190.0,2.9976157407407413,9443.0,1.3335984617404264,4895.0,None,False,,
6eb0c52d4c9f56561eec76db64190f720661efe6,5dc4fe1529bb9e1134245db505883364caac3280,Itamar Haber,itamar@redislabs.com,Fri Dec 2 18:19:36 2016 +0200,1480695576,Verify pairs are provided after subcommandsFixes https://github.com/antirez/redis/issues/3639,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3069.0,130.0,79.13105324074074,15.0,1.012637263868556,13.0,Corrective,True,,
6eb0c52d4c9f56561eec76db64190f720661efe6,e5db99ad4acfa22e28056a480b106ff7b06a0120,cbgbt,sean.kelly.2992@gmail.com,Thu Dec 1 02:33:01 2016 -0800,1480588381,cli: Only print elapsed time on OUTPUT_STANDARD,3.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2702.0,184.0,28.84598379629629,0.0,0.0,0.0,None,False,,
434e6b2da368bbcf4d8aa6153f39e0479deb063b,001138aec3c9e9df9b3072da10477a44491ec918,antirez,antirez@gmail.com,Mon Dec 5 14:02:32 2016 +0100,1480942952,"Geo: fix computation of bounding box.A bug was reported in the context in issue #3631. The root cause of thenbug was that certain neighbor boxes were zeroed after the inside thenbounding box or not check, simply because the bounding box computationnfunction was wrong.nnA few debugging infos where enhanced and moved in other parts of thencode. A check to avoid steps=0 was added, but is unrelated to thisnissue and I did not verified it was an actual bug in practice.n",33.0,44.0,"src/geo.c,CAS_DELIMITER,src/geohash_helper.c,CAS_DELIMITER",2.0,1.0,1.0,0.9093934226727596,13.0,516.5,54.0,131.16329861111112,9444.5,1.005718062963815,4897.0,None,False,True,"[""b2cd9fcab6122ccbf8b08f71f59a0af01931083b""]"
001138aec3c9e9df9b3072da10477a44491ec918,b1fc06f7eb90b2b8a3c68085ac0970e3d3525b52,antirez,antirez@gmail.com,Mon Dec 5 14:15:08 2016 +0100,1480943708,"Geo: improve fuzz test.The test now uses more diverse radius sizes, especially sizes near orngreater the whole earth surface are used, that are known to trigger edgencases. Moreover the PRNG seeding was probably resulting into the samensequence tested over and over again, now seeding unsing the current unixntime in milliseconds.nnRelated to #3631.n",11.0,3.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,299.0,17.0,131.17204861111108,9446.0,1.00762357537744,716.0,None,False,,
b1fc06f7eb90b2b8a3c68085ac0970e3d3525b52 6eb0c52d4c9f56561eec76db64190f720661efe6,3c85a88888bdef5d8d873dd259fded0a5eff29fd,antirez,antirez@gmail.com,Mon Dec 5 14:17:11 2016 +0100,1480943831,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
3c85a88888bdef5d8d873dd259fded0a5eff29fd,37b6e16ae15005fec9cbd11aec1eacdaed15f7ba,antirez,antirez@gmail.com,Fri Dec 2 16:35:24 2016 +0100,1480692924,Modules: API doc updated (auto generated).,190.0,7.0,"src/modules/API.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1145.0,14.0,162.22493055555555,9447.0,1.0061642806477118,4898.0,None,False,,
37b6e16ae15005fec9cbd11aec1eacdaed15f7ba,16cce320c468f93c101227cb7c012139257ae21d,antirez,antirez@gmail.com,Fri Dec 2 16:30:42 2016 +0100,1480692642,Modules: types doc updated to new API.,22.0,14.0,"src/modules/TYPES.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,371.0,4.0,163.08739583333337,9448.0,1.0061316816967385,4899.0,None,False,,
16cce320c468f93c101227cb7c012139257ae21d,94fe98666cff0c9b1411044b8564d7aaa8253fb2,itamar,itamar@redislabs.com,Mon Dec 5 18:34:38 2016 +0200,1480955678,Corrects a couple of omissions in the modules docs,3.0,2.0,"src/modules/API.md,CAS_DELIMITER,src/modules/TYPES.md,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,13.0,853.5,20.0,3.042766203703704,0.5,0.582162079917838,1.0,Non Functional,False,,
16cce320c468f93c101227cb7c012139257ae21d,2d91fce9705b307e657bf5a4caf5cdbdee44faa1,wangshaonan,wshn13@gmail.com,Tue Dec 6 03:11:27 2016 +0000,1480993887,Add 'n' to MEMORY DOCTOR command output message when num_reports is 0 or empty is 1,2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1152.0,105.0,35.585532407407406,0.0,0.0,0.0,Feature Addition,False,,
16cce320c468f93c101227cb7c012139257ae21d 2d91fce9705b307e657bf5a4caf5cdbdee44faa1,978a790b85f240615486913db1d043d28e51b74b,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 6 09:20:36 2016 +0100,1481012436,Merge pull request #3663 from wshn13/add-LF-character-in-memory-doctor-output-messageAdd 'n' to MEMORY DOCTOR command output message,,,,,,,,,,,,,,,Merge,False,,
978a790b85f240615486913db1d043d28e51b74b,2a32f0371edeb818a45a0648b2b13bffe93e558b,Jan-Erik Rediger,janerik@fnordig.de,Thu Dec 8 14:27:21 2016 +0100,1481203641,"Reset the ttl for additional keysBefore, if a previous key had a TTL set but the current one didn't, thenTTL was reused and thus resulted in wrong expirations set.nnThis behaviour was experienced, when `MigrateDefaultPipeline` innredis-trib was set to >1nnFixes #3655n",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5313.0,504.0,9.20324074074074,33.0,1.1086573771316464,19.0,Corrective,True,,
978a790b85f240615486913db1d043d28e51b74b,b6ab4d04b60548fcc5c04d2da53a8af0c3d59593,Yossi Gottlieb,yossigo@gmail.com,Mon Dec 12 20:18:40 2016 +0200,1481566720,Fix redis-cli rare crash.This happens if the server (mysteriously) returns an unexpected responsento the COMMAND command.n,4.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2704.0,185.0,11.323368055555555,40.0,1.0883129467393204,39.0,Corrective,True,,
978a790b85f240615486913db1d043d28e51b74b b6ab4d04b60548fcc5c04d2da53a8af0c3d59593,39f5c0713e467236afc54eb2d89733d79162d6ba,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 12 19:36:15 2016 +0100,1481567775,Merge pull request #3680 from yossigo/fix_rediscli_command_crashFix redis-cli rare crash.,,,,,,,,,,,,,,,Merge,False,,
39f5c0713e467236afc54eb2d89733d79162d6ba,04542cff92147b9b686a2071c4c53574771f4f88,antirez,antirez@gmail.com,Tue Dec 13 10:20:06 2016 +0100,1481620806,"Replication: fix the infamous key leakage of writable slaves + EXPIRE.BACKGROUND AND USE CASEjnnRedis slaves are normally write only, however the supprot a writablenmode which is very handy when scaling reads on slaves, that actuallynneed write operations in order to access data. For instance imaginenhaving slaves replicating certain Sets keys from the master. Whennaccessing the data on the slave, we want to peform intersections betweennsuch Sets values. However we don't want to intersect each time: to cachenthe intersection for some time often is a good idea.nnTo do so, it is possible to setup a slave as a writable slave, andnperform the intersection on the slave side, perhaps setting a TTL on thenresulting key so that it will expire after some time.nnTHE BUGnnProblem: in order to have a consistent replication, expiring of keys innRedis replication is up to the master, that synthesize DEL operations tonsend in the replication stream. However slaves logically expire keysnby hiding them from read attempts from clients so that if the master didnnot promptly sent a DEL, the client still see logically expired keysnas non existing.nnBecause slaves don't actively expire keys by actually evicting them butnjust masking from the POV of read operations, if a key is created in anwritable slave, and an expire is set, the key will be leaked forever:nn1. No DEL will be received from the master, which does not know aboutnsuch a key at all.nn2. No eviction will be performed by the slave, since it needs to disableneviction because it's up to masters, otherwise consistency of data isnlost.nnTHE FIXnnIn order to fix the problem, the slave should be able to tag keys thatnwere created in the slave side and have an expire set in some way.nnMy solution involved using an unique additional dictionary created bynthe writable slave only if needed. The dictionary is obviously keyed bynthe key name that we need to track: all the keys that are set with annexpire directly by a client writing to the slave are tracked.nnThe value in the dictionary is a bitmap of all the DBs where such a keynname need to be tracked, so that we can use a single dictionary to tracknkeys in all the DBs used by the slave (actually this limits the solutionnto the first 64 DBs, but the default with Redis is to use 16 DBs).nnThis solution allows to pay both a small complexity and CPU penalty,nwhich is zero when the feature is not used, actually. The slave-sideneviction is encapsulated in code which is not coupled with the rest ofnthe Redis core, if not for the hook to track the keys.nnTODOnnI'm doing the first smoke tests to see if the feature works as expected:nso far so good. Unit tests should be added before merging into then4.0 branch.n",161.0,11.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",8.0,1.0,1.0,1.221032142456959,13.0,2339.875,1231.0,53.767364004629634,9452.5,1.0322133808570133,4907.0,None,False,True,"[""5b9ba26403d6b275812301ada34675e0712e1f90"", ""63e41ee19236d88799935e38e517b2a918cacbb3"", ""5b9d3ac6c6932b292c8895af8562c4df3c00464b""]"
04542cff92147b9b686a2071c4c53574771f4f88,5b9ba26403d6b275812301ada34675e0712e1f90,antirez,antirez@gmail.com,Tue Dec 13 12:21:15 2016 +0100,1481628075,Fix created->created typo in expire.c,1.0,1.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,487.0,2.0,0.08413194444444444,9457.0,12.886091621956256,4908.0,Corrective,True,,
5b9ba26403d6b275812301ada34675e0712e1f90,d1adc85aa6f53424fec29751cec4bb3042a25359,antirez,antirez@gmail.com,Tue Dec 13 16:02:29 2016 +0100,1481641349,INFO: show num of slave-expires keys tracked.,11.0,2.0,"src/expire.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3143204867061788,13.0,2061.6666666666665,212.0,0.20972222222222225,9459.0,4.551098954027587,4911.0,None,False,,
d1adc85aa6f53424fec29751cec4bb3042a25359,b6f871cf42f5d97e1d6ce81e0429cf4a8f204d31,antirez,antirez@gmail.com,Tue Dec 13 16:27:13 2016 +0100,1481642833,"Writable slaves expires: fix leak in key tracking.We need to use a dictionary type that frees the key, since we copy thenkeys in the dictionary we use to track expires created in the slavenside.n",16.0,2.0,"src/expire.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.8524051786494786,13.0,1222.5,112.0,0.017175925925925924,9461.5,44.66576819407008,4913.0,None,False,,
b6f871cf42f5d97e1d6ce81e0429cf4a8f204d31,dee11ebab88a6880b2dfb7e5dbafa0790d046eaf,antirez,antirez@gmail.com,Tue Dec 13 16:28:12 2016 +0100,1481642892,Writable slaves expires: unit test.,12.0,0.0,"tests/integration/replication-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,101.0,5.0,1267.0688078703704,9463.0,1.0007892231217346,717.0,None,False,,
dee11ebab88a6880b2dfb7e5dbafa0790d046eaf 2a32f0371edeb818a45a0648b2b13bffe93e558b,c9f0456d818cb9955f945f40d7e3040765a893fe,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 14 12:41:00 2016 +0100,1481715660,Merge pull request #3673 from badboy/reset-ttl-on-migratingReset the ttl for additional keys,,,,,,,,,,,,,,,Merge,False,,
c9f0456d818cb9955f945f40d7e3040765a893fe,b53e73e159a38308c2873bfce7237b7373ef4374,antirez,antirez@gmail.com,Wed Dec 14 12:42:04 2016 +0100,1481715724,"MIGRATE: Remove upfront ttl initialization.After the fix for #3673 the ttl var is always initialized inside thenloop itself, so the early initialization is not needed.nnVariables declaration also moved to a more local scope.n",3.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5314.0,506.0,1.098587962962963,9464.0,1.9102593817821696,4914.0,None,False,,
b53e73e159a38308c2873bfce7237b7373ef4374,7f9b9512b877af96ded1c9758c23c075bab36f8d,Dvir Volk,dvirsky@gmail.com,Thu Dec 15 00:07:20 2016 +0200,1481753240,fixed stop condition in RM_ZsetRangeNext and RM_ZsetRangePrev,3.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3592.0,92.0,1.5328009259259259,21.0,1.6524004409743722,21.0,Corrective,True,,
b53e73e159a38308c2873bfce7237b7373ef4374,ac61f9062583d67dd43f7d698824464d1e30d84b,antirez,antirez@gmail.com,Fri Dec 16 09:02:50 2016 +0100,1481875370,DEBUG: new ziplist subcommand added. Dumps a ziplist on stdout.The commit improves ziplistRepr() and adds a new debugging subcommand sonthat we can trigger the dump directly from the Redis API.nThis command capability was used while investigating issue #3684.n,35.0,13.0,"src/debug.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/ziplist.h,CAS_DELIMITER",4.0,1.0,1.0,1.233232197996165,13.0,1236.0,295.0,347.9542100694445,9466.5,1.0135847378114624,4918.0,Corrective,True,,
ac61f9062583d67dd43f7d698824464d1e30d84b,d634c36253125e7f07bb161d76a89e3649213d6a,antirez,antirez@gmail.com,Fri Dec 16 09:04:57 2016 +0100,1481875497,ziplist.c explanation of format improved a bit.,18.0,11.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1767.0,50.0,0.0014699074074074074,9469.0,681.3149606299213,4919.0,None,False,,
d634c36253125e7f07bb161d76a89e3649213d6a 7f9b9512b877af96ded1c9758c23c075bab36f8d,5ad2a94a1696fd7a87070836fdb081c4027730f5,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 16 09:20:47 2016 +0100,1481876447,Merge pull request #3686 from dvirsky/fix_lowlevel_zrangefixed stop condition in RM_ZsetRangeNext and RM_ZsetRangePrev,,,,,,,,,,,,,,,Merge,False,,
5ad2a94a1696fd7a87070836fdb081c4027730f5,c55e3fbae5273d8a6fd5582e44d8745b2b81b7df,Harish Murthy,harish.v.murthy@gmail.com,Fri Dec 9 14:28:19 2016 +0530,1481273899,LogLog-Beta Algorithm support within HLL Config option to use LogLog-Beta Algorithm for Cardinality,57.0,27.0,"src/config.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.8077512443125946,13.0,2323.25,506.0,141.08636574074075,1.5,0.7513149439297402,3.0,None,False,,
c55e3fbae5273d8a6fd5582e44d8745b2b81b7df,47dea01c853e075ee591ded515eecffefd535425,antirez,antirez@gmail.com,Fri Dec 16 10:56:40 2016 +0100,1481882200,Fix HLL gnuplot graph generator script for new redis-rb versions.The PFADD now takes an array and has mandatory two arguments.n,1.0,1.0,"utils/hyperloglog/hll-gnuplot-graph.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,88.0,7.0,987.8045023148147,9470.0,1.0010123460640812,85.0,Corrective,True,,
47dea01c853e075ee591ded515eecffefd535425,0224be881124343bd4ad7696848f9fd6c51b11d0,antirez,antirez@gmail.com,Fri Dec 16 10:58:19 2016 +0100,1481882299,"Use llroundl() before converting loglog-beta output to integer.Otherwise for small cardinalities the algorithm will output somethingnlike, for example, 4.99 for a candinality of 5, that will be convertednto 4 producing a huge error.n",4.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1574.0,95.0,7.041666666666668,9471.0,1.1420118343195271,4920.0,None,False,,
0224be881124343bd4ad7696848f9fd6c51b11d0,87538cb7fe19b5671189442cd604de5d58a856a7,antirez,antirez@gmail.com,Fri Dec 16 11:05:10 2016 +0100,1481882710,"Switch PFCOUNT to LogLog-Beta algorithm.The new algorithm provides the same speed with a smaller error forncardinalities in the range 0-100k. Before switching, the new and oldnalgorithm behavior was studied in details in the context ofnissue #3677. You can find a few graphs and motivations there.n",16.0,57.0,"src/config.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.8866781517929091,13.0,2330.75,511.0,5.286006944444447,9473.5,1.1004912261655655,4924.0,Feature Addition,False,,
87538cb7fe19b5671189442cd604de5d58a856a7 94fe98666cff0c9b1411044b8564d7aaa8253fb2,151af731181caf0429b4b172493c4604c6673cae,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 16 16:53:13 2016 +0100,1481903593,Merge pull request #3661 from itamarhaber/module-doc2 Corrects a couple of omissions in the modules docs,,,,,,,,,,,,,,,Merge,False,,
151af731181caf0429b4b172493c4604c6673cae e3a61950a212a5e603234f4009e1ec3801d5a423,ca4ca5073e394cca3f5c8f8c508803a6d9b2c606,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 16 17:43:20 2016 +0100,1481906600,"Merge pull request #3616 from oranagra/stop_aofrw_before_rdbloadCoW improvement, stop AOFRW before flushing and parsing slave RDB",,,,,,,,,,,,,,,Merge,False,,
ca4ca5073e394cca3f5c8f8c508803a6d9b2c606,8e390a62ad3b06e0f11813d0c832721f0b676d63,antirez,antirez@gmail.com,Fri Dec 16 17:48:33 2016 +0100,1481906913,"Hopefully improve code comments for issue #3616.This commit also contains other changes in order to conform the code tonthe Redis core style, specifically 80 chars max per line, smartnconditionals in the same line:nnif (that) do_this();n",8.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2666.0,191.0,14.31056712962963,9476.0,1.0698784325555852,4925.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
8e390a62ad3b06e0f11813d0c832721f0b676d63 8abf9729f0f171533d19a8591fae514708f3e119,6cf1a325d67cd294857480229251ad82e79a68d8,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 19 08:19:10 2016 +0100,1482131950,Merge pull request #3643 from andyli028/unstableModify MIN->MAX,,,,,,,,,,,,,,,Merge,False,,
6cf1a325d67cd294857480229251ad82e79a68d8 0b57a19c1b852f5387a5126eaea333c4120e0282,ce9e36eb01f1b9122ceedc61f00d08ed0a4cfb97,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 19 08:20:01 2016 +0100,1482132001,Merge pull request #3605 from hylepo/unstableFixing typo in the usage of redis-benchmark,,,,,,,,,,,,,,,Merge,False,,
ce9e36eb01f1b9122ceedc61f00d08ed0a4cfb97 a1a07225b3963eb251b518737a3f6b59515faaa1,2988889db141b5d691ac94e0b64b37884030dea8,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 19 08:48:44 2016 +0100,1482133724,Merge pull request #3603 from oranagra/adjustOpenFilesLimit_overflowfix unsigned int overflow in adjustOpenFilesLimit,,,,,,,,,,,,,,,Merge,False,,
2988889db141b5d691ac94e0b64b37884030dea8,90a6f7fc98df849a9890ab6e0da4485457bf60cd,antirez,antirez@gmail.com,Mon Dec 19 08:53:25 2016 +0100,1482134005,adjustOpenFilesLimit() comment made hopefully more clear.,4.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3749.0,105.0,2.9085069444444445,9477.0,1.343819017489405,4926.0,None,False,,
90a6f7fc98df849a9890ab6e0da4485457bf60cd,06bfeb482d5652e55bdd9d93a9909f26d6c3999a,antirez,antirez@gmail.com,Mon Dec 19 16:41:47 2016 +0100,1482162107,"Only show Redis logo if logging to stdout / TTY.You can still force the logo in the normal logs.nFor motivations, check issue #3112. For me the reason is that actuallynthe logo is nice to have in interactive sessions, but inside the logsnkinda loses its usefulness, but for the ability of users to recognizenrestarts easily: for this reason the new startup sequence shows a onenliner ASCII wave so that there is still a bit of visual clue.nnStartup logging was modified in order to log events in more obviousnways, and to log more events. Also certain important informations arennow more easy to parse/grep since they are printed in field=value style.nnThe option --always-show-logo in redis.conf was added, defaulting to no.n",44.0,11.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,2.0,2.0,1.1693664009911788,13.0,2240.5,591.0,11.752132523148148,9479.5,1.0229995100659608,4929.0,None,False,,
06bfeb482d5652e55bdd9d93a9909f26d6c3999a,074383f8509daf86d490df967c5f0fca91bf96e9,antirez,antirez@gmail.com,Mon Dec 19 16:45:18 2016 +0100,1482162318,"Remove first version of ASCII wave, later discarded.",0.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,3771.0,107.0,0.0024421296296296296,9482.0,410.478672985782,4930.0,None,False,,
074383f8509daf86d490df967c5f0fca91bf96e9,8444b46d20ef9c8de3f7e255e4f3bfa44f509c77,antirez,antirez@gmail.com,Mon Dec 19 16:49:58 2016 +0100,1482162598,Fix test server is up detection after logging changes.,2.0,1.0,"tests/assets/default.conf,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9182958340544896,13.0,177.5,61.0,673.2088078703704,9483.5,1.0009311942125672,719.0,Corrective,True,,
8444b46d20ef9c8de3f7e255e4f3bfa44f509c77,7c64e8896393f2fe4859a4a039e95c6ff0047fce,Justin Carvalho,jstncarvalho@gmail.com,Mon Dec 19 17:37:41 2016 -0500,1482187061,Fix missing brackets around encoding variable in ZIP_DECODE_LENGTH macro,1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1774.0,51.0,3.606064814814815,0.0,0.0,0.0,Corrective,True,,
8444b46d20ef9c8de3f7e255e4f3bfa44f509c77,913070a9e85170e89176e5dc9488263cc7327085,antirez,antirez@gmail.com,Tue Dec 20 10:12:38 2016 +0100,1482225158,"Geo: fix edge case return values for uniformity.There were two cases outlined in issue #3512 and PR #3551 wherenthe Geo API returned unexpected results: empty strings where NULLnreplies were expected, or a single null reply where an array wasnexpected. This violates the Redis principle that Redis replies fornexisting keys or elements should be indistinguishable.nnThis is technically an API breakage so will be merged only into 4.0 andnspecified in the changelog in the list of breaking compatibilities, evennif it is not very likely that actual code will be affected, hopefully,nsince with the past behavior basically there was to acconut for *both*nthe possibilities, and the new behavior is always one of the two, butnin a consistent way.n",5.0,6.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,803.0,50.0,14.840347222222226,9485.0,1.0673838681147958,4931.0,None,False,,
913070a9e85170e89176e5dc9488263cc7327085,0f72257049f76c8371e2dc18336a4d1015d06a99,antirez,antirez@gmail.com,Tue Dec 20 10:19:06 2016 +0100,1482225546,Geo: fix GEOHASH return value for consistency.The same thing observed in #3551 by gnethercutt also fixed fornGEOHASH as the original PR did.n,3.0,4.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,802.0,51.0,0.0044907407407407405,9486.0,223.68041237113403,4932.0,None,False,,
0f72257049f76c8371e2dc18336a4d1015d06a99,af0284926c5883c1cd1a0bb40188a6897cf11829,antirez,antirez@gmail.com,Tue Dec 20 12:22:11 2016 +0100,1482232931,"Geo: fuzzy test inconsistency report fixed to show all points.We need to report all the points added into the set, not just the onesnmatching the Tcl distance algo.n",3.0,2.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,307.0,18.0,14.9215625,9487.0,1.067017110305975,720.0,None,False,,
0f72257049f76c8371e2dc18336a4d1015d06a99 7c64e8896393f2fe4859a4a039e95c6ff0047fce,619317da6f115d600c365e6cacd5ece1da97308f,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 20 13:32:54 2016 +0100,1482237174,Merge pull request #3696 from jstncarvalho/FixMissingBrackets_ZIP_DECODE_LENGTHFix missing brackets around encoding variable in ZIP_DECODE_LENGTH macro,,,,,,,,,,,,,,,Merge,False,,
af0284926c5883c1cd1a0bb40188a6897cf11829 619317da6f115d600c365e6cacd5ece1da97308f,a764c87b672fa953f321b0d0549e351329c2cebb,antirez,antirez@gmail.com,Tue Dec 20 13:33:10 2016 +0100,1482237190,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a764c87b672fa953f321b0d0549e351329c2cebb 27d08fb8f0c5cbb2258dd6df6722228693d218c4,43bccbc3f46a92f71cd4029b8b3fbe54004b6e29,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 20 13:39:29 2016 +0100,1482237569,Merge pull request #3498 from ZhukovAlexander/patch-1Fix an article usage,,,,,,,,,,,,,,,Merge,False,,
43bccbc3f46a92f71cd4029b8b3fbe54004b6e29 0f36e5e5d8031496a07cde241d2c932d1e73ea38,0b7691201e255ed21a0fdf6779199de0d7c1498c,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 20 15:39:56 2016 +0100,1482244796,Merge pull request #3242 from whatacold/unstablefix the wrong description of intsetGet().,,,,,,,,,,,,,,,Merge,False,,
0b7691201e255ed21a0fdf6779199de0d7c1498c,6712bce92c79de5c2caa38e9b597a3fa52fd497f,antirez,antirez@gmail.com,Wed Dec 21 12:11:56 2016 +0100,1482318716,deps/hiredis updated to latest version.Close #3687.n,2393.0,817.0,"deps/hiredis/.gitignore,CAS_DELIMITER,deps/hiredis/.travis.yml,CAS_DELIMITER,deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/glib.h,CAS_DELIMITER,deps/hiredis/adapters/ivykis.h,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/adapters/libuv.h,CAS_DELIMITER,deps/hiredis/adapters/macosx.h,CAS_DELIMITER,deps/hiredis/adapters/qt.h,CAS_DELIMITER,deps/hiredis/appveyor.yml,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/dict.c,CAS_DELIMITER,deps/hiredis/examples/example-glib.c,CAS_DELIMITER,deps/hiredis/examples/example-ivykis.c,CAS_DELIMITER,deps/hiredis/examples/example-macosx.c,CAS_DELIMITER,deps/hiredis/examples/example-qt.cpp,CAS_DELIMITER,deps/hiredis/examples/example-qt.h,CAS_DELIMITER,deps/hiredis/examples/example.c,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/sdsalloc.h,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/win32.h,CAS_DELIMITER,deps/hiredis/zmalloc.h,CAS_DELIMITER",34.0,1.0,3.0,4.016114067170881,13.0,197.4117647058824,122.0,580.324669798475,9504.5,1.0001510589820866,937.0,Preventative,False,True,"[""fb6ebaa598f95629f91f41594e626012adaf0269""]"
6712bce92c79de5c2caa38e9b597a3fa52fd497f,b2da5ea773356320af3cda6cfd0f1fc1e7d48ba7,oranagra,oran@redislabs.com,Sat Dec 24 17:27:58 2016 +0200,1482593278,fix rare assertion in DEBUG DIGESTgetExpire calls dictFind which can do rehashing.nfound by calling computeDatasetDigest from serverCron and running the test suite.n,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1183.0,130.0,8.30912037037037,29.0,1.1203496826891468,29.0,Corrective,True,,
6712bce92c79de5c2caa38e9b597a3fa52fd497f,7aa9e6d2ae1d500d8ba900b239207143993ecc3e,oranagra,oran@redislabs.com,Fri Dec 30 03:37:52 2016 +0200,1483061872,active memory defragmentation,755.0,8.0,"deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",13.0,3.0,3.0,1.8478688685150544,14.0,1257.6153846153845,1203.0,78.93178329772078,36.0,1.00155067842588,40.0,None,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36"", ""ad133e10238eed678694160dc0eecd70c30d0232"", ""13957c9d072b86bf8a084380591fcdc219aae108"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
7aa9e6d2ae1d500d8ba900b239207143993ecc3e,5ab6a54cc619e750daac59baef7b9f9dc1f87db9,oranagra,oran@redislabs.com,Mon Jan 2 09:42:32 2017 +0200,1483342952,active defrag improvements,63.0,44.0,"src/debug.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",4.0,1.0,1.0,0.998357511834852,14.0,794.5,238.0,3.2532407407407407,44.5,1.1600967696029598,44.0,None,False,,
6712bce92c79de5c2caa38e9b597a3fa52fd497f,afaaa9188537b7651b7e42dfe3e9f340af819a0f,Jan-Erik Rediger,janerik@fnordig.de,Sun Jan 8 18:27:00 2017 +0100,1483896420,Initialize help only in repl mode,5.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2708.0,186.0,26.96412037037037,34.0,1.037086320127055,20.0,Feature Addition,False,,
5ab6a54cc619e750daac59baef7b9f9dc1f87db9,173d692bc2e87d476a8ef45b671cf9ac98695c15,antirez,antirez@gmail.com,Tue Jan 10 11:25:39 2017 +0100,1484043939,Defrag: activate it only if running modified version of Jemalloc.This commit also includes minor aesthetic changes like removal ofntrailing spaces.n,40.0,26.0,"deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",4.0,2.0,2.0,1.3547280568001576,14.0,291.0,57.0,123.17115162037035,9523.5,1.0021001157506992,4935.0,None,False,,
173d692bc2e87d476a8ef45b671cf9ac98695c15,e91f0ea1b3b1fa6237ec6b359a2665ab0f472989,antirez,antirez@gmail.com,Tue Jan 10 11:32:52 2017 +0100,1484044372,"Defrag: fix comments & code to conform to the Redis code base.Don't go over 80 cols. Start with captial letter, capital letter afernpoint, end comment with a point and so forth. No actual code behaviorntouched at all.n",84.0,54.0,"src/defrag.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,545.0,3.0,0.0050115740740740745,9526.0,200.53810623556583,4936.0,None,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
e91f0ea1b3b1fa6237ec6b359a2665ab0f472989,41868796759f5cf16c83e7a09c3e2f7abec08670,antirez,antirez@gmail.com,Wed Jan 11 15:36:48 2017 +0100,1484145408,Defrag: do not crash on empty quicklist.,3.0,2.0,"src/defrag.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,575.0,4.0,1.169398148148148,9527.0,1.855140741913773,4937.0,None,False,,
41868796759f5cf16c83e7a09c3e2f7abec08670,86192f3038316dbe464d5e50d818f99892359ad7,antirez,antirez@gmail.com,Wed Jan 11 15:37:19 2017 +0100,1484145439,Defrag: fix function name typo defarg -> defrag.,2.0,2.0,"src/defrag.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,576.0,5.0,0.0003587962962962963,9528.0,2788.096774193549,4938.0,None,False,,
86192f3038316dbe464d5e50d818f99892359ad7,6ad34a4b789ef69c3cfec4360869248ba884b988,antirez,antirez@gmail.com,Wed Jan 11 15:43:08 2017 +0100,1484145788,Defrag: not enabled by default. Error on CONFIG SET if not available.,11.0,1.0,"src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,14.0,2035.0,317.0,12.545324074074076,9529.5,1.0597832304348307,4940.0,None,False,True,"[""98d5d3f118eebb1d1e86625ab0ff808d019456bb"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
6ad34a4b789ef69c3cfec4360869248ba884b988,634b0966106b48cbf2c51fadafa7482a5af77e64,antirez,antirez@gmail.com,Wed Jan 11 17:24:49 2017 +0100,1484151889,Defrag: document the feature in redis.conf.,49.0,6.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1250.0,174.0,12.6159375,9531.0,1.0792648188055782,1391.0,None,False,,
634b0966106b48cbf2c51fadafa7482a5af77e64,56c01c959ab6e86b5fbb2f882a30324619987947,Guy Benoish,guy.benoish@redislabs.com,Wed Jan 11 19:24:19 2017 +0200,1484155459,enlarged buffer given to ld2string,7.0,2.0,"src/object.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",3.0,1.0,1.0,1.4355205042826666,13.0,678.3333333333334,171.0,225.1751929012345,2.0,1.0109832203339009,3.0,None,False,,
634b0966106b48cbf2c51fadafa7482a5af77e64,baa98988215f005b5b57e156c68a5bdc8454a3a5,antirez,antirez@gmail.com,Thu Jan 12 09:08:43 2017 +0100,1484208523,"MEMORY USAGE: support for modules data types.As a side effect of supporting it, we no longer crash when MEMORY USAGEnis called against a module data type.nnClose #3637.n",16.0,5.0,"src/module.c,CAS_DELIMITER,src/modules/hellotype.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",3.0,1.0,2.0,1.3421389558735095,13.0,1672.0,206.0,23.98161651234568,9533.0,1.0210360581175004,4943.0,None,False,,
baa98988215f005b5b57e156c68a5bdc8454a3a5,3f79b2f8831bc0fee3c037862aad5a3e9d70cf4b,antirez,antirez@gmail.com,Thu Jan 12 09:50:40 2017 +0100,1484211040,Defrag: don't crash when a module value is encountered.,3.0,0.0,"src/defrag.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,576.0,6.0,0.7592708333333333,9535.0,2.3170530937028397,4944.0,None,False,,
3f79b2f8831bc0fee3c037862aad5a3e9d70cf4b,636c693f447f4c242a1fff5ad987bc6102b3e243,antirez,antirez@gmail.com,Thu Jan 12 12:47:46 2017 +0100,1484221666,Use const in modules types mem_usage method.As suggested by @itamarhaber.n,4.0,4.0,"src/modules/hellotype.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,2.0,1.5,14.0,863.6666666666665,162.0,14.561450617283947,9537.0,3.2066980728865566,4947.0,None,False,,
636c693f447f4c242a1fff5ad987bc6102b3e243 afaaa9188537b7651b7e42dfe3e9f340af819a0f,d21aabcedcb3202701b4a6f5cd1b1537c5a5e31e,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 13 11:32:22 2017 +0100,1484303542,Merge pull request #3734 from badboy/avoid-commandInitialize help only in repl mode,,,,,,,,,,,,,,,Merge,False,,
d21aabcedcb3202701b4a6f5cd1b1537c5a5e31e,2cd1ae736f7ace5d0620937e4783fd85e9ca7448,antirez,antirez@gmail.com,Fri Jan 13 11:47:09 2017 +0100,1484304429,"Ziplist: remove static from functions, they prevent good crash reports.",14.0,14.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1774.0,52.0,24.506574074074074,9539.0,1.0408053772419343,4948.0,None,False,,
2cd1ae736f7ace5d0620937e4783fd85e9ca7448,53b8bf2c89ac9607a8bede2868d60cf8b3cbddd6,antirez,antirez@gmail.com,Wed Jan 18 17:05:10 2017 +0100,1484755510,"serverPanic(): allow printf() alike formatting.This is of great interest because allows us to print debuggingninformations that could be of useful when debugging, like in thenfollowing example:nnserverPanic(Unexpected encoding for object %d, %d,nobj->type, obj->encoding);n",14.0,4.0,"src/debug.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,14.0,1586.0,249.0,11.263900462962965,9540.5,1.05277761340892,4950.0,None,False,,
53b8bf2c89ac9607a8bede2868d60cf8b3cbddd6,17ac46ea78fc3bed81b764d096ec8fb38e3ae3c9,antirez,antirez@gmail.com,Wed Jan 18 17:11:57 2017 +0100,1484755917,"Add panic() into redisassert.h.This header file is for libs, like ziplist.c, that we want to leavenalmost separted from the core. The panic() calls will be easy to deletenin order to use such files outside, but the debugging info we gain arenvery valuable compared to simple assertions where it is not possible tonprint debugging info.n",2.0,0.0,"src/redisassert.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,47.0,3.0,542.1125462962963,9542.0,1.001844635411654,4951.0,Corrective,True,,
17ac46ea78fc3bed81b764d096ec8fb38e3ae3c9 b2da5ea773356320af3cda6cfd0f1fc1e7d48ba7,432699845c38f525c50ab700636339c9d9688b3e,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 20 11:01:43 2017 +0100,1484906503,Merge pull request #3712 from oranagra/fix_assert_debug_digestfix rare assertion in DEBUG DIGEST,,,,,,,,,,,,,,,Merge,False,,
432699845c38f525c50ab700636339c9d9688b3e 5dc4fe1529bb9e1134245db505883364caac3280,41d16f7a4a6848be304e0b4433bd5683caf27338,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 25 09:31:47 2017 +0100,1485333107,Merge pull request #3657 from itamarhaber/patch-9Verify pairs are provided after ZADD's subcommands,,,,,,,,,,,,,,,Merge,False,,
41d16f7a4a6848be304e0b4433bd5683caf27338,3ec1a001fbc11b54c0231f9c58384eb53ca3802e,miter,Miterv@163.com,Thu Jan 26 21:36:26 2017 +0900,1485434186,Change switch statment to if statment,2.0,4.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1160.0,108.0,14.185914351851851,0.0,0.0,0.0,None,False,,
41d16f7a4a6848be304e0b4433bd5683caf27338 3ec1a001fbc11b54c0231f9c58384eb53ca3802e,2e4f53a7111c92f2c297c396564ff02b6bf68bbf,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 26 13:41:59 2017 +0100,1485434519,Merge pull request #3778 from MiterV1/unstableChange switch statment to if statment,,,,,,,,,,,,,,,Merge,False,,
2e4f53a7111c92f2c297c396564ff02b6bf68bbf,3c9b817217b03d0377bed3857f0159a473711490,Jan-Erik Rediger,janerik@fnordig.de,Fri Jan 27 16:23:15 2017 +0100,1485530595,Don't divide by zeroPreviously Redis crashed on `MEMORY DOCTOR` when it has no slaves attached.nnFixes #3783n,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1158.0,109.0,1.1158449074074075,35.0,1.8961818917321,21.0,Corrective,True,,
2e4f53a7111c92f2c297c396564ff02b6bf68bbf 3c9b817217b03d0377bed3857f0159a473711490,713fe0b7d7096cbf3ce774e0041a0b6b31f5f26f,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 27 16:26:24 2017 +0100,1485530784,Merge pull request #3784 from badboy/dont-divide-by-zeroDon't divide by zero,,,,,,,,,,,,,,,Merge,False,,
713fe0b7d7096cbf3ce774e0041a0b6b31f5f26f,27e29f4fe61d822eb23d948bcb72db76c4c887e5,antirez,antirez@gmail.com,Mon Jan 30 09:58:34 2017 +0100,1485766714,Jemalloc updated to 4.4.0.The original jemalloc source tree was modified to:nn1. Remove the configure error that prevents nested builds.n2. Insert the Redis private Jemalloc API in order to allow thenRedis fragmentation function to work.n,20619.0,9736.0,"deps/jemalloc/.appveyor.yml,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/.travis.yml,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/jeprof.in,CAS_DELIMITER,deps/jemalloc/build-aux/config.guess,CAS_DELIMITER,deps/jemalloc/build-aux/config.sub,CAS_DELIMITER,deps/jemalloc/build-aux/install-sh,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/assert.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/nstime.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/pages.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ph.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.txt,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/size_classes.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/spin.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ticker.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/valgrind.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/witness.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/strings.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/windows_extra.h,CAS_DELIMITER,deps/jemalloc/install-sh,CAS_DELIMITER,deps/jemalloc/jemalloc.pc.in,CAS_DELIMITER,deps/jemalloc/msvc/ReadMe.txt,CAS_DELIMITER,deps/jemalloc/msvc/jemalloc_vc2015.sln,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.cpp,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.h,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads_main.cpp,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/nstime.c,CAS_DELIMITER,deps/jemalloc/src/pages.c,CAS_DELIMITER,deps/jemalloc/src/prng.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/spin.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/ticker.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/witness.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/mtx.h,CAS_DELIMITER,deps/jemalloc/test/include/test/test.h,CAS_DELIMITER,deps/jemalloc/test/include/test/timer.h,CAS_DELIMITER,deps/jemalloc/test/integration/MALLOCX_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/integration/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocated.c,CAS_DELIMITER,deps/jemalloc/test/integration/chunk.c,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/overflow.c,CAS_DELIMITER,deps/jemalloc/test/integration/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/sdallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.c,CAS_DELIMITER,deps/jemalloc/test/src/mtx.c,CAS_DELIMITER,deps/jemalloc/test/src/test.c,CAS_DELIMITER,deps/jemalloc/test/src/timer.c,CAS_DELIMITER,deps/jemalloc/test/stress/microbench.c,CAS_DELIMITER,deps/jemalloc/test/unit/a0.c,CAS_DELIMITER,deps/jemalloc/test/unit/arena_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/unit/ckh.c,CAS_DELIMITER,deps/jemalloc/test/unit/decay.c,CAS_DELIMITER,deps/jemalloc/test/unit/fork.c,CAS_DELIMITER,deps/jemalloc/test/unit/hash.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_alloc.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_free.c,CAS_DELIMITER,deps/jemalloc/test/unit/mallctl.c,CAS_DELIMITER,deps/jemalloc/test/unit/math.c,CAS_DELIMITER,deps/jemalloc/test/unit/nstime.c,CAS_DELIMITER,deps/jemalloc/test/unit/pack.c,CAS_DELIMITER,deps/jemalloc/test/unit/pages.c,CAS_DELIMITER,deps/jemalloc/test/unit/ph.c,CAS_DELIMITER,deps/jemalloc/test/unit/prng.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_active.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_idump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_thread_name.c,CAS_DELIMITER,deps/jemalloc/test/unit/rb.c,CAS_DELIMITER,deps/jemalloc/test/unit/run_quantize.c,CAS_DELIMITER,deps/jemalloc/test/unit/size_classes.c,CAS_DELIMITER,deps/jemalloc/test/unit/smoothstep.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats.c,CAS_DELIMITER,deps/jemalloc/test/unit/ticker.c,CAS_DELIMITER,deps/jemalloc/test/unit/tsd.c,CAS_DELIMITER,deps/jemalloc/test/unit/util.c,CAS_DELIMITER,deps/jemalloc/test/unit/witness.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.c,CAS_DELIMITER",153.0,1.0,16.0,5.726789693567718,14.0,396.3790849673202,353.0,414.28124576373733,9619.0,0.9935535067936028,1091.0,None,False,,
27e29f4fe61d822eb23d948bcb72db76c4c887e5,3a7410a8a69dca0ff5d4cd4e48abf974d2e53b9f,antirez,antirez@gmail.com,Fri Jan 27 16:54:20 2017 +0100,1485532460,"ziplist: better comments, some refactoring.",250.0,100.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1774.0,53.0,14.21332175925926,9696.0,1.0703565300875957,4952.0,None,False,True,"[""813960dbdd86b88b509b2946dbaa023e0ae8b1b9"", ""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
3a7410a8a69dca0ff5d4cd4e48abf974d2e53b9f,c495d095ae495ea5253443ee4562aaa30681a854,antirez,antirez@gmail.com,Mon Jan 30 16:34:08 2017 +0100,1485790448,"Ziplist: insertion bug under particular conditions fixed.Ziplists had a bug that was discovered while investigating a differentnissue, resulting in a corrupted ziplist representation, and a likelynsegmentation foult and/or data corruption of the last element of thenziplist, once the ziplist is accessed again.nnThe bug happens when a specific set of insertions / deletions isnperformed so that an entry is encoded to have a prevlen field (thenlength of the previous entry) of 5 bytes but with a count that could benencoded in a prevlen field of a since byte. This could happen when thencascading update process called by ziplistInsert()/ziplistDelete() inncertain contitious forces the prevlen to be bigger than necessary innorder to avoid too much data moving around.nnOnce such an entry is generated, inserting a very small entrynimmediately before it will result in a resizing of the ziplist for ancount smaller than the current ziplist length (which is a violation,ninserting code expects the ziplist to get bigger actually). So an FFnbyte is inserted in a misplaced position. Moreover a realloc() isnperformed with a count smaller than the ziplist current length so thenfinal bytes could be trashed as well.nnSECURITY IMPLICATIONS:nnCurrently it looks like an attacker can only crash a Redis server bynproviding specifically choosen commands. However a FF byte is writtennand there are other memory operations that depend on a wrong count, soneven if it is not immediately apparent how to mount an attack in ordernto execute code remotely, it is not impossible at all that this could bendone. Attacks always get better... and we did not spent enough time innorder to think how to exploit this issue, but security researchersnor malicious attackers could.n",9.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1924.0,54.0,2.9859722222222222,9697.0,1.3348992976417509,4953.0,None,False,True,"[""0dbfb1d154b0df28bbdb16a59ae7342d4a3f9281""]"
c495d095ae495ea5253443ee4562aaa30681a854,0dbfb1d154b0df28bbdb16a59ae7342d4a3f9281,antirez,antirez@gmail.com,Wed Feb 1 17:01:31 2017 +0100,1485964891,Fix ziplist fix...,2.0,2.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1932.0,55.0,2.0190162037037043,9698.0,1.495290725337216,4954.0,Corrective,True,,
0dbfb1d154b0df28bbdb16a59ae7342d4a3f9281,f917e0da4cda8a0e6cd3242180b268706cdd2dd2,antirez,antirez@gmail.com,Thu Feb 9 09:58:38 2017 +0100,1486630718,"Fix MIGRATE closing of cached socket on error.After investigating issue #3796, it was discovered that MIGRATEncould call migrateCloseSocket() after the original MIGRATE c->argvnwas already rewritten as a DEL operation. As a result the host/portnpassed to migrateCloseSocket() could be anything, often a NULL pointernthat gets deferenced crashing the server.nnNow the socket is closed at an earlier time when there is a socketnerror in a later stage where no retry will be performed, before wenrewrite the argument vector. Moreover a check was added so that later,nin the socket_err label, there is no further attempt at closing thensocket if the argument was rewritten.nnThis fix should resolve the bug reported in #3796.n",23.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,5313.0,507.0,56.886504629629634,9699.0,1.017578861744287,4955.0,Corrective,True,,
dfc98dccf45c639cff45e84bb78a5a2d41a214bb f917e0da4cda8a0e6cd3242180b268706cdd2dd2,1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,flowly,zju.zhengmh@gmail.com,Fri Feb 10 19:53:36 2017 +0800,1486727616,Merge pull request #1 from antirez/unstableupdate to upstream,,,,,,,,,,,,,,,Merge,False,,
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,de07deb4d2ca3b9971a29319937aeb0c76b58011,minghang.zmh,minghang.zmh@alibaba-inc.com,Fri Feb 10 20:13:01 2017 +0800,1486728781,fix server.stat_net_output_bytes calc bug,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1965.0,256.0,73.80482638888887,0.0,0.0,0.0,Corrective,True,,
f917e0da4cda8a0e6cd3242180b268706cdd2dd2,1e272a6b52d663e0b4db8f42162c4461405b7f84,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 19 14:01:58 2017 +0000,1487512918,ARM: Fix 64 bit unaligned access in MurmurHash64A().,10.0,0.0,"src/config.h,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,13.0,877.0,130.0,402.69775462962957,6.5,1.00129627775913,6.0,None,False,,
1e272a6b52d663e0b4db8f42162c4461405b7f84,72d6d64771ce52519c240fb122dbb35f989b4669,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 19 14:59:39 2017 +0000,1487516379,"ARM: Avoid memcpy() in MurmurHash64A() if we are using 64 bit ARM.However note that in architectures supporting 64 bit unalignednaccesses memcpy(...,...,8) is likely translated to a simplenword memory movement anyway.n",5.0,1.0,"src/Makefile,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272446,14.0,678.6666666666666,269.0,17.21230324074074,9.0,1.0193810351976031,9.0,None,False,,
72d6d64771ce52519c240fb122dbb35f989b4669,4e9cf4cc7ed4b732fc4bb592f19ceb41d132954e,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 19 15:02:37 2017 +0000,1487516557,"ARM: Use libc malloc by default.I'm not sure how much test Jemalloc gets on ARM, moreoverncompiling Redis with Jemalloc support in not very powerfulndevices, like most ARMs people will build Redis on, is extremelynslow. It is possible to enable Jemalloc build anyway if needednby using make MALLOC=jemalloc.n",6.0,3.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,273.0,138.0,0.0020601851851851853,11.0,486.3932584269663,10.0,None,False,,
4e9cf4cc7ed4b732fc4bb592f19ceb41d132954e,7329cc39818a05c168e7d1e791afb03c089f1933,Salvatore Sanfilippo,antirez@gmail.com,Sun Feb 19 15:07:08 2017 +0000,1487516828,ARM: Avoid fast path for BITOP.GCC will produce certain unaligned multi load-store instructionsnthat will be trapped by the Linux kernel since ARM v6 cannotnhandle them with unaligned addresses. Better to use the slowernbut safer implementation instead of generating the exception whichnshould be anyway very slow.n,5.0,1.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1114.0,49.0,120.88358796296295,12.0,1.0082724215656669,11.0,None,False,,
f917e0da4cda8a0e6cd3242180b268706cdd2dd2,76d87f47c7075a04dfd759fc5bd102dfad005dcc,antirez,antirez@gmail.com,Mon Feb 20 10:18:41 2017 +0100,1487582321,Don't leak file descriptor on syncWithMaster().Close #3804.n,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2667.0,192.0,65.68759259259261,9700.0,1.0152235751156569,4956.0,None,False,,
76d87f47c7075a04dfd759fc5bd102dfad005dcc,9b05aafb50348838f45bfddcd689e7d8d1d3c950,John.Koepi,john.koepi@gmail.com,Sat Jul 23 16:31:56 2016 +0200,1469284316,"fix #2883, #2857 pipe fds leak when fork() failed on bg aof rw",1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1566.0,156.0,-108.83275462962965,0.0,0.0,0.0,Corrective,True,,
9b05aafb50348838f45bfddcd689e7d8d1d3c950,adeed29a99dcd0efdbfe4dbd5da74e7b01966c67,antirez,antirez@gmail.com,Mon Feb 20 16:09:54 2017 +0100,1487603394,"Use SipHash hash function to mitigate HashDos attempts.This change attempts to switch to an hash function which mitigatesnthe effects of the HashDoS attack (denial of service attack tryingnto force data structures to worst case behavior) while at the same timenproviding Redis with an hash function that does not expect the inputndata to be word aligned, a condition no longer true now that sds.cnstrings have a varialbe length header.nnNote that it is possible sometimes that even using an hash functionnfor which collisions cannot be generated without knowing the seed,nspecial implementation details or the exposure of the seed in annindirect way (for example the ability to add elements to a Set andncheck the return in which Redis returns them with SMEMBERS) maynmake the attacker's life simpler in the process of trying to guessnthe correct seed, however the next step would be to switch to anlog(N) data structure when too many items in a single bucket arendetected: this seems like an overkill in the case of Redis.nnSPEED REGRESION TESTS:nnIn order to verify that switching from MurmurHash to SipHash hadnno impact on speed, a set of benchmarks involving fast insertionnof 5 million of keys were performed.nnThe result shows Redis with SipHash in high pipelining conditionsnto be about 4% slower compared to using the previous hash function.nHowever this could partially be related to the fact that the currentnimplementation does not attempt to hash whole words at a time butnreads single bytes, in order to have an output which is endian-neturalnand at the same time working on systems where unaligned memory accessesnare a problem.nnFurther X86 specific optimizations should be tested, the functionnmay easily get at the same level of MurMurHash2 if a few optimizationsnare performed.n",361.0,82.0,"src/Makefile,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/siphash.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",12.0,1.0,1.0,1.3172109491428226,14.0,1869.333333333333,1297.0,57.556273148148136,9706.5,1.0884093056472015,4968.0,Feature Addition,False,True,"[""e1222d8b10552cda6f6fdf1178a2ca25ad77894b""]"
adeed29a99dcd0efdbfe4dbd5da74e7b01966c67,05ea8c612238bc8b9a8eda2427d6cf8a3afb4ac5,antirez,antirez@gmail.com,Mon Feb 20 17:32:46 2017 +0100,1487608366,SipHash x86 optimizations.,23.0,2.0,"src/siphash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,328.0,1.0,0.0575462962962963,9713.0,18.37731295253419,4969.0,None,False,,
05ea8c612238bc8b9a8eda2427d6cf8a3afb4ac5,84fa8230e5a75c8ff4eed6afa56d7a6babdb8fb9,antirez,antirez@gmail.com,Mon Feb 20 17:39:44 2017 +0100,1487608784,Use locale agnostic tolower() in dict.c hash function.,27.0,17.0,"src/Makefile,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/siphash.c,CAS_DELIMITER",3.0,1.0,1.0,0.5304060778306042,14.0,615.3333333333334,221.0,0.04320216049382716,9715.0,11.586730137670354,4972.0,None,False,True,"[""e1222d8b10552cda6f6fdf1178a2ca25ad77894b""]"
9b05aafb50348838f45bfddcd689e7d8d1d3c950,cd90389b30f745ef1ed04fd579adbd914189a10a,antirez,antirez@gmail.com,Tue Feb 21 12:25:29 2017 +0100,1487676329,"freeMemoryIfNeeded(): improve code and lazyfree handling.1. Refactor memory overhead computation into a function.n2. Every 10 keys evicted, check if memory usage already reachedn   the target value directly, since we otherwise don't count alln   the memory reclaimed by the background thread right now.n",42.0,19.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,524.0,12.0,215.73057870370369,9717.0,1.004635411474854,4973.0,None,False,,
84fa8230e5a75c8ff4eed6afa56d7a6babdb8fb9,0285c2714b6f1f4517d2ac3bc34177f874205a8b,antirez,antirez@gmail.com,Tue Feb 21 17:07:28 2017 +0100,1487693248,"SipHash 2-4 -> SipHash 1-2.For performance reasons we use a reduced rounds variant ofnSipHash. This should still provide enough protection and theneffects in the hash table distribution are non existing.nIf some real world attack on SipHash 1-2 will be found we canntrivially switch to something more secure. Anyway it is anbig step forward from Murmurhash, for which it is trivial tongenerate *seed independent* colliding keys... The speednpenatly introduced by SipHash 2-4, around 4%, was a too bignprice to pay compared to the effectiveness of the HashDoSnattack against SipHash 1-2, and considering so far in thenRedis history, no such an incident ever happened even whilenusing trivially to collide hash functions.n",15.0,14.0,"src/siphash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,359.0,3.0,0.9775925925925926,9718.0,2.0229210077666218,4974.0,None,False,,
cd90389b30f745ef1ed04fd579adbd914189a10a 7329cc39818a05c168e7d1e791afb03c089f1933,e084b5a39fccef5a6d97384d43b9babdca77f7f7,antirez,antirez@gmail.com,Tue Feb 21 17:10:06 2017 +0100,1487693406,Merge branch 'arm' into unstable,,,,,,,,,,,,,,,Merge,False,,
e084b5a39fccef5a6d97384d43b9babdca77f7f7 0285c2714b6f1f4517d2ac3bc34177f874205a8b,06263485d46696ba76a653d2b594f3493103c001,antirez,antirez@gmail.com,Tue Feb 21 17:10:10 2017 +0100,1487693410,Merge branch 'siphash' into unstable,,,,,,,,,,,,,,,Merge,False,,
06263485d46696ba76a653d2b594f3493103c001,7c8ddab4f88a76413641b3dc49b0c42ac8ee3b2e,antirez,antirez@gmail.com,Wed Feb 22 12:00:09 2017 +0100,1487761209,Test: fix conditional execution of HINCRBYFLOAT representation test.,1.0,1.0,"tests/unit/type/hash.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,536.0,24.0,452.10525462962966,9719.0,1.0022118743141333,721.0,Preventative,False,,
7c8ddab4f88a76413641b3dc49b0c42ac8ee3b2e,2b36706a48759ac6ed991ab1f8257de122425a75,antirez,antirez@gmail.com,Wed Feb 22 12:27:01 2017 +0100,1487762821,"Test: replication-psync, wait more to detect write load.Slow systems like the original Raspberry PI need more timenthan 5 seconds to start the script and detect writes.nAfter fixing the Raspberry PI can pass the unit without issues.n",1.0,1.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,128.0,6.0,567.1723032407407,9720.0,1.0017631326393872,722.0,Preventative,False,,
2b36706a48759ac6ed991ab1f8257de122425a75,95883313b5a405916fabed34c3af290d6072c817,antirez,antirez@gmail.com,Wed Feb 22 13:08:21 2017 +0100,1487765301,Solaris fixes about tail usage and atomic vars.Testing with Solaris C compiler (SunOS 5.11 11.2 sun4v sparc sun4v)nthere were issues compiling due to atomicvar.h and running thentests also failed because of tail usage not conform with Solarisntail implementation. This commit fixes both the issues.n,7.0,7.0,"src/atomicvar.h,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER,tests/integration/rdb.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.8423709931771088,13.0,166.25,48.0,321.17201388888884,9722.5,1.0026906550256864,725.0,Corrective,True,,
95883313b5a405916fabed34c3af290d6072c817,f86df924b01db43eb68f5c4b4cac4c44c1507390,oranagra,oran@redislabs.com,Thu Feb 23 03:04:08 2017 -0800,1487847848,add SDS_NOINIT option to sdsnewlen to avoid unnecessary memsets.this commit also contains small bugfix in rdbLoadLzfStringObjectna bug that currently has no implications.n,19.0,11.0,"src/aof.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",6.0,1.0,1.0,2.217856113506615,13.0,1357.1666666666667,815.0,161.1414988425926,49.5,1.0031765567271014,50.0,Corrective,True,,
95883313b5a405916fabed34c3af290d6072c817,161a3a174b477fa95003765b682325604327074c,oranagra,oran@redislabs.com,Thu Feb 23 03:44:42 2017 -0800,1487850282,"when a slave experiances an error on commands that come from master, print to the logsince slave isn't replying to it's master, these errors go unnoticed.nsince we don't expect the master to send garbadge to the slave, this should be safe.n(as long as we don't log OOM errors there)n",2.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1965.0,258.0,0.028171296296296295,53.0,36.49712407559573,51.0,None,False,,
06263485d46696ba76a653d2b594f3493103c001,d7826823c05ad82f710da74c3d5d402898187888,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 23 22:38:44 2017 +0800,1487860724,Fix BITPOS unaligned memory access.,14.0,7.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1118.0,50.0,3.9802777777777782,13.0,1.2512387465978088,12.0,Corrective,True,,
d7826823c05ad82f710da74c3d5d402898187888,b3391fd853d55b3da04ede024adcc6bf017c78f1,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 23 22:39:44 2017 +0800,1487860784,Use ARM unaligned accesses ifdefs for SPARC as well.,11.0,2.0,"src/bitops.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER",3.0,1.0,1.0,1.198183947911799,14.0,964.0,185.0,2.6576774691358023,15.0,481.1254155116715,15.0,None,False,,
95883313b5a405916fabed34c3af290d6072c817 b3391fd853d55b3da04ede024adcc6bf017c78f1,ed7e331051e79cabf4f69b753d116382f2962ca4,antirez,antirez@gmail.com,Thu Feb 23 15:35:01 2017 +0100,1487860501,Merge branch 'sparc' of ssh://209.141.57.197:12222//export/home/antirez/redis into sparc,,,,,,,,,,,,,,,Merge,False,,
ed7e331051e79cabf4f69b753d116382f2962ca4,9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 24 00:00:13 2017 +0800,1487865613,"Makefile: fix building with Solaris C compiler, 64 bit.",7.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,276.0,141.0,2.9725578703703706,17.0,1.3364106078363425,16.0,None,False,,
9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,4b2229e4b882c49eae04b65792606b255af3d215,Dvir Volk,dvirsky@gmail.com,Wed Mar 1 16:51:01 2017 +0200,1488379861,fixed free of blocked client before refering to it,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3592.0,95.0,8.986886574074074,22.0,1.1112732414899795,22.0,Corrective,True,,
56c01c959ab6e86b5fbb2f882a30324619987947 9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,71a8df6a2b6fe37a625636a3902fcc713c7c4919,Guy Benoish,guy.benoish@redislabs.com,Thu Mar 2 13:25:05 2017 +0200,1488453905,Merge branch 'unstable' of https://github.com/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,443f279a3a33f8047adc397bb53aad614aa35133,itamar,itamar@redislabs.com,Mon Mar 6 14:37:10 2017 +0200,1488803830,Sets up fake client to select current db in RM_Call(),1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3592.0,96.0,4.907048611111111,2.0,1.203788484535426,2.0,None,False,,
9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,59bdd08214831b268dd7c4981db8404da9c11e3a,vienna,viennadd@gmail.com,Tue Mar 7 16:14:05 2017 +0000,1488903245,fix #3847: add close socket before return ANET_ERR.,3.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,655.0,56.0,197.94085648148152,0.0,0.0,0.0,Corrective,True,,
9cc83d2ad9d5ed0e6a396a7e26814ac2f2445d1c,a62f786344d894b7447c3d3de6422cab6798c392,antirez,antirez@gmail.com,Thu Mar 9 13:49:36 2017 +0100,1489063776,Use sha256 instead of sha1 to generate tarball hashes.,2.0,2.0,"utils/releasetools/04_release_hash.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,6.0,8.0,1.0,674.1471759259259,9725.0,1.0014833556168599,86.0,None,False,,
a62f786344d894b7447c3d3de6422cab6798c392,4acb4da1d13a522c1c4e03bd4c5cab3c3b0c7724,Oran Agra,oran@monfort.co.il,Wed Mar 15 01:05:15 2017 -0700,1489565115,"add LFU policies to the test suite, just for coverage",2.0,2.0,"tests/unit/maxmemory.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,144.0,3.0,957.5593287037036,29.0,1.0010443217146177,4.0,Feature Addition,False,,
a62f786344d894b7447c3d3de6422cab6798c392 4acb4da1d13a522c1c4e03bd4c5cab3c3b0c7724,94751543b0a15ea333dab3121fa32747cf59de8f,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 15 09:18:04 2017 +0100,1489565884,"Merge pull request #3875 from oranagra/lfu_testsadd LFU policies to the test suite, just for coverage",,,,,,,,,,,,,,,Merge,False,,
94751543b0a15ea333dab3121fa32747cf59de8f,1409c545da7861912acef4f42c4932f6c23e9937,antirez,antirez@gmail.com,Mon Mar 27 15:26:56 2017 +0200,1490621216,Cluster: hash slots tracking using a radix tree.,2115.0,65.0,"src/Makefile,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,src/rax_malloc.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",9.0,1.0,1.0,0.914151111753135,14.0,1041.888888888889,995.0,91.71192258230451,9730.0,1.0060083014406818,4984.0,None,False,True,"[""91999fce407692b205d3c1e3d376ce0012267203"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""534c3bc21a256e113265ff1af6724af5ac4c9f9c""]"
1409c545da7861912acef4f42c4932f6c23e9937,3f9e2322ececcbc5ca284cbd3d0d61c0ef322032,antirez,antirez@gmail.com,Fri Apr 7 08:46:39 2017 +0200,1491547599,Rax library updated.,152.0,265.0,"src/db.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER",3.0,1.0,1.0,0.3752114813464859,14.0,1129.3333333333333,184.0,10.722025462962963,9736.0,1.056995864561418,4987.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
3f9e2322ececcbc5ca284cbd3d0d61c0ef322032,98db5739cc2f7fa4a7f0a661250cf1ebba78525b,lorneli,lorneli@163.com,Sat Apr 8 15:15:24 2017 +0800,1491635724,Expire: Update comment of activeExpireCycle functionThe macro REDIS_EXPIRELOOKUPS_TIME_PERC has been replaced bynACTIVE_EXPIRE_CYCLE_SLOW_TIME_PERC in commitn6500fabfb881a7ffaadfbff74ab801c55d4591fc.n,1.0,1.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,502.0,5.0,115.65846064814815,0.0,0.0,0.0,None,False,,
3f9e2322ececcbc5ca284cbd3d0d61c0ef322032,91999fce407692b205d3c1e3d376ce0012267203,antirez,antirez@gmail.com,Sat Apr 8 17:31:09 2017 +0200,1491665469,Rax library updated.Important bugs fixed.n,13.0,10.0,"src/rax.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1730.0,2.0,1.3642361111111112,9738.0,1.733010944260626,4988.0,Corrective,True,,
91999fce407692b205d3c1e3d376ce0012267203,ffefc9f92d55a45439afe80d6a35615a7cc38758,antirez,antirez@gmail.com,Mon Apr 10 09:33:21 2017 +0200,1491809601,"Fix modules blocking commands awake delay.If a thread unblocks a client blocked in a module command, by using thenRedisMdoule_UnblockClient() API, the event loop may not be awaken untilnthe next timeout of the multiplexing API or the next unrelated I/Onoperation on other clients. We actually want the client to be servednASAP, so a mechanism is needed in order for the unblocking API to informnRedis that there is a client to serve ASAP.nnThis commit fixes the issue using the old trick of the pipe: when anclient needs to be unblocked, a byte is written in a pipe. When we runnthe list of clients blocked in modules, we consume all the bytesnwritten in the pipe. Writes and reads are performed inside the contextnof the mutex, so no race is possible in which we consume the bytes thatnare actually related to an awake request for a client that should stillnbe put into the list of clients to unblock.nnIt was verified that after the fix the server handles the blockednclients with the expected short delay.nnThanks to @dvirsky for understanding there was such a problem andnreporting it.n",42.0,0.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2060026902433667,14.0,3123.333333333333,326.0,32.40880787037037,9740.0,1.0170033481358165,4991.0,Corrective,True,,
ffefc9f92d55a45439afe80d6a35615a7cc38758 4b2229e4b882c49eae04b65792606b255af3d215,01b6966afc1c80f40f63b28d01b45c09b039cf7a,Salvatore Sanfilippo,antirez@gmail.com,Mon Apr 10 13:14:52 2017 +0200,1491822892,Merge pull request #3843 from dvirsky/fix_bc_freefixed free of blocked client before refering to it,,,,,,,,,,,,,,,Merge,False,,
01b6966afc1c80f40f63b28d01b45c09b039cf7a,531647bb1bfb4ce02b691605e11ff4144396442b,antirez,antirez@gmail.com,Mon Apr 10 13:17:05 2017 +0200,1491823025,Make more obvious why there was issue #3843.,3.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3621.0,98.0,0.15537037037037038,9742.0,7.4362336114421925,4992.0,None,False,,
531647bb1bfb4ce02b691605e11ff4144396442b 98db5739cc2f7fa4a7f0a661250cf1ebba78525b,69ce5c5d10f0baf395892a850f656463f42d8d1d,Salvatore Sanfilippo,antirez@gmail.com,Tue Apr 11 16:31:55 2017 +0200,1491921115,Merge pull request #3924 from lorneli/unstableExpire: Update comment of activeExpireCycle function,,,,,,,,,,,,,,,Merge,False,,
531647bb1bfb4ce02b691605e11ff4144396442b,aa5b4be02ecf280b68786986f3fe99a9abcf0446,antirez,antirez@gmail.com,Tue Apr 11 16:45:08 2017 +0200,1491921908,Fix zmalloc_get_memory_size() ifdefs to actually use the else branch.Close #3927.n,0.0,2.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,428.0,36.0,91.18019675925926,9743.0,1.0109672937276093,4993.0,Corrective,True,,
aa5b4be02ecf280b68786986f3fe99a9abcf0446 69ce5c5d10f0baf395892a850f656463f42d8d1d,74720ea993fa67ec865c697e1291e953628bdffd,antirez,antirez@gmail.com,Tue Apr 11 16:45:49 2017 +0200,1491921949,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
74720ea993fa67ec865c697e1291e953628bdffd,f47607af0242c31a113e6ff9c0a884acec036757,antirez,antirez@gmail.com,Tue Apr 11 16:54:27 2017 +0200,1491922467,Fix preprocessor if/else chain broken in order to fix #3927.,3.0,0.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,426.0,37.0,0.006469907407407408,9744.0,155.56171735241503,4994.0,Corrective,True,,
f47607af0242c31a113e6ff9c0a884acec036757,4a850be4dc0709d66209e440315ca314a785e964,antirez,antirez@gmail.com,Tue Apr 11 16:56:00 2017 +0200,1491922560,"Set lua-time-limit default value at safe place.Otherwise, as it was, it will overwrite whatever the user set.nnClose #3703.n",1.0,1.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,14.0,3097.5,277.0,171.01441550925924,9745.5,1.0029293395150205,4996.0,None,False,,
4a850be4dc0709d66209e440315ca314a785e964,1210af380429f2f96324f4c46a6aef7e4ddb7a3e,antirez,antirez@gmail.com,Wed Apr 12 10:12:27 2017 +0200,1491984747,Add a top comment in crucial functions inside networking.c.,23.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1967.0,259.0,47.85260416666666,9747.0,1.020897504272016,4997.0,Feature Addition,False,,
1210af380429f2f96324f4c46a6aef7e4ddb7a3e,104584b95e900bd52a754d7a2480b8768d1bae63,antirez,antirez@gmail.com,Wed Apr 12 12:28:05 2017 +0200,1491992885,Fix typo in feedReplicationBacklog() top comment.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2668.0,193.0,51.04819444444446,9748.0,1.019589331432443,4998.0,Corrective,True,,
1210af380429f2f96324f4c46a6aef7e4ddb7a3e,b8286d1fc9c1b8c2e17a9e884d94492ba039c53c,Itamar Haber,itamar@redislabs.com,Thu Apr 13 17:03:46 2017 +0300,1492092226,"Changes command stats iteration to being dict-basedWith the addition of modules, looping over the redisCommandTablenmisses any added commands. By moving to dictionary iteration thisnis resolved.n",17.0,10.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3807.0,112.0,1.963726851851852,16.0,1.5092357926750204,14.0,Feature Addition,False,,
104584b95e900bd52a754d7a2480b8768d1bae63,c5d6f577f0a975c5c7f2e0f28ad9c4c4ec05eded,antirez,antirez@gmail.com,Thu Apr 13 19:22:35 2017 +0200,1492104155,Cluster: collect more specific bus messages stats.First step in order to change Cluster in order to use less messages.nRelated to issue #3929.n,82.0,31.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.9836116360305414,14.0,2798.0,548.0,17.163645833333334,9749.5,1.043697009789344,5000.0,None,False,,
c5d6f577f0a975c5c7f2e0f28ad9c4c4ec05eded,8f7bf2841a4a793a02a01d5c4c887a7770aa5e45,antirez,antirez@gmail.com,Fri Apr 14 10:14:17 2017 +0200,1492157657,"Cluster: decrease ping/pong traffic by trusting other nodes reports.Cluster of bigger sizes tend to have a lot of traffic in the cluster busnjust for failure detection: a node will try to get a ping reply fromnanother node no longer than when the half the node timeout would elapsed,nin order to avoid a false positive.nnHowever this means that if we have N nodes and the node timeout is setnto, for instance M seconds, we'll have to ping N nodes every M/2nseconds. This N*M/2 pings will receive the same number of pongs, sona total of N*M packets per node. However given that we have a total of Nnnodes doing this, the total number of messages will be N*N*M.nnIn a 100 nodes cluster with a timeout of 60 seconds, this translatesnto a total of 100*100*30 packets per second, summing all the packetsnexchanged by all the nodes.nnThis is, as you can guess, a lot... So this patch changes thenimplementation in a very simple way in order to trust the reports ofnother nodes: if a node A reports a node B as alive at least up tona given time, we update our view accordingly.nnThe problem with this approach is that it could result into a subset ofnnodes being able to reach a given node X, and preventing others fromndetecting that is actually not reachable from the majority of nodes.nSo the above algorithm is refined by trusting other nodes only if we donnot have currently a ping pending for the node X, and if there are nonfailure reports for that node.nnSince each node, anyway, pings 10 other nodes every second (one nodenevery 100 milliseconds), anyway eventually even trusting the other nodesnreports, we will detect if a given node is down from our POV.nnNow to understand the number of packets that the cluster would exchangenfor failure detection with the patch, we can start considering thenrandom PINGs that the cluster sent anyway as base line:nEach node sends 10 packets per second, so the total traffic if nonadditioal packets would be sent, including PONG packets, would be:nnTotal messages per second = N*10*2nnHowever by trusting other nodes gossip sections will not AWALYS preventnpinging nodes for the half timeout reached rule all the times. Thenmath involved in computing the actual rate as N and M change is quitencomplex and depends also on another parameter, which is the number ofnentries in the gossip section of PING and PONG packets. However it isnpossible to compare what happens in cluster of different sizesnexperimentally. After applying this patch a very important reduction innthe number of packets exchanged is trivial to observe, without apparentnimpacts on the failure detection performances.nnActual numbers with different cluster sizes should be published in thenReids Cluster documentation in the future.nnRelated to #3929.n",13.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5379.0,510.0,0.6192361111111111,9751.0,2.614892901199955,5001.0,None,False,,
8f7bf2841a4a793a02a01d5c4c887a7770aa5e45,6878a3fedd8b15ed3c0602d15940007ebd240f22,antirez,antirez@gmail.com,Fri Apr 14 10:35:55 2017 +0200,1492158955,Cluster: add clean-logs command to create-cluster script.,9.0,1.0,"src/cluster.c,CAS_DELIMITER,utils/create-cluster/create-cluster,CAS_DELIMITER",2.0,2.0,2.0,0.8812908992306927,14.0,2743.5,515.0,376.25440393518517,9752.5,34.282636709073174,87.0,None,False,,
6878a3fedd8b15ed3c0602d15940007ebd240f22,8c829d9e4323b3636afa43d0ad8eb1ce2397c3f9,antirez,antirez@gmail.com,Fri Apr 14 10:40:22 2017 +0200,1492159222,"Cluster: fix gossip section ping/pong times encoding.The gossip section times are 32 bit, so cannot store the millisecondsntime but just the seconds approximation, which is good enough for ournuses. At the same time however, when comparing the gossip section timesnof other nodes with our node's view, we need to convert back tonmilliseconds.nnRelated to #3929. Without this change the patch to reduce the traffic innthe bus message does not work.n",4.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5393.0,512.0,0.003090277777777777,9754.0,324.59550561797755,5003.0,None,False,,
8c829d9e4323b3636afa43d0ad8eb1ce2397c3f9,02777bb2529a403b50be4621a93fd65cdce14343,antirez,antirez@gmail.com,Fri Apr 14 13:39:49 2017 +0200,1492169989,"Cluster: always add PFAIL nodes at end of gossip section.To rely on the fact that nodes in PFAIL state will be shared around bynrandomly adding them in the gossip section is a weak assumption,nespecially after changes related to sending less ping/pong packets.nnWe want to always include gossip entries for all the nodes that are innPFAIL state, so that the PFAIL -> FAIL state promotion can happen muchnfaster and reliably.nnRelated to #3929.n",71.0,23.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER",2.0,1.0,1.0,0.14854949043034826,14.0,2831.0,553.0,0.4432928240740741,9755.5,5.576220988350948,5005.0,None,False,,
02777bb2529a403b50be4621a93fd65cdce14343,3f068b92b98c664ccefb457103068583879609e3,antirez,antirez@gmail.com,Fri Apr 14 17:53:11 2017 +0200,1492185191,"Test: fix, hopefully, false PSYNC failure like in issue #2715.And many other related Github issues... all reporting the same problem.nThere was probably just not enough backlog in certain unlucky runs.nI'll ask people that can reporduce if they see now this as fixed asnwell.n",1.0,1.0,"tests/integration/replication-psync.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,128.0,7.0,51.18483796296297,9757.0,1.0195370355714244,726.0,Preventative,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
3f068b92b98c664ccefb457103068583879609e3,271733f4f83552acc52a8baba4ae3fa7bd6b4ba0,antirez,antirez@gmail.com,Sat Apr 15 10:08:39 2017 +0200,1492243719,"Cluster: discard pong times in the future.However we allow for 500 milliseconds of tolerance, in order tonavoid often discarding semantically valid info (the node is up)nbecause of natural few milliseconds desync among servers even whennNTP is used.nnNote that anyway we should ping the node from time to time regardless andndiscover if it's actually down from our point of view, since no updatenis accepted while we have an active ping on the node.nnRelated to #3929.n",8.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5440.0,514.0,0.8533564814814815,9758.0,2.171843211718432,5006.0,None,False,,
271733f4f83552acc52a8baba4ae3fa7bd6b4ba0,23ec36909e54a23d90a36f3426bd4ca6b4e643a6,spinlock,wnzheng@gmail.com,Fri Mar 31 21:45:00 2017 +0800,1490967900,rdb: saving skiplist in reversed order to accelerate the deserialisation process,8.0,7.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1915.0,186.0,36.11171296296296,0.0,0.0,0.0,None,False,,
271733f4f83552acc52a8baba4ae3fa7bd6b4ba0,c4ad4765b03b303473b4a76f443bcca638aa1afd,Jan-Erik Rediger,janerik@fnordig.de,Mon Apr 17 13:37:59 2017 +0200,1492429079,Reorder to make dict-benchmark compile on LinuxFixes #3944n,2.0,2.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,283.0,143.0,20.924340277777773,36.0,1.0477912319683516,22.0,Corrective,True,,
271733f4f83552acc52a8baba4ae3fa7bd6b4ba0 23ec36909e54a23d90a36f3426bd4ca6b4e643a6,0a942f17516c034a7868bbc68243b5f8a8d06f8d,Salvatore Sanfilippo,antirez@gmail.com,Tue Apr 18 10:56:57 2017 +0200,1492505817,Merge pull request #3949 from spinlock/unstable-rdb-encodingrdb: saving skiplist in reversed order to accelerate the deserialisation process,,,,,,,,,,,,,,,Merge,False,,
0a942f17516c034a7868bbc68243b5f8a8d06f8d,c33493277a218c6a877158c585447dda912f4d19,antirez,antirez@gmail.com,Tue Apr 18 11:01:47 2017 +0200,1492506107,"Clarify why we save ziplist elements in revserse order.Also get rid of variables that are now kinda redundant, since thendictionary iterator was removed.nnThis is related to PR #3949.n",13.0,7.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1916.0,187.0,17.803321759259262,9759.0,1.0561692932095614,5007.0,None,False,,
271733f4f83552acc52a8baba4ae3fa7bd6b4ba0,5f88bd320eb56e6c65a44651042ec14b64823763,u00e5u00bcu00a0u00e6u0096u0087u00e5u00bau00b7,zhangwenkang@zhangwenkangdeMacBook-Pro.local,Tue Apr 18 20:10:08 2017 +0800,1492517408,update block->free after some diff data are written to the child process,1.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1567.0,158.0,54.04583333333333,0.0,0.0,0.0,None,False,,
c33493277a218c6a877158c585447dda912f4d19 59bdd08214831b268dd7c4981db8404da9c11e3a,332a05dc33e5de4e6eea25a562ae9dea2ba69b30,Salvatore Sanfilippo,antirez@gmail.com,Tue Apr 18 16:13:23 2017 +0200,1492524803,Merge pull request #3856 from viennadd/issue-3847fix #3847: add close socket before return ANET_ERR.,,,,,,,,,,,,,,,Merge,False,,
c33493277a218c6a877158c585447dda912f4d19,da2f9cd1861708e2e4f1334a25fd316e380f779d,antirez,antirez@gmail.com,Tue Apr 18 16:14:33 2017 +0200,1492524873,Fix descriptor leak. Close #3848.,3.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,657.0,57.0,41.916990740740744,9760.0,1.023856674401678,5008.0,Corrective,True,,
da2f9cd1861708e2e4f1334a25fd316e380f779d 332a05dc33e5de4e6eea25a562ae9dea2ba69b30,8b7b4d6734d4a19887398a27bddfd70878430677,antirez,antirez@gmail.com,Tue Apr 18 16:15:24 2017 +0200,1492524924,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
8b7b4d6734d4a19887398a27bddfd70878430677,02d02a3754d1af26a02504b95104e9f1227e681a,antirez,antirez@gmail.com,Tue Apr 18 16:24:06 2017 +0200,1492525446,Fix #3848 by closing the descriptor on error.,2.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,659.0,58.0,0.006631944444444446,9761.0,151.78534031413608,5009.0,Corrective,True,,
02d02a3754d1af26a02504b95104e9f1227e681a c4ad4765b03b303473b4a76f443bcca638aa1afd,27fe8e9fb2f4adf5337e74280215680e7cd59442,Salvatore Sanfilippo,antirez@gmail.com,Tue Apr 18 16:31:18 2017 +0200,1492525878,Merge pull request #3945 from badboy/dicthash-bench-compileReorder to make dict-benchmark compile on Linux,,,,,,,,,,,,,,,Merge,False,,
27fe8e9fb2f4adf5337e74280215680e7cd59442,22be435efe63af749149db4ad9177c0f2515be70,antirez,antirez@gmail.com,Wed Apr 19 10:25:45 2017 +0200,1492590345,"Fix PSYNC2 incomplete command bug as described in #3899.This bug was discovered by @kevinmcgehee and constituted a major hiddennbug in the PSYNC2 implementation, caused by the propagation from thenmaster of incomplete commands to slaves.nnThe bug had several results:nn1. Borrowing from Kevin text in the issue: Given that slaves blindlyncopy over their master's input into their own replication backlog overnsuccessive read syscalls, it's possible that with large commands ornsmall TCP buffers, partial commands are present in this buffer. If thenmaster were to fail before successfully propagating the entire commandnto a slave, the slaves will never execute the partial command (since thenclient is invalidated) but will copy it to replication backlog which maynrelay those invalid bytes to its slaves on PSYNC2, corrupting thenbacklog and possibly other valid commands that follow the failover.nSimple command boundaries aren't sufficient to capture this, either,nbecause in the case of a MULTI/EXEC block, if the master successfullynpropagates a subset of the commands but not the EXEC, then thentransaction in the backlog becomes corrupt and could corrupt othernslaves that consume this data.nn2. As identified by @yangsiran later, there is another effect of thenbug. For the same mechanism of the first problem, a slave having anothernslave, could receive a full resynchronization request with an alreadynhalf-applied command in the backlog. Once the RDB is ready, it will bensent to the slave, and the replication will continue sending to thensub-slave the other half of the command, which is not valid.nnThe fix, designed by @yangsiran and @antirez, and implemented byn@antirez, uses a secondary buffer in order to feed the sub-masters andnupdate the replication backlog and offsets, only when a given part ofnthe query buffer is actually *applied* to the state of the instance,nthat is, when the command gets processed and the command is not pendingnin the Redis transaction buffer because of CLIENT_MULTI state.nnGiven that now the backlog and offsets representation are in agreementnwith the actual processed commands, both issue 1 and 2 should no longernbe possible.nnThanks to @kevinmcgehee, @yangsiran and @oranagra for their work innidentifying and designing a fix for this problem.n",47.0,8.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0242944186985123,14.0,2214.0,574.0,7.653557098765432,9763.0,1.0860128730465954,5012.0,Corrective,True,,
22be435efe63af749149db4ad9177c0f2515be70,189a12afb4df2986d4671cdebae3c96c4f0945c2,antirez,antirez@gmail.com,Wed Apr 19 14:02:52 2017 +0200,1492603372,"PSYNC2: discard pending transactions from cached master.During the review of the fix for #3899, @yangsiran identified annimplementation bug: given that the offset is now relative to the appliednpart of the replication log, when we cache a master, the successivenPSYNC2 request will be made in order to *include* the transaction thatnwas not completely processed. This means that we need to discard anynpending transaction from our replication buffer: it will be re-executed.n",3.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2675.0,195.0,0.15077546296296296,9765.0,7.632378905350425,5013.0,None,False,,
189a12afb4df2986d4671cdebae3c96c4f0945c2,7d9dd80db3c4bc028072071d87bd97ea171195f5,antirez,antirez@gmail.com,Wed Apr 19 16:17:08 2017 +0200,1492611428,Fix getKeysUsingCommandTable() in cluster mode.Close #3940.n,14.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1385.0,183.0,12.312835648148148,9766.0,1.0812160600998846,5014.0,Corrective,True,True,"[""2f8476df9124dfbd298a7ecce87870d44bdbb172""]"
7d9dd80db3c4bc028072071d87bd97ea171195f5 5f88bd320eb56e6c65a44651042ec14b64823763,3773c06d281bd50717280df171ba6dcf44a4116a,Salvatore Sanfilippo,antirez@gmail.com,Thu Apr 20 07:55:51 2017 +0200,1492667751,Merge pull request #3950 from kensou97/unstableupdate block->free after some diff data are written to the child process,,,,,,,,,,,,,,,Merge,False,,
3773c06d281bd50717280df171ba6dcf44a4116a,238cebdd5eb0fd0d8f2db87d895a007bc492dcdb,antirez,antirez@gmail.com,Fri Apr 21 16:27:38 2017 +0200,1492784858,"Check event loop creation return value. Fix #3951.Normally we never check for OOM conditions inside Redis since thenallocator will always return a pointer or abort the program on OOMnconditons. However we cannot have control on epool_create(), that maynfail for kernel OOM (according to the manual page) even if all thenparameters are correct, so the function aeCreateEventLoop() may indeednreturn NULL and this condition must be checked.n",6.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3814.0,113.0,8.016574074074073,9767.0,1.1247415655066468,5015.0,Corrective,True,,
238cebdd5eb0fd0d8f2db87d895a007bc492dcdb,e3b8492e83822aa618d084732f8ab997bf41d7f3,antirez,antirez@gmail.com,Sat Apr 22 13:12:42 2017 +0200,1492859562,Revert Jemalloc updated to 4.4.0.This reverts commit 36c1acc222d29e6e2dc9fc25362e4faa471111bd.n,9710.0,20593.0,"deps/jemalloc/.appveyor.yml,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/.travis.yml,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/jeprof.in,CAS_DELIMITER,deps/jemalloc/build-aux/config.guess,CAS_DELIMITER,deps/jemalloc/build-aux/config.sub,CAS_DELIMITER,deps/jemalloc/build-aux/install-sh,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/assert.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/nstime.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/pages.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ph.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.txt,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/size_classes.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/spin.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ticker.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/valgrind.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/witness.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/strings.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/windows_extra.h,CAS_DELIMITER,deps/jemalloc/install-sh,CAS_DELIMITER,deps/jemalloc/jemalloc.pc.in,CAS_DELIMITER,deps/jemalloc/msvc/ReadMe.txt,CAS_DELIMITER,deps/jemalloc/msvc/jemalloc_vc2015.sln,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.cpp,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.h,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads_main.cpp,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/nstime.c,CAS_DELIMITER,deps/jemalloc/src/pages.c,CAS_DELIMITER,deps/jemalloc/src/prng.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/spin.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/ticker.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/witness.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/mtx.h,CAS_DELIMITER,deps/jemalloc/test/include/test/test.h,CAS_DELIMITER,deps/jemalloc/test/include/test/timer.h,CAS_DELIMITER,deps/jemalloc/test/integration/MALLOCX_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/integration/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocated.c,CAS_DELIMITER,deps/jemalloc/test/integration/chunk.c,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/overflow.c,CAS_DELIMITER,deps/jemalloc/test/integration/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/sdallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.c,CAS_DELIMITER,deps/jemalloc/test/src/mtx.c,CAS_DELIMITER,deps/jemalloc/test/src/test.c,CAS_DELIMITER,deps/jemalloc/test/src/timer.c,CAS_DELIMITER,deps/jemalloc/test/stress/microbench.c,CAS_DELIMITER,deps/jemalloc/test/unit/a0.c,CAS_DELIMITER,deps/jemalloc/test/unit/arena_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/unit/ckh.c,CAS_DELIMITER,deps/jemalloc/test/unit/decay.c,CAS_DELIMITER,deps/jemalloc/test/unit/fork.c,CAS_DELIMITER,deps/jemalloc/test/unit/hash.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_alloc.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_free.c,CAS_DELIMITER,deps/jemalloc/test/unit/mallctl.c,CAS_DELIMITER,deps/jemalloc/test/unit/math.c,CAS_DELIMITER,deps/jemalloc/test/unit/nstime.c,CAS_DELIMITER,deps/jemalloc/test/unit/pack.c,CAS_DELIMITER,deps/jemalloc/test/unit/pages.c,CAS_DELIMITER,deps/jemalloc/test/unit/ph.c,CAS_DELIMITER,deps/jemalloc/test/unit/prng.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_active.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_idump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_thread_name.c,CAS_DELIMITER,deps/jemalloc/test/unit/rb.c,CAS_DELIMITER,deps/jemalloc/test/unit/run_quantize.c,CAS_DELIMITER,deps/jemalloc/test/unit/size_classes.c,CAS_DELIMITER,deps/jemalloc/test/unit/smoothstep.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats.c,CAS_DELIMITER,deps/jemalloc/test/unit/ticker.c,CAS_DELIMITER,deps/jemalloc/test/unit/tsd.c,CAS_DELIMITER,deps/jemalloc/test/unit/util.c,CAS_DELIMITER,deps/jemalloc/test/unit/witness.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.c,CAS_DELIMITER",153.0,1.0,16.0,5.729486613943234,14.0,467.5098039215686,506.0,82.09314814814799,9844.0,1.0004467201891478,1244.0,None,False,,
e3b8492e83822aa618d084732f8ab997bf41d7f3,0fb5c4ebd8f0b9532b02e33666007b4f824d436c,oranagra,oran@redislabs.com,Mon Jan 30 12:53:13 2017 -0800,1485809593,add test for active defrag,45.0,0.0,"tests/unit/memefficiency.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,37.0,3.0,720.2954629629628,54.0,1.001388319170978,0.0,Feature Addition,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
0fb5c4ebd8f0b9532b02e33666007b4f824d436c,a17390853dfa294b26167eed59b81379dc833a52,antirez,antirez@gmail.com,Sat Apr 22 13:21:41 2017 +0200,1492860101,"Defrag: fix test false positive.Apparently 1.4 is too low compared to what you get in certain setupsn(including mine). I raised it to 1.55 that hopefully is still enough tontest that the fragmentation went down from 1.7 but without incurring innissues, however the test setup may be still fragile so certain times thisnmay lead to false positives again, it's hard to test for these thingsnin a determinsitic way.nnRelated to #3786.n",4.0,3.0,"tests/unit/memefficiency.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,82.0,4.0,81.60310185185185,9921.0,1.0122544361342474,727.0,None,False,,
a17390853dfa294b26167eed59b81379dc833a52,c861e1e1eee2c29c1df36759d471f6758048318f,antirez,antirez@gmail.com,Sat Apr 22 15:59:53 2017 +0200,1492869593,"Defrag: test currently disabled, too many false positives.Related to #3786.n",40.0,38.0,"tests/unit/memefficiency.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,83.0,5.0,0.10986111111111113,9922.0,10.102402022756005,728.0,None,False,True,"[""806736cdf91658e7a8e1a2d8631b82763b508c36""]"
c861e1e1eee2c29c1df36759d471f6758048318f,469d6e2b37e2913ecb673f910cdb7dbd3af18a67,antirez,antirez@gmail.com,Thu Apr 27 17:04:07 2017 +0200,1493305447,"PSYNC2: fix master cleanup when caching it.The master client cleanup was incomplete: resetClient() was missing andnthe output buffer of the client was not reset, so pending commandsnrelated to the previous connection could be still sent.nnThe first problem caused the client argument vector to be, at times,nhalf populated, so that when the correct replication stream arrived thenprotcol got mixed to the arugments creating invalid commands that nobodyncalled.nnThanks to @yangsiran for also investigating this problem, afternalready providing important design / implementation hints for thenoriginal PSYNC2 issues (see referenced Github issue).nnNote that this commit adds a new function to the list library of Redisnin order to be able to reset a list without destroying it.nnRelated to issue #3899.n",20.0,7.0,"src/adlist.c,CAS_DELIMITER,src/adlist.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.154173392945927,14.0,1035.0,207.0,668.6930902777777,9924.0,1.0012411367528922,5018.0,None,False,,
469d6e2b37e2913ecb673f910cdb7dbd3af18a67,c180bc7d98061fd59be54ca83b67abfd6ce65414,antirez,antirez@gmail.com,Fri Apr 28 10:37:07 2017 +0200,1493368627,"Regression test for PSYNC2 issue #3899 added.Experimentally verified that it can trigger the issue reverting the fix.nAt least on my system... Being the bug time/backlog dependant, it isnvery hard to tell if this test will be able to trigger the problemnconsistently, however even if it triggers the problem once in a while,nwe'll see it in the CI environment at http://ci.redis.io.n",62.0,0.0,"tests/integration/psync2-reg.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.11911602665564835,13.0,281.5,102.0,74.98313078703706,9926.5,0.5033340832448039,730.0,Corrective,True,True,"[""a4c7f34d3ab9a182a26d6a6f59f87d253929100d""]"
c180bc7d98061fd59be54ca83b67abfd6ce65414,a4c7f34d3ab9a182a26d6a6f59f87d253929100d,antirez,antirez@gmail.com,Fri Apr 28 11:16:37 2017 +0200,1493370997,Regression test for #3899 fixed.,36.0,19.0,"tests/integration/psync2-reg.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,61.0,1.0,0.027430555555555555,9928.0,37.45569620253165,731.0,Corrective,True,,
c180bc7d98061fd59be54ca83b67abfd6ce65414,59b06b14c9801d1f65cab55559c75f8146b8b8b1,antirez,antirez@gmail.com,Fri Apr 28 18:41:10 2017 +0200,1493397670,Modules TSC: GIL and cooperative multi tasking setup.,31.0,1.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.6449742087569881,14.0,3144.333333333333,334.0,11.553942901234569,9930.0,1.0410725365412796,5021.0,None,False,,
59b06b14c9801d1f65cab55559c75f8146b8b8b1,9c500b89fb4969dd54512d507549a782b02f6886,antirez,antirez@gmail.com,Tue May 2 12:53:10 2017 +0200,1493722390,Modules TSC: Basic TS context creeation and handling.,60.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3650.0,100.0,3.7583333333333333,9932.0,1.2660753880266076,5022.0,None,False,,
9c500b89fb4969dd54512d507549a782b02f6886,275905b3282581208e13ed61c7aca98fbbfc40c4,antirez,antirez@gmail.com,Tue May 2 15:05:39 2017 +0200,1493730339,Modules TSC: Handling of RM_Reply* functions.,82.0,14.0,"src/adlist.c,CAS_DELIMITER,src/adlist.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER",3.0,1.0,1.0,0.6250893464456496,14.0,1382.0,114.0,3.3091550925925923,9934.0,1.1352497780170796,5025.0,None,False,True,"[""87f771bff1004ca61018047e05322690198c816e""]"
275905b3282581208e13ed61c7aca98fbbfc40c4,ba4a5a3255d9a28c6aa9ead36f640705704249a7,antirez,antirez@gmail.com,Tue May 2 15:19:28 2017 +0200,1493731168,Modules TSC: Export symbols of the new API.,12.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,14.0,2050.5,143.0,55.03663773148148,9936.5,53.1155195094697,5027.0,None,False,,
ba4a5a3255d9a28c6aa9ead36f640705704249a7,3fcf959e609e850a114d4016843e4c991066ebac,antirez,antirez@gmail.com,Wed May 3 11:26:21 2017 +0200,1493803581,"Modules TSC: Release the GIL for all the time we are blocked.Instead of giving the module background operations just a small time tonrun in the beforeSleep() function, we can have the lock released for allnthe time we are blocked in the multiplexing syscall.n",100.0,22.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/helloblock.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,2.0,2.04453127689524,14.0,1715.166666666667,369.0,181.1160088734568,9940.5,1.001266149768842,5033.0,None,False,,
3fcf959e609e850a114d4016843e4c991066ebac,7127f15ebef6a653b488dd545c103eefe7aaef9a,antirez,antirez@gmail.com,Wed May 3 14:07:10 2017 +0200,1493813230,Module: fix RedisModule_Call() l specifier to create a raw string.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3777.0,104.0,0.11167824074074073,9944.0,9.954295781946318,5034.0,None,False,,
7127f15ebef6a653b488dd545c103eefe7aaef9a,1ed2ff55700b9b3008d3875352c4e820e0691ec8,antirez,antirez@gmail.com,Wed May 3 14:08:12 2017 +0200,1493813292,Modules TSC: HELLO.KEYS example draft finished.,35.0,6.0,"src/modules/helloblock.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,164.0,4.0,0.11239583333333332,9945.0,9.897126969416128,5035.0,None,False,,
1ed2ff55700b9b3008d3875352c4e820e0691ec8,6798736909b7301242b023c288d2a956ec7154f4,antirez,antirez@gmail.com,Wed May 3 14:10:21 2017 +0200,1493813421,Modules: remove unused var in example module.,2.0,3.0,"src/modules/helloworld.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,622.0,18.0,202.06149305555562,9946.0,1.0049489884731528,5036.0,None,False,,
6798736909b7301242b023c288d2a956ec7154f4,79226cb9fad57c958417263e52f7bb7f9b13597c,antirez,antirez@gmail.com,Wed May 3 14:15:25 2017 +0200,1493813725,adlist: fix listJoin() to handle empty lists.,8.0,2.0,"src/adlist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,355.0,9.0,0.9651157407407408,9947.0,2.036145156261244,5037.0,None,False,,
79226cb9fad57c958417263e52f7bb7f9b13597c,e67fb915eb0532e205b310b0ede5993173dd2d71,antirez,antirez@gmail.com,Wed May 3 14:53:56 2017 +0200,1493816036,adlist: fix final list count in listJoin().,1.0,0.0,"src/adlist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,361.0,10.0,0.026747685185185187,9948.0,38.386412808308094,5038.0,None,False,,
e67fb915eb0532e205b310b0ede5993173dd2d71,9b01b64430fbc1487429144d2e4e72a4a7fd9db2,antirez,antirez@gmail.com,Wed May 3 14:54:48 2017 +0200,1493816088,Modules TSC: put the client in the pending write list.,13.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3777.0,105.0,0.0330787037037037,9949.0,31.230930720783768,5039.0,None,False,,
9b01b64430fbc1487429144d2e4e72a4a7fd9db2,7d9326b1f3a6fd8e218da9a4ca357d9af2e9b644,antirez,antirez@gmail.com,Wed May 3 23:43:49 2017 +0200,1493847829,Modules TSC: HELLO.KEYS reply format fixed.,15.0,13.0,"src/modules/helloblock.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,193.0,5.0,0.3997337962962963,9950.0,3.5016648811419637,5040.0,None,False,,
7d9326b1f3a6fd8e218da9a4ca357d9af2e9b644,52bc74f22150183111bc0da9cd2c29de440a50b5,antirez,antirez@gmail.com,Thu May 4 10:35:32 2017 +0200,1493886932,Lazyfree: fix lazyfreeGetPendingObjectsCount() race reading counter.,3.0,1.0,"src/lazyfree.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,135.0,9.0,37.79763888888889,9951.0,1.0264566790253653,5041.0,None,False,,
52bc74f22150183111bc0da9cd2c29de440a50b5,2a51bac44ebcff79dcd8ede2cab66ca213c9d504,antirez,antirez@gmail.com,Thu May 4 17:00:53 2017 +0200,1493910053,Simplify atomicvar.h usage by having the mutex name implicit.,25.0,27.0,"src/atomicvar.h,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",3.0,1.0,1.0,1.3405071628991212,14.0,220.0,53.0,31.463962191358018,9953.0,1.0128876601415304,5044.0,None,False,,
2a51bac44ebcff79dcd8ede2cab66ca213c9d504,ece658713b659513e2c43a9498da286cafec17dd,antirez,antirez@gmail.com,Tue May 9 11:57:09 2017 +0200,1494323829,Modules TSC: Improve inter-thread synchronization.More work to do with server.unixtime and similar. Need to write Helgrindnsuppression file in order to suppress the valse positives.n,75.0,20.0,"src/atomicvar.h,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.939180783215561,14.0,1696.8,519.0,22.766796296296306,9957.0,1.0497856977252635,5049.0,None,False,,
ece658713b659513e2c43a9498da286cafec17dd,9390c384b88de6b2363c3f33ba42bd25c1c3346d,antirez,antirez@gmail.com,Tue May 9 16:32:49 2017 +0200,1494340369,Modules TSC: Add mutex for server.lruclock.Only useful for when no atomic builtins are available.n,2.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,14.0,2914.5,241.0,0.1914351851851852,9960.5,4.917775090689238,5051.0,None,False,,
9390c384b88de6b2363c3f33ba42bd25c1c3346d,6eb51bf1ecd114f97a0666d4027b600e5124f42c,antirez,antirez@gmail.com,Tue May 9 16:59:51 2017 +0200,1494341991,"zmalloc.c: remove thread safe mode, it's the default way.",3.0,23.0,"src/server.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,0.4681666405523326,14.0,1456.666666666667,176.0,41.40282407407407,9963.0,18.824967419046683,5054.0,None,False,,
71a8df6a2b6fe37a625636a3902fcc713c7c4919 a4c7f34d3ab9a182a26d6a6f59f87d253929100d,89a9e5a9a2dba7bcdb4ef32fa73f105a14923c1a,Guy Benoish,guy.benoish@redislabs.com,Tue May 9 18:42:32 2017 +0300,1494344552,Merge branch 'unstable' of https://github.com/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
6eb51bf1ecd114f97a0666d4027b600e5124f42c,de786186a5a0cd15aa86a2127647fb9c758bc405,antirez,antirez@gmail.com,Wed May 10 09:33:49 2017 +0200,1494401629,atomicvar.h: show used API in INFO. Add macro to force __sync builtin.The __sync builtin can be correctly detected by Helgrind so to force itnis useful for testing. The API in the INFO output can be useful forndebugging after problems are reported.n,13.0,6.0,"src/atomicvar.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.4854607607459134,14.0,1984.5,126.0,0.7953587962962962,9965.5,1.8695934724069647,5056.0,None,False,,
de786186a5a0cd15aa86a2127647fb9c758bc405,1f598fc2bb6975417751486405303d98246bb7bc,antirez,antirez@gmail.com,Wed May 10 10:01:06 2017 +0200,1494403266,"Modules TSC: use atomic var for server.unixtime.This avoids Helgrind complaining, but we are actually not usingnatomicGet() to get the unixtime value for now: too many places where itnis used and given tha time_t is word-sized it should be safe in all thenarchs we support as it is.nnOn the other hand, Helgrind, when Redis is compiled with make helgrindnin order to force the __sync macros, will detect the write innupdateCachedTime() as a read (because atomic functions are used) andnwill not complain about races.nnThis commit also includes minor refactoring of mutex initializations andna helgrind target in the Makefile.n",15.0,5.0,"src/Makefile,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.4577174691301482,14.0,2038.333333333333,389.0,7.8654359567901215,9968.0,1.0432909845762834,5059.0,None,False,,
1f598fc2bb6975417751486405303d98246bb7bc a4c7f34d3ab9a182a26d6a6f59f87d253929100d,58f79e2ff48bb20e48d5eb60ff6a87c9afae5fe9,antirez,antirez@gmail.com,Wed May 10 13:15:30 2017 +0200,1494414930,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
58f79e2ff48bb20e48d5eb60ff6a87c9afae5fe9,78211aaaafe999205c4ffda16a43732617c690ea,antirez,antirez@gmail.com,Mon May 15 11:22:28 2017 +0200,1494840148,redis-cli --bigkeys: show error when TYPE fails.Close #3993.n,7.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2708.0,187.0,126.66351851851853,9970.0,1.007894933061202,5060.0,None,False,,
78211aaaafe999205c4ffda16a43732617c690ea,e498d9ee3ee55c29000ed80914473ac18d32b672,antirez,antirez@gmail.com,Fri May 19 11:10:36 2017 +0200,1495185036,Collect fork() timing info only if fork succeeded.,4.0,3.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1922.0,188.0,31.006122685185183,9971.0,1.0322516946137803,5061.0,None,False,,
e498d9ee3ee55c29000ed80914473ac18d32b672,e91b81c612cc8b0cbb4e7f9bc895e5f23d497027,antirez,antirez@gmail.com,Fri May 19 12:03:30 2017 +0200,1495188210,More informative -MISCONF error message.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3846.0,121.0,9.085,9972.0,1.1100715465052284,5062.0,None,False,,
e91b81c612cc8b0cbb4e7f9bc895e5f23d497027,a3e53cf9bcf05671e3ac4a170bb6791dbff62eec,Zachary Marquez,zachary.marquez@mediafire.com,Thu Jun 1 16:24:10 2017 -0500,1496352250,Prevent expirations and evictions while pausedProposed fix to https://github.com/antirez/redis/issues/4027n,10.0,0.0,"src/evict.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,14.0,532.0,20.0,39.03325810185185,0.5,0.506404794581781,1.0,Corrective,True,,
e91b81c612cc8b0cbb4e7f9bc895e5f23d497027,591dba80553ef5f629bde45df6375dc80bf1c77c,Antonio Mallia,me@antoniomallia.it,Sun Jun 4 15:09:05 2017 +0100,1496585345,Fixed comment in clusterMsg version field,1.0,1.0,"src/cluster.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,270.0,41.0,51.10365740740741,0.0,0.0,0.0,Corrective,True,,
e91b81c612cc8b0cbb4e7f9bc895e5f23d497027,2d1d57eb4702cb2253655e0bd159e021843cfe7e,Antonio Mallia,me@antoniomallia.it,Sun Jun 4 15:26:53 2017 +0100,1496586413,Removed duplicate 'sys/socket.h'  include,0.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5447.0,515.0,50.26266203703704,1.0,1.0198954842316774,1.0,None,False,,
e91b81c612cc8b0cbb4e7f9bc895e5f23d497027,5877c02c5102d7f01e3a41937ffdea098a63befe,antirez,antirez@gmail.com,Tue Jun 13 10:35:51 2017 +0200,1497342951,Fix PERSIST expired key resuscitation issue #4048.,4.0,7.0,"src/db.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,14.0,952.0,191.0,33.11472222222222,9973.5,1.0166797647811254,5064.0,Corrective,True,,
5877c02c5102d7f01e3a41937ffdea098a63befe 2d1d57eb4702cb2253655e0bd159e021843cfe7e,33035cad04fd26482c744e450234b3554034f9b9,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 13 06:27:31 2017 -0700,1497360451,Merge pull request #4035 from amallia/patch-2Removed duplicate 'sys/socket.h'  include,,,,,,,,,,,,,,,Merge,False,,
33035cad04fd26482c744e450234b3554034f9b9 591dba80553ef5f629bde45df6375dc80bf1c77c,d3b32ca48d083c86ff0c20691cb790f80d5935c2,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 13 06:28:23 2017 -0700,1497360503,Merge pull request #4034 from amallia/patch-1Fixed comment in clusterMsg version field,,,,,,,,,,,,,,,Merge,False,,
d3b32ca48d083c86ff0c20691cb790f80d5935c2,3fc4bf07cc04dc12a91e9da682162b4d062136bf,xuchengxuan,xuchengxuan@xiaomi.com,Wed Jun 14 16:42:21 2017 +0800,1497429741,Fixed comments of slowlog duration,1.0,1.0,"src/slowlog.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,47.0,5.0,688.8066550925928,0.0,0.0,0.0,Corrective,True,,
5877c02c5102d7f01e3a41937ffdea098a63befe,4740424049173cf139b79a79df97878ab5f76f95,Qu Chen,quchen@amazon.com,Fri Apr 7 22:31:11 2017 +0000,1491604271,Implement getKeys procedure for georadius and georadiusbymember commands.,41.0,2.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.6025148591007898,14.0,2412.333333333333,433.0,-46.76548611111111,2.0,0.9895162424267272,3.0,None,False,True,"[""f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c""]"
4740424049173cf139b79a79df97878ab5f76f95 d3b32ca48d083c86ff0c20691cb790f80d5935c2,ab9d398835dca1187f190b28786cd9cc28e1fea1,antirez,antirez@gmail.com,Wed Jun 14 18:29:53 2017 +0200,1497457793,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ab9d398835dca1187f190b28786cd9cc28e1fea1,53cb27b1d718a12e9ff89212ca9b68db12031dde,antirez,antirez@gmail.com,Thu Jun 15 12:57:54 2017 +0200,1497524274,SLOWLOG: log offending client address and name.,27.0,7.0,"src/server.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/slowlog.h,CAS_DELIMITER,tests/unit/slowlog.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.654842980369105,14.0,1033.0,144.0,591.7861226851852,9976.5,1.0044133380535487,732.0,None,False,,
53cb27b1d718a12e9ff89212ca9b68db12031dde,530fcf868786950fbd07f294dd73f9f9bd631cb6,xuzhou,xuzhou1@jd.com,Fri Jun 16 17:51:38 2017 +0800,1497606698,Fix set with ex/px option when propagated to aof,36.0,1.0,"src/aof.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.5649908051547063,14.0,1903.75,426.0,118.58282986111112,1.5,0.7566366573102188,2.0,Corrective,True,,
53cb27b1d718a12e9ff89212ca9b68db12031dde,ee5044eef0c33138eba6c37e2c20f2a7e3cac899,Aric Huang,arichuang@gmail.com,Fri Jun 16 16:10:00 2017 -0700,1497654600,(fix) Update create-cluster READMEFix a few typos/adjust wording in `create-cluster` README,4.0,4.0,"utils/create-cluster/README,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,27.0,2.0,868.5612847222222,0.0,0.0,0.0,Corrective,True,,
53cb27b1d718a12e9ff89212ca9b68db12031dde,2a84927f35e5f565e3a71f202e1dfd4912b24a7d,antirez,antirez@gmail.com,Mon Jun 19 09:41:11 2017 +0200,1497858071,redis-benchmark: add -t hset target.,7.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,839.0,62.0,220.21346064814816,9979.0,1.004541048476586,5068.0,None,False,,
2a84927f35e5f565e3a71f202e1dfd4912b24a7d ee5044eef0c33138eba6c37e2c20f2a7e3cac899,a2146c7592126f621f225671a3682541277f5fd1,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 20 16:41:10 2017 +0200,1497969670,Merge pull request #4062 from concreted/patch-1(fix) Update create-cluster README,,,,,,,,,,,,,,,Merge,False,,
a2146c7592126f621f225671a3682541277f5fd1 e5db99ad4acfa22e28056a480b106ff7b06a0120,0a03187ac495c2e0e45711954db1e54448e78a57,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 20 16:53:56 2017 +0200,1497970436,Merge pull request #3659 from cbgbt/cli-elapsedcli: Only print elapsed time on OUTPUT_STANDARD.,,,,,,,,,,,,,,,Merge,False,,
0a03187ac495c2e0e45711954db1e54448e78a57 3fc4bf07cc04dc12a91e9da682162b4d062136bf,1d857a99d5d9bee9c5000db9af6694cc2f96c4e6,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 20 16:55:29 2017 +0200,1497970529,Merge pull request #4056 from season89/unstableFixed comments of slowlog duration,,,,,,,,,,,,,,,Merge,False,,
1d857a99d5d9bee9c5000db9af6694cc2f96c4e6 de07deb4d2ca3b9971a29319937aeb0c76b58011,ef446bf16dab71be762dd346250f2175ed5183b0,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 20 17:01:16 2017 +0200,1497970876,Merge pull request #3802 from flowly/bugfix-calc-stat-net-output-bytesBugfix calc stat net output bytes,,,,,,,,,,,,,,,Merge,False,,
530fcf868786950fbd07f294dd73f9f9bd631cb6,86e9f48a0cdfb26fcf0743c91bf593414d336a01,xuzhou,xuzhou1@jd.com,Thu Jun 22 11:06:40 2017 +0800,1498100800,Optimize set command with ex/px when updating aof.,3.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1585.0,160.0,5.7187731481481485,4.0,1.1748626801753483,3.0,None,False,,
ef446bf16dab71be762dd346250f2175ed5183b0 86e9f48a0cdfb26fcf0743c91bf593414d336a01,6476f1a9797f3ad5cfd20a123cecde9d56cdb3cf,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 22 10:46:58 2017 +0200,1498121218,Merge pull request #4068 from FreedomU007/unstableFix set with ex/px option when propagated to aof,,,,,,,,,,,,,,,Merge,False,,
6476f1a9797f3ad5cfd20a123cecde9d56cdb3cf,8b768e8ea4a0616e71645e2e812803026765ba16,antirez,antirez@gmail.com,Thu Jun 22 11:00:21 2017 +0200,1498122021,Aesthetic changes to #4068 PR to conform to Redis coding standard.1. Inline if ... statement if short.n2. No lines over 80 columns.n,6.0,7.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1585.0,161.0,0.2456134259259259,9980.0,5.071438669242731,5069.0,None,False,,
8b768e8ea4a0616e71645e2e812803026765ba16,d303bca58787300efe29212940e7806ee625ae9f,Suraj Narkhede,surajn.vnit@gmail.com,Thu Jun 22 23:52:00 2017 -0700,1498200720,Fix brpop command table entry and redirect blocked clients.,3.0,2.0,"src/cluster.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,14.0,4647.0,641.0,12.779681712962965,0.5,0.5195623025373484,1.0,Corrective,True,,
d303bca58787300efe29212940e7806ee625ae9f,f85f36f50d7066bc7b3a845488a90e9ad3f1625d,Suraj Narkhede,surajn.vnit@gmail.com,Fri Jun 23 00:30:21 2017 -0700,1498203021,"Fix following issues in blocking commands: 1. brpop last key index, thus checking all keys for slots. 2. Memory leak in clusterRedirectBlockedClientIfNeeded. 3. Remove while loop in clusterRedirectBlockedClientIfNeeded.",1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5447.0,517.0,0.026631944444444444,2.0,38.54889178617992,2.0,Corrective,True,,
8b768e8ea4a0616e71645e2e812803026765ba16 a3e53cf9bcf05671e3ac4a170bb6791dbff62eec,936ade80b2dc2019bfc2dc20de024ede91d6eacb,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 23 11:39:02 2017 +0200,1498210742,Merge pull request #4028 from zintrepid/prevent_expirations_while_pausedPrevent expirations and evictions while paused,,,,,,,,,,,,,,,Merge,False,,
936ade80b2dc2019bfc2dc20de024ede91d6eacb,c9097393bf63172fcae014808f79ddf0d9706204,antirez,antirez@gmail.com,Fri Jun 23 11:42:25 2017 +0200,1498210945,"Issue #4027: unify comment and modify return value in freeMemoryIfNeeded().It looks safer to return C_OK from freeMemoryIfNeeded() when clients arenpaused because returning C_ERR may prevent success of writes. It isnpossible that there is no difference in practice since clients cannotnexecute writes while clients are paused, but it looks more correct thisnway, at least conceptually.nnRelated to PR #4028.n",7.0,7.0,"src/evict.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER",2.0,1.0,1.0,0.9402859586706308,14.0,535.5,23.0,15.779450231481485,9981.5,1.0390855044320753,5071.0,None,False,,
c9097393bf63172fcae014808f79ddf0d9706204,c3998728a2674ebdbc3c24851adece5ccc9d3363,antirez,antirez@gmail.com,Mon Jun 26 10:36:12 2017 +0200,1498466172,ARM: Fix stack trace generation on crash.,5.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,286.0,145.0,47.024375,9983.0,1.0212655670596371,5072.0,None,False,,
c3998728a2674ebdbc3c24851adece5ccc9d3363,365dd037dcc00249c7631caac82c49a9c0c8c0f6,antirez,antirez@gmail.com,Tue Jun 27 13:09:33 2017 +0200,1498561773,"RDB modules values serialization format version 2.The original RDB serialization format was not parsable without thenmodule loaded, becuase the structure was managed only by the modulenitself. Moreover RDB is a streaming protocol in the sense that it isnboth produce di an append-only fashion, and is also sometimes directlynsent to the socket (in the case of diskless replication).nnThe fact that modules values cannot be parsed without the relevantnmodule loaded is a problem in many ways: RDB checking tools must havenloaded modules even for doing things not involving the value at all,nlike splitting an RDB into N RDBs by key or alike, or just checking thenRDB for sanity.nnIn theory module values could be just a blob of data with a prefixednlength in order for us to be able to skip it. However prefixing the valuesnwith a length would mean one of the following:nn1. To be able to write some data at a previous offset. This breaksnstremaing.n2. To bufferize values before outputting them. This breaks performances.n3. To have some chunked RDB output format. This breaks simplicity.nnMoreover, the above solution, still makes module values a totally opaquenmatter, with the fowllowing problems:nn1. The RDB check tool can just skip the value without being able to atnleast check the general structure. For datasets composed mostly ofnmodules values this means to just check the outer level of the RDB notnactually doing any checko on most of the data itself.n2. It is not possible to do any recovering or processing of data for which anmodule no longer exists in the future, or is unknown.nnSo this commit implements a different solution. The modules RDBnserialization API is composed if well defined calls to store integers,nfloats, doubles or strings. After this commit, the parts generated bynthe module API have a one-byte prefix for each of the above emittednparts, and there is a final EOF byte as well. So even if we don't knownexactly how to interpret a module value, we can always parse it at annhigh level, check the overall structure, understand the types used tonstore the information, and easily skip the whole value.nnThe change is backward compatible: older RDB files can be still loadednsince the new encoding has a new RDB type: MODULE_2 (of value 7).nThe commit also implements the ability to check RDB files for sanityntaking advantage of the new feature.n",127.0,28.0,"src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.4802584217208408,14.0,1962.0,451.0,83.77258101851851,9985.5,1.0087283946181569,5076.0,Corrective,True,True,"[""60a4f12f8b998c44dfff0e88202b01598287390d"", ""d7d028a7a72388cf3908a5f40c8188e68a447dee""]"
365dd037dcc00249c7631caac82c49a9c0c8c0f6 f85f36f50d7066bc7b3a845488a90e9ad3f1625d,634c64dd1833549a31e62405e7dc835c7bc6fa39,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 27 17:51:19 2017 +0200,1498578679,Merge pull request #4075 from sgn1/brpop_keysFix Issues in blocking commands in cluster mode.,,,,,,,,,,,,,,,Merge,False,,
634c64dd1833549a31e62405e7dc835c7bc6fa39,01a4b9892d0922eeafbb1bfba0f9fa70bf1a2f3b,antirez,antirez@gmail.com,Thu Jun 29 17:38:46 2017 +0200,1498750726,"HMSET and MSET implementations unified. HSET now variadic.This is the first step towards getting rid of HMSET which is a commandnthat does not make much sense once HSET is variadic, and has a sanernreturn value.n",18.0,22.0,"src/server.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,14.0,2338.5,181.0,87.64625578703703,9988.5,1.0813969728225077,5078.0,None,False,,
01a4b9892d0922eeafbb1bfba0f9fa70bf1a2f3b,f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c,antirez,antirez@gmail.com,Fri Jun 30 10:03:37 2017 +0200,1498809817,"Added GEORADIUS(BYMEMBER)_RO variants for read-only operations.Issue #4084 shows how for a design error, GEORADIUS is a write commandnbecause of the STORE option. Because of this it does not worknon readonly slaves, gets redirected to masters in Redis Cluster evennwhen the connection is in READONLY mode and so forth.nnTo break backward compatibility at this stage, with Redis 4.0 to be innadvanced RC state, is problematic for the user base. The API can benfixed into the unstable branch soon if we'll decide to do so in order tonbe more consistent, and reease Redis 5.0 with this incompatibility innthe future. This is still unclear.nnHowever, the ability to scale GEO queries in slaves easily is toonimportant so this commit adds two read-only variants to the GEORADIUSnand GEORADIUSBYMEMBER command: GEORADIUS_RO and GEORADIUSBYMEMBER_RO.nThe commands are exactly as the original commands, but they do notnaccept the STORE and STOREDIST options.n",32.0,11.0,"src/geo.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8791739269561951,14.0,2216.333333333333,308.0,65.16746141975308,9991.0,1.0051720138812223,5081.0,Corrective,True,,
f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c,7bad78bd2f533844bfb6f79e8a3c9507079abc3a,antirez,antirez@gmail.com,Fri Jun 30 12:12:00 2017 +0200,1498817520,Fix abort typo in Lua debugger help screen.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2388.0,167.0,79.80277777777778,9993.0,1.0125308921299037,5082.0,Corrective,True,,
7bad78bd2f533844bfb6f79e8a3c9507079abc3a,26e638a8e917608d8e75b07e5e941c7a24462c4d,antirez,antirez@gmail.com,Fri Jun 30 15:41:58 2017 +0200,1498830118,"redis-cli --latency: ability to run non interactively.This feature was proposed by @rosmo in PR #2643 and later redesignednin order to fit better with the other options for non-interactive modesnof redis-cli. The idea is basically to allow to collect latencyninformation in scripts, cron jobs or whateever, just running for anlimited time and then producing a single output.n",39.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2713.0,188.0,46.18020833333333,9994.0,1.0216542981526178,5083.0,None,False,,
26e638a8e917608d8e75b07e5e941c7a24462c4d,c8ca71d40bc51e255457cd4374dd45ec9ebf8ae1,Jun He,jun.he@arm.com,Mon Jul 3 07:18:32 2017 +0000,1499066312,Fixed stack trace generation on aarch64Change-Id: I9801239c98cb7362ed07e8b9ec2ba7e45749dba7nSigned-off-by: Jun He <jun.he@arm.com>n,3.0,1.0,"src/Makefile,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,14.0,746.0,281.0,69.80936342592592,0.5,0.5035811814881433,1.0,Corrective,True,,
26e638a8e917608d8e75b07e5e941c7a24462c4d,b2cd9fcab6122ccbf8b08f71f59a0af01931083b,antirez,antirez@gmail.com,Mon Jul 3 19:38:31 2017 +0200,1499103511,"Fix GEORADIUS edge case with huge radius.This commit closes issue #3698, at least for now, since the root causenwas not fixed: the bounding box function, for huge radiuses, does notnreturn a correct bounding box, there are points still within the radiusnthat are left outside.nnSo when using GEORADIUS queries with radiuses in the order of 5000 km ornmore, it was possible to see, at the edge of the area, certain pointsnnot correctly reported.nnBecause the bounding box for now was used just as an optimization, andnsuch huge radiuses are not common, for now the optimization is justnswitched off when the radius is near such magnitude.nnThree test cases found by the Continuous Integration test were added, sonthat we can easily trigger the bug again, both for regression testingnand in order to properly fix it as some point in the future.n",39.0,20.0,"src/geohash_helper.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.2899860470332091,13.0,263.5,25.0,202.72649884259255,9995.5,1.0036119699660857,733.0,Corrective,True,,
b2cd9fcab6122ccbf8b08f71f59a0af01931083b,86e564e9fffeb764cca45f6bc102b78c3119f822,Dvir Volk,dvirsky@gmail.com,Mon Jul 3 23:58:50 2017 +0300,1499115530,fixed #4100,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3816.0,107.0,6.409224537037038,23.0,1.1560251157095982,23.0,Corrective,True,,
b2cd9fcab6122ccbf8b08f71f59a0af01931083b,eddd8d34c4e82120ff9b0748aa48051b452f123b,antirez,antirez@gmail.com,Tue Jul 4 11:55:05 2017 +0200,1499162105,"Add symmetrical assertion to track c->reply_buffer infinite growth.Redis clients need to have an instantaneous idea of the amount of memorynthey are consuming (if the number is not exact should at least benproportional to the actual memory usage). We do that adding andnsubtracting the SDS length when pushing / popping from the client->replynlist. However it is quite simple to add bugs in such a setup, by notntaking the objects in the list and the count in sync. For such reason,nRedis has an assertion to track counts near 2^64: those are always thenresult of the counter wrapping around because we subtract more than wenadd. This commit adds the symmetrical assertion: when the list is emptynsince we sent everything, the reply_bytes count should be zero. Thanksnto the new assertion it should be simple to also detect the othernproblem, where the count slowly increases because of over-counting.nThe assertion adds a conditional in the code that sends the buffer tonthe socket but should not create any measurable performance slowdown,nlistLength() just accesses a structure field, and this code path isntotally dominated by write(2).nnRelated to #4100.n",4.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2020.0,262.0,55.99856481481481,9997.0,1.017857600517209,5085.0,Corrective,True,,
eddd8d34c4e82120ff9b0748aa48051b452f123b 86e564e9fffeb764cca45f6bc102b78c3119f822,09dd7b5ff02de4a311032939c27fd6fc62fbd4a3,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 4 12:01:51 2017 +0200,1499162511,Merge pull request #4101 from dvirsky/fix_modules_reply_lenProposed fix to #4100,,,,,,,,,,,,,,,Merge,False,,
09dd7b5ff02de4a311032939c27fd6fc62fbd4a3,413c2bc180f3504a42f37e467e3616351af2734d,antirez,antirez@gmail.com,Wed Jul 5 10:10:20 2017 +0200,1499242220,"Modules: no MULTI/EXEC for commands replicated from async contexts.They are technically like commands executed from external clients onenafter the other, and do not constitute a single atomic entity.n",5.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3817.0,108.0,1.4663194444444445,9998.0,1.6819796353303338,5086.0,None,False,,
413c2bc180f3504a42f37e467e3616351af2734d,f9fac7f7770f056790b628e47af91ed3e814246c,antirez,antirez@gmail.com,Wed Jul 5 15:40:25 2017 +0200,1499262025,Avoid closing invalid FDs to make Valgrind happier.,5.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3850.0,128.0,5.233888888888889,9999.0,1.191062519902346,5087.0,None,False,,
09dd7b5ff02de4a311032939c27fd6fc62fbd4a3,ea31a4eae3c667ffb8c33241c5de699652710394,spinlock,wnzheng@gmail.com,Wed Jul 5 14:25:05 2017 +0000,1499264705,Optimize addReplyBulkSds for better performance,1.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2024.0,263.0,1.1875,1.0,1.8421052631578947,1.0,Feature Addition,False,,
ea31a4eae3c667ffb8c33241c5de699652710394,10db81af71a6d4c4f99a59510939a2b4dc8f6864,spinlock,wnzheng@gmail.com,Wed Jul 5 14:32:07 2017 +0000,1499265127,update Makefile for test-sds,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,291.0,147.0,2.301099537037037,2.0,1.43457485602193,2.0,Preventative,False,,
f9fac7f7770f056790b628e47af91ed3e814246c,51ffd062d37b370884e21cc70b20264ff4060dc8,antirez,antirez@gmail.com,Thu Jul 6 10:29:19 2017 +0200,1499329759,Modules: DEBUG DIGEST interface.,108.0,1.0,"src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/hellotype.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,2.0,1.7794494480833638,14.0,1529.4,425.0,49.94817592592592,10002.0,1.1175638970247497,5092.0,None,False,True,"[""3b0f0086156e79e0c7e13c8e7118799b9b40dd08"", ""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
51ffd062d37b370884e21cc70b20264ff4060dc8,2b36950e9b2e7c02363c965fd721d103d1dfab4a,antirez,antirez@gmail.com,Thu Jul 6 11:20:49 2017 +0200,1499332849,Free IO context if any in RDB loading code.Thanks to @oranagra for spotting this bug.n,4.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1980.0,190.0,8.92449074074074,10005.0,1.1120512115537249,5093.0,Corrective,True,,
634c64dd1833549a31e62405e7dc835c7bc6fa39,87f771bff1004ca61018047e05322690198c816e,sunweinan,sunweinan@didichuxing.com,Thu Jul 6 19:47:21 2017 +0800,1499341641,minor fix in listJoin().,1.0,1.0,"src/adlist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,362.0,11.0,63.953761574074065,0.0,0.0,0.0,Corrective,True,,
2b36950e9b2e7c02363c965fd721d103d1dfab4a 87f771bff1004ca61018047e05322690198c816e,2d5aa009595451bf8fc37520fa469cc09d485286,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 6 14:29:37 2017 +0200,1499344177,Merge pull request #4106 from petersunbag/unstableminor fix in listJoin().,,,,,,,,,,,,,,,Merge,False,,
2d5aa009595451bf8fc37520fa469cc09d485286 10db81af71a6d4c4f99a59510939a2b4dc8f6864,38dd30af4252a02ba504d677204a7e5066cef53f,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 6 14:31:08 2017 +0200,1499344268,Merge pull request #4105 from spinlock/unstable-networkingOptimize addReplyBulkSds for better performance,,,,,,,,,,,,,,,Merge,False,,
38dd30af4252a02ba504d677204a7e5066cef53f 443f279a3a33f8047adc397bb53aad614aa35133,6b0670daadd96e8c0a45fadd1dccdb24fb960aae,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 6 15:02:11 2017 +0200,1499346131,Merge pull request #3853 from itamarhaber/issue-3851Sets up fake client to select current db in RM_Call(),,,,,,,,,,,,,,,Merge,False,,
6b0670daadd96e8c0a45fadd1dccdb24fb960aae,fc7ecd8d359160c5b74aa86c09eefdf4e9e2d653,antirez,antirez@gmail.com,Mon Jul 10 13:38:23 2017 +0200,1499686703,AOF check utility: ability to check files with RDB preamble.,61.0,35.0,"src/Makefile,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-aof.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,1.0,2.0575015343191074,14.0,1452.833333333333,619.0,348.5914178240741,10008.5,1.0530646985185843,5099.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
6b0670daadd96e8c0a45fadd1dccdb24fb960aae,dfb68cd235c03faafb2411d08c7afb7377c8d8ae,Guy Benoish,guy.benoish@redislabs.com,Mon Jul 10 14:41:57 2017 +0300,1499686917,Modules: Fix io->bytes calculation in RDB save,55.0,30.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3885.0,110.0,4.133773148148149,4.0,1.2419097430268955,4.0,None,False,,
fc7ecd8d359160c5b74aa86c09eefdf4e9e2d653,11182a1a58ef6d36f76f7a5e06d0598254b524d9,antirez,antirez@gmail.com,Mon Jul 10 16:41:25 2017 +0200,1499697685,redis-check-aof: tell users there is a --fix option.,2.0,1.0,"src/redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,232.0,4.0,0.1271064814814815,10012.0,8.867419413585866,5100.0,None,False,,
11182a1a58ef6d36f76f7a5e06d0598254b524d9 dfb68cd235c03faafb2411d08c7afb7377c8d8ae,58104d832786cdf285ec83ac7121ac84d04434c9,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 10 19:14:34 2017 +0200,1499706874,Merge pull request #4113 from guybe7/module_io_bytesModules: Fix io->bytes calculation in RDB save,,,,,,,,,,,,,,,Merge,False,,
11182a1a58ef6d36f76f7a5e06d0598254b524d9,54e4bbeabdd1cd92e5c2b461f85c6c03d8645838,antirez,antirez@gmail.com,Tue Jul 11 00:13:52 2017 +0200,1499724832,"Event loop: call after sleep() only from top level.In general we do not want before/after sleep() callbacks to be callednwhen we re-enter the event loop, since those calls are only designed innorder to perform operations every main iteration of the event loop, andnre-entering is often just a way to incrementally serve clietns withnerror messages or other auxiliary operations. However, if we call thencallbacks, we are then forced to think at before/after sleep callbacksnas re-entrant, which is much harder without any good need.nnHowever here there was also a clear bug: beforeSleep() was actuallynnever called when re-entering the event loop. But the new afterSleep()ncallback was. This is broken and in this instance re-enteringnafterSleep() caused a modules GIL dead lock.n",4.0,2.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,14.0,301.0,28.0,68.53299768518518,10013.5,1.0109436333639632,5102.0,None,False,,
54e4bbeabdd1cd92e5c2b461f85c6c03d8645838 58104d832786cdf285ec83ac7121ac84d04434c9,14c32c3569846addb93ef6c2636fcc493aeb245f,antirez,antirez@gmail.com,Tue Jul 11 09:46:58 2017 +0200,1499759218,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
14c32c3569846addb93ef6c2636fcc493aeb245f,e203a46cf3b9237a59ea10ddfd9e2578d110a5fe,antirez,antirez@gmail.com,Tue Jul 11 12:33:00 2017 +0200,1499769180,Clients blocked in modules: free argv/argc later.See issue #3844 for more information.n,15.0,3.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.8524051786494786,14.0,2966.5,375.0,3.3954745370370367,10015.5,1.598772373103022,5104.0,None,False,,
e203a46cf3b9237a59ea10ddfd9e2578d110a5fe,5bd46d33db53186fddefbe2be8ab8a2805a66612,antirez,antirez@gmail.com,Tue Jul 11 12:44:56 2017 +0200,1499769896,Fix isHLLObjectOrReply() to handle integer encoded strings.Close #3766.n,1.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1549.0,100.0,137.83694444444444,10017.0,1.0072549489836018,5105.0,Corrective,True,,
5bd46d33db53186fddefbe2be8ab8a2805a66612,e1b8b4b6daea28129bf038abc96707ef1a7d220e,antirez,antirez@gmail.com,Tue Jul 11 15:49:09 2017 +0200,1499780949,CLUSTER GETKEYSINSLOT: avoid overallocating.Close #3911.n,5.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5448.0,518.0,18.263055555555557,10018.0,1.0547553500539948,5106.0,None,False,,
e1b8b4b6daea28129bf038abc96707ef1a7d220e,e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947,antirez,antirez@gmail.com,Wed Jul 12 11:07:28 2017 +0200,1499850448,"Fix replication of SLAVEOF inside transaction.In Redis 4.0 replication, with the introduction of PSYNC2, masters andnslaves replicate commands to cascading slaves and to the replicationnbacklog itself in a different way compared to the past.nnMasters actually replicate the effects of client commands.nSlaves just propagate what they receive from masters.nnThis mechanism can cause problems when the configuration of an instancenis changed from master to slave inside a transaction. For instancenwe could send to a master instance the following sequence:nnMULTInSLAVEOF 127.0.0.1 0nEXECnSLAVEOF NO ONEnnBefore the fixes in this commit, the MULTI command used to be propagatedninto the replication backlog, however after the SLAVEOF command theninstance is a slave, so the EXEC implementation failed to also propagatenthe EXEC command. When the slaves of the above instance reconnected,nthey were incrementally synchronized just sending a MULTI. This putnthe master client (in the slaves) into MULTI state, breaking thenreplication.nnNotably even Redis Sentinel uses the above approach in order to guaranteenthat configuration changes are always performed together with rewritesnof the configuration and with clients disconnection. Sentiel does:nnMULTInSLAVEOF ...nCONFIG REWRITEnCLIENT KILL TYPE normalnEXECnnSo this was a really problematic issue. However even with the fix innthis commit, that will add the final EXEC to the replication stream inncase the instance was switched from master to slave during thentransaction, the result would be to increment the slave replicationnoffset, so a successive reconnection with the new master, will notnpermit a successful partial resynchronization: no way the new master cannprovide us with the backlog needed, we incremented our offset to a valuenthat the new master cannot have.nnHowever the EXEC implementation waits to emit the MULTI, so that if thencommands inside the transaction actually do not need to be replicated,nno commands propagation happens at all. From multi.c:nnif (!must_propagate && !(c->cmd->flags & (CMD_READONLY|CMD_ADMIN))) {ntexecCommandPropagateMulti(c);ntmust_propagate = 1;n}nnThe above code is already modified by this commit you are reading.nNow also ADMIN commands do not trigger the emission of MULTI. It is actuallynnot clear why we do not just check for CMD_WRITE... Probably I wrote it thisnway in order to make the code more reliable: better to over-emit MULTInthan not emitting it in time.nnSo this commit should indeed fix issue #3836 (verified), however it looksnlike some reconsideration of this code path is needed in the long term.nnBONUS POINT: The reverse bug.nnEven in a read only slave B, in a replication setup like:nntA -> B -> CnnThere are commands without the READONLY nor the ADMIN flag, that are alsonnot flagged as WRITE commands. An example is just the PING command.nnSo if we send B the following sequence:nnMULTInPINGnSLAVEOF NO ONEnEXECnnThe result will be the reverse bug, where only EXEC is emitted, but not thenprevious MULTI. However this apparently does not create problems in practicenbut it is yet another acknowledge of the fact some work is needed herenin order to make this code path less surprising.nnNote that there are many different approaches we could follow. For instancenMULTI/EXEC blocks containing administrative commands may be allowed ONLYnif all the commands are administrative ones, otherwise they could bendenined. When allowed, the commands could simply never be replicated at all.n",19.0,3.0,"src/multi.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,14.0,1172.0,157.0,358.97734375000016,10019.5,1.0013946887859408,5108.0,Corrective,True,,
e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947,43aaf96163ecc32c1d57834bbc1c7029986ae1cb,antirez,antirez@gmail.com,Fri Jul 14 11:29:28 2017 +0200,1500024568,Markdown generation of Redis Modules API reference improved.,83.0,74.0,"src/module.c,CAS_DELIMITER,src/modules/gendoc.rb,CAS_DELIMITER",2.0,1.0,2.0,0.5845723335293168,14.0,1979.0,114.0,216.3232523148148,10021.5,1.170310062591882,5110.0,None,False,True,"[""3b0f0086156e79e0c7e13c8e7118799b9b40dd08""]"
43aaf96163ecc32c1d57834bbc1c7029986ae1cb,f03947a6761bbfb200cefdae562f1ca58597d927,antirez,antirez@gmail.com,Fri Jul 14 11:33:59 2017 +0200,1500024839,Modules documentation removed from source.Moving to redis-doc repository to publish via Redis.io.n,0.0,2830.0,"src/modules/API.md,CAS_DELIMITER,src/modules/BLOCK.md,CAS_DELIMITER,src/modules/INTRO.md,CAS_DELIMITER,src/modules/TYPES.md,CAS_DELIMITER",4.0,1.0,1.0,1.742382898435255,13.0,707.5,29.0,247.2415856481481,10024.5,1.0022164977658896,5114.0,Non Functional,False,,
f03947a6761bbfb200cefdae562f1ca58597d927,8eefc9323dc677bf266c71c07fe788aef68b4eaf,antirez,antirez@gmail.com,Fri Jul 14 12:07:52 2017 +0200,1500026872,"Allow certain modules APIs only defining REDISMODULE_EXPERIMENTAL_API.Those calls may be subject to changes in the future, so the user shouldnacknowledge it is using non stable API.n",20.0,12.0,"src/modules/helloblock.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,2.0,0.20062232431271465,14.0,273.0,49.0,39.79256944444445,10027.5,1.0132739538833009,5116.0,None,False,,
8eefc9323dc677bf266c71c07fe788aef68b4eaf,bd1782fa0af2a2af081254a267d5fc8c2d0f472e,antirez,antirez@gmail.com,Fri Jul 14 13:02:15 2017 +0200,1500030135,Modules: fix thread safe context DB selection.Before this fix the DB currenty selected by the client blocked was notnrespected and operations were always performed on DB 0.n,3.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3916.0,113.0,0.06443287037037038,10029.0,16.52002874079396,5117.0,None,False,,
bd1782fa0af2a2af081254a267d5fc8c2d0f472e,b80e467023aa6c882639426b9a2ac691fbc220be,antirez,antirez@gmail.com,Fri Jul 14 13:04:37 2017 +0200,1500030277,changelog.tcl: output 100 lines.,1.0,1.0,"utils/releasetools/changelog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,30.0,2.0,350.9507638888888,10030.0,1.002849402545585,88.0,None,False,,
b80e467023aa6c882639426b9a2ac691fbc220be,7560d347da90dad0ff8b13872aeb48de609d3c9f,Chris Lamb,chris@chris-lamb.co.uk,Fri Jul 14 22:53:14 2017 +0100,1500069194,Correct proceding -> proceeding typo.,1.0,1.0,"src/redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,233.0,5.0,4.2998726851851865,7.0,1.2325650253425893,6.0,None,False,,
e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947,c32c690de631115ed1f3534b46743a045dec4206,WuYunlong,xzsyeb@126.com,Sat Jul 15 10:20:56 2017 +0800,1500085256,fix rewrite config: auto-aof-rewrite-min-size,2.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2101.0,205.0,144.46599537037036,0.0,0.0,0.0,Corrective,True,,
b80e467023aa6c882639426b9a2ac691fbc220be,2cdf4cc656cd74aa7c29360b13cf07d3e0e72afb,Leon Chen,chen.bao.yi@qq.com,Tue Jul 18 02:28:24 2017 -0500,1500362904,fix mismatch argument,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5453.0,519.0,6.735590277777778,0.0,0.0,0.0,Corrective,True,,
2cdf4cc656cd74aa7c29360b13cf07d3e0e72afb,9e7a8c0207bab8045dc2938a21657d711a9c4953,Leon Chen,chen.bao.yi@qq.com,Thu Jul 20 17:24:38 2017 +0800,1500542678,fix return wrong value of clusterDelNodeSlots,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5453.0,520.0,2.0807175925925927,1.0,1.4806034242993982,1.0,Corrective,True,,
b80e467023aa6c882639426b9a2ac691fbc220be,b1c2e1a19c549a49cc124571849976e7ab91d4d1,antirez,antirez@gmail.com,Thu Jul 20 14:59:42 2017 +0200,1500555582,"Fix two bugs in moduleTypeLookupModuleByID().The function cache was not working at all, and the function returnednwrong values if there where two or more modules exporting native datantypes.nnSee issue #4131 for more details.n",7.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3919.0,114.0,6.0815625,10031.0,1.164431426956477,5118.0,Corrective,True,,
b1c2e1a19c549a49cc124571849976e7ab91d4d1,a3778f3b0f0aacbb34ecc77541615a9eda251443,antirez,antirez@gmail.com,Thu Jul 20 15:17:35 2017 +0200,1500556655,"Make representClusterNodeFlags() more robust.This function failed when an internal-only flag was set as an only flagnin a node: the string was trimmed expecting a final comma beforenexiting the function, causing a crash. See issue #4142.nMoreover generation of flags representation only needed at DEBUG lognlevel was always performed: a waste of CPU time. This is fixed as wellnby this commit.n",18.0,17.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5455.0,521.0,0.16177083333333336,10032.0,7.18158403090792,5119.0,Corrective,True,,
a3778f3b0f0aacbb34ecc77541615a9eda251443,5bfdfbe1742f113d3ea1d0dbe857b805da4e3381,antirez,antirez@gmail.com,Sun Jul 23 12:41:26 2017 +0200,1500806486,Fix typo in unblockClientFromModule() top comment.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3922.0,115.0,2.9039814814814813,10033.0,1.3443548129962055,5120.0,Corrective,True,,
5bfdfbe1742f113d3ea1d0dbe857b805da4e3381,314043552b3e0ce5f080d0fd2169d5c32f94a222,antirez,antirez@gmail.com,Sun Jul 23 12:55:37 2017 +0200,1500807337,"Modules: don't crash when Lua calls a module blocking command.Lua scripting does not support calling blocking commands, however allnthe native Redis commands are flagged as s (no scripting flag), sonthis is not possible at all. With modules there is no such mechanism innorder to flag a command as non callable by the Lua scripting engine,nmoreover we cannot trust the modules users from complying all the times:nit is likely that modules will be released to have blocking commandsnwithout such commands being flagged correctly, even if we provide a way tonsignal this fact.nnThis commit attempts to address the problem in a short term way, byndetecting that a module is trying to block in the context of the Luanscripting engine client, and preventing to do this. The module willnactually believe to block as usually, but what happens is that the Luanscript receives an error immediately, and the background call is ignorednby the Redis engine (if not for the cleanup callbacks, once itnunblocks).nnLong term, the more likely solution, is to introduce a new call callednRedisModule_GetClientFlags(), so that a command can detect if the callernis a Lua script, and return an error, or avoid blocking at all.nnBeing the blocking API experimental right now, more work is needed innthis regard in order to reach a level well blocking module commands andnall the other Redis subsystems interact peacefully.nnNow the effect is like the following:nn127.0.0.1:6379> eval redis.call('hello.block',1,5000) 0n(error) ERR Error running script (call tonf_b5ba35ff97bc1ef23debc4d6e9fd802da187ed53): @user_script:1: ERRnBlocking module command called from Lua scriptnnThis commit fixes issue #4127 in the short term.n",12.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3922.0,116.0,0.009849537037037035,10034.0,102.52761457109284,5121.0,None,False,,
314043552b3e0ce5f080d0fd2169d5c32f94a222,ffbbe5a720a723148ee364066f08e63528a57376,liangsijian,liangsijian@foxmail.com,Mon Jul 24 19:20:31 2017 +0800,1500895231,Fix lua ldb command log,1.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2388.0,168.0,24.04758101851852,0.0,0.0,0.0,Corrective,True,,
314043552b3e0ce5f080d0fd2169d5c32f94a222 ffbbe5a720a723148ee364066f08e63528a57376,7c3c472b5e5861787055c74b189e6a8b590e9e81,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 14:11:10 2017 +0200,1500898270,Merge pull request #4154 from liangsijian/unstableFix lua ldb command log,,,,,,,,,,,,,,,Merge,False,,
7c3c472b5e5861787055c74b189e6a8b590e9e81 9e7a8c0207bab8045dc2938a21657d711a9c4953,d9565379da0adf97caec12e9b88c17da51900e40,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 14:18:28 2017 +0200,1500898708,Merge pull request #4128 from leonchen83/unstablefix mismatch argument and return wrong value of clusterDelNodeSlots,,,,,,,,,,,,,,,Merge,False,,
d9565379da0adf97caec12e9b88c17da51900e40 087b19237cbdda4a1c082a9cf1aaf6cd0a2b9066,25c231c4c1efb1099be188a74144353ace499d01,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 15:18:08 2017 +0200,1500902288,Merge pull request #1998 from grobe0ba/unstableFix missing '-' in redis-benchmark help output (Issue #1996),,,,,,,,,,,,,,,Merge,False,,
25c231c4c1efb1099be188a74144353ace499d01 c32c690de631115ed1f3534b46743a045dec4206,ae40e5f362cb4532340eb2043144ede836d5b9e4,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 15:18:56 2017 +0200,1500902336,Merge pull request #4125 from trevor211/fixAutoAofRewirteMinSizefix rewrite config: auto-aof-rewrite-min-size,,,,,,,,,,,,,,,Merge,False,,
ae40e5f362cb4532340eb2043144ede836d5b9e4 7560d347da90dad0ff8b13872aeb48de609d3c9f,964224b77fb4361e337d2f679fd4e6ccb2fa33c0,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 15:19:21 2017 +0200,1500902361,Merge pull request #4124 from lamby/proceding-proceeding-typoCorrect proceding -> proceeding typo.,,,,,,,,,,,,,,,Merge,False,,
964224b77fb4361e337d2f679fd4e6ccb2fa33c0 04607b53500f71498a502ffcfc41a82792013e2b,6b64cc47a07005af1c3dfff7469d76e2ed1a8ea7,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 15:19:53 2017 +0200,1500902393,Merge pull request #2259 from badboy/fix-2258Check that the whole first argument is a number,,,,,,,,,,,,,,,Merge,False,,
6b64cc47a07005af1c3dfff7469d76e2ed1a8ea7 367035a9838695c1f17a78af0325de5ae6ec08fc,dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 24 15:20:31 2017 +0200,1500902431,Merge pull request #1934 from badboy/install-script-1922Don't use extended Regexp Syntax,,,,,,,,,,,,,,,Merge,False,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,81fe7a4733ff6c1f7fbfaeb190c963d2d2826280,Mota,motablow@gmail.com,Sat Jan 28 11:20:23 2017 +0800,1485573623,redis-benchmark: default value size usage update.default size of SET/GET value in usage should be 3 bytes as in main code.n,2.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,846.0,63.0,-142.18111111111108,0.0,0.0,0.0,None,False,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,22bcee5178c68255d1ba7da908405161c4ffbdf5,Su00c3u00a9bastien Fievet,_@sebastien-fievet.fr,Wed Jul 26 14:11:05 2017 +0200,1501071065,Fix some typos,3.0,3.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1293.0,175.0,195.8237962962963,0.0,0.0,0.0,Corrective,True,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,005d9fa8615bfffb550c62f94a88056e06858e74,Bo Cai,charpty@gmail.com,Wed Jul 26 21:24:28 2017 +0800,1501075468,redis-cli.c typo: helpe -> helper.Signed-off-by: Bo Cai <charpty@gmail.com>n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2749.0,189.0,25.987847222222214,0.0,0.0,0.0,None,False,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,00954f4d48f1e2fa42dc2a4ae6090ec083996c11,Bo Cai,charpty@gmail.com,Wed Jul 26 21:33:29 2017 +0800,1501076009,redis-cli.c typo: Requets -> Requests.Signed-off-by: Bo Cai <charpty@gmail.com>n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2749.0,190.0,0.006261574074074074,1.0,160.70425138632163,1.0,None,False,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,2e6f28500941d7a6f24f3831e9cabcb576d290fd,Shaun Webb,shaunwebbit@gmail.com,Thu Jul 27 09:37:37 2017 +0900,1501115857,Fix typo,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5456.0,522.0,6.47224537037037,0.0,0.0,0.0,Corrective,True,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,f06f10e66bfe5afdb013798e02c6aec7937435a5,Shaun Webb,shaunwebbit@gmail.com,Thu Jul 27 15:27:46 2017 +0900,1501136866,Typo fix,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1293.0,176.0,0.7615856481481481,1.0,2.3130499536481213,0.0,Corrective,True,,
dc997755bf8c2d69899957a8ab6dc41aed0c7ddb,bc64df9a66def9a86461d2f215a142ffffd03369,antirez,antirez@gmail.com,Fri Jul 28 17:47:54 2017 +0200,1501256874,Add MEMORY DOCTOR to MEMORY HELP.,3.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1160.0,111.0,155.1970601851852,10035.0,1.0064434210210351,5122.0,Feature Addition,False,,
bc64df9a66def9a86461d2f215a142ffffd03369,0c6ea46f2bfc0d2ee6ef7b2e5e04ce6502d9fa27,Felix Krause,KrauseFx@users.noreply.github.com,Fri Jul 28 13:04:52 2017 -0400,1501261492,Update link to https and use inline link,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,23.0,554.2342129629628,0.0,0.0,0.0,None,False,,
bc64df9a66def9a86461d2f215a142ffffd03369 b8286d1fc9c1b8c2e17a9e884d94492ba039c53c,34a79c353f15900f004057858f0d57a29d68b63c,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 2 12:51:26 2017 +0200,1501671086,Merge pull request #3935 from itamarhaber/module-cmdstatsChanges command stats iteration to being dict-based,,,,,,,,,,,,,,,Merge,False,,
34a79c353f15900f004057858f0d57a29d68b63c,a8c08b9b7668f784cfd24ecd2afb2fdd2ae65312,jybaek,oops.jybaek@gmail.com,Thu Aug 3 17:28:04 2017 +0900,1501748884,Add missing fclose(),1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2749.0,191.0,7.787905092592593,2.0,1.1284042355563813,2.0,Feature Addition,False,,
34a79c353f15900f004057858f0d57a29d68b63c a8c08b9b7668f784cfd24ecd2afb2fdd2ae65312,202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,Salvatore Sanfilippo,antirez@gmail.com,Thu Aug 3 12:18:58 2017 +0200,1501755538,Merge pull request #4191 from jybaek/unstableAdd missing fclose(),,,,,,,,,,,,,,,Merge,False,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,447b373fc9d8d7cd3f66de42f7a809fb40941bfc,jeesyn.liu,jeesyn.liu@gmail.com,Tue Aug 8 17:45:51 2017 +0800,1502185551,fix a typo,1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,660.0,59.0,111.80677083333332,0.0,0.0,0.0,Corrective,True,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,6b9f02ac1263b21675ecd4a05cc12d3da41e8a0f,Chris Lamb,chris@chris-lamb.co.uk,Sat Aug 12 22:21:03 2017 -0700,1502601663,Correct spelling of faield.,1.0,1.0,"tests/instances.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,511.0,17.0,575.5628240740741,8.0,1.0017374297959718,0.0,None,False,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,2ef8c2f6c22e27507e62bf937a5b4e9f7429fdbd,Richard Li,aspirewit@gmail.com,Fri Aug 18 11:27:04 2017 +0800,1503026824,Update the comment,2.0,2.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,130.0,9.0,752.8231018518518,0.0,0.0,0.0,None,False,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,498f65ffb77e7fab9c9085394657ba7b46bedde9,jianqingdu,jianqing.du@live.cn,Wed Aug 30 21:20:14 2017 -0500,1504146014,fix not call va_end when syncWrite() failedfix not call va_end when syncWrite() failed in sendSynchronousCommand(),2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2681.0,197.0,125.46952546296295,0.0,0.0,0.0,Corrective,True,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,b122cadc666054ea83c699d65b518dc0f6f633c0,Oran Agra,oran@redislabs.com,Sun Sep 17 07:22:16 2017 +0300,1505622136,"Flush append only buffers before existing.when SHUTDOWN command is recived it is possible that some of the recentncommand were not yet flushed from the AOF buffer, and the servernexperiences data loss at shutdown.n",2.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3856.0,130.0,68.69714120370371,30.0,1.0145566464990845,25.0,None,False,,
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6 b122cadc666054ea83c699d65b518dc0f6f633c0,8885921dfbdd5fee2d5904f6f296435f038f45e1,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 18 12:03:41 2017 +0200,1505729021,Merge pull request #4311 from oranagra/aof_shutdown_flushFlush append only buffers before existing.,,,,,,,,,,,,,,,Merge,False,,
8885921dfbdd5fee2d5904f6f296435f038f45e1 c76b9b644c11f8b7284755664670d9baa64f1907,9b4cb4addcf03436edd9504a3d9b6bbc5c13cf1e,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 18 12:18:15 2017 +0200,1505729895,Merge pull request #3554 from jybaek/Delete_duplicateRemove Duplicate Processing,,,,,,,,,,,,,,,Merge,False,,
9b4cb4addcf03436edd9504a3d9b6bbc5c13cf1e 81fe7a4733ff6c1f7fbfaeb190c963d2d2826280,2d13bf4c59e25e179e530edbd907cfd3749f8cc2,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 18 12:18:57 2017 +0200,1505729937,Merge pull request #3785 from GitHubMota/unstableredis-benchmark: default value size usage update.,,,,,,,,,,,,,,,Merge,False,,
8885921dfbdd5fee2d5904f6f296435f038f45e1,b75ae0bbea794dbfd6549d308ab29f9b963e0722,antirez,antirez@gmail.com,Tue Sep 19 10:33:14 2017 +0200,1505809994,"PSYNC2: Create backlog on slave partial sync as well.A slave may be started with an RDB file able to provide enough slave tonperform a successful partial SYNC with its master. However in such ancase, how outlined in issue #4268, the slave backlog will not benstarted, since it was only initialized on full syncs attempts. Thisncreates different problems with successive PSYNC attempts that willnalways result in full synchronizations.nnThanks to @fdingiit for discovering the issue.n",5.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2681.0,198.0,19.259027777777774,10036.0,1.0519237010060216,5123.0,None,False,,
b75ae0bbea794dbfd6549d308ab29f9b963e0722 2d13bf4c59e25e179e530edbd907cfd3749f8cc2,a4152119c6c13e5a8940513e0983e02d5c5545f2,antirez,antirez@gmail.com,Tue Sep 19 10:35:49 2017 +0200,1505810149,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a4152119c6c13e5a8940513e0983e02d5c5545f2,c1c99e9f4e19b3c68d810a51449b34c2261e24c9,antirez,antirez@gmail.com,Tue Sep 19 23:03:39 2017 +0200,1505855019,"PSYNC2: Fix the way replication info is saved/loaded from RDB.This commit attempts to fix a number of bugs reported in #4316.nThey are related to the way replication info like replication ID,noffsets, and currently selected DB in the master client, are storednand loaded by Redis. In order to avoid inconsistencies the changes innthis commit try to enforce that:nn1. Replication information are only stored when the RDB file isngenerated by a slave that has a valid 'master' client, so that we cannalways extract the currently selected DB.n2. When replication informations are persisted in the RDB file, all theninfo for a successful PSYNC or nothing is persisted.n3. The RDB replication informations are only loaded if the instance isnconfigured as a slave, otherwise a master can start with IDs that relatento a different history of the data set, and stil retain such IDs in thenfuture while receiving unrelated writes.n",49.0,23.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",4.0,1.0,1.0,1.5821662444891276,14.0,2169.5,551.0,39.75541087962963,10038.5,1.0082776674880063,5127.0,None,False,True,"[""8f7e97258b0b71b907a67b3078fe6374c77b9972""]"
c1c99e9f4e19b3c68d810a51449b34c2261e24c9,b541ccef25d20749c739b858ef8694512b7f3bce,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Sep 20 13:47:42 2017 +0800,1505886462,"PSYNC2: make persisiting replication info more solidThis commit is a reinforcement of commit c1c99e9.nn1. Replication information can be stored when the RDB file isngenerated by a mater using server.slaveseldb when server.repl_backlognis not NULL, or set repl_stream_db be -1. That's safe, becausenNULL server.repl_backlog will trigger full synchronization,nthen master will send SELECT command to replicaiton stream.n2. Only do rdbSave* when rsiptr is not NULL,nif we do rdbSave* without rdbSaveInfo, slave will miss repl-stream-db.n3. Save the replication informations also in the case ofnSAVE command, FLUSHALL command and DEBUG reload.n",33.0,9.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",4.0,1.0,1.0,1.684185736908434,14.0,1832.5,716.0,60.4796875,1.5,0.7531048898758035,3.0,None,False,,
b541ccef25d20749c739b858ef8694512b7f3bce,bb3b5ddd1968d2715acc37b63124ccf461276160,antirez,antirez@gmail.com,Wed Sep 20 11:28:13 2017 +0200,1505899693,PSYNC2: More refinements related to #4316.,14.0,11.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.2422921890824148,14.0,2351.0,395.0,0.15313657407407408,10041.5,5.897588995540776,5129.0,None,False,,
bb3b5ddd1968d2715acc37b63124ccf461276160,269760edbbf6cdebe1c00040234b1fa6ba8851ce,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Sep 21 14:19:21 2017 +0800,1505974761,Lazyfree: avoid memory leak when free slowlog entry,5.0,2.0,"src/slowlog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,176.0,12.0,97.8065625,4.0,1.0102242628146756,4.0,None,False,True,"[""474adba9fa7a173d866300b1abd7cddd34cbac40""]"
bb3b5ddd1968d2715acc37b63124ccf461276160 269760edbbf6cdebe1c00040234b1fa6ba8851ce,fa2c0582cfa614cd854b4a64ddce1493da9317bb,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 21 12:32:02 2017 +0200,1505989922,Merge pull request #4324 from soloestoy/lazyfree-fix-memory-leakLazyfree: avoid memory leak when free slowlog entry,,,,,,,,,,,,,,,Merge,False,,
fa2c0582cfa614cd854b4a64ddce1493da9317bb,474adba9fa7a173d866300b1abd7cddd34cbac40,antirez,antirez@gmail.com,Thu Sep 21 12:35:04 2017 +0200,1505990104,Clarify comment in change fixing #4323.,6.0,2.0,"src/slowlog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,179.0,13.0,0.1775810185185185,10043.0,6.631232483868866,5130.0,Corrective,True,,
474adba9fa7a173d866300b1abd7cddd34cbac40,616c546b010b45571ec2fb569f127e50c9c5bf42,Dvir Volk,dvirsky@gmail.com,Wed Sep 27 11:52:39 2017 +0300,1506502359,Added support for module context flags with RM_GetCtxFlags,177.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.4505497050657945,14.0,1509.0,165.0,165.25555169753088,25.0,1.0065215137878354,26.0,Feature Addition,False,True,"[""613831f82023601df874b9cfa9a1935ff942ceb6""]"
616c546b010b45571ec2fb569f127e50c9c5bf42,b246635d6d5724e5f1275ac299d3dcf330b1a315,Dvir Volk,dvirsky@gmail.com,Wed Sep 27 11:56:40 2017 +0300,1506502600,Renamed GetCtxFlags to GetContextFlags,11.0,11.0,"src/module.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.4353713907745331,14.0,1568.0,168.0,0.002789351851851852,28.0,220.08713692946057,29.0,None,False,,
b246635d6d5724e5f1275ac299d3dcf330b1a315,7393fd814e0f753b2424a192cddee6b130be6e3a,Dvir Volk,dvirsky@gmail.com,Wed Sep 27 15:17:53 2017 +0300,1506514673,Added safety net preventing redis from crashing if a module decide to block in MULTI,8.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4001.0,119.0,0.1397337962962963,30.0,8.156464838896714,30.0,Feature Addition,False,,
474adba9fa7a173d866300b1abd7cddd34cbac40,cb9dde3280244ec3b449f081639c37dd5a1916ab,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Sep 28 16:21:21 2017 +0800,1506586881,Modules: handle the conflict of registering commands,28.0,21.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4004.0,120.0,0.8357407407407408,5.0,2.1965433192998005,5.0,None,False,,
cb9dde3280244ec3b449f081639c37dd5a1916ab,6dffc1b7a33f1fd4fa1ff0368933ed575bca5606,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Sep 28 17:38:40 2017 +0800,1506591520,Modules: handle the busy module name,19.0,2.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.7918583525674836,14.0,2197.5,167.0,0.5414293981481481,6.5,10.774092519716609,7.0,None,False,,
474adba9fa7a173d866300b1abd7cddd34cbac40 7393fd814e0f753b2424a192cddee6b130be6e3a,54ad626cce2403d0a0ba8e6f3303ed02ee88bc94,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 28 14:40:55 2017 +0200,1506602455,Merge pull request #4337 from dvirsky/module_ctx_flagsModule Context flags,,,,,,,,,,,,,,,Merge,False,,
54ad626cce2403d0a0ba8e6f3303ed02ee88bc94,2bf8c2c1300da1909cc8c8c35d13e46bcf59aa31,antirez,antirez@gmail.com,Thu Sep 28 23:15:34 2017 +0200,1506633334,Limit statement in RM_BlockClient() to 80 cols.,5.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4025.0,122.0,0.4839583333333333,10044.0,3.066293585880328,5131.0,None,False,,
2bf8c2c1300da1909cc8c8c35d13e46bcf59aa31,6eb996540c662832370ddaac25484c4cbbca4e7a,rouzier,rouzier@gmail.com,Fri Oct 13 13:20:45 2017 -0400,1507915245,Fix file descriptor leak and error handling,6.0,3.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,360.0,18.0,95.23775462962965,0.0,0.0,0.0,Corrective,True,,
2bf8c2c1300da1909cc8c8c35d13e46bcf59aa31,de474186bdb1a595bb77ccec577754134884bb52,antirez,antirez@gmail.com,Mon Oct 30 13:20:13 2017 +0100,1509366013,"More robust object -> double conversion.Certain checks were useless, at the same time certain malformed inputsnwere accepted without problems (emtpy strings parsed as zero).nCases where strtod() returns ERANGE but we still want to parse the inputnwhere ok in getDoubleFromObject() but not in the long variant.nnAs a side effect of these fixes, this commit fixes #4391.n",8.0,4.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1162.0,112.0,93.85577546296295,10045.0,1.0106546453328769,5132.0,Corrective,True,True,"[""adf2701cc95085a4a9980da7b7367b1836c5a0f2"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
de474186bdb1a595bb77ccec577754134884bb52,b2e295971ff9dce6552e717f542c056524d002c8,antirez,antirez@gmail.com,Mon Oct 30 13:45:46 2017 +0100,1509367546,Regression test for issue #4391.,4.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1038.0,36.0,560.3818518518518,10046.0,1.0017844974755972,734.0,Preventative,False,,
b2e295971ff9dce6552e717f542c056524d002c8,ffcf7d5ab1e98d84c28af9bea7be76c6737820ad,antirez,antirez@gmail.com,Tue Oct 31 09:41:22 2017 +0100,1509439282,"Fix buffer overflows occurring reading redis.conf.There was not enough sanity checking in the code loading the slots ofnRedis Cluster from the nodes.conf file, this resulted into thenattacker's ability to write data at random addresses in the processnmemory, by manipulating the index of the array. The bug seemsnexploitable using the following techique: the config file may be altered sonthat one of the nodes gets, as node ID (which is the first field inside thenstructure) some data that is actually executable: then by writing thisnaddress in selected places, this node ID part can be executed after anjump. So it is mostly just a matter of effort in order to exploit thenbug. In practice however the issue is not very critical because thenbug requires an unprivileged user to be able to modify the Redis clusternnodes configuration, and at the same time this should result in somengain. However Redis normally is unprivileged as well. Yet much better tonhave this fixed indeed.nnFix #4278.n",3.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5456.0,523.0,96.3359375,10047.0,1.0103803422269078,5133.0,Corrective,True,,
2bf8c2c1300da1909cc8c8c35d13e46bcf59aa31,6ddf0ea29340891d9934892b6c239d160d1ee0c4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Nov 1 17:32:23 2017 +0800,1509528743,"PSYNC2: safe free backlog when reach the time limitWhen we free the backlog, we should use a newnreplication ID and clear the ID2. Since withoutnbacklog we can not increment master_repl_offsetneven do write commands, that may lead to inconsistencynwhen we try to connect a slave-before mastern(if this master is our slave before, our replidnequals the master's replid2). As the master have ournhistory, so we can match the master's replid2 andnsecond_replid_offset, that make partial sync work,nbut the data is inconsistent.n",12.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2687.0,202.0,42.002893518518526,8.0,1.0238078836059024,8.0,None,False,,
6ddf0ea29340891d9934892b6c239d160d1ee0c4,885c4f856e5a41e86ebf2a3233dc3ba2bae6945e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Nov 1 17:52:43 2017 +0800,1509529963,PSYNC2 & RDB: fix the missing rdbSaveInfo for BGSAVE,4.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2018.0,195.0,42.01701388888889,9.0,1.0237998826533563,9.0,None,False,,
885c4f856e5a41e86ebf2a3233dc3ba2bae6945e,b8579c225cd0ea83222938bb188cd74501fb1627,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 2 10:45:33 2017 +0800,1509590733,PSYNC2: clarify the scenario when repl_stream_db can be -1,21.0,9.0,"src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,14.0,2945.5,328.0,21.97039351851852,10.5,1.7222560270807974,11.0,None,False,,
ffcf7d5ab1e98d84c28af9bea7be76c6737820ad,34d5804d4c85d077b6af6265ebd86f35ecca89de,antirez,antirez@gmail.com,Fri Nov 3 10:19:27 2017 +0100,1509700767,"SDS: improve sdsRemoveFreeSpace() to avoid useless data copy.Since SDS v2, we no longer have a single header, so the function tonrewrite the SDS in terms of the minimum space required, instead of justnusing realloc() and let the underlying allocator decide what to do,nwas doing an allocation + copy every time the minimum possible headernneeded to represent the string was different than the current one.nThis could be often a bit wasteful, because if we go, for instance, fromnthe 32 bit fields header to the 16 bit fields header, the overhead ofnthe header is normally very small. With this commit we call reallocninstead, unless the change in header size is very significant in relationnto the string length.n",12.0,5.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1270.0,74.0,252.92730324074074,10048.0,1.0039537052235448,5134.0,None,False,,
34d5804d4c85d077b6af6265ebd86f35ecca89de,a1944c3e4d2fb2b5aef7c6c3efc769ef2edd71ee,antirez,antirez@gmail.com,Mon Nov 6 12:33:42 2017 +0100,1509968022,"Fix saving of zero-length lists.Normally in modern Redis you can't create zero-len lists, however it'snpossible to load them from old RDB files generated, for instance, usingnRedis 2.8 (see issue #4409). The Right Thing would be not loading suchnlists at all, but this requires to hook in rdb.c random places in a notngreat way, for a problem that is at this point, at best, minor.nnHere in this commit instead I just fix the fact that zero length lists,nmaterialized as quicklists with the first node set to NULL, wereniterated in the wrong way while they are saved, leading to a crash.nnThe other parts of the list implementation are apparently able to dealnwith empty lists correctly, even if they are no longer a thing.n",3.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2032.0,197.0,4.366770833333334,10049.0,1.2290021707497436,5135.0,Corrective,True,,
a1944c3e4d2fb2b5aef7c6c3efc769ef2edd71ee,2564963dc8a9894f7b066988808af7e401f572e8,Itamar Haber,itamar@redislabs.com,Wed Nov 8 16:08:29 2017 +0200,1510150109,Fixes an off-by-one in argument handling of `MEMORY USAGE`Fixes #4430,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1166.0,113.0,9.075185185185186,17.0,1.1101905889074808,15.0,Corrective,True,,
a1944c3e4d2fb2b5aef7c6c3efc769ef2edd71ee 2564963dc8a9894f7b066988808af7e401f572e8,30db805548f2f65ee65441528e5ca0e84c243dce,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 8 15:42:45 2017 +0100,1510152165,Merge pull request #4431 from itamarhaber/patch-10Fixes an off-by-one in argument handling of `MEMORY USAGE`,,,,,,,,,,,,,,,Merge,False,,
30db805548f2f65ee65441528e5ca0e84c243dce 413d8239dfc9ddc275b6ab87caa3819f7dfb20f8,cf9a3f704850e82793239d9349ffa282eb9217f5,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 8 17:06:09 2017 +0100,1510157169,Merge pull request #2741 from kmiku7/unstablefix boundary case for _dictNextPower,,,,,,,,,,,,,,,Merge,False,,
cf9a3f704850e82793239d9349ffa282eb9217f5,62689ef0cf3c805b100ff5260485368e1c9b683c,David Carlier,devnexen@gmail.com,Sun Nov 19 16:23:42 2017 +0000,1511108622,Fix undefined behavior constant defined.,10.0,2.0,"src/lzfP.h,CAS_DELIMITER,src/setproctitle.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,223.0,7.0,1394.2859432870368,0.5,0.5001793032492393,1.0,Corrective,True,True,"[""4e0af5efd42edacda09f6569f063cbfb1fe56fe9""]"
cf9a3f704850e82793239d9349ffa282eb9217f5,57bd8feb8d81064cd53a7f124e7509134fb7459b,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sat Nov 18 01:21:39 2017 +0800,1510939299,rehash: handle one db until finished,5.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3871.0,133.0,15.608402777777775,12.0,1.0640680545112364,12.0,None,False,,
2bf8c2c1300da1909cc8c8c35d13e46bcf59aa31,7a808fd8a7122fbc848767ff97de7f471a158cdb,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Nov 21 23:35:30 2017 +0800,1511278530,expire & latency: fix the missing latency records generated by expire,11.0,8.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,504.0,9.0,151.24519675925927,13.0,1.0066117802179977,13.0,None,False,,
b8579c225cd0ea83222938bb188cd74501fb1627,93037f764209e86f3fcb240a642334fd67552935,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Nov 22 12:05:30 2017 +0800,1511323530,"PSYNC2: make repl_stream_db never be -1it means that after this change all the replicationninfo in RDB is valid, and it can distinguish us fromnthe older version.n",6.0,9.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2033.0,198.0,15.68875,14.0,1.0637399410405546,14.0,None,False,,
93037f764209e86f3fcb240a642334fd67552935,ea2e51c630f972b23d3557f6369b13d983c12f17,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sat Nov 4 23:05:00 2017 +0800,1509807900,PSYNC2: persist cached_master's dbid inside the RDB,16.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2030.0,199.0,-17.542013888888892,15.0,0.9429940024940124,15.0,None,False,,
57bd8feb8d81064cd53a7f124e7509134fb7459b,2c70d28295b38060692881c7824df602ade6c4cb,Yossi Gottlieb,yossigo@gmail.com,Wed Nov 22 15:09:30 2017 +0200,1511356170,Nested MULTI/EXEC may replicate in different cases.For example:n1. A module command called within a MULTI section.n2. A Lua script with replicate_commands() called within a MULTI section.n3. A module command called from a Lua script in the above context.n,10.0,0.0,"src/module.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,14.0,3207.5,292.0,87.86906828703705,41.5,1.011992188658657,41.0,None,False,,
57bd8feb8d81064cd53a7f124e7509134fb7459b 2c70d28295b38060692881c7824df602ade6c4cb,ada206559db76b2103c446c2691cb06fbc8c5d31,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 23 13:38:43 2017 +0100,1511440723,Merge pull request #4467 from yossigo/fix-nested-multiNested MULTI/EXEC may replicate in different cases.,,,,,,,,,,,,,,,Merge,False,,
ada206559db76b2103c446c2691cb06fbc8c5d31,de914ede9385c2886770ac462564be1a659b56aa,antirez,antirez@gmail.com,Thu Nov 23 13:05:00 2017 +0100,1511438700,Modules: fix for scripting replication of modules commands.See issue #4466 / #4467.n,9.0,7.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.8960382325345575,14.0,3951.0,258.0,3.36765625,10050.5,1.5976816248813948,5137.0,None,False,,
de914ede9385c2886770ac462564be1a659b56aa,adf2701cc95085a4a9980da7b7367b1836c5a0f2,Oran Agra,oran@redislabs.com,Thu Nov 23 16:42:15 2017 +0200,1511448135,"fix string to double conversion, stopped parsing on 0 even if the string has more data.getLongLongFromObject calls string2ll which has this line:n/* Return if not all bytes were used. */nso if you pass an sds with 3 characters 101 it will fail.nnbut getLongDoubleFromObject calls strtold, and considers it ok if eptr[0]==`0`ni.e. if the end of the string found by strtold ends with null terminatornn127.0.0.1:6379> set a 1nOKn127.0.0.1:6379> setrange a 2 2n(integer) 3n127.0.0.1:6379> get an1u00002n127.0.0.1:6379> incrbyfloat a 2n3n127.0.0.1:6379> get an3n",9.0,2.0,"src/object.c,CAS_DELIMITER,tests/unit/type/incr.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9456603046006402,13.0,656.5,115.0,508.61962962962957,31.5,1.0337728320614206,5.0,Corrective,True,True,"[""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
de914ede9385c2886770ac462564be1a659b56aa adf2701cc95085a4a9980da7b7367b1836c5a0f2,58ac57f6651c1b3c8223cf04fe86a2c51aef1bc7,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 24 08:59:23 2017 +0100,1511510363,"Merge pull request #4470 from oranagra/fix_string_to_doublefix string to double conversion, stopped parsing on 0 u00e2u0080u00a6",,,,,,,,,,,,,,,Merge,False,,
58ac57f6651c1b3c8223cf04fe86a2c51aef1bc7 6dffc1b7a33f1fd4fa1ff0368933ed575bca5606,f739c27229b4b20d809e5453864748f2bd2c4d5e,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 24 09:37:06 2017 +0100,1511512626,Merge pull request #4344 from soloestoy/fix-module-name-conflictFix module name conflict,,,,,,,,,,,,,,,Merge,False,,
f739c27229b4b20d809e5453864748f2bd2c4d5e ea2e51c630f972b23d3557f6369b13d983c12f17,9d86ae4597c37b33cd0fa2fbc4d80f69ace6b157,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 24 10:56:18 2017 +0100,1511517378,Merge pull request #4412 from soloestoy/bugfix-psync2PSYNC2: safe free backlog when reach the time limit and others,,,,,,,,,,,,,,,Merge,False,,
9d86ae4597c37b33cd0fa2fbc4d80f69ace6b157,4d063bb6bae5db69cef2ef9677b5662d64fbed4b,antirez,antirez@gmail.com,Fri Nov 24 11:08:22 2017 +0100,1511518102,PSYNC2: reorganize comments related to recent fixes.Related to PR #4412 and issue #4407.n,24.0,26.0,"src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,0.9953784388202258,14.0,2371.5,403.0,21.409496527777776,10052.5,1.036937235087565,5139.0,None,False,True,"[""3d07ed983e8bc55e7d066558de0244bc77dbeba3""]"
4d063bb6bae5db69cef2ef9677b5662d64fbed4b,7229fa8d6d8acdedf0383de226b9b91a7d80197d,antirez,antirez@gmail.com,Fri Nov 24 13:29:54 2017 +0100,1511526594,Modules: fix memory leak in RM_IsModuleNameBusy().,3.0,7.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4029.0,125.0,1.0172916666666667,10054.0,1.9830022527134958,5140.0,None,False,,
7229fa8d6d8acdedf0383de226b9b91a7d80197d 7a808fd8a7122fbc848767ff97de7f471a158cdb,c508cb67939ac7c3e8ee5d1bcad3e8b5ab773081,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 24 18:21:35 2017 +0100,1511544095,Merge pull request #4452 from soloestoy/expire-latencyexpire & latency: fix the missing latency records generated by expire,,,,,,,,,,,,,,,Merge,False,,
c508cb67939ac7c3e8ee5d1bcad3e8b5ab773081,dc2df135b34344446b87600e1204b11e1fb8fff5,antirez,antirez@gmail.com,Fri Nov 24 18:33:31 2017 +0100,1511544811,Test: regression test for latency expire events logging bug.Regression for #4452.n,14.0,0.0,"tests/unit/latency-monitor.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,50.0,1.0,1233.1317476851852,10055.0,1.000810943357737,735.0,Preventative,False,,
57bd8feb8d81064cd53a7f124e7509134fb7459b,b28fb3d7530f7d682223e96ed88045f11dfef989,Itamar Haber,itamar@redislabs.com,Fri Nov 24 19:58:37 2017 +0200,1511546317,"Prevents `OBJECT freq` with `noeviction`When maxmemory is set to noeviction, idletime is implicitly kept. This renders access frequency nonsensical.n",2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1166.0,115.0,1.1363657407407408,18.0,1.879998370373388,16.0,None,False,,
b28fb3d7530f7d682223e96ed88045f11dfef989,02d38f6b514400372089219618ee0b1bc36c7431,Itamar Haber,itamar@redislabs.com,Fri Nov 24 19:59:05 2017 +0200,1511546345,Adds `OBJECT help`,18.0,3.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1166.0,116.0,0.00032407407407407406,19.0,3086.714285714286,17.0,Feature Addition,False,,
dc2df135b34344446b87600e1204b11e1fb8fff5,1c082200224b91c571c7b231b9e4a5e3487dda57,Itamar Haber,itamar@redislabs.com,Sat Jul 23 11:41:20 2016 -0700,1469299280,Adds -u <uri> option to redis-cli.,89.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2750.0,192.0,-375.5741203703704,20.0,0.9973374097261712,18.0,Feature Addition,False,True,"[""cd02c5944f178ac8252dce2170990768b428dcf3""]"
1c082200224b91c571c7b231b9e4a5e3487dda57 02d38f6b514400372089219618ee0b1bc36c7431,29252391c4856e500277bcd84ae0f57b8e6ca661,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 27 12:41:02 2017 +0100,1511782862,Merge pull request #4472 from itamarhaber/object_patchA minor fix and `help` subcommand for `OBJECT`,,,,,,,,,,,,,,,Merge,False,,
29252391c4856e500277bcd84ae0f57b8e6ca661,b412c544fd6d5efd1e3986383ef6bef7775fe48f,antirez,antirez@gmail.com,Mon Nov 27 13:16:07 2017 +0100,1511784967,Fix entry command table entry for OBJECT for HELP option.After #4472 the command may have just 2 arguments.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3875.0,135.0,4.007719907407409,10056.0,1.2495184351959614,5141.0,Corrective,True,,
b412c544fd6d5efd1e3986383ef6bef7775fe48f,75fa7879e6b4408247db6b7eba3def64c00d4f9a,antirez,antirez@gmail.com,Mon Nov 27 18:09:05 2017 +0100,1511802545,Improve OBJECT HELP descriptions.See #4472.n,2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1181.0,117.0,2.9652777777777777,10057.0,1.3372365339578454,5142.0,None,False,,
75fa7879e6b4408247db6b7eba3def64c00d4f9a,dfc42ec4471ea3f90c73c123b655e4a10c0e922e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Oct 13 10:52:10 2017 +0800,1507863130,LFU: fix the missing of config get and rewrite,6.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2101.0,206.0,90.02168981481482,16.0,1.0111084340013736,16.0,None,False,,
dfc42ec4471ea3f90c73c123b655e4a10c0e922e,53cea97204ebc8d863ca99db4c9705ce0f87892f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Oct 13 11:09:48 2017 +0800,1507864188,LFU: change lfu* parameters to int,3.0,3.0,"src/evict.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,14.0,1294.5,149.0,102.23948495370372,17.5,1.0069204192343393,18.0,None,False,,
53cea97204ebc8d863ca99db4c9705ce0f87892f,583c31472577fb8175e17ee0ce243972f4dd8425,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sun Oct 15 20:17:55 2017 +0800,1508069875,"LFU: do some changes about LFU to find hotkeysFirstly, use access time to replace the decreas time of LFU.nFor function LFUDecrAndReturn,nit should only try to get decremented counter,nnot update LFU fields, we will update it in an explicit way.nAnd we will times halve the counter according to the times ofnelapsed time than server.lfu_decay_time.nEverytime a key is accessed, we should update the LFUnincluding update access time, and increment the counter afterncall function LFUDecrAndReturn.nIf a key is overwritten, the LFU should be also updated.nThen we can use `OBJECT freq` command to get a key's frequence,nand LFUDecrAndReturn should be called in `OBJECT freq` commandnin case of the key has not been accessed for a long time,nbecause we update the access time only when the key is read ornoverwritten.n",39.0,19.0,"src/db.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.6108262860903892,14.0,1302.0,456.0,-3.2924855324074067,20.5,0.9838746386897768,22.0,None,False,,
583c31472577fb8175e17ee0ce243972f4dd8425,9f131c9a895fac9418cceb3a340627f2dac2162a,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Oct 19 14:04:39 2017 +0800,1508393079,LFU: add hotkeys option to redis-cli,135.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2839.0,193.0,452.47452546296296,23.0,1.0022100691723514,23.0,None,False,,
9f131c9a895fac9418cceb3a340627f2dac2162a,06ca9d683920da19ad53532f8cd55b54584027bc,antirez,antirez@gmail.com,Mon Nov 27 19:04:58 2017 +0100,1511805898,LFU: Fix LFUDecrAndReturn() to just decrement.Splitting the popularity in half actually just needs decrementing thencounter because the counter is logarithmic.n,3.0,13.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,572.0,18.0,43.241006944444436,10058.0,1.023126195957573,5143.0,None,False,,
75fa7879e6b4408247db6b7eba3def64c00d4f9a,8c7f90e91e1e6324db8a1e9ca20e3dc95ce049d0,Itamar Haber,itamar@redislabs.com,Tue Nov 28 18:18:45 2017 +0200,1511885925,Standardizes arity handling of DEBUG,1.0,6.0,"src/debug.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,14.0,2544.5,274.0,35.303362268518526,21.5,1.014282122932689,20.0,Corrective,True,,
75fa7879e6b4408247db6b7eba3def64c00d4f9a 62689ef0cf3c805b100ff5260485368e1c9b683c,bf71b120f10edbefb91fa1c12c9ab1e264e56289,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 17:23:48 2017 +0100,1511886228,Merge pull request #4451 from devnexen/minor_build_fixesFix undefined behavior constant defined.,,,,,,,,,,,,,,,Merge,False,,
bf71b120f10edbefb91fa1c12c9ab1e264e56289 6eb996540c662832370ddaac25484c4cbbca4e7a,a13106e0014644d71bf3aaa577a4a0cce87bf6ed,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 17:33:23 2017 +0100,1511886803,Merge pull request #4374 from rouzier/patch-1Fix file descriptor leak and error handling,,,,,,,,,,,,,,,Merge,False,,
a13106e0014644d71bf3aaa577a4a0cce87bf6ed 6b9f02ac1263b21675ecd4a05cc12d3da41e8a0f,c3806f5b7238b1e11e4b48b8bfb22a8dd0d36c1f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:08:32 2017 +0100,1511888912,Merge pull request #4215 from lamby/correct-faield-spellingCorrect spelling of faield.,,,,,,,,,,,,,,,Merge,False,,
a13106e0014644d71bf3aaa577a4a0cce87bf6ed,c44732ac58befabf0d6f72f2dae0005ffef7d3c4,antirez,antirez@gmail.com,Tue Nov 28 18:25:14 2017 +0100,1511889914,"adlist: fix listJoin() in the case the second list is empty.See #4192, the original PR removed lines of code that are actuallynneeded, so thanks to @chunqiulfq for reporting the problem, but mergingnsolution from @jeesyn after checking, together with @artix75, that thenlogic covers all the cases.n",1.0,1.0,"src/adlist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,362.0,12.0,145.23464120370372,10059.0,1.0068854096495987,5144.0,None,False,,
c44732ac58befabf0d6f72f2dae0005ffef7d3c4 c3806f5b7238b1e11e4b48b8bfb22a8dd0d36c1f,aeee039a87e5515e8bb68836451c69b0d7839523,antirez,antirez@gmail.com,Tue Nov 28 18:27:35 2017 +0100,1511890055,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
aeee039a87e5515e8bb68836451c69b0d7839523,851e9fc48b5155de9fb47f0185b3523b59373a97,antirez,antirez@gmail.com,Tue Nov 28 18:38:49 2017 +0100,1511890729,t_hash.c: clarify calling two times the same function.,2.0,2.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,825.0,56.0,152.08336805555555,10060.0,1.006575340964534,5145.0,None,False,,
851e9fc48b5155de9fb47f0185b3523b59373a97 0c6ea46f2bfc0d2ee6ef7b2e5e04ce6502d9fa27,ad171f5ce0762efa0e1de082f8431c892eaab68f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:39:43 2017 +0100,1511890783,Merge pull request #4176 from KrauseFx/patch-1Update link to https and use inline link,,,,,,,,,,,,,,,Merge,False,,
ad171f5ce0762efa0e1de082f8431c892eaab68f f06f10e66bfe5afdb013798e02c6aec7937435a5,4e55df4b5c1be4ecf30e013692ac327b5f3471e9,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:40:02 2017 +0100,1511890802,Merge pull request #4172 from TehWebby/patch-3Fix typo,,,,,,,,,,,,,,,Merge,False,,
4e55df4b5c1be4ecf30e013692ac327b5f3471e9 2e6f28500941d7a6f24f3831e9cabcb576d290fd,3508b9c44073e9fba47a57573e657471d13bd6dc,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:40:43 2017 +0100,1511890843,Merge pull request #4170 from TehWebby/patch-2Fix typo,,,,,,,,,,,,,,,Merge,False,,
3508b9c44073e9fba47a57573e657471d13bd6dc 00954f4d48f1e2fa42dc2a4ae6090ec083996c11,26826329f530d068096796b8b972106f266eb738,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:41:28 2017 +0100,1511890888,Merge pull request #4167 from charpty/wip-redisclic-typo2redis-cli.c typo: Requets -> Requests.,,,,,,,,,,,,,,,Merge,False,,
26826329f530d068096796b8b972106f266eb738 005d9fa8615bfffb550c62f94a88056e06858e74,923502a70b08a9635e857bd7f09c1601bd59a5c4,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:41:51 2017 +0100,1511890911,Merge pull request #4166 from charpty/wip-redisclic-typoredis-cli.c typo: helpe -> helper.,,,,,,,,,,,,,,,Merge,False,,
923502a70b08a9635e857bd7f09c1601bd59a5c4 22bcee5178c68255d1ba7da908405161c4ffbdf5,b998e2035c1de289779aa4ca875c6bdd4148be09,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:43:45 2017 +0100,1511891025,Merge pull request #4165 from zyegfryed/patch-1Fix some typos,,,,,,,,,,,,,,,Merge,False,,
b998e2035c1de289779aa4ca875c6bdd4148be09 447b373fc9d8d7cd3f66de42f7a809fb40941bfc,565e139a5631a777254e222d1c50ea6d696e1a8e,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 28 18:44:11 2017 +0100,1511891051,Merge pull request #4200 from jeesyn/fix_typofix a typo,,,,,,,,,,,,,,,Merge,False,,
29252391c4856e500277bcd84ae0f57b8e6ca661,59d52f7fabb48c3a6ebaac869ce3d6e5f3dc704f,Itamar Haber,itamar@redislabs.com,Mon Nov 27 17:57:44 2017 +0200,1511798264,"Standardizes the 'help' subcommandThis adds a new `addReplyHelp` helper that's used by commandsnwhen returning a help text. The following commands have beenntouched: DEBUG, OBJECT, COMMAND, PUBSUB, SCRIPT and SLOWLOG.nnWIPnnFix entry command table entry for OBJECT for HELP option.nnAfter #4472 the command may have just 2 arguments.nnImprove OBJECT HELP descriptions.nnSee #4472.nnWIP 2nnWIP 3n",112.0,69.0,"src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",8.0,1.0,1.0,2.5820784811438564,14.0,1659.125,1003.0,143.77336516203704,26.5,0.8789768619638577,28.0,Feature Addition,False,,
59d52f7fabb48c3a6ebaac869ce3d6e5f3dc704f 75fa7879e6b4408247db6b7eba3def64c00d4f9a,51d42c88a66edbb5b923fa68c1e78fa11f8bc3c3,Itamar Haber,itamar@redislabs.com,Tue Nov 28 21:28:40 2017 +0200,1511897320,Merge branch 'unstable' into help_subcommands,,,,,,,,,,,,,,,Merge,False,,
565e139a5631a777254e222d1c50ea6d696e1a8e 06ca9d683920da19ad53532f8cd55b54584027bc,2785d6caa064fc428e1d20c54d60ac4fc23147b5,antirez,antirez@gmail.com,Wed Nov 29 17:16:13 2017 +0100,1511972173,Merge branch 'lfu-fixes' into unstable,,,,,,,,,,,,,,,Merge,False,,
51d42c88a66edbb5b923fa68c1e78fa11f8bc3c3,0752a834f9311194d0d409d24ebee7349aa6c1a0,Itamar Haber,itamar@redislabs.com,Thu Nov 30 00:30:30 2017 +0200,1511994630,Check arity in SLOWLOG before accessing arg,1.0,1.0,"src/slowlog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,192.0,15.0,2.2727546296296297,31.0,1.4399947037674543,29.0,None,False,,
75fa7879e6b4408247db6b7eba3def64c00d4f9a,2d73cf236725e0f37394eed20640670a4888d426,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 10:22:12 2017 +0800,1512008532,aof: fix the short write,22.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1584.0,162.0,160.72350694444444,24.0,1.0062218652331028,24.0,None,False,,
2d73cf236725e0f37394eed20640670a4888d426,1b5f56d0428a8ea7cea4e6d501dbece7ff987578,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 10:27:12 2017 +0800,1512008832,aof: cast sdslen to ssize_t,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1605.0,163.0,0.003472222222222222,25.0,289.0,25.0,None,False,,
75fa7879e6b4408247db6b7eba3def64c00d4f9a,43be967690d7b778cf829540b504a9662177511d,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 18:11:05 2017 +0800,1512036665,networking: optimize unlinkClient() in freeClient(),12.0,4.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.6685644431995964,14.0,2260.6666666666665,606.0,3.840142746913581,27.0,1.1877856954838508,28.0,None,False,,
2785d6caa064fc428e1d20c54d60ac4fc23147b5,d8f8701032b8f87b998129e03dddf992baa803d2,antirez,antirez@gmail.com,Thu Nov 30 18:08:21 2017 +0100,1512061701,Be more verbose when DEBUG RESTART fails.,16.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3885.0,138.0,3.049039351851852,10061.0,1.3279721527348094,5146.0,Corrective,True,,
d8f8701032b8f87b998129e03dddf992baa803d2,3b9be93fdab81e27d68814aa794807897055af0d,antirez,antirez@gmail.com,Thu Nov 30 18:30:06 2017 +0100,1512063006,Prevent corruption of server.executable after DEBUG RESTART.Doing the following ended with a broken server.executable:nn1. Start Redis with src/redis-servern2. Send CONFIG SET DIR /tmp/n3. Send DEBUG RESTARTnnAt this point we called execve with an argv[0] that is no longer relatednto the new path. So after the restart the absolute path of thenexecutable is recomputed in the wrong way. With this fix we pass thenabsolute path already computed as argv[0].n,2.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3898.0,139.0,0.015104166666666669,10062.0,67.20689655172414,5147.0,Corrective,True,,
3b9be93fdab81e27d68814aa794807897055af0d,6fb04d46374d9b79452a9e66786a16974077248b,antirez,antirez@gmail.com,Thu Nov 30 18:37:07 2017 +0100,1512063427,Regression test: Slave restart with EVALSHA in backlog issue #4483.,64.0,1.0,"tests/integration/psync2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,182.0,5.0,366.3068865740741,10063.0,1.0027299514059171,736.0,Preventative,False,,
6fb04d46374d9b79452a9e66786a16974077248b,f11a7585a8498689e8fd1afbcab4fdc2ba38c38f,antirez,antirez@gmail.com,Wed Nov 29 15:09:07 2017 +0100,1511964547,"PSYNC2: Save Lua scripts state into RDB file.This is currently needed in order to fix #4483, but this can benuseful in other contexts, so maybe later we may want to remove thenconditionals and always save/load scripts.nnNote that we are using the lua AUX field here, in order to guaranteenbackward compatibility of the RDB file. The unknown AUX fields must bendiscarded by past versions of Redis.n",48.0,0.0,"src/rdb.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.14609425012013633,14.0,2031.0,338.0,2.1662442129629627,10064.5,1.2121715563751685,5149.0,None,False,True,"[""65a9740fa880a8e5b4640037a3670f8a2f33080b""]"
f11a7585a8498689e8fd1afbcab4fdc2ba38c38f,28dfdca7335721de53ab296d80f005d7a7d2aa8c,antirez,antirez@gmail.com,Wed Nov 29 16:21:14 2017 +0100,1511968874,PSYNC2: luaCreateFunction() should handle NULL client parameter.See #4483. This is needed because luaCreateFunction() is now callednfrom RDB loading code outside a client context.n,10.0,5.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2410.0,171.0,1.9746527777777776,10066.0,1.506418146650255,5150.0,None,False,,
28dfdca7335721de53ab296d80f005d7a7d2aa8c,452ad2e928524cfe42856e869effd2d8b37ae280,antirez,antirez@gmail.com,Wed Nov 29 16:38:16 2017 +0100,1511969896,"PSYNC2: just store script bodies into RDB.Related to #4483. As suggested by @soloestoy, we can retrieve the SHA1nfrom the body. Given that in the new implementation using AUX fields wenended copying around a lot to create new objects and strings, extremizensuch concept and trade CPU for space inside the RDB file.n",19.0,30.0,"src/rdb.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.8886466698980794,14.0,2249.5,374.0,0.03686921296296297,10067.5,15.857001100313196,5152.0,None,False,True,"[""65a9740fa880a8e5b4640037a3670f8a2f33080b""]"
452ad2e928524cfe42856e869effd2d8b37ae280,045d65c3af460a71d2b89b84f5e0b85d98320a77,antirez,antirez@gmail.com,Wed Nov 29 17:11:46 2017 +0100,1511971906,PSYNC2: Fix off by one buffer size in luaCreateFunction().,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2430.0,173.0,0.02326388888888889,10069.0,43.98507462686568,5153.0,None,False,,
045d65c3af460a71d2b89b84f5e0b85d98320a77,79866a6361829ed0602dedff9cb378c66977227a,antirez,antirez@gmail.com,Wed Aug 30 12:40:27 2017 +0200,1504089627,Streams: 12 commits squashed into the initial Streams implementation.,1323.0,10.0,"src/Makefile,CAS_DELIMITER,src/listpack.c,CAS_DELIMITER,src/listpack.h,CAS_DELIMITER,src/listpack_malloc.h,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",12.0,1.0,1.0,1.674831002608656,14.0,786.8333333333335,582.0,3.9031462191358037,10075.5,1.0117884847037752,5165.0,None,False,True,"[""3c20b3fc2464cec5b79e4e23037794be5826f536"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""f06e8c331c98e8b307af94a36cd45948a963956b"", ""6e11ef30e02932917ba53c72cf66681f42ea487d"", ""04233097688ee35d451c6f5cd64c28e57ca81b53"", ""b12d2f65d660b4139b322af90b6ef60ed267210b""]"
79866a6361829ed0602dedff9cb378c66977227a,100d43c1ac48e8e949bd622b302ba309ae498752,antirez,antirez@gmail.com,Tue Sep 5 12:13:16 2017 +0200,1504606396,Streams: assign value of 6 to OBJ_STREAM + some refactoring.,17.0,10.0,"src/rdb.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,1.4618278953766808,14.0,854.6666666666665,171.0,5.981122685185183,10083.0,1.1021733114795973,5168.0,None,False,,
100d43c1ac48e8e949bd622b302ba309ae498752,485014cc74d05436afc8257c5d7b05370410adc7,antirez,antirez@gmail.com,Tue Sep 5 13:14:13 2017 +0200,1504610053,Streams: RDB saving.,29.0,2.0,"src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",5.0,1.0,1.0,1.3504177270172832,14.0,872.6,213.0,-13.414138888888884,10087.0,1.041108762046116,5173.0,None,False,,
485014cc74d05436afc8257c5d7b05370410adc7,edd70c1993b79d85bfc2812b0bf4bf4771ff40ed,antirez,antirez@gmail.com,Tue Sep 5 16:24:11 2017 +0200,1504621451,"Streams: RDB loading. RDB saving modified.After a few attempts it looked quite saner to just add the last item IDnat the end of the serialized listpacks, instead of scanning the lastnlistpack loaded from head to tail just to fetch it. It's a disk space VSnCPU-and-simplicity tradeoff basically.n",40.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2080.0,204.0,0.1319212962962963,10090.0,8.580277241621339,5174.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
edd70c1993b79d85bfc2812b0bf4bf4771ff40ed,cd18f06e9c674646e17b35125358df6eb11954dc,antirez,antirez@gmail.com,Wed Sep 6 12:00:03 2017 +0200,1504692003,Streams: change listpack allocator to zmalloc.,4.0,3.0,"src/listpack_malloc.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,44.0,1.0,6.9719444444444445,10091.0,1.1434320092433958,5175.0,None,False,,
cd18f06e9c674646e17b35125358df6eb11954dc,98d184db12957d0558519022ad2205c3ac740a5a,antirez,antirez@gmail.com,Wed Sep 6 12:00:18 2017 +0200,1504692018,Streams: Save stream->length in RDB.,7.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2120.0,205.0,0.8167476851851851,10092.0,2.2243683308061843,5176.0,None,False,,
98d184db12957d0558519022ad2205c3ac740a5a,ec9bbe96bf47ae1f104c51cc6078eb72ca43cef0,antirez,antirez@gmail.com,Wed Sep 6 12:03:17 2017 +0200,1504692197,Streams: XLEN command.,11.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.8658566174572236,14.0,2105.6666666666665,284.0,2.9726658950617284,10094.0,1.1270107792669073,5179.0,None,False,,
ec9bbe96bf47ae1f104c51cc6078eb72ca43cef0,439120c62076718e8f7e7e602c623febaec6f04a,antirez,antirez@gmail.com,Wed Sep 6 13:11:47 2017 +0200,1504696307,Streams: implement stream object release.,25.0,5.0,"src/object.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",5.0,1.0,1.0,1.6309595631140104,14.0,1104.2,275.0,1.822703703703704,10098.0,1.1196032537908605,5184.0,None,False,,
439120c62076718e8f7e7e602c623febaec6f04a,4a377cecd82e21307a887bb5f9fba55d79044bb8,antirez,antirez@gmail.com,Wed Sep 6 15:43:28 2017 +0200,1504705408,Streams: initial work to use blocking lists logic for streams XREAD.,234.0,215.0,"src/blocked.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",6.0,1.0,1.0,1.4741514501361332,14.0,1770.166666666667,831.0,108.89271412037034,10103.5,1.0036936866575896,5190.0,None,False,True,"[""89ad0ca566f222368f2346a539dff0a057985a83""]"
4a377cecd82e21307a887bb5f9fba55d79044bb8,f80dfbf464e2a2de00cb8de5ed064f302a7a7c82,antirez,antirez@gmail.com,Wed Sep 6 17:50:11 2017 +0200,1504713011,Streams: more internal preparation for blocking XREAD.,28.0,12.0,"src/blocked.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,0.7475846798245741,14.0,1072.3333333333333,237.0,0.08799768518518518,10108.0,7.944627120873339,5193.0,None,False,,
f80dfbf464e2a2de00cb8de5ed064f302a7a7c82,4086dff477cc3d979d39c6c4ba9457575fc67d3e,antirez,antirez@gmail.com,Thu Sep 7 09:30:50 2017 +0200,1504769450,Streams: augment client.bpop with XREAD specific fields.,18.0,0.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,1.747167197306934,14.0,1230.0,436.0,0.7235619212962964,10111.5,1.7704627736509615,5197.0,None,False,,
4086dff477cc3d979d39c6c4ba9457575fc67d3e,e65b4825f0216f526b71f41818a494b0853ce715,antirez,antirez@gmail.com,Thu Sep 7 16:48:20 2017 +0200,1504795700,Streams: XREAD arguments parsing.,72.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,402.0,6.0,0.3038194444444444,10114.0,4.291428571428572,5198.0,None,False,,
e65b4825f0216f526b71f41818a494b0853ce715,fa61720d30b6c3088329fd5921fd8173bcd0a368,antirez,antirez@gmail.com,Thu Sep 7 17:45:34 2017 +0200,1504799134,"Streams: XREAD, first draft. Handling of blocked clients still missing.",46.0,10.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,474.0,7.0,0.03974537037037037,10115.0,26.16016307513105,5199.0,None,False,,
fa61720d30b6c3088329fd5921fd8173bcd0a368,110041825c3af14feff03f43d12e3683f64cdc48,antirez,antirez@gmail.com,Fri Sep 8 11:40:16 2017 +0200,1504863616,Streams: XREAD get-keys method.,31.0,0.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.547553154980007,14.0,2469.333333333333,477.0,1.5840354938271606,10117.0,1.3432025841319353,5202.0,None,False,True,"[""1fcf2737a63cfa0fba4ebc0802fff8e237855ddf"", ""fe56c6740520b6fef2646d757896861c49faee0a""]"
110041825c3af14feff03f43d12e3683f64cdc48,a7d898334afea5593a67a8633a0c8b7e7cb8ab62,antirez,antirez@gmail.com,Fri Sep 8 11:51:53 2017 +0200,1504864313,Streams: XREAD get-key method fixed.,6.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1477.0,190.0,0.008067129629629629,10119.0,124.95982783357245,5203.0,None,False,True,"[""10dedc25868c08bb1bf5da8252c8b11ad2ab370d""]"
a7d898334afea5593a67a8633a0c8b7e7cb8ab62,6a1c92d52dd7f3928795de910dc848f71dae5b3c,antirez,antirez@gmail.com,Fri Sep 8 12:09:02 2017 +0200,1504865342,Streams: synchronous xread fixes and improvements.,22.0,7.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,510.0,8.0,0.7662962962962963,10120.0,2.304978250362494,5204.0,None,False,,
6a1c92d52dd7f3928795de910dc848f71dae5b3c,0adb43b68febc4dfb2acc6818de36504a63162e4,antirez,antirez@gmail.com,Fri Sep 8 12:25:06 2017 +0200,1504866306,Streams: XREAD ability to block fixed.,4.0,5.0,"src/blocked.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.9910760598382222,14.0,477.5,29.0,0.5660879629629629,10121.5,1.887650440965995,5206.0,None,False,,
0adb43b68febc4dfb2acc6818de36504a63162e4,2cacdcd6f8ee0af32618ceff2d303acaa61645ab,antirez,antirez@gmail.com,Fri Sep 8 16:57:32 2017 +0200,1504882652,Streams: XREAD related code to serve blocked clients.,50.0,1.0,"src/blocked.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.1392329990550989,14.0,1238.5,167.0,0.2047569444444444,10123.5,4.863808213352009,5208.0,None,False,True,"[""34bd44187ae4a5947995abe8f8e26a5dacb3159b"", ""ce03d6833213901c95e0b5961b555744d3815bd2""]"
2cacdcd6f8ee0af32618ceff2d303acaa61645ab,b5be5093fecd02f4ee537af5ad473899bb6d7a61,antirez,antirez@gmail.com,Fri Sep 8 20:48:28 2017 +0200,1504896508,"Streams: fix XREAD timeout handling, zero is valid.",2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,524.0,10.0,0.3495601851851852,10125.0,3.8607376994901,5209.0,None,False,,
b5be5093fecd02f4ee537af5ad473899bb6d7a61,6468cb2e825cf8258654f83e82324332e9879745,antirez,antirez@gmail.com,Sat Sep 9 11:10:59 2017 +0200,1504948259,"Streams: fix XREAD ready-key signaling.With lists we need to signal only on key creation, but streams cannprovide data to clients listening at every new item added.nTo make this slightly more efficient we now track different classes ofnblocked clients to avoid signaling keys when there is nobody listening.nA typical case is when the stream is used as a time series DB andnaccessed only by range with XRANGE.n",14.0,7.0,"src/blocked.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",5.0,1.0,1.0,2.2125823032160294,14.0,1688.8,515.0,0.8137824074074074,10128.0,1.5595062397940085,5214.0,None,False,,
6468cb2e825cf8258654f83e82324332e9879745,c128190026efd36e8b472d8874f7f54c79ba3e06,antirez,antirez@gmail.com,Mon Sep 11 11:06:53 2017 +0200,1505120813,Streams: fix handleClientsBlockedOnKeys() access to invalid ID.,4.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,480.0,23.0,1.9971527777777776,10131.0,1.500712820334504,5215.0,None,False,True,"[""34bd44187ae4a5947995abe8f8e26a5dacb3159b""]"
c128190026efd36e8b472d8874f7f54c79ba3e06,db89f7474d3f4c784bfd8757b2bd3321e3efd9a1,antirez,antirez@gmail.com,Mon Sep 11 11:20:36 2017 +0200,1505121636,"Streams: When XREAD blocks without COUNT, set a default one.A client may lose a lot of time between invocations of blocking XREAD,nfor example because it is processing the messages or for any otherncause. When it returns back, it may provide a low enough message ID thatnthe server will block to send an unreasonable number of messages in ansingle call. For this reason we set a COUNT when the client is blockednwith XREAD calls, even if no COUNT is given. This is arbitrarily set ton1000 because it's enough to avoid slowing down the reception of manynmessages, but low enough to avoid to block.n",6.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,526.0,12.0,2.0066782407407406,10132.0,1.4983359961240534,5216.0,None,False,,
db89f7474d3f4c784bfd8757b2bd3321e3efd9a1,19b06935d59a39021330670776eb6b79002599c8,antirez,antirez@gmail.com,Mon Sep 11 18:02:57 2017 +0200,1505145777,"Streams: fix XADD API and keyspace notifications.XADD was suboptimal in the first incarnation of the command, not beingnable to accept an ID (very useufl for replication), nor options fornhaving capped streams.nnThe keyspace notification for streams was not implemented.n",75.0,12.0,"src/notify.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,0.5290453913297346,14.0,1657.25,316.0,7.344126157407408,10134.5,1.0366203675829233,5220.0,None,False,True,"[""07125b8d22d268b85281ce0c588d72caf7680cd4"", ""48d8b3d8ac8de4db033d8836986065b8a41e01dc"", ""b12d2f65d660b4139b322af90b6ef60ed267210b""]"
19b06935d59a39021330670776eb6b79002599c8,3a0b78bc52e30a8599203ef501ea548b96f08b89,antirez,antirez@gmail.com,Tue Sep 12 10:48:27 2017 +0200,1505206107,Streams: rewrite XADD ID argument for AOF/slaves.,10.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,592.0,14.0,0.6982638888888889,10137.0,2.432123321730482,5221.0,None,False,,
3a0b78bc52e30a8599203ef501ea548b96f08b89,94af55c5ea55890ed5e3afdb9bb802d88d61eac7,antirez,antirez@gmail.com,Tue Sep 12 10:54:20 2017 +0200,1505206460,Streams: fix memory leak in freeStream().,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,602.0,15.0,0.004085648148148147,10138.0,245.75920679886684,5222.0,None,False,,
94af55c5ea55890ed5e3afdb9bb802d88d61eac7,1a603e1a87d88500a9723460dcf60c9b57dc99d7,antirez,antirez@gmail.com,Tue Sep 12 16:19:26 2017 +0200,1505225966,Streams: fix bug in XREAD last received ID processing.,3.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,603.0,16.0,0.2257638888888889,10139.0,5.429406336511844,5223.0,None,False,,
1a603e1a87d88500a9723460dcf60c9b57dc99d7,b1ec3336337eabbd28b90832cebcaac4ffb69410,antirez,antirez@gmail.com,Wed Sep 13 18:05:34 2017 +0200,1505318734,"Streams: stream iteration refactoring, WIP 1.",114.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,604.0,17.0,1.0737037037037036,10140.0,1.93135563987582,5224.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""48d8b3d8ac8de4db033d8836986065b8a41e01dc"", ""3ccdcbc0880e4f6a6e577bed29826064d03c9509""]"
b1ec3336337eabbd28b90832cebcaac4ffb69410,a58733cacf45259b3e18fc68724950aceb86831d,antirez,antirez@gmail.com,Thu Sep 14 14:23:27 2017 +0200,1505391807,"Streams: stream iteration refactoring, WIP 2.",19.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,718.0,18.0,0.8457523148148148,10141.0,2.182379264571045,5225.0,None,False,,
a58733cacf45259b3e18fc68724950aceb86831d,9ed40f0fc35ce0050bd362a35c4f3f7fea189fb5,antirez,antirez@gmail.com,Thu Sep 14 14:46:31 2017 +0200,1505393191,Streams: implement streamReplyWithRange() in terms of the iterator.,23.0,66.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,737.0,19.0,0.01601851851851852,10142.0,63.427745664739895,5226.0,None,False,,
9ed40f0fc35ce0050bd362a35c4f3f7fea189fb5,01ea018c4080e24b00d36e1cbf36c4d98b82ff40,antirez,antirez@gmail.com,Fri Sep 15 12:17:25 2017 +0200,1505470645,Streams: export iteration API.,31.0,24.0,"src/server.h,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,1.310444279854513,14.0,922.3333333333336,171.0,4.872353395061729,10144.0,1.1357501606125782,5229.0,None,False,,
01ea018c4080e24b00d36e1cbf36c4d98b82ff40,26d4f8e3ec74811076e8a71cd384ea89b10e0c13,antirez,antirez@gmail.com,Fri Sep 15 12:37:04 2017 +0200,1505471824,Streams: AOF rewriting + minor iterator improvements.,42.0,5.0,"src/aof.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.8786744932173093,14.0,1140.0,185.0,-37.82308449074074,10146.5,0.9867817520094908,5231.0,None,False,True,"[""3ccdcbc0880e4f6a6e577bed29826064d03c9509""]"
26d4f8e3ec74811076e8a71cd384ea89b10e0c13,7a41b402c1a5caae30dcd234d3d01c7f76ca5757,antirez,antirez@gmail.com,Fri Sep 15 15:54:18 2017 +0200,1505483658,Streams: basic XADD tests.,43.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER,tests/unit/type/stream.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.15935006268563445,13.0,282.0,103.0,70.11013310185186,10148.5,1.0071316367246606,738.0,None,False,,
7a41b402c1a5caae30dcd234d3d01c7f76ca5757,fa707ca15477c5d5871668a7b2ca2040b992df48,antirez,antirez@gmail.com,Fri Sep 15 16:56:18 2017 +0200,1505487378,Streams: more advanced XADD and XRANGE tests.,43.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,42.0,1.0,0.04305555555555556,10150.0,24.22580645161291,739.0,None,False,,
fa707ca15477c5d5871668a7b2ca2040b992df48,eb1230c9990562da739f15913a795cf0d8f2f5af,antirez,antirez@gmail.com,Mon Sep 18 10:48:27 2017 +0200,1505724507,Streams: XRANGE fuzz testing.,52.0,1.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,85.0,2.0,2.744548611111111,10151.0,1.3643586402337968,740.0,None,False,,
eb1230c9990562da739f15913a795cf0d8f2f5af,ae9065d8080cff60efb97676de5f3bfb26c74285,antirez,antirez@gmail.com,Tue Sep 19 16:49:56 2017 +0200,1505832596,Streams: tests for blocking and non-blocking XREAD.,90.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,136.0,3.0,1.2510300925925926,10152.0,1.7993412835718714,741.0,None,False,,
ae9065d8080cff60efb97676de5f3bfb26c74285,8f00cf85a7ee93da987e8d0b899ada33f2a88505,antirez,antirez@gmail.com,Tue Sep 19 16:57:37 2017 +0200,1505833057,"Streams: fixed memory leaks when blocking again for same stream.blockForKeys() was not freeing the allocation holding the ID when thenkey was already found busy. Fortunately the unit test checked explicitlynfor blocking multiple times for the same key (copying a regression innthe blocking lists tests), so the bug was detected by the Redis test leaknchecker.n",4.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,483.0,24.0,8.243564814814814,10153.0,1.121306743194748,5232.0,None,False,,
8f00cf85a7ee93da987e8d0b899ada33f2a88505,3f2d7e277e1754a5a421948bfbd45b5725a05148,antirez,antirez@gmail.com,Wed Sep 27 17:41:32 2017 +0200,1506526892,"Streams: items compression implemented.The approach used is to set a fixed header at the start of everynlistpack blob (that contains many entries). The header contains anmaster ID and fields, that are initially just obtained from the firstnentry inserted in the listpack, so that the first enty is always wellncompressed. Later every new entry is checked against these fields, andnif it matches, the SAMEFIELD flag is set in the entry so that we know tonjust use the master entry flags. The IDs are always delta-encodednagainst the first entry. This approach avoids cascading effects in whichnentries are encoded depending on the previous entries, in order to avoidncomplexity and rewritings of the data when data is removed in the middlen(which is a planned feature).n",142.0,34.0,"src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.1863496838649942,14.0,366.0,25.0,12.218258101851852,10154.5,1.0613607062236925,5234.0,None,False,True,"[""48d8b3d8ac8de4db033d8836986065b8a41e01dc""]"
3f2d7e277e1754a5a421948bfbd45b5725a05148,7d0d9693c19b92c8ea60cef8ebaba4a456bd0f73,antirez,antirez@gmail.com,Wed Sep 27 23:04:31 2017 +0200,1506546271,Streams: modify tests to stress compression.,10.0,5.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,226.0,4.0,8.260127314814815,10156.0,1.1210635093004522,742.0,None,False,,
7d0d9693c19b92c8ea60cef8ebaba4a456bd0f73,cea421a0211ac75e27513a8c7371042da6c8f4d3,antirez,antirez@gmail.com,Wed Sep 27 23:12:43 2017 +0200,1506546763,Streams: specify better how the master enty works.,25.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,782.0,23.0,0.2299884259259259,10157.0,5.348044889537517,5235.0,None,False,,
cea421a0211ac75e27513a8c7371042da6c8f4d3,f24d3a7de05d213f702621186f31a4c227f366c6,antirez,antirez@gmail.com,Thu Sep 28 16:55:46 2017 +0200,1506610546,"Streams: delta encode IDs based on key. Add count + deleted fields.We used to have the master ID stored at the start of the listpack,nhowever using the key directly makes more sense in order to create anspace efficient representation: anyway the key at the radix tree is verynunlikely to change because of how the stream is implemented. Moreover onnnodes merging, to rewrite the merged listpacks is anyway the mostnsensible operation, and we can use the iterator and the append-to-streamnfunction in order to avoid re-implementing the code needed for merging.nnThis commit also adds two items at the start of the listpack: thennumber of valid items inside the listpack, and the number of itemsnmarked as deleted. This means that there is no need to scan a listpacknin order to understand if it's a good candidate for garbage collection,nif the ration between valid/deleted items triggers the GC.n",61.0,39.0,"src/rdb.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.8554508105601307,14.0,1466.0,230.0,11.471707175925927,10158.5,1.0443100091766264,5237.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""48d8b3d8ac8de4db033d8836986065b8a41e01dc""]"
f24d3a7de05d213f702621186f31a4c227f366c6,0c00fd7834215ec311a91def5d6737892222b9c3,antirez,antirez@gmail.com,Thu Sep 28 18:12:15 2017 +0200,1506615135,"Streams: reduce listpack max size to 2k to speedup range queries.Listpack max size is a tradeoff between space and time. A 2k max entrynputs the memory usage approximately at a similar order of magnitude (5nmillion entries went from 96 to 120 MB), but the range queries speedndoubled (because there are half entries to scan in the average case).nnLower values could be considered, or maybe this parameter should benmade tunable.n",1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,822.0,25.0,0.053113425925925925,10160.0,19.827631292220527,5238.0,None,False,,
0c00fd7834215ec311a91def5d6737892222b9c3,0540803288dd137c0a0f3fc345165c6a87f0957e,antirez,antirez@gmail.com,Fri Sep 29 12:40:29 2017 +0200,1506681629,"Streams: XADD MAXLEN implementation.The core of this change is the implementation of stream trimming, andnthe resulting MAXLEN option of XADD as a trivial result of havingntrimming functionalities. MAXLEN already works but in order to be morenefficient listpack GC should be implemented, currently marked as a TODOnitem inside the comments.n",129.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,822.0,26.0,0.7696064814814815,10161.0,2.2993653562727463,5239.0,None,False,,
0540803288dd137c0a0f3fc345165c6a87f0957e,0248a6b125df10ab74de3db82bc348cc4a6dce63,antirez,antirez@gmail.com,Fri Sep 29 16:16:19 2017 +0200,1506694579,Streams: fix streamTrimByLength() standalone items skipping.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,948.0,27.0,0.14988425925925927,10162.0,7.671814671814671,5240.0,None,False,,
0248a6b125df10ab74de3db82bc348cc4a6dce63,e53c90308b2940fa548a26583099e7a640d7abc9,antirez,antirez@gmail.com,Fri Sep 29 16:17:46 2017 +0200,1506694666,Streams: add XADD + MAXLEN test.,17.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,231.0,5.0,1.7175347222222217,10163.0,1.5822298594966138,743.0,None,False,,
e53c90308b2940fa548a26583099e7a640d7abc9,a4e6aae6b82a5118d128110f9f1c0ab0f979d5c2,antirez,antirez@gmail.com,Fri Sep 29 16:18:59 2017 +0200,1506694739,Streams: fix memory leak in streamTrimByLength().,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,948.0,28.0,0.001851851851851852,10164.0,541.0,5241.0,None,False,,
a4e6aae6b82a5118d128110f9f1c0ab0f979d5c2,50595a58898474acf12e33137a83d4201b4b2d29,antirez,antirez@gmail.com,Fri Sep 29 18:00:40 2017 +0200,1506700840,Streams: fix XADD + MAXLEN propagation due to var shadowing.Clang should be more prone to return warnings by default when there isnsame-var-name shadowing. GCC does this and can avoid bugs like that.n,4.0,4.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,949.0,29.0,0.07061342592592593,10165.0,15.161612850352402,5242.0,None,False,,
50595a58898474acf12e33137a83d4201b4b2d29,5082ec6419e58b59ac5f911c353276bf1340a9fd,antirez,antirez@gmail.com,Tue Oct 3 11:42:08 2017 +0200,1507023728,"Streams: move ID ms/seq separator from '.' to '-'After checking with the community via Twitter (here:nhttps://twitter.com/antirez/status/915130876861788161) the verdict was tonuse :. However I later realized, after users lamented the fact thatnit's hard to copy IDs just with double click, that this was the reasonnwhy I moved to . in the first instance. Fortunately -, that was thenother option with most votes, also gets selected with double click onnmost terminal applications on Linux and MacOS.nnSo my reasoning was:nn1) We can't retain . because it's actually confusing to newcomers, itnlooks like a floating number, people may be tricked into thinking theyncan order IDs numerically as floats.nn2) Moving to a double-click-to-select format is much better. People willnwork with such IDs for long time when coding / debugging. Why making nowna choice that will impact this for the next years?nnThe only other viable option was -, and that's what I did. Thanks.n",11.0,11.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9456603046006402,14.0,598.5,36.0,3.7728587962962963,10166.5,1.2000552726954823,744.0,None,False,,
5082ec6419e58b59ac5f911c353276bf1340a9fd,1898c50573d5c9162cb579b3495a694c18e31739,antirez,antirez@gmail.com,Sat Nov 4 18:05:46 2017 +0100,1509815146,Streams: fix XREAD test broken after previous tests improvements.10% of times the data is not just item 0 but there is also thenotherfield part. Use [lrange] to avoid the issue.nThis commit fixes #4416.n,1.0,1.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,248.0,7.0,32.30807870370371,10168.0,1.0309520107701533,745.0,None,False,,
1898c50573d5c9162cb579b3495a694c18e31739,671b1f6a9dd517a51b02af49a226d3d59e2e2724,antirez,antirez@gmail.com,Wed Nov 8 22:57:10 2017 +0100,1510178230,Streams: fix TYPE for stream type.,1.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1478.0,192.0,60.53207175925926,10169.0,1.016520168085062,5244.0,None,False,,
671b1f6a9dd517a51b02af49a226d3d59e2e2724,abab0b7817e48cb1ab0aaec6fff35890000396c5,antirez,antirez@gmail.com,Wed Nov 8 22:59:15 2017 +0100,1510178355,Streams: fix redis-cli to understand the stream type.,5.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2974.0,194.0,20.662916666666668,10170.0,1.048395878284366,5245.0,None,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
abab0b7817e48cb1ab0aaec6fff35890000396c5,020fe26bd6300a153dc6a02e3411f65af7310118,antirez,antirez@gmail.com,Thu Nov 9 12:04:26 2017 +0100,1510225466,"Streams: fix COUNT parsing, issue #4433.",1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,949.0,31.0,37.05715277777778,10171.0,1.0269853435852652,5246.0,None,False,,
020fe26bd6300a153dc6a02e3411f65af7310118,0381931b4c6acbbd1cbbaa6814defaea9fd33847,antirez,antirez@gmail.com,Wed Nov 15 12:48:32 2017 +0100,1510746512,Streams: Update listpack to fix 32bit strings encoding error.Note that streams produced by XADD in previous broken versions havingnelements with 4096 bytes or more will be permanently broken and must bencreated again from scratch.nnFix #4428nFix #4349n,2.0,2.0,"src/listpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,783.0,1.0,77.04728009259259,10172.0,1.0129790435015775,5247.0,None,False,,
0381931b4c6acbbd1cbbaa6814defaea9fd33847,3c5d773f82eede4497cb3695d2cd32eec3e10382,antirez,antirez@gmail.com,Fri Nov 17 10:16:30 2017 +0100,1510910190,Streams: augment stream entries to allow backward scanning.,35.0,12.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,949.0,32.0,7.925046296296296,10173.0,1.1261822281678455,5248.0,None,False,,
3c5d773f82eede4497cb3695d2cd32eec3e10382,ee3490ec481c7f1ef89fe685b03c2b5f171d335b,antirez,antirez@gmail.com,Fri Nov 17 13:24:20 2017 +0100,1510921460,Streams: state machine for reverse iteration WIP 1.,98.0,42.0,"src/aof.c,CAS_DELIMITER,src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,0.4999987283449451,14.0,788.5,227.0,43.240384837962964,10175.5,1.0089051916638314,5252.0,None,False,True,"[""48d8b3d8ac8de4db033d8836986065b8a41e01dc""]"
ee3490ec481c7f1ef89fe685b03c2b5f171d335b,6919280cc5eb9a35887ddaa528053380d584327a,antirez,antirez@gmail.com,Fri Nov 17 13:47:50 2017 +0100,1510922870,Streams: fix reverse iteration next node jumping.,5.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1027.0,34.0,0.016319444444444445,10178.0,62.276595744680854,5253.0,None,False,,
6919280cc5eb9a35887ddaa528053380d584327a,9dc79c039a16674458a39c8bdfbcfe049f3fae77,antirez,antirez@gmail.com,Fri Nov 17 16:02:11 2017 +0100,1510930931,Streams: fix reverse iterator discarding of items out of range.,12.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1031.0,35.0,0.09329861111111112,10179.0,11.718273167100856,5254.0,None,False,,
9dc79c039a16674458a39c8bdfbcfe049f3fae77,9bb18e54380250f3fb931028952379c3ab2dec29,antirez,antirez@gmail.com,Mon Nov 20 11:25:05 2017 +0100,1511173505,Streams: XRANGE REV option -> XREVRANGE command.,18.0,7.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.4821791902022728,14.0,2333.6666666666665,332.0,46.19275462962963,10181.0,1.0096384191690495,5257.0,None,False,,
9bb18e54380250f3fb931028952379c3ab2dec29,115d076d655d265ef534bb0782da8a2ba0d877ac,antirez,antirez@gmail.com,Tue Nov 21 22:21:37 2017 +0100,1511299297,Streams: fix lp-count field for non-same-fields entries.,6.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1047.0,37.0,1.4559259259259258,10183.0,1.6868481302467566,5258.0,None,False,,
115d076d655d265ef534bb0782da8a2ba0d877ac,45fe1f5e0019c6745e531da3ea51eee609f15ec3,antirez,antirez@gmail.com,Tue Nov 21 22:22:05 2017 +0100,1511299325,Streams: add some initial test for XREVRANGE.,8.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,248.0,8.0,17.177997685185183,10184.0,1.0582140024889182,746.0,None,False,,
45fe1f5e0019c6745e531da3ea51eee609f15ec3,f42df6f43a59fa92a82e651d1c5858bc5e72c3ef,antirez,antirez@gmail.com,Fri Dec 1 12:50:18 2017 +0100,1512129018,"Streams: add code to compute the stream memory usage.It's a bit of black magic without actually tracking it inside rax.c,nhowever Redis usage of the radix tree for the stream data structure isnquite consistent, so a few magic constants apparently are producingnresults that make sense.n",43.0,0.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1193.0,122.0,86.02674768518519,10185.0,1.0116242915942784,5259.0,None,False,,
f42df6f43a59fa92a82e651d1c5858bc5e72c3ef,8ac76be5f2d44341a1c7f67645c753aafbde7804,antirez,antirez@gmail.com,Fri Dec 1 15:04:05 2017 +0100,1512137045,Streams: DEBUG DIGEST support.,21.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1191.0,140.0,3.921076388888889,10186.0,1.2550320118306515,5260.0,None,False,True,"[""e9400e8efdad01c93b80624805b7ddb2d7ec99ec""]"
8ac76be5f2d44341a1c7f67645c753aafbde7804,65a9740fa880a8e5b4640037a3670f8a2f33080b,antirez,antirez@gmail.com,Fri Dec 1 16:01:10 2017 +0100,1512140470,"Fix loading of RDB files lua AUX fields when the script is defined.In the case of slaves loading the RDB from master, or in other similarncases, the script is already defined, and the function registering thenscript should not fail in the assert() call.n",11.0,5.0,"src/rdb.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.061278124459133,14.0,2203.0,532.0,25.71548225308641,10188.0,1.0145827869862092,5263.0,Corrective,True,True,"[""68681f2bcf8d17e573c27ff3fc676ddde381204c""]"
0752a834f9311194d0d409d24ebee7349aa6c1a0,d884ba4bc93849428c3ab0667bc0255368732ab4,Itamar Haber,itamar@redislabs.com,Sun Dec 3 16:49:29 2017 +0200,1512312569,Helps CLIENT,19.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2061.0,269.0,87.30461805555555,32.0,1.0114541478133912,30.0,None,False,,
d884ba4bc93849428c3ab0667bc0255368732ab4,ee3884e63c601fa559cd376a869af9f6c9276f2b,Itamar Haber,itamar@redislabs.com,Sun Dec 3 17:39:52 2017 +0200,1512315592,Improve slowlog help,2.0,1.0,"src/slowlog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,192.0,16.0,3.714837962962963,33.0,1.269190745321876,31.0,None,False,,
ee3884e63c601fa559cd376a869af9f6c9276f2b,bd5af03dbd11ae4865d95c7643803ce804faf2d7,Itamar Haber,itamar@redislabs.com,Sun Dec 3 19:05:10 2017 +0200,1512320710,Adds help to `CLUSTER` command,32.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5459.0,524.0,33.34986111111111,34.0,1.0299851323718656,32.0,Feature Addition,False,,
bd5af03dbd11ae4865d95c7643803ce804faf2d7,51eb6cb39513188001bd24e693868451ae267340,Itamar Haber,itamar@redislabs.com,Sun Dec 3 19:34:31 2017 +0200,1512322471,Adds help to `CONFIG`,16.0,15.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2105.0,207.0,51.61274305555556,35.0,1.0193750601265972,33.0,Feature Addition,False,,
65a9740fa880a8e5b4640037a3670f8a2f33080b,6a1bf07a46ce7d8cb3d9443abedd05dfa2f8096a,antirez,antirez@gmail.com,Mon Dec 4 10:24:52 2017 +0100,1512379492,DEBUG change-repl-id implemented.With PSYNC2 to force a full SYNC in tests is hard. With this new DEBUGnsubcommand we just need to call it and then CLIENT KILL TYPE master innthe slave.n,7.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1212.0,141.0,2.806099537037037,10190.0,1.3563665460904857,5264.0,Corrective,True,,
6a1bf07a46ce7d8cb3d9443abedd05dfa2f8096a,6f0b19bc5b0f89d7d9d89e84de1f4c9a859df59c,antirez,antirez@gmail.com,Mon Dec 4 10:26:02 2017 +0100,1512379562,Regression test for #4505 (Lua AUX field loading).,22.0,1.0,"tests/integration/replication-3.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,113.0,6.0,355.7484953703704,10191.0,1.0028109746436422,747.0,Preventative,False,,
6f0b19bc5b0f89d7d9d89e84de1f4c9a859df59c,68681f2bcf8d17e573c27ff3fc676ddde381204c,antirez,antirez@gmail.com,Mon Dec 4 10:33:04 2017 +0100,1512379984,"Fix issue #4505, Lua RDB AUX field loading of existing scripts.Unfortunately, as outlined by @soloestoy in #4505, lua AUX RDB fieldnloading in case of duplicated script was still broken. This commit fixesnthis problem and also a memory leak introduced by the past commit.nnNote that now we have a regression test able to duplicate the issue, sonthis commit was actually tested against the regression. The original PRnalso had a valid fix, but I prefer to hide the details of scripting.cnoutside scripting.c, and later SCRIPT LOAD should also be able to usenthe function luaCreateFunction() instead of redoing the work.n",9.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2436.0,175.0,2.7721527777777784,10192.0,1.3607304792204211,5265.0,Corrective,True,,
68681f2bcf8d17e573c27ff3fc676ddde381204c,c6eca690ee0df88361dd878563fcbc6b1ce214a2,antirez,antirez@gmail.com,Mon Dec 4 10:55:46 2017 +0100,1512381346,Remove useless variable check from luaCreateFunction().The block is already inside if (allow_dup).n,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2442.0,176.0,0.01576388888888889,10193.0,64.43612334801762,5266.0,Feature Addition,False,,
c6eca690ee0df88361dd878563fcbc6b1ce214a2,60d26acfc8bd4a4367d60b3a8b74af4031171fd6,antirez,antirez@gmail.com,Mon Dec 4 11:25:20 2017 +0100,1512383120,"Refactoring: improve luaCreateFunction() API.The function in its initial form, and after the fixes for the PSYNC2nbugs, required code duplication in multiple spots. This commit modifiesnit in order to always compute the script name independently, and tonreturn the SDS of the SHA of the body: this way it can be used in allnthe places, including for SCRIPT LOAD, without duplicating the code toncreate the Lua function name. Note that this requires to re-compute thenbody SHA1 in the case of EVAL seeing a script for the first time, butnthis should not change scripting performance in any way because newnscripts definition is a rare event happening the first time a script isnseen, and the SHA1 computation is anyway not a very slow process againstnthe typical Redis script and compared to the actua Lua byte compiling ofnthe body.nnNote that the function used to assert() if a duplicated script wasnloaded, however actually now two times over three, we want the functionnto handle duplicated scripts just fine: this happens in SCRIPT LOAD andnin RDB AUX lua loading. Moreover the assert was not defending againstnsome obvious failure mode, so now the function always tests againstnalready defined functions at start.n",38.0,58.0,"src/rdb.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.29154895949985216,14.0,2207.0,537.0,1.8791435185185184,10195.0,1.2956460993273011,5269.0,None,False,,
60d26acfc8bd4a4367d60b3a8b74af4031171fd6,2869284e44ca64d633a75752981333d5c0520056,antirez,antirez@gmail.com,Mon Dec 4 11:59:15 2017 +0100,1512385155,Streams: fix a few type mismatches in t_stream.c.,4.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1051.0,38.0,12.567800925925924,10197.0,1.0795684150229587,5270.0,None,False,,
2869284e44ca64d633a75752981333d5c0520056,664bbfe7604a28e0d359c04a0b73d1a78d255568,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 13:38:54 2017 +0800,1512020334,quicklist: fix the return value of quicklistCount,2.0,2.0,"src/quicklist.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,1410.0,18.0,462.5702141203704,29.5,1.0017975483543615,30.0,None,False,,
664bbfe7604a28e0d359c04a0b73d1a78d255568,b9491b65d991498bf62f2b5533405e161aee650a,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sun Dec 3 11:51:35 2017 +0800,1512273095,quicklist: change the len of quicklist to unsigned long,4.0,4.0,"src/debug.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,14.0,694.0,148.0,0.8470138888888888,31.5,0.8891280604907017,32.0,None,False,,
2869284e44ca64d633a75752981333d5c0520056 b9491b65d991498bf62f2b5533405e161aee650a,e6c3bcf9e072c8c40814577f2421b5d5184b2243,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 4 17:25:34 2017 +0100,1512404734,Merge pull request #4506 from soloestoy/quicklist-int-problemQuicklist int problem,,,,,,,,,,,,,,,Merge,False,,
e6c3bcf9e072c8c40814577f2421b5d5184b2243,3f232ebfb8712707f1a02dcc1eb532d05d0b8b71,WuYunlong,xzsyeb@126.com,Tue Dec 5 14:41:16 2017 +0800,1512456076,fix some notes,6.0,3.0,"redis.conf,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,2.0,2.0,0.9910760598382222,14.0,2605.5,324.0,72.92697337962962,1.5,1.0072446076354713,1.0,Corrective,True,,
e6c3bcf9e072c8c40814577f2421b5d5184b2243,de809666f81675bb21ca09049ea67cf1d32ff9b7,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Dec 5 17:19:19 2017 +0800,1512465559,set: fix the int problem for SPOP & SRANDMEMBER,2.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,957.0,58.0,574.7626157407408,33.0,1.0017398487177376,33.0,None,False,,
de809666f81675bb21ca09049ea67cf1d32ff9b7,42387d6c1a3bf14baa70f811a79f20b439b58c12,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Dec 5 17:42:19 2017 +0800,1512466939,set: fix the int problem for qsort,8.0,2.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,957.0,59.0,0.015972222222222218,34.0,63.60869565217392,34.0,None,False,,
e6c3bcf9e072c8c40814577f2421b5d5184b2243 42387d6c1a3bf14baa70f811a79f20b439b58c12,e4903ce586c191fe4699913a5e360e12812024a3,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 5 15:28:08 2017 +0100,1512484088,Merge pull request #4509 from soloestoy/set-int-problemSet int problem,,,,,,,,,,,,,,,Merge,False,,
e4903ce586c191fe4699913a5e360e12812024a3 8c7f90e91e1e6324db8a1e9ca20e3dc95ce049d0,6830fa25e3c037eda30f8a32c295b76a8c669006,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 5 15:29:42 2017 +0100,1512484182,Merge pull request #4488 from itamarhaber/debug_arityStandardizes arity handling of DEBUG,,,,,,,,,,,,,,,Merge,False,,
e4903ce586c191fe4699913a5e360e12812024a3,d1176b582c8f482e46821527114c5c1476bc66d4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 11:29:05 2017 +0800,1512012545,dict: fix the int problem,9.0,9.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1221.0,80.0,282.4509375,35.0,1.0035404378857833,35.0,None,False,,
d1176b582c8f482e46821527114c5c1476bc66d4,7c6ddbc37d572600b6364348c9506dc190493e2e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 30 11:34:37 2017 +0800,1512012877,dict: fix the int problem for defrag,5.0,5.0,"src/defrag.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER",3.0,1.0,1.0,1.521928094887362,14.0,663.0,118.0,201.43384259259258,37.0,1.0026233941831146,38.0,None,False,,
7c6ddbc37d572600b6364348c9506dc190493e2e 6830fa25e3c037eda30f8a32c295b76a8c669006,479ea57797d0ca71ae6b1fc606ec267c635df62b,antirez,antirez@gmail.com,Tue Dec 5 15:38:21 2017 +0100,1512484701,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
479ea57797d0ca71ae6b1fc606ec267c635df62b 3f232ebfb8712707f1a02dcc1eb532d05d0b8b71,c56fbb246c720eec8a7c6434e51b681a3e11a1c8,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 5 15:47:05 2017 +0100,1512485225,Merge pull request #4508 from trevor211/fixNotesfix some notes,,,,,,,,,,,,,,,Merge,False,,
c56fbb246c720eec8a7c6434e51b681a3e11a1c8 43be967690d7b778cf829540b504a9662177511d,03cfc8bf3ad3a172bd5c7f5a02ad7757c0c3f96d,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 5 15:51:15 2017 +0100,1512485475,Merge pull request #4497 from soloestoy/optimize-unlink-clientnetworking: optimize unlinkClient() in freeClient(),,,,,,,,,,,,,,,Merge,False,,
03cfc8bf3ad3a172bd5c7f5a02ad7757c0c3f96d,62a4b817c6e83eedf96a451f45dd943099258fd0,antirez,antirez@gmail.com,Tue Dec 5 15:59:56 2017 +0100,1512485996,add linkClient(): adds the client and caches the list node.We have this operation in two places: when caching the master andnwhen linking a new client after the client creation. By having an APInfor this we avoid incurring in errors when modifying one of the twonplaces forgetting the other. The function is also a good place where tondocument why we cache the linked list node.nnRelated to #4497 and #4210.n,14.0,8.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8315435491770659,14.0,2276.333333333333,628.0,2.799513888888889,10199.0,1.251999431141846,5273.0,Feature Addition,False,,
51eb6cb39513188001bd24e693868451ae267340 62a4b817c6e83eedf96a451f45dd943099258fd0,8b51121998bd5b0f3f4992548ad5f4a929c2a9d7,Itamar Haber,itamar@redislabs.com,Tue Dec 5 18:14:59 2017 +0200,1512490499,Merge remote-tracking branch 'upstream/unstable' into help_subcommands,,,,,,,,,,,,,,,Merge,False,,
8b51121998bd5b0f3f4992548ad5f4a929c2a9d7,b23c8babedfc61dc75032596c1e3d425cb9276ad,Itamar Haber,itamar@redislabs.com,Tue Dec 5 18:17:14 2017 +0200,1512490634,Uses an offset in addReplyHelp,3.0,5.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2083.0,271.0,0.05368055555555557,36.0,19.628719275549805,34.0,Feature Addition,False,,
b23c8babedfc61dc75032596c1e3d425cb9276ad,482d678e95c4d7e5754691799b04a2ae433a9479,Itamar Haber,itamar@redislabs.com,Tue Dec 5 19:09:19 2017 +0200,1512493759,C style,2.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2081.0,272.0,0.03616898148148148,37.0,28.648000000000003,35.0,None,False,,
482d678e95c4d7e5754691799b04a2ae433a9479,522760fac79536eb68dc5fc70e9166f689eb76dc,antirez,antirez@gmail.com,Wed Dec 6 12:05:11 2017 +0100,1512558311,"Change indentation and other minor details of PR #4489.The main change introduced by this commit is pretending that helpnarrays are more text than code, thus indenting them at level 0. Thisnimproves readability, and is an old practice when defining arrays ofnC strings describing text.nnAdditionally a few useless return statements are removed, and the HELPnsubcommand capitalized when printed to the user.n",99.0,108.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",9.0,1.0,1.0,2.9330147751337314,14.0,2115.6666666666665,1640.0,3.257065329218108,10205.0,1.1098020024283537,5282.0,Feature Addition,False,True,"[""af3471a5dc1bf26e7bc2d1578f9bf82e9c7168a2""]"
522760fac79536eb68dc5fc70e9166f689eb76dc,e8901b2fe489013b17e943d2721f961a50bda07c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Dec 8 15:37:08 2017 +0800,1512718628,zset: fix the int problem,14.0,10.0,"src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,14.0,2558.5,286.0,146.68903935185185,39.5,1.1874053068366912,40.0,None,False,,
e8901b2fe489013b17e943d2721f961a50bda07c,109ee497be24906e7931d33b71e3a6e78c5de77b,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Dec 8 16:09:27 2017 +0800,1512720567,zset: change the span of zskiplistNode to unsigned long,2.0,2.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2048.0,155.0,0.02244212962962963,41.0,45.559051057246,41.0,None,False,,
522760fac79536eb68dc5fc70e9166f689eb76dc,4317e2131f4355046fd44141c8b6515b81dc79c0,Itamar Haber,itamar@redislabs.com,Sun Dec 10 17:54:56 2017 +0200,1512921296,Standardizes `MEMORY HELP` subcommand,13.0,14.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1234.0,124.0,4.201215277777779,38.0,1.2380263647258152,36.0,None,False,,
522760fac79536eb68dc5fc70e9166f689eb76dc,f43eb5adcfa3be6368f116656348a29f22f580eb,nashe,thomas@chauchefoin.fr,Tue Dec 12 01:25:03 2017 +0100,1513038303,Prevent off-by-one read in stringmatchlen() (fixes #4527),1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,834.0,35.0,645.4865625,0.0,0.0,0.0,Corrective,True,,
522760fac79536eb68dc5fc70e9166f689eb76dc,de276b6a439179b3cd0c94df82729cae8ab1cb9a,antirez,antirez@gmail.com,Wed Dec 13 13:35:59 2017 +0100,1513168559,Cluster: allow read-only EVAL/EVALSHA in slaves.Fix #3665.n,2.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5488.0,526.0,7.063055555555558,10210.0,1.1415817831439021,5283.0,None,False,,
de276b6a439179b3cd0c94df82729cae8ab1cb9a,77653ebe8a7dc2a673364711f31ff8736f80832c,Tomasz Poradowski,tomasz@poradowski.net,Wed Dec 13 23:49:41 2017 +0100,1513205381,"always enable command history in redis-cli- when redis-cli is running in a TTY - always enable command historynbuffering, regardless if history file path can be successfullyndeterminedn",2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2977.0,195.0,35.03502314814815,0.0,0.0,0.0,None,False,,
de276b6a439179b3cd0c94df82729cae8ab1cb9a 1b5f56d0428a8ea7cea4e6d501dbece7ff987578,5182dcd6452ba3f03196124bcccfa8f80dd61fd1,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 14 12:15:46 2017 +0100,1513250146,Merge pull request #4498 from soloestoy/aof-safe-writeAof safe write -- fix the short write,,,,,,,,,,,,,,,Merge,False,,
5182dcd6452ba3f03196124bcccfa8f80dd61fd1,12e65a424c209bd922dc742f396f1b76bc6350d9,antirez,antirez@gmail.com,Thu Dec 14 12:19:30 2017 +0100,1513250370,safe_write -> aofWrite. Function commented.Related to #4498.n,9.0,2.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1638.0,166.0,26.95497685185185,10211.0,1.0370989003439377,5284.0,None,False,,
12e65a424c209bd922dc742f396f1b76bc6350d9 f43eb5adcfa3be6368f116656348a29f22f580eb,398b2084af067ae4d669e0ce5a63d3bc89c639d3,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 14 12:21:32 2017 +0100,1513250492,Merge pull request #4528 from nashe/patch-oob-read-4527Prevent off-by-one read in stringmatchlen(),,,,,,,,,,,,,,,Merge,False,,
398b2084af067ae4d669e0ce5a63d3bc89c639d3 77653ebe8a7dc2a673364711f31ff8736f80832c,d745e8dfb3c8448a7a8dd1bbe1bc739a1b04bdcd,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 14 22:14:45 2017 +0100,1513286085,Merge pull request #4536 from tporadowski/antirez_unstable-cli-historyAlways enable command history in redis-cli run on a TTY,,,,,,,,,,,,,,,Merge,False,,
398b2084af067ae4d669e0ce5a63d3bc89c639d3,ee724cac491c6e6f4ee3c9b91be482f163e6d12c,heqin,hqin6@163.com,Fri Dec 15 11:06:58 2017 +0800,1513307218,fixbug for #4538 Error opening /setting AOF rewrite IPC pipes: No such file or directory,6.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1645.0,167.0,0.657962962962963,0.0,0.0,0.0,Corrective,True,True,"[""f782006782c9eb82c893c12084bec1c0cf7d521e""]"
d745e8dfb3c8448a7a8dd1bbe1bc739a1b04bdcd ee724cac491c6e6f4ee3c9b91be482f163e6d12c,238c9bd0863e713f018587e79f452ade845bee91,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 15 12:41:02 2017 +0100,1513338062,Merge pull request #4540 from hqin6/unstablefixbug for #4538 Error opening /setting AOF rewrite IPC pipes: No sucu00e2u0080u00a6,,,,,,,,,,,,,,,Merge,False,,
4317e2131f4355046fd44141c8b6515b81dc79c0,7820377d0084ac400345047ab67c0752e98897d8,Itamar Haber,itamar@redislabs.com,Fri Dec 15 21:19:41 2017 +0200,1513365581,Uppercases subcommands in MEMORY HELP,5.0,5.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1233.0,125.0,5.1421875,39.0,1.1944697660285628,37.0,None,False,,
7820377d0084ac400345047ab67c0752e98897d8,d49bfc40808652389e3e3c3a0db3667153c3c14f,Itamar Haber,itamar@redislabs.com,Fri Dec 15 21:21:12 2017 +0200,1513365672,Uppercases subcommands in OBJECT HELP,4.0,4.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1233.0,126.0,0.0010532407407407409,40.0,950.4505494505496,38.0,None,False,,
ee724cac491c6e6f4ee3c9b91be482f163e6d12c,365e6c45ea0d5d9d72ac18b1df729f536c1fa0a1,heqin,hqin6@163.com,Mon Dec 18 17:59:03 2017 +0800,1513591143,fixbug for #4545 dead loop aof rewrite,3.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3917.0,149.0,11.954074074074073,1.0,1.0836534886603049,1.0,Corrective,True,True,"[""3d3faa0a190e3ad987613b4c3f853d9ffd38a237"", ""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
238c9bd0863e713f018587e79f452ade845bee91,cbe9d725a727d438983c88f67b32bb98115e38dc,antirez,antirez@gmail.com,Fri Dec 22 10:45:31 2017 +0100,1513935931,"Hyperloglog: refactoring of sparse/dense add function.The commit splits the add functions into a set() and add() set ofnfunctions, so that it's possible to set registers in an independent waynjust having the index and count.nnRelated to #3819, otherwise a fix is not possible.n",38.0,20.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1550.0,101.0,163.9587384259259,10212.0,1.006099095477316,5285.0,None,False,,
cbe9d725a727d438983c88f67b32bb98115e38dc,27b81f3fbca03c1d61e6b183317d90bc3dec119b,antirez,antirez@gmail.com,Fri Dec 22 11:01:19 2017 +0100,1513936879,Hyperloglog: Support for PFMERGE sparse encoding as target.This is a fix for #3819.n,14.0,3.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1568.0,102.0,0.010972222222222222,10213.0,92.13924050632912,5286.0,None,False,,
27b81f3fbca03c1d61e6b183317d90bc3dec119b,0b561883b48db76a78497b1bebfd9367c80e2d96,antirez,antirez@gmail.com,Fri Dec 22 11:26:31 2017 +0100,1513938391,"Hyperloglog: refresh hdr variable correctly.This is a fix for the #3819 improvements. The o->ptr may change becausenof hllSparseSet() calls, so 'hdr' must be correctly re-fetched.n",3.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1579.0,103.0,0.0175,10214.0,58.14285714285714,5287.0,None,False,,
0b561883b48db76a78497b1bebfd9367c80e2d96,60a4f12f8b998c44dfff0e88202b01598287390d,Oran Agra,oran@redislabs.com,Thu Dec 21 11:10:48 2017 +0200,1513847448,"fix processing of large bulks (above 2GB)- protocol parsing (processMultibulkBuffer) was limitted to 32big positions in the buffern  readQueryFromClient potential overflown- rioWriteBulkCount used int, although rioWriteBulkString gave it size_tn- several places in sds.c that used int for string length or index.n- bugfix in RM_SaveAuxField (return was 1 or -1 and not length)n- RM_SaveStringBuffer was limitted to 32bit lengthn",39.0,33.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sds.h,CAS_DELIMITER",8.0,1.0,1.0,2.4463697482864832,14.0,1304.375,789.0,212.6730483217593,36.5,1.0109453379547375,34.0,Corrective,True,,
60a4f12f8b998c44dfff0e88202b01598287390d,b509a14c3e8a76aadd6bd48296cafb4616be25e2,Oran Agra,oran@redislabs.com,Fri Dec 29 12:43:48 2017 +0200,1514544228,Add config options for max-bulk-len and max-querybuf-len mainly to support RESTORE of large keys,16.0,1.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.321606958388347,14.0,2538.0,790.0,15.796999421296293,42.5,1.0288255841376186,38.0,Feature Addition,False,True,"[""8075572207b5aebb1385c4f233f5302544439325""]"
238c9bd0863e713f018587e79f452ade845bee91,c0f611f12aef9fcd320d56181cd6e2ca3066049d,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jan 3 12:47:25 2018 +0800,1514954845,redis-benchmark: bugfix - handle zero liveclients in right way,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,846.0,64.0,340.0604398148148,42.0,1.002940653727745,42.0,None,False,,
0b561883b48db76a78497b1bebfd9367c80e2d96,5113a53df6cd08f1f35ac9335531ca4f444a5fea,gnuhpc,futuredaemon@gmail.com,Fri Jan 5 12:16:24 2018 +0800,1515125784,Fix memory usage list bug,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1233.0,127.0,20.371666666666666,0.0,0.0,0.0,Corrective,True,,
0b561883b48db76a78497b1bebfd9367c80e2d96 5113a53df6cd08f1f35ac9335531ca4f444a5fea,e509fbb8d9f055184713b9c1fd0b7ce5c5f75baa,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 5 11:53:11 2018 +0100,1515149591,Merge pull request #4579 from gnuhpc/fix-memoryusage-listFix memory usage list bug,,,,,,,,,,,,,,,Merge,False,,
e509fbb8d9f055184713b9c1fd0b7ce5c5f75baa,e76dfc90a75f26809ac17a344b9a4ffd615f550d,Dvir Volk,dvirsky@gmail.com,Sun Jan 7 16:41:43 2018 +0200,1515336103,Added RM_UnlinkKey - a low level analog to UNLINK command,56.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.0442469672405423,14.0,1577.0,180.0,73.55995756172837,32.0,1.0236469205467138,33.0,Feature Addition,False,,
0b561883b48db76a78497b1bebfd9367c80e2d96,36e71b88b5f6c2fc6b3aee26b7ebd42df3c52c1b,gnuhpc,futuredaemon@gmail.com,Tue Jan 9 16:13:02 2018 +0800,1515485582,Fix a typo(maybe instruction?) in crash log,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1219.0,144.0,33.880451388888886,1.0,1.0295155453663156,1.0,Corrective,True,,
e509fbb8d9f055184713b9c1fd0b7ce5c5f75baa,3ce1c28d47eefd6e7121f0257563e380153cae54,antirez,antirez@gmail.com,Tue Jan 9 18:16:22 2018 +0100,1515518182,Rewrite MIGRATE AUTH option.See PR #2507. This is a reimplementation of the fix that containedndifferent problems.n,38.0,12.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5489.0,527.0,27.19471064814815,10215.0,1.0367718565914616,5288.0,Corrective,True,True,"[""727dd43614ec45e23e2dedbba08b393323feaa4f""]"
3ce1c28d47eefd6e7121f0257563e380153cae54,c17a0e134f5366fb7ce87f56945e1e54b3860988,antirez,antirez@gmail.com,Tue Jan 9 18:29:27 2018 +0100,1515518967,Test: MIGRATE AUTH test added.Related to #2507.n,24.0,0.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,11.0,311.0,13.0,760.1682754629628,10216.0,1.0013154982025407,748.0,Preventative,False,,
c17a0e134f5366fb7ce87f56945e1e54b3860988 b6c4822f7cfdb87b211826789128e1ff4162d3e6,e954742fbd0179176baa76e92c358fb235af6c11,Salvatore Sanfilippo,antirez@gmail.com,Tue Jan 9 18:58:31 2018 +0100,1515520711,"Merge pull request #3356 from yusaku/fix-module-firstkeyFix the firstkey, lastkey, and keystep of moduleCommand",,,,,,,,,,,,,,,Merge,False,,
e954742fbd0179176baa76e92c358fb235af6c11,f0e09bf8030680ad22682f2040f03b14ffd592a5,huijing.whj,huijing.whj@alibaba-inc.com,Wed Jan 10 23:47:02 2018 +0800,1515599222,fix int overflow problem in freeMemoryIfNeeded,1.0,1.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,562.0,19.0,43.90421296296297,0.0,0.0,0.0,Corrective,True,,
e954742fbd0179176baa76e92c358fb235af6c11 b509a14c3e8a76aadd6bd48296cafb4616be25e2,c2fa4b8a60c7d3c11c016f16f85d37188fa5c3f6,Salvatore Sanfilippo,antirez@gmail.com,Thu Jan 11 11:20:02 2018 +0100,1515666002,Merge pull request #4568 from oranagra/restore_size_limitfix RESTORE command size limits,,,,,,,,,,,,,,,Merge,False,,
c2fa4b8a60c7d3c11c016f16f85d37188fa5c3f6,8075572207b5aebb1385c4f233f5302544439325,antirez,antirez@gmail.com,Thu Jan 11 11:27:03 2018 +0100,1515666423,New config options about protocol prefixed with proto.Related to #4568.n,13.0,13.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.3520301017579528,14.0,2541.75,794.0,12.988368055555556,10218.5,1.040099982623341,5292.0,Corrective,True,,
8075572207b5aebb1385c4f233f5302544439325,13650446ac220136ed717fada3d0990298d5d87c,antirez,antirez@gmail.com,Thu Jan 11 11:35:45 2018 +0100,1515666945,proto-max-querybuf-len -> client-query-buffer-limit.We already had client buffer limits exported as configuration options.nStick with the naming scheme already used.nnSee #4568.n,4.0,4.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2118.0,211.0,0.006041666666666666,10221.0,166.51724137931038,5293.0,None,False,,
13650446ac220136ed717fada3d0990298d5d87c,db7bd6fda9ec0ab942c49e0ec72b12e03d1345f6,antirez,antirez@gmail.com,Thu Jan 11 11:40:57 2018 +0100,1515667257,Document new protocol options in #4568 into redis.conf.,14.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1295.0,178.0,37.16644675925926,10222.0,1.026905988793531,1392.0,Feature Addition,False,,
db7bd6fda9ec0ab942c49e0ec72b12e03d1345f6,2f8476df9124dfbd298a7ecce87870d44bdbb172,antirez,antirez@gmail.com,Fri Jan 12 11:21:10 2018 +0100,1515752470,"Fix getKeysUsingCommandTable() in the case of nagative arity.This fixes a crash with Redis Cluster when OBJECT is mis-used, becausengetKeysUsingCommandTable() will call serverPanic() detecting we arenaccessing an invalid argument in the case OBJECT foo is called.nnThis bug was introduced when OBJECT HELP was introduced, because the keynargument is set fixed at index 2 in the command table, however nownOBJECT may be called with an insufficient number of arguments to extractnthe key.nnThe Right Thing would be to have a specific function to extract keysnfrom the OBJECT command, however this is kinda of an overkill, so Inpreferred to make getKeysUsingCommandTable() more robust and just returnnno keys when it's not possible to honor the command table, because newncommands are often added and also there are a number with an HELPnsubcommand violating the normal form, and crashing for this trivialnreason or having many command-specific key extraction functions is notngreat.n",7.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1479.0,193.0,64.51666666666667,10223.0,1.0154998708344096,5294.0,Corrective,True,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
db7bd6fda9ec0ab942c49e0ec72b12e03d1345f6 36e71b88b5f6c2fc6b3aee26b7ebd42df3c52c1b,71914387ba5f61bb9e36314ee4693c8812f89db9,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 12 17:16:12 2018 +0100,1515773772,Merge pull request #4586 from gnuhpc/fix-crashlog-typoFix a typo(maybe instruction?) in crash log,,,,,,,,,,,,,,,Merge,False,,
2f8476df9124dfbd298a7ecce87870d44bdbb172 71914387ba5f61bb9e36314ee4693c8812f89db9,a5b6bc2bd78a5684034178ae6497979cf081037e,antirez,antirez@gmail.com,Fri Jan 12 17:16:38 2018 +0100,1515773798,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a5b6bc2bd78a5684034178ae6497979cf081037e e76dfc90a75f26809ac17a344b9a4ffd615f550d,72187fa8a5e9faa39e4cb4ebabc2e267dd055805,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 12 17:41:09 2018 +0100,1515775269,Merge pull request #4581 from dvirsky/module_unlinkAdded RM_UnlinkKey - a low level analog to UNLINK command,,,,,,,,,,,,,,,Merge,False,,
72187fa8a5e9faa39e4cb4ebabc2e267dd055805 c0f611f12aef9fcd320d56181cd6e2ca3066049d,aeeb7477960ed0f398027e2c6ca7d9e8af9d8a58,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 12 17:43:01 2018 +0100,1515775381,Merge pull request #4575 from soloestoy/bugfix-benchmarkredis-benchmark: bugfix - handle zero liveclients in right way,,,,,,,,,,,,,,,Merge,False,,
238c9bd0863e713f018587e79f452ade845bee91,0517ab8397d6077660f46d9f9d320b3106c13a06,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jan 15 00:45:37 2018 +0800,1515948337,lazyfree: fix memory leak for lazyfree-lazy-server-del,4.0,3.0,"src/lazyfree.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,135.0,11.0,255.07273148148147,43.0,1.0039204504307142,43.0,None,False,,
aeeb7477960ed0f398027e2c6ca7d9e8af9d8a58 0517ab8397d6077660f46d9f9d320b3106c13a06,1ed5ac7ce5322b3c57c1637574b9e87e1af7b76d,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 15 12:43:55 2018 +0100,1516016635,Merge pull request #4601 from soloestoy/fix-memoryleak-for-lazy-server-dellazyfree: fix memory leak for lazyfree-lazy-server-del,,,,,,,,,,,,,,,Merge,False,,
1ed5ac7ce5322b3c57c1637574b9e87e1af7b76d,c45366be0a08e6777b63150198ddfe9119be9132,antirez,antirez@gmail.com,Mon Jan 15 12:50:08 2018 +0100,1516017008,Put more details in the comment introduced by #4601.,8.0,3.0,"src/lazyfree.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,136.0,12.0,0.7948032407407407,10224.0,2.2581730279157144,5295.0,None,False,,
c45366be0a08e6777b63150198ddfe9119be9132,1b8eec3e53b1bf0648084747df87bcd73f26029c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Dec 21 14:55:27 2017 +0800,1513839327,aof: format code and comment,5.0,5.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1647.0,168.0,6.1586689814814815,44.0,1.1623727469371876,44.0,None,False,,
1b8eec3e53b1bf0648084747df87bcd73f26029c,689b64c3ad921c6f82cee38c0940c6637e9ba88f,Oran Agra,oran@redislabs.com,Tue Jan 16 10:10:42 2018 +0200,1516090242,"PSYNC2 fix - promoted slave should hold on to it's backlogafter a slave is promoted (assuming it has no slavesnand it booted over an hour ago), it will lose it's replicationnbacklog at the next replication cron, rather than waiting for slavesnto connect to it.nso on a simple master/slave faiover, if the new slave doesn't connectnimmediately, it may be too later and PSYNC2 will fail.n",5.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2704.0,206.0,41.71581018518519,45.0,1.0239717266801434,39.0,Corrective,True,,
1b8eec3e53b1bf0648084747df87bcd73f26029c 689b64c3ad921c6f82cee38c0940c6637e9ba88f,0cc43760d774520d5a8c3b6b0f3a35694fc504fc,Salvatore Sanfilippo,antirez@gmail.com,Tue Jan 16 15:32:58 2018 +0100,1516113178,Merge pull request #4607 from oranagra/psync2_backlogPSYNC2 fix - promoted slave should hold on to it's backlog,,,,,,,,,,,,,,,Merge,False,,
0cc43760d774520d5a8c3b6b0f3a35694fc504fc,1e0e1685702d613fbad281c2db35540ad21d5887,qinchao,1187620716@qq.com,Tue Jan 16 22:43:06 2018 +0800,1516113786,"fix assert problem in ZIP_DECODE_PREVLENSIZE , see issue: https://github.com/antirez/redis/issues/4587",1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1932.0,56.0,348.9455439814815,0.0,0.0,0.0,Corrective,True,,
0cc43760d774520d5a8c3b6b0f3a35694fc504fc,b23927b240c68139700b7ac4bd4ce9370503aa60,antirez,antirez@gmail.com,Tue Jan 16 15:52:13 2018 +0100,1516114333,Hopefully more clear comment to explain the change in #4607.,4.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2709.0,207.0,0.2788310185185185,10225.0,4.586401560748826,5296.0,None,False,,
b23927b240c68139700b7ac4bd4ce9370503aa60 1e0e1685702d613fbad281c2db35540ad21d5887,81401878de92d15f0d3529144e27a1106ad489c2,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 17 10:45:11 2018 +0100,1516182311,Merge pull request #4609 from Qinch/unstablefix assert problem in ZIP_DECODE_PREVLENSIZE macro,,,,,,,,,,,,,,,Merge,False,,
365e6c45ea0d5d9d72ac18b1df729f536c1fa0a1,3d3faa0a190e3ad987613b4c3f853d9ffd38a237,heqin,hqin6@163.com,Wed Jan 17 18:08:30 2018 +0800,1516183710,fixbug for #4545 dead loop aof rewrite,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3920.0,152.0,5.9871180555555545,2.0,1.1670252683713296,2.0,Corrective,True,True,"[""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
81401878de92d15f0d3529144e27a1106ad489c2 3d3faa0a190e3ad987613b4c3f853d9ffd38a237,a18e4c964e9248008e0fba7efc1cad9ba9b8b1c3,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 17 11:21:55 2018 +0100,1516184515,Merge pull request #4546 from hqin6/unstablefixbug for #4545 dead loop aof rewrite,,,,,,,,,,,,,,,Merge,False,,
a18e4c964e9248008e0fba7efc1cad9ba9b8b1c3,e1e0bbe04d1950ae3cf778c6e3b125d6d233d4f6,antirez,antirez@gmail.com,Wed Jan 17 11:23:37 2018 +0100,1516184617,Remove useless comment from serverCron().The behavior is well specified by the code itself.n,2.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3920.0,153.0,0.010497685185185185,10226.0,96.25909592061744,5297.0,None,False,True,"[""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
e1e0bbe04d1950ae3cf778c6e3b125d6d233d4f6,1673a3f32ce22498bcb60d73ee254e61e323dda5,antirez,antirez@gmail.com,Mon Dec 18 15:46:39 2017 +0100,1513608399,"Cluster: improve anti-affinity algo in redis-trib.rb.See #3462 and related PRs.nnWe use a simple algorithm to calculate the level of affinity violation,nand then an optimizer that performs random swaps until things improve.n",131.0,1.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1700.0,128.0,434.93980324074073,10227.0,1.002299168741396,5298.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
1673a3f32ce22498bcb60d73ee254e61e323dda5,fd8efb7c3615f1a0c78a03388d5b18bc9c4049f8,Guy Benoish,guy.benoish@redislabs.com,Mon Mar 6 18:42:52 2017 +0200,1488818572,"Replication buffer fills up on high rate traffic.When feeding the master with a high rate traffic the the slave's feed is much slower.nThis causes the replication buffer to grow (indefinitely) which leads to slave disconnection.nThe problem is that writeToClient() decides to stop writing after NET_MAX_WRITES_PER_EVENTnwrites (In order to be fair to clients).nWe should ignore this when the client is a slave.nIt's better if clients wait longer, the alternative is that the slave has no chance to stay innsync in this situation.n",7.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2079.0,277.0,-310.73901620370367,5.0,0.9967818653343986,5.0,Corrective,True,,
fd8efb7c3615f1a0c78a03388d5b18bc9c4049f8,727dd43614ec45e23e2dedbba08b393323feaa4f,antirez,antirez@gmail.com,Thu Jan 18 12:41:05 2018 +0100,1516275665,Fix migrateCommand() access of not initialized byte.,5.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5515.0,528.0,8.767164351851854,10228.0,1.114061965747086,5299.0,Corrective,True,,
727dd43614ec45e23e2dedbba08b393323feaa4f,062bd733da883d76d3625fb38c71f2bd74c363a1,Mark Nunberg,mnunberg@users.noreply.github.com,Tue Jan 23 10:49:18 2018 -0500,1516722558,redismodule.h: Check ModuleNameBusy before calling itOlder versions might not have this function.,1.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,389.0,48.0,16.04693287037037,0.0,0.0,0.0,None,False,,
727dd43614ec45e23e2dedbba08b393323feaa4f,5f5be1ee330903ce1582386623fe4f9bc28a7801,antirez,antirez@gmail.com,Wed Jan 24 10:10:45 2018 +0100,1516785045,Fix integration test NOREPLICAS error time dependent false positive.,6.0,3.0,"tests/integration/replication-2.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,87.0,2.0,1329.0170949074075,10229.0,1.0007524357691349,749.0,Corrective,True,,
5f5be1ee330903ce1582386623fe4f9bc28a7801 062bd733da883d76d3625fb38c71f2bd74c363a1,4bffeda8b03e8e432025524c0e49ed3f5b7b9653,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 24 10:48:04 2018 +0100,1516787284,Merge pull request #4628 from mnunberg/patch-1redismodule.h: Check ModuleNameBusy before calling it,,,,,,,,,,,,,,,Merge,False,,
4bffeda8b03e8e432025524c0e49ed3f5b7b9653 498f65ffb77e7fab9c9085394657ba7b46bedde9,4aa2ecd98b5993fcd6967aa002f0f7d8a577735d,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 24 10:55:25 2018 +0100,1516787725,Merge pull request #4269 from jianqingdu/unstablefix not call va_end() when syncWrite() failed,,,,,,,,,,,,,,,Merge,False,,
4aa2ecd98b5993fcd6967aa002f0f7d8a577735d,968cb2669346ebcb20016ac16923dcd31e31ad2f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Jan 26 22:49:39 2018 +0800,1516978179,config: handle special configuration  for auth,2.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2118.0,212.0,15.176319444444443,45.0,1.065892129093663,45.0,None,False,,
4aa2ecd98b5993fcd6967aa002f0f7d8a577735d,32ac4c64baf00747da1acc0cc61ee236922e2dcf,antirez,antirez@gmail.com,Fri Feb 2 11:10:18 2018 +0100,1517566218,Rax updated to latest antirez/rax commit.,2.0,2.0,"src/rax.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1754.0,6.0,148.95730324074077,10230.0,1.0067133331380458,5300.0,Preventative,False,,
32ac4c64baf00747da1acc0cc61ee236922e2dcf,aacecbc997b9678ba59eb9ef487e5cf19078a055,u00e8u00b5u00b5u00e7u00a3u008a,zhaolei21@meituan.com,Sun Feb 11 21:02:07 2018 +0800,1518354127,Remove updateLFU() in dbOverwrite().,2.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1481.0,194.0,30.11177083333333,0.0,0.0,0.0,None,False,,
32ac4c64baf00747da1acc0cc61ee236922e2dcf,8e8d957ff82859f5d65b5977d837cd610da5b431,Oran Agra,oran@redislabs.com,Tue Feb 13 15:47:06 2018 +0200,1518529626,fix to latency monitor reporting wrong max latencyin some cases LATENCY HISTORY reported latency that wasnhigher than the max latency reported by LATENCY LATEST / DOCTORn,1.0,0.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,623.0,33.0,357.9425,46.0,1.0027937448053807,40.0,Corrective,True,,
32ac4c64baf00747da1acc0cc61ee236922e2dcf 8e8d957ff82859f5d65b5977d837cd610da5b431,480d4af1e7e62d9550332b772fb6d26444e5f7bd,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 13 15:31:11 2018 +0100,1518532271,Merge pull request #4684 from oranagra/latency_monitor_maxfix to latency monitor reporting wrong max latency,,,,,,,,,,,,,,,Merge,False,,
480d4af1e7e62d9550332b772fb6d26444e5f7bd,f782006782c9eb82c893c12084bec1c0cf7d521e,Guy Benoish,guy.benoish@redislabs.com,Tue Mar 7 20:58:54 2017 +0200,1488913134,"rewriteAppendOnlyFileBackground() failure fixIt is possible to do BGREWRITEAOF even if appendonly=no. This is by design.nstopAppendonly() didn't turn off aof_rewrite_scheduled (it can be turned onnagain by BGREWRITEAOF even while appendonly is off anyway).nAfter configuring `appendonly yes` it will see that the state is AOF_OFF,nthere's no RDB fork, so it will do rewriteAppendOnlyFileBackground() whichnwill fail since the aof_child_pid is set (was scheduled and started by cron).nnSolution:nstopAppendonly() will turn off the schedule flag (regardless of who asked for it).nstartAppendonly() will terminate any existing fork and start a new one (so it is the most recent).n",31.0,21.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1647.0,169.0,-288.4976041666667,6.0,0.996533766708779,6.0,Corrective,True,,
f782006782c9eb82c893c12084bec1c0cf7d521e,c14ba46e3a725a2325d8d5fd90097b1c889de1e2,antirez,antirez@gmail.com,Tue Feb 13 15:43:26 2018 +0100,1518533006,Make it explicit with a comment why we kill the old AOF rewrite.See #3858.n,3.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1657.0,170.0,342.82259259259257,10231.0,1.0029169606134691,5301.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8""]"
c14ba46e3a725a2325d8d5fd90097b1c889de1e2 89a9e5a9a2dba7bcdb4ef32fa73f105a14923c1a,f9e6c2046feadcd284bdb68de4f49296f91bbe53,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 13 15:50:21 2018 +0100,1518533421,Merge pull request #3745 from guybe7/unstableenlarged buffer given to ld2string,,,,,,,,,,,,,,,Merge,False,,
f9e6c2046feadcd284bdb68de4f49296f91bbe53 161a3a174b477fa95003765b682325604327074c,756df19134ec54773876802b6bb91f99d868a4c8,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 13 15:55:26 2018 +0100,1518533726,"Merge pull request #3832 from oranagra/slave_reply_to_master_prwhen a slave responds with an error on commands that come from master, log it",,,,,,,,,,,,,,,Merge,False,,
756df19134ec54773876802b6bb91f99d868a4c8,ae29bcd8e2b592ed89435a84eda8f03050050b75,antirez,antirez@gmail.com,Tue Feb 13 16:01:31 2018 +0100,1518534091,More verbose logging when slave sends errors to master.See #3832.n,6.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2084.0,278.0,343.92961805555564,10232.0,1.002907571629491,5302.0,None,False,True,"[""d55598988b3381afff87bc974f5cfda0e8ae77e0""]"
ae29bcd8e2b592ed89435a84eda8f03050050b75,9d414361151922e25f3c2eacb8a02653dd85e0c9,charsyam,charsyam@gmail.com,Wed Feb 14 00:12:13 2018 +0900,1518534733,getting rid of duplicated code,2.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,624.0,34.0,0.0591087962962963,19.0,17.917955747013902,19.0,None,False,,
ae29bcd8e2b592ed89435a84eda8f03050050b75 9d414361151922e25f3c2eacb8a02653dd85e0c9,4f2d279dd704ebf0e9ebab85bc74269b523eda8a,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 13 16:20:32 2018 +0100,1518535232,Merge pull request #4685 from charsyam/refactoring/set_max_latencyRemoving duplicated code to set max latency ,,,,,,,,,,,,,,,Merge,False,,
4f2d279dd704ebf0e9ebab85bc74269b523eda8a,2136035e47c5c50aec07270e0c87a9e5cd5e243d,Dvir Volk,dvirsky@gmail.com,Mon Nov 27 16:29:55 2017 +0200,1511792995,finished implementation of notifications. Tests unfinished,338.0,2.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/hellonotify.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",7.0,1.0,2.0,2.0455525632049367,15.0,1001.5714285714287,361.0,44.163559854497365,37.0,0.9989189021166972,40.0,Preventative,False,True,"[""896db12b418877967d7689e2731c266d8dd1d4f9"", ""613831f82023601df874b9cfa9a1935ff942ceb6"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95"", ""3b0f0086156e79e0c7e13c8e7118799b9b40dd08""]"
2136035e47c5c50aec07270e0c87a9e5cd5e243d,896db12b418877967d7689e2731c266d8dd1d4f9,Dvir Volk,dvirsky@gmail.com,Mon Nov 27 23:13:45 2017 +0200,1511817225,fixed test,7.0,1.0,"src/modules/testmodule.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,445.0,8.0,0.28043981481481484,41.0,4.565827486586874,41.0,Corrective,True,True,"[""613831f82023601df874b9cfa9a1935ff942ceb6""]"
896db12b418877967d7689e2731c266d8dd1d4f9,5b7b12e38fccb92d2778eed51962be0edf8c5ec6,Dvir Volk,dvirsky@gmail.com,Mon Nov 27 23:18:45 2017 +0200,1511817525,removed hellonotify.c,1.0,87.0,"src/modules/Makefile,CAS_DELIMITER,src/modules/hellonotify.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER",3.0,1.0,1.0,0.5543161236328159,15.0,193.0,19.0,0.1904320987654321,43.0,3.344577241772553,44.0,None,False,True,"[""613831f82023601df874b9cfa9a1935ff942ceb6""]"
5b7b12e38fccb92d2778eed51962be0edf8c5ec6,d4d753dae44fa96974eefea83be7aa2bb8838b41,Dvir Volk,dvirsky@gmail.com,Mon Nov 27 23:19:51 2017 +0200,1511817591,removed some trailing whitespaces,0.0,2.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,141.0,12.0,0.28467592592592594,45.0,4.512766303463978,45.0,None,False,,
d4d753dae44fa96974eefea83be7aa2bb8838b41,a8e2e99a88968a22cdbfdac404a812e80b5dd0d7,Dvir Volk,dvirsky@gmail.com,Mon Nov 27 23:27:20 2017 +0200,1511818040,Document flags for notifications,17.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4175.0,129.0,0.2898726851851852,46.0,4.449790377320823,46.0,Non Functional,False,,
a8e2e99a88968a22cdbfdac404a812e80b5dd0d7,3aab12414f27685bf8e9dc9fd4693c8c9ecf9ccb,Dvir Volk,dvirsky@gmail.com,Thu Dec 7 16:55:46 2017 +0200,1512658546,Remove the NOTIFY_MODULE flag and simplify the module notification flow if there aren't subscribers,5.0,9.0,"src/module.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0949143184120975,15.0,2127.6666666666665,302.0,9.826435185185183,48.0,1.0627004028120002,49.0,None,False,,
3aab12414f27685bf8e9dc9fd4693c8c9ecf9ccb,f27a64232e59e5bc5f8ee648b3610d19128ab149,Dvir Volk,dvirsky@gmail.com,Thu Dec 7 17:15:16 2017 +0200,1512659716,Use one static client for all keyspace notification callbacks,11.0,7.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4189.0,131.0,0.013541666666666669,50.0,74.84615384615384,50.0,None,False,,
f27a64232e59e5bc5f8ee648b3610d19128ab149,613831f82023601df874b9cfa9a1935ff942ceb6,Dvir Volk,dvirsky@gmail.com,Thu Dec 7 17:19:04 2017 +0200,1512659944,Fix indentation and comment style in testmodule,92.0,98.0,"src/modules/testmodule.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,451.0,10.0,9.750219907407407,51.0,1.1025617893233652,51.0,Corrective,True,,
613831f82023601df874b9cfa9a1935ff942ceb6,10efdf307b09d57b9b9b499cecca3cc4f7aed197,Dvir Volk,dvirsky@gmail.com,Wed Feb 14 21:50:42 2018 +0200,1518637842,Add REDISMODULE_NOTIFY_STREAM flag to support stream notifications,2.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,405.0,50.0,79.2227662037037,52.0,1.0126226342239644,52.0,Feature Addition,False,,
10efdf307b09d57b9b9b499cecca3cc4f7aed197,0a36196ce47e1ee6db6c2e5461777e72ea504143,Dvir Volk,dvirsky@gmail.com,Wed Feb 14 21:54:00 2018 +0200,1518638040,Add doc comment about notification flags,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4193.0,132.0,69.19356481481482,53.0,1.0144522110210152,53.0,Feature Addition,False,,
4f2d279dd704ebf0e9ebab85bc74269b523eda8a,f4dc736ccadedefe156a3b9c278e06cb2c55f0a1,antirez,antirez@gmail.com,Thu Feb 15 21:33:06 2018 +0100,1518726786,Fix typo in notifyKeyspaceEvent() comment.,1.0,1.0,"src/notify.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,138.0,14.0,70.23425925925926,10233.0,1.0142380657324035,5303.0,Corrective,True,,
f4dc736ccadedefe156a3b9c278e06cb2c55f0a1 0a36196ce47e1ee6db6c2e5461777e72ea504143,7830f8492fde42eb213ee82131cc1c982bb319e1,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 15 21:36:32 2018 +0100,1518726992,Merge pull request #4479 from dvirsky/notifyKeyspace notifications API for modules,,,,,,,,,,,,,,,Merge,False,,
7830f8492fde42eb213ee82131cc1c982bb319e1,aa57481d8ce69938b20a2a7ea8ba06daadbc2dcd,antirez,antirez@gmail.com,Thu Feb 15 21:41:03 2018 +0100,1518727263,Remove non semantical spaces from module.c.,36.0,41.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4194.0,133.0,1.032673611111111,10234.0,1.9683601761877545,5304.0,None,False,True,"[""acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95""]"
aa57481d8ce69938b20a2a7ea8ba06daadbc2dcd,ffde73c57d0aa5cd58869c13cb1b76d6c27ef5b7,antirez,antirez@gmail.com,Mon Feb 19 11:12:49 2018 +0100,1519035169,"Track number of logically expired keys still in memory.This commit adds two new fields in the INFO output, stats section:nnexpired_stale_perc:0.34nexpired_time_cap_reached_count:58nnThe first field is an estimate of the number of keys that are yet innmemory but are already logically expired. They reason why those keys arenyet not reclaimed is because the active expire cycle can't spend morentime on the process of reclaiming the keys, and at the same time nobodynis accessing such keys. However as the active expire cycle runs, whilenit will eventually have to return to the caller, because of time limitnor because there are less than 25% of keys logically expired in eachngiven database, it collects the stats in order to populate this INFOnfield.nnNote that expired_stale_perc is a running average, where the currentnsample accounts for 5% and the history for 95%, so you'll see itnchanging smoothly over time.nnThe other field, expired_time_cap_reached_count, counts the numbernof times the expire cycle had to stop, even if still it was finding ansizeable number of keys yet to expire, because of the time limit.nThis allows people handling operations to understand if the Redisnserver, during mass-expiration events, is able to collect keys fastnenough usually. It is normal for this field to increment during massnexpires, but normally it should very rarely increment. When instead itnconstantly increments, it means that the current workloads is usingna very important percentage of CPU time to expire keys.nnThis feature was created thanks to the hints of Rashmi Ramesh andnBart Robinson from Twitter. In private email exchanges, they noted hownit was important to improve the observability of this parameter in thenRedis server. Actually in big deployments, the amount of keys that arenyet to expire in each server, even if they are logically expired, maynaccount for a very big amount of wasted memory.n",28.0,1.0,"src/expire.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0735519991730582,15.0,2159.333333333333,324.0,65.5239737654321,10236.0,1.0081238197285065,5307.0,Feature Addition,False,,
ffde73c57d0aa5cd58869c13cb1b76d6c27ef5b7,5def65008ff92519a828e1ba403e9a46836ca802,Oran Agra,oran@redislabs.com,Wed Feb 21 11:04:13 2018 +0200,1519203853,"Fix zrealloc to behave similarly to je_realloc when size is 0According to C11, the behavior of realloc with size 0 is now deprecated.nit can either behave as free(ptr) and return NULL, or return a valid pointer.nbut in zmalloc it can lead to zmalloc_oom_handler and panic.nand that can affect modules that use it.nnIt looks like both glibc allocator and jemalloc behave like so:n  realloc(malloc(32),0) returns NULLn  realloc(NULL,0) returns a valid pointernnThis commit changes zmalloc to behave the samen",4.0,0.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,411.0,40.0,287.75303240740743,47.0,1.0034752022998117,41.0,Corrective,True,,
ffde73c57d0aa5cd58869c13cb1b76d6c27ef5b7,1dd67ebceb2b44d202d09400b9bf02af62c35362,artix,artix2@gmail.com,Fri Jan 12 11:06:24 2018 +0100,1515751584,Cluster Manager mode,108.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,2978.0,196.0,29.46994212962963,0.0,0.0,0.0,None,False,,
1dd67ebceb2b44d202d09400b9bf02af62c35362,bafdc1a56cbb8c56b28d144789e986c3598ee5c7,artix,artix2@gmail.com,Wed Jan 31 16:26:21 2018 +0100,1517412381,"Cluster Manager: 'create', 'info' and 'check' commands",1272.0,27.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.016604726044914062,14.0,1687.5,347.0,86.71036458333332,1.5,1.0061257344944965,2.0,None,False,True,"[""87f5a7c0b4c4f207982a39b1c6d668de1e009931"", ""fb41b8bb9c6de44ebfd56759efcd7f3edc22aedc""]"
bafdc1a56cbb8c56b28d144789e986c3598ee5c7,74dcd14d1333bc312703de5ba143f41d6973815d,artix,artix2@gmail.com,Wed Jan 31 17:57:16 2018 +0100,1517417836,Added check for open slots (clusterManagerCheckCluster),143.0,19.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4330.0,198.0,0.06313657407407408,3.0,16.838680109990836,3.0,Feature Addition,False,,
74dcd14d1333bc312703de5ba143f41d6973815d,d38045805d45a1b990f38d7c2c2edabb9912f711,artix,artix2@gmail.com,Wed Jan 31 19:25:02 2018 +0100,1517423102,- Cluster Manager: fixed various memory leaks - Cluster Manager: fixed flags assignment in   clusterManagerNodeLoadInfo,37.0,17.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4454.0,199.0,0.06094907407407407,4.0,17.407140144322067,4.0,None,False,,
d38045805d45a1b990f38d7c2c2edabb9912f711,be7e2b84bdd4f5b37878768cc0b8a91c0448af11,artix,artix2@gmail.com,Thu Feb 1 17:43:36 2018 +0100,1517503416,Cluster Manager: slots coverage check.,31.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4474.0,200.0,0.9295601851851852,5.0,2.0757775730258734,5.0,None,False,,
be7e2b84bdd4f5b37878768cc0b8a91c0448af11,1b1f80e60f69a94873e062b87b7b802f412d7136,artix,artix2@gmail.com,Thu Feb 1 20:09:30 2018 +0100,1517512170,Cluster Manager: reply error catch for MEET command,10.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4504.0,201.0,0.10131944444444443,6.0,10.869773817683344,6.0,None,False,,
1b1f80e60f69a94873e062b87b7b802f412d7136,956bec4ca8a73b51b984fd7186c2baa734c065ed,artix,artix2@gmail.com,Wed Feb 7 11:29:25 2018 +0100,1517999365,Cluster Manager: cluster is considered consistent if only one node has been found,4.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4513.0,202.0,5.638831018518517,7.0,1.1773417214872894,7.0,None,False,,
956bec4ca8a73b51b984fd7186c2baa734c065ed,dad69ac320eb97191ab8a1bea7eea223e8d2f4a6,artix,artix2@gmail.com,Wed Feb 7 12:02:56 2018 +0100,1518001376,ClusterManager: added replicas count to clusterManagerNode,40.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4516.0,203.0,0.023275462962962963,8.0,43.963699651914474,8.0,None,False,,
dad69ac320eb97191ab8a1bea7eea223e8d2f4a6,7b9f945b3700c3e52cb7fd55a44ac8104267babb,artix,artix2@gmail.com,Fri Feb 9 13:02:37 2018 +0100,1518177757,Cluster Manager: CLUSTER_MANAGER_NODE_CONNECT macro,5.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4555.0,204.0,2.041446759259259,9.0,1.4898486798464687,9.0,None,False,,
7b9f945b3700c3e52cb7fd55a44ac8104267babb,8128f1bf03ea73f3c3d08936f4556b12ef0c5d72,artix,artix2@gmail.com,Tue Feb 13 12:00:06 2018 +0100,1518519606,Cluster Manager: 'call' command.,58.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4557.0,205.0,3.956585648148148,10.0,1.2527431702301308,10.0,None,False,,
8128f1bf03ea73f3c3d08936f4556b12ef0c5d72,4ca8dbdc2b943e2d0bf71354118d8f562aa92178,artix,artix2@gmail.com,Wed Feb 14 17:54:46 2018 +0100,1518627286,Cluster Manager: improved cleanup/error handling in various functions,56.0,45.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4615.0,206.0,1.2462962962962962,11.0,1.8023774145616642,11.0,None,False,,
4ca8dbdc2b943e2d0bf71354118d8f562aa92178,605d7262e6e4c565fae7ed131825c2e1eea3a1cf,artix,artix2@gmail.com,Wed Feb 14 19:29:28 2018 +0100,1518632968,Cluster Manager: colorized output,95.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4626.0,207.0,0.06576388888888889,12.0,16.205913410770854,12.0,None,False,,
605d7262e6e4c565fae7ed131825c2e1eea3a1cf,87f5a7c0b4c4f207982a39b1c6d668de1e009931,artix,artix2@gmail.com,Tue Feb 20 12:01:13 2018 +0100,1519124473,- Fixed bug in clusterManagerGetAntiAffinityScore - Code improvements,28.0,29.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4686.0,208.0,5.688715277777778,13.0,1.1757866145817435,13.0,Corrective,True,,
87f5a7c0b4c4f207982a39b1c6d668de1e009931,8f4f001dc37c27c9a35ef17a5a4fcfd6520bd311,artix,artix2@gmail.com,Thu Feb 22 18:32:39 2018 +0100,1519320759,Cluster Manager: - Almost all Cluster Manager related code moved to   the same section. - Many macroes converted to functions - Added various comments - Little code restyling,272.0,190.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4685.0,209.0,2.2718287037037035,14.0,1.4401740317699685,14.0,None,False,,
ffde73c57d0aa5cd58869c13cb1b76d6c27ef5b7,d4e6d1086fd9004a23b957aba048df41d6afac14,gechunlin,gechunlin@me.com,Thu Feb 22 20:57:54 2018 -0600,1519354674,Update object.c,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1233.0,128.0,48.94548611111111,0.0,0.0,0.0,None,False,,
ffde73c57d0aa5cd58869c13cb1b76d6c27ef5b7,813960dbdd86b88b509b2946dbaa023e0ae8b1b9,antirez,antirez@gmail.com,Fri Feb 23 12:19:30 2018 +0100,1519384770,Fix ziplist prevlen encoding description. See #4705.,6.0,6.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1932.0,57.0,37.85861111111111,10238.0,1.026414069894564,5308.0,Corrective,True,,
813960dbdd86b88b509b2946dbaa023e0ae8b1b9 f86df924b01db43eb68f5c4b4cac4c44c1507390,d8830200b48b7f0b050e56f0c4e570311bcf7e3e,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 27 04:04:32 2018 -0800,1519733072,Merge pull request #3828 from oranagra/sdsnewlen_pradd SDS_NOINIT option to sdsnewlen to avoid unnecessary memsets.,,,,,,,,,,,,,,,Merge,False,,
d8830200b48b7f0b050e56f0c4e570311bcf7e3e,548e478e4092e8a17faf638d84bb6e05d155f72b,antirez,antirez@gmail.com,Fri Feb 23 17:42:24 2018 +0100,1519404144,"ae.c: introduce the concept of read->write barrier.AOF fsync=always, and certain Redis Cluster bus operations, require tonfsync data on disk before replying with an acknowledge.nIn such case, in order to implement Group Commits, we want to be surenthat queries that are read in a given cycle of the event loop, are nevernserved to clients in the same event loop iteration. This way, by usingnthe event loop before sleep callback, we can fsync the informationnjust one time before returning into the event loop for the next cycle.nThis is much more efficient compared to calling fsync() multiple times.nnUnfortunately because of a bug, this was not always guaranteed: thenactual way the events are installed was the sole thing that couldncontrol. Normally this problem is hard to trigger when AOF is enablednwith fsync=always, because we try to flush the output buffers to thensocekt directly in the beforeSleep() function of Redis. However if thenoutput buffers are full, we actually install a write event, and in suchna case, this bug could happen.nnThis change to ae.c modifies the event loop implementation to make thisnconcept explicit. Write events that are registered with:nnAE_WRITABLE|AE_BARRIERnnAre guaranteed to never fire after the readable event was fired for thensame file descriptor. In this way we are sure that data is persisted tondisk before the client performing the operation receives annacknowledged.nnHowever note that this semantics does not provide all the guaranteesnthat one may believe are automatically provided. Take the example of thenblocking list operations in Redis.nnWith AOF and fsync=always we could have:nnClient A doing: BLPOP myqueue 0nClient B doing: RPUSH myqueue a b cnnIn this scenario, Client A will get the a elements immediately afternthe Client B RPUSH will be executed, even before the operation is persisted.nHowever when Client B will get the acknowledge, it can be sure thatnb,c are already safe on disk inside the list.nnWhat to note here is that it cannot be assumed that Client A receivingnthe element is a guaranteed that the operation succeeded from the pointnof view of Client B.nnThis is due to the fact that the barrier exists within the same socket,nand not between different sockets. However in the case above, thenelement a was not going to be persisted regardless, so it is a prettynsynthetic argument.n",29.0,6.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER",2.0,1.0,1.0,0.9517626756348312,14.0,302.0,30.0,227.7698148148148,10239.5,1.0032927980409072,5310.0,None,False,,
548e478e4092e8a17faf638d84bb6e05d155f72b,533d0e0375d3999e7bdb7880d8d77e910284151a,antirez,antirez@gmail.com,Tue Feb 27 10:25:08 2018 +0100,1519723508,"Cluster: improve crash-recovery safety after failover auth vote.Add AE_BARRIER to the writable event loop so that slaves requestingnvotes can't be served before we re-enter the event loop in the nextniteration, so clusterBeforeSleep() will fsync to disk in time.nAlso add the call to explicitly fsync, given that we modified the lastnvote epoch variable.n",3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5518.0,529.0,39.90559027777777,10241.0,1.0250591456745566,5311.0,None,False,,
533d0e0375d3999e7bdb7880d8d77e910284151a,75987431f008e0072a70e7d5c001c1724a7fb421,antirez,antirez@gmail.com,Tue Feb 27 10:40:40 2018 +0100,1519724440,"AOF: fix a bug that may prevent proper fsyncing when fsync=always.In case the write handler is already installed, it could happen that wenserve the reply of a query in the same event loop cycle we received it,npreventing beforeSleep() from guaranteeing that we do the AOF fsyncnbefore sending the reply to the client.nnThe AE_BARRIER mechanism, introduced in a previous commit, prevents thisnproblem. This commit makes actual use of this new feature to fix thenbug.n",18.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2088.0,279.0,13.7771875,10242.0,1.072583754848368,5312.0,None,False,True,"[""3a5bf75ede389981f1e63b305dad431c8ccc91ea""]"
75987431f008e0072a70e7d5c001c1724a7fb421,956350ef8951c56878c593dfd775693059c44056,antirez,antirez@gmail.com,Tue Feb 27 12:16:26 2018 +0100,1519730186,"ae.c: insetad of not firing, on AE_BARRIER invert the sequence.AE_BARRIER was implemented like:nn- Fire the readable event.n- Do not fire the writabel event if the readable fired.nnHowever this may lead to the writable event to never be called if thenreadable event is always fired. There is an alterantive, we can justninvert the sequence of the calls in case AE_BARRIER is set. This commitndoes that.n",38.0,22.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,496.0,22.0,3.7736342592592593,10243.0,1.264996534188847,5313.0,None,False,True,"[""46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc""]"
d8830200b48b7f0b050e56f0c4e570311bcf7e3e,6168d5a1a64631182a7698f2f97f827d6a8aa7f3,charsyam,charsyam@gmail.com,Tue Feb 27 21:46:19 2018 +0900,1519735579,fix-out-of-index-range-for-redis-cli-findbigkey,3.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4767.0,210.0,4.801157407407407,20.0,1.20828311074683,20.0,Corrective,True,,
d8830200b48b7f0b050e56f0c4e570311bcf7e3e,76386c48b89d703df54b8df88b47cfd5854df69a,charsyam,charsyam@gmail.com,Tue Feb 27 21:55:20 2018 +0900,1519736120,refactoring-make-condition-clear-for-rdb,2.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2136.0,210.0,68.15592592592593,21.0,1.0146722384945197,21.0,None,False,,
956350ef8951c56878c593dfd775693059c44056,b00c4ffab5e79cc90108cad01dad7717cf2a3615,antirez,antirez@gmail.com,Tue Feb 27 16:37:37 2018 +0100,1519745857,expireIfNeeded() comment: claim -> pretend.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1478.0,195.0,16.10798611111111,10244.0,1.062081007091893,5314.0,None,False,,
b00c4ffab5e79cc90108cad01dad7717cf2a3615,92696e49d2cd497eb9287026ee490adcaaba90bb,antirez,antirez@gmail.com,Tue Feb 27 16:44:39 2018 +0100,1519746279,expireIfNeeded() needed a top comment documenting the behavior.,19.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1478.0,196.0,0.004884259259259259,10245.0,205.739336492891,5315.0,Non Functional,False,,
92696e49d2cd497eb9287026ee490adcaaba90bb 76386c48b89d703df54b8df88b47cfd5854df69a,7a73db7512b6152293e2b10ae0d8b6201e348e74,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 27 10:15:27 2018 -0800,1519755327,Merge pull request #4715 from charsyam/feature/refactoring-make-condition-clear-for-rdb[BugFix] fix calculation length in rdbSaveAuxField,,,,,,,,,,,,,,,Merge,False,,
8f4f001dc37c27c9a35ef17a5a4fcfd6520bd311,2f056b83318a0daf13ac6be9e549f0f2c2ba97fb,artix,artix2@gmail.com,Wed Feb 28 10:44:11 2018 +0100,1519811051,"Cluster Manager: reshard command, fixed slots parsing bug and other minor bugs.",593.0,62.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4768.0,211.0,0.8735185185185185,15.0,2.144795420818317,15.0,None,False,True,"[""fb41b8bb9c6de44ebfd56759efcd7f3edc22aedc""]"
2f056b83318a0daf13ac6be9e549f0f2c2ba97fb,fb41b8bb9c6de44ebfd56759efcd7f3edc22aedc,artix,artix2@gmail.com,Wed Feb 28 11:49:10 2018 +0100,1519814950,Fixed memory write error in clusterManagerGetConfigSignature,5.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5299.0,212.0,0.04512731481481482,16.0,23.15952808412413,16.0,Corrective,True,,
fb41b8bb9c6de44ebfd56759efcd7f3edc22aedc,ce14d23740a465e0ed2daa65288c397c311eda95,Artix,artix2@gmail.com,Wed Feb 28 15:21:08 2018 +0100,1519827668,Cluster Manager: fixed some memory error,8.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5300.0,213.0,0.14719907407407407,0.0,0.0,0.0,None,False,,
7a73db7512b6152293e2b10ae0d8b6201e348e74,3a5bf75ede389981f1e63b305dad431c8ccc91ea,antirez,antirez@gmail.com,Wed Feb 28 18:03:51 2018 +0100,1519837431,Actually use ae_flags to add AE_BARRIER if needed.Many thanks to @Plasma that spotted this problem reviewing the code.n,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2100.0,280.0,1.3077662037037037,10246.0,1.7646626722482321,5316.0,Corrective,True,,
3a5bf75ede389981f1e63b305dad431c8ccc91ea 6168d5a1a64631182a7698f2f97f827d6a8aa7f3,83b5b5a476e08152c0e91b11bffd852bb2fe64a6,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 1 03:39:15 2018 -0800,1519904355,Merge pull request #4714 from charsyam/feature/fix-out-of-index-range[BugFix] Fix out of array index range for findBigKeys in redis-cli,,,,,,,,,,,,,,,Merge,False,,
83b5b5a476e08152c0e91b11bffd852bb2fe64a6,51a03f6356973a45e3ff7baa675a3e8f2a1be6f9,charsyam,charsyam@naver.com,Wed Feb 22 14:26:21 2017 +0900,1487741181,fix dlopen leak,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4189.0,134.0,-358.6352083333333,22.0,0.997211651347208,22.0,Corrective,True,,
83b5b5a476e08152c0e91b11bffd852bb2fe64a6,da7f5700cf1a1680accf563622debb82e5f9ef26,charsyam,charsyam@gmail.com,Thu Mar 1 22:30:39 2018 +0900,1519911039,refactoring-call-aeDeleteFileEvent-twice-in-freeClusterLink,1.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5519.0,530.0,2.170497685185185,23.0,1.4607238269939369,23.0,None,False,,
83b5b5a476e08152c0e91b11bffd852bb2fe64a6,d63caaa8200372773347f34de116d6e62fe174f4,antirez,antirez@gmail.com,Thu Mar 1 15:06:41 2018 +0100,1519913201,redis-cli: fix missed unit in array. Change define name.,5.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5305.0,214.0,0.9899652777777778,10247.0,2.0101364385675704,5317.0,None,False,True,"[""b6de51206e8fd79269d05f0fed3f396683d75446""]"
d63caaa8200372773347f34de116d6e62fe174f4,efcbc01fbd05dc2d203cb47dd4f48258e4925880,antirez,antirez@gmail.com,Thu Mar 1 15:26:27 2018 +0100,1519914387,Remove warning from lpGet snprintf().,1.0,1.0,"src/listpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,783.0,2.0,106.10966435185185,10248.0,1.0094242122629289,5318.0,None,False,,
efcbc01fbd05dc2d203cb47dd4f48258e4925880,84b281209a653f8afe5b106ab44d8339fd798823,antirez,antirez@gmail.com,Thu Mar 1 17:25:59 2018 +0100,1519921559,Stream: update the listpack pointer in streamTrimByLength().,3.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1053.0,39.0,87.22689814814815,10249.0,1.0114643535564176,5319.0,None,False,,
84b281209a653f8afe5b106ab44d8339fd798823,f4eb64cd3537ce34e0125fa1fb6cccb6dbfc3e48,pan.liangp,pan.liangp@r10f07454.sqa.zmf,Fri Mar 2 17:16:00 2018 +0800,1519982160,move get clients max buffer calculate into info clients command,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,3925.0,155.0,10.960543981481482,0.0,0.0,0.0,None,False,,
ce14d23740a465e0ed2daa65288c397c311eda95,d518733073de78f6fa3bb1dbf3992639dd672138,artix,artix2@gmail.com,Fri Mar 2 17:06:50 2018 +0100,1520006810,ClusterManager: fixed --cluster-from 'all' parsing,12.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5305.0,215.0,1.0834375,17.0,1.9229881742140176,17.0,None,False,,
d518733073de78f6fa3bb1dbf3992639dd672138,a4cfd503ea1f5b112032e9edf7b564d5d7eced93,artix,artix2@gmail.com,Tue Mar 6 13:06:04 2018 +0200,1520334364,clusterManagerAddSlots: changed the way ADDSLOTS command is built,18.0,20.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5308.0,216.0,3.7911342592592594,18.0,1.263773301501432,18.0,Feature Addition,False,,
3a5bf75ede389981f1e63b305dad431c8ccc91ea,290a63dc54f9cd2a61681be3849f1d9d481aa060,Guy Benoish,guy.benoish@redislabs.com,Tue Mar 6 19:34:44 2018 +0700,1520339684,Don't call sdscmp() with shared.maxstring or shared.minstring,23.0,9.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9886994082884974,14.0,2057.5,170.0,107.5995023148148,7.5,1.0079919366028527,7.0,None,False,,
3a5bf75ede389981f1e63b305dad431c8ccc91ea,b660fc2fbe545f4a20a907ffa6c8333396435907,Guy Benoish,guy.benoish@redislabs.com,Wed Mar 7 10:40:37 2018 +0700,1520394037,Fix zlexrangespec mem-leak in genericZrangebylexCommand,4.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,3071.0,134.0,0.6290856481481482,9.0,2.589608669254687,8.0,Corrective,True,,
84b281209a653f8afe5b106ab44d8339fd798823,6470b21f59d0c73fac2a08a477ed4ff1770ad3aa,Otmar Ertl,otmar.ertl@gmail.com,Sat Mar 10 20:09:41 2018 +0100,1520708981,replaced tab by spaces,4.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1581.0,104.0,78.36331018518518,0.0,0.0,0.0,None,False,,
6470b21f59d0c73fac2a08a477ed4ff1770ad3aa,1e9a7748716e1cd234893dd858d07ffa77920e41,Otmar Ertl,otmar.ertl@gmail.com,Sat Mar 10 20:13:21 2018 +0100,1520709201,improved HyperLogLog cardinality estimationbased on method described in https://arxiv.org/abs/1702.01284nthat does not rely on any magic constantsn,117.0,113.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1581.0,105.0,0.0025462962962962965,1.0,393.7272727272728,1.0,None,False,True,"[""15d7e617016220a33b7c98f0c0c0dfd219e2e330""]"
1e9a7748716e1cd234893dd858d07ffa77920e41,633983d4796a48949a0268c8593b26ff5f0206e2,Otmar Ertl,otmar.ertl@gmail.com,Sat Mar 10 20:22:42 2018 +0100,1520709762,improved definition of HLL_Q,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1585.0,106.0,0.006493055555555557,2.0,155.01069518716577,2.0,None,False,,
633983d4796a48949a0268c8593b26ff5f0206e2,44698f45e759eb7503578bfc18ec6bee80299fed,Otmar Ertl,otmar.ertl@gmail.com,Sat Mar 10 20:44:20 2018 +0100,1520711060,made constant static,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1585.0,107.0,0.015023148148148147,3.0,67.56394453004623,3.0,None,False,True,"[""15d7e617016220a33b7c98f0c0c0dfd219e2e330""]"
44698f45e759eb7503578bfc18ec6bee80299fed,97bde9f6236b65aa5a9165554f7ca690b59c2903,Otmar Ertl,otmar.ertl@gmail.com,Sun Mar 11 09:18:00 2018 +0100,1520756280,use all 64 bits of the hash value instead of 63,7.0,4.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1585.0,108.0,0.5233796296296296,4.0,2.9106590004422825,4.0,None,False,,
aa57481d8ce69938b20a2a7ea8ba06daadbc2dcd,be1b4aa9aa76d15bb57b7159cb559a8b9dde5513,Oran Agra,oran@redislabs.com,Sun Feb 18 17:15:22 2018 +0200,1518966922,"active defrag v2- big keys are not defragged in one go from within the dict scann  instead they are scanned in parts after the main dict hash bucket is done.n- add latency monitor sample for defragn- change default active-defrag-cycle-min to induce lower latencyn- make active defrag start a new scan right away if needed, so it's easiern  (for the test suite) to detect when it's donen- make active defrag quick the current cycle after each db / big keyn- defrag  some non key long term global allocationsn- some refactoring for smaller functions and more reusable coden- during dict rehashing, one scan iteration of the dict, can end up scanningn  one bucket in the smaller dict and many many buckets in the larger dict.n  so waiting for 16 scan iterations before checking the time, may be much too long.n",551.0,133.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,2.0,2.0,0.29510623402332914,15.0,1997.0,717.0,25.83094444444444,50.0,1.013003548601445,45.0,Feature Addition,False,True,"[""e4e5a670e7e28485d6ba812759d7faabd90966d2"", ""fb4ee7f0c5ad81cae88a10587d5246a1b4f4dd84"", ""d1a005ab3963c16b65e805675a76f0e40c723158""]"
be1b4aa9aa76d15bb57b7159cb559a8b9dde5513,806736cdf91658e7a8e1a2d8631b82763b508c36,Oran Agra,oran@redislabs.com,Sun Feb 18 17:36:21 2018 +0200,1518968181,"Adding real allocator fragmentation to INFO and MEMORY command + active defrag testother fixes / improvements:n- LUA script memory isn't taken from zmalloc (taken from libc malloc)n  so it can cause high fragmentation ratio to be displayed (which is false)n- there was a problem with fragmentation info being calculated fromn  RSS and used_memory sampled at different times (now sampling them together)nnother details:n- adding a few more allocator info fields to INFO and MEMORY commandsn- improve defrag test to measure defrag latency of big keysn- increasing the accuracy of the defrag test (by looking at real grag info)n  this way we can use an even lower threshold and still avoid false positivesn- keep the old (total) fragmentation field unchanged, but add new ones for spcific thingsn- add these the MEMORY DOCTOR commandn- deduct LUA memory from the rss in case of non jemalloc allocator (one for which we don't allocator active/used)n- reduce sampling rate of the rss and allocator infon",333.0,72.0,"src/defrag.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",8.0,2.0,3.0,2.1421157292194763,15.0,1169.75,628.0,92.0007421875,56.5,9.477298582562993,7.0,Corrective,True,True,"[""ad133e10238eed678694160dc0eecd70c30d0232"", ""98d5d3f118eebb1d1e86625ab0ff808d019456bb"", ""f89c93c8adf2dea395224c5c65d82e90aa323bfd"", ""b587c54c24d0cfdc3cfb22303553ea5e780b87c1"", ""6a2831c24affd565b111398846c6cf6e40eca6e7""]"
84b281209a653f8afe5b106ab44d8339fd798823,432bf4770e8f2c11e63477620e4765abfbdf91f5,antirez,antirez@gmail.com,Wed Mar 14 13:46:36 2018 +0100,1521031596,"Cluster: ability to prevent slaves from failing over their masters.This commit, in some parts derived from PR #3041 which is no longernpossible to merge (because the user deleted the original branch),nimplements the ability of slaves to have a special configurationnpreventing that they try to start a failover when the master is failing.nnThere are multiple reasons for wanting this, and the feautre wasnrequested in issue #3021 time ago.nnThe differences between this patch and the original PR are thenfollowing:nn1. The flag is saved/loaded on the nodes configuration.n2. The 'myself' node is now flag-aware, the flag is updated as neededn   when the configuration is changed via CONFIG SET.n3. The flag name uses NOFAILOVER instead of NO_FAILOVER to be consistentn   with existing NOADDR.n4. The redis.conf documentation was rewritten.nnThanks to @deep011 for the original patch.n",70.0,2.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,2.0,2.0,1.7059073731220138,15.0,2546.5,1288.0,65.2449575617284,10252.5,1.013380540407015,5324.0,None,False,,
432bf4770e8f2c11e63477620e4765abfbdf91f5,d8207d09eedb08c8d70bff3ed91e2f5307e9dcf8,antirez,antirez@gmail.com,Wed Mar 14 16:30:32 2018 +0100,1521041432,Cluster: add test for the nofailover flag.,71.0,0.0,"tests/cluster/cluster.tcl,CAS_DELIMITER,tests/cluster/tests/13-no-failover-option.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.5864477034453908,13.0,65.0,7.0,660.9391435185186,10256.5,1.0007564993008862,751.0,None,False,,
97bde9f6236b65aa5a9165554f7ca690b59c2903,15d7e617016220a33b7c98f0c0c0dfd219e2e330,Otmar Ertl,otmar.ertl@gmail.com,Wed Mar 14 21:00:06 2018 +0100,1521057606,fixed compilation error when using clang as reported by michael-grunder,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1588.0,109.0,3.4875694444444445,5.0,1.2867326417235818,5.0,Corrective,True,,
d8207d09eedb08c8d70bff3ed91e2f5307e9dcf8,c76f890209d923ac4fb81b22a01320dca70a060c,charsyam,charsyam@gmail.com,Thu Mar 15 20:32:08 2018 +0900,1521113528,fix listpack.c to listpack.o in Makefile,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,290.0,151.0,42.83734953703704,24.0,1.0233441146758018,24.0,Corrective,True,,
d8207d09eedb08c8d70bff3ed91e2f5307e9dcf8,58f0c000a5630d22c221bc4291b46f2fc1654ead,antirez,antirez@gmail.com,Tue Jan 16 15:38:22 2018 +0100,1516113502,CG: data structures design + XGROUP CREATE implementation.,143.0,2.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,1.0502529612633662,15.0,1792.0,368.0,-24.456605902777767,10259.5,0.9862055186665074,5328.0,None,False,True,"[""fac3e8aab55671bc8842214e7384f4174deb6578"", ""492fd5c01105ee5dc1aa73a0f19a7201e86b9815""]"
58f0c000a5630d22c221bc4291b46f2fc1654ead,1fafe7def15de73bd66271c9632584c456ea41e2,antirez,antirez@gmail.com,Fri Jan 19 09:52:34 2018 +0100,1516351954,CG: fix raxFind() retval check in streamCreateCG().,2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1156.0,41.0,2.759861111111112,10262.0,1.3623370741281264,5329.0,None,False,,
1fafe7def15de73bd66271c9632584c456ea41e2,2bbb2bf42710c755698019beaef8b9ab281fddc2,antirez,antirez@gmail.com,Fri Jan 19 10:40:08 2018 +0100,1516354808,CG: XGROUPREAD group option parsing and groups lookup.,66.0,8.0,"src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.1792560669283215,15.0,627.5,48.0,1.4129629629629632,10263.5,1.3559589598493191,5331.0,None,False,,
2bbb2bf42710c755698019beaef8b9ab281fddc2,bd1c11dc35ce34d137232f9c04f76ddb4de40354,antirez,antirez@gmail.com,Fri Jan 19 11:06:39 2018 +0100,1516356399,CG: add XREADGROUP in the command table.,1.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,3979.0,160.0,2.81130787037037,10265.0,1.3557063281967254,5332.0,None,False,True,"[""fe56c6740520b6fef2646d757896861c49faee0a""]"
bd1c11dc35ce34d137232f9c04f76ddb4de40354,b8e52321612f3fa7a3a78779700d74df99b154cf,antirez,antirez@gmail.com,Fri Jan 19 11:11:52 2018 +0100,1516356712,CG: fix parsing in XREADGROUP and streamLookupCG() NULL check.,3.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1215.0,43.0,0.02203703703703704,10266.0,46.37815126050421,5333.0,None,False,,
b8e52321612f3fa7a3a78779700d74df99b154cf,ccdae09046e05dae4d2e23a8a98a3ab7305c8d76,antirez,antirez@gmail.com,Fri Jan 19 16:39:09 2018 +0100,1516376349,CG: add & populate group+consumer in the blocking state.,13.0,8.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,1.2800199734315578,15.0,1469.5,516.0,6.5864901620370375,10268.5,1.0338541106686518,5337.0,None,False,,
ccdae09046e05dae4d2e23a8a98a3ab7305c8d76,86fe8fde2098f912f345e8c9385e678bba8fd2b2,antirez,antirez@gmail.com,Fri Jan 19 17:18:06 2018 +0100,1516378686,CG: consumer lookup + initial streamReplyWithRange() work to supprot CG.,44.0,8.0,"src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.7732283485249176,15.0,601.0,79.0,0.11015432098765432,10272.0,15.430785229751566,5340.0,None,False,,
86fe8fde2098f912f345e8c9385e678bba8fd2b2,6c0af37b6eb8d337b6c6204cf05b1ebf817f42fc,antirez,antirez@gmail.com,Mon Jan 22 11:58:18 2018 +0100,1516618698,CG: streamCompareID() + group last_id updating.,33.0,4.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1251.0,46.0,2.7779166666666666,10274.0,1.359982000899955,5341.0,None,False,True,"[""c9d9ae7baaf717607db3d4ad81597dc99d0c002c"", ""b12d2f65d660b4139b322af90b6ef60ed267210b""]"
6c0af37b6eb8d337b6c6204cf05b1ebf817f42fc,1ffb6723f52a1473385b7284ec0e53733083ddab,antirez,antirez@gmail.com,Mon Jan 22 12:09:35 2018 +0100,1516619375,CG: fix XREADGROUP > special ID parsing due to missing continue.,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1280.0,47.0,0.007835648148148149,10275.0,128.62186115214178,5342.0,None,False,,
1ffb6723f52a1473385b7284ec0e53733083ddab,41809fd969cb763c0323124aefaaaa2f5ab77839,antirez,antirez@gmail.com,Tue Jan 23 18:52:24 2018 +0100,1516729944,CG: creation of NACK entries in PELs.,75.0,24.0,"src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.6633673538632712,15.0,623.0,84.0,3.13690200617284,10277.0,1.1584071737043349,5345.0,None,False,True,"[""36b392a0b2528ad22f016e9ca8fce93eb6dab3a0""]"
41809fd969cb763c0323124aefaaaa2f5ab77839,bbec4569a57df0ee14e64f64caa6bb0b12c7f9db,antirez,antirez@gmail.com,Wed Jan 24 16:47:39 2018 +0100,1516808859,CG: Fix order of calls in streamReplyWithRange().We need to check if we are going to serve the request via the PEL beforeninserting a deferred array len in the client output buffer.n,2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1333.0,49.0,0.9133680555555556,10279.0,2.094848888044098,5346.0,None,False,,
bbec4569a57df0ee14e64f64caa6bb0b12c7f9db,aa808394f64ce735311f63bea1a142d5fab9bc82,antirez,antirez@gmail.com,Wed Jan 24 18:51:23 2018 +0100,1516816283,CG: first draft of streamReplyWithRangeFromConsumerPEL().,81.0,22.0,"src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.13815722856252646,15.0,716.0,59.0,0.5426099537037037,10280.5,1.9610893699256584,5348.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""48d8b3d8ac8de4db033d8836986065b8a41e01dc""]"
aa808394f64ce735311f63bea1a142d5fab9bc82,5bbd117c290755d796f17be81fe22a4460ba9b80,antirez,antirez@gmail.com,Thu Jan 25 11:30:28 2018 +0100,1516876228,CG: XREADGROUP can fetch data from the consumer PEL.,25.0,14.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1393.0,51.0,0.6938078703703704,10282.0,2.4413212111101843,5349.0,None,False,,
5bbd117c290755d796f17be81fe22a4460ba9b80,388c69fe4efc9f686aaf26af189c6f3de6bae405,antirez,antirez@gmail.com,Thu Jan 25 16:39:49 2018 +0100,1516894789,CG: XACK implementation.,56.0,4.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.24417563365186545,15.0,2487.0,379.0,4.148885030864198,10284.0,1.1075250862263848,5352.0,None,False,True,"[""fe56c6740520b6fef2646d757896861c49faee0a""]"
388c69fe4efc9f686aaf26af189c6f3de6bae405,5ad29325fed710011236763b3b73256ef8319103,antirez,antirez@gmail.com,Fri Jan 26 11:18:34 2018 +0100,1516961914,CG: XACK should return zero when nothing is processed.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1454.0,53.0,0.7769097222222222,10286.0,2.287150837988827,5353.0,None,False,,
5ad29325fed710011236763b3b73256ef8319103,b65fe09bb8d00d9edf07f29274e0405a9d802fe3,antirez,antirez@gmail.com,Fri Jan 26 11:57:19 2018 +0100,1516964239,CG: Now XREADGROUP + blocking operations work.,42.0,8.0,"src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,1.1585488318903812,15.0,680.3333333333334,93.0,1.4837037037037035,10288.0,1.273152790428577,5356.0,None,False,True,"[""34bd44187ae4a5947995abe8f8e26a5dacb3159b""]"
b65fe09bb8d00d9edf07f29274e0405a9d802fe3,1bc31666daa7f59a8a3473e5a57a296351d4f985,antirez,antirez@gmail.com,Fri Jan 26 17:27:34 2018 +0100,1516984054,CG: XPENDING without start/stop variant implemented.,79.0,1.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.19366093149667024,15.0,2507.6666666666665,384.0,0.7652199074074074,10291.0,1.6291538196946391,5359.0,None,False,,
1bc31666daa7f59a8a3473e5a57a296351d4f985,f3708af7f9ea6b3a097d2b33ee7c28624b753215,antirez,antirez@gmail.com,Mon Jan 29 18:23:26 2018 +0100,1517246606,CG: XPENDING with start/stop/count variant implemented.,55.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1540.0,56.0,3.0387962962962964,10293.0,1.3290776684237788,5360.0,None,False,,
f3708af7f9ea6b3a097d2b33ee7c28624b753215,e76fb4ab2546a6febc361d3b9dc4e76711f47f6b,antirez,antirez@gmail.com,Mon Jan 29 18:32:38 2018 +0100,1517247158,CG: XPENDING should not create consumers and obey to count.,15.0,6.0,"src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,1.0230370655328809,15.0,734.3333333333335,98.0,2.1851466049382715,10295.0,1.203542235954167,5363.0,None,False,,
e76fb4ab2546a6febc361d3b9dc4e76711f47f6b,8fb6048ed02881df0960c36b28a8c1634ade448e,antirez,antirez@gmail.com,Wed Jan 31 12:05:04 2018 +0100,1517396704,"CG: RDB saving part 1, metadata and PEL.",73.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2136.0,211.0,-27.076574074074074,10297.0,0.9630677057864014,5364.0,None,False,,
8fb6048ed02881df0960c36b28a8c1634ade448e,db7a5f23b4674224c26628d419e8ca0919a692d9,antirez,antirez@gmail.com,Wed Jan 31 17:06:32 2018 +0100,1517414792,"CG: RDB saving part 2, consumers.",41.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2208.0,212.0,0.20935185185185184,10298.0,5.776647501105706,5365.0,None,False,,
db7a5f23b4674224c26628d419e8ca0919a692d9,f4e1a4de258b75a2ad19805a595a9fbb25e9edbf,antirez,antirez@gmail.com,Wed Feb 14 16:37:24 2018 +0100,1518622644,CG: RDB loading first implementation.,88.0,9.0,"src/rdb.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.516598750491402,15.0,1316.0,283.0,15.273240740740741,10300.0,1.0422672355367852,5368.0,None,False,,
f4e1a4de258b75a2ad19805a595a9fbb25e9edbf,9f60a6bcee16c35eed14408303062a27d6dd0be3,antirez,antirez@gmail.com,Wed Feb 14 18:34:08 2018 +0100,1518629648,"CG: RDB loading, fix inverted conditional.",1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2326.0,214.0,0.08106481481481481,10302.0,13.335808109651628,5369.0,None,False,,
9f60a6bcee16c35eed14408303062a27d6dd0be3,c9d86c2b16a106f90504dbab5c7ba91068975c3a,antirez,antirez@gmail.com,Fri Feb 16 11:55:51 2018 +0100,1518778551,CG: More specific duplicated group error.,13.0,1.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.74959525725948,15.0,799.5,59.0,0.9022395833333332,10303.5,1.5541765283149571,752.0,None,False,,
c9d86c2b16a106f90504dbab5c7ba91068975c3a,18ab0e31f3cc95eb22b6f104049e18910331b4e8,antirez,antirez@gmail.com,Fri Feb 16 11:56:31 2018 +0100,1518778591,CG: test group creation.,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,567.0,105.0,-2.1943287037037043,10305.0,0.5442797615908013,753.0,None,False,,
18ab0e31f3cc95eb22b6f104049e18910331b4e8,c2ecac4746abbaf95617cc2d4ffaa54cdcf97990,antirez,antirez@gmail.com,Fri Feb 16 11:57:27 2018 +0100,1518778647,CG: test XGROUPREAD abilities.,30.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,11.0,1.0,0.0011111111111111113,10306.0,901.0,754.0,None,False,,
c2ecac4746abbaf95617cc2d4ffaa54cdcf97990,f5799e728a8c498434f6e6d3e5e153e288517ef5,antirez,antirez@gmail.com,Fri Feb 16 12:03:40 2018 +0100,1518779020,CG: test XPENDING ability to return pending items.,20.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,41.0,2.0,0.00431712962962963,10307.0,232.6353887399464,755.0,None,False,,
f5799e728a8c498434f6e6d3e5e153e288517ef5,5f8c57f28a297dc3b27e125672c833379450497b,antirez,antirez@gmail.com,Fri Feb 16 12:10:40 2018 +0100,1518779440,CG: test XACK ability to remove items from the PELs.,13.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,61.0,3.0,0.004861111111111111,10308.0,206.7142857142857,756.0,None,False,,
5f8c57f28a297dc3b27e125672c833379450497b,54b9a0e61283fa41aa39fe00726fd29c0dd694e3,antirez,antirez@gmail.com,Fri Feb 16 12:13:04 2018 +0100,1518779584,CG: test XACK remaining features.,10.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,74.0,4.0,0.0016666666666666668,10309.0,601.0,757.0,None,False,,
54b9a0e61283fa41aa39fe00726fd29c0dd694e3,00a29b1a81f75dce175ac2199a7e1e9806a476dc,antirez,antirez@gmail.com,Fri Feb 16 16:18:01 2018 +0100,1518794281,"Make addReplyError...() family functions able to get error codes.Now you can use:nnaddReplyError(-MYERRORCODE some message);nnIf the error code is omitted, the behavior is like in the past,nthe generic -ERR will be used.n",11.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2101.0,282.0,27.985324074074068,10310.0,1.0357330148242383,5371.0,Feature Addition,False,,
00a29b1a81f75dce175ac2199a7e1e9806a476dc,0a6780e560e9077326eab1bd9dd07e3ccc44b8dc,antirez,antirez@gmail.com,Fri Feb 16 17:25:35 2018 +0100,1518798335,CG: XCLAIM initial draft.,163.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1600.0,60.0,0.2289814814814815,10311.0,5.367165386170644,5372.0,None,False,True,"[""36b392a0b2528ad22f016e9ca8fce93eb6dab3a0"", ""fe56c6740520b6fef2646d757896861c49faee0a"", ""6ba50784b5ce2e4eae74da00536ebbc1f81984ae""]"
0a6780e560e9077326eab1bd9dd07e3ccc44b8dc,267f7f2c97540f6ca1f3db81833e630393933f04,antirez,antirez@gmail.com,Sun Feb 18 23:12:49 2018 +0100,1518991969,Streams: fix error description for XADD when specified ID is small.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1760.0,61.0,2.24113425925926,10312.0,1.4462026297034611,5373.0,None,False,,
267f7f2c97540f6ca1f3db81833e630393933f04,13ff7bc3ef72f3cb60c3f3efc6b7e0b1a9d9aef2,antirez,antirez@gmail.com,Sun Feb 18 23:13:41 2018 +0100,1518992021,CG: fix RDB saving when there are no consumer groups.,25.0,21.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2326.0,215.0,4.194131944444443,10313.0,1.2384283597287875,5374.0,None,False,,
13ff7bc3ef72f3cb60c3f3efc6b7e0b1a9d9aef2,09e3b3b97588e9847fc016dbad489bbe8b46aa39,antirez,antirez@gmail.com,Wed Feb 21 10:50:32 2018 +0100,1519206632,CG: remove unused argument from streamReplyWithRangeFromConsumerPEL().,3.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1760.0,62.0,2.484525462962963,10314.0,1.402491346901888,5375.0,None,False,,
09e3b3b97588e9847fc016dbad489bbe8b46aa39,8727b4845bc1b8eb5cf6e725aad3329d4b4f9fe5,antirez,antirez@gmail.com,Wed Feb 21 10:51:43 2018 +0100,1519206703,"CG: XCLAIM, use minidle and fix array len.",18.0,4.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1760.0,63.0,0.0008217592592592593,10315.0,1217.9014084507041,5376.0,None,False,True,"[""5fa41e0c84e46bb1fa417d6bfb60d9429734fd5f""]"
8727b4845bc1b8eb5cf6e725aad3329d4b4f9fe5,f7d4c3acdf62d06f35beeec450be3ea7430d4aed,antirez,antirez@gmail.com,Wed Feb 21 11:17:46 2018 +0100,1519208266,Streams: trap more errors in stream loading + RDB check type name.,10.0,1.0,"src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.8453509366224365,15.0,1346.5,235.0,66.6045486111111,10316.5,1.2035269025648372,5378.0,None,False,,
f7d4c3acdf62d06f35beeec450be3ea7430d4aed,b26f03bd695d19ea88fc7ca1849ff46be802a216,antirez,antirez@gmail.com,Wed Feb 21 11:42:51 2018 +0100,1519209771,CG: XCLAIM now updates the idle time of the message.,18.0,8.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.4681666405523326,15.0,2611.6666666666665,395.0,17.185578703703698,10319.0,1.0258748448808443,5381.0,None,False,True,"[""fe56c6740520b6fef2646d757896861c49faee0a""]"
b26f03bd695d19ea88fc7ca1849ff46be802a216,596264aee935bf916d53d89df9ca8fef6b44491f,antirez,antirez@gmail.com,Fri Mar 2 13:44:40 2018 +0100,1519994680,CG: implement XCLAIM FORCE option.,28.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1782.0,65.0,9.084594907407407,10321.0,1.1100764547227768,5382.0,None,False,,
596264aee935bf916d53d89df9ca8fef6b44491f,34614a15080fb7511992dc449b4a8f103b11458f,antirez,antirez@gmail.com,Fri Mar 2 13:50:55 2018 +0100,1519995055,CG: NACK created by XCLAIM FORCE must be set in global PEL.,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1807.0,66.0,0.004340277777777778,10322.0,231.4,5383.0,None,False,,
34614a15080fb7511992dc449b4a8f103b11458f,f3d9520ccbf2bd4fcff287f7e2b3bb676c192b38,antirez,antirez@gmail.com,Fri Mar 2 13:54:56 2018 +0100,1519995296,CG: fix CG RDB loading not found conditional.,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2338.0,217.0,9.109143518518517,10323.0,1.1097798050900218,5384.0,None,False,,
f3d9520ccbf2bd4fcff287f7e2b3bb676c192b38,e6d434c1679791a2327c48036c13210b568a6fe6,antirez,antirez@gmail.com,Fri Mar 2 16:23:34 2018 +0100,1520004214,CG: implement RETRYCOUNT in XCLAIM.,2.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1808.0,67.0,0.10600694444444443,10324.0,10.433344251555846,5385.0,None,False,True,"[""f1e7df4b7c0dfb8ceaaa2e844b2b29024e8dfbcc""]"
e6d434c1679791a2327c48036c13210b568a6fe6,9b423ae2378b9234f100f5c1617ba18fba9db1a3,antirez,antirez@gmail.com,Fri Mar 2 16:25:00 2018 +0100,1520004300,CG: remove stale comment. XREADGROUP is now implemented.,0.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1810.0,68.0,0.0009953703703703704,10325.0,1005.6511627906976,5386.0,None,False,,
9b423ae2378b9234f100f5c1617ba18fba9db1a3,d4f81ebdba7eadcb89b91377fb9091ef7e0513b7,antirez,antirez@gmail.com,Fri Mar 2 17:24:00 2018 +0100,1520007840,CG: XGROUP DELCONSUMER implemented.,46.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1808.0,69.0,0.040972222222222215,10326.0,25.40677966101695,5387.0,None,False,,
d4f81ebdba7eadcb89b91377fb9091ef7e0513b7,8d8755c7b56069646ab0bd02e46652bfee19fcd1,antirez,antirez@gmail.com,Tue Mar 6 12:55:41 2018 +0100,1520337341,CG: throw an error if XREADGROUP is used without GROUP.,7.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1853.0,70.0,3.8136689814814817,10327.0,1.262214682201268,5388.0,None,False,,
8d8755c7b56069646ab0bd02e46652bfee19fcd1,67eeeb0b1084a72f2eca296235f732bb8d1d472c,antirez,antirez@gmail.com,Tue Mar 6 13:03:48 2018 +0100,1520337828,Streams: fix XREAD missing check for NULL object.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1860.0,71.0,0.005636574074074074,10328.0,178.41273100616016,5389.0,None,False,,
67eeeb0b1084a72f2eca296235f732bb8d1d472c,0cf6b1e3ae303214f0fdc73890cac2db41a75225,antirez,antirez@gmail.com,Wed Mar 7 16:08:06 2018 +0100,1520435286,CG: XINFO CONSUMERS implemented.,53.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.26954889908119395,15.0,2641.0,405.0,9.832129629629627,10330.0,1.0465513048977495,5392.0,None,False,,
0cf6b1e3ae303214f0fdc73890cac2db41a75225,d7d8cd0b2fa0523b575504d4800c2f1f05dd1a90,antirez,antirez@gmail.com,Tue Mar 13 16:26:48 2018 +0100,1520954808,"CG: XINFO GROUPS + output format changes.XINFO is mainly an observability command that will be used more bynhumans than computers, and even when used by computers it will be a verynlow traffic command. For this reason the format was changed in order tonhave field names. They'll consume some bandwidth and CPU cycles, but innthis context this is much better than having to understand what thennumbers in the output array are.n",31.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1911.0,73.0,6.012986111111113,10332.0,1.1663067204083757,5393.0,None,False,,
d7d8cd0b2fa0523b575504d4800c2f1f05dd1a90,66143616153eeeb2067b8960221c30110eb39aae,antirez,antirez@gmail.com,Tue Mar 13 16:54:23 2018 +0100,1520956463,CG: XINFO STREAM.,29.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1940.0,74.0,0.01915509259259259,10333.0,53.205438066465256,5394.0,None,False,,
66143616153eeeb2067b8960221c30110eb39aae,d7a5c0eb71c7f1a4ea55460cc585d47f88bdac8c,antirez,antirez@gmail.com,Thu Mar 15 13:15:46 2018 +0100,1521116146,"RDB: Ability to save LFU/LRU info.This is a big win for caching use cases, since on reloading Redis willnstill have some idea about what is worth to evict and what not.nHowever this only solves part of the problem because the information isnonly partially propagated to slaves (on write operations). Reads willnnot affect slaves LFU and LRU counters, so after a failover the evictionndecisions are kinda random until keys start to collect some aging/freq info.nnHowever since new slaves are initially populated via RDB file transfer,nthis means that if we spin up a new slave from a master, and perform annimmediate manual failover (for instance in order to upgrade the master),nthe slave will have eviction informations to use for some time.nnThe LFU/LRU info is persisted only if the maxmemory policy is set to onenof the relevant type, even if no actual maxmemory  memory limit isnset.n",31.0,6.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.9568886656798214,15.0,1246.0,251.0,48.550625,10334.5,1.0436914421103456,5396.0,None,False,True,"[""b38682199b09bb77e11d9a3d4130fd8ebf8df7df""]"
d7a5c0eb71c7f1a4ea55460cc585d47f88bdac8c,1ce50a7adf56814f29e7d4d336697ef9bbf40abb,antirez,antirez@gmail.com,Thu Mar 15 16:24:53 2018 +0100,1521127493,RDB: Ability to load LFU/LRU info.,48.0,19.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2361.0,219.0,0.13133101851851853,10336.0,8.614347404600334,5397.0,None,False,,
1ce50a7adf56814f29e7d4d336697ef9bbf40abb,8176a2ee7651dec5f80d9b6c1c59df156e797227,antirez,antirez@gmail.com,Thu Mar 15 16:33:18 2018 +0100,1521127998,RDB: LRU/LFU branches missed continue.,2.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2390.0,220.0,0.005844907407407407,10337.0,172.08910891089107,5398.0,None,False,,
8176a2ee7651dec5f80d9b6c1c59df156e797227,b1aae86fc6756d20108e6a0be37570b3de5bca38,antirez,antirez@gmail.com,Thu Mar 15 16:39:33 2018 +0100,1521128373,RDB: make RDB check aware of LFU/LRU opcodes.,13.0,9.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,364.0,20.0,22.22346064814815,10338.0,1.0449974923272505,5399.0,None,False,,
84b281209a653f8afe5b106ab44d8339fd798823,54cae05ea736340b4afe463eb750f5acdfe07590,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Mar 16 00:44:50 2018 +0800,1521132290,rdb: incremental fsync when redis saves rdb,32.0,13.0,"src/aof.c,CAS_DELIMITER,src/bio.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",8.0,1.0,1.0,2.7360026859220117,15.0,1638.0,1030.0,177.02090711805556,49.5,1.0048801442566515,53.0,None,False,,
54cae05ea736340b4afe463eb750f5acdfe07590,fd0c4c027713d1d34a8dd5ef62556b9ac0940d45,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Mar 16 00:48:59 2018 +0800,1521132539,add rdb-save-incremental-fsync option in redis.conf,6.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1323.0,181.0,1.1683217592592592,54.0,1.8559285933645717,0.0,Feature Addition,False,,
d8207d09eedb08c8d70bff3ed91e2f5307e9dcf8,dcffca0a31bfd2ed9aec0f2cc49d14767c7ffec6,Wander Hillen,wander@wetransfer.com,Fri Mar 16 09:59:14 2018 +0100,1521190754,"Fix typos, add some periods",4.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,2710.0,208.0,58.75487268518518,0.0,0.0,0.0,Corrective,True,,
dcffca0a31bfd2ed9aec0f2cc49d14767c7ffec6,dda8cc182117cd5b164a524a1246e8be33d08f7e,Wander Hillen,wander@wetransfer.com,Fri Mar 16 09:59:17 2018 +0100,1521190757,More typos,2.0,2.0,"src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,15.0,3190.5,388.0,0.6767013888888889,1.5,2.108317512442916,2.0,None,False,,
b1aae86fc6756d20108e6a0be37570b3de5bca38,8b0cfb1e66bde9b0a31a52bd6d9ab80e0a8df873,antirez,antirez@gmail.com,Fri Mar 16 13:47:10 2018 +0100,1521204430,RDB: Implement future-proof module AUX data loading.,32.0,1.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.19590927087360493,15.0,1276.0,257.0,0.5900289351851852,10339.5,4.583219479694254,5401.0,None,False,,
8b0cfb1e66bde9b0a31a52bd6d9ab80e0a8df873,38bc8ea5317ce1a176affdcf915749ae34ef22dd,antirez,antirez@gmail.com,Fri Mar 16 13:48:44 2018 +0100,1521204524,RDB version 9.,1.0,1.0,"src/rdb.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,157.0,35.0,0.0010879629629629627,10341.0,920.1489361702127,5402.0,None,False,,
38bc8ea5317ce1a176affdcf915749ae34ef22dd 15d7e617016220a33b7c98f0c0c0dfd219e2e330,7e3c583532632a8739d639d58207c9e7d093615e,antirez,antirez@gmail.com,Fri Mar 16 16:27:38 2018 +0100,1521214058,Merge branch 'hyperloglog-improvement' of https://github.com/oertl/redis into oertl-hyperloglog-improvement,,,,,,,,,,,,,,,Merge,False,,
38bc8ea5317ce1a176affdcf915749ae34ef22dd,87cc94864cdd27bdec0635d5dab9bd18d445c10f,antirez,antirez@gmail.com,Fri Mar 16 16:34:04 2018 +0100,1521214444,Fix HyperLogLog test script for new redis-rb API.,1.0,1.0,"utils/hyperloglog/hll-err.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,27.0,4.0,1445.7819791666666,10342.0,1.0006916672184394,89.0,Corrective,True,,
7e3c583532632a8739d639d58207c9e7d093615e,36b78e8dfe7a836bc1cab207871ef522e172635b,antirez,antirez@gmail.com,Fri Mar 16 16:57:53 2018 +0100,1521215873,Aesthetic changes to PR #4749.,40.0,40.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1588.0,110.0,1.8317939814814808,10343.0,1.5459129193072467,5403.0,None,False,,
87cc94864cdd27bdec0635d5dab9bd18d445c10f 36b78e8dfe7a836bc1cab207871ef522e172635b,3c2a952912c8d1ffb732008cb9ee49b45a567c21,antirez,antirez@gmail.com,Fri Mar 16 16:58:16 2018 +0100,1521215896,Merge branch 'oertl-hyperloglog-improvement' into unstable,,,,,,,,,,,,,,,Merge,False,,
3c2a952912c8d1ffb732008cb9ee49b45a567c21,0b58ad301ef2ef4ecad8e962020f9b676c64e440,antirez,antirez@gmail.com,Mon Mar 19 14:16:13 2018 +0100,1521465373,CG: Replication WIP 1: XREADGROUP and XCLAIM propagated as XCLAIM.,93.0,16.0,"src/blocked.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",5.0,1.0,1.0,1.1477208064880096,15.0,1729.6,457.0,18.929520833333328,10346.0,1.0158897494049572,5408.0,None,False,True,"[""61f12973f763b1af4e4737a0985df8991451070e"", ""c9d9ae7baaf717607db3d4ad81597dc99d0c002c"", ""6e11ef30e02932917ba53c72cf66681f42ea487d"", ""48d8b3d8ac8de4db033d8836986065b8a41e01dc"", ""6ba50784b5ce2e4eae74da00536ebbc1f81984ae""]"
0b58ad301ef2ef4ecad8e962020f9b676c64e440,3cae5f032105125855849a8aae3d3e2fc6872579,antirez,antirez@gmail.com,Tue Mar 20 11:06:50 2018 +0100,1521540410,CG: XGROUP CREATE/DELCONUSMER replication.,2.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2029.0,76.0,0.8684837962962964,10349.0,2.1514319602329515,5409.0,None,False,,
3cae5f032105125855849a8aae3d3e2fc6872579,ad716e29c03ecce28467b83ab352038fb77933b3,antirez,antirez@gmail.com,Tue Mar 20 11:13:41 2018 +0100,1521540821,CG: Fix propagate() arg count in streamPropagateXCLAIM().,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2031.0,77.0,0.0047569444444444465,10350.0,211.2189781021897,5410.0,None,False,,
ad716e29c03ecce28467b83ab352038fb77933b3,2ba9a57c9aa5a44d042338518bfd3da30dc60fc3,antirez,antirez@gmail.com,Tue Mar 20 11:25:49 2018 +0100,1521541549,CG: Add JUSTID to XCLAIM propagation to reduce CPU usage.,7.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2031.0,78.0,0.008425925925925925,10351.0,119.68131868131869,5411.0,None,False,True,"[""c9d9ae7baaf717607db3d4ad81597dc99d0c002c""]"
2ba9a57c9aa5a44d042338518bfd3da30dc60fc3,5577130451e8ba6ceeac07137f45915a069706a9,antirez,antirez@gmail.com,Tue Mar 20 11:52:34 2018 +0100,1521543154,CG: Make XINFO Great Again (and more Redis-ish).With XINFO out of the blue I invented a new syntax for commands nevernused in Redis in the past... Let's fix it and make itnnGreat Again!!11one (TM)n,36.0,20.0,"src/server.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.22228483068568802,15.0,3010.5,247.0,0.4594097222222222,10352.5,2.0995821168296698,5413.0,None,False,True,"[""9e0e5ccbf4600bde74309bd6de3e6a722357498e""]"
5577130451e8ba6ceeac07137f45915a069706a9,0f2c6b6a18a39443a5260632db84f33957eafff8,antirez,antirez@gmail.com,Tue Mar 20 17:50:37 2018 +0100,1521564637,"Streams: improve MEMORY USAGE computation, include CGs.",56.0,15.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1308.0,130.0,30.051574074074068,10354.0,1.0332761271517792,5414.0,None,False,True,"[""20e10dc7b8eeff9aa5356fd123a7c70e994e6eb4""]"
0f2c6b6a18a39443a5260632db84f33957eafff8,233da29f4da7360f691fc491b03278c8d56fe7de,antirez,antirez@gmail.com,Tue Mar 20 17:53:45 2018 +0100,1521564825,"CG: propagate XACK by incrementing server.dirty.This should be more than enough, even if in case of partial IDs that arennot found, we send all the IDs to the slave/AOF, but this is definitelyna corner case without bad effects if not some wasted space.n",1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2051.0,80.0,0.2508217592592593,10355.0,4.986894928706566,5415.0,None,False,,
3c2a952912c8d1ffb732008cb9ee49b45a567c21,11baa8487c9cd0a1f39e13f0b1808cae1cc6757f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Mar 21 15:13:51 2018 +0800,1521616431,anet: avoid double close,1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,660.0,60.0,224.8944444444444,55.0,1.0044465304710852,54.0,None,False,True,"[""46f767aa19f2915cda124575958ea650ec28a12f""]"
11baa8487c9cd0a1f39e13f0b1808cae1cc6757f,46f767aa19f2915cda124575958ea650ec28a12f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Mar 21 15:34:13 2018 +0800,1521617653,fix missed call on freeaddrinfo,1.0,1.0,"src/anet.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,660.0,61.0,0.014143518518518519,56.0,71.7037643207856,55.0,Corrective,True,,
233da29f4da7360f691fc491b03278c8d56fe7de,71c7477fd407cc3d0d08ab8dedc564f30776511d,charsyam,charsyam@gmail.com,Wed Mar 21 17:41:59 2018 +0900,1521621719,fix memory leak for streamPropagateXCLAIM,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2052.0,81.0,0.6584953703703704,25.0,2.518613562062783,25.0,Corrective,True,,
233da29f4da7360f691fc491b03278c8d56fe7de 71c7477fd407cc3d0d08ab8dedc564f30776511d,3851d30ada437fbeedec70badc7624757f092f21,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 09:02:37 2018 +0100,1521705757,Merge pull request #4779 from charsyam/feature/fix-streamPropagateXCLAIMfix memory leak for streamPropagateXCLAIM,,,,,,,,,,,,,,,Merge,False,,
3851d30ada437fbeedec70badc7624757f092f21 806736cdf91658e7a8e1a2d8631b82763b508c36,da621783f0cb70ef758542720d987c144427cd3d,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 09:16:32 2018 +0100,1521706592,Merge pull request #4691 from oranagra/active_defrag_v2Active defrag v2,,,,,,,,,,,,,,,Merge,False,,
da621783f0cb70ef758542720d987c144427cd3d 51a03f6356973a45e3ff7baa675a3e8f2a1be6f9,7acf0e0a1843c6f50d3c10209a131fdca302502e,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 09:19:26 2018 +0100,1521706766,Merge pull request #3826 from charsyam/feature/fix_dlopen_leakfix missed dlclose leak in module.c,,,,,,,,,,,,,,,Merge,False,,
7acf0e0a1843c6f50d3c10209a131fdca302502e c76f890209d923ac4fb81b22a01320dca70a060c,5d8c89163cdd4105633be1a5dd7a7784775e2143,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 09:20:17 2018 +0100,1521706817,Merge pull request #4757 from charsyam/feature/fix-invalid-listpack-type-in-makefilefix listpack.c to listpack.o in Makefile,,,,,,,,,,,,,,,Merge,False,,
3a5bf75ede389981f1e63b305dad431c8ccc91ea,fa00e20b165c5e55f437ceddde9f492cafd38143,Guy Benoish,guy.benoish@redislabs.com,Thu Mar 22 17:22:26 2018 +0700,1521714146,Make blocking list commands send keyspace notifications,8.0,0.0,"src/blocked.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,15.0,642.0,109.0,99.82585648148148,10.5,1.1761566465995057,10.0,None,False,,
5d8c89163cdd4105633be1a5dd7a7784775e2143,b86c26b2fdbecb62431f1ea7cccfc1b064dfa734,antirez,antirez@gmail.com,Thu Mar 22 11:42:50 2018 +0100,1521715370,Massivily simplify addReply*() functions in networking.c,11.0,87.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2111.0,283.0,33.80890046296296,10356.0,1.0295780101188292,5416.0,Feature Addition,False,,
b86c26b2fdbecb62431f1ea7cccfc1b064dfa734,6c4cb1670a1f89ec3f38b67638cd76e161195358,antirez,antirez@gmail.com,Thu Mar 22 11:45:04 2018 +0100,1521715504,Add top comments in two addReply*() functions.,3.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2035.0,284.0,0.001550925925925926,10357.0,645.776119402985,5417.0,Feature Addition,False,,
6c4cb1670a1f89ec3f38b67638cd76e161195358 fa00e20b165c5e55f437ceddde9f492cafd38143,3163c9cb630e6314954f716c9adcd0b689abd41a,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 16:21:19 2018 +0100,1521732079,Merge pull request #4781 from guybe7/block_list_notifyMake blocking list commands send keyspace notifications,,,,,,,,,,,,,,,Merge,False,,
3163c9cb630e6314954f716c9adcd0b689abd41a 46f767aa19f2915cda124575958ea650ec28a12f,b38f52169bc261819ce80955f5bfca55b3c950b7,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 16:22:32 2018 +0100,1521732152,Merge pull request #4777 from soloestoy/avoid-double-closeanet: avoid double close,,,,,,,,,,,,,,,Merge,False,,
b38f52169bc261819ce80955f5bfca55b3c950b7 da7f5700cf1a1680accf563622debb82e5f9ef26,44f2cfa6311dacd0213b27d997de810648effbbe,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 16:23:40 2018 +0100,1521732220,Merge pull request #4722 from charsyam/feature/refactoring-call-aeDeleteFileEvent-twice-in-freeClusterLinkRefactoring to call aeDeleteFileEvent twice as once,,,,,,,,,,,,,,,Merge,False,,
44f2cfa6311dacd0213b27d997de810648effbbe aacecbc997b9678ba59eb9ef487e5cf19078a055,bad679137e7a6e15938f26d7a26a11afa4679314,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 16:26:01 2018 +0100,1521732361,Merge pull request #4679 from youjiali1995/fix-lruSome commands will udpate lfu-counter many times in one call.,,,,,,,,,,,,,,,Merge,False,,
bad679137e7a6e15938f26d7a26a11afa4679314 d4e6d1086fd9004a23b957aba048df41d6afac14,e08d6bb37e9fbf0dd1a62973eb9bea93c9837f48,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 22 16:32:45 2018 +0100,1521732765,Merge pull request #4703 from gechunlin/unstableUpdate object.c,,,,,,,,,,,,,,,Merge,False,,
a4cfd503ea1f5b112032e9edf7b564d5d7eced93,d8fc307cc65c909ed8c7f801fcd757ef1f9e68b7,artix,artix2@gmail.com,Fri Mar 23 16:46:43 2018 +0100,1521820003,Cluster Manager: rebalance command,284.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5306.0,217.0,17.194895833333334,19.0,1.0581567931374984,19.0,None,False,,
6c4cb1670a1f89ec3f38b67638cd76e161195358,1392c83fb829d8586af8cdd1ef778b211be40e4a,antirez,antirez@gmail.com,Fri Mar 23 17:21:31 2018 +0100,1521822091,CG: AOF rewriting implemented.,86.0,4.0,"src/aof.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER",2.0,1.0,1.0,0.08807225904068132,15.0,884.5,186.0,6.056244212962962,10358.5,1.1039064667794931,5419.0,None,False,,
1392c83fb829d8586af8cdd1ef778b211be40e4a e08d6bb37e9fbf0dd1a62973eb9bea93c9837f48,8b20112860ca769966451477c569973079647b5e,antirez,antirez@gmail.com,Fri Mar 23 17:21:46 2018 +0100,1521822106,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
8b20112860ca769966451477c569973079647b5e,28d28ef3cf0fbbc1cf1caf379ed3ae2af0ac6c27,antirez,antirez@gmail.com,Sun Mar 25 11:43:24 2018 +0200,1521971004,"AOF: enable RDB-preamble rewriting by default.There are too many advantages in doing this, RDB is faster to persist,nmore compact, much faster to load back. The main issues here are thatnthe code is less tested because this was not the old default (so we arenenabling it for the new 5.0 release), and that the AOF is no longer antrivially parsable format from now on. However the non-preamble modenwill be supported in the future as well, if new data types will benadded.n",2.0,5.0,"redis.conf,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,2.0,2.0,0.8631205685666309,15.0,1706.5,354.0,7.778333333333332,10360.5,1.0836632844597989,5420.0,None,False,,
28d28ef3cf0fbbc1cf1caf379ed3ae2af0ac6c27,2b2652d7c4a9c34b815e0903135dfe97215ce823,antirez,antirez@gmail.com,Sun Mar 25 13:03:38 2018 +0200,1521975818,AOF: run tests with preamble off when it makes sense.,6.0,3.0,"tests/integration/aof-race.tcl,CAS_DELIMITER,tests/unit/aofrw.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",4.0,1.0,2.0,1.9749375012019272,13.0,307.25,87.0,999.3690335648148,10363.5,1.0003302073527591,761.0,None,False,,
2b2652d7c4a9c34b815e0903135dfe97215ce823,674909f44284a44580e87a1cc8c25a6aa957eb22,antirez,antirez@gmail.com,Mon Mar 26 11:29:16 2018 +0200,1522056556,Add INIT INFO to the provided init script.,8.0,0.0,"utils/redis_init_script,CAS_DELIMITER",1.0,1.0,1.0,0.0,3.0,42.0,4.0,2476.762175925926,10366.0,1.0004037529358774,90.0,Feature Addition,False,,
674909f44284a44580e87a1cc8c25a6aa957eb22,8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,antirez,antirez@gmail.com,Wed Mar 28 14:06:08 2018 +0200,1522238768,"Fix ae.c when a timer finalizerProc adds an event.While this feature is not used by Redis, ae.c implements the ability forna timer to call a finalizer callback when an timer event is deleted.nThis feature was bugged since the start, and because it was never usednwe never noticed a problem. However Anthony LaTorre was using the samenlibrary in order to implement a different system: he found a bug that hendescribes as follows, and which he fixed with the patch in this commit,nsent me by private email:nn--- Anthony email ---nn've found one bug in the current implementation of the timed events.nIt's possible to lose track of a timed event if an event is added innthe finalizerProc of another event.nnFor example, suppose you start off with three timed events 1, 2, andn3. Then the linked list looks like:nn3 -> 2 -> 1nnThen, you run processTimeEvents and events 2 and 3 finish, so now thenlist looks like:nn-1 -> -1 -> 2nnNow, on the next iteration of processTimeEvents it starts by deletingnthe first event, and suppose this finalizerProc creates a new event,nso that the list looks like this:nn4 -> -1 -> 2nnOn the next iteration of the while loop, when it gets to the secondnevent, the variable prev is still set to NULL, so that the head of thenevent loop after the next event will be set to 2, i.e. after deletingnthe next event the event loop will look like:nn2nnand the event with id 4 will be lost.nnI've attached an example program to illustrate the issue. If you runnit you will see that it prints:nn```nfoo id = 0nspam!n```nnBut if you uncomment line 29 and run it again it won't print spam!.nn--- End of email ---nnTest.c source code is as follows:nn#include ae.hn#include <stdio.h>nnaeEventLoop *el;nnint foo(struct aeEventLoop *el, long long id, void *data)n{ntprintf(foo id = %lldn, id);nntreturn AE_NOMORE;n}nnint spam(struct aeEventLoop *el, long long id, void *data)n{ntprintf(spam!n);nntreturn AE_NOMORE;n}nnvoid bar(struct aeEventLoop *el, void *data)n{ntaeCreateTimeEvent(el, 0, spam, NULL, NULL);n}nnint main(int argc, char **argv)n{ntel = aeCreateEventLoop(100);nnt//aeCreateTimeEvent(el, 0, foo, NULL, NULL);ntaeCreateTimeEvent(el, 0, foo, NULL, bar);nntaeMain(el);nntreturn 0;n}nnAnthony fixed the problem by using a linked list for the list of timers, andnsent me back this patch after he tested the code in production for some time.nThe code looks sane to me, so committing it to Redis.n",10.0,6.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER",2.0,1.0,1.0,0.3372900666170139,14.0,321.5,33.0,30.92133101851852,10367.5,1.0253059177410853,5422.0,Corrective,True,,
e08d6bb37e9fbf0dd1a62973eb9bea93c9837f48,83cf0e3668f61a57bbaaedf47d35d8943352d893,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Mar 29 17:36:15 2018 +0800,1522316175,adjust position of _dictNextPower in dictExpand,3.0,3.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1221.0,82.0,119.25113425925926,57.0,1.008385664473647,56.0,None,False,,
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,0701cad3de615ef2fbdda27514dfaa6e52734e73,antirez,antirez@gmail.com,Thu Mar 29 15:13:31 2018 +0200,1522329211,Modules Cluster API: message bus implementation.,111.0,5.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.3862992107232186,15.0,3026.0,883.0,108.62692997685188,10370.5,1.0261251555637063,5426.0,None,False,True,"[""d1a005ab3963c16b65e805675a76f0e40c723158""]"
e08d6bb37e9fbf0dd1a62973eb9bea93c9837f48,fbef85ca5aca774c7533c6e0760edfd6258948c7,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Mar 29 23:20:58 2018 +0800,1522336858,debug: avoid free client unexpectedly when reload & loadaof,8.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1219.0,145.0,79.29717592592594,58.0,1.012610789581386,57.0,Corrective,True,,
0701cad3de615ef2fbdda27514dfaa6e52734e73,b4dc782e4e991b8b4f95f1f28305109fcd7b2d70,antirez,antirez@gmail.com,Fri Mar 30 11:05:47 2018 +0200,1522400747,Modules Cluster API: sending / receiving API first implementation.,81.0,5.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.4464813468968031,15.0,2309.5,187.0,22.19005208333333,10373.5,1.6151580565565085,5428.0,None,False,,
b4dc782e4e991b8b4f95f1f28305109fcd7b2d70,82004f9dbea436075daf93c8281b4150558e1d0c,antirez,antirez@gmail.com,Fri Mar 30 12:49:16 2018 +0200,1522406956,Modules Cluster API: fix new API calls exporting.,6.0,3.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,15.0,2347.5,189.0,0.07186342592592593,10375.5,11.436463198582704,5430.0,None,False,,
82004f9dbea436075daf93c8281b4150558e1d0c,061f03d73017118ef4499ca21c84b92f1db563ad,antirez,antirez@gmail.com,Fri Mar 30 12:49:39 2018 +0200,1522406979,Modules Cluster API: add a simple example module.,85.0,1.0,"src/modules/Makefile,CAS_DELIMITER,src/modules/hellocluster.c,CAS_DELIMITER",2.0,1.0,1.0,0.40707680632541937,15.0,21.0,10.0,61.2815625,10377.5,1.0081590608920914,5432.0,None,False,,
061f03d73017118ef4499ca21c84b92f1db563ad,a97df1a6e104e9e578c246eb3cf4b263370d8b05,antirez,antirez@gmail.com,Fri Mar 30 13:16:07 2018 +0200,1522408567,Modules Cluster API: make node IDs pointers constant.,8.0,8.0,"src/cluster.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.75,15.0,3103.0,898.0,0.4685590277777778,10380.5,1.9339250464908044,5436.0,None,False,,
a97df1a6e104e9e578c246eb3cf4b263370d8b05,83ec35770e035a09a7cdc56924935f8ac722c84a,antirez,antirez@gmail.com,Fri Mar 30 13:16:55 2018 +0200,1522408615,Modules Cluster API: node information struct and flags.,13.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9957274520849256,15.0,2349.0,193.0,0.0005555555555555557,10383.5,1351.0,5438.0,None,False,,
83ec35770e035a09a7cdc56924935f8ac722c84a,16178b692efeb23fd2a9ef43bcf5091d7e3f61b7,antirez,antirez@gmail.com,Fri Mar 30 16:16:40 2018 +0200,1522419400,Modules Cluster API: nodes list and info API.,110.0,3.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.07306611931384561,15.0,2355.5,195.0,0.12482638888888888,10385.5,7.008344923504867,5440.0,None,False,True,"[""3b0f0086156e79e0c7e13c8e7118799b9b40dd08"", ""324e22accf457edc996971bc97f5474349cd7c4c""]"
16178b692efeb23fd2a9ef43bcf5091d7e3f61b7,192361b562bdcad15618600a1d741c7415a72b13,antirez,antirez@gmail.com,Fri Mar 30 17:00:45 2018 +0200,1522422045,"Modules Cluster API: node API exported, example improved.",42.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/hellocluster.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.1549362194690045,15.0,1632.333333333333,198.0,0.07853395061728395,10388.0,14.929393147892881,5443.0,None,False,,
192361b562bdcad15618600a1d741c7415a72b13,561039c1258b71a888c64eaa85e671a630312346,antirez,antirez@gmail.com,Fri Mar 30 20:40:35 2018 +0200,1522435235,Modules Timer API: initial implementation.,99.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.32984607020714635,15.0,2414.5,199.0,0.15266203703703704,10390.5,5.912812736921913,5445.0,None,False,True,"[""3b0f0086156e79e0c7e13c8e7118799b9b40dd08""]"
561039c1258b71a888c64eaa85e671a630312346,b85a465c25ac9065a3378bd4b5e8047a606b1f6e,antirez,antirez@gmail.com,Fri Mar 30 22:50:21 2018 +0200,1522443021,Modules Timer API: timer handling implemented.,58.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4497.0,143.0,0.09011574074074076,10392.0,12.096840482918058,5446.0,None,False,,
b85a465c25ac9065a3378bd4b5e8047a606b1f6e,2f7da0fd1a70f8cc0fe2edb2b1d6f37466615457,antirez,antirez@gmail.com,Sat Mar 31 00:44:46 2018 +0200,1522449886,Modules Timer API: fix infinite loop and export API.,20.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.5743317855445234,15.0,1677.333333333333,213.0,0.24854552469135804,10394.0,6.220876909895928,5449.0,None,False,,
2f7da0fd1a70f8cc0fe2edb2b1d6f37466615457,4c11bc6cf067fb19bd6cb7517068c24543ca09d6,antirez,antirez@gmail.com,Sat Mar 31 09:58:43 2018 +0200,1522483123,Modules Timer API: fix wrong raxRemove() key argument.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4559.0,145.0,0.3846875,10396.0,3.5995125913891144,5450.0,None,False,,
4c11bc6cf067fb19bd6cb7517068c24543ca09d6,ee982f4031771013bdbd12086c185fb53db45060,antirez,antirez@gmail.com,Sat Mar 31 10:11:26 2018 +0200,1522483886,Modules Timer API: Wait at least 1 ms per iteration. Convert to ms.,3.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4559.0,146.0,0.008831018518518521,10397.0,114.23722149410222,5451.0,None,False,,
ee982f4031771013bdbd12086c185fb53db45060,19c42c901b71e5ce34bc78834a91ea0c49018fc6,antirez,antirez@gmail.com,Sat Mar 31 10:12:34 2018 +0200,1522483954,Modules Timer API: add example of API.,76.0,0.0,"src/modules/hellotimer.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,10398.0,0.0,5452.0,None,False,,
19c42c901b71e5ce34bc78834a91ea0c49018fc6,27f9c8108c1c6a803ad8e386d655c7065feda394,antirez,antirez@gmail.com,Sun Apr 1 16:20:57 2018 +0200,1522592457,Modules Cluster API: GetMyClusterID() added.,10.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8453509366224365,15.0,2499.0,206.0,1.4533680555555557,10399.5,1.5699105464418712,5454.0,None,False,,
27f9c8108c1c6a803ad8e386d655c7065feda394,c75582889a49ed15524a05f855d2a6327451c8c6,antirez,antirez@gmail.com,Sun Apr 1 16:36:32 2018 +0200,1522593392,Modules Cluster API: GetClusterSize() added.,13.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,15.0,2503.5,208.0,0.010821759259259258,10401.5,70.3048128342246,5456.0,None,False,,
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,d56f4b4122aa51f97f5284e6e449943dd46ad659,Oran Agra,oran@redislabs.com,Mon Apr 2 18:36:17 2018 +0300,1522683377,"Add redis-cli support for diskless replication (CAPA EOF)when setting repl-diskless-sync yes, and sending SYNC.nredis-cli needs to be able to understand the EOF marker protocolnin order to be able to skip or download the rdb filen",102.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5581.0,218.0,9.992754629629632,61.0,1.100072506237158,52.0,Feature Addition,False,,
c75582889a49ed15524a05f855d2a6327451c8c6,b2868c7b9cfed0e517547768d2bb9178d409daef,antirez,antirez@gmail.com,Thu Apr 5 13:24:22 2018 +0200,1522927462,Modules API: RM_GetRandomBytes() / GetRandomHexChars().,71.0,60.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER",4.0,1.0,1.0,1.009067438666864,15.0,1984.5,421.0,32.049172453703704,10404.5,1.1171323891333629,5460.0,None,False,,
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,0fd2b25c8dc646dd86fe95021f2e5c0224f075da,charpty,charpty@gmail.com,Fri Apr 6 16:42:48 2018 +0800,1523004168,Remove unnecessary return statementsSigned-off-by: charpty <charpty@gmail.com>n,0.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,3986.0,169.0,16.909884259259258,0.0,0.0,0.0,None,False,,
d8fc307cc65c909ed8c7f801fcd757ef1f9e68b7,8969254e669d89f882200cb2848a316d05ea4b04,artix,artix2@gmail.com,Fri Apr 6 18:02:40 2018 +0200,1523030560,Cluster Manager: fix command.,642.0,73.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,5673.0,219.0,4.018321759259258,20.0,1.2488601112381654,20.0,None,False,,
b2868c7b9cfed0e517547768d2bb9178d409daef,49e098234abc2c5cc7042c931e3d611b0ae2055d,antirez,antirez@gmail.com,Mon Apr 9 11:54:44 2018 +0200,1523267684,"Modules API: blocked client free callback modified to get a context.Note that this was an experimental API that can only be enabled withnREIDSMODULE_EXPERIMENTAL_API, so it is subject to change until itsnpromoted to stable API. Sorry for the breakage, it is trivial tonresolve btw. This change will not be back ported to Redis 4.0.n",51.0,31.0,"src/module.c,CAS_DELIMITER,src/modules/helloblock.c,CAS_DELIMITER,src/modules/hellocluster.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,2.0,1.1815632687841673,15.0,1337.0,221.0,71.6634693287037,10408.5,1.0661603594095932,5464.0,None,False,,
49e098234abc2c5cc7042c931e3d611b0ae2055d,eaafea482870c839adc60d8453cbc0c1efb062c5,antirez,antirez@gmail.com,Mon Apr 9 12:17:19 2018 +0200,1523269039,"Modules API: experimental APIs version.This way it is possible to use conditional compilation to be compatiblenwith a larger amount of Redis versions, however note that this breaksnbinary compatibiltiy, so the module must be compiled with thencorresponding redismodule.h file depending on the version of Redisntargeted.n",1.0,0.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,447.0,63.0,0.015682870370370368,10411.0,64.76383763837637,5465.0,None,False,,
eaafea482870c839adc60d8453cbc0c1efb062c5,9a0dbbb594f74e27c9d8f550c494501b0196aed6,antirez,antirez@gmail.com,Mon Apr 9 17:16:55 2018 +0200,1523287015,Modules: remove trailing empty spaces.,21.0,21.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.4537163391869448,15.0,2532.0,215.0,0.2158969907407408,10412.5,4.392712102366303,5467.0,None,False,,
9a0dbbb594f74e27c9d8f550c494501b0196aed6,6888c1a10d085365ce32e9b09f9fd8d54672e1e7,antirez,antirez@gmail.com,Mon Apr 9 17:20:36 2018 +0200,1523287236,freeMemoryIfNeeded() lacked a top comment.,9.0,0.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,562.0,20.0,88.98164351851852,10414.0,1.0112382729792115,5468.0,None,False,,
6888c1a10d085365ce32e9b09f9fd8d54672e1e7,f97efe0cac1653fbadf02679056cba3e5317aad2,antirez,antirez@gmail.com,Mon Apr 9 17:43:50 2018 +0200,1523288630,Modules: context flags now include OOM flag.Plus freeMemoryIfNeeded() refactoring to improve legibility.nPlease review this commit for sanity.n,68.0,33.0,"src/evict.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.2607714377089598,15.0,1930.25,414.0,1.0584259259259259,10416.5,28.403773314079853,5472.0,None,False,True,"[""de7de53e641c93a634d6ce97d78685a1783d3a4b""]"
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,07125b8d22d268b85281ce0c588d72caf7680cd4,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Apr 10 16:36:05 2018 +0800,1523349365,"Bugfix: xadd comand <field,value> arity checkmissing parenthesis causes wrong arithmetic priority.n",1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2053.0,82.0,19.995902777777786,0.0,0.0,0.0,Corrective,True,,
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,3c20b3fc2464cec5b79e4e23037794be5826f536,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Apr 10 17:05:48 2018 +0800,1523351148,"Bugfix: xadd command ID parsestrictly check the string to be converted,nstrtoull() in libc may not set errno to EINVAL when the string containsninvalid digits.n",4.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2053.0,83.0,0.020636574074074075,1.0,49.45765563656757,1.0,Corrective,True,True,"[""04233097688ee35d451c6f5cd64c28e57ca81b53""]"
3c20b3fc2464cec5b79e4e23037794be5826f536,b6b00f35ca08f586ea80e104dde2b343b9a843cf,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Apr 10 17:11:10 2018 +0800,1523351470,Return more accurate message when specified ID is invalid,1.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2055.0,84.0,0.0037268518518518523,2.0,269.3229813664596,2.0,None,False,,
8969254e669d89f882200cb2848a316d05ea4b04,eaaa3202e6e8e5cded996ee057fd16fe1fd9baf0,artix,artix2@gmail.com,Tue Apr 10 16:25:25 2018 +0200,1523370325,Cluster Manager: import command,194.0,22.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.0758415063771471,14.0,3266.0,372.0,15.026400462962966,21.5,1.0357795579771003,22.0,None,False,,
eaaa3202e6e8e5cded996ee057fd16fe1fd9baf0,81ab5a3b280886ed52289de2ac0984cc62ce5538,artix,artix2@gmail.com,Tue Apr 10 16:53:24 2018 +0200,1523372004,Cluster Manager: added clusterManagerCheckCluster to import command,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6414.0,221.0,0.019432870370370368,23.0,52.45920190589637,23.0,None,False,,
f97efe0cac1653fbadf02679056cba3e5317aad2,de7de53e641c93a634d6ce97d78685a1783d3a4b,antirez,antirez@gmail.com,Wed Apr 11 12:48:26 2018 +0200,1523443706,getMaxmemoryState() fixed and improved.,38.0,13.0,"src/evict.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.4750591453273984,15.0,2435.333333333333,352.0,1.7948611111111112,10420.0,1.3404782171322451,5475.0,Corrective,True,,
de7de53e641c93a634d6ce97d78685a1783d3a4b,0afac6939a50347f1ae328ddf2715461c9c66eb1,antirez,antirez@gmail.com,Wed Apr 11 16:22:52 2018 +0200,1523456572,Modules API: OOM_WARNING flags.In some modules it may be useful to have an idea about being near tonOOM. Anyway additionally an explicit call to get the fill ratio will benadded in the future.n,8.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,15.0,2537.0,220.0,1.0463425925925929,10422.5,4.596614407868678,5477.0,None,False,,
0afac6939a50347f1ae328ddf2715461c9c66eb1,4e536240527103915c08b9223e73d4f361aa30cf,antirez,antirez@gmail.com,Wed Apr 11 16:25:54 2018 +0200,1523456754,Modules API: fix OOM_WARNING flag implementation.,3.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4629.0,155.0,0.0021064814814814813,10424.0,475.72527472527474,5478.0,None,False,,
81ab5a3b280886ed52289de2ac0984cc62ce5538,615aefe6ba3e8a1878ce6ff5dd5c4d6909515431,artix,artix2@gmail.com,Wed Apr 11 17:08:53 2018 +0200,1523459333,Cluster Manager: add-node command.,154.0,14.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6415.0,222.0,1.0107523148148148,24.0,1.9893620675835064,24.0,None,False,,
615aefe6ba3e8a1878ce6ff5dd5c4d6909515431,551f8f05911918466de45f275f6c2f387a73893f,artix,artix2@gmail.com,Wed Apr 11 18:22:44 2018 +0200,1523463764,- Cluster Manager: del-node command. - Cluster Manager: fixed bug in clusterManagerNodeWithLeastReplicas,73.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6555.0,223.0,0.05128472222222223,25.0,20.49898442789438,25.0,None,False,,
4e536240527103915c08b9223e73d4f361aa30cf,005c932f22a5e3027db2c31865e394d388fcf0a0,antirez,antirez@gmail.com,Thu Apr 12 13:00:18 2018 +0200,1523530818,Modules API: fix timer example.,3.0,0.0,"src/modules/hellotimer.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,76.0,1.0,12.11648148148148,10425.0,1.0825322104877042,5479.0,None,False,,
005c932f22a5e3027db2c31865e394d388fcf0a0,404160a27198b9bfbac2086be20c4ca130b47eac,antirez,antirez@gmail.com,Thu Apr 12 13:21:48 2018 +0200,1523532108,Modules API: blocked client disconnection callback.,72.0,3.0,"src/module.c,CAS_DELIMITER,src/modules/helloblock.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.3374611992553151,15.0,1759.0,231.0,1.602291666666667,10427.0,1.5363023831680709,5482.0,None,False,True,"[""b2fc998ad64d17ed8e1bb3d3fed9a2cd5815553d"", ""3b0f0086156e79e0c7e13c8e7118799b9b40dd08""]"
404160a27198b9bfbac2086be20c4ca130b47eac,da0e192277b3cb9981f02a2071caa7b711ed5c89,antirez,antirez@gmail.com,Fri Apr 13 13:42:49 2018 +0200,1523619769,Modules API: moduleGetReplyClient() refactoring.,13.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4672.0,157.0,1.0145949074074074,10429.0,1.9856150397554213,5483.0,None,False,,
da0e192277b3cb9981f02a2071caa7b711ed5c89,e07af6a2b782de809c1908a236332e48af5867b3,antirez,antirez@gmail.com,Fri Apr 13 13:48:11 2018 +0200,1523620091,"Modules API: Add call to get the blocked client handle from the context.This is useful in the reply and timeout callback, if the module wants tondo some cleanup of the blocked client handle that may be stored aroundnin the module-private data structures.n",15.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.5435644431995964,15.0,2567.5,226.0,0.5110243055555556,10430.5,135.65070420454796,5485.0,None,False,,
551f8f05911918466de45f275f6c2f387a73893f,07bd371087242765c47142fb379e72bd88475f3a,artix,artix2@gmail.com,Fri Apr 13 16:09:22 2018 +0200,1523628562,Cluster Manager: set-timeout command,64.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6627.0,224.0,1.90738425925926,26.0,1.524278207259797,26.0,None,False,,
e07af6a2b782de809c1908a236332e48af5867b3,775adf544c6ba27c099e16eb657607c9293fafa8,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sat Apr 14 01:20:02 2018 +0800,1523640002,Modules Timer API: fix wrong raxInsert() usage,2.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4692.0,159.0,0.2304513888888889,59.0,5.339309929184873,58.0,None,False,,
e07af6a2b782de809c1908a236332e48af5867b3 775adf544c6ba27c099e16eb657607c9293fafa8,7980d87c3c72740f4609fdcaae088221f8f8eb59,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 13 19:51:46 2018 +0200,1523641906,Merge pull request #4842 from soloestoy/fix-timer-api-wrong-insertModules Timer API: fix wrong raxInsert() usage,,,,,,,,,,,,,,,Merge,False,,
7980d87c3c72740f4609fdcaae088221f8f8eb59,24ac2b4c74a454fabe1b2aa1134e9551a1e32625,antirez,antirez@gmail.com,Tue Apr 17 17:18:00 2018 +0200,1523978280,Streams: iterator entry deletion abilities.,52.0,1.0,"src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.2318130500245902,15.0,1082.0,100.0,16.105318287037033,10432.5,1.0355581720874014,5487.0,None,False,,
24ac2b4c74a454fabe1b2aa1134e9551a1e32625,9c149bf1f1358a55abd1879265852994dc997bb7,antirez,antirez@gmail.com,Tue Apr 17 17:55:56 2018 +0200,1523980556,Streams: higher level delete by ID API for streams.,15.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2103.0,86.0,0.02634259259259259,10434.0,38.96133567662566,5488.0,None,False,,
9c149bf1f1358a55abd1879265852994dc997bb7,8c8e85df874c852b5f125209e9d662a70e310f66,Guy Benoish,guy.benoish@redislabs.com,Wed Apr 18 13:01:53 2018 +0300,1524045713,Use memtoll() in 'CONFIG SET client-output-buffer-limit',2.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2153.0,216.0,33.720173611111115,12.0,1.0296558378237557,11.0,None,False,,
9c149bf1f1358a55abd1879265852994dc997bb7,aba76320d59a1ea5507336eb8636aa2ab449a3e0,antirez,antirez@gmail.com,Wed Apr 18 13:12:09 2018 +0200,1524049929,Streams: XDEL command.,33.0,2.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.3731399901212818,15.0,2730.0,435.0,6.641037808641976,10436.0,1.0617043223156106,5491.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""fe56c6740520b6fef2646d757896861c49faee0a""]"
aba76320d59a1ea5507336eb8636aa2ab449a3e0,19ae809458b545bf320122c83a4554e3e434aa0f,antirez,antirez@gmail.com,Thu Apr 19 16:11:43 2018 +0200,1524147103,"Streams: XADD, handle signaling of write in different ways.",3.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2147.0,88.0,1.124699074074074,10438.0,1.8891267211394,5492.0,None,False,,
19ae809458b545bf320122c83a4554e3e434aa0f,e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,antirez,antirez@gmail.com,Thu Apr 19 16:25:29 2018 +0200,1524147929,Streams: XTRIM command added.,70.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.2157476854446368,15.0,2741.333333333333,439.0,0.7593595679012345,10440.0,1.5871384587692392,5495.0,None,False,,
07bd371087242765c47142fb379e72bd88475f3a,3fce4301ec54e173c811a8e08c320d9ef86c4de2,artix,artix2@gmail.com,Thu Apr 19 18:52:01 2018 +0200,1524156721,Cluster Manager: code improvements and more comments added.,31.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6685.0,225.0,6.112951388888887,27.0,1.1635871016114463,27.0,None,False,,
3fce4301ec54e173c811a8e08c320d9ef86c4de2,cc29fd3e28388823a6befc7ddd96d0e2d67161bb,artix,artix2@gmail.com,Fri Apr 20 18:08:30 2018 +0200,1524240510,Cluster Manager: fixed bug when parsing CLUSTER NODES reply (clusterManagerNodeLoadInfo),4.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6681.0,226.0,0.9697800925925926,28.0,2.031161608325675,28.0,None,False,,
cc29fd3e28388823a6befc7ddd96d0e2d67161bb,57d895104c48ef43d8bb7bac7a4e859c5a90f192,artix,artix2@gmail.com,Fri Apr 20 19:25:08 2018 +0200,1524245108,Cluster Manager: fixed expected slots calculation (rebalance) Cluster Manager: fixed argument parsing after --cluster-weight,4.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6683.0,227.0,0.053217592592592594,29.0,19.79077859939104,29.0,None,False,,
57d895104c48ef43d8bb7bac7a4e859c5a90f192,04eac76bae8d5fb4699e14ebccb91f0d45c41e2d,artix,artix2@gmail.com,Fri Apr 20 19:29:42 2018 +0200,1524245382,Cluster tests now using redis-cli instead of redis-trib,12.0,12.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER,tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9798687566511528,11.0,118.0,10.0,754.2847048611111,30.5,1.0009617583137786,1.0,Preventative,False,,
aba76320d59a1ea5507336eb8636aa2ab449a3e0,24036b4d32d857066a2ccfc6cef2e8a751634ad5,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sun Apr 22 22:30:44 2018 +0800,1524407444,RDB: expand dict if needed when rdb load object,6.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2426.0,224.0,37.071921296296296,60.0,1.026974593304931,59.0,None,False,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,ad911a338a00286f8a5cec445bfa1f5ab05cd527,artix,artix2@gmail.com,Fri Jan 12 11:06:24 2018 +0100,1515751584,Cluster Manager mode,108.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,6682.0,228.0,-98.30467592592592,32.0,0.9898275439028604,30.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
ad911a338a00286f8a5cec445bfa1f5ab05cd527,486c7af7b8c75d76df4cf9ea2571d4e5a6e000c3,artix,artix2@gmail.com,Wed Jan 31 16:26:21 2018 +0100,1517412381,"Cluster Manager: 'create', 'info' and 'check' commands",1272.0,27.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.016604726044914062,14.0,3539.5,382.0,-24.867748842592587,33.5,0.982695994764447,32.0,None,False,True,"[""4e0c2f9c3c5c800df2c1ed61ed862983b15a80bf"", ""220375b4240b46dbcc9eb2599a090cd0e6ffaecd"", ""62a4a8c1d58308fa67978352376db2f2aede449a"", ""bdc783b472769e9881b42ed8c45583ab98a791e8""]"
486c7af7b8c75d76df4cf9ea2571d4e5a6e000c3,8c7ad80f9f9c916620873bf8e52f18b51ce9208c,artix,artix2@gmail.com,Wed Jan 31 17:57:16 2018 +0100,1517417836,Added check for open slots (clusterManagerCheckCluster),143.0,19.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8034.0,230.0,0.06313657407407408,35.0,16.838680109990836,33.0,Feature Addition,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
8c7ad80f9f9c916620873bf8e52f18b51ce9208c,b3e0ca3412edbed27f07e2cd5f62b1506c013029,artix,artix2@gmail.com,Wed Jan 31 19:25:02 2018 +0100,1517423102,- Cluster Manager: fixed various memory leaks - Cluster Manager: fixed flags assignment in   clusterManagerNodeLoadInfo,37.0,17.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8158.0,231.0,0.06094907407407407,36.0,17.407140144322067,34.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
b3e0ca3412edbed27f07e2cd5f62b1506c013029,65d37960e78512e9d530ee8f1030f091ce784557,artix,artix2@gmail.com,Thu Feb 1 17:43:36 2018 +0100,1517503416,Cluster Manager: slots coverage check.,31.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8178.0,232.0,0.9295601851851852,37.0,2.0757775730258734,35.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
65d37960e78512e9d530ee8f1030f091ce784557,4cc8de1a371696ea16485d18c082b4c6481bf5b5,artix,artix2@gmail.com,Thu Feb 1 20:09:30 2018 +0100,1517512170,Cluster Manager: reply error catch for MEET command,10.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8208.0,233.0,0.10131944444444443,38.0,10.869773817683344,36.0,None,False,,
4cc8de1a371696ea16485d18c082b4c6481bf5b5,c002b95d89b917641ddbdb502d29bafa919a2212,artix,artix2@gmail.com,Wed Feb 7 11:29:25 2018 +0100,1517999365,Cluster Manager: cluster is considered consistent if only one node has been found,4.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8217.0,234.0,5.638831018518517,39.0,1.1773417214872894,37.0,None,False,,
c002b95d89b917641ddbdb502d29bafa919a2212,2f48d62423e7e19cb872472b1c229e47f1529cc7,artix,artix2@gmail.com,Wed Feb 7 12:02:56 2018 +0100,1518001376,ClusterManager: added replicas count to clusterManagerNode,40.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8220.0,235.0,0.023275462962962963,40.0,43.963699651914474,38.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
2f48d62423e7e19cb872472b1c229e47f1529cc7,1ad1f00163ecd4c794ce94479de1dc3084187b6e,artix,artix2@gmail.com,Fri Feb 9 13:02:37 2018 +0100,1518177757,Cluster Manager: CLUSTER_MANAGER_NODE_CONNECT macro,5.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8259.0,236.0,2.041446759259259,41.0,1.4898486798464687,39.0,None,False,,
1ad1f00163ecd4c794ce94479de1dc3084187b6e,2d677e2bf354342efefadce9b9536ccc1ab3005b,artix,artix2@gmail.com,Tue Feb 13 12:00:06 2018 +0100,1518519606,Cluster Manager: 'call' command.,58.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8261.0,237.0,3.956585648148148,42.0,1.2527431702301308,40.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a"", ""dfe81b33fe610ccdc205f5b5e49f94f8aa8fbefc""]"
2d677e2bf354342efefadce9b9536ccc1ab3005b,307d995f75d9e0d8dab12d2dd2aca0499481257d,artix,artix2@gmail.com,Wed Feb 14 17:54:46 2018 +0100,1518627286,Cluster Manager: improved cleanup/error handling in various functions,56.0,45.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8319.0,238.0,1.2462962962962962,43.0,1.8023774145616642,41.0,None,False,,
307d995f75d9e0d8dab12d2dd2aca0499481257d,18910013cd852ea6246a766851b52938cff217e2,artix,artix2@gmail.com,Wed Feb 14 19:29:28 2018 +0100,1518632968,Cluster Manager: colorized output,95.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8330.0,239.0,0.06576388888888889,44.0,16.205913410770854,42.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
18910013cd852ea6246a766851b52938cff217e2,4e0c2f9c3c5c800df2c1ed61ed862983b15a80bf,artix,artix2@gmail.com,Tue Feb 20 12:01:13 2018 +0100,1519124473,- Fixed bug in clusterManagerGetAntiAffinityScore - Code improvements,28.0,29.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8390.0,240.0,5.688715277777778,45.0,1.1757866145817435,43.0,Corrective,True,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a"", ""c90cf3d82f3288762441f2c287a21301c8be0ae7""]"
4e0c2f9c3c5c800df2c1ed61ed862983b15a80bf,7d609ff952dbbcaa3574287a16349e56cbae03bb,artix,artix2@gmail.com,Thu Feb 22 18:32:39 2018 +0100,1519320759,Cluster Manager: - Almost all Cluster Manager related code moved to   the same section. - Many macroes converted to functions - Added various comments - Little code restyling,272.0,190.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8389.0,241.0,2.2718287037037035,46.0,1.4401740317699685,44.0,None,False,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""62a4a8c1d58308fa67978352376db2f2aede449a""]"
7d609ff952dbbcaa3574287a16349e56cbae03bb,99da9c9508afcde3e08c952122e6ac8eb01b17ce,artix,artix2@gmail.com,Wed Feb 28 10:44:11 2018 +0100,1519811051,"Cluster Manager: reshard command, fixed slots parsing bug and other minor bugs.",593.0,62.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,8471.0,242.0,5.674675925925926,47.0,1.1762215169735586,45.0,None,False,True,"[""220375b4240b46dbcc9eb2599a090cd0e6ffaecd"", ""62a4a8c1d58308fa67978352376db2f2aede449a"", ""4e74d9cf558918f682adbf2be750998bfca7e950"", ""64324901f22946a93226e0af56a6e59b2290be09""]"
99da9c9508afcde3e08c952122e6ac8eb01b17ce,220375b4240b46dbcc9eb2599a090cd0e6ffaecd,artix,artix2@gmail.com,Wed Feb 28 11:49:10 2018 +0100,1519814950,Fixed memory write error in clusterManagerGetConfigSignature,5.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9002.0,243.0,0.04512731481481482,48.0,23.15952808412413,46.0,Corrective,True,,
220375b4240b46dbcc9eb2599a090cd0e6ffaecd,5b3d73b3d71fa8805af7677825cd5445f6a217ea,Artix,artix2@gmail.com,Wed Feb 28 15:21:08 2018 +0100,1519827668,Cluster Manager: fixed some memory error,8.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9003.0,244.0,0.14719907407407407,1.0,7.7935209938669585,1.0,None,False,,
5b3d73b3d71fa8805af7677825cd5445f6a217ea,a4a1c7bb52dda29a4caaed07ba4222aa7f078f29,artix,artix2@gmail.com,Fri Mar 2 17:06:50 2018 +0100,1520006810,ClusterManager: fixed --cluster-from 'all' parsing,12.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9008.0,245.0,2.0734027777777784,49.0,1.4822989583682218,47.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
a4a1c7bb52dda29a4caaed07ba4222aa7f078f29,adebee8adc493f7f768aa23aaeb4bed2f51ae820,artix,artix2@gmail.com,Tue Mar 6 13:06:04 2018 +0200,1520334364,clusterManagerAddSlots: changed the way ADDSLOTS command is built,18.0,20.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9011.0,246.0,3.7911342592592594,50.0,1.263773301501432,48.0,Feature Addition,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
adebee8adc493f7f768aa23aaeb4bed2f51ae820,6d1a7cec230e5a892be3eeffeec83231a4079b9f,artix,artix2@gmail.com,Fri Mar 23 16:46:43 2018 +0100,1521820003,Cluster Manager: rebalance command,284.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9009.0,247.0,17.194895833333334,51.0,1.0581567931374984,49.0,None,False,True,"[""bbd0ca952292979f54b5479d9397d1510f8bb84c"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""62a4a8c1d58308fa67978352376db2f2aede449a""]"
6d1a7cec230e5a892be3eeffeec83231a4079b9f,3f8a4adb49c29fbc2778aded97089fc6fa770afc,artix,artix2@gmail.com,Fri Apr 6 18:02:40 2018 +0200,1523030560,Cluster Manager: fix command.,642.0,73.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,9284.0,248.0,14.011076388888887,52.0,1.0713721039158008,50.0,None,False,True,"[""3c039996b533c48b5de8e54e90441b2eda632393"", ""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""62a4a8c1d58308fa67978352376db2f2aede449a"", ""2961c891616a6d60e28aea748c3c2422cb4f90b6""]"
3f8a4adb49c29fbc2778aded97089fc6fa770afc,1f548359cba410f8423d8aba101c43bd9280e489,artix,artix2@gmail.com,Tue Apr 10 16:25:25 2018 +0200,1523370325,Cluster Manager: import command,194.0,22.0,"src/Makefile,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.0758415063771471,14.0,5071.5,403.0,36.445075231481475,53.5,1.0141104608081375,52.0,None,False,True,"[""e1222d8b10552cda6f6fdf1178a2ca25ad77894b"", ""62a4a8c1d58308fa67978352376db2f2aede449a""]"
1f548359cba410f8423d8aba101c43bd9280e489,efa51f161726d7992e6c2a90710faabf9312b2d1,artix,artix2@gmail.com,Tue Apr 10 16:53:24 2018 +0200,1523372004,Cluster Manager: added clusterManagerCheckCluster to import command,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10025.0,250.0,0.019432870370370368,55.0,52.45920190589637,53.0,None,False,,
efa51f161726d7992e6c2a90710faabf9312b2d1,aeaf6ee1c32686e2623ae0551a86edc202579b9a,artix,artix2@gmail.com,Wed Apr 11 17:08:53 2018 +0200,1523459333,Cluster Manager: add-node command.,154.0,14.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10026.0,251.0,1.0107523148148148,56.0,1.9893620675835064,54.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
aeaf6ee1c32686e2623ae0551a86edc202579b9a,52f17f6f8ed828a211e468ef6a745a6c6cb846a9,artix,artix2@gmail.com,Wed Apr 11 18:22:44 2018 +0200,1523463764,- Cluster Manager: del-node command. - Cluster Manager: fixed bug in clusterManagerNodeWithLeastReplicas,73.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10166.0,252.0,0.05128472222222223,57.0,20.49898442789438,55.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
52f17f6f8ed828a211e468ef6a745a6c6cb846a9,5f358dae337c78ed14a5080d991e83d3b68588f6,artix,artix2@gmail.com,Fri Apr 13 16:09:22 2018 +0200,1523628562,Cluster Manager: set-timeout command,64.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10238.0,253.0,1.90738425925926,58.0,1.524278207259797,56.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a"", ""64324901f22946a93226e0af56a6e59b2290be09""]"
5f358dae337c78ed14a5080d991e83d3b68588f6,5bc2c98789905a75322f83648dd104b8458ac477,artix,artix2@gmail.com,Thu Apr 19 18:52:01 2018 +0200,1524156721,Cluster Manager: code improvements and more comments added.,31.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10296.0,254.0,6.112951388888887,59.0,1.1635871016114463,57.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
5bc2c98789905a75322f83648dd104b8458ac477,2f31545beb939f23b89acfa2a188c1393cdbbd2a,artix,artix2@gmail.com,Fri Apr 20 18:08:30 2018 +0200,1524240510,Cluster Manager: fixed bug when parsing CLUSTER NODES reply (clusterManagerNodeLoadInfo),4.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10292.0,255.0,0.9697800925925926,60.0,2.031161608325675,58.0,None,False,,
2f31545beb939f23b89acfa2a188c1393cdbbd2a,be94e890319d7abaea462922d57222df0ca345f0,artix,artix2@gmail.com,Fri Apr 20 19:25:08 2018 +0200,1524245108,Cluster Manager: fixed expected slots calculation (rebalance) Cluster Manager: fixed argument parsing after --cluster-weight,4.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10294.0,256.0,0.053217592592592594,61.0,19.79077859939104,59.0,None,False,,
be94e890319d7abaea462922d57222df0ca345f0,af4584d608beb12c8f9fb33d209b507c4d8ea944,artix,artix2@gmail.com,Fri Apr 20 19:29:42 2018 +0200,1524245382,Cluster tests now using redis-cli instead of redis-trib,12.0,12.0,"tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER,tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER",2.0,1.0,1.0,0.9798687566511528,11.0,118.0,12.0,0.0,62.5,0.0,3.0,Preventative,False,,
af4584d608beb12c8f9fb33d209b507c4d8ea944 04eac76bae8d5fb4699e14ebccb91f0d45c41e2d,26b3a0eb21ac6b4beb96825011fa22427c288e8c,artix,artix2@gmail.com,Mon Apr 23 16:29:29 2018 +0200,1524493769,Merge branch 'trib2cli' of github.com:artix75/redis into trib2cli,,,,,,,,,,,,,,,Merge,False,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,438125b47c3b2b94e67c80bf64a7d8b6207b236a,Itamar Haber,itamar@redislabs.com,Mon Apr 30 02:10:42 2018 +0300,1525043442,Implements [B]Z[REV]POP and the respective unit testsAn implementation of then[Ze POP Redis Module](https://github.com/itamarhaber/zpop) as corenRedis commands.nnFixes #1861.n,380.0,20.0,"src/blocked.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",6.0,2.0,2.0,1.865065265760168,15.0,2037.166666666667,755.0,38.137824074074075,43.5,1.01057319526047,43.0,Preventative,False,,
404160a27198b9bfbac2086be20c4ca130b47eac,49890c8ee9776f13aaabf7fe76d796a89de6bf1a,Itamar Haber,itamar@redislabs.com,Mon Apr 30 19:33:01 2018 +0300,1525105981,"Adds memory information about the script's cache to INFOImplementation notes: as INFO is already broken, I didn't want to break it further. Instead of computing the server.lua_script dict size on every call, I'm keeping a running sum of the body's length and dict overheads.nnThis implementation is naive as it **does not** take into consideration dict rehashing, but that inaccuracy pays off in speed ;)nnDemo time:nn```bashn$ redis-cli info memory | grep scriptnused_memory_scripts:96nused_memory_scripts_human:96Bnnumber_of_cached_scripts:0n$ redis-cli eval  0 ; redis-cli info memory | grep scriptn(nil)nused_memory_scripts:120nused_memory_scripts_human:120Bnnumber_of_cached_scripts:1n$ redis-cli script flush ; redis-cli info memory | grep scriptnOKnused_memory_scripts:96nused_memory_scripts_human:96Bnnumber_of_cached_scripts:0n$ redis-cli eval return('Hello, Script Cache :)') 0 ; redis-cli info memory | grep scriptnHello, Script Cache :)nused_memory_scripts:152nused_memory_scripts_human:152Bnnumber_of_cached_scripts:1n$ redis-cli eval return redis.sha1hex(return('Hello, Script Cache :)')) 0 ; redis-cli info memory | grep scriptn1be72729d43da5114929c1260a749073732dc822nused_memory_scripts:232nused_memory_scripts_human:232Bnnumber_of_cached_scripts:2nu00e2u009cu0094 19:03:54 redis [lua_scripts-in-info-memory L u00e2u009cu009au00e2u0080u00a6u00e2u009au0091] $ redis-cli evalsha 1be72729d43da5114929c1260a749073732dc822 0nHello, Script Cache :)n```",12.0,0.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.188721875540867,15.0,2836.666666666666,533.0,48.89177469135803,48.0,1.00685170378548,46.0,Feature Addition,False,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,fd9177dd33de2bc8fddf1d304b7b5810d98c2a1d,Krzysztof Filipek,krzysztof.filipek@intel.com,Sun May 6 20:18:48 2018 +0200,1525630728,Typo in preprocessor condition,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,438.0,42.0,77.1128125,0.0,0.0,0.0,None,False,,
26b3a0eb21ac6b4beb96825011fa22427c288e8c,35b3a8e1ee145d40a51c586ca937bc86a4230f41,artix,artix2@gmail.com,Mon May 7 15:56:12 2018 +0200,1525701372,- Updated create-cluster with redis-cli - Updated README,3.0,3.0,"utils/create-cluster/README,CAS_DELIMITER,utils/create-cluster/create-cluster,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,14.0,64.5,8.0,356.4189178240741,64.5,1.0022417060112103,1.0,Feature Addition,False,,
35b3a8e1ee145d40a51c586ca937bc86a4230f41,3312de067cfe78a63401059defa1c0c4a8274b10,artix,artix2@gmail.com,Mon May 7 17:31:34 2018 +0200,1525707094,Cluster Manager: --cluster options can now be placed everywhere,11.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10293.0,257.0,16.921134259259258,66.0,1.0590976931379643,60.0,None,False,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,8d93f924ea44c4139d690a914af662b6f059709a,u00e8u00b5u00b5u00e7u00a3u008a,zhaolei21@meituan.com,Tue May 8 15:30:11 2018 +0800,1525764611,Fix dictScan(): It can't scan all buckets when dict is shrinking.,14.0,11.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1221.0,83.0,39.912453703703704,1.0,1.0250548364533951,1.0,Corrective,True,,
aba76320d59a1ea5507336eb8636aa2ab449a3e0,edb92db53323ca3952a5509b3950f9d89eddad30,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue May 8 19:22:13 2018 +0800,1525778533,AOF & RDB: be compatible with rdbchecksum no,9.0,7.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2432.0,225.0,15.869085648148149,61.0,1.0630156029258495,60.0,None,False,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc f0e09bf8030680ad22682f2040f03b14ffd592a5,aaef5f00ccd0b2f430ddc8093a870e4134d49017,Salvatore Sanfilippo,antirez@gmail.com,Tue May 8 17:27:18 2018 +0200,1525793238,Merge pull request #4594 from smallstool/bugfix-freeMemoryIfneeded-int-overflowfix int overflow problem in freeMemoryIfNeeded,,,,,,,,,,,,,,,Merge,False,,
aaef5f00ccd0b2f430ddc8093a870e4134d49017,cd87b3c71f79062d9e95abada186e1cac03f5cc6,antirez,antirez@gmail.com,Wed May 9 11:03:27 2018 +0200,1525856607,"Fix rdb.c dictionary iterator release.Some times it was not released on error, sometimes it was released twontimes because the error path expected the di var to be NULL if theniterator was already released. Thanks to @oranagra for pinging me aboutnpotential problems of this kind inside rdb.c.n",17.0,5.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2434.0,226.0,0.9036342592592592,10442.0,2.1066424161692754,5496.0,Corrective,True,,
cd87b3c71f79062d9e95abada186e1cac03f5cc6,b85aae78dfad8cf49b1056ee598c1846252a2ef3,antirez,antirez@gmail.com,Wed May 9 12:06:37 2018 +0200,1525860397,Fix rdb.c dictionary iterator release in 2 more places.,8.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2446.0,227.0,0.04386574074074074,10443.0,23.796833773087073,5497.0,Corrective,True,,
b85aae78dfad8cf49b1056ee598c1846252a2ef3 438125b47c3b2b94e67c80bf64a7d8b6207b236a,6b026b70a8783f5cf58828401e7cecfa278d55d9,antirez,antirez@gmail.com,Fri May 11 10:40:13 2018 +0200,1526028013,Merge branch 'zpop' of https://github.com/itamarhaber/redis into zpop,,,,,,,,,,,,,,,Merge,False,,
6b026b70a8783f5cf58828401e7cecfa278d55d9,6efb6c1e069b414305a92cf57cee31d13a84a44a,antirez,antirez@gmail.com,Fri May 11 17:31:46 2018 +0200,1526052706,ZPOP: renaming to have explicit MIN/MAX score idea.This commit also adds a top comment about a subtle behavior of mixingnblocking operations of different types in the same key.n,111.0,100.0,"src/blocked.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",5.0,2.0,2.0,2.0380879550198,15.0,2218.6,565.0,11.391763888888883,10446.0,1.0398373539192758,762.0,None,False,True,"[""db6b99f90cc569c8126e2b7b0123508d8b8b015d"", ""c9d9ae7baaf717607db3d4ad81597dc99d0c002c""]"
6efb6c1e069b414305a92cf57cee31d13a84a44a,56bbab238a0fb0c14e1ca0cdb0ebadc8fb8dc945,antirez,antirez@gmail.com,Fri May 11 18:00:32 2018 +0200,1526054432,"ZPOP: change sync ZPOP to have a count argument instead of N keys.Usually blocking operations make a lot of sense with multiple keys sonthat we can listen to multiple queues (or whatever the app models) withna single connection. However in the synchronous case it is more usefulnto be able to ask for N elements. This is a change that I also wanted tonperform soon or later in the blocking list variant, but here it is morennatural since there is no reply type difference.n",95.0,56.0,"src/blocked.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",3.0,1.0,1.0,0.20296212547775733,15.0,1961.666666666667,355.0,0.019976851851851853,10450.0,31.590961761297788,5504.0,None,False,,
56bbab238a0fb0c14e1ca0cdb0ebadc8fb8dc945,e87c1f1e6cb675209e4a9670af910d95397d18ab,antirez,antirez@gmail.com,Fri May 11 18:07:03 2018 +0200,1526054823,ZPOP: fix the tests according to new non-blocking count argument.,11.0,15.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1216.0,40.0,0.024502314814814814,10452.0,41.81247047709022,763.0,None,False,,
3312de067cfe78a63401059defa1c0c4a8274b10,3c039996b533c48b5de8e54e90441b2eda632393,artix,artix2@gmail.com,Fri May 11 18:28:10 2018 +0200,1526056090,- Fixed mistyped redis command (clusterManagerGetNodeWithMostKeysInSlot) - Cluster node structure is now updated after ADDSLOTS,13.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10302.0,258.0,4.039305555555557,67.0,1.2475673073616889,61.0,Corrective,True,True,"[""93238575f77630f24e0472bdbf7eecb73a4652a8"", ""62a4a8c1d58308fa67978352376db2f2aede449a""]"
e87c1f1e6cb675209e4a9670af910d95397d18ab,25f017e563c0e1ef9837604a96e4655b021bad32,antirez,antirez@gmail.com,Tue May 15 16:03:56 2018 +0200,1526393036,ZPOP: fix replication of blocking ZPOP.,12.0,4.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,571.0,36.0,3.9190277777777776,10453.0,1.255165325867385,5505.0,None,False,,
25f017e563c0e1ef9837604a96e4655b021bad32,8327ccef0e2775b243a5d22dfcf1e45c08ddf47e,antirez,antirez@gmail.com,Tue May 15 17:33:21 2018 +0200,1526398401,Test: replication test blocking lists/zsets ops.,110.0,0.0,"tests/helpers/bg_block_op.tcl,CAS_DELIMITER,tests/integration/block-repl.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.0626634393615193,15.0,189.3333333333333,106.0,29.39741512345679,10455.0,0.3371129551349268,766.0,Preventative,False,,
8327ccef0e2775b243a5d22dfcf1e45c08ddf47e,e344aa4a6dbffae551a8c3c344c0e9237fff6107,antirez,antirez@gmail.com,Tue May 15 17:43:04 2018 +0200,1526398984,"Test: fix blocking lists/zsets replication test.By verifying that it was able to find a regression, and fixing itnaccordingly.n",6.0,5.0,"tests/helpers/bg_block_op.tcl,CAS_DELIMITER,tests/integration/block-repl.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9940302114769564,15.0,54.5,2.0,0.0067476851851851856,10457.5,112.1492281303602,768.0,Preventative,False,,
3c039996b533c48b5de8e54e90441b2eda632393,2f9c032a136cd564d915d4db65a4d95f101a8940,artix,artix2@gmail.com,Tue May 15 18:41:46 2018 +0200,1526402506,Cluster Manager: print flags as strings.,72.0,18.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10314.0,259.0,4.009444444444443,68.0,1.2494111126506862,62.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
e344aa4a6dbffae551a8c3c344c0e9237fff6107,c082221aefbb2a472c7193dbdbb90900256ce1a2,dejun.xdj,dejun.xdj@alibaba-inc.com,Wed May 16 16:15:12 2018 +0800,1526458512,Add warning message when using password on command line,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10368.0,260.0,0.6482175925925926,3.0,2.5426918544441666,3.0,Feature Addition,False,,
c082221aefbb2a472c7193dbdbb90900256ce1a2,b263c7c465f83071d90991a036f6c9772890604b,dejun.xdj,dejun.xdj@alibaba-inc.com,Wed May 16 16:18:00 2018 +0800,1526458680,Stop saving auth command in redis-cli history.,4.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10369.0,261.0,0.0019444444444444448,4.0,515.2857142857143,4.0,None,False,,
2f9c032a136cd564d915d4db65a4d95f101a8940,1e4fb1b33a92e85c189510a46acdf37937a325cd,artix,artix2@gmail.com,Wed May 16 17:49:18 2018 +0200,1526485758,Cluster Manager: fixed unprinted reply error,6.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10371.0,262.0,0.3134027777777777,69.0,4.190782184799469,63.0,None,False,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a""]"
1e4fb1b33a92e85c189510a46acdf37937a325cd,e47c751c7414c2747c7c2d934656978ecddbe9bf,artix,artix2@gmail.com,Wed May 16 18:04:13 2018 +0200,1526486653,Removed TODO in redis-cli,0.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10371.0,263.0,0.010358796296296295,70.0,97.536312849162,64.0,None,False,,
25f017e563c0e1ef9837604a96e4655b021bad32,ad133e10238eed678694160dc0eecd70c30d0232,Oran Agra,oran@redislabs.com,Thu May 17 09:52:00 2018 +0300,1526539920,Active defrag fixes for 32bit buildsproblems fixed:n* failing to read fragmentation information from jemallocn* overflow in jemalloc fragmentation hint to the defraggern* test suite not triggering eviction after populationn,13.0,8.0,"deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",4.0,3.0,3.0,1.7814164026211206,15.0,1814.25,234.0,123.4042332175926,63.5,1.002395759594425,8.0,Corrective,True,True,"[""98d5d3f118eebb1d1e86625ab0ff808d019456bb""]"
e344aa4a6dbffae551a8c3c344c0e9237fff6107 ad133e10238eed678694160dc0eecd70c30d0232,13779c11f8f7ce144a09b8a57f7b8020035ea869,Salvatore Sanfilippo,antirez@gmail.com,Thu May 17 12:24:40 2018 +0200,1526552680,Merge pull request #4927 from oranagra/defrag_32bit_fixActive defrag fixes for 32bit builds,,,,,,,,,,,,,,,Merge,False,,
e344aa4a6dbffae551a8c3c344c0e9237fff6107 e47c751c7414c2747c7c2d934656978ecddbe9bf,3c43e984db6289cf5da4bb4e1dc674dff353712f,antirez,antirez@gmail.com,Thu May 17 16:52:31 2018 +0200,1526568751,Merge remote-tracking branch 'artix/trib2cli' into unstable,,,,,,,,,,,,,,,Merge,False,,
3c43e984db6289cf5da4bb4e1dc674dff353712f 13779c11f8f7ce144a09b8a57f7b8020035ea869,3c968ff0300c7e1e442889315d405e00a37d86bc,antirez,antirez@gmail.com,Thu May 17 16:53:14 2018 +0200,1526568794,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
b263c7c465f83071d90991a036f6c9772890604b,ef931ef93e909b4f504e8c6fbed350ed70c1c67c,dejun.xdj,dejun.xdj@alibaba-inc.com,Fri May 18 11:37:31 2018 +0800,1526614651,Change the warning message a little bit to avoid trademark issuses.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10370.0,264.0,1.481458333333333,5.0,1.6750105470397971,5.0,None,False,,
ef931ef93e909b4f504e8c6fbed350ed70c1c67c,c2e2314640159078416400b9c9b155879c6a1386,dejun.xdj,dejun.xdj@alibaba-inc.com,Fri May 18 11:40:05 2018 +0800,1526614805,Detect and stop saving history for auth command with repeat option.Put the repeat option checking code a little forward to avoid repeat logic.n,17.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10370.0,265.0,0.0017824074074074075,6.0,562.038961038961,6.0,None,False,True,"[""b2762f1ff2db7d8fb84a90aa701098334db52ce0""]"
c2e2314640159078416400b9c9b155879c6a1386,b2762f1ff2db7d8fb84a90aa701098334db52ce0,dejun.xdj,dejun.xdj@alibaba-inc.com,Sat May 19 22:50:40 2018 +0800,1526741440,"Fix negtive repeat command value issue.If command like -1 set a b is sent with redis-cli, it will cause a deadless loop. So some repeat value checking logic is added to avoid this.n",11.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10377.0,266.0,1.4656828703703704,7.0,1.6822758321159237,7.0,Corrective,True,,
b2762f1ff2db7d8fb84a90aa701098334db52ce0,cc7ffdfdf204fc7ab815ee602769de7f9323c353,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon May 21 12:04:53 2018 +0800,1526875493,Change the type of repeat argument to long for function cliSendCommand.To be in consistent with the original definition.n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10385.0,267.0,1.5515393518518519,8.0,1.644521196840056,8.0,None,False,,
cc7ffdfdf204fc7ab815ee602769de7f9323c353,95b988b6c69083fff3e00271653c2239d482ea0d,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon May 21 12:06:48 2018 +0800,1526875608,Check if the repeat value is positive in while loop of cliSendCommand().In case that the incoming repeat parameter is negative and causes andeadless loop.n,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10385.0,268.0,0.0013310185185185185,9.0,752.304347826087,9.0,None,False,True,"[""2f6ed9333f082b9cd27bfab05013521b88f077c7""]"
e344aa4a6dbffae551a8c3c344c0e9237fff6107,46e241ac8e5918c2d774752346bc9b6fd4b0adeb,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon May 21 12:19:37 2018 +0800,1526876377,Fix redis-cli memory leak when sending set preference command.,2.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10385.0,269.0,0.008900462962962962,10.0,113.35370611183356,10.0,Corrective,True,,
3c968ff0300c7e1e442889315d405e00a37d86bc,4e7a160b9bde8d192d874116504ea6720791e801,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue May 22 21:31:22 2018 +0800,1526995882,"ZPOP: fix the wrong keyc, should be 1",4.0,4.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,3254.0,138.0,10.896412037037036,62.0,1.0917733283764406,61.0,None,False,,
3c968ff0300c7e1e442889315d405e00a37d86bc 4e7a160b9bde8d192d874116504ea6720791e801,f1321349d372115a8c87ee89c2af86045bbe7441,Salvatore Sanfilippo,antirez@gmail.com,Tue May 22 15:52:21 2018 +0200,1526997141,"Merge pull request #4935 from soloestoy/bugfix-zpopbugfix for ZPOP: fix the wrong keyc, should be 1",,,,,,,,,,,,,,,Merge,False,,
f1321349d372115a8c87ee89c2af86045bbe7441 edb92db53323ca3952a5509b3950f9d89eddad30,1ab3c823750c32b756a55f5b1b3b01ddb70c75c3,Salvatore Sanfilippo,antirez@gmail.com,Wed May 23 17:11:00 2018 +0200,1527088260,Merge pull request #4908 from soloestoy/aof-rdb-preamble-compatible-checksum-noAOF & RDB: be compatible with rdbchecksum no,,,,,,,,,,,,,,,Merge,False,,
f1321349d372115a8c87ee89c2af86045bbe7441,8631e6477904f3d8f87662fd93a1ba294615654a,antirez,antirez@gmail.com,Wed May 23 17:11:59 2018 +0200,1527088319,"Sentinel: fix delay in detecting ODOWN.See issue #2819 for details. The gist is that when we want to send INFOnbecause we are over the time, we used to send only INFO commands, nonlonger sending PING commands. However if a master fails exactly when wenare about to send an INFO command, the PING times will result zeronbecause the PONG reply was already received, and we'll fail to send morenPINGs, since we try only to send INFO commands: the failure detectornwill delay until the connection is closed and re-opened for longntimeout.nnThis commit changes the logic so that we can send the three kind ofnmessages regardless of the fact we sent another one already in the samencode path. It could happen that we go over the message limit for thenlink by a few messages, but this is not significant. However now we'llnnot introduce delays in sending commands just because there wasnsomething else to send at the same time.n",9.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4336.0,231.0,457.0014467592592,10459.0,1.0021881768801637,5506.0,None,False,,
8631e6477904f3d8f87662fd93a1ba294615654a 1ab3c823750c32b756a55f5b1b3b01ddb70c75c3,de4b6cb27b4e535cfbabaddf7bb9cd6d19534cfe,antirez,antirez@gmail.com,Wed May 23 17:14:59 2018 +0200,1527088499,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
de4b6cb27b4e535cfbabaddf7bb9cd6d19534cfe 07125b8d22d268b85281ce0c588d72caf7680cd4,8a200b04c3bf71888815d35ea0a84904bced8a91,Salvatore Sanfilippo,antirez@gmail.com,Thu May 24 16:07:19 2018 +0200,1527170839,"Merge pull request #4831 from 0xtonyxia/fix-xadd-arity-checkBugfix: xadd comand <field,value> arity check",,,,,,,,,,,,,,,Merge,False,,
8a200b04c3bf71888815d35ea0a84904bced8a91 95b988b6c69083fff3e00271653c2239d482ea0d,ef7ccad180decf89f8e378b86813af2984804d27,Salvatore Sanfilippo,antirez@gmail.com,Thu May 24 16:14:42 2018 +0200,1527171282,Merge pull request #4922 from 0xtonyxia/enhance-cli-securityEnhance security for redis-cli,,,,,,,,,,,,,,,Merge,False,,
ef7ccad180decf89f8e378b86813af2984804d27 46e241ac8e5918c2d774752346bc9b6fd4b0adeb,18b7f71130ca001f47d605f8e03a99cf1785d54f,Salvatore Sanfilippo,antirez@gmail.com,Thu May 24 16:15:21 2018 +0200,1527171321,Merge pull request #4932 from 0xtonyxia/fix-redis-cli-set-prefer-memory-leakFix redis-cli memory leak when sending set :preference command.,,,,,,,,,,,,,,,Merge,False,,
18b7f71130ca001f47d605f8e03a99cf1785d54f c8ca71d40bc51e255457cd4374dd45ec9ebf8ae1,b23a501135e573e285522d7f74982c3fb3fde2ab,Salvatore Sanfilippo,antirez@gmail.com,Thu May 24 16:16:12 2018 +0200,1527171372,Merge pull request #4099 from JunHe77/aarch64_stack_cflagFixed stack trace generation on aarch64,,,,,,,,,,,,,,,Merge,False,,
de4b6cb27b4e535cfbabaddf7bb9cd6d19534cfe,8f4e2075a703acce08056321f49defd44dae19ed,antirez,antirez@gmail.com,Thu May 24 17:16:12 2018 +0200,1527174972,Update documentation about how to upgrade Jemalloc.,20.0,3.0,"deps/README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,66.0,1.0,961.2638425925926,10460.0,1.0010402971127084,1245.0,Non Functional,False,,
8f4e2075a703acce08056321f49defd44dae19ed,08e1c8e820031751bd58736cc334dda1bc55cb5c,antirez,antirez@gmail.com,Thu May 24 17:17:37 2018 +0200,1527175057,Jemalloc upgraded to version 5.0.1.,45066.0,39094.0,"deps/jemalloc/.appveyor.yml,CAS_DELIMITER,deps/jemalloc/.gitignore,CAS_DELIMITER,deps/jemalloc/.travis.yml,CAS_DELIMITER,deps/jemalloc/COPYING,CAS_DELIMITER,deps/jemalloc/ChangeLog,CAS_DELIMITER,deps/jemalloc/INSTALL,CAS_DELIMITER,deps/jemalloc/INSTALL.md,CAS_DELIMITER,deps/jemalloc/Makefile.in,CAS_DELIMITER,deps/jemalloc/README,CAS_DELIMITER,deps/jemalloc/TUNING.md,CAS_DELIMITER,deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/bin/jemalloc-config.in,CAS_DELIMITER,deps/jemalloc/bin/jeprof.in,CAS_DELIMITER,deps/jemalloc/build-aux/config.guess,CAS_DELIMITER,deps/jemalloc/build-aux/config.sub,CAS_DELIMITER,deps/jemalloc/build-aux/install-sh,CAS_DELIMITER,deps/jemalloc/config.guess,CAS_DELIMITER,deps/jemalloc/config.sub,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/configure.ac,CAS_DELIMITER,deps/jemalloc/coverage.sh,CAS_DELIMITER,deps/jemalloc/doc/html.xsl.in,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.3,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.html,CAS_DELIMITER,deps/jemalloc/doc/jemalloc.xml.in,CAS_DELIMITER,deps/jemalloc/doc/stylesheet.xsl,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_inlines_a.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_inlines_b.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_structs_a.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_structs_b.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/arena_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/assert.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic_c11.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic_gcc_atomic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic_gcc_sync.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/atomic_msvc.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/background_thread_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/background_thread_inlines.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/background_thread_structs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base_inlines.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base_structs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/base_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bin.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bin_stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bit_util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/bitmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/cache_bin.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/chunk_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ckh.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ctl.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/div.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/emitter.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_dss.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_inlines.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_mmap.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_structs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/extent_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hash.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/hooks.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/huge.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_includes.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_inlines_a.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_inlines_b.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_inlines_c.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_internal_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/jemalloc_preamble.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/large_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/log.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/malloc_io.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex_pool.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/mutex_prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/nstime.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/pages.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ph.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_namespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_symbols.txt,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/private_unnamespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prng.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof_inlines_a.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof_inlines_b.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof_structs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/prof_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/public_namespace.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ql.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/qr.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/quarantine.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rb.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/rtree_tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/size_classes.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/smoothstep.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/spin.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/stats.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/sz.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache_externs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache_inlines.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache_structs.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tcache_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/ticker.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd_generic.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd_malloc_thread_cleanup.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd_tls.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd_types.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/tsd_win.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/util.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/valgrind.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/internal/witness.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_defs.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_mangle.sh,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_typedefs.h.in,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/strings.h,CAS_DELIMITER,deps/jemalloc/include/msvc_compat/windows_extra.h,CAS_DELIMITER,deps/jemalloc/install-sh,CAS_DELIMITER,deps/jemalloc/jemalloc.pc.in,CAS_DELIMITER,deps/jemalloc/m4/ax_cxx_compile_stdcxx.m4,CAS_DELIMITER,deps/jemalloc/msvc/ReadMe.txt,CAS_DELIMITER,deps/jemalloc/msvc/jemalloc_vc2015.sln,CAS_DELIMITER,deps/jemalloc/msvc/jemalloc_vc2017.sln,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/jemalloc/jemalloc.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2017/jemalloc/jemalloc.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2017/jemalloc/jemalloc.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2017/test_threads/test_threads.vcxproj,CAS_DELIMITER,deps/jemalloc/msvc/projects/vc2017/test_threads/test_threads.vcxproj.filters,CAS_DELIMITER,deps/jemalloc/msvc/test_threads/test_threads.cpp,CAS_DELIMITER,deps/jemalloc/msvc/test_threads/test_threads.h,CAS_DELIMITER,deps/jemalloc/msvc/test_threads/test_threads_main.cpp,CAS_DELIMITER,deps/jemalloc/run_tests.sh,CAS_DELIMITER,deps/jemalloc/scripts/gen_run_tests.py,CAS_DELIMITER,deps/jemalloc/scripts/gen_travis.py,CAS_DELIMITER,deps/jemalloc/src/arena.c,CAS_DELIMITER,deps/jemalloc/src/atomic.c,CAS_DELIMITER,deps/jemalloc/src/background_thread.c,CAS_DELIMITER,deps/jemalloc/src/base.c,CAS_DELIMITER,deps/jemalloc/src/bin.c,CAS_DELIMITER,deps/jemalloc/src/bitmap.c,CAS_DELIMITER,deps/jemalloc/src/chunk.c,CAS_DELIMITER,deps/jemalloc/src/chunk_dss.c,CAS_DELIMITER,deps/jemalloc/src/chunk_mmap.c,CAS_DELIMITER,deps/jemalloc/src/ckh.c,CAS_DELIMITER,deps/jemalloc/src/ctl.c,CAS_DELIMITER,deps/jemalloc/src/div.c,CAS_DELIMITER,deps/jemalloc/src/extent.c,CAS_DELIMITER,deps/jemalloc/src/extent_dss.c,CAS_DELIMITER,deps/jemalloc/src/extent_mmap.c,CAS_DELIMITER,deps/jemalloc/src/hash.c,CAS_DELIMITER,deps/jemalloc/src/hooks.c,CAS_DELIMITER,deps/jemalloc/src/huge.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER,deps/jemalloc/src/jemalloc_cpp.cpp,CAS_DELIMITER,deps/jemalloc/src/large.c,CAS_DELIMITER,deps/jemalloc/src/log.c,CAS_DELIMITER,deps/jemalloc/src/malloc_io.c,CAS_DELIMITER,deps/jemalloc/src/mb.c,CAS_DELIMITER,deps/jemalloc/src/mutex.c,CAS_DELIMITER,deps/jemalloc/src/mutex_pool.c,CAS_DELIMITER,deps/jemalloc/src/nstime.c,CAS_DELIMITER,deps/jemalloc/src/pages.c,CAS_DELIMITER,deps/jemalloc/src/prng.c,CAS_DELIMITER,deps/jemalloc/src/prof.c,CAS_DELIMITER,deps/jemalloc/src/quarantine.c,CAS_DELIMITER,deps/jemalloc/src/rtree.c,CAS_DELIMITER,deps/jemalloc/src/stats.c,CAS_DELIMITER,deps/jemalloc/src/sz.c,CAS_DELIMITER,deps/jemalloc/src/tcache.c,CAS_DELIMITER,deps/jemalloc/src/ticker.c,CAS_DELIMITER,deps/jemalloc/src/tsd.c,CAS_DELIMITER,deps/jemalloc/src/util.c,CAS_DELIMITER,deps/jemalloc/src/valgrind.c,CAS_DELIMITER,deps/jemalloc/src/witness.c,CAS_DELIMITER,deps/jemalloc/src/zone.c,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-alti.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT-sse2.h,CAS_DELIMITER,deps/jemalloc/test/include/test/SFMT.h,CAS_DELIMITER,deps/jemalloc/test/include/test/btalloc.h,CAS_DELIMITER,deps/jemalloc/test/include/test/extent_hooks.h,CAS_DELIMITER,deps/jemalloc/test/include/test/jemalloc_test.h.in,CAS_DELIMITER,deps/jemalloc/test/include/test/math.h,CAS_DELIMITER,deps/jemalloc/test/include/test/mq.h,CAS_DELIMITER,deps/jemalloc/test/include/test/mtx.h,CAS_DELIMITER,deps/jemalloc/test/include/test/test.h,CAS_DELIMITER,deps/jemalloc/test/include/test/timer.h,CAS_DELIMITER,deps/jemalloc/test/integration/MALLOCX_ARENA.c,CAS_DELIMITER,deps/jemalloc/test/integration/aligned_alloc.c,CAS_DELIMITER,deps/jemalloc/test/integration/allocated.c,CAS_DELIMITER,deps/jemalloc/test/integration/chunk.c,CAS_DELIMITER,deps/jemalloc/test/integration/extent.c,CAS_DELIMITER,deps/jemalloc/test/integration/extent.sh,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/mallocx.sh,CAS_DELIMITER,deps/jemalloc/test/integration/overflow.c,CAS_DELIMITER,deps/jemalloc/test/integration/posix_memalign.c,CAS_DELIMITER,deps/jemalloc/test/integration/rallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/sdallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_arena.c,CAS_DELIMITER,deps/jemalloc/test/integration/thread_tcache_enabled.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.c,CAS_DELIMITER,deps/jemalloc/test/integration/xallocx.sh,CAS_DELIMITER,deps/jemalloc/test/src/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/src/btalloc.c,CAS_DELIMITER,deps/jemalloc/test/src/math.c,CAS_DELIMITER,deps/jemalloc/test/src/mq.c,CAS_DELIMITER,deps/jemalloc/test/src/mtx.c,CAS_DELIMITER,deps/jemalloc/test/src/test.c,CAS_DELIMITER,deps/jemalloc/test/src/thd.c,CAS_DELIMITER,deps/jemalloc/test/src/timer.c,CAS_DELIMITER,deps/jemalloc/test/stress/microbench.c,CAS_DELIMITER,deps/jemalloc/test/test.sh.in,CAS_DELIMITER,deps/jemalloc/test/unit/SFMT.c,CAS_DELIMITER,deps/jemalloc/test/unit/a0.c,CAS_DELIMITER,deps/jemalloc/test/unit/arena_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/arena_reset_prof.c,CAS_DELIMITER,deps/jemalloc/test/unit/arena_reset_prof.sh,CAS_DELIMITER,deps/jemalloc/test/unit/atomic.c,CAS_DELIMITER,deps/jemalloc/test/unit/background_thread.c,CAS_DELIMITER,deps/jemalloc/test/unit/background_thread_enable.c,CAS_DELIMITER,deps/jemalloc/test/unit/base.c,CAS_DELIMITER,deps/jemalloc/test/unit/bit_util.c,CAS_DELIMITER,deps/jemalloc/test/unit/bitmap.c,CAS_DELIMITER,deps/jemalloc/test/unit/ckh.c,CAS_DELIMITER,deps/jemalloc/test/unit/decay.c,CAS_DELIMITER,deps/jemalloc/test/unit/decay.sh,CAS_DELIMITER,deps/jemalloc/test/unit/div.c,CAS_DELIMITER,deps/jemalloc/test/unit/emitter.c,CAS_DELIMITER,deps/jemalloc/test/unit/extent_quantize.c,CAS_DELIMITER,deps/jemalloc/test/unit/fork.c,CAS_DELIMITER,deps/jemalloc/test/unit/hash.c,CAS_DELIMITER,deps/jemalloc/test/unit/hooks.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk.sh,CAS_DELIMITER,deps/jemalloc/test/unit/junk_alloc.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_alloc.sh,CAS_DELIMITER,deps/jemalloc/test/unit/junk_free.c,CAS_DELIMITER,deps/jemalloc/test/unit/junk_free.sh,CAS_DELIMITER,deps/jemalloc/test/unit/lg_chunk.c,CAS_DELIMITER,deps/jemalloc/test/unit/log.c,CAS_DELIMITER,deps/jemalloc/test/unit/mallctl.c,CAS_DELIMITER,deps/jemalloc/test/unit/malloc_io.c,CAS_DELIMITER,deps/jemalloc/test/unit/math.c,CAS_DELIMITER,deps/jemalloc/test/unit/mq.c,CAS_DELIMITER,deps/jemalloc/test/unit/mtx.c,CAS_DELIMITER,deps/jemalloc/test/unit/nstime.c,CAS_DELIMITER,deps/jemalloc/test/unit/pack.c,CAS_DELIMITER,deps/jemalloc/test/unit/pack.sh,CAS_DELIMITER,deps/jemalloc/test/unit/pages.c,CAS_DELIMITER,deps/jemalloc/test/unit/ph.c,CAS_DELIMITER,deps/jemalloc/test/unit/prng.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_accum.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_active.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_active.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_gdump.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_idump.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_idump.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_reset.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_reset.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_tctx.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_tctx.sh,CAS_DELIMITER,deps/jemalloc/test/unit/prof_thread_name.c,CAS_DELIMITER,deps/jemalloc/test/unit/prof_thread_name.sh,CAS_DELIMITER,deps/jemalloc/test/unit/ql.c,CAS_DELIMITER,deps/jemalloc/test/unit/qr.c,CAS_DELIMITER,deps/jemalloc/test/unit/quarantine.c,CAS_DELIMITER,deps/jemalloc/test/unit/rb.c,CAS_DELIMITER,deps/jemalloc/test/unit/retained.c,CAS_DELIMITER,deps/jemalloc/test/unit/rtree.c,CAS_DELIMITER,deps/jemalloc/test/unit/size_classes.c,CAS_DELIMITER,deps/jemalloc/test/unit/slab.c,CAS_DELIMITER,deps/jemalloc/test/unit/smoothstep.c,CAS_DELIMITER,deps/jemalloc/test/unit/spin.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats.c,CAS_DELIMITER,deps/jemalloc/test/unit/stats_print.c,CAS_DELIMITER,deps/jemalloc/test/unit/ticker.c,CAS_DELIMITER,deps/jemalloc/test/unit/tsd.c,CAS_DELIMITER,deps/jemalloc/test/unit/util.c,CAS_DELIMITER,deps/jemalloc/test/unit/witness.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.c,CAS_DELIMITER,deps/jemalloc/test/unit/zero.sh,CAS_DELIMITER",306.0,1.0,22.0,6.557383128611853,15.0,214.48039215686282,702.0,344.4650990226333,10613.5,1.0000606567848962,1551.0,None,False,,
08e1c8e820031751bd58736cc334dda1bc55cb5c,8d76c6a878ba6fdfe59d0eb0a9ba605ebdd0f2bf,antirez,antirez@gmail.com,Thu May 24 17:49:36 2018 +0200,1527176976,Specify that Jemalloc configure requires version.,10.0,5.0,"deps/README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,83.0,2.0,0.023194444444444445,10767.0,44.113772455089816,1552.0,None,False,,
8d76c6a878ba6fdfe59d0eb0a9ba605ebdd0f2bf,fef42d098508e9ee16a2059252a39b0ce7a87adf,antirez,antirez@gmail.com,Thu May 24 17:50:12 2018 +0200,1527177012,Add --with-version in Jemalloc config script.,1.0,1.0,"deps/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,83.0,10.0,687.074699074074,10768.0,1.0014554458217535,1553.0,Feature Addition,False,,
fef42d098508e9ee16a2059252a39b0ce7a87adf,98d5d3f118eebb1d1e86625ab0ff808d019456bb,antirez,antirez@gmail.com,Thu May 24 18:04:17 2018 +0200,1527177857,Make active defragmentation tests optional.They failed when active defrag could not be activated because thenJemalloc version does not include the additional APIs.n,66.0,57.0,"src/config.c,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.3150569452644301,15.0,1173.0,225.0,21.81759837962963,10769.5,1.0252511090598144,769.0,Corrective,True,True,"[""f89c93c8adf2dea395224c5c65d82e90aa323bfd"", ""c8452ab0059877ac4a055e74e604d00244b06053"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
98d5d3f118eebb1d1e86625ab0ff808d019456bb,4e729fcdafaf6cba4a5d7067e9ab531c1e2da39a,antirez,antirez@gmail.com,Thu May 24 18:21:13 2018 +0200,1527178873,Generate configure for Jemalloc.,13746.0,0.0,"deps/jemalloc/VERSION,CAS_DELIMITER,deps/jemalloc/configure,CAS_DELIMITER,deps/jemalloc/test/integration/cpp/basic.cpp,CAS_DELIMITER",3.0,1.0,2.0,0.020281754684207155,15.0,0.0,19.0,0.029444444444444443,10772.0,16.09433962264151,1556.0,None,False,,
4e729fcdafaf6cba4a5d7067e9ab531c1e2da39a b23a501135e573e285522d7f74982c3fb3fde2ab,694145bd7479a0890274500005f7cd31d03e9fd2,antirez,antirez@gmail.com,Thu May 24 18:21:23 2018 +0200,1527178883,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
694145bd7479a0890274500005f7cd31d03e9fd2,af3471a5dc1bf26e7bc2d1578f9bf82e9c7168a2,Mota,motablow@gmail.com,Fri May 25 16:49:23 2018 +0800,1527238163,Fix debug crash-and-recover help info.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1225.0,146.0,56.72806712962963,1.0,1.017627958268257,1.0,Corrective,True,,
694145bd7479a0890274500005f7cd31d03e9fd2,e4f5c0493008a007ad65bd17b1746f24f1106685,antirez,antirez@gmail.com,Fri May 25 13:36:51 2018 +0200,1527248211,Don't append libjemalloc.a otherwise it will be after -ldl.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,290.0,155.0,44.882939814814826,10774.0,1.0222801804900918,5508.0,None,False,,
e4f5c0493008a007ad65bd17b1746f24f1106685,2711f053f2b2511fd322ff1ac065f0367a182a40,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri May 25 20:16:57 2018 +0800,1527250617,append -lrt to FINAL_LIBS for linux,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,290.0,156.0,0.027847222222222214,63.0,36.91022443890274,62.0,None,False,,
e4f5c0493008a007ad65bd17b1746f24f1106685 2711f053f2b2511fd322ff1ac065f0367a182a40,42ec8e8cb22301120ac5fdab0ccbf8897e145493,Salvatore Sanfilippo,antirez@gmail.com,Fri May 25 16:12:19 2018 +0200,1527257539,Merge pull request #4946 from soloestoy/linux-make-lrtappend -lrt to FINAL_LIBS for linux,,,,,,,,,,,,,,,Merge,False,,
42ec8e8cb22301120ac5fdab0ccbf8897e145493,b2b4e186a24699f930deca314ce223de5e72a8a1,antirez,antirez@gmail.com,Fri May 25 16:15:59 2018 +0200,1527257759,Explicitly cast void pointers to char pointers for printf style logging.,6.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2218.0,90.0,35.993402777777774,10775.0,1.0277828691600506,5509.0,None,False,,
b2b4e186a24699f930deca314ce223de5e72a8a1,95fa564add1b66db2d73a7c4f966a70498e974ab,antirez,antirez@gmail.com,Fri May 25 16:19:14 2018 +0200,1527257954,Avoid warning by explicitly initializing var to NULL.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2218.0,91.0,0.0022569444444444442,10776.0,444.0769230769232,5510.0,Feature Addition,False,,
95fa564add1b66db2d73a7c4f966a70498e974ab b6b00f35ca08f586ea80e104dde2b343b9a843cf,a60f553b686590a0372d6d18c69f4d0c099615a0,Salvatore Sanfilippo,antirez@gmail.com,Fri May 25 16:27:21 2018 +0200,1527258441,Merge pull request #4832 from 0xtonyxia/fix-xadd-ID-parse Bugfix: xadd command ID parse,,,,,,,,,,,,,,,Merge,False,,
a60f553b686590a0372d6d18c69f4d0c099615a0,fb9c1c3dbddf7c37f77f310a5bc57c6b5173b422,antirez,antirez@gmail.com,Fri May 25 16:29:37 2018 +0200,1527258577,"Simplify XADD ID syntax error code path,.",3.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2218.0,92.0,0.007210648148148148,10777.0,139.68378812199035,5511.0,Feature Addition,False,,
fb9c1c3dbddf7c37f77f310a5bc57c6b5173b422,fb6ebaa598f95629f91f41594e626012adaf0269,antirez,antirez@gmail.com,Fri May 25 16:33:22 2018 +0200,1527258802,Backport hiredis issue 525 fix to compile on FreeBSD.Close #4947.n,1.0,1.0,"deps/hiredis/fmacros.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,25.0,7.0,520.1398842592591,10778.0,1.0019225597387598,1557.0,Corrective,True,,
fb6ebaa598f95629f91f41594e626012adaf0269,c2d7e6cea7c9f36ecf25399fd2ba7c950a101bda,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri May 25 22:49:49 2018 +0800,1527259789,avoid warning in t_stream.c,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2215.0,93.0,0.014027777777777778,64.0,72.2871287128713,63.0,None,False,,
fb6ebaa598f95629f91f41594e626012adaf0269,2bd36616bafcafa7137a7dbcb5d3539a6873fb2e,antirez,antirez@gmail.com,Fri May 25 16:57:08 2018 +0200,1527260228,Streams: fix test ID format.,4.0,4.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,256.0,9.0,184.7326736111111,10779.0,1.0054132275598693,770.0,None,False,,
2bd36616bafcafa7137a7dbcb5d3539a6873fb2e c2d7e6cea7c9f36ecf25399fd2ba7c950a101bda,f8fd6639e79f9fbd13b87a101135d4f141bfde68,Salvatore Sanfilippo,antirez@gmail.com,Fri May 25 17:00:46 2018 +0200,1527260446,Merge pull request #4948 from soloestoy/avoid-warning-streamavoid warning in t_stream.c,,,,,,,,,,,,,,,Merge,False,,
2bd36616bafcafa7137a7dbcb5d3539a6873fb2e,6536ce27a4b63ab44fbd209422b2ef7f9160721d,antirez,antirez@gmail.com,Fri May 25 17:25:19 2018 +0200,1527261919,Streams: fix comments referring to old ID format.,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2215.0,94.0,0.024652777777777773,10780.0,41.56338028169015,5512.0,None,False,,
f8fd6639e79f9fbd13b87a101135d4f141bfde68,ce2e0c02fc67658e3e891ff4f732a17db3adfb96,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sun May 27 16:34:58 2018 +0800,1527410098,MEMORY: fix the missing of monitor clients buffers,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1349.0,131.0,67.65579861111111,65.0,1.0147806990757444,64.0,None,False,,
6536ce27a4b63ab44fbd209422b2ef7f9160721d,2a887bd53f992b940c7c9838a5dbdc2de1e3720a,WuYunlong,xzsyeb@126.com,Sat May 26 09:43:25 2018 +0800,1527299005,"Fix rdb save by allowing dumping of expire keys, so that when we add a new slave, and do a failover, eighter by manual or not, other local slaves will delete the expired keys properly.",3.0,7.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,15.0,1304.5,264.0,43.59426504629629,3.5,1.0357637273318994,3.0,Corrective,True,True,"[""b38682199b09bb77e11d9a3d4130fd8ebf8df7df""]"
2a887bd53f992b940c7c9838a5dbdc2de1e3720a,49147f36e942b3367a3d1c3f7f83582fcbc06006,antirez,antirez@gmail.com,Tue May 29 12:37:39 2018 +0200,1527590259,"Don't expire keys while loading RDB from AOF preamble.The AOF tail of a combined RDB+AOF is based on the premise of applyingnthe AOF commands to the exact state that there was in the server whilenthe RDB was persisted. By expiring keys while loading the RDB file, wenchange the state, so applying the AOF tail later may change the state.nnTest case:nn* Time1: SET a 10n* Time2: EXPIREAT a $time5n* Time3: INCR an* Time4: PERSIT A. Start bgrewiteaof with RDB preamble. The value of a is 11 without expire time.n* Time5: Restart redis from the RDB+AOF: consistency violation.nnThanks to @soloestoy for providing the patch.nThanks to @trevor211 for the original issue report and the initial fix.nnCheck issue #4950 for more info.n",5.0,5.0,"src/aof.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER",3.0,1.0,1.0,1.3709505944546687,15.0,1448.666666666667,439.0,24.50106481481481,10782.0,1.0142807986371043,5515.0,Preventative,False,,
49147f36e942b3367a3d1c3f7f83582fcbc06006 f8fd6639e79f9fbd13b87a101135d4f141bfde68,3d5e2c62e2690cf4a4954ab846bc119c56cad66d,antirez,antirez@gmail.com,Tue May 29 12:41:07 2018 +0200,1527590467,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
3d5e2c62e2690cf4a4954ab846bc119c56cad66d,9561fec496bc7e753a12d919a72d49cf56f1fa4b,Remi Collet,remi@remirepo.net,Wed May 30 15:33:06 2018 +0200,1527687186,include stdint.h for unit64_t definition,1.0,0.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,441.0,44.0,13.278541666666667,0.0,0.0,0.0,None,False,,
3d5e2c62e2690cf4a4954ab846bc119c56cad66d,4bce88b11fdf68ab754cf9125ffaac02c6428ff5,artix,artix2@gmail.com,Mon May 28 17:23:42 2018 +0200,1527521022,Cluster Manager: fixed infinite loop in rebalance (Issue #4941).,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10387.0,270.0,7.461168981481482,71.0,1.1340272553110626,65.0,None,False,,
4bce88b11fdf68ab754cf9125ffaac02c6428ff5,2f963080c16b3645c4b5ae443c85ee9f9025789b,antirez,antirez@gmail.com,Thu May 31 17:11:46 2018 +0200,1527779506,Capitalize OBJECT HELP subcommands.,4.0,4.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1349.0,132.0,4.275555555555556,10784.0,1.233887733887734,5516.0,None,False,,
2f963080c16b3645c4b5ae443c85ee9f9025789b 9561fec496bc7e753a12d919a72d49cf56f1fa4b,f3b48978f2ccb5bf971d7a164e1c5fc887e2a64e,Salvatore Sanfilippo,antirez@gmail.com,Thu May 31 17:20:33 2018 +0200,1527780033,Merge pull request #4964 from remicollet/issue-uint64include stdint.h for unit64_t definition,,,,,,,,,,,,,,,Merge,False,,
f3b48978f2ccb5bf971d7a164e1c5fc887e2a64e ce2e0c02fc67658e3e891ff4f732a17db3adfb96,5bf08449f9bb63611f7889e7e8d9e496be42bbb1,Salvatore Sanfilippo,antirez@gmail.com,Thu May 31 17:31:24 2018 +0200,1527780684,Merge pull request #4953 from soloestoy/fix-memory-overheadMEMORY: fix the missing of monitor clients buffers,,,,,,,,,,,,,,,Merge,False,,
5bf08449f9bb63611f7889e7e8d9e496be42bbb1 af3471a5dc1bf26e7bc2d1578f9bf82e9c7168a2,2dee9a4118a921093feda190a04f90986567b26d,Salvatore Sanfilippo,antirez@gmail.com,Thu May 31 17:32:11 2018 +0200,1527780731,Merge pull request #4945 from GitHubMota/debug_recoverFix debug crash-and-recover help info.,,,,,,,,,,,,,,,Merge,False,,
3d5e2c62e2690cf4a4954ab846bc119c56cad66d,b9d19371e402fc8e6d1ca70863ab0e06889ff1c3,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu May 31 23:35:47 2018 +0800,1527780947,ZPOP: unblock multiple clients in right way,5.0,3.0,"src/blocked.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,15.0,1916.5,176.0,12.575092592592592,66.5,1.0510064844549276,66.0,None,False,,
2dee9a4118a921093feda190a04f90986567b26d b9d19371e402fc8e6d1ca70863ab0e06889ff1c3,d49d0238288892c9511730b6fffcdd6ed22ab668,Salvatore Sanfilippo,antirez@gmail.com,Thu May 31 18:40:53 2018 +0200,1527784853,Merge pull request #4971 from soloestoy/bugfix-bzpopZPOP: unblock multiple clients in right way,,,,,,,,,,,,,,,Merge,False,,
d49d0238288892c9511730b6fffcdd6ed22ab668,d168b245b331e5fd24e7edb15d0d04213f3a180f,artix,artix2@gmail.com,Fri Jun 1 15:32:44 2018 +0200,1527859964,Cluster Manager: fixed master_id check in clusterManagerNodeLoadInfo,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,10387.0,271.0,3.922939814814815,72.0,1.2549108697063214,66.0,None,False,,
d168b245b331e5fd24e7edb15d0d04213f3a180f 8d93f924ea44c4139d690a914af662b6f059709a,86de089a1e494b2f2291858ad6b76e4452068193,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 1 16:54:05 2018 +0200,1527864845,Merge pull request #4907 from youjiali1995/fix-dictScanFix dictScan(): It can't scan all buckets when dict is shrinking.,,,,,,,,,,,,,,,Merge,False,,
86de089a1e494b2f2291858ad6b76e4452068193,7d269d5e633911628625d279b54e48c8b38fec90,WuYunlong,xzsyeb@126.com,Sat Jun 2 14:29:43 2018 +0800,1527920983,"Fix DEBUG LOADAOF so that redis-server will not crash unexpectedly and will not be inconsistent after we call debug loadaof. Before this commit, there were 2 problems:1, When appendonly is set to no and there is not a appendonly file,n   redis-server will crash if we call DEBUG LOADAOF.n2, When appendonly is set to no and there is a appendonly file,n   redis-server will hold different data after loading  appendonlyn   file.n",5.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1225.0,147.0,7.903009259259258,5.0,1.1265340792595413,4.0,Corrective,True,True,"[""6967d0bd5aac7c7d112bb3da3c6068dac930c6fc""]"
86de089a1e494b2f2291858ad6b76e4452068193,1749fe7a26e6ce53ab90271aa807380bd9458d3a,michael-grunder,michael.grunder@gmail.com,Sat Jun 2 18:22:20 2018 -0700,1527988940,Return early in XPENDING if sent a nonexistent consumer group.,3.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2215.0,95.0,8.414594907407407,5.0,1.1188411338874669,5.0,None,False,,
86de089a1e494b2f2291858ad6b76e4452068193,e1222d8b10552cda6f6fdf1178a2ca25ad77894b,Yossi Gottlieb,yossigo@gmail.com,Sun Jun 3 15:54:30 2018 +0300,1528030470,"Clean gcc 7.x warnings, redis-cli cluster fix.",33.0,30.0,"src/hyperloglog.c,CAS_DELIMITER,src/lzf_d.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/siphash.c,CAS_DELIMITER",4.0,1.0,1.0,1.7013435121439562,14.0,3130.0,390.0,451.4043778935186,44.5,1.0036818812978912,45.0,Corrective,True,,
e6b0e8d9ec4561a07864358af8d2d4e81ac413fc,10dedc25868c08bb1bf5da8252c8b11ad2ab370d,u00e8u00b5u00b5u00e7u00a3u008a,zhaolei21@meituan.com,Fri Apr 20 20:19:03 2018 +0800,1524226743,Fix core dump when using 'command getkeys' with wrong arguments.,14.0,7.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,15.0,2751.0,374.0,-18.112708333333334,2.5,0.9333016713209976,3.0,Corrective,True,,
86de089a1e494b2f2291858ad6b76e4452068193,7c6f1be5df4b3f453ab3928b2239ed60138e1cef,antirez,antirez@gmail.com,Mon Jun 4 12:58:26 2018 +0200,1528109906,XGROUP DESTROY implemented.,8.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2217.0,96.0,1.4000694444444444,10785.0,1.7142502852041068,5517.0,None,False,,
7c6f1be5df4b3f453ab3928b2239ed60138e1cef e1222d8b10552cda6f6fdf1178a2ca25ad77894b,b1783d3ab9f02c3e7638db1cf6b71ea70881c86d,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 4 17:18:39 2018 +0200,1528125519,"Merge pull request #4981 from yossigo/gcc7Clean gcc 7.x warnings, redis-cli cluster fix.",,,,,,,,,,,,,,,Merge,False,,
7c6f1be5df4b3f453ab3928b2239ed60138e1cef,05a29966410c82bd3603ae290a342e856158e18a,antirez,antirez@gmail.com,Mon Jun 4 17:26:16 2018 +0200,1528125976,Rax library updated.,58.0,10.0,"src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER",2.0,1.0,1.0,0.11058084476988707,14.0,958.5,12.0,196.69807291666663,10786.5,1.0053619863168302,5519.0,None,False,,
05a29966410c82bd3603ae290a342e856158e18a,36b392a0b2528ad22f016e9ca8fce93eb6dab3a0,antirez,antirez@gmail.com,Mon Jun 4 17:28:03 2018 +0200,1528126083,"XGROUP SETID implemented + consumer groups core fixes.Now that we have SETID, the inetrnals of consumer groups should be ablento handle the case of the same message delivered multiple times justnas a side effect of calling XREADGROUP. Normally this should nevernhappen but if the admin manually XGROUP SETID mykey mygroup 0,nmessages will get re-delivered to clients waiting for the > specialnID. The consumer groups internals were not able to handle the case of anmessage re-delivered in this circumstances that was already assigned tonanother owner.n",40.0,8.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2223.0,97.0,0.1872337962962963,10788.0,6.340916115472584,5520.0,Corrective,True,True,"[""a7c180e559d687022e85bee88f28d11db571e90c""]"
36b392a0b2528ad22f016e9ca8fce93eb6dab3a0 b1783d3ab9f02c3e7638db1cf6b71ea70881c86d,2f123ea6a3f035cc37c6edde3a25687041434c21,antirez,antirez@gmail.com,Mon Jun 4 17:30:11 2018 +0200,1528126211,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
2f123ea6a3f035cc37c6edde3a25687041434c21,9e25f3e1defd29d4cf37380870141c40bf97f121,antirez,antirez@gmail.com,Tue Jun 5 16:34:31 2018 +0200,1528209271,Remove XINFO <key> special form.As observed by Michael Grunder this usage while practical isninconsistent because for instance it does not work against a key callednHELP. Removed.n,8.0,13.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2255.0,98.0,0.962824074074074,10789.0,2.0386113381737747,5521.0,None,False,,
9e25f3e1defd29d4cf37380870141c40bf97f121,0a698e499a0b543b350544c63701ab944151c6ed,antirez,antirez@gmail.com,Tue Jun 5 17:01:47 2018 +0200,1528210907,ZPOP: invert score-ele to match ZRANGE WITHSCORES order.,26.0,26.0,"src/t_zset.c,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.2351933818192415,15.0,2233.0,181.0,14.965532407407407,10790.5,1.1171795149362742,771.0,None,False,,
0a698e499a0b543b350544c63701ab944151c6ed,b61416bdf47900fc777b205cafb7b7c8248bb76f,antirez,antirez@gmail.com,Wed Jun 6 11:40:19 2018 +0200,1528278019,Fix streamIteratorRemoveEntry() to update elements count.Close #4989.n,3.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2250.0,99.0,0.7956944444444445,10792.0,2.256763833129691,5523.0,Corrective,True,,
b61416bdf47900fc777b205cafb7b7c8248bb76f,c85ae56edc982d28df5cb29eedcd9d8bc9840a05,shenlongxing,shenlongxing2012@gmail.com,Mon Jun 4 23:59:21 2018 +0800,1528127961,Fix write() errno error,6.0,5.0,"src/cluster.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.3092966682370035,15.0,6242.0,1016.0,49.20560185185187,1.0,0.6738758690337546,2.0,Corrective,True,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
c85ae56edc982d28df5cb29eedcd9d8bc9840a05,19a438e2c09363d161ed1cfae415222d3d16bfb4,antirez,antirez@gmail.com,Thu Jun 7 14:24:45 2018 +0200,1528374285,"Streams: use non static macro node limits.Also add the concept of size/items limit, instead of just having asnlimit the number of bytes.n",28.0,2.0,"redis.conf,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,2.0,2.0,1.746465798504072,15.0,2422.0,644.0,37.52008680555557,10794.5,1.008764512259383,5526.0,None,False,True,"[""2fae0192e86c4222d8c735fda8a1f35164e1ca92""]"
19a438e2c09363d161ed1cfae415222d3d16bfb4,6d34ff3645e97e4537ae9136ef4e015591142d01,antirez,antirez@gmail.com,Thu Jun 7 14:30:25 2018 +0200,1528374625,Streams: max node limits only checked if non zero.,4.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2265.0,101.0,0.003935185185185185,10797.0,255.1176470588236,5527.0,None,False,True,"[""2fae0192e86c4222d8c735fda8a1f35164e1ca92""]"
6d34ff3645e97e4537ae9136ef4e015591142d01,dfb3bf1b1e0b0a85fc18d4b721cbe73efbca2e3b,antirez,antirez@gmail.com,Thu Jun 7 14:36:13 2018 +0200,1528374973,Streams: make macro node limits configurable.,14.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2154.0,218.0,13.855509259259259,10798.0,1.0721734568746888,5528.0,None,False,True,"[""e4e5a670e7e28485d6ba812759d7faabd90966d2""]"
dfb3bf1b1e0b0a85fc18d4b721cbe73efbca2e3b,a7dbe37d53075118c6db37848007df49ca69ce9a,antirez,antirez@gmail.com,Thu Jun 7 14:36:56 2018 +0200,1528375016,Typo: entires -> entries in several places.,7.0,7.0,"src/cluster.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER",3.0,1.0,1.0,1.3787834934861758,15.0,3276.0,695.0,35.63924382716049,10800.0,1.236079924872402,5531.0,None,False,,
a7dbe37d53075118c6db37848007df49ca69ce9a,f847dd3ad8aac54f1f5b2919da3b27155926d343,antirez,antirez@gmail.com,Thu Jun 7 14:37:56 2018 +0200,1528375076,Streams: better document the max node limits.,4.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1334.0,184.0,0.009155092592592591,10802.0,110.22882427307205,1396.0,None,False,,
f847dd3ad8aac54f1f5b2919da3b27155926d343,018cf118d62e3881ffe6b5ff9e534e309c6ef3ab,shenlongxing,shenlongxing2012@gmail.com,Thu Jun 7 23:13:36 2018 +0800,1528384416,fix stream config typo,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1337.0,185.0,0.10810185185185184,3.0,10.250535331905784,0.0,Corrective,True,,
f847dd3ad8aac54f1f5b2919da3b27155926d343,76ad23d012f194efa1acc0f8356d945b07681851,Itamar Haber,itamar@redislabs.com,Thu Jun 7 18:34:58 2018 +0300,1528385698,Adds MODULE HELP and implements  addReplySubSyntaxError,24.0,2.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.195621781814628,15.0,2944.0,630.0,44.08681712962963,51.0,1.0111117358173327,49.0,Feature Addition,False,True,"[""0a5805d7f1db3dc8cc932942399879cffd079fc6""]"
76ad23d012f194efa1acc0f8356d945b07681851,c199280edb7ad344bb3d2af7572469f74d506da7,Itamar Haber,itamar@redislabs.com,Thu Jun 7 18:39:36 2018 +0300,1528385976,Globally applies  addReplySubSyntaxError,8.0,12.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",8.0,1.0,1.0,2.9709505944546684,15.0,2172.5,1438.0,52.1418431712963,56.5,2.5112002285967403,57.0,Feature Addition,False,,
f847dd3ad8aac54f1f5b2919da3b27155926d343 1749fe7a26e6ce53ab90271aa807380bd9458d3a,66c6218a3c3dc0e813b9cebfbc701d12a3275b14,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 7 18:49:09 2018 +0200,1528390149,Merge pull request #4977 from michael-grunder/xpending-early-returnReturn early in XPENDING if sent a nonexistent consumer group.,,,,,,,,,,,,,,,Merge,False,,
f847dd3ad8aac54f1f5b2919da3b27155926d343,b2fc2eaecb85b34a12c2b6a4db91fa5fc466870b,antirez,antirez@gmail.com,Thu Jun 7 18:52:01 2018 +0200,1528390321,Add the stream group to the script generating the help.,2.0,1.0,"utils/generate-command-help.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,117.0,9.0,933.0926736111113,10803.0,1.001071704910221,91.0,Feature Addition,False,,
b2fc2eaecb85b34a12c2b6a4db91fa5fc466870b,2268d7e5dd3a44a95f0e44ffe1afccebd8264b64,antirez,antirez@gmail.com,Thu Jun 7 18:53:00 2018 +0200,1528390380,redis-cli inline help updated.,107.0,6.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1047.0,14.0,723.1718981481482,10804.0,1.0013827970950762,5532.0,None,False,,
2268d7e5dd3a44a95f0e44ffe1afccebd8264b64 66c6218a3c3dc0e813b9cebfbc701d12a3275b14,97e1f6812cb183bf989ac3bce35e7f59d220df36,antirez,antirez@gmail.com,Fri Jun 8 11:02:30 2018 +0200,1528448550,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
97e1f6812cb183bf989ac3bce35e7f59d220df36,269e80526f1f90142661b9e25bff3a08639ce59c,antirez,antirez@gmail.com,Fri Jun 8 11:17:20 2018 +0200,1528449440,Implement DEBUG htstats-key.,31.0,0.0,"src/debug.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,15.0,5807.5,423.0,2.2276793981481484,10805.5,1.7929252770343491,5534.0,Corrective,True,,
269e80526f1f90142661b9e25bff3a08639ce59c 24036b4d32d857066a2ccfc6cef2e8a751634ad5,9fa2e7020e8f4c5c6fc24f7b6adae39e0a9fd7c1,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 8 12:12:34 2018 +0200,1528452754,Merge pull request #4861 from soloestoy/rdb-dict-expandRDB: expand dict if needed when rdb load object,,,,,,,,,,,,,,,Merge,False,,
9fa2e7020e8f4c5c6fc24f7b6adae39e0a9fd7c1 83cf0e3668f61a57bbaaedf47d35d8943352d893,5ebaadc96bdd5aa51d9058968b5e6a6094ae3cea,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 8 12:32:18 2018 +0200,1528453938,Merge pull request #4800 from soloestoy/dict-expandadjust position of _dictNextPower in dictExpand,,,,,,,,,,,,,,,Merge,False,,
5ebaadc96bdd5aa51d9058968b5e6a6094ae3cea 109ee497be24906e7931d33b71e3a6e78c5de77b,be899b824edd312d4e3a1998c56626d66fae3b61,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 8 12:45:11 2018 +0200,1528454711,Merge pull request #4519 from soloestoy/zset-int-problemZset int problem,,,,,,,,,,,,,,,Merge,False,,
be899b824edd312d4e3a1998c56626d66fae3b61,1210dd8a20ae4ffea88c3c68457e7e057410110e,shenlongxing,shenlongxing2012@gmail.com,Sat Jun 9 22:24:33 2018 +0800,1528554273,fix integer case error,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2167.0,220.0,1.9478819444444444,4.0,1.5133781350826219,3.0,Corrective,True,,
c199280edb7ad344bb3d2af7572469f74d506da7,21ef0376feaaacee22b7913cb08948f65f9b8198,Itamar Haber,itamar@redislabs.com,Sat Jun 9 20:54:05 2018 +0300,1528566845,Capitalizes subscommands,3.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4700.0,161.0,2.0966087962962963,61.0,1.4769607004256209,58.0,None,False,,
21ef0376feaaacee22b7913cb08948f65f9b8198,fefde6e3e4addf860829d4848386d90889590eac,Itamar Haber,itamar@redislabs.com,Sat Jun 9 21:03:52 2018 +0300,1528567432,Capitalizes subcommands & orders lexicographically,57.0,57.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",7.0,1.0,1.0,2.306162160934872,15.0,2293.714285714286,1314.0,1.7169824735449737,65.0,1.2404696616887745,65.0,None,False,,
fefde6e3e4addf860829d4848386d90889590eac be899b824edd312d4e3a1998c56626d66fae3b61,e654b68d1f33313a683eb131477017da667551f0,Itamar Haber,itamar@redislabs.com,Sat Jun 9 21:10:53 2018 +0300,1528567853,Merge branch 'unstable' into module_command_help,,,,,,,,,,,,,,,Merge,False,,
be899b824edd312d4e3a1998c56626d66fae3b61,c04082cf138f1f51cedf05ee9ad36fb6763cafc6,michael-grunder,michael.grunder@gmail.com,Sun Jun 10 08:55:58 2018 -0700,1528646158,Abort in XGROUP if the key is not a stream,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2267.0,103.0,3.1382175925925933,6.0,1.3186522191324104,6.0,None,False,,
be899b824edd312d4e3a1998c56626d66fae3b61,cc81c6f1d3905bd8ddfd0198aefcf3abc3d4d068,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jun 11 00:14:17 2018 +0800,1528647257,Streams: lookupKey[Read->Write]OrReply in xdel and xtrim,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2267.0,104.0,0.012719907407407407,68.0,79.6169244767971,67.0,None,False,,
be899b824edd312d4e3a1998c56626d66fae3b61,b8913ce72141237570ddfa07a1e412a03d714c51,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jun 11 01:17:52 2018 +0800,1528651072,Streams: checkType for xread & xinfo,3.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2267.0,105.0,0.04415509259259258,69.0,23.64744429882045,68.0,None,False,,
be899b824edd312d4e3a1998c56626d66fae3b61,27beaf2f2246cc4c502014f81877da592d2aeaa2,antirez,antirez@gmail.com,Mon Jun 11 12:51:25 2018 +0200,1528714285,Regression test for the dictScan() issue #4906.,38.0,0.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,239.0,10.0,1286.0503356481481,10807.0,1.000777574541432,772.0,Preventative,False,True,"[""00613bed06af890b9f09befc71de3f2aedabbacb""]"
27beaf2f2246cc4c502014f81877da592d2aeaa2,00613bed06af890b9f09befc71de3f2aedabbacb,antirez,antirez@gmail.com,Mon Jun 11 13:10:03 2018 +0200,1528715403,"Improved regression test for #4906.Removing the fix about 50% of the times the test will not be able tonpass cleanly. It's very hard to write a test that will always fail, ornactually, it is possible but then it's likely that it will consistentlynpass if we change some random bit, so better to use randomization here.n",37.0,29.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,277.0,11.0,0.012939814814814815,10808.0,78.28085867620752,773.0,Corrective,True,True,"[""1e92fde3d34237ff4d30f8a46f74c34f037ed1dd""]"
00613bed06af890b9f09befc71de3f2aedabbacb c04082cf138f1f51cedf05ee9ad36fb6763cafc6,163f32c22a4321b1972fe2eda1c2fb567ffb7067,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:30:49 2018 +0200,1528727449,Merge pull request #5001 from michael-grunder/xgroup-check-typeAbort in XGROUP if the key is not a stream,,,,,,,,,,,,,,,Merge,False,,
163f32c22a4321b1972fe2eda1c2fb567ffb7067 b8913ce72141237570ddfa07a1e412a03d714c51,295db9ee0a005440a37ba673f004549d8d3c8a07,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:32:00 2018 +0200,1528727520,Merge pull request #5003 from soloestoy/streams-checkTypeStreams: checkType for xread & xinfo,,,,,,,,,,,,,,,Merge,False,,
295db9ee0a005440a37ba673f004549d8d3c8a07 fd9177dd33de2bc8fddf1d304b7b5810d98c2a1d,e2a9ea04059dea6cf00a20dc2093e6a85cbb4b94,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:32:40 2018 +0200,1528727560,Merge pull request #4901 from KFilipek/zmalloc_typo_fixHW_PHYSMEM typo in preprocessor condition,,,,,,,,,,,,,,,Merge,False,,
e2a9ea04059dea6cf00a20dc2093e6a85cbb4b94 cc81c6f1d3905bd8ddfd0198aefcf3abc3d4d068,5db262b623c6e7e265bfa97b0236cce32a15edee,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:33:10 2018 +0200,1528727590,Merge pull request #5002 from soloestoy/streams-read-or-writeStreams: lookupKey[Read->Write]OrReply in xdel and xtrim,,,,,,,,,,,,,,,Merge,False,,
5db262b623c6e7e265bfa97b0236cce32a15edee 018cf118d62e3881ffe6b5ff9e534e309c6ef3ab,b136502d0f9bcf4dad78083f5234d918902b0cc9,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:33:38 2018 +0200,1528727618,Merge pull request #4995 from shenlongxing/unstablefix stream config typo,,,,,,,,,,,,,,,Merge,False,,
b136502d0f9bcf4dad78083f5234d918902b0cc9 1210dd8a20ae4ffea88c3c68457e7e057410110e,ba2101738dfeadedf3bdaed4386895441a891b3f,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 11 16:34:26 2018 +0200,1528727666,Merge pull request #5000 from shenlongxing/fix-configfix integer case error,,,,,,,,,,,,,,,Merge,False,,
b136502d0f9bcf4dad78083f5234d918902b0cc9,34bd44187ae4a5947995abe8f8e26a5dacb3159b,antirez,antirez@gmail.com,Mon Jun 11 16:51:06 2018 +0200,1528728666,"Fix client unblocking for XREADGROUP, issue #4978.We unblocked the client too early, when the group name object was nonlonger valid in client->bpop, so propagating XCLAIM later innstreamPropagateXCLAIM() deferenced a field already set to NULL.n",6.0,6.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,581.0,38.0,10.968969907407407,10809.0,1.0911662634177428,5535.0,Corrective,True,,
34bd44187ae4a5947995abe8f8e26a5dacb3159b ba2101738dfeadedf3bdaed4386895441a891b3f,5bbb00fbb422b4d3e43605a521ae3c2d2bc64808,antirez,antirez@gmail.com,Mon Jun 11 16:52:45 2018 +0200,1528728765,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
5bbb00fbb422b4d3e43605a521ae3c2d2bc64808,cec404f099e3a1a3ce6e94c01ce45d851bd3e843,antirez,antirez@gmail.com,Mon Jun 11 17:12:28 2018 +0200,1528729948,"Use a less aggressive query buffer resize policy.A user with many connections (10 thousand) on a single Redis servernreports in issue #4983 that sometimes Redis is idle becuase at the samentime many clients need to resize their query buffer according to the oldnpolicy.nnIt looks like this was created by the fact that we allow the querynbuffer to grow without problems to a size up to PROTO_MBULK_BIG_ARGnnormally, but when the client is idle we immediately are more strict,nand a query buffer greater than 1024 bytes is already enough to triggernthe resize. So for instance if most of the clients stop at the same timenthis issue should be easily triggered.nnThis behavior actually looks odd, and there should be only a clear limitnafter we say, let's look at this query buffer to check if it's time tonresize it. This commit puts the limit at PROTO_MBULK_BIG_ARG, and thencheck is performed both if compared to the peak usage the current usagenis too big, or if the client is idle.nnThen when the check is performed, to waste just a few kbytes isnconsidered enough to proceed with the resize. This should fix the issue.n",7.0,6.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4012.0,180.0,1.8809722222222225,10810.0,1.5316399616037806,5536.0,Corrective,True,,
cec404f099e3a1a3ce6e94c01ce45d851bd3e843,fac3e8aab55671bc8842214e7384f4174deb6578,Baoyi Chen,chen.bao.yi@qq.com,Tue Jun 12 08:52:18 2018 +0800,1528764738,fix typofix [#5005](https://github.com/antirez/redis/issues/5005),2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2264.0,106.0,1.3155787037037037,0.0,0.0,0.0,Corrective,True,True,"[""bcc42028c1aa2d6427f14184088895112a6bd23a""]"
cec404f099e3a1a3ce6e94c01ce45d851bd3e843,923e63e5ecfcfbbc849e61c61069665aabbb6b0a,antirez,antirez@gmail.com,Tue Jun 12 09:27:32 2018 +0200,1528788452,Streams: increment dirty counter for XGROUP SETID/DESTROY.See issue #5005 comments.n,2.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2264.0,107.0,0.27446759259259257,10811.0,4.643417390570972,5537.0,None,False,,
923e63e5ecfcfbbc849e61c61069665aabbb6b0a fac3e8aab55671bc8842214e7384f4174deb6578,82661ba329413e899695d2792732ca2f43a1fcc1,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 12 09:28:26 2018 +0200,1528788506,Merge pull request #5007 from leonchen83/patch-2fix typo issue #5005,,,,,,,,,,,,,,,Merge,False,,
94751543b0a15ea333dab3121fa32747cf59de8f,7659619824755b929251faff457d3873b9742f2b,u00e7u0090u0083u00e7u008au00b6u00e9u0097u00aau00e7u0094u00b5,zwkno1@gmail.com,Tue Jun 12 15:28:28 2018 +0800,1528788508,Update geohash.cfix geohasEncode bug when step > 31,2.0,2.0,"src/geohash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,295.0,2.0,684.9313078703702,0.0,0.0,0.0,Corrective,True,,
82661ba329413e899695d2792732ca2f43a1fcc1,7cc1312789aca0bd25bf21f27801430245a17c5a,antirez,antirez@gmail.com,Tue Jun 12 10:22:03 2018 +0200,1528791723,Streams: fix backward iteration when entry is not flagged SAMEFIELD.See issue #5006. The comment in the code was also wrong andnwas rectified as well.n,6.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2266.0,108.0,0.037858796296296286,10812.0,27.41394069092021,5538.0,None,False,,
1210dd8a20ae4ffea88c3c68457e7e057410110e,13957c9d072b86bf8a084380591fcdc219aae108,Shen Longxing,shenlongxing2012@gmail.com,Tue Jun 12 17:59:32 2018 +0800,1528797572,fix active-defrag-threshold value errorThe active-defrag-threshold-lower/active-defrag-threshold-upper min/max  value in redis.conf should be consistent with 'config set' command.,6.0,4.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2167.0,222.0,2.6636574074074075,0.0,0.0,0.0,Corrective,True,,
82661ba329413e899695d2792732ca2f43a1fcc1 13957c9d072b86bf8a084380591fcdc219aae108,bcecbebb746ca077d7c23c1cd561da75c875c0b8,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 12 13:05:19 2018 +0200,1528801519,Merge pull request #5012 from shenlongxing/fix-configfix active-defrag-threshold value error,,,,,,,,,,,,,,,Merge,False,,
7cc1312789aca0bd25bf21f27801430245a17c5a,6bf65138de07d934b6ab5c9708918b37e841dabf,antirez,antirez@gmail.com,Tue Jun 12 13:13:35 2018 +0200,1528802015,Regression test for issue #5006.,16.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,256.0,10.0,17.844756944444445,10813.0,1.056038869182319,774.0,Preventative,False,,
6bf65138de07d934b6ab5c9708918b37e841dabf bcecbebb746ca077d7c23c1cd561da75c875c0b8,e916f4519c3e3b815b594b55c156fb7e1b983377,antirez,antirez@gmail.com,Tue Jun 12 13:14:01 2018 +0200,1528802041,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e916f4519c3e3b815b594b55c156fb7e1b983377,bcc42028c1aa2d6427f14184088895112a6bd23a,antirez,antirez@gmail.com,Tue Jun 12 13:20:46 2018 +0200,1528802446,Fix XGROUP help missing space.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2271.0,109.0,0.1241087962962963,10814.0,9.05744661009046,5539.0,Corrective,True,,
e654b68d1f33313a683eb131477017da667551f0,6b675b95252e7d7bbd3bc78d23e4a244a0310b4c,Itamar Haber,itamar@redislabs.com,Tue Jun 12 14:52:50 2018 +0300,1528804370,Applies addReplySubSyntaxError to stream commands,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2271.0,110.0,0.022268518518518517,69.0,45.906444906444904,66.0,Feature Addition,False,,
bcc42028c1aa2d6427f14184088895112a6bd23a,4774d6169108e96a246d062772022b68601a37e5,antirez,antirez@gmail.com,Tue Jun 12 14:12:53 2018 +0200,1528805573,Streams: improve type correctness in t_stream.c.,12.0,12.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2271.0,111.0,0.013923611111111107,10815.0,72.82044887780548,5540.0,None,False,,
4774d6169108e96a246d062772022b68601a37e5,f70e88c1f6e2c7db676ea39dfa323d7c613df787,antirez,antirez@gmail.com,Tue Jun 12 17:21:57 2018 +0200,1528816917,"RDB: store times consistently in little endian.I'm not sure how this escaped the attention of Redis users for years,nbut finally @oranagra reported this issue... Thanks to Oran.n",5.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2448.0,230.0,14.197430555555556,10816.0,1.0704352802492627,5541.0,None,False,,
f70e88c1f6e2c7db676ea39dfa323d7c613df787,e534e9aa8368dc2578384f33a874730a5ac83da9,antirez,antirez@gmail.com,Tue Jun 12 17:28:40 2018 +0200,1528817320,In scanDatabaseForReadyLists() now we need to handle ZSETs as well.Since the introduction of ZPOP makes this needed. Thanks to @oranagranfor reporting.n,6.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1499.0,199.0,53.13167824074074,10817.0,1.0188211634398028,5542.0,None,False,,
e534e9aa8368dc2578384f33a874730a5ac83da9,b38682199b09bb77e11d9a3d4130fd8ebf8df7df,antirez,antirez@gmail.com,Tue Jun 12 17:31:04 2018 +0200,1528817464,"Fix rdbSaveKeyValuePair() integer overflow.Again thanks to @oranagra. The object idle time does not fit into an intnsometimes: use the native type that the serialization function will getnas argument, which is uint64_t.n",2.0,3.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2453.0,231.0,0.006331018518518519,10818.0,158.9524680073126,5543.0,Corrective,True,,
b38682199b09bb77e11d9a3d4130fd8ebf8df7df,6b8a24a665d0f9bb7cb55cca9ef9e413bdf94e41,antirez,antirez@gmail.com,Tue Jun 12 18:10:41 2018 +0200,1528819841,"Streams: generate a few additional events.Currently it does not look it's sensible to generate events for streamsnconsumer groups modification, being them metadata, however at least fornkey-level events, like the creation or removal of a consumer group, Inadded a few events here and there. Later we can evaluate if it makesnsense to add more. From the POV instead of WAIT (in Redis transaciton)nand signaling the key as modified, it looks like that the transactionnshould not fail when a stream is modified, so no calls are made innconsumer groups related functions to signalModifiedKey().n",8.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2271.0,112.0,0.1651388888888889,10819.0,7.055508830950378,5544.0,None,False,,
6b8a24a665d0f9bb7cb55cca9ef9e413bdf94e41,032ea657d7ca1923ebebda5f2cfeaa69bfbfb4f5,antirez,antirez@gmail.com,Tue Jun 12 18:21:39 2018 +0200,1528820499,"RDB: Apply fix to rdbLoadMillisecondTime() only for new RDB versions.This way we let big endian systems to still load old RDB versions.nHowever newver versions will be saved and loaded in a way that make RDBnexpires cross-endian again. Thanks to @oranagra for the reporting andnthe discussion about this problem, leading to this fix.n",17.0,5.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2452.0,232.0,0.03512731481481481,10820.0,29.4678747940692,5545.0,None,False,,
032ea657d7ca1923ebebda5f2cfeaa69bfbfb4f5,52a00201fca331217c3b4b8b634f6a0f57d6b7d3,antirez,antirez@gmail.com,Mon May 14 17:45:40 2018 +0200,1526312740,"Security: fix Lua cmsgpack library stack overflow.During an auditing effort, the Apple Vulnerability Research team discoveredna critical Redis security issue affecting the Lua scripting part of Redis.nn-- Description of the problemnnSeveral years ago I merged a pull request including many small changes atnthe Lua MsgPack library (that originally I authored myself). The PullnRequest entered Redis in commit 90b6337c1, in 2014.nUnfortunately one of the changes included a variadic Lua function thatnlacked the check for the available Lua C stack. As a result, calling thenpack MsgPack library function with a large number of arguments, resultsninto pushing into the Lua C stack a number of new values proportional tonthe number of arguments the function was called with. The pushed values,nmoreover, are controlled by untrusted user input.nnThis in turn causes stack smashing which we believe to be exploitable,nwhile not very deterministic, but it is likely that an exploit could bencreated targeting specific versions of Redis executables. However at itsnminimum the issue results in a DoS, crashing the Redis server.nn-- Versions affectednnVersions greater or equal to Redis 2.8.18 are affected.nn-- ReproducingnnReproduce with this (based on the original reproduction script bynApple security team):nnhttps://gist.github.com/antirez/82445fcbea6d9b19f97014cc6cc79f8ann-- Verification of the fixnnThe fix was tested in the following way:nn1) I checked that the problem is no longer observable running the trigger.n2) The Lua code was analyzed to understand the stack semantics, and thatnactually enough stack is allocated in all the cases of mp_pack() calls.n3) The mp_pack() function was modified in order to show exactly what itemsnin the stack were being set, to make sure that there is no silent overflowneven after the fix.nn-- CreditsnnThank you to the Apple team and to the other persons that helped menchecking the patch and coordinating this communication.n",3.0,0.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,967.0,9.0,824.314849537037,10821.0,1.0012131286978048,1558.0,None,False,,
52a00201fca331217c3b4b8b634f6a0f57d6b7d3,1eb08bcd4634ae42ec45e8284923ac048beaa4c3,antirez,antirez@gmail.com,Mon May 14 17:49:06 2018 +0200,1526312946,"Security: update Lua struct package for security.During an auditing Apple found that the struct Lua packagenwe ship with Redis (http://www.inf.puc-rio.br/~roberto/struct/) containsna security problem. A bound-checking statement fails because of integernoverflow. The bug exists since we initially integrated this package withnLua, when scripting was introduced, so every version of Redis withnEVAL/EVALSHA capabilities exposed is affected.nnInstead of just fixing the bug, the library was updated to the latestnversion shipped by the author.n",23.0,23.0,"deps/lua/src/lua_struct.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,423.0,3.0,883.4178703703702,10822.0,1.0011319671398324,1559.0,None,False,,
1eb08bcd4634ae42ec45e8284923ac048beaa4c3,5ccb6f7a791bf3490357b00a898885759d98bab0,antirez,antirez@gmail.com,Tue May 15 12:29:56 2018 +0200,1526380196,"Security: more cmsgpack fixes by @soloestoy.@soloestoy sent me this additional fixes, after searching for similarnproblems to the one reported in mp_pack(). I'm committing the changesnbecause it was not possible during to make a public PR to protect Redisnusers and give Redis providers some time to patch their systems.n",7.0,0.0,"deps/lua/src/lua_cmsgpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,970.0,10.0,0.7807407407407407,10823.0,2.2808349146110056,1560.0,None,False,,
5ccb6f7a791bf3490357b00a898885759d98bab0,e89086e09a38cc6713bcd4b9c29abf92cf393936,antirez,antirez@gmail.com,Tue May 15 13:13:49 2018 +0200,1526382829,"Security: fix Lua struct package offset handling.After the first fix to the struct package I found another similarnproblem, which is fixed by this patch. It could be reproduced easily bynrunning the following script:nnreturn struct.unpack('f', xxxxxxxxxxxxx,-3)nnThe above will access bytes before the 'data' pointer.n",6.0,2.0,"deps/lua/src/lua_struct.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,9.0,423.0,4.0,0.8088310185185185,10824.0,2.236352188658186,1561.0,None,False,,
e89086e09a38cc6713bcd4b9c29abf92cf393936,ce17f76bbd95f68ab6716adcbf12d49e3822b87c,antirez,antirez@gmail.com,Mon Jun 11 12:08:42 2018 +0200,1528711722,"Security: fix redis-cli buffer overflow.Thanks to Fakhri Zulkifli for reporting it.nnThe fix switched to dynamic allocation, copying the final prompt in thenstatic buffer only at the end.n",16.0,11.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10389.0,275.0,3.035671296296296,10825.0,1.3294164296444286,5546.0,None,False,,
032ea657d7ca1923ebebda5f2cfeaa69bfbfb4f5,963002d71e64ffd1491b398eea3f57a34d928464,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jun 13 20:35:40 2018 +0800,1528893340,optimize reply list memory usage,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2050.0,286.0,5.875486111111113,70.0,1.1701986833240747,69.0,None,False,True,"[""bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15""]"
032ea657d7ca1923ebebda5f2cfeaa69bfbfb4f5,e4e5a670e7e28485d6ba812759d7faabd90966d2,shenlongxing,shenlongxing2012@gmail.com,Wed Jun 13 23:27:53 2018 +0800,1528903673,Fix config_set_numerical_field() integer overflow.,27.0,27.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2169.0,223.0,1.2280208333333331,5.0,1.8143184324370167,4.0,Corrective,True,,
032ea657d7ca1923ebebda5f2cfeaa69bfbfb4f5,2ffa533f8556b3c642b1099b98ba8b59889b1250,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Jun 14 01:30:07 2018 +0800,1528911007,fix exists command on slave,1.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1501.0,200.0,1.0843402777777778,71.0,1.9222197316596752,70.0,Corrective,True,,
ce17f76bbd95f68ab6716adcbf12d49e3822b87c,a4f658b2b5d4be9c3592434d74a5de9cd678158c,Fuxin Hao,haofxpro@gmail.com,Thu Jun 14 16:44:19 2018 +0800,1528965859,Fix update_zmalloc_stat_alloc in zrealloc,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,442.0,45.0,14.79945601851852,0.0,0.0,0.0,Corrective,True,,
ce17f76bbd95f68ab6716adcbf12d49e3822b87c,1e92fde3d34237ff4d30f8a46f74c34f037ed1dd,antirez,antirez@gmail.com,Thu Jun 14 12:21:54 2018 +0200,1528971714,"Fix SCAN bug regression test, avoiding empty SREM call.",1.0,1.0,"tests/unit/scan.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,285.0,12.0,2.9665625,10826.0,1.3370904877277994,775.0,Corrective,True,,
1e92fde3d34237ff4d30f8a46f74c34f037ed1dd 963002d71e64ffd1491b398eea3f57a34d928464,6c7847a18373e6757d2cd2bf21ad4c9272163f29,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 14 13:32:00 2018 +0200,1528975920,Merge pull request #5018 from soloestoy/optimize-replyoptimize reply list memory usage,,,,,,,,,,,,,,,Merge,False,,
6c7847a18373e6757d2cd2bf21ad4c9272163f29 2ffa533f8556b3c642b1099b98ba8b59889b1250,8bc3ffcb29d966601e51d9a907ea75c11231cd76,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 14 13:58:30 2018 +0200,1528977510,Merge pull request #5021 from soloestoy/fix-existsfix exists command on slave,,,,,,,,,,,,,,,Merge,False,,
8bc3ffcb29d966601e51d9a907ea75c11231cd76 7659619824755b929251faff457d3873b9742f2b,40d5df6547308db2f5d71432b10fa84a9844edff,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 14 14:01:40 2018 +0200,1528977700,Merge pull request #5008 from zwkno1/unstablefix geohashEncode bug when step > 30,,,,,,,,,,,,,,,Merge,False,,
1e92fde3d34237ff4d30f8a46f74c34f037ed1dd,d6e8fe77afdb79853dd62581be2e785f0014bdf9,antirez,antirez@gmail.com,Thu Jun 14 18:08:05 2018 +0200,1528992485,Fix infinite loop in dbRandomKey().Thanks to @kevinmcgehee for signaling the issue and reasoning about thenconsequences and potential fixes.nnIssue #5015.n,13.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1500.0,201.0,0.9430324074074076,10827.0,2.060408944745821,5547.0,Corrective,True,,
d6e8fe77afdb79853dd62581be2e785f0014bdf9 40d5df6547308db2f5d71432b10fa84a9844edff,d353023a83de1377c05fd45ccab628ff5cb61186,antirez,antirez@gmail.com,Thu Jun 14 18:11:04 2018 +0200,1528992664,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d353023a83de1377c05fd45ccab628ff5cb61186,6a66b93b186506bcd37f147cbb353f0961a03870,antirez,antirez@gmail.com,Thu Jun 14 18:57:58 2018 +0200,1528995478,Sentinel: add an option to deny online script reconfiguration.The ability of SENTINEL SET to change the reconfiguration script atnruntime is a problem even in the security model of Redis: any clientninside the network may set any executable to be ran once a failover isntriggered.nnThis option adds protection for this problem: by default the twonSENTINEL SET subcommands modifying scripts paths are denied. However thenuser is still able to rever that using the Sentinel configuration filenin order to allow such a feature.n,41.0,0.0,"sentinel.conf,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,2.0,2.0,0.7592757847892833,14.0,2280.5,254.0,347.01768518518514,10828.5,1.0014645143273004,5548.0,None,False,,
6a66b93b186506bcd37f147cbb353f0961a03870 fd0c4c027713d1d34a8dd5ef62556b9ac0940d45,94658303e9ec5050189728fb8bc514ee682dd5fe,Salvatore Sanfilippo,antirez@gmail.com,Sat Jun 16 10:59:37 2018 +0200,1529139577,Merge pull request #4758 from soloestoy/rdb-save-incremental-fsyncRdb save incremental fsync,,,,,,,,,,,,,,,Merge,False,,
94658303e9ec5050189728fb8bc514ee682dd5fe 7d269d5e633911628625d279b54e48c8b38fec90,2e0ab4a80708d96f4107ff75686be5582e314f0f,Salvatore Sanfilippo,antirez@gmail.com,Sat Jun 16 11:05:04 2018 +0200,1529139904,Merge pull request #4976 from trevor211/fixDebugLoadaofCritical: Fix server crash and data inconsistency in some cases.,,,,,,,,,,,,,,,Merge,False,,
2e0ab4a80708d96f4107ff75686be5582e314f0f,79a1c19ac28ae7feb23630507c2c192e84ba2cb7,antirez,antirez@gmail.com,Sun Jun 17 10:44:01 2018 +0200,1529225041,XADD MAXLEN should return an error for values < 0.,5.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2278.0,113.0,4.689814814814816,10830.0,1.2132280355380058,5549.0,Feature Addition,False,,
2e0ab4a80708d96f4107ff75686be5582e314f0f,d4c4f20a4585d6c7facfdbe6699c68cb5f56bc47,Max Vetrov,maxvetrov555@yandex.ru,Sun Jun 17 21:25:51 2018 +0200,1529263551,"Update sort.cRedundant second if, and we may use not operation for bool, I suppose it's faster.",1.0,3.0,"src/sort.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,592.0,50.0,998.4947685185184,0.0,0.0,0.0,None,False,,
79a1c19ac28ae7feb23630507c2c192e84ba2cb7,62f9ac6f436356dc7679d06bedeb98948bcebeb0,antirez,antirez@gmail.com,Mon Jun 18 10:05:18 2018 +0200,1529309118,"Streams: Change XADD MAXLEN handling of values <= 0.Now a MAXLEN of 0 really does what it means: it will create a zeronentries stream. This is useful in order to make sure that the behaviornis identical to XTRIM, that must be able to reduce the stream to zeronelements when MAXLEN is given.nnAlso now MAXLEN with a count < 0 will return an error.n",3.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2283.0,114.0,0.973113425925926,10831.0,2.027629434922749,5550.0,None,False,,
62f9ac6f436356dc7679d06bedeb98948bcebeb0,a0b27dae85ae071b60d4c5196e7d18d72fbbba2b,antirez,antirez@gmail.com,Mon Jun 18 13:51:19 2018 +0200,1529322679,"Streams: fix xreadGetKeys() buffer overflow.The loop allocated a buffer for the right number of keys positions, thennoverflowed it going past the limit.nnRelated to #4857 and cause of the memory violation seen in #5028.n",1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1513.0,202.0,3.821689814814815,10832.0,1.261664354894395,5551.0,None,False,,
a0b27dae85ae071b60d4c5196e7d18d72fbbba2b 10dedc25868c08bb1bf5da8252c8b11ad2ab370d,e670ccffeae4904e89364b4fec75b3e2ea90745c,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 18 13:54:38 2018 +0200,1529322878,Merge pull request #4857 from youjiali1995/fix-command-getkeysFix core dump when using some commands with wrong arguments.,,,,,,,,,,,,,,,Merge,False,,
e670ccffeae4904e89364b4fec75b3e2ea90745c,20766608439c30584be720dcb47f055c4051c95d,antirez,antirez@gmail.com,Mon Jun 18 14:06:06 2018 +0200,1529323566,Streams: fix xreadGetKeys() for correctness.The old version could not handle the fact that STREAMS is a valid keynname for streams. Now we really try to parse the command like thencommand implementation would do.nnRelated to #5028 and 4857.n,19.0,5.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1513.0,203.0,0.010266203703703704,10833.0,98.40698985343857,5552.0,None,False,,
20766608439c30584be720dcb47f055c4051c95d e4e5a670e7e28485d6ba812759d7faabd90966d2,3518bb66d724977a36ebd51777efd83d8f9340fd,Salvatore Sanfilippo,antirez@gmail.com,Mon Jun 18 16:02:23 2018 +0200,1529330543,Merge pull request #5020 from shenlongxing/fix-configFix config_set_numerical_field() integer overflow.,,,,,,,,,,,,,,,Merge,False,,
20766608439c30584be720dcb47f055c4051c95d,bd92389c2dc1afcf53218880fc31ba45e66f4ded,antirez,antirez@gmail.com,Mon Jun 18 16:54:13 2018 +0200,1529333653,Refactor createObjectFromLongLong() to be suitable for value objects.,33.0,2.0,"src/object.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.18717625687320816,15.0,1726.5,320.0,10.970092592592593,10834.5,1.0683743852563308,5554.0,Feature Addition,False,,
bd92389c2dc1afcf53218880fc31ba45e66f4ded,0ed0dc3c02dfffdf6bfb9e32f1335ddc34f37723,antirez,antirez@gmail.com,Mon Jun 18 16:56:28 2018 +0200,1529333788,Fix incrDecrCommand() to create shared objects when needed.See #5011.n,1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,473.0,65.0,552.2335879629629,10836.0,1.0018108279210047,5555.0,Corrective,True,,
0ed0dc3c02dfffdf6bfb9e32f1335ddc34f37723,6967d0bd5aac7c7d112bb3da3c6068dac930c6fc,antirez,antirez@gmail.com,Mon Jun 18 17:09:00 2018 +0200,1529334540,Revert fix #4976 just leaving the flush() part.,1.0,5.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1257.0,151.0,8.878564814814817,10837.0,1.112630815999833,5556.0,Corrective,True,,
6967d0bd5aac7c7d112bb3da3c6068dac930c6fc 3518bb66d724977a36ebd51777efd83d8f9340fd,44571088d8407749ca1c49cde09089664e7928ff,antirez,antirez@gmail.com,Mon Jun 18 17:09:16 2018 +0200,1529334556,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
44571088d8407749ca1c49cde09089664e7928ff,36524060dfe2d9fb7722aa2e327068883c931e04,Benjamin Holst,bepahol@users.noreply.github.com,Mon Jun 18 22:41:26 2018 -0700,1529386886,Update README.md,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,24.0,325.5253935185185,0.0,0.0,0.0,None,False,,
44571088d8407749ca1c49cde09089664e7928ff,ba92b517b8c22a4d62c583c0a6ac94fb9a0c2486,antirez,antirez@gmail.com,Tue Jun 19 15:43:06 2018 +0200,1529415786,"Remove AOF optimization to skip expired keys.Basically we cannot be sure that if the key is expired while writing thenAOF, the main thread will surely find the key expired. There arenpossible race conditions like the moment at which the now is sampled,nand the fact that time may jump backward.nnThink about the following:nnSET a 5nEXPIRE a 1nnAOF rewrite starts after about 1 second. The child process finds the keynexpired, while in the main thread instead an INCR command is callednagainst the key a immediately after a fork, and the scheduler wasnfaster to give execution time to the main thread, so a is yet notnexpired.nnThe main thread will generate an INCR a command to the AOF log that willnbe appended to the rewritten AOF file, but that INCR command will targetna non existin a key, so a new non volatile key a will be created.nnTwo observations:nnA) In theory by computing now before the fork, we should be sure thatnif a key is expired at that time, it will be expired later when thenmain thread will try to access to such key. However this does not takeninto account the fact that the computer time may jump backward.nnB) Technically we may still make the process safe by using a monotonicntime source.nnHowever there were other similar related bugs, and in general the newnvision is that Redis persistence files should represent the memorynstate without trying to be too smart: this makes the design morenconsistent, bugs less likely to arise from complex interactions, and innthe end what is to fix is the Redis expire process to have less expirednkeys in RAM.nnThanks to Oran Agra and Guy Benoish for writing me an email outliningnthis problem, after they conducted a Redis 5 code review.n",0.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1741.0,174.0,21.128784722222214,10838.0,1.0473287987523603,5557.0,None,False,,
44571088d8407749ca1c49cde09089664e7928ff,5cd3c9529df93b7e726256e2de17985a57f00e7b,Oran Agra,oran@redislabs.com,Tue Jun 19 16:43:12 2018 +0300,1529415792,64 bit RDB_OPCODE_RESIZEDB in rdb savingthis complication in the code is from times were rdbSaveLen didn't support 64 bits.n,3.0,7.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2464.0,233.0,6.889965277777778,66.0,1.145138612414391,55.0,None,False,,
44571088d8407749ca1c49cde09089664e7928ff,26229aa6072c24021f90638852417aafe3537b6e,Oran Agra,oran@redislabs.com,Tue Jun 19 16:46:41 2018 +0300,1529416001,use safe macro (non empty) in memrev64ifbe to eliminate empty if warning,3.0,3.0,"src/endianconv.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,78.0,6.0,1314.4498148148148,67.0,1.00076077457559,56.0,None,False,,
ba92b517b8c22a4d62c583c0a6ac94fb9a0c2486,e94b2053c6cb00e604a0c9f0f51db78250400c36,antirez,antirez@gmail.com,Tue Jun 19 15:53:32 2018 +0200,1529416412,Modify clusterRedirectClient() to handle ZPOP and XREAD.,5.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,5628.0,538.0,9.826157407407408,10839.0,1.1017691818417394,5558.0,None,False,,
e94b2053c6cb00e604a0c9f0f51db78250400c36,333c98c43a1f7debac0f5579df62b41259a3efd5,antirez,antirez@gmail.com,Tue Jun 19 15:54:05 2018 +0200,1529416445,AOF: remove no longer used variable now.,0.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1738.0,175.0,0.007627314814814816,10840.0,132.10773899848257,5559.0,None,False,,
44571088d8407749ca1c49cde09089664e7928ff,f31b0405f0023d8916efac3aa9b0c16d4db69fc4,Oran Agra,oran@redislabs.com,Tue Jun 19 16:54:22 2018 +0300,1529416462,"fix redis-rdb-check to provide proper arguments to rdbLoadMillisecondTimedue to incorrect forward declaration, it didn't provide all arguments.nthis lead to random value being read from the stack and return of incorrect time,nwhich in this case doesn't matter since no one uses it.n",3.0,2.0,"src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,15.0,262.5,59.0,58.531782407407405,68.5,1.0279268233838392,58.0,Corrective,True,,
333c98c43a1f7debac0f5579df62b41259a3efd5,4848fbec8b95b8783f5becbdd72e461c9fa30716,antirez,antirez@gmail.com,Tue Jun 19 16:03:00 2018 +0200,1529416980,Modules: convert hash to hash table for big objects.,3.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4700.0,162.0,9.839525462962962,10841.0,1.1016309174425238,5560.0,None,False,,
4848fbec8b95b8783f5becbdd72e461c9fa30716 f31b0405f0023d8916efac3aa9b0c16d4db69fc4,5f5e1199efa50310cb3477752b42630d522cd280,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 19 16:06:11 2018 +0200,1529417171,Merge pull request #5041 from oranagra/redis-rdb-check_rdbLoadMillisecondTimefix redis-rdb-check to provide proper arguments to rdbLoadMillisecondTime,,,,,,,,,,,,,,,Merge,False,,
5f5e1199efa50310cb3477752b42630d522cd280,e72190252e3622721a2e6260881285905b1beef7,antirez,antirez@gmail.com,Tue Jun 19 16:29:15 2018 +0200,1529418555,Test RDB stream encoding saving/loading.,17.0,0.0,"tests/integration/rdb.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,98.0,11.0,482.0978472222222,10842.0,1.0020742677150745,776.0,Preventative,False,,
e72190252e3622721a2e6260881285905b1beef7 a4f658b2b5d4be9c3592434d74a5de9cd678158c,4da296307cd63d7d776f881199d26036ea44211c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 19 16:50:22 2018 +0200,1529419822,Merge pull request #5023 from FX-HAO/unstableFix update_zmalloc_stat_alloc in zrealloc,,,,,,,,,,,,,,,Merge,False,,
44571088d8407749ca1c49cde09089664e7928ff,482785ac62aab0bcaf53eb7eb6f7e005629ff0fa,Oran Agra,oran@redislabs.com,Tue Jun 19 16:59:45 2018 +0300,1529416785,"add malloc_usable_size for libc mallocthis reduces the extra 8 bytes we save before each pointer.nbut more importantly maybe, it makes the valgrind runs to be more similiarnto our normal runs.nnnote: the change in malloc_stats struct in server.h is to eliminate an name conflict.nstructs that are not typedefed are resolved from a separate name space.n",8.0,3.0,"src/server.h,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.9940302114769564,15.0,1101.5,208.0,60.9475462962963,70.5,1.5237573755140872,60.0,Feature Addition,False,,
4da296307cd63d7d776f881199d26036ea44211c 482785ac62aab0bcaf53eb7eb6f7e005629ff0fa,c6fdebf533042e30cbe54a41f744b8a674a10dc3,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 19 17:22:36 2018 +0200,1529421756,Merge pull request #5042 from oranagra/malloc_usable_size_libcadd malloc_usable_size for libc malloc,,,,,,,,,,,,,,,Merge,False,,
c6fdebf533042e30cbe54a41f744b8a674a10dc3,b5197f1fc9d6fde776168951094e44d5e8742a89,Guy Benoish,guy.benoish@redislabs.com,Wed Jun 20 14:40:18 2018 +0700,1529480418,Enhance RESTORE with RDBv9 new featuresRESTORE now supports:n1. Setting LRU/LFUn2. Absolute-time TTLnnOther related changes:n1. RDB loading will not override LRU bits when RDB filen   does not contain the LRU opcode.n2. RDB loading will not set LRU/LFU bits if the server'sn   maxmemory-policy does not match.n,100.0,22.0,"src/cluster.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",5.0,2.0,2.0,2.0780148968135213,15.0,2382.2,1110.0,33.102965277777784,15.0,1.4668824764498494,1.0,Feature Addition,False,True,"[""dfcc20f4fd30e4373bbd4bc20d500af50796d23c"", ""c8452ab0059877ac4a055e74e604d00244b06053"", ""b9b140e2e2f900bc7a9396e813862b46e86af364"", ""052e03495f3e6da64d814f80a5dae91721009317"", ""e978bdf9ef62404083afed28d98e7a455bcecd3b""]"
c6fdebf533042e30cbe54a41f744b8a674a10dc3 b5197f1fc9d6fde776168951094e44d5e8742a89,c6f4118ce63109d96782b74177383f85822381d8,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 20 11:11:39 2018 +0200,1529485899,Merge pull request #5045 from guybe7/restore_fixEnhance RESTORE with RDBv9 new features,,,,,,,,,,,,,,,Merge,False,,
c6f4118ce63109d96782b74177383f85822381d8 26229aa6072c24021f90638852417aafe3537b6e,79f55eeddd6e308769a448251454a12a06eed183,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 20 11:17:06 2018 +0200,1529486226,Merge pull request #5040 from oranagra/memrev64ifbe_fixuse safe macro (non empty) in memrev64ifbe to eliminate empty if warning,,,,,,,,,,,,,,,Merge,False,,
79f55eeddd6e308769a448251454a12a06eed183 5cd3c9529df93b7e726256e2de17985a57f00e7b,c1e82405657b42da3d2e98edadceba7e46c3bb38,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 20 11:18:31 2018 +0200,1529486311,Merge pull request #5039 from oranagra/rdb_dbsize_hint64 bit RDB_OPCODE_RESIZEDB in rdb saving,,,,,,,,,,,,,,,Merge,False,,
c1e82405657b42da3d2e98edadceba7e46c3bb38 36524060dfe2d9fb7722aa2e327068883c931e04,1527bcada365231e7d3852bcefc0a8eb0407f5ae,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 20 17:42:37 2018 +0200,1529509357,Merge pull request #5036 from bepahol/unstableUpdate README.md,,,,,,,,,,,,,,,Merge,False,,
c6fdebf533042e30cbe54a41f744b8a674a10dc3,df6644fe0e858e40ea61c576597c51ddc82feef9,youjiali1995,zlwgx1023@gmail.com,Thu Jun 21 18:08:37 2018 +0800,1529575717,Fix rdbLoadIntegerObject() to create shared objects when needed.,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2449.0,235.0,1.1029976851851853,0.0,0.0,0.0,Corrective,True,,
1527bcada365231e7d3852bcefc0a8eb0407f5ae,ec55df117f0554aaf0d36e2fbb875aea93105b3d,shenlongxing,shenlongxing2012@gmail.com,Thu Jun 21 22:08:09 2018 +0800,1529590089,fix typo,4.0,4.0,"src/db.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",4.0,2.0,2.0,2.0,15.0,1744.5,395.0,124.35747395833332,7.5,1.085506891980005,7.0,Corrective,True,,
c6fdebf533042e30cbe54a41f744b8a674a10dc3,20e10dc7b8eeff9aa5356fd123a7c70e994e6eb4,Oran Agra,oran@redislabs.com,Thu Jun 21 17:58:29 2018 +0300,1529593109,"fix streams memory estimation, missing raxSeek",2.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1405.0,136.0,1.3042939814814816,72.0,1.7666983166357562,61.0,Corrective,True,,
1527bcada365231e7d3852bcefc0a8eb0407f5ae 20e10dc7b8eeff9aa5356fd123a7c70e994e6eb4,a16aa03a678d1312611ca601a6f9da68427bba9f,Salvatore Sanfilippo,antirez@gmail.com,Thu Jun 21 17:36:28 2018 +0200,1529595388,"Merge pull request #5051 from oranagra/streams_mem_estimatefix streams memory estimation, missing raxSeek",,,,,,,,,,,,,,,Merge,False,,
a16aa03a678d1312611ca601a6f9da68427bba9f,db6b99f90cc569c8126e2b7b0123508d8b8b015d,michael-grunder,michael.grunder@gmail.com,Thu Jun 21 12:30:42 2018 -0700,1529609442,"Update ZPOPMIN/ZPOPMAX command declarationUnlike the BZPOP variants, these functions take a single key.  This fixesnan erroneous CROSSSLOT error when passing a count to a cluster enablednserver.n",2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,4013.0,181.0,10.179328703703703,7.0,1.0982383052073124,7.0,Corrective,True,,
a16aa03a678d1312611ca601a6f9da68427bba9f ec55df117f0554aaf0d36e2fbb875aea93105b3d,199e704a421228b9c3eed967c0706bb3a0414daa,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 22 15:34:36 2018 +0200,1529674476,Merge pull request #5050 from shenlongxing/fix-typofix typo,,,,,,,,,,,,,,,Merge,False,,
199e704a421228b9c3eed967c0706bb3a0414daa db6b99f90cc569c8126e2b7b0123508d8b8b015d,54d66d39a0ac476eee08c75b8e7e238fac5b2803,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 22 15:35:36 2018 +0200,1529674536,Merge pull request #5053 from michael-grunder/zpopminmax-keyposUpdate ZPOPMIN/ZPOPMAX command declaration,,,,,,,,,,,,,,,Merge,False,,
54d66d39a0ac476eee08c75b8e7e238fac5b2803 df6644fe0e858e40ea61c576597c51ddc82feef9,70b7fa2c52648e4dec9e0e251163bd1aa413a90c,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 22 15:47:45 2018 +0200,1529675265,Merge pull request #5049 from youjiali1995/fix-load-rdbFix rdbLoadIntegerObject() to create shared objects when needed.,,,,,,,,,,,,,,,Merge,False,,
70b7fa2c52648e4dec9e0e251163bd1aa413a90c 968cb2669346ebcb20016ac16923dcd31e31ad2f,cf7fcdbe4ea9496e4ed6385e75a82bf14ef6a0e5,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 22 15:48:33 2018 +0200,1529675313,Merge pull request #4634 from soloestoy/special-authconfig: handle special configuration  for auth,,,,,,,,,,,,,,,Merge,False,,
cf7fcdbe4ea9496e4ed6385e75a82bf14ef6a0e5,dfcc20f4fd30e4373bbd4bc20d500af50796d23c,Guy Benoish,guy.benoish@redislabs.com,Sun Jun 24 16:53:01 2018 +0700,1529833981,Fix compiler warning in restoreCommand,1.0,1.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,5660.0,540.0,4.092164351851852,18.0,1.2443694617366636,16.0,Corrective,True,,
70b7fa2c52648e4dec9e0e251163bd1aa413a90c,72e8a33b35262aa8b4f094d592f271eae433bf0c,antirez,antirez@gmail.com,Mon Jun 25 14:06:05 2018 +0200,1529928365,Sentinel command renaming: base machanism implemented.,64.0,15.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4372.0,233.0,10.79730324074074,10843.0,1.0926157187312076,5561.0,None,False,,
72e8a33b35262aa8b4f094d592f271eae433bf0c,60df7dbea14953a5bab62f59ce0d11b464a7507d,antirez,antirez@gmail.com,Mon Jun 25 16:47:39 2018 +0200,1529938059,Sentinel command renaming: rename-command option parsing.,11.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4421.0,234.0,0.11219907407407408,10844.0,9.912729523416546,5562.0,None,False,,
60df7dbea14953a5bab62f59ce0d11b464a7507d,c303e768bf992ebf9042110faab6a7630e426cfe,antirez,antirez@gmail.com,Mon Jun 25 16:55:01 2018 +0200,1529938501,Sentinel command renaming: config rewriting.,12.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4432.0,235.0,0.005115740740740741,10845.0,196.47511312217202,5563.0,None,False,,
c303e768bf992ebf9042110faab6a7630e426cfe,903582dd7b1a2cecdb2268b641466c6456aaac9e,antirez,antirez@gmail.com,Mon Jun 25 17:12:39 2018 +0200,1529939559,Sentinel: make SENTINEL SET able to handle different arities.,19.0,12.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4444.0,236.0,0.01224537037037037,10846.0,82.66351606805294,5564.0,None,False,,
903582dd7b1a2cecdb2268b641466c6456aaac9e,91a384a5cdcc01912331ad3bd467b2785f3d406b,antirez,antirez@gmail.com,Mon Jun 25 17:13:20 2018 +0200,1529939600,Sentinel command renaming: implement SENTINEL SET.,19.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4451.0,237.0,0.00047453703703703693,10847.0,2108.3170731707323,5565.0,None,False,,
91a384a5cdcc01912331ad3bd467b2785f3d406b,b72cecd7c89efdd5beef994723d30dba69df6947,antirez,antirez@gmail.com,Mon Jun 25 17:23:32 2018 +0200,1529940212,Sentinel command renaming: fix CONFIG SET after refactoring.,5.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4470.0,238.0,0.007083333333333333,10848.0,142.17647058823533,5566.0,None,False,,
b72cecd7c89efdd5beef994723d30dba69df6947,a9c500889533aeb6a8c828f146acda9798164813,antirez,antirez@gmail.com,Mon Jun 25 17:24:04 2018 +0200,1529940244,Sentinel command renaming: fix CONFIG SET event logging.,17.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4470.0,239.0,0.00037037037037037035,10849.0,2701.0,5567.0,None,False,,
a9c500889533aeb6a8c828f146acda9798164813,2358de681670f6f2d64d1860765573c43c7f1606,antirez,antirez@gmail.com,Mon Jun 25 17:31:57 2018 +0200,1529940717,Sentinel command renaming: use case sensitive hashing for the dict.,2.0,1.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4486.0,240.0,0.0054745370370370364,10850.0,183.66384778012684,5568.0,None,False,,
2358de681670f6f2d64d1860765573c43c7f1606 cf7fcdbe4ea9496e4ed6385e75a82bf14ef6a0e5,a8a76bda1be22687859948de54a80538e28769b9,antirez,antirez@gmail.com,Mon Jun 25 17:34:12 2018 +0200,1529940852,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
a8a76bda1be22687859948de54a80538e28769b9,8ba670f55c88c0412e5646e35cf02fda655b8ed8,antirez,antirez@gmail.com,Mon Jun 25 17:45:01 2018 +0200,1529941501,Sentinel command renaming: document it into sentinel.conf.,19.0,0.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,230.0,23.0,10.949340277777774,10851.0,1.0913297034004459,1398.0,None,False,,
8ba670f55c88c0412e5646e35cf02fda655b8ed8,fc0c9c8097a5b2bc8728bec9cfee26817a702f09,antirez,antirez@gmail.com,Mon Jun 25 17:50:45 2018 +0200,1529941845,"Sentinel: drop the renamed-command entry in a more natural way.Instead of telling the user to set the renamed command to  to removenthe renaming, to the obvious thing when a command is renamed to itself.nnSo if I want to remove the renaming of PING, I just rename it to PINGnagain.n",4.0,7.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4487.0,241.0,0.013055555555555556,10852.0,77.59574468085106,5569.0,None,False,,
44571088d8407749ca1c49cde09089664e7928ff,e8d68b6b72c7bbba63120d9024138dacd583d22d,Madelyn Olson,matolson@amazon.com,Tue Jun 19 05:38:53 2018 +0000,1529386733,Fixed replication authentication with whitespace in password,12.0,5.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2711.0,210.0,14.569120370370367,0.0,0.0,0.0,Corrective,True,True,"[""27178a3fde83c1b81624083670d922313aca1370""]"
e8d68b6b72c7bbba63120d9024138dacd583d22d,45731edc4b215431716ec904f62a7d4d212b9d4b,Madelyn Olson,matolson@amazon.com,Tue Jun 26 00:57:35 2018 +0000,1529974655,Addressed comments,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2718.0,211.0,6.804652777777778,1.0,1.1469582699745884,1.0,Feature Addition,False,,
fc0c9c8097a5b2bc8728bec9cfee26817a702f09,3cf8dd2c84daf2f4ad1c1777f36b61a5f846a9c6,antirez,antirez@gmail.com,Tue Jun 26 09:15:46 2018 +0200,1529997346,Sentinel: fix SENTINEL SET error reporting.Thanks to @shenlongxing for reporting the problem.nRelated to #5062.n,18.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4484.0,242.0,0.6423726851851852,10853.0,2.556728707590854,5570.0,None,False,True,"[""1fcf2737a63cfa0fba4ebc0802fff8e237855ddf""]"
3cf8dd2c84daf2f4ad1c1777f36b61a5f846a9c6 45731edc4b215431716ec904f62a7d4d212b9d4b,aa5eaad48c00d541336b7e0e81605a4a7370f32c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 26 14:33:20 2018 +0200,1530016400,Merge pull request #5037 from madolson/repl-auth-fixFixed replication authentication with whitespace password,,,,,,,,,,,,,,,Merge,False,,
aa5eaad48c00d541336b7e0e81605a4a7370f32c,1f1e724f47d42538fc77d8f8bf6d6622b204dc62,antirez,antirez@gmail.com,Tue Jun 26 14:37:22 2018 +0200,1530016642,Remove black space.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2718.0,212.0,0.4859606481481482,10854.0,3.057779788982304,5571.0,None,False,,
1f1e724f47d42538fc77d8f8bf6d6622b204dc62,27178a3fde83c1b81624083670d922313aca1370,antirez,antirez@gmail.com,Tue Jun 26 14:38:31 2018 +0200,1530016711,Fix type of argslen in sendSynchronousCommand().Related to #5037.n,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2718.0,213.0,0.0007986111111111113,10855.0,1253.1739130434785,5572.0,Corrective,True,,
27178a3fde83c1b81624083670d922313aca1370 dfcc20f4fd30e4373bbd4bc20d500af50796d23c,eb052ba93ae1d3ca80718198e6fea19f8185f296,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 26 14:41:48 2018 +0200,1530016908,Merge pull request #5059 from guybe7/fix_restore_warningFix compiler warning in restoreCommand,,,,,,,,,,,,,,,Merge,False,,
27178a3fde83c1b81624083670d922313aca1370,438317796b7a34b100e47ce2c5acdf184dfdf53d,antirez,antirez@gmail.com,Tue Jun 26 16:08:32 2018 +0200,1530022112,Sentinel: test command renaming feature.,10.0,0.0,"tests/sentinel/tests/07-down-conditions.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,68.0,1.0,703.9785879629628,10856.0,1.0014204977496457,777.0,None,False,,
438317796b7a34b100e47ce2c5acdf184dfdf53d eb052ba93ae1d3ca80718198e6fea19f8185f296,b9058c7328941c72a26894961879dff9c5129e42,antirez,antirez@gmail.com,Tue Jun 26 16:09:09 2018 +0200,1530022149,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
b9058c7328941c72a26894961879dff9c5129e42 d4c4f20a4585d6c7facfdbe6699c68cb5f56bc47,bb666d445d83287295832699d0b86d61866fedef,Salvatore Sanfilippo,antirez@gmail.com,Tue Jun 26 16:13:20 2018 +0200,1530022400,Merge pull request #5027 from tigertv/unstableUpdate sort.c,,,,,,,,,,,,,,,Merge,False,,
bb666d445d83287295832699d0b86d61866fedef,751eea24c44a762f0e5d04477defa27e26f2d9d9,Oran Agra,oran@redislabs.com,Tue Jun 26 14:14:04 2018 +0300,1530011644,test suite infra improvements and fix* fail the test (exit code) in case of timeout.n* add --wait-server to allow attaching a debuggern* add --dont-clean to keep log files when tests are donen,19.0,0.0,"tests/support/server.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.8997437586982626,15.0,449.0,153.0,297.81417245370375,73.5,1.0017422889572891,10.0,Corrective,True,True,"[""2833cfbe395d7211d5ad54445556f9e2c0d7ff0c""]"
bb666d445d83287295832699d0b86d61866fedef,e8099cabd19c4e3a46c94c39e69e13191d43f5eb,Oran Agra,oran@redislabs.com,Tue Jun 26 14:13:24 2018 +0300,1530011604,add defrag hint support into jemalloc 5,43.0,0.0,"deps/jemalloc/include/jemalloc/internal/jemalloc_internal_inlines_c.h,CAS_DELIMITER,deps/jemalloc/include/jemalloc/jemalloc_macros.h.in,CAS_DELIMITER,deps/jemalloc/src/jemalloc.c,CAS_DELIMITER",3.0,1.0,3.0,1.224876716966675,15.0,1222.0,18.0,32.830405092592585,76.0,1.018614181256295,3.0,Feature Addition,False,True,"[""920158ec812dde184200232cc347f589123b715d""]"
e8099cabd19c4e3a46c94c39e69e13191d43f5eb,5616d4c6036eeea416f38aa2e41a57249e69277f,Oran Agra,oran@redislabs.com,Tue Jun 26 14:14:35 2018 +0300,1530011675,add active defrag support for streams,230.0,25.0,"src/config.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,tests/integration/rdb.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",6.0,2.0,3.0,1.0190176311100212,15.0,902.8333333333336,269.0,37.32606481481482,80.5,1.017727683477884,12.0,Feature Addition,False,True,"[""de495ee7abc2d21b1d55e706c71bbe027408ef61"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
bb666d445d83287295832699d0b86d61866fedef 5616d4c6036eeea416f38aa2e41a57249e69277f,35c5f3fa7d07420867cb1c9295003279b3a2e2f3,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 27 14:05:16 2018 +0200,1530101116,"Merge pull request #5065 from oranagra/defrag_jemalloc5defrag hint support for jemalloc 5, and active defrag for streams",,,,,,,,,,,,,,,Merge,False,,
35c5f3fa7d07420867cb1c9295003279b3a2e2f3 751eea24c44a762f0e5d04477defa27e26f2d9d9,345b4809f40d50658daea6de49e4494796e0b60c,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 27 14:07:25 2018 +0200,1530101245,Merge pull request #5063 from oranagra/test_suite_improvementstest suite infra improvements and fix,,,,,,,,,,,,,,,Merge,False,,
345b4809f40d50658daea6de49e4494796e0b60c,ed65d734e73ac431686c2b14d58dfc21c0b954d6,antirez,antirez@gmail.com,Wed Jun 27 13:11:50 2018 +0200,1530097910,CLIENT ID implemented.,4.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2050.0,287.0,13.941782407407407,10857.0,1.0717268402832545,5573.0,None,False,,
ed65d734e73ac431686c2b14d58dfc21c0b954d6,fb39bfd7af088a5ec01aec06c9488b5893eb1ceb,antirez,antirez@gmail.com,Wed Jun 27 13:26:01 2018 +0200,1530098761,Take clients in a ID -> Client handle dictionary.,6.0,0.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2516291673878228,15.0,2724.6666666666665,659.0,4.276670524691357,10859.0,34.92727406692654,5576.0,None,False,,
fb39bfd7af088a5ec01aec06c9488b5893eb1ceb,71295ee305345fba9a73766b6fc084b2c15bc303,antirez,antirez@gmail.com,Wed Jun 27 13:52:46 2018 +0200,1530100366,CLIENT UNBLOCK implemented.,22.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2058.0,289.0,0.01857638888888889,10861.0,54.83177570093458,5577.0,None,False,,
345b4809f40d50658daea6de49e4494796e0b60c,de495ee7abc2d21b1d55e706c71bbe027408ef61,Oran Agra,oran@redislabs.com,Wed Jun 27 15:32:18 2018 +0300,1530102738,minor fix in creating a stream NACK for rdb and defrag tests,2.0,2.0,"tests/integration/rdb.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",2.0,1.0,2.0,1.0,15.0,163.5,23.0,1.0539699074074074,84.5,1.7115952692092289,14.0,Corrective,True,,
345b4809f40d50658daea6de49e4494796e0b60c,6d0acb330a00a5c373ab17c36c5a20ae3b72e063,Mustafa Paltun,mpaltun@gmail.com,Wed Jun 27 16:33:31 2018 +0300,1530106411,Update help.h,1.0,1.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1148.0,15.0,19.861469907407404,0.0,0.0,0.0,None,False,,
6d0acb330a00a5c373ab17c36c5a20ae3b72e063,010dc172d40fe5785b380c4a6ebea9d11fa39532,Mustafa Paltun,mpaltun@gmail.com,Wed Jun 27 16:35:30 2018 +0300,1530106530,Update t_stream.c,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2283.0,115.0,9.229305555555557,1.0,1.1083505139125072,1.0,None,False,,
71295ee305345fba9a73766b6fc084b2c15bc303,2214043b5c84c69279077343846657c17c0214ac,antirez,antirez@gmail.com,Wed Jun 27 18:51:06 2018 +0200,1530118266,CLIENT UNBLOCK: support unblocking by error.,22.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2080.0,290.0,0.207175925925926,10862.0,5.826815642458103,5578.0,None,False,,
2214043b5c84c69279077343846657c17c0214ac 010dc172d40fe5785b380c4a6ebea9d11fa39532,730a4cfa00824bee7f39f910059fd9995af17a67,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 27 18:54:27 2018 +0200,1530118467,Merge pull request #5067 from mpaltun/mpaltun-doc-fixStreams documentation fix,,,,,,,,,,,,,,,Merge,False,,
730a4cfa00824bee7f39f910059fd9995af17a67 de495ee7abc2d21b1d55e706c71bbe027408ef61,f7b21bc71ef1d814932e01a2e03474377f1a27a9,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 27 18:56:49 2018 +0200,1530118609,Merge pull request #5066 from oranagra/defrag_jemalloc5_fixminor fix in creating a stream NACK for rdb and defrag tests,,,,,,,,,,,,,,,Merge,False,,
345b4809f40d50658daea6de49e4494796e0b60c,3c27db1cd9a452c52b9b4384dc887bca2d34f2e3,shenlongxing,shenlongxing2012@gmail.com,Thu Jun 28 01:08:55 2018 +0800,1530119335,fix empty string for sentinel rename-command,5.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,4493.0,243.0,1.4119097222222223,10.0,1.7082605808720457,8.0,Corrective,True,,
2214043b5c84c69279077343846657c17c0214ac,4a70ff74510a0f594232fd13682e358f851e1990,antirez,antirez@gmail.com,Thu Jun 28 00:17:10 2018 +0200,1530137830,Add unblock in CLIENT HELP.,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2099.0,291.0,0.2264351851851852,10863.0,5.416274790431403,5579.0,Feature Addition,False,,
4a70ff74510a0f594232fd13682e358f851e1990 f7b21bc71ef1d814932e01a2e03474377f1a27a9,75f1a7bdfc114bf161d79e0a90e993122884d662,antirez,antirez@gmail.com,Thu Jun 28 00:17:21 2018 +0200,1530137841,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
75f1a7bdfc114bf161d79e0a90e993122884d662,ab55f9da5eb10aabd78304941903e8657aa210e6,antirez,antirez@gmail.com,Thu Jun 28 00:21:32 2018 +0200,1530138092,Make CLIENT HELP output nicer to the eyes.,11.0,11.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2100.0,292.0,0.0030324074074074073,10864.0,330.7709923664122,5580.0,None,False,,
ab55f9da5eb10aabd78304941903e8657aa210e6,007e3cbd7072ab4a0ae5cc0d3df00c7f9427ba99,Akshay Nagpal,akshaynagpal@users.noreply.github.com,Wed Jun 27 20:08:39 2018 -0400,1530144519,Added link to Google Group,3.0,1.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,38.0,10.0,955.3995486111113,0.0,0.0,0.0,Feature Addition,False,,
ab55f9da5eb10aabd78304941903e8657aa210e6,1fcf2737a63cfa0fba4ebc0802fff8e237855ddf,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Jun 28 17:22:59 2018 +0800,1530177779,fix some compile warnings,2.0,2.0,"src/db.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,15.0,3012.5,449.0,3.7392013888888886,72.5,1.1403673384372817,72.0,Corrective,True,,
ab55f9da5eb10aabd78304941903e8657aa210e6,f5538642cc410dd7b14e0eec5c4217c0a501138f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Jun 28 17:28:38 2018 +0800,1530178118,clients: show pubsub flag in client list,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2100.0,293.0,0.4632638888888889,74.0,3.158596912007196,73.0,None,False,,
f5538642cc410dd7b14e0eec5c4217c0a501138f,b9cbd04b573c9f3e3092d45bb2f3181441307e79,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Jun 28 17:43:05 2018 +0800,1530178985,clients: add type option for client list,20.0,6.0,"src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.1451104143815831,15.0,3964.0,912.0,6.923608217592593,76.5,1.0694989485065869,77.0,None,False,,
ab55f9da5eb10aabd78304941903e8657aa210e6,0b74fd6766b29c2a132828477f4e0f12af85efad,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 18:17:04 2018 +0800,1530181024,Add --no-auth-warning help message.,2.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10394.0,277.0,0.02359953703703704,11.0,43.37371260421775,11.0,Feature Addition,False,,
ab55f9da5eb10aabd78304941903e8657aa210e6,5baf50d850e1c58967fe3d2601ea61ee0d7b4ecd,antirez,antirez@gmail.com,Thu Jun 28 12:19:04 2018 +0200,1530181144,Rax library updated (node callback).,19.0,5.0,"src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER",2.0,1.0,1.0,0.6500224216483541,15.0,990.0,16.0,1.96144675925926,10865.5,1.38237081708159,5582.0,None,False,,
0b74fd6766b29c2a132828477f4e0f12af85efad,bde05e9c327bf80debcbbfc047f247f1944c4ff6,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 18:22:06 2018 +0800,1530181326,Avoid -Woverlength-strings compile warning.Using another fprintf call to output the rest help message.n,5.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10396.0,278.0,0.0034953703703703705,12.0,287.09271523178813,12.0,None,False,,
bde05e9c327bf80debcbbfc047f247f1944c4ff6,7becf54e51ee226bf9cb3a4d5a297d0381f4b571,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 18:38:24 2018 +0800,1530182304,Don't output password warning message when --no-auth-warning is used.,10.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10398.0,279.0,0.011319444444444444,13.0,89.34355828220859,13.0,None,False,,
7becf54e51ee226bf9cb3a4d5a297d0381f4b571,bbd0ca952292979f54b5479d9397d1510f8bb84c,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 18:39:42 2018 +0800,1530182382,Fix code format issue.,4.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10407.0,280.0,0.0009027777777777775,14.0,1108.6923076923078,14.0,Corrective,True,True,"[""1139070a0ffd4fcf79a1420241746b9c626625ce""]"
bbd0ca952292979f54b5479d9397d1510f8bb84c,1139070a0ffd4fcf79a1420241746b9c626625ce,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 18:47:28 2018 +0800,1530182848,Fix trailing white space.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10407.0,281.0,0.005393518518518519,15.0,186.4077253218884,15.0,Corrective,True,,
1139070a0ffd4fcf79a1420241746b9c626625ce,9f1856268c9dfb8ef56f1778aa4ef99f9d504bff,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jun 28 19:09:22 2018 +0800,1530184162,Check if password is used on command line interface.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,10407.0,282.0,0.015208333333333334,16.0,66.75342465753424,16.0,None,False,,
5baf50d850e1c58967fe3d2601ea61ee0d7b4ecd 9f1856268c9dfb8ef56f1778aa4ef99f9d504bff,a4ef94d2f71a32f73ce4ebf154580307a144b48f,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 29 13:32:58 2018 +0200,1530271978,Merge pull request #5076 from 0xtonyxia/add-no-auth-warning-optionAdd no auth warning option,,,,,,,,,,,,,,,Merge,False,,
a4ef94d2f71a32f73ce4ebf154580307a144b48f 1fcf2737a63cfa0fba4ebc0802fff8e237855ddf,aa2c390ef89eae23ba5f72cd2cb7006711c2e6de,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 29 17:56:47 2018 +0200,1530287807,Merge pull request #5074 from soloestoy/fix-compile-warningfix some compile warnings,,,,,,,,,,,,,,,Merge,False,,
aa2c390ef89eae23ba5f72cd2cb7006711c2e6de b9cbd04b573c9f3e3092d45bb2f3181441307e79,a0b05a0424390492aefe2afdc34d917045897756,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 29 18:00:32 2018 +0200,1530288032,Merge pull request #5075 from soloestoy/client-list-typesFEATURE: implements client list type option,,,,,,,,,,,,,,,Merge,False,,
a0b05a0424390492aefe2afdc34d917045897756,d751d98b508fd86c5e38919167e3564f80d4958e,antirez,antirez@gmail.com,Fri Jun 29 18:02:58 2018 +0200,1530288178,Change CLIENT LIST TYPE help string.Making it more similar to KILL.n,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2115.0,295.0,1.2638078703703703,10867.0,1.7912595129724431,5583.0,None,False,,
d751d98b508fd86c5e38919167e3564f80d4958e,aeb7bc3ec6ef9721fee36c1e275fd73f7a984391,WuYunlong,xzsyeb@126.com,Sat Jun 30 09:29:35 2018 +0800,1530322175,cluster.tcl: Add master consecutively down test.,77.0,0.0,"tests/cluster/tests/05-slave-selection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,94.0,2.0,1429.2887152777778,6.0,1.0006996487058992,0.0,None,False,,
aeb7bc3ec6ef9721fee36c1e275fd73f7a984391,2e167f7d0e9abb5c49f8f0fb22a3fe2340ad0e31,WuYunlong,xzsyeb@126.com,Sat Jun 30 09:39:08 2018 +0800,1530322748,"fix server.repl_down_since resetting, so that slaves could failover automatically as expected.",1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2718.0,214.0,3.5420949074074075,7.0,1.2823188045889875,5.0,Corrective,True,True,"[""677d10b2a8ff7f13033ccfe56ffcd246dbe70fb6""]"
3d5e2c62e2690cf4a4954ab846bc119c56cad66d,7de1ada070da9f929d5c5cfab7f07a5de07305e7,chendianqiang,chendianqiang@chendianqiangdeMacBook-Pro.local,Sun Jul 1 14:43:53 2018 +0800,1530427433,limit the size of pending-querybuf in masterclient,48.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/pendingquerybuf.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.052073888261071,16.0,1676.0,482.0,2.873000578703704,1.5,0.8309357437481613,1.0,None,False,,
d751d98b508fd86c5e38919167e3564f80d4958e,2833cfbe395d7211d5ad54445556f9e2c0d7ff0c,WuYunlong,xzsyeb@126.com,Mon Jul 2 19:24:14 2018 +0800,1530530654,"fix tests/test_helper.tcl with --wait-server option. Issue #5063 added --wait-server option, but can not work.",0.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,583.0,109.0,1.1946875,8.0,1.8370389746272557,1.0,Corrective,True,,
d751d98b508fd86c5e38919167e3564f80d4958e 2833cfbe395d7211d5ad54445556f9e2c0d7ff0c,e4881cd08365b7ebe293c33c65c6a6eb32e93ce7,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 2 17:51:04 2018 +0200,1530546664,Merge pull request #5090 from trevor211/test_helper_tclfix tests/test_helper.tcl with --wait-server option.,,,,,,,,,,,,,,,Merge,False,,
e4881cd08365b7ebe293c33c65c6a6eb32e93ce7 3c27db1cd9a452c52b9b4384dc887bca2d34f2e3,f03ad96236a9b446b0ada85256d4a067ce3c217c,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 2 18:40:35 2018 +0200,1530549635,Merge pull request #5068 from shenlongxing/fix-rename-commandfix empty string for sentinel rename-command,,,,,,,,,,,,,,,Merge,False,,
f03ad96236a9b446b0ada85256d4a067ce3c217c 007e3cbd7072ab4a0ae5cc0d3df00c7f9427ba99,ee09b5ed3adccd9914bc7737ecdbe27b275b4f38,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 2 18:41:58 2018 +0200,1530549718,Merge pull request #5071 from akshaynagpal/patch-2Added link to Google Group,,,,,,,,,,,,,,,Merge,False,,
ee09b5ed3adccd9914bc7737ecdbe27b275b4f38 6b675b95252e7d7bbd3bc78d23e4a244a0310b4c,bc6a004588dafc14165bbd8851ed9d10fff3295a,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 2 18:46:56 2018 +0200,1530550016,Merge pull request #4998 from itamarhaber/module_command_helpModule command help,,,,,,,,,,,,,,,Merge,False,,
bc6a004588dafc14165bbd8851ed9d10fff3295a,2edcafb35d3cc2dcc516ba68bb173f7765424eea,antirez,antirez@gmail.com,Mon Jul 2 18:49:34 2018 +0200,1530550174,addReplySubSyntaxError() renamed to addReplySubcommandSyntaxError().,14.0,14.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",12.0,1.0,1.0,3.521640636343319,16.0,2393.333333333333,2238.0,10.071739004629627,10873.5,1.0328151488608521,5595.0,Feature Addition,False,,
7de1ada070da9f929d5c5cfab7f07a5de07305e7 2edcafb35d3cc2dcc516ba68bb173f7765424eea,cbb2ac0799b6b1564caed953fd5821697a68f753,chendianqiang,c.d_q@163.com,Tue Jul 3 10:07:26 2018 +0800,1530583646,Merge branch 'unstable' into pending-querybuf,,,,,,,,,,,,,,,Merge,False,,
2edcafb35d3cc2dcc516ba68bb173f7765424eea 2e167f7d0e9abb5c49f8f0fb22a3fe2340ad0e31,02e385169eb9a0c5710062211e6916d7f8aa38c0,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 3 12:36:53 2018 +0200,1530614213,Merge pull request #5081 from trevor211/fixClusterFailovercluster failover bug,,,,,,,,,,,,,,,Merge,False,,
02e385169eb9a0c5710062211e6916d7f8aa38c0,677d10b2a8ff7f13033ccfe56ffcd246dbe70fb6,antirez,antirez@gmail.com,Tue Jul 3 12:42:14 2018 +0200,1530614534,"Set repl_down_since to zero on state change.PR #5081 fixes an interesting bug about Redis Cluster failover but inngeneral about the updating of repl_down_since, that is used in order toncount the time a slave was left disconnected from its master.nnWhile the fix provided resolves the specific issue, in general thenvalidity of repl_down_since is limited to states that are differentnthan the state CONNECTED, and the disconnected time is set when thenstate is DISCONNECTED. However from CONNECTED to other states, the statenmachine must always go to DISCONNECTED first. So it makes sense to setnthe field to zero (since it is meaningless in that context) when thenstate is set to CONNECTED.n",2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,2718.0,215.0,3.3771527777777783,10880.0,1.2961074211922436,5596.0,Corrective,True,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
677d10b2a8ff7f13033ccfe56ffcd246dbe70fb6 cbb2ac0799b6b1564caed953fd5821697a68f753,526b30a7ce654e8418708f98100f0321396315df,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 3 13:19:37 2018 +0200,1530616777,Merge pull request #5084 from chendq8/pending-querybuflimit the size of pending-querybuf in masterclient,,,,,,,,,,,,,,,Merge,False,,
526b30a7ce654e8418708f98100f0321396315df,549b8b99733e49d2464666a22da8b56b1d9a3b52,antirez,antirez@gmail.com,Tue Jul 3 13:23:29 2018 +0200,1530617009,Improve style of PR #5084.,8.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4025.0,185.0,0.7735532407407407,10881.0,2.2927358419989528,5597.0,None,False,,
549b8b99733e49d2464666a22da8b56b1d9a3b52,94b3ee61420f8638d9cdba32877864deef91d5e9,antirez,antirez@gmail.com,Tue Jul 3 13:25:41 2018 +0200,1530617141,Clarify the pending_querybuf field of clients.,4.0,3.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2109.0,193.0,0.7750810185185185,10882.0,2.290187704391715,5598.0,None,False,,
94b3ee61420f8638d9cdba32877864deef91d5e9,93238575f77630f24e0472bdbf7eecb73a4652a8,Jack Drogon,jack.xsuperman@gmail.com,Sun Jul 1 13:24:50 2018 +0800,1530422690,Fix typo,99.0,99.0,"deps/README.md,CAS_DELIMITER,redis.conf,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/atomicvar.h,CAS_DELIMITER,src/bitops.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/dict.c,CAS_DELIMITER,src/endianconv.h,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/hyperloglog.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/listpack.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/gendoc.rb,CAS_DELIMITER,src/quicklist.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/redis-trib.rb,CAS_DELIMITER,src/redisassert.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/ziplist.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,tests/integration/replication-psync.tcl,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER,tests/unit/type/zset.tcl,CAS_DELIMITER,utils/hashtable/README,CAS_DELIMITER",40.0,5.0,8.0,4.914795121957769,16.0,1692.3,3861.0,135.91495457175924,19.5,0.9762161900548068,3.0,Corrective,True,True,"[""62a4a8c1d58308fa67978352376db2f2aede449a"", ""b6de51206e8fd79269d05f0fed3f396683d75446"", ""d490752d58ecd0a815bdbbb350b550919fcc7a4a""]"
93238575f77630f24e0472bdbf7eecb73a4652a8,6a529067589d51faaa4d1642027516ab432ec6e3,antirez,antirez@gmail.com,Wed Jul 4 12:56:12 2018 +0200,1530701772,Localtime function skeleton and file added.,44.0,0.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,10883.0,0.0,5599.0,Feature Addition,False,,
6a529067589d51faaa4d1642027516ab432ec6e3,06ca400f95aca07a3807e16b061415d82c927c64,antirez,antirez@gmail.com,Wed Jul 4 13:16:53 2018 +0200,1530703013,Localtime: basics initial calculations. Year missing.,30.0,2.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,44.0,1.0,0.014363425925925925,10884.0,70.62127316680099,5600.0,None,False,,
06ca400f95aca07a3807e16b061415d82c927c64,0c12cbedbb1626597acf2f43718c6b52fc42d08a,antirez,antirez@gmail.com,Wed Jul 4 13:25:55 2018 +0200,1530703555,"Localtime: compute year, month and day of the month.",26.0,0.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,72.0,2.0,0.0062731481481481475,10885.0,160.40959409594097,5601.0,None,False,,
0c12cbedbb1626597acf2f43718c6b52fc42d08a,b9f33830295a78f8c5bb82f6caa033445d35e56e,antirez,antirez@gmail.com,Wed Jul 4 13:35:15 2018 +0200,1530704115,Localtime: fix timezone adjustment.,2.0,1.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,98.0,3.0,0.006481481481481481,10886.0,155.28571428571428,5602.0,None,False,,
b9f33830295a78f8c5bb82f6caa033445d35e56e,c25ee35a8b6bcabab615e7babe486b08eebc9a47,antirez,antirez@gmail.com,Wed Jul 4 13:35:40 2018 +0200,1530704140,Localtime: day of month is 1 based. Convert from 0 based days.,2.0,2.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,99.0,4.0,0.00028935185185185184,10887.0,3457.0,5603.0,None,False,,
c25ee35a8b6bcabab615e7babe486b08eebc9a47,243c5a7a305eaf7a7cf936eb6805f44f9802b3a5,antirez,antirez@gmail.com,Wed Jul 4 13:46:27 2018 +0200,1530704787,Localtime: add a test main() function to check the output.,15.0,1.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,99.0,5.0,0.007488425925925926,10888.0,134.53941267387944,5604.0,None,False,,
93238575f77630f24e0472bdbf7eecb73a4652a8,46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc,dejun.xdj,dejun.xdj@alibaba-inc.com,Wed Jul 4 20:04:06 2018 +0800,1530705846,Fix indentation.,14.0,14.0,"src/ae.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,16.0,2273.0,211.0,50.637928240740735,17.5,1.0100391251577188,18.0,Corrective,True,,
243c5a7a305eaf7a7cf936eb6805f44f9802b3a5,6614d30599ddbfdb643fe7080173729636af27ad,antirez,antirez@gmail.com,Wed Jul 4 14:09:07 2018 +0200,1530706147,Localtime: fix daylight time documentation and computation.,14.0,4.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,113.0,6.0,0.01574074074074074,10889.0,64.52941176470588,5605.0,None,False,,
6614d30599ddbfdb643fe7080173729636af27ad,0ea39aa404ea9243838dcd8cb5f246ec895136cf,antirez,antirez@gmail.com,Wed Jul 4 15:16:20 2018 +0200,1530710180,Localtime: fix daylight saving adjustment. Use * not +.,1.0,1.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,123.0,7.0,0.046678240740740735,10890.0,22.423258120505825,5606.0,None,False,,
0ea39aa404ea9243838dcd8cb5f246ec895136cf,296441445068762a138b31eb20433d2cd9d17d4b,antirez,antirez@gmail.com,Wed Jul 4 15:16:54 2018 +0200,1530710214,Localtime: fix comment about leap year.,1.0,1.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,123.0,8.0,0.0003935185185185185,10891.0,2542.1764705882347,5607.0,None,False,,
296441445068762a138b31eb20433d2cd9d17d4b,18d8205bbde7bd7bf007784c391fb7fdb1d0a7e4,antirez,antirez@gmail.com,Wed Jul 4 15:50:41 2018 +0200,1530712241,Localtime: clarify is_leap_year() working with comments.,4.0,4.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,123.0,9.0,0.023460648148148147,10892.0,43.624568327577705,5608.0,None,False,,
18d8205bbde7bd7bf007784c391fb7fdb1d0a7e4,81778d91bf5a0007dc44293e983c7e36dfd7cc51,antirez,antirez@gmail.com,Wed Jul 4 16:44:57 2018 +0200,1530715497,"Cache timezone and daylight active flag for safer logging.With such information will be able to use a private localtime()nimplementation serverLog(), which does not use any locking and is bothnthread and fork() safe.n",14.0,1.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.5665095065529053,16.0,3070.5,383.0,1.750335648148148,10893.5,5.6190498290832105,5610.0,None,False,True,"[""0b73d0a8d2b3cb36127ffa33ec2d37f403de6944""]"
81778d91bf5a0007dc44293e983c7e36dfd7cc51,cb78c84235ab50f03a83b0ad4c3ce168b7e48020,antirez,antirez@gmail.com,Wed Jul 4 16:50:22 2018 +0200,1530715822,Use nolocks_localtime() for safer logging.,8.0,2.0,"src/Makefile,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,16.0,2166.0,346.0,20.055150462962967,10895.5,1.0249324206422512,5612.0,None,False,,
cb78c84235ab50f03a83b0ad4c3ce168b7e48020,0a5805d7f1db3dc8cc932942399879cffd079fc6,WuYunlong,xzsyeb@126.com,Sat Jul 7 08:44:41 2018 +0800,1530924281,fix compile warning in addReplySubcommandSyntaxError,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2115.0,297.0,4.32994212962963,9.0,1.2309499688591767,6.0,Corrective,True,,
0a5805d7f1db3dc8cc932942399879cffd079fc6,62a4a8c1d58308fa67978352376db2f2aede449a,minkikim89,minkikim89@gmail.com,Sat Jul 7 09:18:22 2018 +0200,1530947902,fix whitespace in redis-cli.c,362.0,362.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10407.0,284.0,6.078842592592593,0.0,0.0,0.0,Corrective,True,,
62a4a8c1d58308fa67978352376db2f2aede449a,289d8d9c2cb618a3099e3bf1d548087e4c6954cd,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jul 5 15:25:32 2018 +0800,1530775532,CLIENT UNBLOCK: fix client unblock help message.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2115.0,298.0,-1.7216319444444443,19.0,0.4191557590303128,19.0,None,False,,
289d8d9c2cb618a3099e3bf1d548087e4c6954cd,a3a5a25fa03a591b84c4d88f313c510dcec989cf,Amit Dey,35510446+amitdey1987@users.noreply.github.com,Wed Jul 4 08:36:09 2018 -0700,1530718569,fixing broken link in CONTRIBUTINGhttp://help.github.com/send-pull-requests/ rnis no longer supportedrnrnthis change modifies the link to the working onernhttps://help.github.com/articles/creating-a-pull-request/,1.0,1.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,40.0,11.0,6.644097222222222,0.0,0.0,0.0,Corrective,True,,
a3a5a25fa03a591b84c4d88f313c510dcec989cf,846203279c06d5bb3dc99c61f3f040439645de08,antirez,antirez@gmail.com,Mon Jul 9 13:24:30 2018 +0200,1531135470,redis-cli: cliConnect() flags CC_FORCE and CC_QUIET.We need CC_QUIET in order to fix #5096 by silently failing if needed.n,23.0,13.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10407.0,285.0,2.170925925925926,10897.0,1.4606329437857204,5613.0,None,False,True,"[""9505dd2011ef7143670b68247ff1818ffbad9768""]"
846203279c06d5bb3dc99c61f3f040439645de08,18d65849fd40639d752d3f7409f2fd23d6321662,antirez,antirez@gmail.com,Mon Jul 9 13:25:48 2018 +0200,1531135548,redis-cli: fix #5096 double error message.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10417.0,286.0,0.0009027777777777775,10898.0,1108.6923076923078,5614.0,None,False,,
18d65849fd40639d752d3f7409f2fd23d6321662,b67f027699e8fc293e0bcf167cf296b380af5a5a,antirez,antirez@gmail.com,Mon Jul 9 13:36:47 2018 +0200,1531136207,redis-cli: fix #4990 additional argument in help.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10417.0,287.0,0.007627314814814816,10899.0,132.10773899848257,5615.0,None,False,,
b67f027699e8fc293e0bcf167cf296b380af5a5a,61f12973f763b1af4e4737a0985df8991451070e,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon Jul 9 19:26:40 2018 +0800,1531135600,Bugfix: PEL is incorrect when consumer is blocked using xreadgroup with NOACK option.Save NOACK option into client.blockingState structure.n,6.0,1.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,1.6644977792004616,16.0,1772.75,652.0,11.284765625,21.5,1.0290961058456478,23.0,Corrective,True,,
61f12973f763b1af4e4737a0985df8991451070e 46f5a2ca077dbc9c4edab1f68feaa2c68244e0fc,7239e9ca5ff9dd430d5d7c7bda934a43b13fd8ad,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 9 13:56:39 2018 +0200,1531137399,Merge pull request #5095 from 0xtonyxia/fix-indentationFix indentation.,,,,,,,,,,,,,,,Merge,False,,
7239e9ca5ff9dd430d5d7c7bda934a43b13fd8ad,3f8a3efe5fd968d064337276f052de187bd339b2,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Jul 10 16:26:13 2018 +0800,1531211173,Streams: fix xreadgroup crash after xgroup SETID is sent.For issue #5111.n,20.0,15.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2284.0,119.0,0.8746875,24.0,2.143265451947124,24.0,None,False,True,"[""a7c180e559d687022e85bee88f28d11db571e90c""]"
b67f027699e8fc293e0bcf167cf296b380af5a5a,09327f11dd718461b3a1d577729c1e9969f37080,antirez,antirez@gmail.com,Tue Jul 10 11:11:39 2018 +0200,1531213899,"Streams: fix unblocking logic into a consumer group.When a client blocks for a consumer group, we don't know the actual IDnwe want to be served: other clients blocked in the same consumer groupnmay be served first, so the consumer group latest delivered ID changes.nThis was not handled correctly, all the clients in the consumer groupnwere unblocked without data but the first.n",24.0,14.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,583.0,40.0,0.906238425925926,10900.0,2.1034623686126257,5616.0,None,False,,
09327f11dd718461b3a1d577729c1e9969f37080,a71e8148533449097b12233fbebafef135fd4a80,antirez,antirez@gmail.com,Tue Jul 10 11:19:06 2018 +0200,1531214346,"Streams: send an error to consumers blocked on non-existing group.To detect when the group (or the whole key) is destroyed to send annerror to the consumers blocked in such group is a problem, so we leaventhe consumers listening, the sysadmin is free to create or destroyngroups assuming she/he knows what to do. However a client may be blockednin a given consumer group, that is later destroyed. Then the streamnreceives new elements. In that case there is no sane behavior to serventhe consumer... but to report an error about the group no longernexisting.nnMore about detecting this synchronously and why it is not done:nn1. Normally we don't do that, we leave clients blocked for other datantypes such as lists.nn2. When we free a stream object there is no longer information aboutnwhat was the key it was associated with, so while destroying thenconsumer groups we miss the info to unblock the clients in that moment.nn3. Objects can be reclaimed in other threads where it is no longer safento do client operations.n",5.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,593.0,41.0,0.0051736111111111115,10901.0,194.28859060402684,5617.0,None,False,,
a71e8148533449097b12233fbebafef135fd4a80,1a02b5f6eea523d8020b189ef6e96a515bd3f23d,antirez,antirez@gmail.com,Tue Jul 10 11:34:17 2018 +0200,1531215257,"Streams: make blocking for > a truly special case.To simplify the semantics of blocking for a group, this commit changesnthe implementation to better match the description we provide ofnconusmer groups: blocking for > will make the consumer waiting for newnelements in the group. However blocking for any other ID will alwaysnserve the local history of the consumer.nnHowever it must be noted that the > ID is actually an alias for thenspecial ID ms/seq of UINT64_MAX,UINT64_MAX.n",29.0,4.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2289.0,120.0,0.04726851851851852,10902.0,22.155729676787466,5618.0,None,False,,
1a02b5f6eea523d8020b189ef6e96a515bd3f23d,a8c1bb310e13ae273cf47e09f42953bf38a26b1e,antirez,antirez@gmail.com,Tue Jul 10 12:01:52 2018 +0200,1531216912,Streams: fix new XREADGROUP sync logic.,13.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2314.0,121.0,0.01915509259259259,10903.0,53.205438066465256,5619.0,None,False,,
a8c1bb310e13ae273cf47e09f42953bf38a26b1e,28e95c7c523258ea43b5fe9b42aeb4f9305da5f7,antirez,antirez@gmail.com,Tue Jul 10 12:04:31 2018 +0200,1531217071,Streams: fix typo consumer.,1.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,597.0,42.0,0.03153935185185185,10904.0,32.706422018348626,5620.0,None,False,,
28e95c7c523258ea43b5fe9b42aeb4f9305da5f7 7239e9ca5ff9dd430d5d7c7bda934a43b13fd8ad,0420c3276f96be8d2261187326cdafca94942577,antirez,antirez@gmail.com,Tue Jul 10 12:06:44 2018 +0200,1531217204,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0420c3276f96be8d2261187326cdafca94942577,9505dd2011ef7143670b68247ff1818ffbad9768,tengfeng,jingcheng.ljc@alibaba-inc.com,Tue Jul 10 20:58:01 2018 +0800,1531227481,fix repeat argument issue and reduce unnessary loop times for redis-cli.,12.0,7.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10418.0,288.0,1.0564120370370371,0.0,0.0,0.0,Corrective,True,True,"[""9f43264f861b30546c1af90345b153241de1f118""]"
0420c3276f96be8d2261187326cdafca94942577 9505dd2011ef7143670b68247ff1818ffbad9768,f45e790125cc8141c10daefe25bf3530e484c61f,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 10 15:13:20 2018 +0200,1531228400,Merge pull request #4967 from JingchengLi/unstablefix repeat argument issue and reduce unnessary loop times for redis-cli.,,,,,,,,,,,,,,,Merge,False,,
f45e790125cc8141c10daefe25bf3530e484c61f,920158ec812dde184200232cc347f589123b715d,Oran Agra,oran@redislabs.com,Wed Jul 11 16:09:00 2018 +0300,1531314540,Active defrag fixes for 32bit builds (again)* overflow in jemalloc fragmentation hint to the defraggern,2.0,2.0,"deps/jemalloc/include/jemalloc/internal/jemalloc_internal_inlines_c.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,246.0,2.0,15.080277777777773,86.0,1.0663117758661975,4.0,Corrective,True,,
f45e790125cc8141c10daefe25bf3530e484c61f 920158ec812dde184200232cc347f589123b715d,167705519b5f21b2aa3954527be15dc653131221,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 11 22:07:46 2018 +0200,1531339666,Merge pull request #5114 from oranagra/defrag_32Active defrag fixes for 32bit builds (again),,,,,,,,,,,,,,,Merge,False,,
167705519b5f21b2aa3954527be15dc653131221 3f8a3efe5fd968d064337276f052de187bd339b2,bf4def0fbcecb84b49a3e82167ae406131f3de77,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 12 13:04:22 2018 +0200,1531393462,Merge pull request #5112 from 0xtonyxia/fix-xreadgroup-crash-after-setidStreams: fix xreadgroup crash after xgroup SETID is sent.,,,,,,,,,,,,,,,Merge,False,,
bf4def0fbcecb84b49a3e82167ae406131f3de77,a7c180e559d687022e85bee88f28d11db571e90c,antirez,antirez@gmail.com,Thu Jul 12 13:15:54 2018 +0200,1531394154,Simplify duplicated NACK #5112 fix.We don't really need to distinguish between the case the consumer is thensame or is a different one.n,18.0,21.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2324.0,122.0,2.051412037037037,10905.0,1.487469110030354,5621.0,Corrective,True,,
a7c180e559d687022e85bee88f28d11db571e90c,b6260a027026d1a5a6fa4fa0d8527de86066de8e,antirez,antirez@gmail.com,Thu Jul 12 13:19:39 2018 +0200,1531394379,"Streams: when re-delivering because of SETID, reset deliveries counter.We don't want to increment the deliveries here, because the sysadminnreset the consumer group so the desire is likely to restart processing,nand having the PEL polluted with old information is not useful butnprobably confusing.nnRelated to #5111.n",2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2321.0,123.0,0.0026041666666666665,10906.0,385.0,5622.0,None,False,,
b6260a027026d1a5a6fa4fa0d8527de86066de8e,8d6b7861a702b9f8fb2eceb76750c393a79e4c40,antirez,antirez@gmail.com,Thu Jul 12 13:35:17 2018 +0200,1531395317,Add regression test for #5111.,15.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,84.0,5.0,146.01542824074073,10907.0,1.0068485913581082,778.0,Feature Addition,False,,
8d6b7861a702b9f8fb2eceb76750c393a79e4c40 0fd2b25c8dc646dd86fe95021f2e5c0224f075da,4cb5bd4e9d33916d133a4bd69188e4f8e1cd76bd,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 12 13:42:15 2018 +0200,1531395735,Merge pull request #4820 from charpty/wip-serverc-simplifyRemove unnecessary return statements,,,,,,,,,,,,,,,Merge,False,,
4cb5bd4e9d33916d133a4bd69188e4f8e1cd76bd,c2a85fb3c5291c9f0ebe776117fe4d77222eebb7,Shen Longxing,shenlongxing2012@gmail.com,Thu Jul 12 21:21:37 2018 +0800,1531401697,"Delete unused role checking.When check rdb file, it is unnecessary to check role.",2.0,6.0,"src/redis-check-rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,367.0,22.0,22.977256944444445,1.0,1.04352129596748,1.0,None,False,,
4cb5bd4e9d33916d133a4bd69188e4f8e1cd76bd c2a85fb3c5291c9f0ebe776117fe4d77222eebb7,f3980bb9fd167420acda96419d8db991cc85d1e1,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 12 19:07:40 2018 +0200,1531415260,Merge pull request #5115 from shenlongxing/patch-1Delete unused role checking.,,,,,,,,,,,,,,,Merge,False,,
f3980bb9fd167420acda96419d8db991cc85d1e1,513eb5728cbe364721f3258b6964566d28b18136,artix,artix2@gmail.com,Fri Jun 22 18:27:03 2018 +0200,1529684823,Cluster Manager: auth support (-a argument).,41.0,19.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10423.0,289.0,-17.854837962962964,73.0,0.9439927709187648,67.0,None,False,,
513eb5728cbe364721f3258b6964566d28b18136,d222eda9f089f6605d755777c32132cb8cad76c9,artix,artix2@gmail.com,Wed Jun 27 16:42:22 2018 +0200,1530110542,Redis-trib deprecated: it no longer works and it outputs a warning to the user.,103.0,1804.0,"src/redis-trib.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1830.0,130.0,-3.6128240740740734,74.0,0.7232082217409691,68.0,None,False,,
d222eda9f089f6605d755777c32132cb8cad76c9,d4182a0a0d36c97c42603fdd8ff6db750ec26580,artix,artix2@gmail.com,Wed Jun 27 17:29:11 2018 +0200,1530113351,Cluster Manager: more checks on --cluster-weight option.,12.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10445.0,290.0,4.959814814814815,75.0,1.2016204308703282,69.0,None,False,,
f3980bb9fd167420acda96419d8db991cc85d1e1,b3660be8f5fbf495b960407ff22d83f824161b74,WuYunlong,xzsyeb@126.com,Fri Jul 13 17:51:06 2018 +0800,1531475466,Add test in slowlog.tcl,10.0,0.0,"tests/unit/slowlog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,81.0,5.0,392.95361111111123,10.0,1.0025448296483963,2.0,Feature Addition,False,,
b3660be8f5fbf495b960407ff22d83f824161b74,d6ba4fd56d9e386abaf6926fa47ead1525ff56cb,WuYunlong,xzsyeb@126.com,Fri Jul 13 17:53:55 2018 +0800,1531475635,Fix config set slowlog-log-slower-than and condition in createLatencyReport,2.0,2.0,"src/config.c,CAS_DELIMITER,src/latency.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,1399.0,262.0,11.449108796296294,11.5,1.068515199388118,8.0,Corrective,True,,
d4182a0a0d36c97c42603fdd8ff6db750ec26580 d6ba4fd56d9e386abaf6926fa47ead1525ff56cb,a44a59340c1a939b48ddaf50757355a38428921a,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 13 17:35:15 2018 +0200,1531496115,Merge pull request #5119 from trevor211/fixSlowlogConfigFix slowlog config,,,,,,,,,,,,,,,Merge,False,,
d4182a0a0d36c97c42603fdd8ff6db750ec26580,a93f8f09985ed832038b195e7f3e4b5cde220e94,antirez,antirez@gmail.com,Fri Jul 13 17:40:48 2018 +0200,1531496448,Test: XDEL basic test.,12.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,272.0,11.0,31.185567129629632,10908.0,1.03206611557979,779.0,Preventative,False,,
a93f8f09985ed832038b195e7f3e4b5cde220e94 a44a59340c1a939b48ddaf50757355a38428921a,699971535e499cf1cabc349ba6b60ce0fec15d71,antirez,antirez@gmail.com,Fri Jul 13 17:41:10 2018 +0200,1531496470,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
699971535e499cf1cabc349ba6b60ce0fec15d71,8dc08ae2154a46757adb75ee091219baa2f0cb22,andrewsensus,7727721+andrewsensus@users.noreply.github.com,Fri Jul 13 09:46:30 2018 -0600,1531496790,update leap year comment,1.0,1.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,123.0,10.0,9.08042824074074,0.0,0.0,0.0,None,False,,
699971535e499cf1cabc349ba6b60ce0fec15d71,d6efd5fc1d789496275c749b7a26a37ad90931e9,antirez,antirez@gmail.com,Fri Jul 13 17:47:26 2018 +0200,1531496846,"Test: XDEL fuzz testing, stream creation.",20.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,284.0,12.0,0.004606481481481481,10909.0,218.0854271356784,780.0,Preventative,False,,
d6efd5fc1d789496275c749b7a26a37ad90931e9,967ad3643c540d3b40f64cc51b4aff6340662ffb,antirez,antirez@gmail.com,Fri Jul 13 17:51:03 2018 +0200,1531497063,Test: add lshuffle in the Tcl utility functions set.,14.0,0.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,377.0,23.0,1073.224861111111,10910.0,1.0009317711844326,781.0,Preventative,False,,
967ad3643c540d3b40f64cc51b4aff6340662ffb,3d7d20b7f3fa186a6fd13f28a1382138b1b1b732,antirez,antirez@gmail.com,Fri Jul 13 17:52:39 2018 +0200,1531497159,Test: fix lshuffle by providing the K combinator.,2.0,0.0,"tests/support/util.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,391.0,24.0,0.0011111111111111113,10911.0,901.0,782.0,Preventative,False,,
3d7d20b7f3fa186a6fd13f28a1382138b1b1b732,2352a519928aa693d73d03c67898577a3bb2f56d,antirez,antirez@gmail.com,Fri Jul 13 17:58:17 2018 +0200,1531497497,Test: XDEL fuzz testing. Remove and check stage.,15.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,304.0,13.0,0.007534722222222222,10912.0,133.7188940092166,783.0,Preventative,False,,
2352a519928aa693d73d03c67898577a3bb2f56d 8dc08ae2154a46757adb75ee091219baa2f0cb22,ab33bcd34640306cdf70fd4fda0af41d93c687bf,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 13 18:18:45 2018 +0200,1531498725,Merge pull request #5120 from andrewsensus/leap-year-comment-patch-1update leap year comment,,,,,,,,,,,,,,,Merge,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,2d4366c5440ddd565e91142d59455232b6894dbd,WuYunlong,xzsyeb@126.com,Sat Jul 14 09:06:23 2018 +0800,1531530383,"Accept write commands if persisting is disabled, event if we do have problems persisting on disk previously.",2.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4048.0,190.0,9.427789351851851,13.0,1.1060694042557893,9.0,Corrective,True,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,0484dbcf68638149a8510537fd1a42c836f84020,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Jul 10 16:46:48 2018 +0800,1531212408,Streams: using streamCompareID() instead of direct compare.,2.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2321.0,124.0,-2.106145833333333,25.0,0.5251990701815124,25.0,None,False,True,"[""c1e9186f069e0b3aa1507e0e86a16d5001ea5420""]"
0484dbcf68638149a8510537fd1a42c836f84020,a2177cd2b6bcbacc376d9640727cd89c5ffed3fa,dejun.xdj,dejun.xdj@alibaba-inc.com,Sat Jul 14 15:02:24 2018 +0800,1531551744,Streams: add streamCompareID() declaration in stream.h.,1.0,0.0,"src/stream.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,112.0,16.0,87.65583333333332,26.0,1.0114082538716762,26.0,None,False,,
a2177cd2b6bcbacc376d9640727cd89c5ffed3fa,491682a668dc5eeffdb6c989b819c1015c97b4f0,dejun.xdj,dejun.xdj@alibaba-inc.com,Sat Jul 14 15:03:05 2018 +0800,1531551785,Streams: using streamCompareID() instead of direct compare in block.c.,1.0,4.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,597.0,43.0,3.8740046296296295,27.0,1.258130822134718,27.0,None,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,b05a22e261bf2ed278d6b1a6afb3ade7ff4cacfc,Oran Agra,oran@redislabs.com,Sun Jul 15 18:24:18 2018 +0300,1531668258,bugfix in sdsReqType creating 64bit sds headers on 32bit systems,3.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1278.0,77.0,14.416296296296293,87.0,1.0693659438906586,66.0,Corrective,True,,
84b281209a653f8afe5b106ab44d8339fd798823,816fc6cbc67957baae6c2fa8332222da8bf789b7,peterpaule,peterpaule@peterpauledeMacBook-Pro.local,Mon Jul 16 11:28:22 2018 +0800,1531711702,remove one ineffective loop in dictGetSomeKeys.,1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1224.0,85.0,14.919120370370367,0.0,0.0,0.0,None,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,b4ba5ac8408ef46c3a0b593a2d3cf6d74f33a1ce,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jul 16 13:24:54 2018 +0800,1531718694,Streams: show last id for streams and groups,6.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2317.0,125.0,5.859791666666666,79.0,1.1706545312333343,78.0,None,False,,
816fc6cbc67957baae6c2fa8332222da8bf789b7,b6ce7d5ddce573f500b8770d9052e0c422c91500,paule,liangpan03021327@163.com,Mon Jul 16 14:29:59 2018 +0800,1531722599,Update dict.cchange coding style.,4.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1224.0,86.0,0.12612268518518518,0.0,0.0,0.0,None,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,c9324f81a209c49c795d41ab2af8cb06b72d87c9,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jul 16 15:57:41 2018 +0800,1531727861,Streams: free lp if all elements are deleted,9.0,4.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2321.0,126.0,0.10609953703703703,80.0,10.425111814115851,79.0,None,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf b4ba5ac8408ef46c3a0b593a2d3cf6d74f33a1ce,4215e74be5cfc0476982451e4aaa0ddf2a502548,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 12:24:14 2018 +0200,1531736654,Merge pull request #5129 from soloestoy/xinfo-show-last-idStreams: show last id for streams and groups,,,,,,,,,,,,,,,Merge,False,,
4215e74be5cfc0476982451e4aaa0ddf2a502548,185e0d9cd81435b32b62c39f131e2af6f6dcc92a,antirez,antirez@gmail.com,Mon Jul 16 12:25:22 2018 +0200,1531736722,Modify XINFO field from last-id to last-generated-id.Related to #5129.n,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2326.0,127.0,0.10255787037037037,10913.0,10.750592483918293,5623.0,None,False,,
185e0d9cd81435b32b62c39f131e2af6f6dcc92a c9324f81a209c49c795d41ab2af8cb06b72d87c9,a317f55d25a69b55c07a49dde20989f1ac8aefe0,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 12:39:38 2018 +0200,1531737578,Merge pull request #5131 from soloestoy/optimize-xdelStreams: free lp if all elements are deleted,,,,,,,,,,,,,,,Merge,False,,
a317f55d25a69b55c07a49dde20989f1ac8aefe0,103c5a1a3cb9c306a8413820bdeb0132728cd47e,antirez,antirez@gmail.com,Mon Jul 16 12:41:55 2018 +0200,1531737715,Add a few comments to streamIteratorRemoveEntry().,4.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2326.0,128.0,0.011493055555555557,10914.0,88.00906344410878,5624.0,Feature Addition,False,,
103c5a1a3cb9c306a8413820bdeb0132728cd47e,73306c6fedd134e2d97f351c1bf1e657945771f7,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jul 16 20:48:07 2018 +0800,1531745287,Streams: correctly propagate xdel if needed,7.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2330.0,129.0,0.08763888888888889,81.0,12.410459587955625,80.0,None,False,,
ab33bcd34640306cdf70fd4fda0af41d93c687bf,bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15,Oran Agra,oran@redislabs.com,Wed Feb 21 20:18:34 2018 +0200,1519237114,"slave buffers were wasteful and incorrectly counted causing evictionA) slave buffers didn't count internal fragmentation and sds unused space,n   this caused them to induce eviction although we didn't mean for it.nnB) slave buffers were consuming about twice the memory of what they actually needed.n- this was mainly due to sdsMakeRoomFor growing to twice as much as needed each timen  but networking.c not storing more than 16k (partially fixed recently in 237a38737).n- besides it wasn't able to store half of the new string into one buffer and then  other half into the next (so the above mentioned fix helped mainly for small items).n- lastly, the sds buffers had up to 30% internal fragmentation that was wasted,n  consumed but not used.nnC) inefficient performance due to starting from a small string and reallocing many times.nnwhat i changed:n- creating dedicated buffers for reply list, counting their size with zmalloc_sizen- when creating a new reply node from, preallocate it to at least 16k.n- when appending a new reply to the buffer, first fill all the unused space of then  previous node before starting a new one.nnother changes:n- expose mem_not_counted_for_evict info field for the benefit of the test suiten- add a test to make sure slave buffers are counted correctly and that they don't cause evictionn",182.0,50.0,"src/aof.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER,tests/unit/maxmemory.tcl,CAS_DELIMITER",10.0,2.0,2.0,1.8506197513838305,16.0,2054.9,1504.0,-84.08944097222222,92.5,0.9977180244872056,15.0,Corrective,True,True,"[""780815dd6ed62a0744bdbea90c239c5dcf792e60"", ""d4ae76d1a6cde03c957000f870ff3d1c0e8c3fb9"", ""c8452ab0059877ac4a055e74e604d00244b06053"", ""ba809f26d4bd81d23fa929d0c018f235ab298564""]"
103c5a1a3cb9c306a8413820bdeb0132728cd47e 73306c6fedd134e2d97f351c1bf1e657945771f7,28dd8dd1507f5723196785d854b5564cd530b2bf,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 16:04:32 2018 +0200,1531749872,Merge pull request #5132 from soloestoy/propagate-xdel-correctlyStreams: correctly propagate xdel if needed,,,,,,,,,,,,,,,Merge,False,,
28dd8dd1507f5723196785d854b5564cd530b2bf bf680b6f8cdaee2c5588c5c8932a7f3b7fa70b15,e22a1218bcfa460d6b15142dcdc221561ffcfcf2,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 17:45:50 2018 +0200,1531755950,Merge pull request #5126 from oranagra/slave_buf_memory_2slave buffers were wasteful and incorrectly counted causing eviction,,,,,,,,,,,,,,,Merge,False,,
e22a1218bcfa460d6b15142dcdc221561ffcfcf2,f9c84d6d39411d25bb29d3a03b29ec257e2b66e7,antirez,antirez@gmail.com,Mon Jul 16 17:56:54 2018 +0200,1531756614,Hopefully improve commenting of #5126.Reading the PR gave me the opportunity to better specify what the codenwas doing in places where I was not immediately sure about what wasngoing on. Moreover I documented the structure in server.h so that peoplenreading the header file will immediately understand what the structurenis useful for.n,22.0,10.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3372900666170139,16.0,2126.0,499.0,144.90162037037038,10915.5,1.0051759255561326,5626.0,Non Functional,False,,
f9c84d6d39411d25bb29d3a03b29ec257e2b66e7 b05a22e261bf2ed278d6b1a6afb3ade7ff4cacfc,cab396761e6d7dbec99627ac4fa1c441027d56d3,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 18:32:14 2018 +0200,1531758734,Merge pull request #5127 from oranagra/sds_req_typebugfix in sdsReqType creating 64bit sds headers on 32bit systems,,,,,,,,,,,,,,,Merge,False,,
cab396761e6d7dbec99627ac4fa1c441027d56d3 491682a668dc5eeffdb6c989b819c1015c97b4f0,9fbd49bbaf390c1713353fcb462ef436e2d52547,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 16 18:34:35 2018 +0200,1531758875,Merge pull request #5113 from 0xtonyxia/using-compare-func-insteadStreams: using streamCompareID() instead of direct compare.,,,,,,,,,,,,,,,Merge,False,,
9fbd49bbaf390c1713353fcb462ef436e2d52547 b6ce7d5ddce573f500b8770d9052e0c422c91500,4fc2099235a9214a953390340e94ec632cc16344,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 17 10:38:55 2018 +0200,1531816735,Merge pull request #5128 from kingpeterpaule/remove-one-loop-in-freeMemoryIfNeededremove ineffective loop in dictGetSomeKeys.,,,,,,,,,,,,,,,Merge,False,,
4fc2099235a9214a953390340e94ec632cc16344,cefe21d28a75f4fdbf24823ce42e777c2b9d5c6f,antirez,antirez@gmail.com,Tue Jul 17 10:39:47 2018 +0200,1531816787,dict.c: remove a few trailing spaces.,2.0,2.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1226.0,87.0,1.0901388888888892,10917.0,1.9173143075551025,5627.0,None,False,,
cefe21d28a75f4fdbf24823ce42e777c2b9d5c6f,d55598988b3381afff87bc974f5cfda0e8ae77e0,Oran Agra,oran@redislabs.com,Sat Jul 14 16:49:15 2018 +0300,1531576155,"fix rare replication stream corruption with disk-based replicationThe slave sends n keepalive messages to the master while parsing the rdb,nand later sends REPLCONF ACK once a second. rarely, the master recives bothna linefeed char and a REPLCONF in the same read, n*3rn$8rnREPLCONFrn...nand it tries to trim two chars (rn) from the query buffer,ntrimming the '*' from *3rn$8rnREPLCONFrn...nnthen the master tries to process a command starting with '3' and replies tonthe slave a bunch of -ERR and one +OK.nalthough the slave silently ignores these (prints a log message), this corruptsnthe replication offset at the slave since the slave increases the replicationnoffset, and the master did not.nnother than the fix in processInlineBuffer, i did several other improvmentsnwhile hunting this very rare bug.nn- when redis replies with unknown command it includes a portion of then  arguments, not just the command name. so it would be easier to understandn  what was recived, in my case, on the slave side,  it was -ERR, butn  the arguments were the interesting part (containing info on the error).n- about a year ago i added code in addReplyErrorLength to print the error ton  the log in case of a reply to master (since this string isn't actuallyn  trasmitted to the master), now changed that block to print a similar logn  message to indicate an error being sent from the master to the slave.n  note that the slave is marked as CLIENT_SLAVE only after PSYNC was received,n  so this will not cause any harm for REPLCONF, and will only indicate problemsn  that are gonna corrupt the replication stream anyway.n- two places were c->reply was emptied, and i wanted to reset sentlenn  this is a precaution (i did not actually see such a problem), since an  non-zero sentlen will cause corruption to be transmitted on the socket.n",18.0,9.0,"src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",3.0,1.0,1.0,1.1246581201547063,16.0,2973.666666666666,712.0,94.51243441358022,99.0,0.8439512837806832,78.0,Corrective,True,True,"[""e2c1f80b464a3a6dde961bb30bff9a39c17c6b29""]"
103c5a1a3cb9c306a8413820bdeb0132728cd47e,6501b6bb6d8d8243c47402e25e9d54e7309f727f,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Jul 17 18:19:10 2018 +0800,1531822750,"Streams: return an error message if using xreadgroup with '$' ID.Redis will always return an empty result when '$' ID is specifiednwith xreadgroup command, it's meaningless.n",5.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2334.0,130.0,0.8965625,28.0,2.1153712094806547,28.0,None,False,,
6501b6bb6d8d8243c47402e25e9d54e7309f727f,846cf12ae592b8a97c9e932f08b7533902733c17,dejun.xdj,dejun.xdj@alibaba-inc.com,Tue Jul 17 18:23:47 2018 +0800,1531823027,Streams: remove meaningless if condition.It's already checked if xreadgroup is set and groupname is NULL.n,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2339.0,131.0,0.0032060185185185178,29.0,312.913357400722,29.0,None,False,,
cefe21d28a75f4fdbf24823ce42e777c2b9d5c6f d55598988b3381afff87bc974f5cfda0e8ae77e0,e03358c0d978bf0352a78b531e0ccc69118640eb,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 17 17:33:58 2018 +0200,1531841638,Merge pull request #5135 from oranagra/rare_repl_corruptionfix rare replication stream corruption with disk-based replication,,,,,,,,,,,,,,,Merge,False,,
e03358c0d978bf0352a78b531e0ccc69118640eb,afc7e08a20da95d6facf8357a82b7321cb64cfcf,antirez,antirez@gmail.com,Tue Jul 17 17:42:25 2018 +0200,1531842145,"Panic when we are sending an error to our master/slave.Related to #5135, see discussion there.n",5.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2145.0,303.0,3.078587962962963,10918.0,1.3248242415128388,5628.0,None,False,,
afc7e08a20da95d6facf8357a82b7321cb64cfcf 846cf12ae592b8a97c9e932f08b7533902733c17,4bff45c7a6e79c85764ed0191d0fd215485a47cd,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 17 17:50:31 2018 +0200,1531842631,Merge pull request #5136 from 0xtonyxia/fix-xread-id-parseFix xreadgroup with '$' ID.,,,,,,,,,,,,,,,Merge,False,,
4bff45c7a6e79c85764ed0191d0fd215485a47cd,6201f7b4e0cb1ee96f54d6ec5b993d422581fbf9,antirez,antirez@gmail.com,Tue Jul 17 17:54:10 2018 +0200,1531842850,Streams: better error when $ is given with XREADGROUP.,5.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2339.0,132.0,0.2294328703703704,10919.0,5.358573374363113,5629.0,None,False,,
6201f7b4e0cb1ee96f54d6ec5b993d422581fbf9 2ef8c2f6c22e27507e62bf937a5b4e9f7429fdbd,46fd927800398f3abdf7d21a780f29fd6399519c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 17 18:04:55 2018 +0200,1531843495,Merge pull request #4237 from aspirewit/update-commentUpdate the comment,,,,,,,,,,,,,,,Merge,False,,
46fd927800398f3abdf7d21a780f29fd6399519c 2d4366c5440ddd565e91142d59455232b6894dbd,8213f64d6433509ba9cd98a993f5b4c715fef10d,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 17 18:08:46 2018 +0200,1531843726,Merge pull request #5122 from trevor211/allowWritesWhenAofDisabledAccept write commands if persisting is disabled,,,,,,,,,,,,,,,Merge,False,,
cefe21d28a75f4fdbf24823ce42e777c2b9d5c6f,f89c93c8adf2dea395224c5c65d82e90aa323bfd,Oran Agra,oran@redislabs.com,Wed Jul 18 10:16:33 2018 +0300,1531898193,"make active defrag test more stableon slower machines, the active defrag test tended to fail.nalthough the fragmentation ratio was below the treshold, the defragger wasnstill in the middle of a scan cycle.nnthis commit changes:n- the defragger uses the current fragmentation state, rather than the cache onen  that is updated by server cron every 100ms. this actually fixes a bug ofn  starting one excess scan cyclen- the test lets the defragger use more CPU cycles, in hope that the defragn  will be faster, but also give it more time before we give up.n",6.0,5.0,"src/defrag.c,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9940302114769564,15.0,675.5,22.0,21.30771412037037,101.5,1.0346321709113329,16.0,Corrective,True,,
8213f64d6433509ba9cd98a993f5b4c715fef10d f89c93c8adf2dea395224c5c65d82e90aa323bfd,22e9321c3ee238f498980cf18781e10caaa01589,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 18 11:05:03 2018 +0200,1531904703,Merge pull request #5138 from oranagra/improve_defrag_testmake active defrag test more stable,,,,,,,,,,,,,,,Merge,False,,
8213f64d6433509ba9cd98a993f5b4c715fef10d,6183f0590dede55ceeb9019899343170d38197d0,antirez,antirez@gmail.com,Wed Jul 18 17:40:07 2018 +0200,1531928407,Refine comment in addReplyErrorLength() about replying to masters/slaves.See #5135 for some context.n,11.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2150.0,304.0,0.9984027777777778,10920.0,2.001599777422272,5630.0,Feature Addition,False,,
6183f0590dede55ceeb9019899343170d38197d0,313b2240aec0447bb61453cf81f706120d826c30,antirez,antirez@gmail.com,Wed Jul 18 17:41:06 2018 +0200,1531928466,In addReplyErrorLength() only panic when replying to slave.See #5135 for more context.n,4.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2161.0,305.0,0.0006828703703703704,10921.0,1465.4067796610173,5631.0,Feature Addition,False,,
313b2240aec0447bb61453cf81f706120d826c30 22e9321c3ee238f498980cf18781e10caaa01589,0aca977c476ac169208d0366c3a42aa18923cc36,antirez,antirez@gmail.com,Wed Jul 18 17:41:37 2018 +0200,1531928497,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0aca977c476ac169208d0366c3a42aa18923cc36 f4eb64cd3537ce34e0125fa1fb6cccb6dbfc3e48,16b8d364cca67f4db0883715869c721317f799af,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 19 12:21:35 2018 +0200,1531995695,Merge pull request #4727 from kingpeterpaule/redis-fix-info-climove getClientsMaxBuffers func into  info clients command,,,,,,,,,,,,,,,Merge,False,,
16b8d364cca67f4db0883715869c721317f799af,1c95c075966407729648fe676883a75be638824c,antirez,antirez@gmail.com,Thu Jul 19 12:22:42 2018 +0200,1531995762,Make vars used only by INFO CLIENTS local to the block.Related to #4727.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4064.0,193.0,4.8565625,10922.0,1.2059069557943505,5632.0,None,False,,
1c95c075966407729648fe676883a75be638824c,d4c5fc57db0c60780cbce8dfe2b6a5e457cedf83,antirez,antirez@gmail.com,Thu Jul 19 13:49:00 2018 +0200,1532000940,clientsCronTrackExpansiveClients() skeleton and ideas.,23.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4064.0,194.0,0.05993055555555556,10923.0,17.685979142526072,5633.0,None,False,,
d4c5fc57db0c60780cbce8dfe2b6a5e457cedf83,85a1b4f807fd7651184363fadb4a8cdac864adc6,antirez,antirez@gmail.com,Thu Jul 19 13:54:15 2018 +0200,1532001255,clientsCronTrackExpansiveClients() actual implementation.,14.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4087.0,195.0,0.003645833333333333,10924.0,275.2857142857143,5634.0,None,False,,
85a1b4f807fd7651184363fadb4a8cdac864adc6,8d617596f1ba5eab71820b0e8faafad893a40176,antirez,antirez@gmail.com,Thu Jul 19 13:58:04 2018 +0200,1532001484,Implement a function to retrieve the expansive clients mem usage.,12.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4100.0,196.0,0.002650462962962963,10925.0,378.292576419214,5635.0,None,False,True,"[""0cf3794e6e4807caaf1c78a62dd7843174c08f70""]"
8d617596f1ba5eab71820b0e8faafad893a40176,8f7e496ba50279fbc384cc391ebb45f7b4aaa8e8,antirez,antirez@gmail.com,Thu Jul 19 13:59:13 2018 +0200,1532001553,Rename var in clientsCronTrackExpansiveClients() for clarity.,3.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4112.0,197.0,0.0007986111111111113,10926.0,1253.1739130434785,5636.0,None,False,,
1c95c075966407729648fe676883a75be638824c,de5ca516aed4065e7b7e05d692996cfc028b0f32,dejun.xdj,dejun.xdj@alibaba-inc.com,Thu Jul 19 20:48:08 2018 +0800,1532004488,Streams: ID of xclaim command starts from the sixth argument.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2342.0,133.0,1.8708101851851853,30.0,1.5345277719348172,30.0,None,False,,
8f7e496ba50279fbc384cc391ebb45f7b4aaa8e8,ea3a20c5d05869a498d037f67f92fd05287f9428,antirez,antirez@gmail.com,Thu Jul 19 17:16:19 2018 +0200,1532013379,Change INFO CLIENTS sections to report pre-computed max/min client buffers.,5.0,5.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4112.0,198.0,0.136875,10927.0,8.30593607305936,5637.0,None,False,,
ea3a20c5d05869a498d037f67f92fd05287f9428,0cf3794e6e4807caaf1c78a62dd7843174c08f70,antirez,antirez@gmail.com,Thu Jul 19 17:34:15 2018 +0200,1532014455,Fix wrong array index variable in getExpansiveClientsInfo().,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4112.0,199.0,0.012453703703703705,10928.0,81.29739776951673,5638.0,Corrective,True,,
0cf3794e6e4807caaf1c78a62dd7843174c08f70,be88c0b16a53f5763d8fc1ae683f99ee39b0d68e,antirez,antirez@gmail.com,Thu Jul 19 17:38:17 2018 +0200,1532014697,"Rename INFO CLIENT max buffers field names for correctness.They are actually delayed a few seconds, so let's call them recent.n",2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4112.0,200.0,0.0028009259259259268,10929.0,358.0247933884297,5639.0,None,False,,
be88c0b16a53f5763d8fc1ae683f99ee39b0d68e,aba6855282759feed747fb80cd947f86d5039335,antirez,antirez@gmail.com,Fri Jul 20 09:36:44 2018 +0200,1532072204,Clarify that clientsCronTrackExpansiveClients() indexes may jump ahead.,9.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4112.0,201.0,0.6655902777777778,10930.0,2.5024257916427564,5640.0,None,False,,
aba6855282759feed747fb80cd947f86d5039335,4ff47a0b9bf4d032891e1956c74a5556e443b7a0,antirez,antirez@gmail.com,Fri Jul 20 09:46:18 2018 +0200,1532072778,Top comment clientsCron().,19.0,4.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4120.0,202.0,0.006643518518518518,10931.0,151.5226480836237,5641.0,None,False,,
3d5e2c62e2690cf4a4954ab846bc119c56cad66d 1c95c075966407729648fe676883a75be638824c,68ceb466978ec2babdd246a560d31a597c08dcfb,chendianqiang,c.d_q@163.com,Fri Jul 20 19:20:14 2018 +0800,1532085614,Merge pull request #1 from antirez/unstableupdate,,,,,,,,,,,,,,,Merge,False,,
1c95c075966407729648fe676883a75be638824c,dd760bd5e6bc742932d4177d7cd691c0f195aa70,WuYunlong,xzsyeb@126.com,Sat Jul 21 08:48:51 2018 +0800,1532134131,Consider aof write error as well as rdb in lua script.,14.0,4.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2423.0,184.0,149.2710300925926,14.0,1.0066992235491354,10.0,None,False,,
1c95c075966407729648fe676883a75be638824c,4017a11144cddfc702afd038fec1461eb6e68811,WuYunlong,xzsyeb@126.com,Sat Jul 21 10:00:32 2018 +0800,1532138432,Do not migrate already expired keys.,6.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5660.0,543.0,19.858125,15.0,1.0503572215403014,11.0,None,False,,
1c95c075966407729648fe676883a75be638824c,bb5b8b3a6ff30d2b324a732bf7f4519443b354ac,dsomeshwar,someshwar.dhayalan@gmail.com,Sat Jul 21 23:42:08 2018 +0530,1532196728,removing redundant check,0.0,3.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,818.0,38.0,20.532847222222227,0.0,0.0,0.0,None,False,,
1c95c075966407729648fe676883a75be638824c,780815dd6ed62a0744bdbea90c239c5dcf792e60,Oran Agra,oran@redislabs.com,Sun Jul 22 10:17:35 2018 +0300,1532243855,fix recursion typo in zmalloc_usable,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,445.0,48.0,150.5409837962963,103.0,1.0066427093458692,80.0,Corrective,True,,
1c95c075966407729648fe676883a75be638824c,9674ede85ad5c2e6dcc6d47e78ffc60c92b90504,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sun Jul 22 17:52:09 2018 +0800,1532253129,Streams: skip master fileds only when we are going forward in streamIteratorGetID,8.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2342.0,134.0,2.877789351851852,82.0,1.3474889499318294,81.0,None,False,,
49890c8ee9776f13aaabf7fe76d796a89de6bf1a,993716c351856f30487d6c8d9cc64423183c5f1b,Itamar Haber,itamar@redislabs.com,Sun Jul 22 21:16:00 2018 +0300,1532283360,"Adds Lua overheads to MEMORY STATS, smartens the MEMORY DOCTOR",30.0,4.0,"src/object.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.7085966983474103,16.0,1987.0,522.0,9.29460262345679,71.0,1.0438706618145432,69.0,Feature Addition,False,True,"[""ecc48369ce2f890922e462bfe82e4e26cbb8beba""]"
4ff47a0b9bf4d032891e1956c74a5556e443b7a0,e6ea603ad3ae53d4d33c48ec94699912dcfac716,antirez,antirez@gmail.com,Mon Jul 23 14:13:58 2018 +0200,1532348038,"Dynamic HZ: separate hz from the configured hz.This way we can remember what the user configured HZ is, but change thenactual HZ dynamically if needed in the dynamic HZ featurenimplementation.n",15.0,9.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2364405016961446,16.0,2810.666666666666,630.0,4.677241512345679,10933.0,1.0818624332166962,5644.0,None,False,True,"[""eae8d0582638dcc5ffd686e3165faa05424b3f33""]"
e6ea603ad3ae53d4d33c48ec94699912dcfac716,b65ddfb16a7060a543b523feadeca1234cffd323,antirez,antirez@gmail.com,Mon Jul 23 14:21:04 2018 +0200,1532348464,Dynamic HZ: adapt cron frequency to number of clients.,17.0,5.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,3132.0,405.0,0.0049305555555555535,10935.5,153.11267605633802,5646.0,None,False,,
4ff47a0b9bf4d032891e1956c74a5556e443b7a0 993716c351856f30487d6c8d9cc64423183c5f1b,445a2a2b1b371df9e8f65cc430e872913d1b416b,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 23 18:43:05 2018 +0200,1532364185,Merge pull request #4883 from itamarhaber/lua_scripts-in-info-memoryAdds memory information about the scripts' cache to INFO,,,,,,,,,,,,,,,Merge,False,,
445a2a2b1b371df9e8f65cc430e872913d1b416b,9a375e5408e3539e4ed8abc2f20067c84ef8f13e,antirez,antirez@gmail.com,Mon Jul 23 18:44:38 2018 +0200,1532364278,Change 42 to 1000 as warning level for cached scripts.Related to #4883.n,3.0,3.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1431.0,139.0,0.9365509259259259,10937.0,2.0677475963320893,5647.0,None,False,,
9a375e5408e3539e4ed8abc2f20067c84ef8f13e 780815dd6ed62a0744bdbea90c239c5dcf792e60,ab1d5fe11a9c7f314a04bfc76217f2f72ca8746d,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 24 00:07:59 2018 +0200,1532383679,Merge pull request #5160 from oranagra/fix_zmalloc_usablefix recursion typo in zmalloc_usable,,,,,,,,,,,,,,,Merge,False,,
9a375e5408e3539e4ed8abc2f20067c84ef8f13e,1daee8c74859a9980e9a055fe9d788143293c81e,antirez,antirez@gmail.com,Tue Jul 24 00:18:39 2018 +0200,1532384319,string2ll(): test for NULL pointer in all the cases.,1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,815.0,39.0,2.1711921296296297,10938.0,1.4605764668880703,5648.0,None,False,,
1daee8c74859a9980e9a055fe9d788143293c81e,e8f5d2194020886b39da19fc98b8a77ede516256,antirez,antirez@gmail.com,Tue Jul 24 00:20:20 2018 +0200,1532384420,"string2ll(): remove duplicated check for special case.Related to #5157. The PR author correctly indentified that the check wasnduplicated, but removing the second one introduces a bug that was fixednin the past (hence the duplication). Instead we can remove the firstninstance of the check without issues.n",1.0,6.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,815.0,40.0,0.0011689814814814813,10939.0,856.4455445544554,5649.0,None,False,,
e8f5d2194020886b39da19fc98b8a77ede516256 ab1d5fe11a9c7f314a04bfc76217f2f72ca8746d,1a8d7cd9c28cd32617e0d26d86494d6015cfbd94,antirez,antirez@gmail.com,Tue Jul 24 00:21:49 2018 +0200,1532384509,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1a8d7cd9c28cd32617e0d26d86494d6015cfbd94,b28cbe90e1205ba3c1fe072b09f6407fd5537730,antirez,antirez@gmail.com,Tue Jul 24 10:22:12 2018 +0200,1532420532,Restore string2ll() to original version.See PR #5157.n,7.0,2.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,810.0,41.0,0.417962962962963,10940.0,3.3925564909171464,5650.0,None,False,,
b28cbe90e1205ba3c1fe072b09f6407fd5537730 bb5b8b3a6ff30d2b324a732bf7f4519443b354ac,b9a8e56439ac4b44f82eceb7b03d765a46601c4b,antirez,antirez@gmail.com,Tue Jul 24 10:24:24 2018 +0200,1532420664,Merge branch 'removeRedundantCheck' of https://github.com/dsomeshwar/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1a8d7cd9c28cd32617e0d26d86494d6015cfbd94,d4ae76d1a6cde03c957000f870ff3d1c0e8c3fb9,Oran Agra,oran@redislabs.com,Sun Apr 1 17:09:35 2018 +0300,1522591775,fix slave buffer test suite false positivesit looks like on slow machines we're getting:n[err]: slave buffer are counted correctly in tests/unit/maxmemory.tclnExpected condition '$slave_buf > 2*1024*1024' to be true (16914 > 2*1024*1024)nnthis is a result of the slave waking up too early and eating thenslave buffer before the traffic and the test ends.n,1.0,1.0,"tests/unit/maxmemory.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,236.0,5.0,38.82709490740741,104.0,1.0257552104370606,17.0,Corrective,True,True,"[""c8452ab0059877ac4a055e74e604d00244b06053""]"
b9a8e56439ac4b44f82eceb7b03d765a46601c4b,f4ac796c3476ffa777a95a9795171ac8dc56dc06,antirez,antirez@gmail.com,Tue Jul 24 10:27:20 2018 +0200,1532420840,string2ll(): better commenting.,6.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,815.0,42.0,0.003564814814814815,10941.0,281.5194805194805,5651.0,None,False,,
f4ac796c3476ffa777a95a9795171ac8dc56dc06 d4ae76d1a6cde03c957000f870ff3d1c0e8c3fb9,dfc82fca5442a7318dd713a847ec104b6285c54c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 24 10:28:48 2018 +0200,1532420928,Merge pull request #5163 from oranagra/fix_slave_buffer_testfix slave buffer test suite false positives,,,,,,,,,,,,,,,Merge,False,,
dfc82fca5442a7318dd713a847ec104b6285c54c 9674ede85ad5c2e6dcc6d47e78ffc60c92b90504,41a886605ae0bc42c92ffe6dcd7740879318cee6,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 24 10:59:55 2018 +0200,1532422795,Merge pull request #5161 from soloestoy/optimize-stream-iteratorStreams: skip master fileds only when we are going forward in streamIteratorGetID,,,,,,,,,,,,,,,Merge,False,,
41a886605ae0bc42c92ffe6dcd7740879318cee6,8513f31be06137dd4fe8ad0f7ec5cb84b0503cb5,antirez,antirez@gmail.com,Tue Jul 24 11:07:27 2018 +0200,1532423247,Streams: refactoring of next entry seek in the iterator.After #5161 the code could be made a bit more obvious for newcomers.n,11.0,7.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2345.0,135.0,1.9689583333333327,10942.0,1.507882763728706,5652.0,None,False,,
8513f31be06137dd4fe8ad0f7ec5cb84b0503cb5 4017a11144cddfc702afd038fec1461eb6e68811,e52a036ac636b182fff37fdb1c7177fe48d08f03,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 24 17:24:37 2018 +0200,1532445877,Merge pull request #5154 from trevor211/optimizeMigrateDo not migrate already expired keys.,,,,,,,,,,,,,,,Merge,False,,
e52a036ac636b182fff37fdb1c7177fe48d08f03,53d46fa712619af7bcd7883aabe279344336be11,antirez,antirez@gmail.com,Tue Jul 24 17:27:43 2018 +0200,1532446063,Make changes of PR #5154 hopefully simpler.,10.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5664.0,544.0,3.560543981481481,10943.0,1.2808559605501395,5653.0,None,False,,
53d46fa712619af7bcd7883aabe279344336be11,0bdeb861f48b4bed269e80d9211c0ce854465a4a,antirez,antirez@gmail.com,Tue Jul 24 17:31:39 2018 +0200,1532446299,Example the magic +1 in migrateCommand().Related to #5154.n,4.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5669.0,545.0,0.002731481481481481,10944.0,367.1016949152543,5654.0,None,False,,
9fbd49bbaf390c1713353fcb462ef436e2d52547,eb0e5fe4e3b31c2b6cfebbe95324ce488211d372,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 25 00:06:27 2018 +0800,1532448387,Streams: fix xdel memory leak,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2349.0,136.0,0.29097222222222224,83.0,4.436754176610978,82.0,None,False,,
0bdeb861f48b4bed269e80d9211c0ce854465a4a eb0e5fe4e3b31c2b6cfebbe95324ce488211d372,73cbc33a0ae4b01ef026dc6975492e1297808b5e,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 24 18:57:05 2018 +0200,1532451425,Merge pull request #5133 from soloestoy/fix-xdel-memory-leakStreams: fix xdel memory leak,,,,,,,,,,,,,,,Merge,False,,
73cbc33a0ae4b01ef026dc6975492e1297808b5e,dd071ff6c95cbb7427e5f0c3a6ca84e3c672d87a,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 25 18:13:34 2018 +0800,1532513614,"optimize flushdb, avoid useless loops",5.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1527.0,207.0,24.200509259259267,84.0,1.0413214444905696,83.0,None,False,,
73cbc33a0ae4b01ef026dc6975492e1297808b5e dd071ff6c95cbb7427e5f0c3a6ca84e3c672d87a,fe408ad23f69f2c9a416fcc8cebe8d98f15574b4,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 25 16:30:11 2018 +0200,1532529011,"Merge pull request #4852 from soloestoy/optimize-flushalloptimize flushdb, avoid useless loops",,,,,,,,,,,,,,,Merge,False,,
fe408ad23f69f2c9a416fcc8cebe8d98f15574b4,1c2352f0dd02753a3476871cec0dbb6a4b032064,antirez,antirez@gmail.com,Wed Jul 25 16:32:52 2018 +0200,1532529172,Make emptyDb() change introduced in #4852 simpler to read.,8.0,3.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1530.0,208.0,0.18006944444444445,10945.0,6.5534130350944855,5655.0,None,False,,
1c2352f0dd02753a3476871cec0dbb6a4b032064,fd174cca23ede115ff71b379f10b407cfb54d3ad,antirez,antirez@gmail.com,Wed Jul 25 16:34:46 2018 +0200,1532529286,Remove useless conditional from emptyDb().Related to #4852.n,0.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1535.0,209.0,0.0013194444444444445,10946.0,758.8947368421052,5656.0,None,False,,
1a8d7cd9c28cd32617e0d26d86494d6015cfbd94,4a30adde31dec0d54c38eb88a5af64a1466f6744,Oran Agra,oran@redislabs.com,Sun Jul 29 10:08:47 2018 +0300,1532848127,"add DEBUG LOG, to to assist test suite debugging",4.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1253.0,154.0,26.596678240740733,105.0,1.0375986802166972,81.0,Corrective,True,,
fd174cca23ede115ff71b379f10b407cfb54d3ad b65ddfb16a7060a543b523feadeca1234cffd323,4e9c30a6cafad40b6e4051d30ebcd6a165965440,antirez,antirez@gmail.com,Mon Jul 30 13:31:23 2018 +0200,1532950283,Merge branch 'dynamic-hz' into unstable,,,,,,,,,,,,,,,Merge,False,,
4e9c30a6cafad40b6e4051d30ebcd6a165965440,c426d85c4c877a21c959b306b81d8df46259cbd6,antirez,antirez@gmail.com,Mon Jul 30 13:37:30 2018 +0200,1532950650,Control dynamic HZ via server configuration.,13.0,6.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4854607607459134,16.0,3138.0,407.0,6.9697453703703705,10947.5,1.1076079483747543,5658.0,None,False,,
c426d85c4c877a21c959b306b81d8df46259cbd6,be28050ac02b4154ba937a6487c0666d4d4de856,antirez,antirez@gmail.com,Mon Jul 30 13:44:52 2018 +0200,1532951092,Make dynamic hz actually configurable.,9.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2174.0,228.0,6.979791666666666,10949.0,1.1432707518729666,5659.0,None,False,,
be28050ac02b4154ba937a6487c0666d4d4de856,15be174cf1c601793477f0d5ec71da1646fe09e5,antirez,antirez@gmail.com,Mon Jul 30 13:50:15 2018 +0200,1532951415,Document dynamic-hz in the example redis.conf.,16.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1337.0,187.0,29.267650462962962,10950.0,1.034167416385728,1399.0,Non Functional,False,,
15be174cf1c601793477f0d5ec71da1646fe09e5,acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95,Guy Korland,gkorland@gmail.com,Mon Jul 30 16:18:56 2018 +0300,1532956736,Few typo fixes,13.0,13.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4703.0,167.0,158.79192129629632,0.0,0.0,0.0,Corrective,True,,
fd174cca23ede115ff71b379f10b407cfb54d3ad,d6f5ec6f098f7f6b741bc3face1608c25b233caa,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon Jul 30 21:32:07 2018 +0800,1532957527,"Streams: add mmid_supp argument in streamParseIDOrReply().If 'mmid_supp' is set to 0, - and + will bentreated as an invalid ID.n",6.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2350.0,137.0,5.892824074074074,31.0,1.169697921986094,31.0,None,False,,
d6f5ec6f098f7f6b741bc3face1608c25b233caa,6491717c88143507567420398131eaa8933f3ec9,dejun.xdj,dejun.xdj@alibaba-inc.com,Mon Jul 30 21:33:01 2018 +0800,1532957581,Streams: rearrange the usage of '-' and '+' IDs in stream commands.,13.0,13.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2354.0,138.0,0.000625,32.0,1601.0,32.0,None,False,,
15be174cf1c601793477f0d5ec71da1646fe09e5,3c19ae941d17dee7f89c282946bc379ba2106b09,antirez,antirez@gmail.com,Mon Jul 30 17:42:30 2018 +0200,1532965350,Add year in log.User: is there a reason why redis server logs  are missing the year innthe date time?nnMe: I guess I did not imagine it would be stable enough to run fornseveral years.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4154.0,206.0,0.1701388888888889,10951.0,6.877551020408162,5660.0,Feature Addition,False,,
3c19ae941d17dee7f89c282946bc379ba2106b09 acaa18f1d1b3d0b74fad4c6bd6a2b034da6cea95,1465755e384e6cf3fed9a39a4af839e84aafe292,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 30 17:59:12 2018 +0200,1532966352,Merge pull request #5183 from gkorland/patch-1Few typo fixes,,,,,,,,,,,,,,,Merge,False,,
1465755e384e6cf3fed9a39a4af839e84aafe292,1e394b73b799837f23a4f2a9d15366e1cd23fcf9,Pavel Rochnyack,pavel2000@ngs.ru,Wed Jul 25 21:50:24 2018 +0700,1532530224,INFO CPU: higher precision of reported valuesCloses: #5033n,8.0,8.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4154.0,207.0,-5.036180555555553,0.0,0.0,0.0,None,False,,
1e394b73b799837f23a4f2a9d15366e1cd23fcf9,4ebb4d54c69f24360626bd9b458e8678c9c01de8,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 30 18:03:15 2018 +0200,1532966595,Merge pull request #5168 from rpv-tomsk/issue-5033INFO CPU: higher precision of reported valuesn,,,,,,,,,,,,,,,Non Functional,False,,
4ebb4d54c69f24360626bd9b458e8678c9c01de8 dd760bd5e6bc742932d4177d7cd691c0f195aa70,ac3c012a7f92e15fd996867ee4b5bd9f00487f59,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 30 18:10:06 2018 +0200,1532967006,Merge pull request #5153 from trevor211/fixLuaScriptConsider aof write error as well as rdb in lua script.,,,,,,,,,,,,,,,Merge,False,,
4a30adde31dec0d54c38eb88a5af64a1466f6744,782928769187c977252c9f698535d824ac5409de,Oran Agra,oran@redislabs.com,Mon Jul 30 16:43:21 2018 +0300,1532958201,test suite conveniency improvements* allowing --single to be repeatedn* adding --only so that only a specific test inside a unit can be runn* adding --skiptill useful to resume a test that crashed passed the problematic unit.n  useful together with --clients 1n* adding --skipfile to use a file containing list of tests names to skipn* printing the names of the tests that are skiped by skipfile or denytagsn* adding --config to add config file options from command linen,79.0,3.0,"runtest,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.956917887127128,16.0,242.0,147.0,955.9097415123456,107.0,1.0003991599927426,19.0,Corrective,True,,
fd174cca23ede115ff71b379f10b407cfb54d3ad,fddeeae724bec1a8e1a3dbb2f18e608b79c2ddfc,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Jul 31 12:07:57 2018 +0800,1533010077,refactor dbOverwrite to make lazyfree work,27.0,12.0,"src/db.c,CAS_DELIMITER,src/lazyfree.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",4.0,1.0,1.0,1.6761740892432826,16.0,1191.75,487.0,68.4917332175926,86.5,1.0597847363536421,87.0,None,False,True,"[""b0392e75ec37ffae0cb2277723168d8179861bef""]"
fd174cca23ede115ff71b379f10b407cfb54d3ad,35ca6700600f2b1991e71e6196ec03ba4bad997f,shenlongxing,shenlongxing2012@gmail.com,Tue Jul 31 16:01:44 2018 +0800,1533024104,Fix cluster-announce-ip memory leak,3.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5673.0,546.0,6.68755787037037,11.0,1.1495314163082702,9.0,Corrective,True,,
ac3c012a7f92e15fd996867ee4b5bd9f00487f59,5401fe7fb948f6071d5f804fc3c1fbac77286dd5,antirez,antirez@gmail.com,Tue Jul 31 13:09:38 2018 +0200,1533035378,Introduce writeCommandsDeniedByDiskError().,24.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7382848661434506,16.0,3142.0,412.0,3.069762731481481,10952.5,1.1669579944575723,5662.0,None,False,True,"[""11dd3f4b034566259b2f81484619975928963a89""]"
5401fe7fb948f6071d5f804fc3c1fbac77286dd5,0e49938b684ec3d294457391e746b42a539c88cb,antirez,antirez@gmail.com,Tue Jul 31 13:10:37 2018 +0200,1533035437,Better top comment for writeCommandsDeniedByDiskError().,8.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4173.0,209.0,0.0006828703703703704,10954.0,1465.4067796610173,5663.0,Perfective,False,,
0e49938b684ec3d294457391e746b42a539c88cb,11dd3f4b034566259b2f81484619975928963a89,antirez,antirez@gmail.com,Tue Jul 31 13:14:24 2018 +0200,1533035664,Fix writeCommandsDeniedByDiskError() inverted return value.,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4180.0,210.0,0.002627314814814815,10955.0,381.6167400881057,5664.0,Corrective,True,,
11dd3f4b034566259b2f81484619975928963a89,db693be00d4debc474cb52e471a9a4c91e6f263e,antirez,antirez@gmail.com,Tue Jul 31 13:16:43 2018 +0200,1533035803,Refactoring: replace low-level checks with writeCommandsDeniedByDiskError().,6.0,13.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.9980008838722996,16.0,3306.5,397.0,4.355219907407407,10956.5,1.1148153694948328,5666.0,None,False,,
db693be00d4debc474cb52e471a9a4c91e6f263e fddeeae724bec1a8e1a3dbb2f18e608b79c2ddfc,92b39a0abf8ba22496038066797842c095682fab,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 31 16:40:35 2018 +0200,1533048035,Merge pull request #5189 from soloestoy/refactor-dbOverwriterefactor dbOverwrite to make lazyfree work,,,,,,,,,,,,,,,Merge,False,,
92b39a0abf8ba22496038066797842c095682fab,b0392e75ec37ffae0cb2277723168d8179861bef,antirez,antirez@gmail.com,Tue Jul 31 16:41:33 2018 +0200,1533048093,Tranfer -> transfer typo fixed.,1.0,1.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,961.0,61.0,0.44,10958.0,3.272727272727273,5667.0,Corrective,True,,
b0392e75ec37ffae0cb2277723168d8179861bef 35ca6700600f2b1991e71e6196ec03ba4bad997f,093adb7ef9719ea70d7df1af6aec31a5a2af46c7,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 31 17:11:16 2018 +0200,1533049876,Merge pull request #5191 from shenlongxing/fix-memory-leakFix cluster-announce-ip memory leak,,,,,,,,,,,,,,,Merge,False,,
093adb7ef9719ea70d7df1af6aec31a5a2af46c7,e245ed9a44583c3772445e99ffa2b14407199287,antirez,antirez@gmail.com,Tue Jul 31 17:13:03 2018 +0200,1533049983,Cluster cron announce IP minor refactoring.,6.0,3.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5674.0,547.0,0.2995254629629629,10959.0,4.3386143204915175,5668.0,None,False,,
e245ed9a44583c3772445e99ffa2b14407199287 782928769187c977252c9f698535d824ac5409de,7b41701eb83b13e5cc2dffef8e06b68df49ea391,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 31 17:20:09 2018 +0200,1533050409,Merge pull request #5187 from oranagra/testsuite_improvementsTestsuite improvements,,,,,,,,,,,,,,,Merge,False,,
7b41701eb83b13e5cc2dffef8e06b68df49ea391,7a30be123794ffb339a3a73e094d255a065b6a60,antirez,antirez@gmail.com,Tue Jul 31 17:28:30 2018 +0200,1533050910,Minor improvements to PR #5187.,13.0,6.0,"tests/integration/psync2.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.9980008838722996,16.0,441.5,117.0,121.99185185185186,10960.5,1.0041076869413974,785.0,None,False,,
7a30be123794ffb339a3a73e094d255a065b6a60 6491717c88143507567420398131eaa8933f3ec9,187fa786373c79e17ff95e1ad76d8d51b91b55e1,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 31 17:58:13 2018 +0200,1533052693,Merge pull request #5184 from 0xtonyxia/streams-id-optStreams: rearrange the usage of '-' and '+' IDs in stream commands.,,,,,,,,,,,,,,,Merge,False,,
187fa786373c79e17ff95e1ad76d8d51b91b55e1,2f2987ffc5c3cbf8eab307782a07f20492a3d439,antirez,antirez@gmail.com,Tue Jul 31 18:08:52 2018 +0200,1533053332,Streams IDs parsing refactoring.Related to #5184.n,32.0,17.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2354.0,139.0,1.1082291666666666,10962.0,1.9023404455305948,5669.0,None,False,True,"[""48d8b3d8ac8de4db033d8836986065b8a41e01dc""]"
2f2987ffc5c3cbf8eab307782a07f20492a3d439,20c6a7fe2c134ad21bfc4ce50e548c3a055e93d0,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Jul 17 23:57:42 2018 +0800,1531843062,"Streams: propagate original MAXLEN argument in XADD contextIf we rewrite the MAXLEN argument as zero when no trimmingnwas performed, date between master and slave and aof willnbe inconsistent, because `xtrim maxlen 0` means delete allnentries in stream.n",3.0,12.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2369.0,140.0,-14.00775462962963,89.0,0.9286109711056212,88.0,None,False,,
20c6a7fe2c134ad21bfc4ce50e548c3a055e93d0,da6b7516f187b85e7f9a8a2390f02e9c1dc2c7aa,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 18 00:12:24 2018 +0800,1531843944,Streams: XTRIM  will return an error if MAXLEN with a count < 0,6.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2360.0,141.0,0.010208333333333331,90.0,98.95918367346935,89.0,None,False,,
da6b7516f187b85e7f9a8a2390f02e9c1dc2c7aa,14d6318b3225c010f28d26c5563c8140c86c1292,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 18 00:24:50 2018 +0800,1531844690,Streams: reset approx_maxlen in every maxlen loop,2.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2365.0,142.0,0.00863425925925926,91.0,116.81769436997318,90.0,None,False,,
14d6318b3225c010f28d26c5563c8140c86c1292,9042d1c24966bf229b3fa8d94ada42ebebed7adf,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 18 01:58:14 2018 +0800,1531850294,"Streams: propagate specified MAXLEN instead of approximatedSlaves and rebooting redis may have different radix tree struct,nby different stream* config options. So propagating approximatednMAXLEN to AOF/slaves may lead to date inconsistency.n",35.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2367.0,143.0,0.0648611111111111,92.0,16.41755888650964,91.0,None,False,,
9042d1c24966bf229b3fa8d94ada42ebebed7adf,60acac4cd02913385c461465d4cca06d6c015ba7,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 18 16:55:25 2018 +0800,1531904125,Streams: add test cases for XADD/XTRIM maxlen,46.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,319.0,14.0,4.706342592592593,93.0,1.2124792193356089,0.0,None,False,,
2f2987ffc5c3cbf8eab307782a07f20492a3d439,6dd0d6f7dd1fc486ede902c43d299640ce08cc2c,antirez,antirez@gmail.com,Wed Aug 1 18:27:56 2018 +0200,1533140876,zsetAdd() refactored adding zslUpdateScore().,18.0,7.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3254.0,142.0,31.460486111111113,10963.0,1.0317859042758664,5670.0,Feature Addition,False,,
6dd0d6f7dd1fc486ede902c43d299640ce08cc2c,0b800c4332681400b1a0c59068b3b542da23b381,antirez,antirez@gmail.com,Wed Aug 1 18:50:31 2018 +0200,1533142231,Optimize zslUpdateScore() as asked in #5179.,44.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3265.0,143.0,0.015682870370370368,10964.0,64.76383763837637,5671.0,None,False,True,"[""2f282aee0b8e500697b627254b170f21d93dd4a8""]"
0b800c4332681400b1a0c59068b3b542da23b381,e3e94ec35cce5acf80d429241b4bbc3fedfa8276,antirez,antirez@gmail.com,Wed Aug 1 18:50:49 2018 +0200,1533142249,Remove old commented zslUpdateScore() from source.,0.0,13.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3309.0,144.0,0.00020833333333333327,10965.0,4801.0,5672.0,None,False,,
e3e94ec35cce5acf80d429241b4bbc3fedfa8276,12ff0c0d79ce673a5e83c8cbff1cdbf773baf800,antirez,antirez@gmail.com,Wed Aug 1 18:53:06 2018 +0200,1533142386,Explain what's the point of zslUpdateScore() in top comment.,5.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3296.0,145.0,0.001585648148148148,10966.0,631.6569343065694,5673.0,None,False,,
12ff0c0d79ce673a5e83c8cbff1cdbf773baf800,29226a3919ef1f74bc161b31972193ce30bc0ed6,antirez,antirez@gmail.com,Wed Aug 1 18:54:15 2018 +0200,1533142455,More commenting of zslUpdateScore().,2.0,0.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3301.0,146.0,0.0007986111111111113,10967.0,1253.1739130434785,5674.0,None,False,,
29226a3919ef1f74bc161b31972193ce30bc0ed6,2f282aee0b8e500697b627254b170f21d93dd4a8,antirez,antirez@gmail.com,Wed Aug 1 19:01:40 2018 +0200,1533142900,"Fix zslUpdateScore() edge case.When the element new score is the same of prev/next node, thenlexicographical order kicks in, so we can safely update the node innplace only when the new score is strictly between the adjacent nodesnbut never equal to one of them.nnTechnically speaking we could do extra checks to make sure that even if thenscore is the same as one of the adjacent nodes, we can still update onnplace, but this rarely happens, so probably not a good deal to make itnmore complex.nnRelated to #5179.n",2.0,2.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3303.0,147.0,0.005150462962962964,10968.0,195.1573033707865,5675.0,Corrective,True,,
2f282aee0b8e500697b627254b170f21d93dd4a8,d506334b678ea1f0ad2f28b1144365ac7751999a,antirez,antirez@gmail.com,Thu Aug 2 14:14:39 2018 +0200,1533212079,Test: new sorted set skiplist order consistency.This should be able to find new bugs and regressions about the newnsorted set update function when ZADD is used to update an elementnalready existing.nnThe test is able to find the bug fixed at 2f282aee immediately.n,26.0,0.0,"tests/unit/type/zset.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1212.0,43.0,32.28459490740741,10969.0,1.030974525245493,786.0,Preventative,False,,
d506334b678ea1f0ad2f28b1144365ac7751999a,26897c03e2b9a15c5a574c41763aaae7b9c7d66e,antirez,antirez@gmail.com,Thu Aug 2 18:49:49 2018 +0200,1533228589,Test suite: new --stop option.It pauses the test execution once the first failure is found.n,13.0,4.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,641.0,112.0,2.056469907407408,10970.0,1.4862701838709134,787.0,Preventative,False,,
26897c03e2b9a15c5a574c41763aaae7b9c7d66e,3d56311f0ca077fc4661e132508ceca30e74de74,antirez,antirez@gmail.com,Thu Aug 2 19:07:17 2018 +0200,1533229637,Test suite: add --loop option.Very useful with --stop in order to catch heisenbugs.n,12.0,5.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,650.0,113.0,0.012129629629629627,10971.0,83.44274809160305,788.0,Preventative,False,,
3d56311f0ca077fc4661e132508ceca30e74de74,0ce8323c0d6908edd126c011ad2d44a72a022c48,antirez,antirez@gmail.com,Fri Aug 3 12:46:04 2018 +0200,1533293164,Fix AOF comment to report the current behavior.Realted to #5201.n,3.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1737.0,178.0,162.68576388888889,10972.0,1.0061468193411378,5676.0,Corrective,True,,
2f2987ffc5c3cbf8eab307782a07f20492a3d439,fe56c6740520b6fef2646d757896861c49faee0a,shenlongxing,shenlongxing2012@gmail.com,Fri Aug 3 19:01:15 2018 +0800,1533294075,Fix stream command paras,7.0,7.0,"src/server.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,16.0,3286.5,356.0,9.84984375,12.5,1.1926466318021889,11.0,Corrective,True,,
0ce8323c0d6908edd126c011ad2d44a72a022c48 fe56c6740520b6fef2646d757896861c49faee0a,7b5e7f3ed0978d695cc1fc8e24f16cf0f5c3f754,Salvatore Sanfilippo,antirez@gmail.com,Fri Aug 3 13:39:32 2018 +0200,1533296372,Merge pull request #5151 from shenlongxing/fix-streamFix stream command paras,,,,,,,,,,,,,,,Merge,False,,
7b5e7f3ed0978d695cc1fc8e24f16cf0f5c3f754 de5ca516aed4065e7b7e05d692996cfc028b0f32,39c70e728b5af0c50989ffbc05e568099f3e081b,Salvatore Sanfilippo,antirez@gmail.com,Fri Aug 3 13:45:27 2018 +0200,1533296727,Merge pull request #5146 from 0xtonyxia/fix-xclaim-id-parseStreams: ID of xclaim command should start from the sixth argument.,,,,,,,,,,,,,,,Merge,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,eb87da6127c605be06073903a0bbaff792b90d70,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Aug 2 14:59:28 2018 +0800,1533193168,AOF: discard if we lost EXEC when loading aof,14.0,3.0,"src/aof.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER",2.0,1.0,1.0,0.5225593745369408,16.0,1038.5,205.0,192.376875,94.5,0.5692822518019579,93.0,None,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,a3a146052509b2d3a58e36d3511ef238153b6ac3,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Sat Aug 4 01:06:53 2018 +0800,1533316013,Streams: update listpack with new pointer in XDEL,3.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2396.0,145.0,0.25391203703703696,96.0,4.938371775002278,94.0,None,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,bd01334da1d27367ad9887f159f2860f7e8ba5ac,Jeffrey Lovitz,jlovitz@emcien.com,Sun Aug 12 12:47:01 2018 -0400,1534092421,CLI Help text loop verifies arg count,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10455.0,291.0,46.05405092592594,0.0,0.0,0.0,None,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,f4b27ae22272b9a50e970aa308ba57c3c3dbd985,Oran Agra,oran@redislabs.com,Mon Aug 13 17:36:54 2018 +0300,1534171014,script cache memory in INFO and MEMORY includes both script code and overheads,3.0,3.0,"src/object.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,2804.0,353.0,15.530526620370367,109.5,1.0400078507370971,83.0,None,False,True,"[""73a78adf13ca37ba101a66a4f3d13e2a129f636c""]"
39c70e728b5af0c50989ffbc05e568099f3e081b,17c5f17686354b28c715b6f16c9c4e8eb2239df4,Oran Agra,oran@redislabs.com,Mon Aug 13 17:43:29 2018 +0300,1534171409,Add log when server dies of SIGTERM during loadingthis is very confusing to see the server disappears as if it got SIGKILL when it was not the case.n,1.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4177.0,214.0,0.00457175925925926,111.0,219.7341772151899,84.0,Feature Addition,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,14c4ddb5a62a52e30ee169d36b516a78a410a5b4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 00:43:36 2018 +0800,1534178616,"pipeline: do not sdsrange querybuf unless all commands processedThis is an optimization for processing pipeline, we discussed anproblem in issue #5229: clients may be paused if we apply `CLIENTnPAUSE` command, and then querybuf may grow too large, the cost ofnmemmove in sdsrange after parsing a completed command will benhorrible. The optimization is that parsing all commands in queyrbufn, after that we can just call sdsrange only once.n",48.0,40.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.08970338978684995,16.0,2148.5,511.0,19.63766203703704,97.5,1.0319293597881851,96.0,None,False,,
14c4ddb5a62a52e30ee169d36b516a78a410a5b4,b89302c462bfa410977ed99e1e6fdc64a0fbd031,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 00:57:22 2018 +0800,1534179442,adjust qbuf to 26 in test case for client list,1.0,1.0,"tests/unit/introspection.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,60.0,9.0,1097.4590856481482,99.0,1.0009111957002108,1.0,Preventative,False,,
b89302c462bfa410977ed99e1e6fdc64a0fbd031,e623bd22bab45d8ce20d82bb2de5e8ed82f9e7bf,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 13:55:30 2018 +0800,1534226130,networking: just return C_OK if multibulk processing saw a <= 0 length.,2.0,5.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2169.0,307.0,0.5499305555555556,100.0,2.8184114155827755,97.0,None,False,,
e623bd22bab45d8ce20d82bb2de5e8ed82f9e7bf,ef2a95c46125a5e5402a2ee1e433f78959596d0c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 14:50:37 2018 +0800,1534229437,networking: just move qb_pos instead of sdsrange in processInlineBuffer,2.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2166.0,308.0,0.03827546296296296,101.0,27.126398548533416,98.0,None,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,8a1219d93b3a9e3349c6f6726bf9923fcf2a40e5,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 20:58:58 2018 +0800,1534251538,block: rewrite BRPOPLPUSH as RPOPLPUSH to propagate,5.0,1.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272448,16.0,2362.6666666666665,499.0,48.96004243827161,103.0,1.5498624287988696,101.0,None,False,True,"[""fc9b4e79589c049276ff4c7cf536b49d700f8cee""]"
8a1219d93b3a9e3349c6f6726bf9923fcf2a40e5,9a65f9cd3e09468c0178782bfac0fe1c8f445a20,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Aug 14 20:59:32 2018 +0800,1534251572,block: format code,2.0,2.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,594.0,44.0,31.247534722222234,105.0,1.0320025246436109,102.0,None,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b,c8452ab0059877ac4a055e74e604d00244b06053,Oran Agra,oran@redislabs.com,Tue Aug 21 11:46:07 2018 +0300,1534841167,"Fix unstable tests on slow machines.Few tests had borderline thresholds that were adjusted.nnThe slave buffers test had two issues, preventing the slave buffer from growing:n1) the slave didn't necessarily go to sleep on time, or woke up too early,n   now using SIGSTOP to make sure it goes to sleep exactly when we want.n2) the master disconnected the slave on timeoutn",23.0,17.0,"tests/unit/dump.tcl,CAS_DELIMITER,tests/unit/maxmemory.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER",3.0,1.0,1.0,0.7475846798245741,16.0,272.0,34.0,75.65911651234569,113.0,1.0097145337101592,22.0,Corrective,True,True,"[""ba809f26d4bd81d23fa929d0c018f235ab298564""]"
39c70e728b5af0c50989ffbc05e568099f3e081b,1ab64d405e66c8fecd0ff7bd65d22c46f2b1ad0e,dejun.xdj,dejun.xdj@alibaba-inc.com,Wed Aug 22 18:07:02 2018 +0800,1534932422,Revise the comments of latency command.,2.0,1.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,624.0,37.0,40.009108796296296,33.0,1.0249943082984283,33.0,None,False,,
ef2a95c46125a5e5402a2ee1e433f78959596d0c,f2ad89a314a0be2ea50a598339ee903ec3f64b65,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Aug 23 12:21:23 2018 +0800,1534998083,"networking: make setProtocolError simple and clearFunction setProtocolError just records proctocol errorndetails in server log, set client as CLIENT_CLOSE_AFTER_REPLY.nIt doesn't care about querybuf sdsrange, because wenwill do it after procotol parsing.n",11.0,13.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2165.0,309.0,8.896365740740743,106.0,1.112405450623564,103.0,None,False,,
eaeba1b2c85812c6b16a8ef50bf889d72804db09 39c70e728b5af0c50989ffbc05e568099f3e081b,f63e81c202cac6566bbe06cc576ff3aa8e1863a4,Chris Lamb,chris@chris-lamb.co.uk,Sat Aug 25 21:49:29 2018 +0200,1535226569,Merge branch 'unstable' into config-set-maxmemory-grammar,,,,,,,,,,,,,,,Merge,False,,
39c70e728b5af0c50989ffbc05e568099f3e081b 3447062d5e02cf14fd3d7765fa39a65de15f8c15,8d519a85f42d18aa69efed1a1f6d97cdb12fb6eb,Salvatore Sanfilippo,antirez@gmail.com,Sun Aug 26 11:19:51 2018 +0200,1535275191,Merge pull request #2292 from lamby/sentinel-conf-defaultsMake some defaults explicit in the sentinel.conf for package maintainers,,,,,,,,,,,,,,,Merge,False,,
8d519a85f42d18aa69efed1a1f6d97cdb12fb6eb f63e81c202cac6566bbe06cc576ff3aa8e1863a4,590717782fad214921361917ff511b0c27617c50,Salvatore Sanfilippo,antirez@gmail.com,Sun Aug 26 11:23:41 2018 +0200,1535275421,Merge pull request #2358 from lamby/config-set-maxmemory-grammarTidy grammar in CONFIG SET maxmemory warning.,,,,,,,,,,,,,,,Merge,False,,
590717782fad214921361917ff511b0c27617c50 82ae4f30ed8d2c55c27a465429adee572654bdb2,46d89a9abb5550b8b425c179e3c92d10e64f41fe,Salvatore Sanfilippo,antirez@gmail.com,Sun Aug 26 11:25:44 2018 +0200,1535275544,Merge pull request #2992 from lamby/source-date-epochUse SOURCE_DATE_EPOCH over unreproducible uname + date calls.,,,,,,,,,,,,,,,Merge,False,,
46d89a9abb5550b8b425c179e3c92d10e64f41fe,132be8aed5c7669f3061d2861eb2570c9f41dc19,Chris Lamb,chris@chris-lamb.co.uk,Sun Aug 26 14:45:39 2018 +0200,1535287539,Correct did not received -> did not receive typos/grammar.,10.0,10.0,"src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,tests/sentinel/tests/00-base.tcl,CAS_DELIMITER,tests/sentinel/tests/01-conf-update.tcl,CAS_DELIMITER,tests/sentinel/tests/02-slaves-reconf.tcl,CAS_DELIMITER,tests/sentinel/tests/05-manual.tcl,CAS_DELIMITER",6.0,2.0,2.0,2.446439344671015,16.0,1203.5,439.0,924.4638580246913,11.5,1.00863460026855,4.0,None,False,,
46d89a9abb5550b8b425c179e3c92d10e64f41fe f2ad89a314a0be2ea50a598339ee903ec3f64b65,80e16956529ba0999cfe30a171693c8f3d3a4098,Salvatore Sanfilippo,antirez@gmail.com,Sun Aug 26 16:30:49 2018 +0200,1535293849,Merge pull request #5244 from soloestoy/optimize-pipelinepipeline: do not sdsrange querybuf unless all commands processed,,,,,,,,,,,,,,,Merge,False,,
80e16956529ba0999cfe30a171693c8f3d3a4098 9a65f9cd3e09468c0178782bfac0fe1c8f445a20,19880ab85166165e65a9e2713d244bb31c7573f5,Salvatore Sanfilippo,antirez@gmail.com,Sun Aug 26 16:31:24 2018 +0200,1535293884,Merge pull request #5248 from soloestoy/rewrite-brpoplpushrewrite BRPOPLPUSH as RPOPLPUSH to propagate,,,,,,,,,,,,,,,Merge,False,,
19880ab85166165e65a9e2713d244bb31c7573f5,e711e6f614c71187ca39b5b171f063a2025de1a0,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Aug 27 12:07:24 2018 +0800,1535342844,remove duplicate bind in sentinel.conf,0.0,10.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,249.0,24.0,62.51554398148148,107.0,1.0159960217301511,1.0,None,False,,
19880ab85166165e65a9e2713d244bb31c7573f5,c241f5160752753c271366547e2ada8617f1e684,antirez,antirez@gmail.com,Mon Aug 27 12:14:10 2018 +0200,1535364850,Fix build errors caused by #2358.,0.0,11.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2183.0,229.0,27.937013888888888,10973.0,1.0357948062730398,5677.0,Corrective,True,,
c241f5160752753c271366547e2ada8617f1e684,66b5afdaa4bf53b66e4d09fe6c3ebbfff283d1c4,antirez,antirez@gmail.com,Mon Aug 27 12:17:14 2018 +0200,1535365034,Re-apply rebased #2358.,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2172.0,230.0,0.0021296296296296298,10974.0,470.5652173913043,5678.0,None,False,,
66b5afdaa4bf53b66e4d09fe6c3ebbfff283d1c4,abf52c7cf412e2b7fd1235cb85248d23db295b48,antirez,antirez@gmail.com,Mon Aug 27 11:57:44 2018 +0200,1535363864,Better variable meaning in processCommand().,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4179.0,216.0,12.874143518518519,10975.0,1.0776750700783764,5679.0,Perfective,False,,
abf52c7cf412e2b7fd1235cb85248d23db295b48,067647a78315cfa81bf489128afd6f4ae1388603,antirez,antirez@gmail.com,Mon Aug 27 12:09:08 2018 +0200,1535364548,"Introduce repl_slave_ignore_maxmemory flag internally.Note: this breaks backward compatibility with Redis 4, since now slavesnby default are exact copies of masters and do not try to evict keysnindependently.n",7.0,0.0,"src/evict.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3787834934861758,16.0,2311.6666666666665,447.0,50.28756172839507,10977.0,1.0070412496227847,5682.0,None,False,,
067647a78315cfa81bf489128afd6f4ae1388603,e245a2046af680a18f74cb76c2a23f5711149501,antirez,antirez@gmail.com,Mon Aug 27 12:27:17 2018 +0200,1535365637,Make slave-ignore-maxmemory configurable.,9.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2172.0,231.0,0.006979166666666666,10979.0,144.28358208955225,5683.0,None,False,,
e245a2046af680a18f74cb76c2a23f5711149501,5941022b524bd8b7017af3811083ed42a85de000,antirez,antirez@gmail.com,Mon Aug 27 12:34:29 2018 +0200,1535366069,Document slave-ignore-maxmemory in redis.conf.,20.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1353.0,188.0,27.947384259259266,10980.0,1.035781523978177,1400.0,Non Functional,False,,
5941022b524bd8b7017af3811083ed42a85de000 c8452ab0059877ac4a055e74e604d00244b06053,5b4bec9d336655889641b134791dfdd2adc864cf,Salvatore Sanfilippo,antirez@gmail.com,Mon Aug 27 13:19:31 2018 +0200,1535368771,Merge pull request #5265 from oranagra/stabilize_testsFix unstable tests on slow machines.,,,,,,,,,,,,,,,Merge,False,,
8ac7af1c5d4d06d6c165e35d67a3a6a70e5d98c3,32844178ac711535903eb4ecbd6d2774200ea951,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Apr 10 20:41:21 2018 +0800,1523364081,"some commands' flags should be set correctly, issue #4834",14.0,14.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4180.0,218.0,-138.89429398148147,108.0,0.9928002801890958,104.0,None,False,,
5b4bec9d336655889641b134791dfdd2adc864cf 32844178ac711535903eb4ecbd6d2774200ea951,0e21efdb1cf6761af4eea086769cecbeefdb2415,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 29 12:13:50 2018 +0200,1535537630,"Merge pull request #4835 from soloestoy/command-script-flagsome commands' flags should be set correctly, issue #4834",,,,,,,,,,,,,,,Merge,False,,
0e21efdb1cf6761af4eea086769cecbeefdb2415,7d39c149c4ad3cf09fe58f2639ca58b4353294f0,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Aug 29 18:23:05 2018 +0800,1535538185,"Supplement to PR #4835, just take info/memory/command as random commands",3.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4180.0,219.0,140.90398148148148,109.0,1.007097031535134,105.0,None,False,,
0e21efdb1cf6761af4eea086769cecbeefdb2415 7d39c149c4ad3cf09fe58f2639ca58b4353294f0,ed5cc77ce0ffecc1742587debae944e1bf04128c,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 29 12:26:01 2018 +0200,1535538361,"Merge pull request #5296 from soloestoy/command-script-flag2Supplement to PR #4835, just take info/memory/command as random commands",,,,,,,,,,,,,,,Merge,False,,
ed5cc77ce0ffecc1742587debae944e1bf04128c e711e6f614c71187ca39b5b171f063a2025de1a0,bd9259d12dfea67022d0401702142bb2b5033728,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 29 16:13:42 2018 +0200,1535552022,Merge pull request #5282 from soloestoy/remove-duplicate-bind-in-sentinel.confremove duplicate bind in sentinel.conf,,,,,,,,,,,,,,,Merge,False,,
bd9259d12dfea67022d0401702142bb2b5033728 132be8aed5c7669f3061d2861eb2570c9f41dc19,476eea95dad37aa2c11cd82627926b9d117e052a,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 29 16:18:11 2018 +0200,1535552291,Merge pull request #4216 from lamby/did-not-received-typosCorrect did not received -> did not receive typos/grammar.,,,,,,,,,,,,,,,Merge,False,,
476eea95dad37aa2c11cd82627926b9d117e052a 1ab64d405e66c8fecd0ff7bd65d22c46f2b1ad0e,d05f5c8f642e720f287ce39448ac52f45b13efda,Salvatore Sanfilippo,antirez@gmail.com,Wed Aug 29 16:19:13 2018 +0200,1535552353,Merge pull request #5268 from 0xtonyxia/fix-latency-cmd-comments2Revise the comments of latency command.,,,,,,,,,,,,,,,Merge,False,,
ed5cc77ce0ffecc1742587debae944e1bf04128c,dce7cefb7ca5b8efad865fca14c16d773a106e3d,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Aug 31 11:49:27 2018 +0800,1535687367,"networking: fix unexpected negative or zero readlenTo avoid copying buffers to create a large Redis Object whichnexceeding PROTO_IOBUF_LEN 32KB, we just read the remaining datanwe need, which may less than PROTO_IOBUF_LEN. But the remainingnlen may be zero, if the bulklen+2 equals sdslen(c->querybuf),nin client pause context.nnFor example:nnTime1:nnpythonn>>> import os, socketn>>> server=127.0.0.1n>>> port=6379n>>> data1=*3rn$3rnsetrn$1rnarn$33000rnn>>> data2=.join(x for _ in range(33000)) + rnn>>> data3=nnn>>> s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)n>>> s.settimeout(10)n>>> s.connect((server, port))n>>> s.send(data1)n28nnTime2:nnredis-cli client pause 10000nnTime3:nn>>> s.send(data2)n33002n>>> s.send(data3)n2n>>> s.send(data3)nTraceback (most recent call last):n  File <stdin>, line 1, in <module>nsocket.error: [Errno 104] Connection reset by peernnTo fix that, we should check if remaining is greater than zero.n",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2163.0,310.0,7.977824074074074,110.0,1.1253474620040511,106.0,None,False,,
d05f5c8f642e720f287ce39448ac52f45b13efda,f5b29c6444c85a56dc1c60a9c6ee308b779be838,antirez,antirez@gmail.com,Wed Aug 29 18:14:46 2018 +0200,1535559286,Allow scripts to timeout on slaves as well.See reasoning in #5297.n,10.0,3.0,"src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.3912435636292557,16.0,3304.5,408.0,1.6947222222222222,10981.5,1.3064881967128708,5685.0,None,False,,
f5b29c6444c85a56dc1c60a9c6ee308b779be838,83af8ef1fdbfb69dd53cedc8e772184b096a5da8,antirez,antirez@gmail.com,Thu Aug 30 11:46:42 2018 +0200,1535622402,Allow scripts to timeout even if from the master instance.However the master scripts will be impossible to kill.nnRelated to #5297.n,6.0,11.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2435.0,189.0,0.7305092592592592,10983.0,2.3689080423347493,5686.0,None,False,,
83af8ef1fdbfb69dd53cedc8e772184b096a5da8,9ab91b8c6c599aedad1c5f0521e2036dcf1d0566,antirez,antirez@gmail.com,Thu Aug 30 17:40:58 2018 +0200,1535643658,"While the slave is busy, just accumulate master input.Processing command from the master while the slave is in busy state isnnot correct, however we cannot, also, just reply -BUSY to thenreplication stream commands from the master. The correct solution is tonstop processing data from the master, but just accumulate the streamninto the buffers and resume the processing later.nnRelated to #5297.n",6.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,16.0,3172.0,532.0,0.23531828703703705,10984.5,1.0740360702373508,5688.0,None,False,,
9ab91b8c6c599aedad1c5f0521e2036dcf1d0566,7fa493912e5de72edd7b1720d1a7d1f4287998f8,antirez,antirez@gmail.com,Fri Aug 31 16:07:03 2018 +0200,1535724423,"After slave Lua script leaves busy state, re-process the master buffer.Technically speaking we don't really need to put the master client innthe clients that need to be processed, since in practice the PINGncommands from the master will take care, however it is conceptually morensane to do so.n",5.0,2.0,"src/networking.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.9852281360342516,16.0,2299.5,502.0,1.0577893518518515,10986.5,1.7712271124418908,5690.0,None,False,,
7fa493912e5de72edd7b1720d1a7d1f4287998f8,febe102bf6d94428779f3943aea5947893301912,antirez,antirez@gmail.com,Fri Aug 31 16:43:38 2018 +0200,1535726618,Test: processing of master stream in slave -BUSY state.See #5297.n,44.0,0.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,268.0,29.0,1051.222511574074,10988.0,1.0009512733878791,789.0,Preventative,False,True,"[""009a9292694491ff9eec78c024d38b0b5ca83f2e""]"
febe102bf6d94428779f3943aea5947893301912,a036c64c01b38aceebfcfd467da04ed3f95fd363,Amin Mesbah,dev@aminmesbah.com,Sun Sep 2 00:06:20 2018 -0700,1535871980,"Use geohash limit defines in constraint checkSlight robustness improvement, especially if the limit values arenchanged, as was suggested in antires/redis#4291 [1].nn[1] https://github.com/antirez/redis/pull/4291n",2.0,2.0,"src/geohash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,295.0,3.0,81.98462962962962,0.0,0.0,0.0,None,False,,
febe102bf6d94428779f3943aea5947893301912,e3dfd8c811e12b6b1d3f7febf732b23fdaab497b,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Nov 6 16:21:35 2017 +0800,1509956495,fix multiple unblock for clientsArePaused(),3.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2168.0,313.0,-298.23990740740743,111.0,0.9966469946671692,107.0,Corrective,True,,
e3dfd8c811e12b6b1d3f7febf732b23fdaab497b,2290c4bee1904d4418fd1fa9192a3fbc13bf38b0,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Sep 3 14:36:48 2018 +0800,1535956608,"if master is already unblocked, do not unblock it twice",1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2434.0,191.0,2.6873263888888888,112.0,1.3721170618256997,108.0,None,False,,
febe102bf6d94428779f3943aea5947893301912,247d2a734b0434e0f461902f64d32cb6e587709c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Sep 4 00:02:18 2018 +0800,1535990538,"networking: optimize parsing large bulk greater than 32kIf we are going to read a large object from networkntry to make it likely that it will start at c->querybufnboundary so that we can optimize object creationnavoiding a large copy of data.nnBut only when the data we have not parsed is less thannor equal to ll+2. If the data length is greater thannll+2, trimming querybuf is just a waste of time, becausenat this time the querybuf contains not only our bulk.nnIt's easy to reproduce the that:nnTime1: call `client pause 10000` on slave.nnTime2: redis-benchmark -t set -r 10000 -d 33000 -n 10000.nnThen slave hung after 10 seconds.n",13.0,10.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2168.0,314.0,301.3199421296296,113.0,1.00331873155468,109.0,None,False,,
febe102bf6d94428779f3943aea5947893301912,3e7349fdaf8cdbf96e595750034af43e6d6c56f0,antirez,antirez@gmail.com,Mon Sep 3 18:17:25 2018 +0200,1535991445,Make pending buffer processing safe for CLIENT_MASTER client.Related to #5305.n,22.0,13.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5007115883735379,16.0,1634.333333333333,568.0,9.134556327160494,10990.0,1.045261061367898,5693.0,None,False,,
3e7349fdaf8cdbf96e595750034af43e6d6c56f0 2290c4bee1904d4418fd1fa9192a3fbc13bf38b0,2b689ad641f19573b3b6141b45452da90ca32df4,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 3 18:31:02 2018 +0200,1535992262,Merge pull request #4418 from soloestoy/fix-multiple-unblockfix multiple unblock for clientsArePaused(),,,,,,,,,,,,,,,Merge,False,,
2b689ad641f19573b3b6141b45452da90ca32df4,6c001bfc0ddf8e7a93e86dad250e416166253d85,antirez,antirez@gmail.com,Mon Sep 3 18:39:18 2018 +0200,1535992758,Unblocked clients API refactoring. See #4418.,33.0,15.0,"src/blocked.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.3341479170272448,16.0,1836.5,763.0,0.1159982638888889,10993.5,26.772160547840734,5697.0,None,False,,
6c001bfc0ddf8e7a93e86dad250e416166253d85,227965221ab443f21b27fa0a3636d6232c496b45,maya-rv,42264341+maya-rv@users.noreply.github.com,Tue Sep 4 13:32:02 2018 +0300,1536057122,Fix typo,1.0,1.0,"tests/support/server.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,335.0,47.0,69.97081018518519,0.0,0.0,0.0,Corrective,True,,
6c001bfc0ddf8e7a93e86dad250e416166253d85 247d2a734b0434e0f461902f64d32cb6e587709c,d60c17cbb3ae0a4b1a435f0b6fc986a60449ebec,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 4 12:49:50 2018 +0200,1536058190,Merge pull request #5315 from soloestoy/optimize-parsing-large-bulknetworking: optimize parsing large bulk greater than 32k,,,,,,,,,,,,,,,Merge,False,,
d60c17cbb3ae0a4b1a435f0b6fc986a60449ebec 227965221ab443f21b27fa0a3636d6232c496b45,e4298d11e268b5222c3b14f728df71e8132fadb3,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 4 12:58:04 2018 +0200,1536058684,Merge pull request #5321 from maya-rv/patch-1Fix typo,,,,,,,,,,,,,,,Merge,False,,
d60c17cbb3ae0a4b1a435f0b6fc986a60449ebec,c1e9186f069e0b3aa1507e0e86a16d5001ea5420,Sascha Roland,sroland@ngncc.de,Wed Aug 29 17:53:47 2018 +0200,1535558027,"#5299 Fix blocking XREAD for streams that ran dryThe conclusion, that a xread request can be answered syncronously inncase that the stream's last_id is larger than the passed last-received-idnparameter, assumes, that there must be entries present, which could benreturned immediately.nThis assumption fails for empty streams that actually contained somenentries which got removed by xdel, ... .nnAs result, the client is answered synchronously with an empty result,ninstead of blocking for new entries to arrive.nAn additional check for a non-empty stream is required.n",2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2399.0,146.0,25.949236111111112,0.0,0.0,0.0,Corrective,True,,
e4298d11e268b5222c3b14f728df71e8132fadb3 dce7cefb7ca5b8efad865fca14c16d773a106e3d,2ef829d65c1174438d33ca91bc4b9284639ad742,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 4 13:25:28 2018 +0200,1536060328,Merge pull request #5304 from soloestoy/fix-unexpected-readlennetworking: fix unexpected negative or zero readlen,,,,,,,,,,,,,,,Merge,False,,
c1e9186f069e0b3aa1507e0e86a16d5001ea5420 2ef829d65c1174438d33ca91bc4b9284639ad742,ff57b8d550b4ef90f33dc89d7179b05ad6d1258d,antirez,antirez@gmail.com,Tue Sep 4 13:26:06 2018 +0200,1536060366,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ff57b8d550b4ef90f33dc89d7179b05ad6d1258d,4e5e0d3719ffed0d3a687fa2082655f97e16167c,antirez,antirez@gmail.com,Tue Sep 4 13:29:24 2018 +0200,1536060564,Clarify why remaining may be zero in readQueryFromClient().See #5304.n,2.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2178.0,317.0,0.7847916666666667,10996.0,2.274223520042474,5698.0,None,False,,
4e5e0d3719ffed0d3a687fa2082655f97e16167c,a8322f44b3f537a58d6e8a63dd02c66e2d7ed2e4,youjiali1995,zlwgx1023@gmail.com,Wed Sep 5 10:32:18 2018 +0800,1536114738,sentinel: fix randomized sentinelTimer.,1.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4180.0,222.0,5.452314814814817,1.0,1.1834083382864906,1.0,None,False,,
4e5e0d3719ffed0d3a687fa2082655f97e16167c,c328834832808cf8be9c30122a48b8234ebebed1,youjiali1995,zlwgx1023@gmail.com,Wed Sep 5 16:51:13 2018 +0800,1536137473,bio: fix bioWaitStepOfType.,3.0,3.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,268.0,29.0,173.67109953703704,2.0,1.0057580104154678,2.0,None,False,,
4e5e0d3719ffed0d3a687fa2082655f97e16167c,51b627d916dc7930879558f7c627dc16022612a8,antirez,antirez@gmail.com,Wed Sep 5 13:10:05 2018 +0200,1536145805,Don't perform eviction when re-entering the event loop.Related to #5250.n,7.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4178.0,223.0,0.3595717592592593,10997.0,3.7810860398493578,5699.0,None,False,,
51b627d916dc7930879558f7c627dc16022612a8,092e4de613af1464d7592cd51e12bd1c87dd0645,antirez,antirez@gmail.com,Wed Sep 5 13:20:12 2018 +0200,1536146412,Propagate read-only scripts as SCRIPT LOAD.See issue #5250 and the new comments added to the code in this commitnfor details.n,16.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2432.0,193.0,1.7784027777777778,10998.0,1.5623023155921745,5700.0,Feature Addition,False,,
092e4de613af1464d7592cd51e12bd1c87dd0645,7e11825ef4467ccc64f961761ea050a3df4853ba,antirez,antirez@gmail.com,Wed Sep 5 15:48:08 2018 +0200,1536155288,"Safer script stop condition on OOM.Here the idea is that we do not want freeMemoryIfNeeded() to propagate anDEL command before the script and change what happens in the scriptnexecution once it reaches the slave. For example see this potentialnissue (in the words of @soloestoy):nnOn master, we run the following script:nnif redis.call('get','key')nthennredis.call('set','xxx','yyy')nendnredis.call('set','c','d')nnThen when redis attempts to execute redis.call('set','xxx','yyy'), we call freeMemoryIfNeeded(), and the key may get deleted, and because redis.call('set','xxx','yyy') has already been executed on master, this script will be replicated to slave.nnBut the slave received DEL key before the script, and will ignore maxmemory, so after that master has xxx and c, slave has only one key c.nnNote that this patch (and other related work) was authored collaboratively innissue #5250 with the help of @soloestoy and @oranagra.nnRelated to issue #5250.n",5.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2445.0,194.0,0.10273148148148148,10999.0,10.734114465975663,5701.0,None,False,,
7e11825ef4467ccc64f961761ea050a3df4853ba,7895835df6aeb2a2d499bc499ae6cb340228908f,antirez,antirez@gmail.com,Wed Sep 5 19:33:56 2018 +0200,1536168836,Use commands (effects) replication by default in scripts.See issue #5250 and issue #5292 for more info.n,8.0,1.0,"src/config.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",3.0,1.0,1.0,1.224394445405986,16.0,2937.333333333333,651.0,3.2398842592592585,11001.0,1.1054132337620175,5704.0,None,False,,
7895835df6aeb2a2d499bc499ae6cb340228908f,6bd0d342dd566ced07dcad07c35f449b59f6c0cc,antirez,antirez@gmail.com,Wed Sep 5 19:47:29 2018 +0200,1536169649,Fix scripting tests now that we default to commands repl.,8.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,736.0,52.0,66.51572916666667,11003.0,1.0150340380016631,790.0,Corrective,True,,
6bd0d342dd566ced07dcad07c35f449b59f6c0cc,db74d71eb349465b674ff42af3437969dc594f61,Weiliang Li,liweiliang@cmss.chinamobile.com,Thu Sep 6 13:40:05 2018 +0800,1536212405,fix usage typo in redis-cli,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10455.0,292.0,24.53685185185185,0.0,0.0,0.0,Corrective,True,,
6bd0d342dd566ced07dcad07c35f449b59f6c0cc,8d24f8b46b3c544fef33427ca1f2582d92c59dd4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Sep 6 20:52:05 2018 +0800,1536238325,Scripting & Streams: some commands need right flagsxadd with id * generates random stream idnnxadd & xtrim with approximate maxlen count mayntrim stream randomlynnxinfo may get random radix-tree-keys/nodesnnxpending may get random idletimennxclaim: master and slave may have differentnidletime in streamn,5.0,5.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4189.0,225.0,0.8042708333333334,114.0,2.24336225877477,110.0,None,False,,
6bd0d342dd566ced07dcad07c35f449b59f6c0cc db74d71eb349465b674ff42af3437969dc594f61,596749e75f0a3e541124a5c6df0952e1741c4fbd,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 6 17:41:31 2018 +0200,1536248491,Merge pull request #5331 from Weiliang-Li/patch-redis-clifix usage typo in redis-cli,,,,,,,,,,,,,,,Merge,False,,
596749e75f0a3e541124a5c6df0952e1741c4fbd c328834832808cf8be9c30122a48b8234ebebed1,aba57a1bb7146063267ded6fbb3fd014546b855a,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 7 12:06:02 2018 +0200,1536314762,Merge pull request #5324 from youjiali1995/fix-biobio: fix bioWaitStepOfType.,,,,,,,,,,,,,,,Merge,False,,
aba57a1bb7146063267ded6fbb3fd014546b855a a8322f44b3f537a58d6e8a63dd02c66e2d7ed2e4,a62b8410ef42cc9fe30bef68c6da0feef88727c0,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 7 12:10:35 2018 +0200,1536315035,Merge pull request #5322 from youjiali1995/fix-sentinel-randomizesentinel: fix randomized sentinelTimer.,,,,,,,,,,,,,,,Merge,False,,
a62b8410ef42cc9fe30bef68c6da0feef88727c0 bd01334da1d27367ad9887f159f2860f7e8ba5ac,83b8eaa6386f4449c99d6e76c44f3035a20172eb,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 7 12:28:22 2018 +0200,1536316102,Merge pull request #5239 from jeffreylovitz/cli-help-fixCLI Help text loop verifies arg count,,,,,,,,,,,,,,,Merge,False,,
83b8eaa6386f4449c99d6e76c44f3035a20172eb a036c64c01b38aceebfcfd467da04ed3f95fd363,14629278e3b5f0af862c3085007b70d9d6ea68f1,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 7 12:31:27 2018 +0200,1536316287,Merge pull request #5307 from mesbahamin/use_geohash_defines_in_checkUse geohash limit defines in constraint check,,,,,,,,,,,,,,,Merge,False,,
14629278e3b5f0af862c3085007b70d9d6ea68f1,ef2c7a5bbb6d62b2f970bbb4a12d149d2d09faaf,antirez,antirez@gmail.com,Mon Sep 10 10:43:39 2018 +0200,1536569019,Slave removal: SLAVEOF -> REPLICAOF. SLAVEOF is now an alias.,4.0,3.0,"src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.5566567074628228,16.0,3016.666666666666,655.0,22.761647376543213,11005.0,1.0160596538074185,5707.0,None,False,,
ef2c7a5bbb6d62b2f970bbb4a12d149d2d09faaf,f579b774490d119df579413e747a1e02ad863462,antirez,antirez@gmail.com,Mon Sep 10 10:46:28 2018 +0200,1536569188,"Slave removal: redis-cli --slave -> --replica.--slave alias remains but is undocumented, just for backwardncompatibiltiy.n",3.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10455.0,293.0,4.12943287037037,11007.0,1.2421640044508848,5708.0,None,False,,
f579b774490d119df579413e747a1e02ad863462,a9419e23867f10a99927fb3e1689071c60cfe11c,antirez,antirez@gmail.com,Mon Sep 10 10:49:03 2018 +0200,1536569343,Slave removal: Convert cluster.c log messages and command names.,12.0,11.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5677.0,548.0,40.73333333333333,11008.0,1.0245499181669395,5709.0,None,False,,
a9419e23867f10a99927fb3e1689071c60cfe11c,6f5848613956cb2e662bbdc675bbaaf7be42574a,antirez,antirez@gmail.com,Mon Sep 10 12:22:20 2018 +0200,1536574940,"Slave removal: config.c converted + config rewriting hacks.Aliases added for all the commands mentioning slave. Moreover CONFIGnREWRITE will use the new names, and will be able to reuse the old linesnmentioning the old options.n",117.0,38.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2183.0,233.0,4.700277777777779,11009.0,1.2127533833697772,5710.0,None,False,True,"[""0cb798ea2b3ccb163c0add8137276dba31916293"", ""d50ae36e178db2dfb48d1ef551b9bac2731eb994""]"
6f5848613956cb2e662bbdc675bbaaf7be42574a,6f3d357d8feca56b524d680360faf99d3801920c,antirez,antirez@gmail.com,Mon Sep 10 12:27:37 2018 +0200,1536575257,Slave removal: slave -> replica in redis.conf and output buffer option.,132.0,129.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",3.0,2.0,2.0,0.15051136055455888,16.0,1938.333333333333,741.0,6.651998456790124,11011.0,1.064332448268339,5712.0,None,False,,
6f3d357d8feca56b524d680360faf99d3801920c,a67181f88ae7cb42b3b2978ff3b15fcd6706a7cb,antirez,antirez@gmail.com,Mon Sep 10 12:56:02 2018 +0200,1536576962,Slave removal: fix typo of replicaof.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1373.0,190.0,0.019733796296296298,11013.0,51.67448680351906,1402.0,None,False,,
a67181f88ae7cb42b3b2978ff3b15fcd6706a7cb,8296e5c8464e406af946edb5d520f4c0c2b67997,antirez,antirez@gmail.com,Mon Sep 10 16:37:23 2018 +0200,1536590243,Slave removal: slave mode -> replica mode text in redis-cli.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10457.0,294.0,0.2436921296296297,11014.0,5.103538351935407,5713.0,None,False,,
8296e5c8464e406af946edb5d520f4c0c2b67997,c9bab6f30231e0ba19c03970073921f17894a83b,antirez,antirez@gmail.com,Mon Sep 10 16:39:51 2018 +0200,1536590391,Slave removal: Make obvious in redis.conf what a replica is.,5.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1373.0,191.0,0.15542824074074074,11015.0,7.433837217961129,1403.0,None,False,,
c9bab6f30231e0ba19c03970073921f17894a83b,05e8db24ed22c14d26959a413161dd1092eea706,antirez,antirez@gmail.com,Mon Sep 10 16:46:14 2018 +0200,1536590774,Slave removal: blocked.c logs fixed.,1.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,614.0,47.0,6.921481481481483,11016.0,1.1444777397260273,5714.0,None,False,,
05e8db24ed22c14d26959a413161dd1092eea706,cff5f36d94aa34df6a9b62d0bc71bdb8b38116fb,antirez,antirez@gmail.com,Mon Sep 10 17:02:44 2018 +0200,1536591764,Slave removal: networking.c logs fixed.,5.0,5.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2181.0,319.0,0.1910532407407408,11017.0,6.23414309080996,5715.0,None,False,,
cff5f36d94aa34df6a9b62d0bc71bdb8b38116fb,61b7a176ef34f654e2502da99c91215aae04ccb6,antirez,antirez@gmail.com,Mon Sep 10 17:07:33 2018 +0200,1536592053,Slave removal: replication.c logs fixed.,35.0,35.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2721.0,220.0,0.2665972222222222,11018.0,4.750976816879397,5716.0,None,False,True,"[""76f20729fc6eeb40f3c1a5598ead18b111fa52bf"", ""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
61b7a176ef34f654e2502da99c91215aae04ccb6,1051d9383773f26b5a56dc1380006c841b7d59a8,antirez,antirez@gmail.com,Mon Sep 10 17:09:01 2018 +0200,1536592141,Slave removal: scripting.c logs and other stuff fixed.,6.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2447.0,196.0,4.899363425925926,11019.0,1.2041081489706005,5717.0,None,False,,
1051d9383773f26b5a56dc1380006c841b7d59a8,ca6aed02f8264a431e674180a430e4f62438fb9c,antirez,antirez@gmail.com,Mon Sep 10 17:51:46 2018 +0200,1536594706,"Slave removal: replace very few things in Sentinel.SENTINEL REPLICAS was added as an alias, in the configuration rewritingnnow it uses known-replica, however all the rest is basically at APInlevel of logged events and messages having to do with the protocol, sonthere is very little to do here compared to the Redis core itself, tonpreserve compatibility.n",12.0,8.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4498.0,247.0,15.129247685185184,11020.0,1.0660971398451766,5718.0,None,False,,
ca6aed02f8264a431e674180a430e4f62438fb9c,f74c7394d77ef813bb649202f934e760634a24f0,antirez,antirez@gmail.com,Mon Sep 10 17:55:34 2018 +0200,1536594934,"Slave removal: remove slave from sentinel.conf when possible.All the occurrences translated, but the ones referring to SLAVEOFnmust be intact because that describe the actual Sentinel -> Redisnprotocol. In theory we could send REPLICAOF to Redis instances, butnactually this would prevent Sentinel to be compatible with older Redisninstances.n",18.0,18.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,239.0,25.0,14.491782407407408,11021.0,1.0690046242682236,1404.0,None,False,,
f74c7394d77ef813bb649202f934e760634a24f0,db146de0860b43fc801a32338c7013e21226db21,antirez,antirez@gmail.com,Tue Sep 11 10:39:24 2018 +0200,1536655164,Slave removal: server.c logs fixed.,5.0,5.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4190.0,227.0,0.9970486111111112,11022.0,2.002960125370016,5719.0,None,False,,
db146de0860b43fc801a32338c7013e21226db21,3841236074d6e318a4f47a69ce21780ecc83a22a,antirez,antirez@gmail.com,Tue Sep 11 10:51:47 2018 +0200,1536655907,Slave removal: remove slave from the README.,7.0,7.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,25.0,84.1321875,11023.0,1.0118860572833672,1405.0,None,False,,
3841236074d6e318a4f47a69ce21780ecc83a22a,0c1d28e2d0e06ced55c17e7908ece1645e7e0b6f,antirez,antirez@gmail.com,Tue Sep 11 10:54:09 2018 +0200,1536656049,Slave removal: remove slave from object.c.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1431.0,141.0,28.761979166666666,11024.0,1.0347681219781613,5720.0,None,False,,
0c1d28e2d0e06ced55c17e7908ece1645e7e0b6f,52e7192e4aeaddea17b593f97a5bcc962e5b2b58,antirez,antirez@gmail.com,Tue Sep 11 10:57:50 2018 +0200,1536656270,Slave removal: remove slave from top-level tests descriptions.,12.0,12.0,"tests/unit/maxmemory.tcl,CAS_DELIMITER,tests/unit/pendingquerybuf.tcl,CAS_DELIMITER,tests/unit/scripting.tcl,CAS_DELIMITER",3.0,1.0,1.0,1.040852082972755,16.0,340.0,61.0,32.9111149691358,11026.0,1.022823300006994,793.0,None,False,,
52e7192e4aeaddea17b593f97a5bcc962e5b2b58,4cf8fdbbd359f9ff8dea28f9877262bd56616051,antirez,antirez@gmail.com,Tue Sep 11 11:03:28 2018 +0200,1536656608,Slave removal: remove slave from integration tests descriptions.,36.0,36.0,"tests/integration/block-repl.tcl,CAS_DELIMITER,tests/integration/psync2-reg.tcl,CAS_DELIMITER,tests/integration/psync2.tcl,CAS_DELIMITER,tests/integration/replication-2.tcl,CAS_DELIMITER,tests/integration/replication-3.tcl,CAS_DELIMITER,tests/integration/replication-4.tcl,CAS_DELIMITER,tests/integration/replication-psync.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER",8.0,1.0,1.0,2.380859113759904,16.0,150.5,68.0,316.6288266782407,11031.5,1.0018403250932169,801.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
4cf8fdbbd359f9ff8dea28f9877262bd56616051,cb51bb4320d2240001e8fc4a522d59fb28259703,Jakub Vrana,jakub@vrana.cz,Tue Sep 11 11:30:46 2018 +0200,1536658246,Slave removal: capitalize Replica,5.0,5.0,"redis.conf,CAS_DELIMITER,sentinel.conf,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,16.0,808.5,218.0,0.7590682870370371,0.5,0.8293511325257115,1.0,None,False,,
cb51bb4320d2240001e8fc4a522d59fb28259703,65ce839d09ca3045ef94a10e441622dbb7fe36aa,antirez,antirez@gmail.com,Tue Sep 11 16:04:25 2018 +0200,1536674665,LOLWUT: Emit Braille unicode according to pixel pattern.,23.0,0.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,11036.0,0.0,5721.0,None,False,,
65ce839d09ca3045ef94a10e441622dbb7fe36aa,2dbf2047ac327aed53794c215a35655b662cdee5,antirez,antirez@gmail.com,Tue Sep 11 16:09:24 2018 +0200,1536674964,LOLWUT: canvas structure and BSD license on top.,46.0,0.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,23.0,1.0,0.003460648148148148,11037.0,289.9632107023412,5722.0,None,False,,
2dbf2047ac327aed53794c215a35655b662cdee5,096c74c8867fd1ae3f9f91320750fd8ae5d58218,antirez,antirez@gmail.com,Tue Sep 11 16:29:31 2018 +0200,1536676171,LOLWUT: show the output verbatim in redis-cli.,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10457.0,295.0,0.994537037037037,11038.0,2.005492970859324,5723.0,None,False,,
096c74c8867fd1ae3f9f91320750fd8ae5d58218,7777379814a3e3b64bbc30d07ffb366ce9240759,antirez,antirez@gmail.com,Tue Sep 11 17:32:57 2018 +0200,1536679977,LOLWUT: Rendering of the virtual canvas to a string.,78.0,7.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,69.0,2.0,0.05802083333333333,11039.0,18.235188509874327,5724.0,None,False,,
7777379814a3e3b64bbc30d07ffb366ce9240759,a974531d1a0f7a475e1b47a330f12f11b4320d5c,antirez,antirez@gmail.com,Tue Sep 11 21:15:43 2018 +0200,1536693343,LOLWUT: draw lines using Bresenham algorithm.,26.0,2.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,140.0,3.0,0.15469907407407407,11040.0,7.4641628011372125,5725.0,None,False,,
a974531d1a0f7a475e1b47a330f12f11b4320d5c,2ead41e05bf0be48595e0c01d19947e6f4132f41,antirez,antirez@gmail.com,Wed Sep 12 10:35:13 2018 +0200,1536741313,LOLWUT: draw rotated squares using trivial trigonometry.,44.0,0.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,164.0,4.0,0.5552083333333333,11041.0,2.801125703564728,5726.0,None,False,True,"[""30377f154f4e03d9f313e4c8b7134c59dcc64a73""]"
2ead41e05bf0be48595e0c01d19947e6f4132f41,eac2a79cf55d9cc3042d8b7beb263d59d1b7d9eb,antirez,antirez@gmail.com,Wed Sep 12 11:16:07 2018 +0200,1536743767,LOLWUT: draw Schotter by Georg Nees.,47.0,3.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,208.0,5.0,0.028402777777777773,11042.0,36.20782396088021,5727.0,None,False,,
eac2a79cf55d9cc3042d8b7beb263d59d1b7d9eb,43385c437530cc240b4a2e85c2035c590d26367c,antirez,antirez@gmail.com,Wed Sep 12 11:34:10 2018 +0200,1536744850,LOLWUT: wrap it into a proper command.,40.0,15.0,"src/Makefile,CAS_DELIMITER,src/lolwut.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.6563475341826838,16.0,1718.0,603.0,18.216516203703712,11044.5,1.0141251719108348,5731.0,None,False,,
43385c437530cc240b4a2e85c2035c590d26367c,0dd8fd062dfec81b52e27f785e397b84bc52bf1e,antirez,antirez@gmail.com,Wed Sep 12 12:26:33 2018 +0200,1536747993,LOLWUT: change default size to fit a normal terminal better.,6.0,6.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,7.0,0.03637731481481482,11047.0,28.489659560929052,5732.0,None,False,,
0dd8fd062dfec81b52e27f785e397b84bc52bf1e,77bdfb53393cda586ddcdb961fbd9600574d54a6,antirez,antirez@gmail.com,Wed Sep 12 12:28:28 2018 +0200,1536748108,LOLWUT: increase the translation factor.,2.0,2.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,8.0,0.0013310185185185185,11048.0,752.304347826087,5733.0,None,False,,
77bdfb53393cda586ddcdb961fbd9600574d54a6,cf0abff567928d14e139b3537cd47dcb313bbda3,antirez,antirez@gmail.com,Wed Sep 12 12:40:37 2018 +0200,1536748837,LOLWUT: Fix license copyright year.,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,9.0,0.0084375,11049.0,119.5185185185185,5734.0,None,False,,
cf0abff567928d14e139b3537cd47dcb313bbda3,690560e8dbd72b443621bfe00f66737f062e2ec1,antirez,antirez@gmail.com,Wed Sep 12 17:53:00 2018 +0200,1536767580,LOLWUT: fix structure typo in comment.,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,10.0,0.2169328703703704,11050.0,5.609720962492664,5735.0,None,False,,
690560e8dbd72b443621bfe00f66737f062e2ec1,30377f154f4e03d9f313e4c8b7134c59dcc64a73,Slobodan Miu00c5u00a1koviu00c4u0087,slobodan@miskovic.ca,Wed Sep 12 12:10:07 2018 -0700,1536779407,Fix spelling descrive -> describe,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,11.0,0.13688657407407406,0.0,0.0,0.0,Corrective,True,,
690560e8dbd72b443621bfe00f66737f062e2ec1 30377f154f4e03d9f313e4c8b7134c59dcc64a73,b278d352c5d2565aa15c85ba1c4adfa3760bdd63,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 12 21:30:27 2018 +0200,1536780627,Merge pull request #5343 from slobo/patch-1Fix spelling descrive -> describe,,,,,,,,,,,,,,,Merge,False,,
690560e8dbd72b443621bfe00f66737f062e2ec1,4dc37c240e6c924c0e492e0ca5f3fd90f9b68fef,antirez,antirez@gmail.com,Thu Sep 13 08:08:28 2018 +0200,1536818908,LOLWUT: fix crash when col < 2.Close #5345.n,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,12.0,0.4571875,11051.0,3.1872863978127133,5736.0,None,False,,
4dc37c240e6c924c0e492e0ca5f3fd90f9b68fef b278d352c5d2565aa15c85ba1c4adfa3760bdd63,02817d8b3daf2daf4b7d6a77853c62b31a9b4d5e,antirez,antirez@gmail.com,Thu Sep 13 08:08:56 2018 +0200,1536818936,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
02817d8b3daf2daf4b7d6a77853c62b31a9b4d5e,5c9a7b891fc823fa1b5df09ec53b31db11e96145,antirez,antirez@gmail.com,Thu Sep 13 08:29:55 2018 +0200,1536820195,LOLWUT: change padding conditional to a more direct one.,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,13.0,0.014895833333333334,11052.0,68.13286713286713,5737.0,None,False,,
5c9a7b891fc823fa1b5df09ec53b31db11e96145,ffbf8f4b8e87f1974a1488d5269659eccbb162e6,antirez,antirez@gmail.com,Thu Sep 13 08:31:55 2018 +0200,1536820315,LOLWUT: Limit maximum CPU effort.,5.0,0.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,275.0,14.0,0.0013888888888888892,11053.0,721.0,5738.0,None,False,,
ffbf8f4b8e87f1974a1488d5269659eccbb162e6,d23cae5f062ee41e7c866d9872960cb436e567b4,antirez,antirez@gmail.com,Thu Sep 13 09:03:36 2018 +0200,1536822216,LOLWUT: Ness -> Nees.,1.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,280.0,15.0,0.022002314814814808,11054.0,46.4497632824829,5739.0,None,False,,
d23cae5f062ee41e7c866d9872960cb436e567b4,62015d4fb0805f350906b088a0c1036f8c5120cb,Guy Korland,gkorland@gmail.com,Thu Sep 13 15:42:17 2018 +0300,1536842537,No need to return OKNo need to return +OK in this case since the result is an Array of all the nodes,1.0,1.0,"src/modules/hellocluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,108.0,3.0,157.11635416666667,1.0,1.0063647098056974,1.0,None,False,,
d23cae5f062ee41e7c866d9872960cb436e567b4,9849cf2df5945d67df6cdf84812e73e3f31f7228,antirez,antirez@gmail.com,Thu Sep 13 21:35:52 2018 +0200,1536867352,LOLWUT: add Redis version in the output.This creates an incentive to run the command and as a side effectnexperience the art piece inside.n,3.0,1.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,280.0,16.0,0.5224074074074074,11055.0,2.9142148174406235,5740.0,None,False,,
9849cf2df5945d67df6cdf84812e73e3f31f7228,411f4b4c1272d2c11561c5e7317788b6177f49d1,antirez,antirez@gmail.com,Thu Sep 13 21:43:15 2018 +0200,1536867795,Slave removal: add a few forgotten aliases for CONFIG SET.,10.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2264.0,235.0,3.3858564814814813,11056.0,1.2953462456159541,5741.0,None,False,,
411f4b4c1272d2c11561c5e7317788b6177f49d1,c560ade831ad6196d51cd42fd533ed3664837e54,antirez,antirez@gmail.com,Fri Sep 14 12:35:59 2018 +0200,1536921359,LOLWUT: split the command from version-specific implementations.,297.0,241.0,"src/Makefile,CAS_DELIMITER,src/lolwut.c,CAS_DELIMITER,src/lolwut5.c,CAS_DELIMITER",3.0,1.0,1.0,1.0296791063919588,16.0,190.66666666666663,176.0,0.8893364197530863,11058.0,1.4130386798141583,5744.0,None,False,,
c560ade831ad6196d51cd42fd533ed3664837e54,b2fc998ad64d17ed8e1bb3d3fed9a2cd5815553d,Guy Korland,gkorland@gmail.com,Sun Sep 16 15:21:21 2018 +0300,1537100481,typo fix,1.0,1.0,"src/modules/helloblock.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,219.0,9.0,157.04135416666668,2.0,1.00636774947151,2.0,Corrective,True,,
c560ade831ad6196d51cd42fd533ed3664837e54,44f9e0d7c7fa32ba19d9fb106781be4b28798e53,Guy Korland,gkorland@gmail.com,Mon Sep 17 13:54:56 2018 +0300,1537181696,RedisModule_HashSet call must end with NULLExtended the RedisModule_HashSet doc to mark that each call must end with NULL,3.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4703.0,168.0,48.9,3.0,1.0204498977505112,3.0,Non Functional,False,,
c560ade831ad6196d51cd42fd533ed3664837e54,3b0f0086156e79e0c7e13c8e7118799b9b40dd08,Guy Korland,gkorland@gmail.com,Mon Sep 17 14:13:46 2018 +0300,1537182826,Fix few typos,10.0,10.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4705.0,169.0,0.013078703703703705,4.0,77.46017699115046,4.0,Corrective,True,,
44f9e0d7c7fa32ba19d9fb106781be4b28798e53 3b0f0086156e79e0c7e13c8e7118799b9b40dd08,3176f8e9553bbc7202a35c1c7ae4d208dd0f7fb8,Guy Korland,gkorland@gmail.com,Mon Sep 17 14:15:39 2018 +0300,1537182939,Merge pull request #1 from gkorland/patch-5Fix few typos,,,,,,,,,,,,,,,Merge,False,,
c560ade831ad6196d51cd42fd533ed3664837e54 3176f8e9553bbc7202a35c1c7ae4d208dd0f7fb8,bd33014f90a4dfba61f090b4556d7e985ecd5cbe,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 17 15:20:10 2018 +0200,1537190410,Merge pull request #5357 from gkorland/patch-4RedisModule_HashSet call must end with NULL,,,,,,,,,,,,,,,Merge,False,,
c560ade831ad6196d51cd42fd533ed3664837e54,378218d746b04039827f53a2e92e32f19be02ca6,antirez,antirez@gmail.com,Mon Sep 17 15:29:01 2018 +0200,1537190941,Sentinel: document how to undo a renamed command.,6.0,1.0,"sentinel.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,239.0,27.0,6.165451388888887,11060.0,1.1621941260946695,1406.0,None,False,,
378218d746b04039827f53a2e92e32f19be02ca6 bd33014f90a4dfba61f090b4556d7e985ecd5cbe,394b974920cee6b83c7a1cf01bb43d8e0580a8ae,antirez,antirez@gmail.com,Mon Sep 17 15:35:07 2018 +0200,1537191307,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
394b974920cee6b83c7a1cf01bb43d8e0580a8ae b2fc998ad64d17ed8e1bb3d3fed9a2cd5815553d,f39bb4107cd22986b3d206f40c1fa0208401e41a,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 17 15:41:24 2018 +0200,1537191684,Merge pull request #5352 from gkorland/patch-3typo fix,,,,,,,,,,,,,,,Merge,False,,
f39bb4107cd22986b3d206f40c1fa0208401e41a 62015d4fb0805f350906b088a0c1036f8c5120cb,54871412c29b799aa324fed2b0ae091e769737ad,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 17 15:42:50 2018 +0200,1537191770,Merge pull request #5348 from gkorland/patch-2No need to return OK,,,,,,,,,,,,,,,Merge,False,,
394b974920cee6b83c7a1cf01bb43d8e0580a8ae,9f43264f861b30546c1af90345b153241de1f118,antirez,antirez@gmail.com,Mon Sep 17 16:24:07 2018 +0200,1537194247,Revert fix repeat argument issue and reduce unnessary loop times for redis-cli.Reverts commit 9505dd2011ef7143670b68247ff1818ffbad9768nsince the commit introduced the very serious bug issue #5286.n,7.0,12.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10458.0,296.0,5.99625,11061.0,1.1667708984782157,5745.0,Corrective,True,True,"[""2f6ed9333f082b9cd27bfab05013521b88f077c7""]"
9f43264f861b30546c1af90345b153241de1f118 54871412c29b799aa324fed2b0ae091e769737ad,12fd92bf67d51dbdd7d993606b8ac5d365a20174,antirez,antirez@gmail.com,Mon Sep 17 16:24:52 2018 +0200,1537194292,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
12fd92bf67d51dbdd7d993606b8ac5d365a20174,81c4be42c188d68ed347333addffe062a33d238f,artix,artix2@gmail.com,Mon Sep 17 15:52:47 2018 +0200,1537192367,Cluster Manager: clusterManagerFixOpenSlot now counts node's keys in slot if node is neither migrating nor importing.,20.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10453.0,297.0,-0.02175925925925926,76.0,-44.95744680851064,70.0,None,False,,
c560ade831ad6196d51cd42fd533ed3664837e54,42366959ecb9af43b5113ef4bcb4c49611859cba,jem,youjh1990@gmail.com,Tue Sep 18 17:04:00 2018 +0800,1537261440,update leap year comment when div by 400,2.0,2.0,"src/localtime.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,123.0,11.0,66.7204861111111,0.0,0.0,0.0,None,False,,
81c4be42c188d68ed347333addffe062a33d238f,bf18044082aaf740dc8292907f990f6c2b0b600a,antirez,antirez@gmail.com,Tue Sep 18 13:15:36 2018 +0200,1537269336,Modules: associate a fake client to cluster message context callback.Fixes #5354.n,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4705.0,170.0,1.0012731481481478,11062.0,1.9987284706970287,5746.0,None,False,,
bf18044082aaf740dc8292907f990f6c2b0b600a,9df1f73e4c32b2bfc54471761b64f2b86c5b913b,antirez,antirez@gmail.com,Tue Sep 18 13:19:33 2018 +0200,1537269573,Modules: associate a fake client to timer context callback.,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4707.0,171.0,0.0027430555555555554,11063.0,365.55696202531647,5747.0,None,False,True,"[""87264235cc59f9ad2b478e2d4d7c3104cceb9fdc""]"
9df1f73e4c32b2bfc54471761b64f2b86c5b913b,7cdf272d46ad9b658ef8f5d8485af0eeb17cae6d,antirez,antirez@gmail.com,Tue Sep 18 13:22:05 2018 +0200,1537269725,Modules: rename the reused static client to something more general.,10.0,8.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4709.0,172.0,0.0017592592592592595,11064.0,569.421052631579,5748.0,None,False,,
42366959ecb9af43b5113ef4bcb4c49611859cba,a344c4cfade5350467baf12a5d255b75eed428ac,jem,youjh1990@gmail.com,Tue Sep 18 20:42:09 2018 +0800,1537274529,ignore vscode conf dir,1.0,0.0,".gitignore,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,30.0,30.0,804.0954166666667,1.0,1.0012436335032793,0.0,None,False,,
7cdf272d46ad9b658ef8f5d8485af0eeb17cae6d,744fe7f348c82a6f55aab43f140a540d298747cf,antirez,antirez@gmail.com,Wed Sep 19 11:20:52 2018 +0200,1537348852,Module cluster flags: initial vars / defines added.,20.0,0.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,2.139353872167201,16.0,2550.0,1104.0,52.413046296296294,11067.0,1.0267637377876568,5753.0,None,False,,
744fe7f348c82a6f55aab43f140a540d298747cf,c202ba2b35100b557946d578d67085791997e2f0,antirez,antirez@gmail.com,Wed Sep 19 11:31:22 2018 +0200,1537349482,Module cluster flags: add hooks for NO_REDIRECTION flag.,14.0,4.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER",3.0,1.0,1.0,1.3516441151533922,16.0,3388.0,826.0,0.007291666666666666,11071.0,84.80952380952381,5756.0,None,False,,
c202ba2b35100b557946d578d67085791997e2f0,777cc5b98738df0156b1c822d7fb7851b5ffb4a6,antirez,antirez@gmail.com,Wed Sep 19 11:43:37 2018 +0200,1537350217,Module cluster flags: add hooks for NO_FAILOVER flag.,4.0,2.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5692.0,551.0,0.008506944444444444,11073.0,118.55102040816328,5757.0,None,False,,
777cc5b98738df0156b1c822d7fb7851b5ffb4a6,3213e8de921ef55896f740fb55e9469bbe2a22c4,antirez,antirez@gmail.com,Wed Sep 19 12:02:37 2018 +0200,1537351357,Module cluster flags: add RM_SetClusterFlags() API.,33.0,0.0,"src/cluster.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,1.0,0.928604024021932,16.0,3622.0,795.0,0.32900077160493824,11075.0,26.94882459374689,5760.0,None,False,,
3213e8de921ef55896f740fb55e9469bbe2a22c4,0d6f11f4d1748d0e8b35032338a1f4d927838a49,antirez,antirez@gmail.com,Wed Sep 19 16:17:20 2018 +0200,1537366640,Module cluster flags: use RM_SetClusterFlags() in the example.,11.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/hellocluster.c,CAS_DELIMITER",2.0,1.0,2.0,0.4394969869215134,16.0,2422.5,178.0,3.1214467592592583,11077.5,3.906761222891866,5762.0,None,False,,
0d6f11f4d1748d0e8b35032338a1f4d927838a49,98a64523c451d9f6519342b78a857a4aa729cf58,Andrey Bugaevskiy,bugaevskiy@yandex-team.ru,Wed Sep 19 19:58:39 2018 +0300,1537376319,Prevent RDB autosave from overwriting full resync resultsDuring the full database resync we may still have unsaved changesnon the receiving side. This causes a race condition betweennsynced data rename/load and the rename of rdbSave tempfile.n,7.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2721.0,221.0,9.077152777777778,0.0,0.0,0.0,None,False,,
0d6f11f4d1748d0e8b35032338a1f4d927838a49,8b87876094d8897ecca25cb161b9ceadc975279f,Guy Korland,gkorland@gmail.com,Fri Sep 21 02:46:31 2018 +0300,1537487191,add missing argument to function doc,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2399.0,147.0,22.32828703703704,5.0,1.0447862390133758,5.0,Feature Addition,False,,
0d6f11f4d1748d0e8b35032338a1f4d927838a49,c5e0bc1070f7b8cbe6c2b3467cd03646bcc96318,antirez,antirez@gmail.com,Fri Sep 21 17:54:06 2018 +0200,1537545246,Modules: dictionary API work in progress #1.,95.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.14609425012013633,16.0,2600.5,246.0,2.15564236111111,11079.5,1.3578478844235855,5764.0,None,False,True,"[""86fb7b20bfb4bb29a73b48a483d487749bd41de4""]"
c5e0bc1070f7b8cbe6c2b3467cd03646bcc96318,bb64c7d8b25b6253172d9af41a600a0640a725d3,antirez,antirez@gmail.com,Mon Sep 24 11:16:50 2018 +0200,1537780610,Modules: dictionary API work in progress #2: Del API.,17.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4830.0,176.0,2.7241203703703705,11081.0,1.3670909739807278,5765.0,None,False,,
bb64c7d8b25b6253172d9af41a600a0640a725d3,14b2f7b033ab7445146ba44940297cb97473aebe,antirez,antirez@gmail.com,Mon Sep 24 11:44:45 2018 +0200,1537782285,Modules: dictionary API work in progress #3: Iterator creation.,41.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4845.0,177.0,0.019386574074074073,11082.0,52.58208955223882,5766.0,None,False,,
0d6f11f4d1748d0e8b35032338a1f4d927838a49,3a27b3d0d85d56ecd758b56c6af477ae5ff08a76,Pavel Skuratovich,chupaka@gmail.com,Mon Sep 24 16:14:36 2018 +0300,1537794876,Fix typo in comment,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1378.0,193.0,13.155439814814816,0.0,0.0,0.0,Corrective,True,,
14b2f7b033ab7445146ba44940297cb97473aebe,3968550135f48b8caf3dee76fc50a5e4fe4af1fb,antirez,antirez@gmail.com,Mon Sep 24 16:43:47 2018 +0200,1537800227,Modules: dictionary API work in progress #4: reseek API.,25.0,6.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4885.0,178.0,0.20766203703703706,11083.0,5.815516664808827,5767.0,None,False,,
3968550135f48b8caf3dee76fc50a5e4fe4af1fb,c7e0c410d6b22ae70907bd135f95420f45d3ac89,antirez,antirez@gmail.com,Mon Sep 24 17:20:00 2018 +0200,1537802400,"Modules: change RedisModuleString API to allow NULL context.The burden of having to always create RedisModuleString objects within anmodule context was too much, especially now that we have threadednoperations and modules are doing more interesting things. The context innthe string API is currently only used for automatic memory managemnet,nso now the API was modified so that the user can opt-out this feature bynpassing a NULL context.n",33.0,12.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4904.0,179.0,0.025150462962962958,11084.0,40.76069949378739,5768.0,None,False,,
c7e0c410d6b22ae70907bd135f95420f45d3ac89,448d696549dc156fc26f93208d4e2a52d655dcea,antirez,antirez@gmail.com,Tue Sep 25 12:31:43 2018 +0200,1537871503,"Modules: dictionary API work in progress #5: rename API for consistency.By using the C suffix for functions getting pointer/len, we can do thensame in the future for other modules APIs that need a variant withnpointer/len and that are now accepting a RedisModuleString.n",25.0,25.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4925.0,180.0,0.7998032407407407,11085.0,2.250307511974878,5769.0,None,False,,
448d696549dc156fc26f93208d4e2a52d655dcea,b6c794acf62223b9b46a14541f3b749969b378bf,antirez,antirez@gmail.com,Tue Sep 25 12:45:02 2018 +0200,1537872302,Modules: dictionary API WIP #6: implement automatic memory management.,21.0,7.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4925.0,181.0,0.009247685185185185,11086.0,109.1351689612015,5770.0,None,False,,
b6c794acf62223b9b46a14541f3b749969b378bf,58ac1f8bbe0f705e59b25b40fa00477dd79cc5e9,antirez,antirez@gmail.com,Tue Sep 25 12:58:15 2018 +0200,1537873095,"Modules: dictionary API WIP #7: don't store the context.Storing the context is useless, because we can't really reuse thatnlater. For instance in the API RM_DictNext() that returns anRedisModuleString for the next key iterated, the user should pass thennew context, because we may run the keys of the dictionary in andifferent context of the one where the dictionary was created. Also thendictionary may be created without a context, but we may still demandnautomatic memory management for the returned strings while iterating.n",7.0,8.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4939.0,182.0,0.00917824074074074,11087.0,109.95334174022699,5771.0,None,False,,
58ac1f8bbe0f705e59b25b40fa00477dd79cc5e9,fb1d5717dedf731ed2678b0340b34ea6bcbc64f7,antirez,antirez@gmail.com,Tue Sep 25 16:24:32 2018 +0200,1537885472,Modules: dictionary API WIP #8: Iterator next/prev.,42.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4938.0,183.0,0.14325231481481482,11088.0,7.980689989496647,5772.0,None,False,,
fb1d5717dedf731ed2678b0340b34ea6bcbc64f7,3ff82790e11bac25db7d0e75d8a27382526161c5,antirez,antirez@gmail.com,Tue Sep 25 16:49:46 2018 +0200,1537886986,Modules: dictionary API WIP #9: iterator returning string object.,23.0,6.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4980.0,184.0,0.01752314814814815,11089.0,58.06737120211361,5773.0,None,False,,
3ff82790e11bac25db7d0e75d8a27382526161c5 3a27b3d0d85d56ecd758b56c6af477ae5ff08a76,cf7475b9b85db45637250ee2cbadba5540760e27,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 25 17:15:34 2018 +0200,1537888534,Merge pull request #5377 from Chupaka/patch-1Fix typo in comment,,,,,,,,,,,,,,,Merge,False,,
cf7475b9b85db45637250ee2cbadba5540760e27 8b87876094d8897ecca25cb161b9ceadc975279f,1d6711a7645cd11bea2e55a438e7a25891117cd6,Salvatore Sanfilippo,antirez@gmail.com,Tue Sep 25 17:18:50 2018 +0200,1537888730,Merge pull request #5373 from gkorland/patch-5add missing argument to function doc,,,,,,,,,,,,,,,Merge,False,,
3ff82790e11bac25db7d0e75d8a27382526161c5,1e585d01deb133e1d000cb3cefe4f8e60ab8f129,antirez,antirez@gmail.com,Wed Sep 26 13:39:01 2018 +0200,1537961941,Modules: dictionary API WIP #10: export API to modules.,60.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,2731.0,257.0,2.8451967592592595,11090.5,1.664213192819587,5775.0,None,False,,
1e585d01deb133e1d000cb3cefe4f8e60ab8f129 1d6711a7645cd11bea2e55a438e7a25891117cd6,bec4bfaa0b4bb63336ebbbbf893e3f9db0000423,antirez,antirez@gmail.com,Wed Sep 26 13:39:16 2018 +0200,1537961956,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
bec4bfaa0b4bb63336ebbbbf893e3f9db0000423,6c3bfb00fc17ac1a1c3ba75d2945f8d189415c8f,antirez,antirez@gmail.com,Wed Sep 26 17:41:08 2018 +0200,1537976468,Modules: fix top comment of hellotimer.c,1.0,1.0,"src/modules/hellotimer.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,79.0,2.0,167.19502314814815,11092.0,1.005981039274799,5776.0,None,False,,
6c3bfb00fc17ac1a1c3ba75d2945f8d189415c8f,bbe18eacda69797aded8686a63e853b11fd4e222,antirez,antirez@gmail.com,Wed Sep 26 17:42:00 2018 +0200,1537976520,Modules: remove useless defines in hellotimer.c,6.0,4.0,"src/modules/Makefile,CAS_DELIMITER,src/modules/hellotimer.c,CAS_DELIMITER",2.0,1.0,1.0,0.8812908992306927,15.0,65.5,15.0,89.85350694444445,11093.5,1.0055646223978782,5778.0,None,False,,
bbe18eacda69797aded8686a63e853b11fd4e222,880ca077195bdb483d6d7e7b0f8c713dc7a16b67,antirez,antirez@gmail.com,Wed Sep 26 17:52:07 2018 +0200,1537977127,Modules: hellodict example WIP #1: SET command.,74.0,0.0,"src/modules/hellodict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,11095.0,0.0,5779.0,None,False,,
880ca077195bdb483d6d7e7b0f8c713dc7a16b67,20f047965c1382219616e27afa51d72c0001895c,antirez,antirez@gmail.com,Thu Sep 27 11:22:43 2018 +0200,1538040163,Modules: hellodict example WIP #1: GET command.,18.0,0.0,"src/modules/hellodict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,74.0,1.0,0.7295833333333334,11096.0,2.370645345516848,5780.0,None,False,,
20f047965c1382219616e27afa51d72c0001895c,7af83a0c11615d4c131ce0a81560450d7d7632c5,antirez,antirez@gmail.com,Thu Sep 27 11:39:58 2018 +0200,1538041198,Modules: Modules: dictionary API WIP #11: DictCompareC API.,18.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5017.0,186.0,0.9173263888888888,11097.0,2.090124531587115,5781.0,None,False,,
7af83a0c11615d4c131ce0a81560450d7d7632c5,80bde9844b7a88650bfd047dc913cc1da444e49c,antirez,antirez@gmail.com,Thu Sep 27 11:43:48 2018 +0200,1538041428,Modules: Modules: dictionary API WIP #12: DictCompare API.,8.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5035.0,187.0,0.002662037037037037,11098.0,376.6521739130435,5782.0,None,False,,
80bde9844b7a88650bfd047dc913cc1da444e49c,0aecb135c9fa0839d9f65f855a84957e3e54d747,antirez,antirez@gmail.com,Thu Sep 27 11:46:22 2018 +0200,1538041582,Modules: Modules: dictionary API WIP #13: Compare API exported.,6.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,2774.0,261.0,0.4617766203703704,11099.5,282.0608678244495,5784.0,None,False,,
0aecb135c9fa0839d9f65f855a84957e3e54d747,5aa347b3774891b8babf1347bde451382f514dea,antirez,antirez@gmail.com,Thu Sep 27 17:01:32 2018 +0200,1538060492,Modules: hellodict example WIP #3: KEYRANGE.,40.0,0.0,"src/modules/hellodict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,92.0,2.0,0.23528935185185185,11101.0,5.250086083919523,5785.0,None,False,,
98a64523c451d9f6519342b78a857a4aa729cf58,466c277b4fedefd7fda42959e3e68177a6de254b,Andrey Bugaevskiy,bugaevskiy@yandex-team.ru,Thu Sep 27 19:38:58 2018 +0300,1538066338,Move child termination to readSyncBulkPayload,6.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2728.0,222.0,7.986331018518517,1.0,1.1252139433841677,1.0,None,False,,
0d6f11f4d1748d0e8b35032338a1f4d927838a49,fc9b4e79589c049276ff4c7cf536b49d700f8cee,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Sep 28 12:06:43 2018 +0800,1538107603,"bugfix: replace lastcmd with cmd when rewrite BRPOPLPUSH as RPOPLPUSHThere are two problems if we use lastcmd:nn1. BRPOPLPUSH cannot be rewrited as RPOPLPUSH in multi/execnIn mulit/exec context, the lastcmd is exec.n2. Redis will crash when execute RPOPLPUSH loading from AOFnIn fakeClient, the lastcmd is NULL.n",1.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,777.0,79.0,44.630381944444466,115.0,1.0224062613052425,111.0,Corrective,True,,
5aa347b3774891b8babf1347bde451382f514dea,08c26591e38c8797e554ee209f7c2a718df302ab,antirez,antirez@gmail.com,Fri Sep 28 13:00:41 2018 +0200,1538132441,Try to avoid issues with GCC pragmas and older compilers.See issue #5394.n,7.0,4.0,"src/lzf_d.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,188.0,4.0,116.92096064814815,11102.0,1.0085527863819843,5786.0,None,False,,
1d6711a7645cd11bea2e55a438e7a25891117cd6,ecc48369ce2f890922e462bfe82e4e26cbb8beba,Bruce Merry,bmerry@gmail.com,Sat Sep 29 21:48:08 2018 +0200,1538250488,"Fix invalid use of sdsZmallocSize on an embedded stringsdsZmallocSize assumes a dynamically allocated SDS. When given a stringnobject created by createEmbeddedStringObject, it calls zmalloc_size on anpointer that isn't the one returned by zmallocn",1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2451.0,197.0,19.19383101851852,0.0,0.0,0.0,Corrective,True,,
08c26591e38c8797e554ee209f7c2a718df302ab,f03aed3ca9b5e45635707b1b28011cedbd8914bc,Oran Agra,oran@redislabs.com,Sun Sep 30 11:37:19 2018 +0300,1538296639,fix #5024 - commandstats for multi-exec were logged as EXEC.this was broken a while back by ba9154d7e7bf959b002533384319a1e90545447bnthe purpose of which was to fix commandstats for GEOADDn,63.0,2.0,"src/server.c,CAS_DELIMITER,tests/unit/introspection-2.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5381411852224502,16.0,2107.5,232.0,423.84304398148146,115.5,1.0462000196599672,23.0,Corrective,True,,
1d6711a7645cd11bea2e55a438e7a25891117cd6,8fd1031b10dec256d5b365b278815f9d8444e601,Bruce Merry,bmerry@gmail.com,Sun Sep 30 11:49:03 2018 +0200,1538300943,"Fix incorrect memory usage accounting in zreallocWhen HAVE_MALLOC_SIZE is false, each call to zrealloc causes used_memorynto increase by PREFIX_SIZE more than it should, due to mis-matchednaccounting between the original zmalloc (which includes PREFIX size innits increment) and zrealloc (which misses it from its decrement).nnI've also supplied a command-line test to easily demonstrate thenproblem. It's not wired into the test framework, because I don't knownTCL so I'm not sure how to automate it.n",24.0,2.0,"src/server.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",3.0,1.0,1.0,0.9912642605354288,16.0,1582.333333333333,304.0,96.93372299382715,2.0,7.6973474565411415,3.0,Corrective,True,,
08c26591e38c8797e554ee209f7c2a718df302ab,9e0e5ccbf4600bde74309bd6de3e6a722357498e,antirez,antirez@gmail.com,Mon Oct 1 11:38:58 2018 +0200,1538386738,Fix XINFO comment for consistency.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2399.0,148.0,10.411423611111113,11103.0,1.0960483443333144,5787.0,Corrective,True,,
08c26591e38c8797e554ee209f7c2a718df302ab,86fb7b20bfb4bb29a73b48a483d487749bd41de4,Hamid Alaei,hamid.a85@gmail.com,Mon Oct 1 13:57:25 2018 +0330,1538389645,fix dict get on not found,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5045.0,189.0,4.028506944444445,0.0,0.0,0.0,Corrective,True,,
9e0e5ccbf4600bde74309bd6de3e6a722357498e 86fb7b20bfb4bb29a73b48a483d487749bd41de4,1da93f85cc553ae5cc80488b5d9aed1d3499b647,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 1 13:22:33 2018 +0200,1538392953,Merge pull request #5400 from halaei/fix-dict-get-on-not-foundfix dict get on not found,,,,,,,,,,,,,,,Merge,False,,
1da93f85cc553ae5cc80488b5d9aed1d3499b647 f03aed3ca9b5e45635707b1b28011cedbd8914bc,cd2ee8b1139873121cee10916678ed12a4d6b60e,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 1 13:24:49 2018 +0200,1538393089,Merge pull request #5396 from oranagra/cmdstats_execfix #5024 - commandstats for multi-exec were logged as EXEC.,,,,,,,,,,,,,,,Merge,False,,
cd2ee8b1139873121cee10916678ed12a4d6b60e 8fd1031b10dec256d5b365b278815f9d8444e601,9ce638695cebc0e88f6cad213ecec480c75eee26,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 1 13:28:53 2018 +0200,1538393333,Merge pull request #5398 from bmerry/fix-zrealloc-accountingFix incorrect memory usage accounting in zrealloc,,,,,,,,,,,,,,,Merge,False,,
9ce638695cebc0e88f6cad213ecec480c75eee26 ecc48369ce2f890922e462bfe82e4e26cbb8beba,fe43406929dbf6e6316f53f891370850cd8e1c3f,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 1 13:30:42 2018 +0200,1538393442,Merge pull request #5397 from bmerry/fix-bad-zmalloc-sizeFix invalid use of sdsZmallocSize on an embedded string,,,,,,,,,,,,,,,Merge,False,,
fe43406929dbf6e6316f53f891370850cd8e1c3f f4b27ae22272b9a50e970aa308ba57c3c3dbd985,e19a06d2dd43473d87e002f59e9469b3548a10dd,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 2 16:03:05 2018 +0200,1538488985,Merge pull request #5242 from oranagra/script_memscript cache memory in INFO and MEMORY includes both script code and overheads,,,,,,,,,,,,,,,Merge,False,,
e19a06d2dd43473d87e002f59e9469b3548a10dd fc9b4e79589c049276ff4c7cf536b49d700f8cee,2b09884faf85d3fbd58a85ad1902e090099101f1,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 2 16:09:22 2018 +0200,1538489362,Merge pull request #5392 from soloestoy/bugfix-brpoplpushbugfix: replace lastcmd with cmd when rewrite BRPOPLPUSH as RPOPLPUSH,,,,,,,,,,,,,,,Merge,False,,
2b09884faf85d3fbd58a85ad1902e090099101f1 a3a146052509b2d3a58e36d3511ef238153b6ac3,9fe7cd8f14592b7293bd9dcef88f8c230277948f,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 2 16:18:55 2018 +0200,1538489935,Merge pull request #5210 from soloestoy/raxinsert-in-xdelStreams: update listpack with new pointer in XDEL,,,,,,,,,,,,,,,Merge,False,,
9fe7cd8f14592b7293bd9dcef88f8c230277948f,c7c3b23787cb403bb17051fe6f805725f3bd1ae4,antirez,antirez@gmail.com,Tue Oct 2 16:20:40 2018 +0200,1538490040,streamIteratorRemoveEntry(): set back lp only if pointer changed.Most of the times the pointer will remain the same since integers ofnsimilar size don't take more space in listpacks.nnRelated to #5210.n,2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2399.0,149.0,1.195625,11104.0,1.8363826450601148,5788.0,None,False,,
c7c3b23787cb403bb17051fe6f805725f3bd1ae4,73a78adf13ca37ba101a66a4f3d13e2a129f636c,antirez,antirez@gmail.com,Tue Oct 2 16:26:30 2018 +0200,1538490390,Fix printf type mismatch in genRedisInfoString().,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4198.0,233.0,2.1926736111111107,11105.0,1.4560642290455903,5789.0,Corrective,True,,
73a78adf13ca37ba101a66a4f3d13e2a129f636c,9d4f51e1ff84af82157a3f2b07741ef1cb0a813e,antirez,antirez@gmail.com,Tue Oct 2 19:36:33 2018 +0200,1538501793,"Listpack: optionally force reallocation on inserts.This is useful in order to spot bugs where we failnat updating the pointer returned by the insertionnfunction. Normally often the same pointer is returned,nmaking it harder than needed to spot bugs.nnRelated to #5210.n",20.0,0.0,"src/listpack.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,783.0,4.0,93.50813657407407,11106.0,1.0106942565282309,5790.0,None,False,,
9d4f51e1ff84af82157a3f2b07741ef1cb0a813e,32e0d2376fe91e76be04bb62825af5d95737b13e,antirez,antirez@gmail.com,Tue Oct 2 19:44:54 2018 +0200,1538502294,streamAppendItem(): Update the radix tree pointer only if changed.,2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2400.0,150.0,0.1418287037037037,11107.0,8.05075893585768,5791.0,None,False,,
32e0d2376fe91e76be04bb62825af5d95737b13e,87264235cc59f9ad2b478e2d4d7c3104cceb9fdc,Hamid Alaei,hamid.a85@gmail.com,Thu Oct 4 17:02:10 2018 +0330,1538659930,fix timer context selected database,3.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5045.0,190.0,3.128298611111111,1.0,1.3196625783894778,1.0,Corrective,True,,
32e0d2376fe91e76be04bb62825af5d95737b13e,68c0e6e3313a5d76a6f352f8e9cd0376d9d52737,antirez,antirez@gmail.com,Thu Oct 4 17:34:06 2018 +0200,1538667246,xclaimCommand(): fix comment typos.,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2401.0,151.0,1.909166666666667,11108.0,1.5237887385421214,5792.0,None,False,,
68c0e6e3313a5d76a6f352f8e9cd0376d9d52737,ce8b6ede3477b63023dc458ac43bb798536d460e,antirez,antirez@gmail.com,Fri Oct 5 18:29:23 2018 +0200,1538756963,Fix typo in design comment of bio.c.,1.0,1.0,"src/bio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,268.0,30.0,30.318171296296292,11109.0,1.0329835196927646,5793.0,Corrective,True,,
ce8b6ede3477b63023dc458ac43bb798536d460e,3d07ed983e8bc55e7d066558de0244bc77dbeba3,antirez,antirez@gmail.com,Fri Oct 5 18:30:45 2018 +0200,1538757045,Fix typo in replicationCron() comment.,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2727.0,223.0,7.994293981481483,11110.0,1.1250892201758491,5794.0,Corrective,True,,
3d07ed983e8bc55e7d066558de0244bc77dbeba3,534c3bc21a256e113265ff1af6724af5ac4c9f9c,O(u00cau0092),sarikayaziya@gmail.com,Sun Oct 7 13:37:58 2018 +0200,1538912278,Fix typo,1.0,1.0,"src/rax.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1810.0,11.0,98.25912037037035,0.0,0.0,0.0,Corrective,True,,
3d07ed983e8bc55e7d066558de0244bc77dbeba3 534c3bc21a256e113265ff1af6724af5ac4c9f9c,8507c3f26e3435de0d44122d9be206fd1b8265dc,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 8 11:34:42 2018 +0200,1538991282,Merge pull request #5422 from ziyasal/patch-1Fix typo in the comment of raxSeekGreatest function,,,,,,,,,,,,,,,Merge,False,,
8507c3f26e3435de0d44122d9be206fd1b8265dc 60acac4cd02913385c461465d4cca06d6c015ba7,e5f1de144807373b2f42f82bb44829a8a4cc85cd,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 8 12:00:00 2018 +0200,1538992800,Merge pull request #5141 from soloestoy/fix-xtrim-inconsistencyFix XTRIM and XADD with MAXLEN inconsistency,,,,,,,,,,,,,,,Merge,False,,
e5f1de144807373b2f42f82bb44829a8a4cc85cd,3e78344d878fbbd6fdc566c210f5d834f7ac147e,antirez,antirez@gmail.com,Mon Oct 8 12:05:20 2018 +0200,1538993120,Refactoring of XADD / XTRIM MAXLEN rewriting.See #5141.n,15.0,22.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2401.0,152.0,3.771689814814815,11111.0,1.2651331496222469,5795.0,Feature Addition,False,,
3e78344d878fbbd6fdc566c210f5d834f7ac147e,ec511fa709f3c8fc74d26ca52114dcb9add754cc,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 9 13:11:02 2018 +0800,1539061862,Streams: add a new command XTREAMXSTREAM CREATE <key> <id or *> -- Create a new empty stream.nXSTREAM SETID <key> <id or $>  -- Set the current stream ID.n,67.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.22349355095255533,16.0,2912.333333333333,600.0,9.078796296296296,117.0,1.0752414954591492,114.0,None,False,,
ec511fa709f3c8fc74d26ca52114dcb9add754cc,5f3adbee33d555d436b03d19f32ce903da36252b,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 9 15:21:08 2018 +0800,1539069668,Streams: add tests for XSTREAM command,39.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,365.0,15.0,82.93452546296297,119.0,1.0120577044893877,2.0,None,False,,
5f3adbee33d555d436b03d19f32ce903da36252b,b3e80d2f654a66358c53addffd34945363cce2bb,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Oct 8 21:23:38 2018 +0800,1539005018,Stream & AOF: rewrite stream in correct way,32.0,16.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1750.0,180.0,67.2667824074074,120.0,1.0148661785834114,115.0,None,False,,
b3e80d2f654a66358c53addffd34945363cce2bb,3094eb36263e602731840ededd301ff21e7981d4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 9 15:45:58 2018 +0800,1539071158,Streams: add tests for aof rewrite,23.0,0.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,404.0,16.0,0.01724537037037037,121.0,58.98657718120807,3.0,None,False,,
3094eb36263e602731840ededd301ff21e7981d4,480e2994369de43e3b13019ee9995906d68dd14e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 9 16:22:30 2018 +0800,1539073350,Streams: rewrite id in XSTREAM CREATE *,4.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2459.0,154.0,0.13296296296296295,122.0,8.520891364902509,116.0,None,False,,
3e78344d878fbbd6fdc566c210f5d834f7ac147e eb87da6127c605be06073903a0bbaff792b90d70,1a476b69adbcac12a8348375d941f965ff7977a9,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 9 11:47:04 2018 +0200,1539078424,Merge pull request #5201 from soloestoy/abort-if-lost-exec-aof-loadAOF: discard if we lost EXEC when loading aof,,,,,,,,,,,,,,,Merge,False,,
1a476b69adbcac12a8348375d941f965ff7977a9,db86dfb9856f0c507b286e2107b92cc04d6affa0,antirez,antirez@gmail.com,Tue Oct 9 11:51:04 2018 +0200,1539078664,"aof.c: improve indentation and change warning message.Related to #5201.nnI removed the !!! Warning part since compared to the other errors, anmissing EXEC is in theory a normal happening in the AOF file, at leastnin theory: may happen in a differnet number of situations, and it'snprobably better to don't give the user the feeling that something reallynbad happened.n",11.0,4.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1766.0,181.0,0.8523842592592593,11112.0,2.1731798060994487,5796.0,None,False,,
db86dfb9856f0c507b286e2107b92cc04d6affa0 fbef85ca5aca774c7533c6e0760edfd6258948c7,6660458a4c349bcca7a733003b47a7230553c58e,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 9 12:56:08 2018 +0200,1539082568,Merge pull request #4804 from soloestoy/fix-debug-loaddebug: avoid free client unexpectedly when reload & loadaof,,,,,,,,,,,,,,,Merge,False,,
6660458a4c349bcca7a733003b47a7230553c58e,69c30965eb15ed86acadd8e9db79feb7b7633497,antirez,antirez@gmail.com,Tue Oct 9 13:15:41 2018 +0200,1539083741,Introduce protectClient() + some refactoring.The idea is to have an API for the cases like -BUSY state and DEBUGnRELOAD where we have to manually deinstall the read handler.nSee #4804.n,60.0,18.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.2351933818192415,16.0,2163.5,534.0,14.547777777777775,11113.5,1.0345203887277856,5798.0,Corrective,True,,
69c30965eb15ed86acadd8e9db79feb7b7633497,929c686ccee0aacc567a9892931ae46c82a2e8cd,antirez,antirez@gmail.com,Tue Oct 9 13:18:25 2018 +0200,1539083905,Actually use the protectClient() API where needed.Related to #4804.n,8.0,9.0,"src/debug.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.9975025463691152,16.0,1854.0,353.0,40.90969328703704,11115.5,1.0130387853937255,5800.0,None,False,,
929c686ccee0aacc567a9892931ae46c82a2e8cd,8e2bbe91050342b1d87a44b2bb3bf557047efe59,antirez,antirez@gmail.com,Tue Oct 9 13:25:53 2018 +0200,1539084353,"Free protected clients asynchronously.Related to #4840.nnNote that when we re-enter the event loop with aeProcessEvents() wendon't process timers, nor before/after sleep callbacks, so we shouldnnever end calling freeClientsInAsyncFreeQueue() when re-entering thenloop.n",7.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2220.0,321.0,0.007083333333333333,11117.0,142.17647058823533,5801.0,None,False,,
8e2bbe91050342b1d87a44b2bb3bf557047efe59,35b7296ff4ec8170a8a076bbf0f462c178b3df5f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 9 20:34:11 2018 +0800,1539088451,Avoid recreate write handler for protected client.,4.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2227.0,322.0,0.04743055555555555,123.0,22.08345534407028,117.0,Feature Addition,False,,
8e2bbe91050342b1d87a44b2bb3bf557047efe59 35b7296ff4ec8170a8a076bbf0f462c178b3df5f,29bfe4655c111e8a1b00431696fff724dca904f6,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 9 18:02:56 2018 +0200,1539100976,Merge pull request #5428 from soloestoy/client-protectedAvoid recreate write handler for protected client.,,,,,,,,,,,,,,,Merge,False,,
8e2bbe91050342b1d87a44b2bb3bf557047efe59,4eedb0bf94026002d3c5627405d59270d71f7cc1,antirez,antirez@gmail.com,Wed Oct 10 11:03:25 2018 +0200,1539162205,changelog.tcl: get optional argument for number of commits.,8.0,3.0,"utils/releasetools/changelog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,30.0,3.0,452.91583333333335,11118.0,1.0022079157459352,92.0,None,False,,
4eedb0bf94026002d3c5627405d59270d71f7cc1,c9d9ae7baaf717607db3d4ad81597dc99d0c002c,antirez,antirez@gmail.com,Wed Oct 10 12:51:02 2018 +0200,1539168662,Fix propagation of consumer groups last ID.Issue #5433.n,56.0,9.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.3834468115900002,16.0,2937.0,605.0,1.1073804012345678,11120.0,1.5202181023559278,5804.0,Corrective,True,,
c9d9ae7baaf717607db3d4ad81597dc99d0c002c 29bfe4655c111e8a1b00431696fff724dca904f6,1048b5d13a44a0d56535ab68f883a3a0dd0bb9d5,antirez,antirez@gmail.com,Wed Oct 10 12:51:39 2018 +0200,1539168699,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1048b5d13a44a0d56535ab68f883a3a0dd0bb9d5,cfad5e45872a826fd751074ef564923cd7dfa25d,antirez,antirez@gmail.com,Wed Oct 10 17:32:17 2018 +0200,1539185537,Test: consumer group last ID slave propagation test.This is a regression for #5433.n,39.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,99.0,6.0,90.16458333333334,11122.0,1.011090829270547,802.0,Preventative,False,,
cfad5e45872a826fd751074ef564923cd7dfa25d,fbfd61b4714d3f0fabc6cb842b29e13262d5ab30,antirez,antirez@gmail.com,Wed Oct 10 17:37:37 2018 +0200,1539185857,Test: cgroup propagation test also for NOACK variant.Related to #5433.n,39.0,29.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,138.0,7.0,0.003703703703703704,11123.0,271.0,803.0,Preventative,False,,
fbfd61b4714d3f0fabc6cb842b29e13262d5ab30,91685eeeb1462edfc12da2e079e76bdbeec0eddb,antirez,antirez@gmail.com,Thu Oct 11 13:00:55 2018 +0200,1539255655,LOLWUT: capitalize Nees.,1.0,1.0,"src/lolwut5.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,282.0,1.0,27.01731481481481,11124.0,1.037013300798185,5805.0,None,False,,
91685eeeb1462edfc12da2e079e76bdbeec0eddb,4dc48a0d11fb7765a1a9b7a5908d9c9e64c10b8e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Oct 11 21:12:09 2018 +0800,1539263529,Streams: bugfix XCLAIM should propagate group name not consumer name,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2508.0,156.0,1.0979976851851851,124.0,1.9107487324359367,118.0,None,False,,
4dc48a0d11fb7765a1a9b7a5908d9c9e64c10b8e,183ef7ae9bbc91d3bba0735df1669e95dc53a24e,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Oct 11 21:20:46 2018 +0800,1539264046,"Streams: XCLAIM ignore minidle if NACK is created by FORCEBecause the NACK->consumer is NULL, if idletime < minidlenthe NACK does not belong to any consumer, then redis will crashnin XPENDING.n",4.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2508.0,157.0,0.005983796296296296,125.0,168.11798839458413,119.0,None,False,,
183ef7ae9bbc91d3bba0735df1669e95dc53a24e,08ae522ff942cd9ff5386a73ead6b27846766a8f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Oct 11 21:44:20 2018 +0800,1539265460,Streams: propagate lastid in XCLAIM when it has effect,13.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2510.0,158.0,0.01636574074074074,126.0,62.10325318246111,120.0,None,False,,
08ae522ff942cd9ff5386a73ead6b27846766a8f,5cc052230355b61442fa911b5fc4150ea098b4de,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Oct 11 21:46:47 2018 +0800,1539265607,"Streams: panic if streamID invalid after check, should not be possible.",2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2517.0,159.0,0.0017013888888888886,127.0,588.7551020408164,121.0,None,False,,
91685eeeb1462edfc12da2e079e76bdbeec0eddb,7f999d2925c05612630621502b85ab93f3b8ca46,Sergey Chupov,scadgek@live.com,Fri Oct 12 22:56:51 2018 +0300,1539374211,fixed typos in readme,2.0,2.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,446.0,26.0,31.46185185185185,0.0,0.0,0.0,Corrective,True,,
91685eeeb1462edfc12da2e079e76bdbeec0eddb,3c140e7bcd9856c4a2faf3154fcf8f390645c8f3,antirez,antirez@gmail.com,Sat Oct 13 14:17:11 2018 +0200,1539433031,Test: avoid time related false positive in RESTORE test.,1.0,1.0,"tests/unit/dump.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,368.0,17.0,53.146574074074074,11125.0,1.0188158882754368,804.0,Preventative,False,,
3c140e7bcd9856c4a2faf3154fcf8f390645c8f3,f54cde3a15f3ad0850215c22f3f7b628bf1f817c,antirez,antirez@gmail.com,Sat Oct 13 14:17:32 2018 +0200,1539433052,Rax: radix tree updated to latest version from antirez/rax.,233.0,68.0,"src/rax.c,CAS_DELIMITER,src/rax.h,CAS_DELIMITER",2.0,1.0,1.0,0.5470517707971381,16.0,997.0,21.0,55.157037037037036,11126.5,1.0874859632852545,5807.0,None,False,,
f54cde3a15f3ad0850215c22f3f7b628bf1f817c,b2fd9f7e7cda64ba9b4863c141913bf31b519522,antirez,antirez@gmail.com,Mon Oct 15 11:01:37 2018 +0200,1539594097,redis.conf typo fixed: ingore -> ignore.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1378.0,194.0,20.82431712962963,11128.0,1.0480207823274628,1407.0,Corrective,True,,
b2fd9f7e7cda64ba9b4863c141913bf31b519522 7f999d2925c05612630621502b85ab93f3b8ca46,2c26278222b22fd7b485148ee4359a002f87d691,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 15 11:15:24 2018 +0200,1539594924,Merge pull request #5440 from scadgek/patch-1fixed typos in readme,,,,,,,,,,,,,,,Merge,False,,
2c26278222b22fd7b485148ee4359a002f87d691 5cc052230355b61442fa911b5fc4150ea098b4de,440574d62413a636da7deba81d26a50eca087650,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 15 11:47:21 2018 +0200,1539596841,Merge pull request #5437 from soloestoy/fix-xclaimFix xclaim,,,,,,,,,,,,,,,Merge,False,,
440574d62413a636da7deba81d26a50eca087650,820b1e6e7d561fd3aa1ee3527977b44fc8ddca49,antirez,antirez@gmail.com,Mon Oct 15 11:50:13 2018 +0200,1539597013,Streams: better naming: lastid_updated -> propagate_last_id.See #5437 but also I updated a previous usage of the same var name.n,6.0,6.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2518.0,160.0,3.8357175925925926,11129.0,1.2607074102460425,5808.0,None,False,,
820b1e6e7d561fd3aa1ee3527977b44fc8ddca49,0b1784b1884ff04848b0532cc384fd2811f6eee4,antirez,antirez@gmail.com,Mon Oct 15 11:52:24 2018 +0200,1539597144,Streams: use propagate_last_id itself as streamPropagateGroupID trigger.Avoid storing the dirty value. See #5437.n,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2518.0,161.0,0.0015162037037037034,11130.0,660.5419847328244,5809.0,None,False,,
0b1784b1884ff04848b0532cc384fd2811f6eee4,3640e029d657e59f2d2c6483f0a2e5256f97afef,antirez,antirez@gmail.com,Mon Oct 15 12:01:17 2018 +0200,1539597677,Make comment about nack->consumer test for minidle more obvious.Related to #5437.n,4.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2518.0,162.0,0.006168981481481482,11131.0,163.1013133208255,5810.0,Preventative,False,,
3640e029d657e59f2d2c6483f0a2e5256f97afef 87264235cc59f9ad2b478e2d4d7c3104cceb9fdc,1caabd59b2f746f7c35900486c072e35898cb232,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 15 13:01:58 2018 +0200,1539601318,Merge pull request #5416 from halaei/fix-timer-selected-dbfix timer context selected database,,,,,,,,,,,,,,,Merge,False,,
1caabd59b2f746f7c35900486c072e35898cb232,297950e8b817dbf3f2dbbbff497fdf3a047cc8f2,hujiecs,2844633656@qq.com,Tue Oct 16 15:48:03 2018 +0800,1539676083,"several typos fixed, optimize MSETNX to avoid unnecessary loop",5.0,4.0,"src/atomicvar.h,CAS_DELIMITER,src/intset.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/quicklist.h,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",5.0,1.0,1.0,2.2810361125534238,16.0,460.8,240.0,285.2812662037037,2.0,0.8007048985735293,4.0,Corrective,True,,
1caabd59b2f746f7c35900486c072e35898cb232 480e2994369de43e3b13019ee9995906d68dd14e,af09df08d79b45302bd2d5de5d7086b18778eb44,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 16 13:10:36 2018 +0200,1539688236,"Merge pull request #5426 from soloestoy/feature-xstreamBugfix data inconsistency after aof rewrite, and add XSTREAM command.",,,,,,,,,,,,,,,Merge,False,,
af09df08d79b45302bd2d5de5d7086b18778eb44,e3446fea9eab842415ca3a3bffee0ba2745c78e5,antirez,antirez@gmail.com,Tue Oct 16 13:17:14 2018 +0200,1539688634,"Streams: XSTREAM SETID -> XSETID.Keep vanilla stream commands at toplevel, see #5426.n",17.0,67.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",3.0,1.0,1.0,0.3238144752669867,16.0,2956.666666666666,615.0,4.363043981481481,11133.0,1.1085478168281628,5813.0,None,False,,
e3446fea9eab842415ca3a3bffee0ba2745c78e5,ea78a1db329961d53ec420ac01ddb7cde42795ba,antirez,antirez@gmail.com,Tue Oct 16 16:46:13 2018 +0200,1539701173,XSETID: accept IDs based on last entry.Related to #5426.n,18.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2470.0,164.0,0.1451273148148148,11135.0,7.890501634899117,5814.0,None,False,,
ea78a1db329961d53ec420ac01ddb7cde42795ba,c1689166b71f298aec40db877e125c76c178b0ba,antirez,antirez@gmail.com,Tue Oct 16 16:48:31 2018 +0200,1539701311,Streams: rewrite empty streams with XADD MAXLEN 0. Use XSETID.Related to #5426.n,18.0,12.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1773.0,182.0,7.2065625,11136.0,1.1387624127314513,5815.0,None,False,,
c1689166b71f298aec40db877e125c76c178b0ba,b4f8268371c941b3e1a28bfcb41c55923899afbc,antirez,antirez@gmail.com,Tue Oct 16 17:28:56 2018 +0200,1539703736,Tests modified to use XADD MAXLEN 0 + XSETID.See #5426.n,12.0,26.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,427.0,17.0,7.3215046296296284,11137.0,1.1365839469599006,805.0,Feature Addition,False,,
b4f8268371c941b3e1a28bfcb41c55923899afbc,a273ce9578c4fd6e7a04b2f597785d603fefa1fa,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 16 23:47:27 2018 +0800,1539704847,Streams: rewrite empty streams with certain lastid,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1779.0,183.0,0.04092592592592593,128.0,25.434389140271488,122.0,None,False,,
a273ce9578c4fd6e7a04b2f597785d603fefa1fa,c2e4c64db46460a1ceeb24b0887976a766acb8e7,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Oct 16 23:56:26 2018 +0800,1539705386,Streams: Tests modified XSTREAM -> XSETID,2.0,2.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,413.0,18.0,0.019097222222222224,129.0,53.36363636363636,4.0,None,False,,
b4f8268371c941b3e1a28bfcb41c55923899afbc c2e4c64db46460a1ceeb24b0887976a766acb8e7,2f8f29aa0e63a198aa628296ce617214b3ae1575,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 16 18:56:55 2018 +0200,1539709015,Merge pull request #5452 from soloestoy/xsetid-lastidStreams: rewrite empty streams with certain lastid,,,,,,,,,,,,,,,Merge,False,,
f54cde3a15f3ad0850215c22f3f7b628bf1f817c,29e488cbb083f857cad7de68931082195a43c738,Damien Tournoud,damien@platform.sh,Tue Oct 16 11:47:42 2018 -0700,1539715662,"Overhead is the allocated size of the AOF buffer, not its length",2.0,2.0,"src/evict.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,1027.5,167.0,25.409103009259265,0.5,0.5098389935256235,1.0,None,False,,
2f8f29aa0e63a198aa628296ce617214b3ae1575 8d24f8b46b3c544fef33427ca1f2582d92c59dd4,3f7bc5a5d2c41b8d6be4c462a2a3b24c55ccc431,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 17 07:50:32 2018 +0200,1539755432,Merge pull request #5333 from soloestoy/stream-commands-flagScripting & Streams: some commands need right flags,,,,,,,,,,,,,,,Merge,False,,
3f7bc5a5d2c41b8d6be4c462a2a3b24c55ccc431,e2de7e75248a928280d6c739e9020d8c8adc1c0f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Oct 17 16:40:45 2018 +0800,1539765645,MULTI: OOM err if cannot free enough memory in MULTI/EXEC context,5.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4200.0,237.0,0.8913310185185185,130.0,2.1219176481281896,123.0,None,False,True,"[""7a73b7f168eb01c4cf43ab0e0348f0f2d9922cb5""]"
2f8f29aa0e63a198aa628296ce617214b3ae1575,cb27dd1a6802000eb896e0a0b5c8d50ea994655a,antirez,antirez@gmail.com,Wed Oct 17 11:27:09 2018 +0200,1539768429,XGROUP CREATE: MKSTREAM option for automatic stream creation.,29.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2483.0,165.0,0.778425925925926,11138.0,2.284643749256572,5816.0,Feature Addition,False,,
cb27dd1a6802000eb896e0a0b5c8d50ea994655a 3f7bc5a5d2c41b8d6be4c462a2a3b24c55ccc431,ab11c5ebd1adc9c6b794f275b74d5ad697c65ffe,antirez,antirez@gmail.com,Wed Oct 17 11:36:03 2018 +0200,1539768963,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ab11c5ebd1adc9c6b794f275b74d5ad697c65ffe,2e3d403349af7e23a263632cd876479241d5d72e,antirez,antirez@gmail.com,Wed Oct 17 12:04:03 2018 +0200,1539770643,Process MKSTREAM option of XGROUP CREATE at a later time.This avoids issues with having to replicate a command that producednerrors.n,28.0,17.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2507.0,166.0,0.025625,11139.0,40.02439024390244,5817.0,Feature Addition,False,True,"[""492fd5c01105ee5dc1aa73a0f19a7201e86b9815"", ""fdb575993f947425920aadc5a321daf22f0198c3""]"
2e3d403349af7e23a263632cd876479241d5d72e,492fd5c01105ee5dc1aa73a0f19a7201e86b9815,antirez,antirez@gmail.com,Wed Oct 17 12:10:52 2018 +0200,1539771052,Fix XGROUP CREATE MKSTREAM handling of .,7.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2518.0,167.0,0.004733796296296297,11140.0,212.24694376528115,5818.0,Corrective,True,,
492fd5c01105ee5dc1aa73a0f19a7201e86b9815,56871aeb600c19a0ec4d06a60cfc19a9fdf7b1e1,antirez,antirez@gmail.com,Wed Oct 17 12:11:06 2018 +0200,1539771066,Tests for XGROUP CREATE MKSTREAM.,11.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,148.0,8.0,6.773252314814815,11141.0,1.1476395612507668,806.0,Feature Addition,False,,
56871aeb600c19a0ec4d06a60cfc19a9fdf7b1e1,ad78b50f62c88b6396c5ee86cda89fc2313f77af,antirez,antirez@gmail.com,Wed Oct 17 12:57:15 2018 +0200,1539773835,Update help.h for redis-cli.,57.0,7.0,"src/help.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1148.0,16.0,111.89148148148148,11142.0,1.0089372308486728,5819.0,None,False,,
ad78b50f62c88b6396c5ee86cda89fc2313f77af,fdb575993f947425920aadc5a321daf22f0198c3,antirez,antirez@gmail.com,Wed Oct 17 13:00:35 2018 +0200,1539774035,Fix conditional in XGROUP.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2523.0,168.0,0.034525462962962966,11143.0,29.96413007039893,5820.0,Corrective,True,,
fdb575993f947425920aadc5a321daf22f0198c3,acb3b552800c6ee95a36d49b24332b7a6dd93f59,Itamar Haber,itamar@redislabs.com,Wed Oct 17 16:13:55 2018 +0300,1539782035,Corrects inline documentation of syntax,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2523.0,169.0,0.0925925925925926,73.0,11.8,70.0,Non Functional,False,,
fdb575993f947425920aadc5a321daf22f0198c3,144832ee67c058dfec9910e8953588d23ae3224c,antirez,antirez@gmail.com,Wed Oct 17 17:20:05 2018 +0200,1539789605,"Streams: use bulk replies instead of status replies.They play better with Lua scripting, otherwise Lua will see statusnreplies as ok = string which is very odd, and actually as @oranagranreasoned in issue #5456 in the rest of the Redis code base there was nonsuch concern as saving a few bytes when the protocol is emitted.n",16.0,16.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2523.0,170.0,0.08761574074074074,11144.0,12.41347424042272,5821.0,None,False,,
acb3b552800c6ee95a36d49b24332b7a6dd93f59,edeaf85cab10b2d9bc151363779f70822d679472,Itamar Haber,itamar@redislabs.com,Wed Oct 17 19:33:11 2018 +0300,1539793991,Plugs a potential underflow,1.0,0.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2523.0,171.0,0.050763888888888886,74.0,20.69904240766074,71.0,None,False,,
144832ee67c058dfec9910e8953588d23ae3224c,a6499ecac21e685c9d95dc749cd928412d4f689b,youjiali1995,zlwgx1023@gmail.com,Thu Oct 18 18:57:51 2018 +0800,1539860271,migrate: fix mismatch of RESTORE reply when some keys have expired.,8.0,6.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5699.0,553.0,29.03835648148149,3.0,1.0344372106815938,3.0,None,False,,
144832ee67c058dfec9910e8953588d23ae3224c,f30b18f4de94e3235546b1dc8fe2be2028be2b80,antirez,antirez@gmail.com,Fri Oct 19 10:39:57 2018 +0200,1539938397,"Fix again stack generation on the Raspberry Pi.The fix was removed by c8ca71d40 attempting to fix the stack generationnon ARM64, without testing if it would still work on ARM32.nNow it should work both sides.n",4.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,290.0,160.0,34.9194212962963,11145.0,1.0286373588930602,5822.0,Corrective,True,,
3f7bc5a5d2c41b8d6be4c462a2a3b24c55ccc431,7ab9cba59bb8999d80d90571632fc37bac67c165,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Oct 19 18:00:57 2018 +0800,1539943257,do not delete expired keys in KEYS command,34.0,27.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1539.0,211.0,80.24513888888889,131.0,1.012461814059349,124.0,None,False,,
f30b18f4de94e3235546b1dc8fe2be2028be2b80,5ddd507624aad7d07558e684a962b7505214ae74,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Oct 19 18:16:29 2018 +0800,1539944189,"if we read a expired key, misses++",5.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1546.0,212.0,0.010787037037037038,132.0,93.7038626609442,125.0,None,False,,
144832ee67c058dfec9910e8953588d23ae3224c,f24ad5d83140eee04bd1cda8ee19bced0de26c11,Thomas Orozco,thomas@orozco.fr,Wed Oct 17 21:04:35 2018 +0200,1539803075,"cli: pass auth through REDISCLI_AUTHThis adds support for passing a password through a REDISCLI_AUTHnenvironment variable (which is safer than the CLI), which might often bensafer than passing it through a CLI argument.nnPassing a password this way does not trigger the warning about passing anpassword through CLI arguments, and CLI arguments take precedence overnit.n",14.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10472.0,298.0,30.216527777777767,0.0,0.0,0.0,None,False,,
297950e8b817dbf3f2dbbbff497fdf3a047cc8f2,63e41ee19236d88799935e38e517b2a918cacbb3,hujie,2844633656@qq.com,Sat Oct 20 12:18:56 2018 +0800,1540009136,fix typo,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1550.0,213.0,0.7517013888888889,0.0,0.0,0.0,Corrective,True,True,"[""6aa9606995bc8ae55f01f7713bc9ed8dc88070f1""]"
63e41ee19236d88799935e38e517b2a918cacbb3,e610dbce14af98cbac60ee53248788e80f1ec6a0,hujie,2844633656@qq.com,Sun Oct 21 10:37:36 2018 +0800,1540089456,fix typo in config.c,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2274.0,236.0,37.28774305555555,1.0,1.0268184641400817,1.0,Corrective,True,,
f30b18f4de94e3235546b1dc8fe2be2028be2b80 e610dbce14af98cbac60ee53248788e80f1ec6a0,2f8912c36ccf5226f7777b132d66cb3f1c4f551b,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 22 12:17:08 2018 +0200,1540203428,"Merge pull request #5451 from hujiecs/unstableseveral typos fixed, optimize MSETNX to avoid unnecessary loop",,,,,,,,,,,,,,,Merge,False,,
f30b18f4de94e3235546b1dc8fe2be2028be2b80,c33ef454f09b4e6eefcad77b773d112223837c36,antirez,antirez@gmail.com,Mon Oct 22 12:24:02 2018 +0200,1540203842,Remove useless complexity from MSET implementation.,5.0,7.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,474.0,67.0,6.108321759259257,11146.0,1.163711087826072,5823.0,None,False,,
2f8912c36ccf5226f7777b132d66cb3f1c4f551b a6499ecac21e685c9d95dc749cd928412d4f689b,3f6893a4e294e90c2cd333c31b822dc131b0ee41,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 22 17:40:37 2018 +0200,1540222837,Merge pull request #5462 from youjiali1995/fix-migrate-expired-keysmigrate: fix mismatch of RESTORE reply when some keys have expired.,,,,,,,,,,,,,,,Merge,False,,
c33ef454f09b4e6eefcad77b773d112223837c36 3f6893a4e294e90c2cd333c31b822dc131b0ee41,0f18d8e0ed529bbb4699c8b2072656019a0dd726,antirez,antirez@gmail.com,Mon Oct 22 17:41:43 2018 +0200,1540222903,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0f18d8e0ed529bbb4699c8b2072656019a0dd726,54e8dd11ff4296b6633775c29e62222ed0244960,antirez,antirez@gmail.com,Mon Oct 22 17:43:48 2018 +0200,1540223028,Use guide comments to make changes in #5462 more obvious.,6.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5701.0,554.0,4.198576388888889,11147.0,1.238175969037124,5824.0,None,False,,
54e8dd11ff4296b6633775c29e62222ed0244960 7ab9cba59bb8999d80d90571632fc37bac67c165,3c89fb5ffd59c701071952fd89e58fefd0a84920,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 24 12:23:59 2018 +0200,1540376639,Merge pull request #5470 from soloestoy/keys-no-trigger-expiredo not delete expired keys in KEYS command,,,,,,,,,,,,,,,Merge,False,,
3c89fb5ffd59c701071952fd89e58fefd0a84920,8749fc3f6721b70c4b64e94c96577d25424b25fc,antirez,antirez@gmail.com,Wed Oct 24 12:26:27 2018 +0200,1540376787,Simplify part of the #5470 patch.,11.0,12.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1550.0,214.0,4.255219907407406,11148.0,1.2350054807412465,5825.0,None,False,,
8749fc3f6721b70c4b64e94c96577d25424b25fc 29e488cbb083f857cad7de68931082195a43c738,a2131f907a752e62c78ea6bb719daf9fe2f91402,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 24 12:28:28 2018 +0200,1540376908,"Merge pull request #5453 from damz/pr/aof-buffer-evictOverhead is the allocated size of the AOF buffer, not its length",,,,,,,,,,,,,,,Merge,False,,
a2131f907a752e62c78ea6bb719daf9fe2f91402 5ddd507624aad7d07558e684a962b7505214ae74,e8c108e938463de04bf3b7a3cd3f1dd78cfa6aaa,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 24 12:31:28 2018 +0200,1540377088,"Merge pull request #5469 from soloestoy/stat-key-miss-if-expiredif we read a expired key, misses++",,,,,,,,,,,,,,,Merge,False,,
a2131f907a752e62c78ea6bb719daf9fe2f91402,f06e8c331c98e8b307af94a36cd45948a963956b,antirez,antirez@gmail.com,Wed Oct 24 16:28:44 2018 +0200,1540391324,Fix typo in streamReplyWithRange() top comment.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2524.0,172.0,6.913576388888887,11149.0,1.1446429378587823,5826.0,Corrective,True,,
f06e8c331c98e8b307af94a36cd45948a963956b,6e11ef30e02932917ba53c72cf66681f42ea487d,antirez,antirez@gmail.com,Thu Oct 25 11:36:24 2018 +0200,1540460184,Fix XRANGE COUNT option for value of 0.,8.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2524.0,173.0,0.7969907407407407,11150.0,2.2547197211733963,5827.0,Corrective,True,,
e8c108e938463de04bf3b7a3cd3f1dd78cfa6aaa edeaf85cab10b2d9bc151363779f70822d679472,12d5be1bf2474b0da9c5deb8d835daba0624ad07,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 25 11:50:04 2018 +0200,1540461004,Merge pull request #5459 from itamarhaber/xpending_count_underflowA fix to XPENDING's count underflow,,,,,,,,,,,,,,,Merge,False,,
6e11ef30e02932917ba53c72cf66681f42ea487d 12d5be1bf2474b0da9c5deb8d835daba0624ad07,998001fbf2aeb58286c440cd55804bf43f87b30e,antirez,antirez@gmail.com,Thu Oct 25 11:50:15 2018 +0200,1540461015,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
998001fbf2aeb58286c440cd55804bf43f87b30e e2de7e75248a928280d6c739e9020d8c8adc1c0f,6dde56bf93a95e2a71a5a1247487ac45568a3e97,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 25 13:00:19 2018 +0200,1540465219,Merge pull request #5454 from soloestoy/multi-oomMULTI: OOM err if cannot free enough memory in MULTI/EXEC context,,,,,,,,,,,,,,,Merge,False,,
998001fbf2aeb58286c440cd55804bf43f87b30e,f5494b186260edd794679be8e2173e5cc7cd6977,antirez,antirez@gmail.com,Thu Oct 25 13:08:48 2018 +0200,1540465728,Add command fingerprint comment for XSETID.,3.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2530.0,174.0,0.06416666666666666,11151.0,16.584415584415588,5828.0,Feature Addition,False,,
f5494b186260edd794679be8e2173e5cc7cd6977 6dde56bf93a95e2a71a5a1247487ac45568a3e97,b8febe60b44e0ddfd5e22a7c6a4c4b33e49a2a83,antirez,antirez@gmail.com,Thu Oct 25 13:08:58 2018 +0200,1540465738,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
b8febe60b44e0ddfd5e22a7c6a4c4b33e49a2a83,0b73d0a8d2b3cb36127ffa33ec2d37f403de6944,David Carlier,devnexen@gmail.com,Fri Oct 26 14:02:09 2018 +0000,1540562529,Fix non Linux build.timezone global is a linux-ism whereas it is a function under BSD.nHere a helper to get the timezone value in a more portable manner.n,20.0,1.0,"src/server.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",3.0,1.0,1.0,0.7228578977329688,16.0,1694.333333333333,293.0,252.10510416666668,3.0,1.0398034923822623,4.0,Corrective,True,,
0b73d0a8d2b3cb36127ffa33ec2d37f403de6944,ae3bfe583e2f6c0c0cab02cd6fbbcaee86a3ba5b,David Carlier,devnexen@gmail.com,Fri Oct 26 14:12:47 2018 +0000,1540563167,needs it for the global,1.0,0.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,839.0,44.0,0.00738425925925926,5.0,136.42319749216298,5.0,None,False,,
b8febe60b44e0ddfd5e22a7c6a4c4b33e49a2a83 ae3bfe583e2f6c0c0cab02cd6fbbcaee86a3ba5b,f1408b1729c06332b2737dd874eb2132ef010db4,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 29 18:25:14 2018 +0100,1540833914,Merge pull request #5489 from devnexen/unstableFix non Linux build.,,,,,,,,,,,,,,,Merge,False,,
f1408b1729c06332b2737dd874eb2132ef010db4,0c875c7751e3672f20225ab3b20fdb0322a8e4ad,antirez,antirez@gmail.com,Tue Oct 30 13:38:41 2018 +0100,1540903121,"asyncCloseClientOnOutputBufferLimitReached(): don't free fake clients.Fake clients are used in special situations and are not linked to thennormal clients list, freeing them will always result in Redis crashingnin one way or the other.nnIt's not common to send replies to fake clients, but we have one usagenin the modules API. When a client is blocked, we associate to thenblocked client object (that is safe to manipulate in a thread), a fakenclient that accumulates replies. So because of this bug there wasnthe problem described in issue #5443.nnThe fix was verified to work with the provided example module. To writena regression is very hard and unlikely to be triggered in the future.n",1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2231.0,323.0,21.003125,11152.0,1.0476119625055795,5829.0,None,False,,
0c875c7751e3672f20225ab3b20fdb0322a8e4ad,6534b3e09ed23324e22a4b57382707f52e22ee81,David Carlier,devnexen@gmail.com,Tue Oct 30 13:23:43 2018 +0000,1540905823,Fix clang build.Some math functions require c11 standard.n,5.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,294.0,161.0,11.197060185185185,6.0,1.0893091564626132,6.0,Corrective,True,,
6534b3e09ed23324e22a4b57382707f52e22ee81,a21d1522c79363d54794016d29a7b8af60c30960,David Carlier,dcarlier@afilias.info,Tue Oct 30 14:34:45 2018 +0000,1540910085,allow flavors,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,298.0,162.0,0.0493287037037037,7.0,21.272172688878463,7.0,None,False,,
6534b3e09ed23324e22a4b57382707f52e22ee81,9d6fbf0e0019e7a2f6e11375bf01f7a02208a735,David Carlier,devnexen@gmail.com,Tue Oct 30 21:41:49 2018 +0000,1540935709,allow flavors,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,298.0,163.0,0.2965740740740741,8.0,4.371838901030284,8.0,None,False,,
a21d1522c79363d54794016d29a7b8af60c30960,cf2f5e19d9e3579a37ec82e2953fb1e606ddbc59,David Carlier,devnexen@gmail.com,Wed Oct 31 09:53:07 2018 +0000,1540979587,tweak form feedback,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,298.0,164.0,0.5078472222222222,9.0,2.9690961301791328,9.0,None,False,,
cf2f5e19d9e3579a37ec82e2953fb1e606ddbc59 9d6fbf0e0019e7a2f6e11375bf01f7a02208a735,e84d327fc1eab94ce3d9b1f63b71549c6b001963,David Carlier,devnexen@gmail.com,Wed Oct 31 09:53:25 2018 +0000,1540979605,Merge branch 'clang_build_fix_warnings' of https://github.com/devnexen/redis into clang_build_fix_warnings,,,,,,,,,,,,,,,Merge,False,,
0c875c7751e3672f20225ab3b20fdb0322a8e4ad 466c277b4fedefd7fda42959e3e68177a6de254b,6204d8c1395939c449dcc4a81466e77cfd8974d7,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 31 11:42:04 2018 +0100,1540982524,Merge pull request #5367 from nUl1/fullresync-stopbgsavePrevent RDB autosave from overwriting full resync results,,,,,,,,,,,,,,,Merge,False,,
6204d8c1395939c449dcc4a81466e77cfd8974d7,06a4acb7d36a51206507b88984678d91b5db2645,antirez,antirez@gmail.com,Wed Oct 31 11:46:28 2018 +0100,1540982788,"When replica kills a pending RDB save during SYNC, log it.This logs what happens in the context of the fix in PR #5367.n",6.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2727.0,224.0,25.76091435185185,11153.0,1.038818497912832,5830.0,Corrective,True,,
06a4acb7d36a51206507b88984678d91b5db2645,666b3437e684ae4ebe382006031d920c70c11275,antirez,antirez@gmail.com,Wed Oct 31 12:37:48 2018 +0100,1540985868,"Disable protected mode in Sentinel mode.Sentinel must be exposed, so protected mode is just an issue for usersnin case Redis was started in Sentinel mode.nnRelated to #3279 and #3329.n",1.0,0.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4502.0,248.0,50.82363425925927,11154.0,1.0196758853351344,5831.0,None,False,,
666b3437e684ae4ebe382006031d920c70c11275,fa675256c127963c74ea68f8bab22ef105bada02,antirez,antirez@gmail.com,Wed Oct 31 12:56:47 2018 +0100,1540987007,"Add support for Sentinel authentication.So far it was not possible to setup Sentinel with authenticationnenabled. This commit introduces this feature: every Sentinel will try tonauthenticate with other sentinels using the same password it isnconfigured to accept clients with.nnSo for instance if a Sentinel has a requirepass configurationnstatemnet set to foo, it will use the foo password to authenticatenwith every other Sentinel it connects to. So basically to add thenrequirepass to all the Sentinels configurations is enough in order tonmake sure that:nn1) Clients will require the password to access the Sentinels instances.n2) Each Sentinel will use the same password to connect and authenticaten   with every other Sentinel in the group.nnRelated to #3279 and #3329.n",17.0,3.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4503.0,249.0,0.01318287037037037,11155.0,76.85601404741,5832.0,Feature Addition,False,,
fa675256c127963c74ea68f8bab22ef105bada02,48d8b3d8ac8de4db033d8836986065b8a41e01dc,Guy Korland,gkorland@gmail.com,Wed Oct 31 17:33:53 2018 +0200,1541000033,Fix some typos,11.0,11.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2532.0,175.0,6.184085648148147,6.0,1.1617053929871517,6.0,Corrective,True,,
fa675256c127963c74ea68f8bab22ef105bada02 48d8b3d8ac8de4db033d8836986065b8a41e01dc,edce5150bf56df76fd7ca41c595a63a145550ed8,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 31 16:36:12 2018 +0100,1541000172,Merge pull request #5511 from gkorland/patch-1Fix some typos,,,,,,,,,,,,,,,Merge,False,,
edce5150bf56df76fd7ca41c595a63a145550ed8,e039c85bb42d7c9c9bb35a9993191a3fae90c907,Itamar Haber,itamar@redislabs.com,Fri Nov 2 22:58:16 2018 +0200,1541192296,Adds HELP to LATENCYSigned-off-by: Itamar Haber <itamar@redislabs.com>n,14.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,625.0,38.0,72.45224537037036,75.0,1.013802194740661,72.0,Feature Addition,False,,
edce5150bf56df76fd7ca41c595a63a145550ed8,5fa41e0c84e46bb1fa417d6bfb60d9429734fd5f,michael-grunder,michael.grunder@gmail.com,Sat Nov 3 15:13:28 2018 -0700,1541283208,Use typedef'd mstime_t instead of time_tThis fixes an overflow on 32-bit systems.n,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2532.0,176.0,3.2774884259259265,8.0,1.305111680056502,8.0,Corrective,True,,
edce5150bf56df76fd7ca41c595a63a145550ed8 5fa41e0c84e46bb1fa417d6bfb60d9429734fd5f,d790e2db2ebdd558c0c54f88ebf06f7884c2a387,Salvatore Sanfilippo,antirez@gmail.com,Sun Nov 4 00:25:11 2018 +0100,1541287511,Merge pull request #5521 from michael-grunder/mstime-32bit-fixUse typedef'd mstime_t instead of time_t,,,,,,,,,,,,,,,Merge,False,,
d790e2db2ebdd558c0c54f88ebf06f7884c2a387,eae8d0582638dcc5ffd686e3165faa05424b3f33,valentino,valentino@redislabs.com,Mon Nov 5 11:13:02 2018 +0200,1541409182,"fix short period of server.hz being uninitializedserver.hz was uninitialized between initServerConfig and initServer.nthis can lead to someone (e.g. queued modules) doing createObject,nand accessing an uninitialized variable, that can potentially be 0,nand lead to a crash.n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4203.0,239.0,9.799224537037038,0.0,0.0,0.0,Corrective,True,,
fa675256c127963c74ea68f8bab22ef105bada02,e7c579e1fe0fdcdf631e27a5fd17e36f621ddef3,antirez,antirez@gmail.com,Mon Nov 5 13:06:01 2018 +0100,1541419561,Improve streamReplyWithRange() top comment.,9.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2532.0,177.0,1.578159722222222,11156.0,1.6336494246551232,5833.0,None,False,,
e7c579e1fe0fdcdf631e27a5fd17e36f621ddef3 d790e2db2ebdd558c0c54f88ebf06f7884c2a387,514bbdd670a940fbd516493425656b9de76f2e7c,antirez,antirez@gmail.com,Mon Nov 5 13:07:14 2018 +0100,1541419634,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
514bbdd670a940fbd516493425656b9de76f2e7c,6ba50784b5ce2e4eae74da00536ebbc1f81984ae,antirez,antirez@gmail.com,Mon Nov 5 13:16:00 2018 +0100,1541420160,"Fix XCLAIM missing entry bug.This bug had a double effect:nn1. Sometimes entries may not be emitted, producing broken protocol wherenthe array length was greater than the emitted entires, blocking thenclient waiting for more data.nn2. Some other time the right entry was claimed, but a wrong entry wasnreturned to the client.nnThis fix should correct both the instances.n",3.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2536.0,178.0,0.0069328703703703705,11157.0,145.24040066777962,5834.0,Corrective,True,,
6ba50784b5ce2e4eae74da00536ebbc1f81984ae,ab270a977785df58461efb4a58f127193e387b13,artix,artix2@gmail.com,Mon Oct 8 16:21:41 2018 +0200,1539008501,Cluster Manager: fixed 'DELSLOT' subcommand typo.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10486.0,299.0,-9.196458333333334,77.0,0.8912624878236641,71.0,None,False,,
ab270a977785df58461efb4a58f127193e387b13,be3a9dbb6fede6ab6b9bd6b1d2efae07543df1e8,artix,artix2@gmail.com,Mon Oct 8 16:55:56 2018 +0200,1539010556,Cluster Manager: fixed typos in comments.,3.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10486.0,300.0,0.023784722222222214,78.0,43.04379562043797,72.0,None,False,,
be3a9dbb6fede6ab6b9bd6b1d2efae07543df1e8,2e9859cbfc204b8a76275e0dcc0ff87c10db2792,artix,artix2@gmail.com,Tue Oct 23 16:14:45 2018 +0200,1540304085,Cluster Manager: better fix subcommand.,78.0,20.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10486.0,301.0,14.971400462962967,79.0,1.066794018533794,73.0,None,False,,
2e9859cbfc204b8a76275e0dcc0ff87c10db2792,d6f0a9ac72034d95e6005662eb992eefe161bab2,artix,artix2@gmail.com,Fri Nov 2 17:08:25 2018 +0100,1541174905,Cluster Manager: fixed string parsing issue in clusterManagerGetConfigSignature,3.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10544.0,302.0,10.078935185185186,80.0,1.0992168301141452,74.0,None,False,,
d6f0a9ac72034d95e6005662eb992eefe161bab2,18ddbf0352cc1a5ae3248f06abed9a0ee59a4edf,artix,artix2@gmail.com,Sat Nov 3 12:04:59 2018 +0100,1541243099,"Cluster Manager: further improvements to fix: - clusterManagerFixOpenSlot: ensure that the   slot is unassigned before ADDSLOTS - clusterManagerFixSlotsCoverage: after cold   migration, the slot configuration   is now updated on all the nodes.",49.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10544.0,303.0,0.7892824074074074,81.0,2.2669736340440507,75.0,None,False,,
18ddbf0352cc1a5ae3248f06abed9a0ee59a4edf,3a2d82ae8ef4f9b088bf8a2d43fec11ca8639729,artix,artix2@gmail.com,Mon Nov 5 14:19:45 2018 +0100,1541423985,Cluster Manager: removed unused var.,1.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10583.0,304.0,2.0935879629629635,82.0,1.4776489059407585,76.0,None,False,,
6ba50784b5ce2e4eae74da00536ebbc1f81984ae,4e74d9cf558918f682adbf2be750998bfca7e950,yongman,yming0221@gmail.com,Tue Nov 6 10:51:19 2018 +0800,1541472679,fix malloc in clusterManagerComputeReshardTable,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10582.0,305.0,0.563587962962963,0.0,0.0,0.0,Corrective,True,,
6ba50784b5ce2e4eae74da00536ebbc1f81984ae 3a2d82ae8ef4f9b088bf8a2d43fec11ca8639729,0e2f56d0a12a9f6bf94638cf78e716298325f9dd,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 6 12:05:06 2018 +0100,1541502306,Merge pull request #5528 from artix75/cluster_manager_fix_cmdCluster manager fix cmd,,,,,,,,,,,,,,,Merge,False,,
0e2f56d0a12a9f6bf94638cf78e716298325f9dd 4e74d9cf558918f682adbf2be750998bfca7e950,d9e822a14bfbca8ea0599052e6ec87b63e7be76f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 6 12:05:24 2018 +0100,1541502324,Merge pull request #5529 from yongman/fix-rediscli-mallocfix zmalloc in clusterManagerComputeReshardTable,,,,,,,,,,,,,,,Merge,False,,
d9e822a14bfbca8ea0599052e6ec87b63e7be76f e039c85bb42d7c9c9bb35a9993191a3fae90c907,1423abd15b1a766c1c37648084c9671040d9c012,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 6 12:28:08 2018 +0100,1541503688,Merge pull request #5520 from itamarhaber/latency_helpAdds HELP to LATENCY,,,,,,,,,,,,,,,Merge,False,,
1423abd15b1a766c1c37648084c9671040d9c012 eae8d0582638dcc5ffd686e3165faa05424b3f33,e93387c1d3bba0647092e96838a80910662eb415,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 6 13:00:15 2018 +0100,1541505615,Merge pull request #5526 from valentino-redislabs/init-server-hzfix short period of server.hz being uninitialised,,,,,,,,,,,,,,,Merge,False,,
e93387c1d3bba0647092e96838a80910662eb415 d49bfc40808652389e3e3c3a0db3667153c3c14f,249cd9381d25738edaa6aac5c2fdc0f772e9aa89,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 6 18:13:17 2018 +0100,1541524397,Merge pull request #4526 from itamarhaber/memory_helpStandardizes `MEMORY HELP` subcommand,,,,,,,,,,,,,,,Merge,False,,
249cd9381d25738edaa6aac5c2fdc0f772e9aa89,560cdf359f8a600358a7221c469d7085751d054b,antirez,antirez@gmail.com,Tue Nov 6 18:15:51 2018 +0100,1541524551,MEMORY command: make strcasecmp() conditional like the following.,1.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1431.0,144.0,20.936215277777773,11158.0,1.0477641248302134,5835.0,None,False,,
560cdf359f8a600358a7221c469d7085751d054b,0cb798ea2b3ccb163c0add8137276dba31916293,antirez,antirez@gmail.com,Wed Nov 7 12:54:46 2018 +0100,1541591686,"Fix cluster-replica-no-failover option name.Thanks to @NicolasLM, see issue #5537.n",1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2274.0,237.0,17.386921296296293,11159.0,1.057514495117259,5836.0,Corrective,True,,
e84d327fc1eab94ce3d9b1f63b71549c6b001963,1d9866632709e7d4256e8050e7b4ba81a61bcf71,David Carlier,devnexen@gmail.com,Thu Nov 8 10:13:52 2018 +0000,1541672032,only FreeBSD change/little warning addressing,7.0,4.0,"src/Makefile,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,16.0,777.5,321.0,18.984791666666666,10.5,1.0755560617147668,11.0,Feature Addition,False,,
0cb798ea2b3ccb163c0add8137276dba31916293 1d9866632709e7d4256e8050e7b4ba81a61bcf71,7721fe83e92dee581f8703e178f8368dce86abdf,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 8 12:12:28 2018 +0100,1541675548,Merge pull request #5507 from devnexen/clang_build_fix_warningsFix clang build.,,,,,,,,,,,,,,,Merge,False,,
7721fe83e92dee581f8703e178f8368dce86abdf,4e0af5efd42edacda09f6569f063cbfb1fe56fe9,David Carlier,devnexen@gmail.com,Sun Nov 11 18:49:55 2018 +0000,1541962195,DragonFlyBSD little build fix,6.0,1.0,"src/Makefile,CAS_DELIMITER,src/setproctitle.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,16.0,282.0,170.0,180.2299537037037,12.5,1.1502689522007934,13.0,Corrective,True,,
7721fe83e92dee581f8703e178f8368dce86abdf,d0850369c4a06d6362dbaf12d873e54d6ce931cc,Oran Agra,oran@redislabs.com,Sun Nov 11 09:22:42 2018 +0200,1541920962,fix small test suite race conditions,11.0,0.0,"tests/support/util.tcl,CAS_DELIMITER,tests/unit/memefficiency.tcl,CAS_DELIMITER,tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",3.0,1.0,3.0,1.0957952550009338,16.0,254.66666666666663,47.0,75.82366512345679,118.0,1.0058736714536367,26.0,Corrective,True,,
7721fe83e92dee581f8703e178f8368dce86abdf,cabc06076bcdb51d01be0e9596c2bc3241535b94,Weiliang Li,liweiliang@cmss.chinamobile.com,Thu Nov 15 16:55:40 2018 +0800,1542272140,fix comment typo in util.cfix comment typo in util.cn,1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,840.0,45.0,19.779780092592603,1.0,1.0505566793624006,1.0,Corrective,True,,
7721fe83e92dee581f8703e178f8368dce86abdf,64324901f22946a93226e0af56a6e59b2290be09,yongman,yming0221@gmail.com,Fri Nov 16 17:20:53 2018 +0800,1542360053,Fix pointer access and memory leak in redis-cli.,6.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10582.0,306.0,10.270532407407408,1.0,1.0973659358962509,1.0,Corrective,True,,
0cb798ea2b3ccb163c0add8137276dba31916293,3830ef2483c6adab646f847f96b93f76701f1d43,antirez,antirez@gmail.com,Mon Nov 19 16:26:02 2018 +0100,1542641162,t_stream.c comment resized to 80 cols.,2.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2537.0,179.0,14.131967592592591,11160.0,1.0707615548541278,5837.0,None,False,,
3830ef2483c6adab646f847f96b93f76701f1d43,29251f58e279738da6d45c5af3d12f35259f3d45,antirez,antirez@gmail.com,Mon Nov 19 16:41:09 2018 +0100,1542642069,"Streams: fix XREADGROUP history reading when CG last_id is low.This fixes the issue reported in #5570.nThis was fixed the hard way, that is, propagating more information tonthe lower level API about this being a request to read just the history,nso that the code is simpler and less likely to regress.n",12.0,9.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2538.0,180.0,0.010497685185185185,11161.0,96.25909592061744,5838.0,None,False,,
29251f58e279738da6d45c5af3d12f35259f3d45,db8d7d3dc4912cce0b64432e9282be7b2b596794,antirez,antirez@gmail.com,Mon Nov 19 16:50:54 2018 +0100,1542642654,Test: regression test for #5577.,24.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,161.0,10.0,8.352916666666667,11162.0,1.119718661146306,807.0,Preventative,False,,
db8d7d3dc4912cce0b64432e9282be7b2b596794 7721fe83e92dee581f8703e178f8368dce86abdf,18d0759b14cee97430c08af3d6674929b62390a0,antirez,antirez@gmail.com,Mon Nov 19 16:51:09 2018 +0100,1542642669,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
18d0759b14cee97430c08af3d6674929b62390a0,2bd6802fa1bd48260022435e9a040b8233d6cdfc,antirez,antirez@gmail.com,Mon Nov 19 17:00:30 2018 +0100,1542643230,"Stream: fix XREADGROUP history reading of deleted messages.This commit fixes #5570. It is a similar bug to one fixed a few weeksnago and is due to the range API to be called with NULL as end IDnparameter instead of repeating again the start ID, to be sure that wenselectively issue the entry with a given ID, or we get zero returnedn(and we know we should emit a NULL reply).n",1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2541.0,181.0,0.0134375,11163.0,75.4186046511628,5839.0,None,False,,
2bd6802fa1bd48260022435e9a040b8233d6cdfc,30a455f14a55f99a1df17035fedcceb1e8b60b9a,antirez,antirez@gmail.com,Mon Nov 19 17:19:23 2018 +0100,1542644363,Test: regression test for #5570.,15.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,185.0,11.0,0.019780092592592592,11164.0,51.55588063194851,808.0,Preventative,False,,
30a455f14a55f99a1df17035fedcceb1e8b60b9a 64324901f22946a93226e0af56a6e59b2290be09,8acc07e6f097f20701813f9caa01e038e4226886,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 20 10:38:59 2018 +0100,1542706739,Merge pull request #5579 from yongman/fix-rediscli-pointer-accessFix pointer access and memory leak in redis-cli.,,,,,,,,,,,,,,,Merge,False,,
8acc07e6f097f20701813f9caa01e038e4226886,2f76829dc7ed1c76a2ac17bd6dc9cf7c3b5d7cb5,yongman,yming0221@gmail.com,Wed Nov 21 23:01:35 2018 +0800,1542812495,skip slave nodes when sending cluster setslot command,1.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10585.0,307.0,5.236597222222223,2.0,1.190963703634941,2.0,None,False,,
8acc07e6f097f20701813f9caa01e038e4226886 2f76829dc7ed1c76a2ac17bd6dc9cf7c3b5d7cb5,f3601fcb13c65db6899b5d2c08248457bcf03b0c,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 22 11:10:56 2018 +0100,1542881456,Merge pull request #5590 from yongman/fix-cluster-fix-commandFix command error when fixing open slots,,,,,,,,,,,,,,,Merge,False,,
f3601fcb13c65db6899b5d2c08248457bcf03b0c 4e0af5efd42edacda09f6569f063cbfb1fe56fe9,0c12ebf6e79b3665e0dfa313f27492446b477758,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 22 11:16:30 2018 +0100,1542881790,Merge pull request #5553 from devnexen/dflybsd_build_fixDragonFlyBSD little build fix,,,,,,,,,,,,,,,Merge,False,,
0c12ebf6e79b3665e0dfa313f27492446b477758,2961c891616a6d60e28aea748c3c2422cb4f90b6,yongman,yming0221@gmail.com,Fri Nov 23 16:58:55 2018 +0800,1542963535,Fix choose a random master node for slot assignment,29.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10586.0,308.0,1.7481481481481482,3.0,1.5720338983050848,3.0,Corrective,True,True,"[""221dfbd322227ac35b43f0a10855b02f9095ed72""]"
2961c891616a6d60e28aea748c3c2422cb4f90b6,221dfbd322227ac35b43f0a10855b02f9095ed72,yongman,yming0221@gmail.com,Fri Nov 23 23:51:16 2018 +0800,1542988276,fix typo,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10610.0,309.0,0.2863541666666667,4.0,4.492178974172426,4.0,Corrective,True,,
0c12ebf6e79b3665e0dfa313f27492446b477758,9cfcf37968c9890e6f183461f382528cfbe4d375,Chris Lamb,chris@chris-lamb.co.uk,Fri Nov 23 17:57:01 2018 +0100,1542992221,"Clarify the Creating Server TCP listening socket error.This really helps spot it in the logs, otherwise it does not look like anwarning/error. For example:nn  Creating Server TCP listening socket ::1:6379: bind: Cannot assign requested addressnn... is not nearly as clear as:nn  Could not create server TCP listening listening socket ::1:6379: bind: Cannot assign requested addressn",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4203.0,240.0,18.322210648148147,15.0,1.0545785669209666,9.0,None,False,,
0c12ebf6e79b3665e0dfa313f27492446b477758,fbff351406ec924f48898badc7a25576a2c1b7b3,Chris Lamb,lamby@debian.org,Fri Nov 23 17:43:01 2018 +0100,1542991381,"Don't treat unsupported protocols as fatal errorsIf we encounter an unsupported protocol in the bind list, don'tnipso-facto consider it a fatal error. We continue to abort startup ifnthere are no listening sockets at all.nnThis ensures that the lack of IPv6 support does not prevent Redis fromnstarting on Debian where we try to bind to the ::1 interface by defaultn(via bind 127.0.0.1 ::1). A machine with IPv6 disabled (such as somencontainer systems) would simply fail to start Redis after the initiallncall to apt(8).nnThis is similar to the case for where bind is not specified:nn  https://github.com/antirez/redis/issues/3894nn... and was based on the corresponding PR:nn  https://github.com/antirez/redis/pull/4108nn... but also adds EADDRNOTAVAIL to the list of errors to catch which Inbelieve is missing from there.nnThis issue was raised in Debian as both <https://bugs.debian.org/900284>n& <https://bugs.debian.org/914354>.n",4.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4203.0,241.0,-0.009722222222222222,16.0,-101.85714285714286,10.0,None,False,,
0c12ebf6e79b3665e0dfa313f27492446b477758,69ca9078684f66366c461092bdb46172c27b845d,David Carlier,devnexen@gmail.com,Sat Nov 24 15:49:45 2018 +0000,1543074585,Backtrace/register dump on BSD.FreeBSD/DragonFlyBSD does have backtrace only it does notnbelong to libc.n,97.0,3.0,"src/Makefile,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",3.0,1.0,1.0,0.4348896204226208,16.0,596.6666666666666,361.0,94.35662808641978,15.0,1.0283169696871086,16.0,None,False,,
69ca9078684f66366c461092bdb46172c27b845d,ac086b1932eae5bc47c30c502c56e87b60525e10,David Carlier,devnexen@gmail.com,Sun Nov 25 08:10:26 2018 +0000,1543133426,"OpenBSD support.Special treatment here as backtrace support is optional,ncannot be found via pkg-config and similar neither.n",74.0,1.0,"src/Makefile,CAS_DELIMITER,src/config.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER",3.0,1.0,1.0,0.6395563653739031,16.0,628.0,364.0,0.6810300925925926,18.0,1.89733349195289,19.0,None,False,,
0c12ebf6e79b3665e0dfa313f27492446b477758,edd3939bef97ada7943d9093308fdb68800c0cc3,antirez,antirez@gmail.com,Wed Nov 28 16:24:50 2018 +0100,1543418690,Abort instead of crashing when loading bad stream master key.See #5612.n,3.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2449.0,237.0,150.41666666666666,11165.0,1.0066481994459833,5840.0,None,False,,
edd3939bef97ada7943d9093308fdb68800c0cc3 290a63dc54f9cd2a61681be3849f1d9d481aa060,6a6471aad5e4f8d6cbab677b918b14cdee416296,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 16:53:32 2018 +0100,1543420412,Merge pull request #4737 from guybe7/zlexcount_fixDon't call sdscmp() with shared.maxstring or shared.minstring,,,,,,,,,,,,,,,Merge,False,,
6a6471aad5e4f8d6cbab677b918b14cdee416296 ac086b1932eae5bc47c30c502c56e87b60525e10,1dd8d2c7ef5d816be8362f22d96bce5bca5e6ccb,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 17:01:33 2018 +0100,1543420893,Merge pull request #5599 from devnexen/backtrace_support_on_bsdBacktrace/register dump on BSD.,,,,,,,,,,,,,,,Merge,False,,
1dd8d2c7ef5d816be8362f22d96bce5bca5e6ccb fbff351406ec924f48898badc7a25576a2c1b7b3,1eca933d6f477bd25829c3783f90655b82e2985f,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 17:06:17 2018 +0100,1543421177,Merge pull request #5598 from lamby/dont-treat-unsupported-protocols-as-fatal-errorsDon't treat unsupported protocols as fatal errors,,,,,,,,,,,,,,,Merge,False,,
1eca933d6f477bd25829c3783f90655b82e2985f 9cfcf37968c9890e6f183461f382528cfbe4d375,ef00633759193f0fe3554801bcffb9fcb19dc3d3,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 17:06:51 2018 +0100,1543421211,Merge pull request #5597 from lamby/clarify-socket-creation-error-messageClarify the Creating Server TCP listening socket error message,,,,,,,,,,,,,,,Merge,False,,
edd3939bef97ada7943d9093308fdb68800c0cc3,c99f1206b7f30c642868be1ff902d56ceb0321ef,Qu Chen,quchen@amazon.com,Mon Nov 12 15:28:39 2018 -0800,1542065319,Add unit test for stream XCLAIM command.,48.0,0.0,"tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,200.0,12.0,-6.701898148148147,4.0,0.8507885411125925,0.0,Feature Addition,False,,
c99f1206b7f30c642868be1ff902d56ceb0321ef ef00633759193f0fe3554801bcffb9fcb19dc3d3,fc022031d38e1a5f88b7e4bd9ebc27dd43837818,antirez,antirez@gmail.com,Wed Nov 28 17:12:32 2018 +0100,1543421552,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
fc022031d38e1a5f88b7e4bd9ebc27dd43837818 cabc06076bcdb51d01be0e9596c2bc3241535b94,d403208d51e82e5eb4010b418beea2683869ce0e,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 17:14:21 2018 +0100,1543421661,Merge pull request #5572 from Weiliang-Li/patch3-utilfix comment typo in util.c,,,,,,,,,,,,,,,Merge,False,,
7721fe83e92dee581f8703e178f8368dce86abdf,d56c63134340ce155a49c03364819b9266a67a52,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Nov 29 01:01:47 2018 +0800,1543424507,"MEMORY command: make USAGE more accurateIn MEMORY USAGE command, we count the key argv[2] into usage,nbut the argument in command may contains free spaces because ofnsdsMakeRoomFor. But the key in db never contains free spacesnbecause we use sdsdup when dbAdd, so using the real key toncount the usage is more accurate.n",7.0,6.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1430.0,145.0,21.99023148148148,133.0,1.0454747373097062,126.0,None,False,,
d403208d51e82e5eb4010b418beea2683869ce0e 221dfbd322227ac35b43f0a10855b02f9095ed72,04a5189b5039f886c7813013243ac5d425fc97e6,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 18:13:04 2018 +0100,1543425184,Merge pull request #5594 from yongman/fix-rediscli-fixcoverageFix choose a random master node for slot assignment,,,,,,,,,,,,,,,Merge,False,,
04a5189b5039f886c7813013243ac5d425fc97e6 d56c63134340ce155a49c03364819b9266a67a52,4c544394eb2c1d2bd6d28750604821fffcb01c3d,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 18:16:04 2018 +0100,1543425364,Merge pull request #5562 from soloestoy/memory-usage-more-accurateMEMORY command: make USAGE more accurate,,,,,,,,,,,,,,,Merge,False,,
4c544394eb2c1d2bd6d28750604821fffcb01c3d d0850369c4a06d6362dbaf12d873e54d6ce931cc,46a51cdcdc0bd92473163068c2ec3bef4dffe63c,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 28 18:17:05 2018 +0100,1543425425,Merge pull request #5549 from oranagra/fix_test_racesfix small test suite race conditions,,,,,,,,,,,,,,,Merge,False,,
46a51cdcdc0bd92473163068c2ec3bef4dffe63c,0da171b3a675ee0897e7d566a6dcefd02fb671c4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 30 12:05:46 2018 +0800,1543550746,remove useless tryObjectEncoding in debug assert,0.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1418.0,159.0,4.830092592592592,134.0,1.207035368542126,127.0,Corrective,True,,
46a51cdcdc0bd92473163068c2ec3bef4dffe63c,b587c54c24d0cfdc3cfb22303553ea5e780b87c1,Oran Agra,oran@redislabs.com,Sun Dec 2 15:29:20 2018 +0200,1543757360,"fix #5580, display fragmentation and rss overhead bytes as signedthese metrics become negative when RSS is smaller than the used_memory.nThis can easily happen when the program allocated a lot of memory and haven'tnwritten to it yet, in which case the kernel doesn't allocate any pages to the processn",6.0,6.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,3178.5,459.0,27.97861689814815,120.5,1.0653338082422623,87.0,Corrective,True,,
46a51cdcdc0bd92473163068c2ec3bef4dffe63c,e2c1f80b464a3a6dde961bb30bff9a39c17c6b29,Madelyn Olson,matolson@amazon.com,Tue Dec 4 07:17:17 2018 +0000,1543907837,Fixed a serverPanic when sending an invalid command to a monitor client,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2232.0,324.0,34.776805555555555,2.0,1.0287547974583957,2.0,Corrective,True,,
46a51cdcdc0bd92473163068c2ec3bef4dffe63c,dfe81b33fe610ccdc205f5b5e49f94f8aa8fbefc,yongman,yming0221@gmail.com,Tue Dec 4 17:36:42 2018 +0800,1543916202,Fix cluster call reply format readable,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10610.0,310.0,10.73988425925926,5.0,1.0931108730653092,5.0,Corrective,True,,
46a51cdcdc0bd92473163068c2ec3bef4dffe63c e2c1f80b464a3a6dde961bb30bff9a39c17c6b29,430a987f4e6c7a011b0841042e4bf34ef7d4b19b,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 4 18:09:43 2018 +0100,1543943383,Merge pull request #5663 from madolson/dev_monitor_crashFixed a serverPanic when sending an invalid command to a monitor client,,,,,,,,,,,,,,,Merge,False,,
430a987f4e6c7a011b0841042e4bf34ef7d4b19b,b1e35d324404a5017cd925f701211692ed62d495,hdmg,438954+louiszhw@users.noreply.github.com,Wed Dec 5 17:15:02 2018 +0800,1544001302,fix comments fault discription,1.0,1.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1280.0,78.0,142.74356481481482,0.0,0.0,0.0,Corrective,True,,
430a987f4e6c7a011b0841042e4bf34ef7d4b19b,6aa9606995bc8ae55f01f7713bc9ed8dc88070f1,lsytj0413,511121939@qq.com,Tue Aug 29 14:44:05 2017 +0800,1503989045,fix a typo: craeted -> created,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1549.0,215.0,-421.15442129629633,0.0,0.0,0.0,Corrective,True,,
430a987f4e6c7a011b0841042e4bf34ef7d4b19b dfe81b33fe610ccdc205f5b5e49f94f8aa8fbefc,75c181ee2b91a456ec5a3ac46e1d9f2ad06fe706,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 11:28:18 2018 +0100,1544178498,Merge pull request #5664 from yongman/fix-rediscli-output-formatFix cluster call reply format readable,,,,,,,,,,,,,,,Merge,False,,
75c181ee2b91a456ec5a3ac46e1d9f2ad06fe706 f24ad5d83140eee04bd1cda8ee19bced0de26c11,9f87ef93993b386c22ea673c8f2f1f298f0d8bc9,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 11:30:07 2018 +0100,1544178607,Merge pull request #5460 from krallin/env-passwordcli: pass auth through REDISCLI_AUTH,,,,,,,,,,,,,,,Merge,False,,
9f87ef93993b386c22ea673c8f2f1f298f0d8bc9,74f942cfa5386b501c0b23733d97ee9a69ad8888,yura,funny.falcon@gmail.com,Wed Aug 22 17:56:13 2018 +0300,1534949773,redis-cli reshard/rebalance: ability to force replacement on existing keys,6.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10610.0,311.0,-103.77811342592592,0.0,0.0,0.0,None,False,,
430a987f4e6c7a011b0841042e4bf34ef7d4b19b,28c42814956a40f6c7b432a9692e1f1d7437925c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Dec 7 19:14:33 2018 +0800,1544181273,networking: current_client should not be NULL when trim qb_pos,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2232.0,325.0,3.1647685185185184,135.0,1.3159788762269782,128.0,None,False,,
9f87ef93993b386c22ea673c8f2f1f298f0d8bc9 74f942cfa5386b501c0b23733d97ee9a69ad8888,0006c989d2cde8475c7daa56a6e11d7ba72dbd91,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 12:27:32 2018 +0100,1544182052,Merge pull request #5271 from funny-falcon/cli-migrate-replaceredis-cli reshard/rebalance: ability to force replacement on existing keys,,,,,,,,,,,,,,,Merge,False,,
0006c989d2cde8475c7daa56a6e11d7ba72dbd91,e9400e8efdad01c93b80624805b7ddb2d7ec99ec,antirez,antirez@gmail.com,Fri Dec 7 16:30:33 2018 +0100,1544196633,DEBUG DIGEST refactoring: extract function to digest a value.,142.0,131.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1417.0,160.0,7.475543981481483,11166.0,1.1337695293449164,5841.0,Corrective,True,,
e9400e8efdad01c93b80624805b7ddb2d7ec99ec,5a0b7212c9c3a672cb47fa2a773bc6cf1c2c4f17,antirez,antirez@gmail.com,Fri Dec 7 16:41:54 2018 +0100,1544197314,DEBUG DIGEST-VALUE implemented.,17.0,3.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1428.0,161.0,0.007881944444444445,11167.0,127.87224669603523,5842.0,Corrective,True,,
5a0b7212c9c3a672cb47fa2a773bc6cf1c2c4f17 28c42814956a40f6c7b432a9692e1f1d7437925c,c6341ce3730cbe6c224c75311e79d5c50d238886,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 17:03:48 2018 +0100,1544198628,Merge pull request #5673 from soloestoy/check-current-client-after-freememorynetworking: current_client should not be NULL when trim qb_pos,,,,,,,,,,,,,,,Merge,False,,
5a0b7212c9c3a672cb47fa2a773bc6cf1c2c4f17,7e0cc2bb91dc610b68d2e063728a4416efd19885,antirez,antirez@gmail.com,Fri Dec 7 17:06:55 2018 +0100,1544198815,Remove no longer relevant comment in processCommand().,2.0,6.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4207.0,243.0,5.10943287037037,11168.0,1.1957164376890057,5843.0,None,False,,
7e0cc2bb91dc610b68d2e063728a4416efd19885 c6341ce3730cbe6c224c75311e79d5c50d238886,cdab4c3e0911197487a54f1ebe86f51a9a0fcac0,antirez,antirez@gmail.com,Fri Dec 7 17:07:14 2018 +0100,1544198834,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
cdab4c3e0911197487a54f1ebe86f51a9a0fcac0 b587c54c24d0cfdc3cfb22303553ea5e780b87c1,03629ba0b6073836577bec1b537925e1c914c404,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 17:09:10 2018 +0100,1544198950,"Merge pull request #5633 from oranagra/frag_bytes_signedfix #5580, display fragmentation and rss overhead bytes as signed",,,,,,,,,,,,,,,Merge,False,,
03629ba0b6073836577bec1b537925e1c914c404 0da171b3a675ee0897e7d566a6dcefd02fb671c4,5bfd8ae25301820ae3c321a838263925e70849b5,Salvatore Sanfilippo,antirez@gmail.com,Fri Dec 7 17:09:56 2018 +0100,1544198996,Merge pull request #5626 from soloestoy/remove-useless-coderemove useless tryObjectEncoding in debug assert,,,,,,,,,,,,,,,Merge,False,,
5bfd8ae25301820ae3c321a838263925e70849b5,5bf13eaaf8f444bb547b00ed5ecd727a93cd8399,artix,artix2@gmail.com,Thu Nov 22 11:47:59 2018 +0100,1542883679,Cluster Manager: check/fix commands now handle multiple owners even if all slots are covered and not open.,129.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10611.0,312.0,91.82761574074074,83.0,1.010889970211394,77.0,None,False,,
5bf13eaaf8f444bb547b00ed5ecd727a93cd8399,eaac9f9e930d8959d681b7d03d7411bfb18db3a7,artix,artix2@gmail.com,Tue Nov 27 12:26:56 2018 +0100,1543318016,Cluster Manager: code cleanup.,41.0,87.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10734.0,313.0,5.027048611111111,84.0,1.1989238770816208,78.0,None,False,,
eaac9f9e930d8959d681b7d03d7411bfb18db3a7,d5f7703367c83f46683d220fed785c18504dd5ca,artix,artix2@gmail.com,Wed Nov 28 16:59:16 2018 +0100,1543420756,Cluster Manager: setting new slot owner is now handled atomically in 'fix' command.,72.0,31.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10688.0,314.0,1.1891203703703703,85.0,1.8409577574459801,79.0,None,False,,
d5f7703367c83f46683d220fed785c18504dd5ca,1a56fc913e70d61449c79b643f4ab241ece3cbec,artix,artix2@gmail.com,Fri Nov 30 20:48:52 2018 +0100,1543607332,Cluster Manager: 'fix' command now handles open slots with migrating state in one node and importing state in multiple nodes.,74.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10729.0,315.0,2.1594444444444445,86.0,1.463082068433239,80.0,None,False,,
1a56fc913e70d61449c79b643f4ab241ece3cbec,0c1336caf4ba34ee7a41c21fb12756b542a0d2e8,artix,artix2@gmail.com,Wed Dec 5 20:09:09 2018 +0100,1544036949,Cluster Manager: - FixOpenSlot now correctly updates in-memory cluster configuration. - Improved output messages.,17.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10797.0,316.0,4.972418981481481,87.0,1.2011093601975713,81.0,None,False,,
0c1336caf4ba34ee7a41c21fb12756b542a0d2e8,27ddb2ba3a8759b306501882bd76760640e6705a,artix,artix2@gmail.com,Mon Dec 10 18:01:13 2018 +0100,1544461273,Cluster Manager: - Multiple owners checking in 'fix'/'check' commands is now   optional (using --cluster-search-multiple-owners). - Updated help.,14.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10809.0,317.0,4.9111574074074085,88.0,1.2036179900264892,82.0,None,False,,
5bfd8ae25301820ae3c321a838263925e70849b5 27ddb2ba3a8759b306501882bd76760640e6705a,086363babf0e47162d975a265bd8d77e8d49dfb1,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 11 08:23:54 2018 +0100,1544513034,Merge pull request #5681 from artix75/cluster_manager_fix_cmdCluster manager fix cmd,,,,,,,,,,,,,,,Merge,False,,
086363babf0e47162d975a265bd8d77e8d49dfb1,274531396caedd710595f46cc14010ed68a0c931,antirez,antirez@gmail.com,Tue Dec 11 11:39:18 2018 +0100,1544524758,Reject EXEC containing write commands against RO replica.Thanks to @soloestoy for discovering this issue in #5667.nThis is an alternative fix in order to avoid both cycling the clientsnand also disconnecting clients just having valid read-only transactionsnpending.n,20.0,0.0,"src/multi.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.6098403047164004,16.0,1244.0,245.0,70.01729166666667,11169.5,1.0073828976966042,5845.0,Corrective,True,True,"[""6100be7d827bc1329b156b165a4e08fd91cbc115""]"
274531396caedd710595f46cc14010ed68a0c931,1530c0a7dd10f67ff5a1622c107478c6d8275867,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Dec 11 19:47:36 2018 +0800,1544528856,multi: ignore multiState's cmd_flags when loading AOF,1.0,1.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,355.0,28.0,0.04743055555555555,136.0,22.08345534407028,129.0,None,False,,
1530c0a7dd10f67ff5a1622c107478c6d8275867,6100be7d827bc1329b156b165a4e08fd91cbc115,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Dec 11 19:53:54 2018 +0800,1544529234,fix typo,1.0,1.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,355.0,29.0,0.004375,137.0,229.57142857142856,130.0,Corrective,True,,
274531396caedd710595f46cc14010ed68a0c931 6100be7d827bc1329b156b165a4e08fd91cbc115,11d399dded8555781bd4a29968a390a23adae7f2,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 11 12:57:25 2018 +0100,1544529445,Merge pull request #5684 from soloestoy/ignore-multi-cmd-flags-loading-aofmulti: ignore multiState's cmd_flags when loading AOF,,,,,,,,,,,,,,,Merge,False,,
11d399dded8555781bd4a29968a390a23adae7f2 6aa9606995bc8ae55f01f7713bc9ed8dc88070f1,e8529d1b1e98aba5021592025c5eb2dac1c2727a,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 11 13:02:28 2018 +0100,1544529748,Merge pull request #4264 from lsytj0413/unstablefix a typo: craeted -> created,,,,,,,,,,,,,,,Merge,False,,
e8529d1b1e98aba5021592025c5eb2dac1c2727a b1e35d324404a5017cd925f701211692ed62d495,f77edf423405179fe91fd00a1544c82aa070fe69,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 11 13:03:09 2018 +0100,1544529789,Merge pull request #5665 from louiszhw/unstablefix comments fault discription,,,,,,,,,,,,,,,Merge,False,,
11d399dded8555781bd4a29968a390a23adae7f2,c710d4afdccc0c797745bc3264f3f32a4cdd85da,antirez,antirez@gmail.com,Tue Dec 11 13:18:52 2018 +0100,1544530732,Fix stringmatchlen() read past buffer bug.See #5632.n,1.0,1.0,"src/util.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,840.0,46.0,26.141111111111112,11171.0,1.0382539210269053,5846.0,Corrective,True,,
c710d4afdccc0c797745bc3264f3f32a4cdd85da,a31ca8d75375a196bb4a2393db9f9d2307416d8f,antirez,antirez@gmail.com,Tue Dec 11 13:29:30 2018 +0100,1544531370,stringmatchlen() fuzz test added.Verified to be able to trigger at least #5632. Does not report othernissues.n,22.0,0.0,"src/debug.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER",3.0,1.0,1.0,1.0226297788901697,16.0,780.6666666666665,222.0,16.603144290123456,11173.0,1.178954011857401,5849.0,Feature Addition,False,,
a31ca8d75375a196bb4a2393db9f9d2307416d8f f77edf423405179fe91fd00a1544c82aa070fe69,0110e46f6ea654d1d8ef985cf317243f58f5ac70,antirez,antirez@gmail.com,Tue Dec 11 13:30:04 2018 +0100,1544531404,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0110e46f6ea654d1d8ef985cf317243f58f5ac70,b9cd89d1089a488b82517ad8f7899dde10cf7c25,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Dec 12 00:25:24 2018 +0800,1544545524,"evict: don't care about mem if loadingWhen loading data, we call processEventsWhileBlockednto process events and execute commands.nBut if we are loading AOF it's dangerous, becausenprocessCommand would call freeMemoryIfNeeded to evict,nand that will break data consistency, see issue #5686.n",9.0,3.0,"src/evict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,624.0,25.0,55.90118055555556,138.0,1.0178887098637601,131.0,None,False,,
0110e46f6ea654d1d8ef985cf317243f58f5ac70,03e2bb0cfd1ad6dba920e72b3d212cc3abb97d98,antirez,antirez@gmail.com,Tue Dec 11 17:50:18 2018 +0100,1544547018,Crashing is too much in addReplyErrorLength().See #5663.n,0.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2232.0,326.0,4.233159722222221,11175.0,1.2362301603576262,5850.0,Feature Addition,False,,
03e2bb0cfd1ad6dba920e72b3d212cc3abb97d98 b9cd89d1089a488b82517ad8f7899dde10cf7c25,7ae184bfea90cf3e146ac06af0cc5c04d7628a22,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 12 11:29:10 2018 +0100,1544610550,Merge pull request #5689 from soloestoy/donot-evict-when-AOF-loadingevict: don't care about mem if loading,,,,,,,,,,,,,,,Merge,False,,
7ae184bfea90cf3e146ac06af0cc5c04d7628a22,129f2d2746ca80451d8c84b223b568298020b125,antirez,antirez@gmail.com,Wed Dec 12 11:37:15 2018 +0100,1544611035,freeMemoryIfNeeded() small refactoring.Related to issue #5686 and PR #5689.n,16.0,10.0,"src/config.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.998952568973632,16.0,2315.0,727.0,10.368509837962963,11177.5,1.0263602472573488,5854.0,None,False,,
129f2d2746ca80451d8c84b223b568298020b125,009a9292694491ff9eec78c024d38b0b5ca83f2e,antirez,antirez@gmail.com,Wed Dec 12 11:55:30 2018 +0100,1544612130,Remove debugging printf from replication.tcl test.,0.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,312.0,31.0,92.07780092592593,11180.0,1.010860381003283,809.0,Corrective,True,,
129f2d2746ca80451d8c84b223b568298020b125,d935cfcb89fe70a0d9c039605d1df38d0be59db7,artix,artix2@gmail.com,Wed Dec 12 13:23:08 2018 +0100,1544617388,"Cluster Manager: avoid using reply error messages to check slot status.Slot assignment status is now checked by using CLUSTER SLOTS.nFurthermore, one memory leak has been fixed.n",111.0,25.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10818.0,318.0,1.806886574074074,89.0,1.5534381705793807,83.0,None,False,,
129f2d2746ca80451d8c84b223b568298020b125 d935cfcb89fe70a0d9c039605d1df38d0be59db7,81008bf99e131a2e56ccf467a6c60debb522759f,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 12 13:39:53 2018 +0100,1544618393,Merge pull request #5691 from artix75/cluster_manager_fix_cmdCluster Manager: avoid using reply error messages to check slot status.,,,,,,,,,,,,,,,Merge,False,,
81008bf99e131a2e56ccf467a6c60debb522759f,ed88f77d6dcd36e0c62faa484491530bd6739d38,Guy Benoish,guy.benoish@redislabs.com,Thu Dec 13 13:57:38 2018 +0100,1544705858,Check server.verbosity in RM_LogRaw,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5047.0,191.0,69.97601851851853,19.0,1.0142906101428928,17.0,None,False,,
d935cfcb89fe70a0d9c039605d1df38d0be59db7,143bfa1e6e65cf8be1eaad0b8169e2d95ca62f9a,artix,artix2@gmail.com,Tue Dec 18 17:38:57 2018 +0100,1545151137,"Cluster Manager: compare key values after BUSYKEY error (migration).If a key exists in the target node during a migration (BUSYKEY),nthe value of the key on both nodes (source and target) will be compared.nIf the key has the same value on both keys, the migration will benautomatically retried with the REPLACE argument in order to overridenthe target's key.nnIf the key has different values, the behaviour will depend on suchncases:n- In case of 'fix' command, the migration will stop and the usern  will be warned to manually check the key(s).n- In other cases (ie. reshard), if the user launched the commandn  with the --cluster-replace option, the migration will ben  retried with the REPLACE argument, elsewhere the migration willn  stop and the user will be warned.n",124.0,9.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,10904.0,319.0,6.177650462962962,90.0,1.1618738395762802,84.0,None,False,,
81008bf99e131a2e56ccf467a6c60debb522759f 143bfa1e6e65cf8be1eaad0b8169e2d95ca62f9a,0d166674f93d5eed0a0ddcaaaa9869dc754cf4ba,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 18 18:27:38 2018 +0100,1545154058,Merge pull request #5708 from artix75/cluster_manager_fix_cmdCluster Manager: compare key values after BUSYKEY error (migration).,,,,,,,,,,,,,,,Merge,False,,
0d166674f93d5eed0a0ddcaaaa9869dc754cf4ba,cc29590188a22eb73cfbbef39fce73c7467b1edf,artix,artix2@gmail.com,Tue Dec 18 18:39:21 2018 +0100,1545154761,Fixed memory leak in clusterManagerCompareKeysValues.,2.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11019.0,320.0,0.04194444444444445,91.0,24.84105960264901,85.0,Corrective,True,,
0d166674f93d5eed0a0ddcaaaa9869dc754cf4ba cc29590188a22eb73cfbbef39fce73c7467b1edf,f07205e48cab5577dbae10ac7540369ccbfcc9c5,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 19 17:24:38 2018 +0100,1545236678,Merge pull request #5709 from artix75/cluster_manager_fix_cmdFixed memory leak in clusterManagerCompareKeysValues.,,,,,,,,,,,,,,,Merge,False,,
f07205e48cab5577dbae10ac7540369ccbfcc9c5,503fd229e4181e932ba74b3ca8a222712d80ebca,artix,artix2@gmail.com,Wed Dec 19 17:27:58 2018 +0100,1545236878,Cluster Manager: enable --cluster-replace also for 'fix' command.,34.0,35.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11021.0,321.0,0.9504282407407408,92.0,2.052157287772325,86.0,None,False,,
f07205e48cab5577dbae10ac7540369ccbfcc9c5 503fd229e4181e932ba74b3ca8a222712d80ebca,638db2fc0195445fb1e85050c5e410d9f5187940,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 19 17:34:35 2018 +0100,1545237275,Merge pull request #5713 from artix75/cluster_manager_fix_cmdCluster Manager: enable --cluster-replace also for 'fix' command.,,,,,,,,,,,,,,,Merge,False,,
009a9292694491ff9eec78c024d38b0b5ca83f2e,ab37289fa6035a774d7438f8a7342d3177fdc1be,MeirShpilraien,meir@redislabs.com,Sun Dec 9 14:32:55 2018 +0200,1544358775,added module ability to register api to be used by other modules,120.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.2799626301201589,16.0,2570.6666666666665,486.0,22.05960648148148,1.0,0.6765275566443357,2.0,Feature Addition,False,,
ab37289fa6035a774d7438f8a7342d3177fdc1be,850b64c1166a1c36e9aa1b12a265b49982d776a0,antirez,antirez@gmail.com,Thu Dec 20 17:56:38 2018 +0100,1545324998,Revert shared APIs to modify the design.,0.0,120.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.2799626301201589,16.0,2610.6666666666665,489.0,11.183136574074075,11182.0,1.054645770179348,5857.0,None,False,,
850b64c1166a1c36e9aa1b12a265b49982d776a0,27f6e9bb9b6614bf4e49d9c53087f21de09cdb1a,antirez,antirez@gmail.com,Thu Dec 20 12:06:24 2018 +0100,1545303984,Modules shared API: initial core functions.Based on ideas and code in PR #5560 by @MeirShpilraien.n,89.0,1.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.2623112196143366,16.0,3601.5,416.0,-0.2432175925925926,11184.5,-2.083658513372038,5859.0,None,False,,
27f6e9bb9b6614bf4e49d9c53087f21de09cdb1a,6bb8cdaebe74f9c79bb754ccd7a7f05fe8385f81,antirez,antirez@gmail.com,Thu Dec 20 17:16:39 2018 +0100,1545322599,Modules shared API: unregister APIs function.,25.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5135.0,195.0,0.2154513888888889,11186.0,5.641418211120064,5860.0,None,False,,
6bb8cdaebe74f9c79bb754ccd7a7f05fe8385f81,9403b3d7a39ea80f95ae71f386d6949f52284426,antirez,antirez@gmail.com,Thu Dec 20 17:31:55 2018 +0100,1545323515,Modules shared API: prevent unloading of used modules.,10.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5160.0,196.0,0.010601851851851852,11187.0,95.32314410480349,5861.0,None,False,,
9403b3d7a39ea80f95ae71f386d6949f52284426,d3eb0028e937fe8c6b435bcb3760f676dcc0920f,antirez,antirez@gmail.com,Thu Dec 20 17:40:55 2018 +0100,1545324055,Modules shared API: also unregister the module as user.,23.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5166.0,197.0,0.00625,11188.0,161.0,5862.0,None,False,,
d3eb0028e937fe8c6b435bcb3760f676dcc0920f,8a87de130ff9389273516993f9aaec1f75cbb22a,antirez,antirez@gmail.com,Thu Dec 20 17:44:51 2018 +0100,1545324291,Modules shared API: export new core APIs.,6.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,2849.0,274.0,-0.002725694444444444,11189.5,92.33110223469718,5864.0,None,False,,
009a9292694491ff9eec78c024d38b0b5ca83f2e 638db2fc0195445fb1e85050c5e410d9f5187940,e504583b7806d946da9c3627784d551a742be4d0,antirez,antirez@gmail.com,Fri Dec 21 11:39:15 2018 +0100,1545388755,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e504583b7806d946da9c3627784d551a742be4d0,17797660f133b4d0491098f656944f46757e2edd,artix,artix2@gmail.com,Thu Dec 27 17:20:38 2018 +0100,1545927638,Cluster Manager del-node: use CLUSTER RESET in place of SHUTDOWNSee issue #5687n,4.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11020.0,322.0,7.994907407407408,93.0,1.1250796224448434,87.0,None,False,,
e504583b7806d946da9c3627784d551a742be4d0,6b818efeb62356358ea5a5187fd02889940d4bd0,Bruce Merry,bmerry@gmail.com,Mon Dec 31 11:51:03 2018 +0200,1546249863,Make dbSwapDatabases take args as longThis prevents an integer overflow bug. Closes #5737.n,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1549.0,216.0,489.1298379629629,4.0,1.0020444469390062,4.0,Corrective,True,,
e504583b7806d946da9c3627784d551a742be4d0,2f6ed9333f082b9cd27bfab05013521b88f077c7,Angus Pearson,angus@toaster.cc,Wed Jan 2 18:50:58 2019 +0000,1546455058,"Fix broken interval and repeat bahaviour in redis-cli (incluing cluster mode)This addresses two problems, one where infinite (negative) repeat count is broken for all types for Redis,nand another specific to cluster mode where redirection is needed.nnNow allows and works correctly for negative (i.e. -1) repeat values passed with `-r` argument to redis-clinas documented here https://redis.io/topics/rediscli#continuously-run-the-same-command which seems to havenregressed as a feature in 95b988 (though that commit removed bad integer wrap-around to `0` behaviour).nnThis broken behaviour exists currently (e50458), and redis-cli will just exit immediately with repeat `-r <= 0`nas opposed to send commands indefinitely as it should with `-r < 0`nnAdditionally prevents a repeat * interval seconds hang/time spent doing nothing at the start before issuingncommands in cluster mode (`-c`), where the command needed to redirect to a slot on another node, as commandsnwhere failing and waiting to be reissued but this was fully repeated before being reissued. For example,nnredis-cli -c -r 10 -i 0.5 INCR test_key_not_on_6379nnWould hang and show nothing for 5 seconds (10 * 0.5) before showingnn(integer) 1n(integer) 2n(integer) 3n(integer) 4n(integer) 5n(integer) 6n(integer) 7n(integer) 8n(integer) 9n(integer) 10nnat half second intervals as intended.n",11.0,6.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11021.0,323.0,6.104398148148147,0.0,0.0,0.0,Corrective,True,,
2f6ed9333f082b9cd27bfab05013521b88f077c7,2925bdc63bcf62acd8a536cc629f4a54d64b370c,Angus Pearson,angus@toaster.cc,Wed Jan 2 19:21:49 2019 +0000,1546456909,Add comment explaining negative repeat,2.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11026.0,324.0,0.021423611111111112,1.0,47.677471636952994,1.0,Feature Addition,False,,
e504583b7806d946da9c3627784d551a742be4d0,cc47dacd18723665f00ad43f71fd28b991d21044,Uman Shahzad,uman@opencraft.com,Thu Jan 3 17:47:19 2019 +0500,1546519639,Remove documentation about geohash-int in deps repo.,1.0,7.0,"README.md,CAS_DELIMITER,deps/README.md,CAS_DELIMITER",2.0,2.0,2.0,0.8112781244591328,16.0,267.0,31.0,134.50449652777777,0.5,0.5018586739213463,0.0,Non Functional,False,,
e504583b7806d946da9c3627784d551a742be4d0,30d8d05cd677d1cc9f5a9bf85337af43416422ec,chenyangyang,chenyang8094@users.noreply.github.com,Sun Jan 6 15:01:25 2019 +0800,1546758085,Update ae.cUpdate comment,1.0,1.0,"src/ae.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,515.0,25.0,185.7898032407407,0.0,0.0,0.0,None,False,,
e504583b7806d946da9c3627784d551a742be4d0 30d8d05cd677d1cc9f5a9bf85337af43416422ec,896be4c908ddca6d4bfa1e751432585b4b3ff535,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 9 10:10:53 2019 +0100,1547025053,Merge pull request #5751 from chenyang8094/unstableUpdate ae.c,,,,,,,,,,,,,,,Merge,False,,
896be4c908ddca6d4bfa1e751432585b4b3ff535 17797660f133b4d0491098f656944f46757e2edd,14400d073ba7ba74ed54ad45a4ec24af74a3dd13,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 9 10:11:27 2019 +0100,1547025087,Merge pull request #5729 from artix75/cluster_manager_fix_cmdCluster Manager del-node: use CLUSTER RESET in place of SHUTDOWN,,,,,,,,,,,,,,,Merge,False,,
14400d073ba7ba74ed54ad45a4ec24af74a3dd13 cc47dacd18723665f00ad43f71fd28b991d21044,511298578a7363637e55aafdbaf9fcd7f6cbb402,Salvatore Sanfilippo,antirez@gmail.com,Wed Jan 9 10:12:09 2019 +0100,1547025129,Merge pull request #5746 from UmanShahzad/old-geohash-docsRemove documentation about geohash-int in deps repo.,,,,,,,,,,,,,,,Merge,False,,
511298578a7363637e55aafdbaf9fcd7f6cbb402,914ee43108c5a742c160c7a50d190c15714f9c66,antirez,antirez@gmail.com,Wed Nov 7 17:40:35 2018 +0100,1541608835,RESP3: Double replies and aggregate lengths initial functions.,37.0,12.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2226.0,327.0,-34.00674768518518,11191.0,0.9705940712338204,5865.0,None,False,,
914ee43108c5a742c160c7a50d190c15714f9c66,57c5a766a23130cb47a801200abc2ca7cf4a2a38,antirez,antirez@gmail.com,Thu Nov 8 12:28:56 2018 +0100,1541676536,RESP3: Aggregate deferred lengths functions.,39.0,10.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.6880476235340796,16.0,2203.5,551.0,-20.600387731481486,11192.5,1.6259641864431935,5867.0,None,False,,
57c5a766a23130cb47a801200abc2ca7cf4a2a38,073293693e84b412ad3eaed392f79643a4b2d7a5,antirez,antirez@gmail.com,Thu Nov 8 13:05:50 2018 +0100,1541678750,RESP3: Use new deferred len API in server.c.,13.0,8.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,3182.0,469.0,-16.95642939814815,11194.5,0.9705237920306332,5869.0,None,False,,
073293693e84b412ad3eaed392f79643a4b2d7a5,07bce54093b29342f63d7a4a250ebc626dae5343,antirez,antirez@gmail.com,Thu Nov 8 13:27:34 2018 +0100,1541680054,RESP3: Use new deferred len API in replication.c.,7.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2733.0,225.0,8.070208333333332,11196.0,1.1239125383999793,5870.0,None,False,,
07bce54093b29342f63d7a4a250ebc626dae5343,a577230a58800a9dc88d29b75d2ada605dd85d17,antirez,antirez@gmail.com,Thu Nov 8 13:28:04 2018 +0100,1541680084,RESP3: Use new deferred len API in t_string.c.,1.0,1.0,"src/t_string.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,472.0,68.0,17.08613425925926,11197.0,1.0585269894773348,5871.0,None,False,,
a577230a58800a9dc88d29b75d2ada605dd85d17,470c28380f1323593a660e5fa63a0ba21c6fafed,antirez,antirez@gmail.com,Thu Nov 8 16:24:54 2018 +0100,1541690694,RESP3: Use new deferred len API in t_zset.c.,20.0,27.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3303.0,148.0,98.93280092592592,11198.0,1.010107871106861,5872.0,None,False,,
470c28380f1323593a660e5fa63a0ba21c6fafed,cdd10193c5bcd85eabf6924d57e1d5357c670d03,antirez,antirez@gmail.com,Thu Nov 8 17:54:50 2018 +0100,1541696090,RESP3: Use new deferred len API in config.c.,2.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2274.0,239.0,-33.73778935185185,11199.0,0.9703596465799528,5873.0,None,False,,
cdd10193c5bcd85eabf6924d57e1d5357c670d03,b5076547167eef56187a7c8be2c75d80d37d7b16,antirez,antirez@gmail.com,Fri Nov 9 12:59:00 2018 +0100,1541764740,RESP3: Use new deferred len API in dict.c.,4.0,4.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1549.0,217.0,-51.91114583333334,11200.0,0.9807363142549268,5874.0,None,False,,
b5076547167eef56187a7c8be2c75d80d37d7b16,f44e00b6910513d0dc31a1711a6dcc81526aa77d,antirez,antirez@gmail.com,Fri Nov 9 13:16:21 2018 +0100,1541765781,RESP3: Use new API and types in t_hash.c.,9.0,7.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,825.0,57.0,345.77606481481484,11201.0,1.0028920451753522,5875.0,None,False,,
f44e00b6910513d0dc31a1711a6dcc81526aa77d,1ac692664708108eaa38476a3b9549c9dcca3764,antirez,antirez@gmail.com,Wed Nov 21 11:53:18 2018 +0100,1542797598,RESP3: put RESP version in the client structure.,2.0,0.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,2220.5,554.0,12.962442129629624,11202.5,1.0578213784282515,5877.0,None,False,,
1ac692664708108eaa38476a3b9549c9dcca3764,e14aabf9369aae4faf20a40b63e616e47f43d9c5,antirez,antirez@gmail.com,Wed Nov 21 12:49:39 2018 +0100,1542800979,RESP3: addReply*Len() support for RESP2 backward comp.,8.0,9.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3227569588973983,16.0,2221.5,556.0,0.039131944444444434,11204.5,20.165927240461407,5879.0,None,False,,
e14aabf9369aae4faf20a40b63e616e47f43d9c5,13966522ea739d5f810153d2bf5525cf02482048,antirez,antirez@gmail.com,Wed Nov 21 16:20:17 2018 +0100,1542813617,RESP3: bring RESP2 compatibility to previous changes.,40.0,19.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.1239498677110076,16.0,2221.0,558.0,0.14627314814814815,11206.5,6.127393574932742,5881.0,None,False,,
13966522ea739d5f810153d2bf5525cf02482048,fe67418ba4222dc5580aab36524e3125855ee754,antirez,antirez@gmail.com,Wed Nov 21 17:27:25 2018 +0100,1542817645,RESP3: Use new deferred len API in object.c.,2.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1431.0,146.0,-7.0238657407407405,11208.0,0.8576282581542427,5882.0,None,False,,
fe67418ba4222dc5580aab36524e3125855ee754,c7f80e4f1a6374b3ea3791fb6f80bcaba09e1604,antirez,antirez@gmail.com,Fri Nov 23 12:22:27 2018 +0100,1542972147,RESP3: Make WITHSCORES reply back with a flat array in RESP2.,6.0,4.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3296.0,149.0,14.831631944444444,11209.0,1.0674234638336326,5883.0,None,False,,
c7f80e4f1a6374b3ea3791fb6f80bcaba09e1604,dcbd40cea4497936e20100f14bf7ad4b010d1803,antirez,antirez@gmail.com,Fri Nov 23 12:40:01 2018 +0100,1542973201,RESP3: Use new aggregate reply API in cluster.c.,16.0,16.0,"src/cluster.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",4.0,1.0,1.0,1.7028195311147831,16.0,1862.75,716.0,94.29776909722223,11211.5,1.0107195244829177,5887.0,None,False,,
dcbd40cea4497936e20100f14bf7ad4b010d1803,feb6b318325d8982e2f1e424f0dcf75ed86f5c50,antirez,antirez@gmail.com,Mon Nov 26 16:17:19 2018 +0100,1543245439,RESP3: Use new aggregate reply API in t_set.c.,6.0,6.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,961.0,62.0,118.02483796296295,11214.0,1.00847279282276,5888.0,None,False,,
feb6b318325d8982e2f1e424f0dcf75ed86f5c50,f07f3d729fcd037885d54287fa670dc25243977e,antirez,antirez@gmail.com,Mon Nov 26 16:20:01 2018 +0100,1543245601,RESP3: Use new aggregate reply API in slowlog.c.,5.0,5.0,"src/multi.c,CAS_DELIMITER,src/slowlog.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,16.0,273.5,51.0,66.04047453703704,11215.5,0.9701310781698178,5890.0,None,False,,
f07f3d729fcd037885d54287fa670dc25243977e,9330bcc7eef8598145d20d19133b56a09faf3e88,antirez,antirez@gmail.com,Mon Nov 26 16:22:27 2018 +0100,1543245747,RESP3: Fix API in scripting.c leaving Lua conversions RESP2.,3.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2450.0,199.0,48.16946759259259,11217.0,1.0207600384637379,5891.0,None,False,,
9330bcc7eef8598145d20d19133b56a09faf3e88,a1feda2388d556e6bc0c2f831e0b2f90f5f71abd,antirez,antirez@gmail.com,Mon Nov 26 16:44:00 2018 +0100,1543247040,RESP3: Scripting RESP3 mode set/map protocol -> Lua conversion.,31.0,13.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2450.0,200.0,0.014965277777777775,11218.0,67.82134570765662,5892.0,None,False,,
a1feda2388d556e6bc0c2f831e0b2f90f5f71abd,b7e8b734c92d623f51869e70c874dd03fc9023d2,antirez,antirez@gmail.com,Mon Nov 26 18:55:05 2018 +0100,1543254905,RESP3: remove certain constants to spot places to fix.,4.0,5.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9910760598382222,16.0,3184.0,474.0,11.67501736111111,11219.5,1.048821716271585,5894.0,None,False,,
b7e8b734c92d623f51869e70c874dd03fc9023d2,fc9a3de97df95294903e1135c8daf5e29bba76c3,antirez,antirez@gmail.com,Mon Nov 26 18:57:37 2018 +0100,1543255057,RESP3: remove other pointless shared object.,3.0,5.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,1.5,16.0,2381.333333333333,557.0,1.0885802469135804,11222.0,285.31259606345037,5897.0,None,False,,
fc9a3de97df95294903e1135c8daf5e29bba76c3,1b7298e66ae002b9011c22d8270436506a9dc9b1,antirez,antirez@gmail.com,Tue Nov 27 11:58:55 2018 +0100,1543316335,RESP3: addReplyNull() added.,10.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0957952550009338,16.0,2887.666666666666,810.0,2.4123225308641976,11225.0,1.1544125786080857,5900.0,None,False,,
1b7298e66ae002b9011c22d8270436506a9dc9b1,317f8b9d383f1b7f171aef7ea29f9e05abf0ba83,antirez,antirez@gmail.com,Fri Nov 30 09:41:54 2018 +0100,1543567314,RESP3: most null replies converted.,66.0,60.0,"src/cluster.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/pubsub.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",15.0,1.0,1.0,3.3239370631323624,16.0,1832.2666666666669,2471.0,8.215716049382715,11234.0,1.0269093376220948,5915.0,None,False,,
317f8b9d383f1b7f171aef7ea29f9e05abf0ba83,3a3d806989ea5ee17482c0a085788adb48fd5917,antirez,antirez@gmail.com,Fri Nov 30 10:40:54 2018 +0100,1543570854,RESP3: bitops.c updated.,3.0,3.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1125.0,53.0,152.1778240740741,11242.0,1.006571259683101,5916.0,None,False,,
3a3d806989ea5ee17482c0a085788adb48fd5917,9705c12d85b5428d4923476889a16a55f3589593,antirez,antirez@gmail.com,Fri Nov 30 10:46:55 2018 +0100,1543571215,RESP3: sentinel.c updated.,18.0,18.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4517.0,250.0,29.909814814814816,11243.0,1.0334338412387858,5917.0,None,False,,
9705c12d85b5428d4923476889a16a55f3589593,071da9844ce7b22bd08ea0234655d6482f2d01ad,antirez,antirez@gmail.com,Fri Nov 30 10:50:33 2018 +0100,1543571433,RESP3: blocked.c updated.,3.0,3.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,614.0,48.0,80.79466435185185,11244.0,1.012377054945672,5918.0,None,False,,
071da9844ce7b22bd08ea0234655d6482f2d01ad,86c30a92f984a764ba5f4e941bf04119b173f7cb,antirez,antirez@gmail.com,Fri Nov 30 11:07:07 2018 +0100,1543572427,RESP3: geo.c updated.,16.0,16.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,818.0,54.0,152.1960300925926,11245.0,1.0065704736147956,5919.0,None,False,True,"[""3281ebb495f0c7fb14bf28df3534d800e0c7d6a1""]"
86c30a92f984a764ba5f4e941bf04119b173f7cb,1a17cdfadf43ae6179dc7556caae579436066a2f,antirez,antirez@gmail.com,Fri Nov 30 16:31:02 2018 +0100,1543591862,RESP3: addReplyNullArray() added for better RESP2 compat.,13.0,0.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3912435636292557,16.0,2236.0,566.0,0.2841203703703704,11246.5,3.639726250611048,5921.0,None,False,,
1a17cdfadf43ae6179dc7556caae579436066a2f,2ad6e875ba0db0a1d2f78df2b7e651010137b576,antirez,antirez@gmail.com,Fri Nov 30 16:32:06 2018 +0100,1543591926,RESP3: add shared.nullarray for better RESP2 compat.,7.0,2.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7642045065086203,16.0,3186.5,483.0,0.14280092592592594,11248.5,4.505930274198566,5923.0,None,False,,
2ad6e875ba0db0a1d2f78df2b7e651010137b576,3fd78f41e868c4ecf5b1a3b238dfb2ebe81ff579,antirez,antirez@gmail.com,Fri Nov 30 16:36:55 2018 +0100,1543592215,RESP3: restore the concept of null array for RESP2 compat.,8.0,8.0,"src/blocked.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",7.0,1.0,1.0,2.75,16.0,1792.2857142857142,855.0,0.22579695767195765,11253.0,2.5726063505156938,5930.0,None,False,,
3fd78f41e868c4ecf5b1a3b238dfb2ebe81ff579,ddb98ad56f9e9eb658f79ee8faf2b027e97c0af7,antirez,antirez@gmail.com,Fri Nov 30 16:37:48 2018 +0100,1543592268,RESP3: hyperloglog.c updated.,1.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1588.0,113.0,152.42567129629631,11257.0,1.0065605746820436,5931.0,None,False,,
ddb98ad56f9e9eb658f79ee8faf2b027e97c0af7,920611a4197cd2606504e6ce4bf66ee213c76b36,antirez,antirez@gmail.com,Fri Nov 30 17:10:51 2018 +0100,1543594251,RESP3: latency.c updated.,6.0,6.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,637.0,39.0,27.800405092592587,11258.0,1.0359706988682136,5932.0,None,False,,
920611a4197cd2606504e6ce4bf66ee213c76b36,baf5b3f93a5ac1efeef6c8b18ae5c61cbbbacb45,antirez,antirez@gmail.com,Fri Nov 30 17:12:32 2018 +0100,1543594352,RESP3: module.c updated.,6.0,6.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5191.0,199.0,-20.022442129629628,11259.0,0.9500560424384906,5933.0,None,False,,
baf5b3f93a5ac1efeef6c8b18ae5c61cbbbacb45,8a0391fbc957983d2f42fdc6e9f7da625178d8f5,antirez,antirez@gmail.com,Mon Dec 3 16:24:04 2018 +0100,1543850644,RESP3: t_stream.c updated.,49.0,40.0,"src/blocked.c,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",2.0,1.0,1.0,0.4360946642961213,16.0,1577.5,232.0,8.482887731481481,11260.5,1.1966349980383029,5935.0,None,False,,
8a0391fbc957983d2f42fdc6e9f7da625178d8f5,c2e5be04214acea0bb93f21155333853ab73641a,antirez,antirez@gmail.com,Mon Dec 3 18:02:57 2018 +0100,1543856577,RESP3: fix zrangeGenericCommand() proto dependent array len.,7.0,3.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3298.0,152.0,3.0597453703703703,11262.0,1.3268245814451396,5936.0,None,False,,
c2e5be04214acea0bb93f21155333853ab73641a,0652b05caf32ea6ff5d9aeb17607f35446df55c4,antirez,antirez@gmail.com,Mon Dec 3 18:08:00 2018 +0100,1543856880,RESP3: fix genericHgetallCommand() assert.,3.0,0.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,827.0,59.0,3.351458333333333,11263.0,1.2983775719525084,5937.0,None,False,,
0652b05caf32ea6ff5d9aeb17607f35446df55c4,e5fdd6b6bfa769d83a49643bf58cbe681ed2dfe2,antirez,antirez@gmail.com,Mon Dec 3 19:18:28 2018 +0100,1543861108,RESP3: fix HMGET bug introduced with RESP3 changes.,1.0,1.0,"src/t_hash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,830.0,60.0,0.048935185185185186,11264.0,21.43519394512772,5938.0,None,False,,
e5fdd6b6bfa769d83a49643bf58cbe681ed2dfe2,4f0860cbfd84bb28c895eae525a7168014dc37f8,antirez,antirez@gmail.com,Tue Dec 4 12:46:16 2018 +0100,1543923976,RESP3: initial implementation of the HELLO command.,73.0,15.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.3707177079635418,16.0,3680.8,1273.0,3.836365740740741,11267.0,1.1193921360236867,5943.0,None,False,True,"[""0f0f787a37e6411a02d9a992ecc7bb8af7decf9a"", ""9d632230b65f978758721275bd8abf874361ba4d""]"
4f0860cbfd84bb28c895eae525a7168014dc37f8,809e3a44a7b53f26ba6bfe49012a88a5203fae3e,antirez,antirez@gmail.com,Tue Dec 4 18:00:35 2018 +0100,1543942835,RESP3: addReplyBool() implemented.,9.0,0.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,16.0,2267.5,572.0,0.21827546296296296,11270.5,4.436025239938491,5945.0,None,False,,
809e3a44a7b53f26ba6bfe49012a88a5203fae3e,d5c54f0b3a908595afead2cbcd93555f2886f22f,antirez,antirez@gmail.com,Tue Dec 4 19:01:33 2018 +0100,1543946493,RESP3: hiredis updated with recent version + some RESP3 support.,501.0,228.0,"deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/adapters/libuv.h,CAS_DELIMITER,deps/hiredis/appveyor.yml,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/fmacros.h,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER",16.0,1.0,2.0,3.2642272582948304,13.0,392.0625,114.0,680.7757132523149,11279.5,1.0003012176158583,1577.0,None,False,,
d5c54f0b3a908595afead2cbcd93555f2886f22f,eb3c5a70d48f83c3222553fb0bf8c2c61395e886,antirez,antirez@gmail.com,Wed Dec 5 11:55:29 2018 +0100,1544007329,RESP3: hiredis: fix read.c assert for new types.,6.0,2.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,13.0,874.0,18.0,0.7041203703703703,11288.5,2.065158787559997,1579.0,None,False,,
eb3c5a70d48f83c3222553fb0bf8c2c61395e886,d4a4375d0510732e9578f9b54ab4cd7e85345393,antirez,antirez@gmail.com,Wed Dec 5 11:59:55 2018 +0100,1544007595,RESP3: hiredis: free map and set replies.,3.0,1.0,"deps/hiredis/hiredis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1141.0,17.0,0.0030787037037037037,11290.0,325.812030075188,1580.0,None,False,,
d4a4375d0510732e9578f9b54ab4cd7e85345393,24a05e39f0e358d8332f82fb827d05c894462476,antirez,antirez@gmail.com,Wed Dec 5 12:00:47 2018 +0100,1544007647,RESP3: hiredis: fix hiredis.c assert for new types.,6.0,2.0,"deps/hiredis/hiredis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,1143.0,18.0,0.0006018518518518519,11291.0,1662.5384615384617,1581.0,None,False,,
24a05e39f0e358d8332f82fb827d05c894462476,005915b5c3ed1fcb79e3e0ed6b5d41c057ef5a3b,antirez,antirez@gmail.com,Wed Dec 5 12:22:37 2018 +0100,1544008957,RESP3: hiredis: map and set display for TTY output.,31.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11028.0,325.0,-28.332777777777785,11292.0,0.9647051902978492,5946.0,None,False,,
005915b5c3ed1fcb79e3e0ed6b5d41c057ef5a3b,a2b2d88f384c4ad3e812cceccd4720a9c650207c,antirez,antirez@gmail.com,Thu Dec 6 11:23:23 2018 +0100,1544091803,RESP3: hiredis: initial double implementation.,67.0,1.0,"deps/hiredis/.travis.yml,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER",6.0,2.0,2.0,1.6959830112978742,16.0,2197.833333333333,364.0,120.2067573302469,11295.5,1.0013925606034373,5947.0,None,False,,
a2b2d88f384c4ad3e812cceccd4720a9c650207c,b8134dbfa734426c43741e8cd50bbdc5a7295dd1,antirez,antirez@gmail.com,Thu Dec 6 11:29:53 2018 +0100,1544092193,RESP3: hiredis: fix double implementation.,4.0,4.0,"deps/hiredis/read.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,645.0,4.0,0.004513888888888889,11299.0,222.5384615384616,1587.0,None,False,,
b8134dbfa734426c43741e8cd50bbdc5a7295dd1,ee4c355a3e5f46ed9ce5749228f9c15e2b1be427,antirez,antirez@gmail.com,Thu Dec 6 11:33:58 2018 +0100,1544092438,RESP3: hiredis: implement null type.,9.0,0.0,"deps/hiredis/read.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,645.0,5.0,0.0028356481481481483,11300.0,353.65306122448976,1588.0,None,False,,
ee4c355a3e5f46ed9ce5749228f9c15e2b1be427,045b1f633977926e37a8c77ccd311734abb56749,antirez,antirez@gmail.com,Thu Dec 6 11:43:11 2018 +0100,1544092991,RESP3: hiredis: save the original double string.,20.0,5.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER",4.0,1.0,1.0,1.291314688649721,16.0,539.5,42.0,0.011912615740740741,11302.5,40.89379657103349,1592.0,None,False,,
045b1f633977926e37a8c77ccd311734abb56749,62b2642c518bf3cc19b2578598f79598b54309e8,antirez,antirez@gmail.com,Thu Dec 6 11:44:17 2018 +0100,1544093057,RESP3: redis-cli: show the double as received from Redis.,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11059.0,327.0,0.014513888888888887,11305.0,69.89952153110048,5948.0,None,False,,
62b2642c518bf3cc19b2578598f79598b54309e8,c3bf646ef34e7fca0c58b87ef308ed975e53e7e6,antirez,antirez@gmail.com,Fri Dec 7 16:42:49 2018 +0100,1544197369,RESP3: fix DEBUG DIGEST-VALUE with new API.,1.0,1.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1447.0,163.0,-3.8657523148148147,11306.0,0.7413181397660487,5949.0,None,False,,
c3bf646ef34e7fca0c58b87ef308ed975e53e7e6,795ad670f9f3e2c09f8fb4c26b11a080def4420e,antirez,antirez@gmail.com,Mon Dec 10 12:27:18 2018 +0100,1544441238,RESP3: DEBUG PROTOCOL command. Only types already supported by API.,43.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1447.0,164.0,2.82255787037037,11307.0,1.3542885729633534,5950.0,None,False,,
795ad670f9f3e2c09f8fb4c26b11a080def4420e,4e2dd54df0a0fc305024a0b0df9d8a604ab7f6e1,antirez,antirez@gmail.com,Mon Dec 10 12:31:10 2018 +0100,1544441470,RESP3: DEBUG PROTOCOL: fix strcasecmp() check.,10.0,10.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1490.0,165.0,0.002685185185185185,11308.0,373.4137931034483,5951.0,None,False,,
4e2dd54df0a0fc305024a0b0df9d8a604ab7f6e1,8042afb246daaaaeb5a76614b2791c082ecb6654,antirez,antirez@gmail.com,Mon Dec 10 12:35:28 2018 +0100,1544441728,RESP3: Fix addReplyBool() RESP2/3 output.,5.0,2.0,"src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,16.0,1932.0,503.0,2.8886053240740743,11309.5,168.52840742184878,5953.0,None,False,,
8042afb246daaaaeb5a76614b2791c082ecb6654,afba21129769f10604559a7a62fc39ac711faf27,antirez,antirez@gmail.com,Mon Dec 10 16:39:27 2018 +0100,1544456367,RESP3: DEBUG PROTOCOL: boolean types.,4.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1493.0,167.0,0.16943287037037036,11311.0,6.902042489241069,5954.0,None,False,,
afba21129769f10604559a7a62fc39ac711faf27,e2911703855cd499e3323fcb750eac3847d1e18f,antirez,antirez@gmail.com,Mon Dec 10 16:55:20 2018 +0100,1544457320,RESP3: verbatim reply API + DEBUG PROTOCOL support.,32.0,0.0,"src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5349547231656377,16.0,2013.666666666667,743.0,2.048726851851852,11313.0,33.01529815444055,5957.0,None,False,,
e2911703855cd499e3323fcb750eac3847d1e18f,dfa9d2c74ca8b4bc66390d49d1d52cb6b325e16e,antirez,antirez@gmail.com,Mon Dec 10 17:10:11 2018 +0100,1544458211,RESP3: hiredis: implement bool type.,35.0,1.0,"deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER",3.0,1.0,1.0,1.0222670655189308,16.0,652.0,32.0,4.227083333333334,11316.0,1.1445703959257434,1595.0,None,False,,
dfa9d2c74ca8b4bc66390d49d1d52cb6b325e16e,7d4b600f5df045eb08f49bb33af9a4a75cb480b2,antirez,antirez@gmail.com,Mon Dec 10 17:11:42 2018 +0100,1544458302,RESP3: redis-cli support for boolean in TTY output.,3.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11059.0,328.0,4.227372685185185,11318.0,1.2365535462497776,5958.0,None,False,,
7d4b600f5df045eb08f49bb33af9a4a75cb480b2,709a6612eb07a8d9fd78c3421baff5fb8e8d698c,antirez,antirez@gmail.com,Mon Dec 17 16:59:19 2018 +0100,1545062359,RESP3: addReplyString() -> addReplyProto().The function naming was totally nuts. Let's fix it as we break PRsnanyway with RESP3 refactoring and changes.n,34.0,34.0,"src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,0.8850672865827045,16.0,2800.6,1173.0,14.666215277777773,11321.0,1.05157235477037,5963.0,None,False,,
709a6612eb07a8d9fd78c3421baff5fb8e8d698c,798a32919291968d9ea44e6266ba5f8d505f4263,antirez,antirez@gmail.com,Tue Dec 18 12:19:24 2018 +0100,1545131964,RESP3: extract code to send pubsub messages into functions.,24.0,11.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,377.0,31.0,18.109375,11324.0,1.0552200172562554,5964.0,None,False,,
798a32919291968d9ea44e6266ba5f8d505f4263,bc75a94e2d00ff0cccde475de0980a89bbc641e9,antirez,antirez@gmail.com,Tue Dec 18 12:33:51 2018 +0100,1545132831,RESP3: pubsub messages API completely refactored.,75.0,57.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,390.0,32.0,0.010034722222222223,11325.0,100.65397923875432,5965.0,None,False,,
bc75a94e2d00ff0cccde475de0980a89bbc641e9,eaaac0889223406bef4e7ee34d75616ac6599b36,antirez,antirez@gmail.com,Wed Dec 19 17:41:15 2018 +0100,1545237675,RESP3: Pubsub messages in new push format if client is in RESP3 mode.,24.0,6.0,"src/pubsub.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,408.0,33.0,1.2134722222222225,11326.0,1.824081492503148,5966.0,None,False,,
eaaac0889223406bef4e7ee34d75616ac6599b36,a4f8f4a8246965c28a2ed3906a0567fbbfe09440,antirez,antirez@gmail.com,Wed Dec 19 17:55:07 2018 +0100,1545238507,"RESP3: PING should reply normally in RESP3 Pub/Sub mode.Because in RESP3 commands can be sent in the Pub/Sub connection withoutnproblems, so it's better if in such mode there is no exception aboutnPING.n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4212.0,252.0,15.214479166666667,11327.0,1.0657268638016144,5967.0,None,False,,
a4f8f4a8246965c28a2ed3906a0567fbbfe09440,9018388c3f2d183f5110b57649d3239bd699291e,antirez,antirez@gmail.com,Wed Dec 19 17:56:50 2018 +0100,1545238610,RESP3: Allow any command in RESP3 Pub/Sub mode.,3.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4212.0,253.0,0.0011921296296296296,11328.0,839.8349514563107,5968.0,None,False,,
9018388c3f2d183f5110b57649d3239bd699291e,4d80b0e9657bed6db68debdc5aeab62121d27835,antirez,antirez@gmail.com,Fri Dec 21 17:11:52 2018 +0100,1545408712,RESP3: allow HELLO during busy script and not authenticated states.,4.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4213.0,254.0,1.968773148148148,11329.0,1.5079305357961694,5969.0,None,False,,
4d80b0e9657bed6db68debdc5aeab62121d27835,b43d70df568d85ba0fb79c9e0129d4654ef471ee,antirez,antirez@gmail.com,Fri Dec 21 17:16:22 2018 +0100,1545408982,ACL: refactoring of the original authentication code.,100.0,44.0,"src/Makefile,CAS_DELIMITER,src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.1205766575975584,16.0,1674.25,663.0,7.588104745370371,11331.5,1.0367120066133253,5973.0,None,False,,
b43d70df568d85ba0fb79c9e0129d4654ef471ee,f5d918b2bb1bae3c84dee635ac13526779e9294c,antirez,antirez@gmail.com,Fri Dec 21 17:24:14 2018 +0100,1545409454,ACL: HELLO should stop if the user is not authenticated.,9.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2403.0,340.0,4.01730324074074,11334.0,1.2489232054624817,5974.0,None,False,,
f5d918b2bb1bae3c84dee635ac13526779e9294c,42271cff2dcd0a30ef337e7284e134053c91f852,antirez,antirez@gmail.com,Wed Jan 9 17:09:30 2019 +0100,1547050170,ACL: fix ACLCheckUserCredentials() usage in AUTH.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4174.0,256.0,18.995231481481486,11335.0,1.0526447914559454,5975.0,None,False,,
42271cff2dcd0a30ef337e7284e134053c91f852,91f1d8026b6697ee0649c7d2a8955be563e31863,antirez,antirez@gmail.com,Wed Jan 9 17:20:47 2019 +0100,1547050847,ACL: introduce the concept of command ID.,207.0,201.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.09539602831657476,16.0,3174.0,497.0,9.505451388888893,11336.5,64.83723127340464,5977.0,None,False,,
91f1d8026b6697ee0649c7d2a8955be563e31863,010b24f864134bc8f52228e6bbf6f8c52cecd5b6,antirez,antirez@gmail.com,Wed Jan 9 17:23:23 2019 +0100,1547051003,ACL: set the command ID while populating the commands table.,4.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4175.0,258.0,0.0018055555555555555,11338.0,554.8461538461539,5978.0,None,False,,
010b24f864134bc8f52228e6bbf6f8c52cecd5b6,7fc882c57854e952c866a7925e574dbf5db162bd,antirez,antirez@gmail.com,Wed Jan 9 21:31:29 2019 +0100,1547065889,ACL: use a fixed table for command IDs.,27.0,2.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3141506221482602,16.0,2151.0,501.0,6.507851080246912,11340.0,1.0516821922541009,5981.0,None,False,,
7fc882c57854e952c866a7925e574dbf5db162bd,45ff9f33d663c9d2db6a76f739d8c8f507808182,antirez,antirez@gmail.com,Wed Jan 9 21:47:43 2019 +0100,1547066863,ACL: ACLCheckUserCredentials() next id should be static.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,112.0,2.0,0.011273148148148148,11342.0,89.70636550308008,5982.0,None,False,,
45ff9f33d663c9d2db6a76f739d8c8f507808182,4729f71495b008788e356476ed12b1a0ddfa11ca,antirez,antirez@gmail.com,Thu Jan 10 12:47:52 2019 +0100,1547120872,ACL: improved version of the user structure.,19.0,0.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2188.0,242.0,0.6363773148148149,11343.0,2.5713947947547418,5983.0,None,False,,
4729f71495b008788e356476ed12b1a0ddfa11ca,4278104acc054d09623ca2389107b46a79a7a336,antirez,antirez@gmail.com,Thu Jan 10 16:33:48 2019 +0100,1547134428,ACL: add a reference to the user in each client.,35.0,27.0,"src/acl.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5215912118439294,16.0,1577.0,587.0,6.967959104938271,11345.0,1.4582687988312069,5986.0,None,False,,
4278104acc054d09623ca2389107b46a79a7a336,e9a902a95802367462cf42d9f950498ccf00b74b,antirez,antirez@gmail.com,Thu Jan 10 16:35:55 2019 +0100,1547134555,ACL: split acl.c into clear sections.,12.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,117.0,4.0,0.0014699074074074074,11347.0,681.3149606299213,5987.0,None,False,,
e9a902a95802367462cf42d9f950498ccf00b74b,29c88a9ce593639599076bd1f564306e38ea7428,antirez,antirez@gmail.com,Thu Jan 10 16:39:32 2019 +0100,1547134772,ACL: initialization function.,13.0,0.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.7732283485249176,16.0,2172.0,509.0,0.26791666666666664,11349.0,134.55040392827516,5990.0,None,False,True,"[""45952df700c57d8a0062317959845120a66acc38""]"
29c88a9ce593639599076bd1f564306e38ea7428,e4846b028d77b6ee3ee2bdc386104eeba8ba7c85,antirez,antirez@gmail.com,Thu Jan 10 16:40:45 2019 +0100,1547134845,ACL: implement ACLGetUserByName().,3.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,140.0,6.0,0.0008449074074074074,11351.0,1184.5616438356165,5991.0,None,False,,
e4846b028d77b6ee3ee2bdc386104eeba8ba7c85,6bb6a6d3a8fb017e6b2e981c76d44ebe56b25b65,antirez,antirez@gmail.com,Thu Jan 10 17:01:12 2019 +0100,1547136072,ACL: implement ACLCreateUser().,24.0,1.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,16.0,1176.0,252.0,0.014623842592592591,11352.5,53.30319396483746,5993.0,None,False,,
6bb6a6d3a8fb017e6b2e981c76d44ebe56b25b65,dc4f7ad106b69cd6208becd39f35d263b4d1e61b,antirez,antirez@gmail.com,Fri Jan 11 11:02:55 2019 +0100,1547200975,ACL: create the default user.,6.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,162.0,8.0,0.7511921296296297,11354.0,2.331217355129964,5994.0,None,False,,
6bb6a6d3a8fb017e6b2e981c76d44ebe56b25b65,45952df700c57d8a0062317959845120a66acc38,charsyam,charsyam@gmail.com,Fri Jan 11 19:12:06 2019 +0900,1547201526,fix segmentfault when server start,3.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4179.0,261.0,0.7726157407407407,26.0,2.294304461155886,26.0,Corrective,True,,
dc4f7ad106b69cd6208becd39f35d263b4d1e61b,4b72d087e9b3cbbe831d90d6612dfcba5922f1d2,antirez,antirez@gmail.com,Fri Jan 11 11:25:55 2019 +0100,1547202355,"ACL: ACLSetUser(), initial ideas in comments.",31.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,167.0,9.0,0.015972222222222218,11355.0,63.60869565217392,5995.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
4b72d087e9b3cbbe831d90d6612dfcba5922f1d2 45952df700c57d8a0062317959845120a66acc38,6078d85b525f6595893610c99efd8c47bf4b3137,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 11 11:27:09 2019 +0100,1547202429,Merge pull request #5769 from charsyam/feature/fix-segmentfault-when-server-startsfix segmentfault when server start in unstable branch,,,,,,,,,,,,,,,Merge,False,,
6078d85b525f6595893610c99efd8c47bf4b3137,7f8314760a764a1cfb7405b414e71fc6eba79d90,antirez,antirez@gmail.com,Fri Jan 11 11:30:09 2019 +0100,1547202609,ACL: modify comment from PR.,2.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4181.0,262.0,0.01253472222222222,11356.0,80.77839335180056,5996.0,None,False,,
7f8314760a764a1cfb7405b414e71fc6eba79d90,aced0328e3fb532496afa1a30eb4227316aef3bd,antirez,antirez@gmail.com,Fri Jan 11 11:32:41 2019 +0100,1547202761,ACL: avoid a radix tree lookup for the default user.,2.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,2313.0,588.0,0.7813773148148149,11357.5,1.9521460661935903,5998.0,None,False,,
aced0328e3fb532496afa1a30eb4227316aef3bd,e7d15e4820f660e412974ae46b6b9ea61e59ace3,antirez,antirez@gmail.com,Fri Jan 11 13:03:50 2019 +0100,1547208230,ACL: implement to first trivial opcodes in ACLSetUser().,25.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,198.0,10.0,0.06799768518518519,11359.0,15.706382978723404,5999.0,None,False,,
e7d15e4820f660e412974ae46b6b9ea61e59ace3,67754ae021d5cb29dc9555a59847b652833a6e20,antirez,antirez@gmail.com,Mon Jan 14 13:18:12 2019 +0100,1547468292,"ACL: ACLSetUser(), fix flag and add allcommands +@all opcode.",6.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,221.0,11.0,3.009976851851852,11360.0,1.3322284685959502,6000.0,None,False,,
67754ae021d5cb29dc9555a59847b652833a6e20,4376575d833cfb66a904c0035b5ca69dffad5179,antirez,antirez@gmail.com,Mon Jan 14 13:19:42 2019 +0100,1547468382,"ACL: ACLSetUser(), add allcommands in comment.",1.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,226.0,12.0,0.0010416666666666669,11361.0,961.0,6001.0,None,False,,
4376575d833cfb66a904c0035b5ca69dffad5179,f95152d4c840ae4540224ad788f2f8e4a782b677,antirez,antirez@gmail.com,Mon Jan 14 13:19:50 2019 +0100,1547468390,ACL: Add skeleton for function checking ability to execute a command.,23.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,227.0,13.0,9.259259259259259e-05,11362.0,10801.0,6002.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
f95152d4c840ae4540224ad788f2f8e4a782b677,648411eb7dcd5a16cfbd146823cff8aeeb269369,antirez,antirez@gmail.com,Mon Jan 14 13:20:45 2019 +0100,1547468445,ACL: Add hook in processCommand() to check the ACLs before call().,6.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4180.0,263.0,3.0768055555555565,11363.0,1.3250124136685777,6003.0,None,False,,
648411eb7dcd5a16cfbd146823cff8aeeb269369,2da2e452ab49e7a7d7f45229e1d9c3a8ce02811a,antirez,antirez@gmail.com,Mon Jan 14 13:21:21 2019 +0100,1547468481,ACL: ACLLCOMMAND flags.,4.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2214.0,247.0,3.075462962962963,11364.0,1.3251542977570374,6004.0,None,False,,
2da2e452ab49e7a7d7f45229e1d9c3a8ce02811a,a0a4fb85ff33cddd2e71799f240ff3eda3cec01f,antirez,antirez@gmail.com,Mon Jan 14 13:22:56 2019 +0100,1547468576,ACL: Fix compilation by adding prototype and c->cmd fix.,2.0,1.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,3201.5,512.0,0.0013078703703703705,11365.5,521.9214348442883,6006.0,None,False,,
a0a4fb85ff33cddd2e71799f240ff3eda3cec01f,09391369b871eb9def03a61bafa40c7cfedda6a7,antirez,antirez@gmail.com,Mon Jan 14 16:09:29 2019 +0100,1547478569,ACL: fix field name typo causing segfault.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,250.0,14.0,0.1178125,11367.0,9.488063660477453,6007.0,None,False,,
09391369b871eb9def03a61bafa40c7cfedda6a7,733438fe23f67559d4da922c749664ed5db5dfc9,antirez,antirez@gmail.com,Mon Jan 14 17:01:49 2019 +0100,1547481709,"RESP3: Populate new fields for the AOF fake client.However we should remove this fake client ad-hoc creation, and replacenit with the proper call to createClient(-1), and then adjust the fakenclient as we like.n",2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1779.0,184.0,90.00997685185185,11368.0,1.0111098795375306,6008.0,None,False,,
733438fe23f67559d4da922c749664ed5db5dfc9,a2e376ba5293e2b1f67c856add6eb61fbd1e7692,antirez,antirez@gmail.com,Mon Jan 14 18:35:21 2019 +0100,1547487321,ACL: ACLCheckCommandPerm() implementation WIP.,32.0,5.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4059770384755711,16.0,1234.0,264.0,0.1591261574074074,11369.5,7.507095106735593,6010.0,None,False,,
733438fe23f67559d4da922c749664ed5db5dfc9,b00e1891c04bd375bb7d9877397c675335f8b40c,Madelyn Olson,matolson@amazon.com,Tue Jan 15 07:26:19 2019 +0000,1547537179,Fixed a rounding bug in geo.tcl,13.0,1.0,"tests/unit/geo.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,311.0,20.0,560.5748611111111,3.0,1.001783883062501,0.0,Corrective,True,,
a2e376ba5293e2b1f67c856add6eb61fbd1e7692,7aea02fa87b3b900d65102a5029a52871994ac15,antirez,antirez@gmail.com,Tue Jan 15 09:36:12 2019 +0100,1547541372,ACL: initial implementation of the ACL command.,40.0,2.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.6845331245320924,16.0,2227.0,531.0,0.6979089506172839,11372.0,1.9190810255665391,6013.0,None,False,,
7aea02fa87b3b900d65102a5029a52871994ac15,4f7ff85b8871a1048044c94338cf56b30c17dbcf,antirez,antirez@gmail.com,Tue Jan 15 12:58:54 2019 +0100,1547553534,ACL: ability to set/remove user passwords.,30.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,312.0,17.0,0.14076388888888888,11374.0,8.10409472126295,6014.0,None,False,True,"[""ea7c3fe7fd6d269e1e09443db3e2148cb445febb""]"
4f7ff85b8871a1048044c94338cf56b30c17dbcf,b39409bcf8ee67cab100c5ffc6664c058a6b3333,antirez,antirez@gmail.com,Tue Jan 15 13:16:31 2019 +0100,1547554591,ACL: nopass user setting.This is needed in order to model the current behavior of authenticatingnthe connection directly when no password is set. Now with ACLs this willnbe obtained by setting the default user as nopass user. Moreover thisnflag can be used in order to create other users that do not require anynpassword but will work with AUTH username <any-password>.n,21.0,1.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.8453509366224365,16.0,1278.5,269.0,0.08261574074074074,11375.5,44.896445609504525,6016.0,None,False,,
b39409bcf8ee67cab100c5ffc6664c058a6b3333,52e99229874d92507cb768a665ed16185c4fbffa,antirez,antirez@gmail.com,Tue Jan 15 13:45:16 2019 +0100,1547556316,"ACL: AUTH command new form, using the ACL subsystem.",30.0,6.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4187.0,266.0,0.17296296296296296,11377.0,6.781584582441112,6017.0,None,False,,
52e99229874d92507cb768a665ed16185c4fbffa,35fe59935ef809956f593cd4973387665d2d072f,antirez,antirez@gmail.com,Tue Jan 15 17:57:49 2019 +0100,1547571469,ACL: automatically authenticate the nopass default user.,3.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2413.0,343.0,4.267453703703704,11378.0,1.234331774737733,6018.0,None,False,,
35fe59935ef809956f593cd4973387665d2d072f,cca64672f418aa793ed36fcb6da8977ea11b240a,antirez,antirez@gmail.com,Tue Jan 15 18:16:20 2019 +0100,1547572580,ACL: AUTH uses users. ACL WHOAMI implemented.,42.0,14.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.1292337748458849,16.0,1288.5,271.0,0.20820601851851853,11379.5,4.602201345266552,6020.0,None,False,,
cca64672f418aa793ed36fcb6da8977ea11b240a,c79b01f4baf8948a22fdca96a73710466b4fcd41,antirez,antirez@gmail.com,Tue Jan 15 18:26:44 2019 +0100,1547573204,ACL: the AUTH command can be always executed.,3.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,378.0,20.0,0.007222222222222222,11381.0,139.46153846153848,6021.0,None,False,,
c79b01f4baf8948a22fdca96a73710466b4fcd41,ff92c069475bd6f0ebbaca009ad3168c9d359851,antirez,antirez@gmail.com,Tue Jan 15 18:28:43 2019 +0100,1547573323,ACL: fix command exec check by returning.,8.0,6.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4211.0,267.0,0.1968402777777777,11382.0,6.080261068971598,6022.0,None,False,,
733438fe23f67559d4da922c749664ed5db5dfc9,645d44d545ec958b9f541d4b7473ec021331ab04,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jan 16 19:19:10 2019 +0800,1547637550,"Streams: checkType before XGROUP CREATEFix issue #5785, in case create group on a key is not stream.n",7.0,5.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2546.0,183.0,43.82993055555556,139.0,1.022815459375015,132.0,None,False,,
ff92c069475bd6f0ebbaca009ad3168c9d359851,0db42d4ba8148a1e493f2da208d4bcf509716870,antirez,antirez@gmail.com,Wed Jan 16 13:29:04 2019 +0100,1547641744,ACL: implement the key match opcode in ACLSetUser().,6.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,380.0,21.0,0.7932870370370371,11383.0,2.260577764808871,6023.0,None,False,,
0db42d4ba8148a1e493f2da208d4bcf509716870,f78b3ede2735397704fd452619efcbdac37254f6,antirez,antirez@gmail.com,Wed Jan 16 13:39:04 2019 +0100,1547642344,ACL: key matching implemented.,23.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,386.0,22.0,0.006944444444444444,11384.0,145.0,6024.0,None,False,,
f78b3ede2735397704fd452619efcbdac37254f6,dbae371090780b81ccecfc0d24aa46715b873f36,antirez,antirez@gmail.com,Wed Jan 16 13:50:00 2019 +0100,1547643000,ACL: create the user pattern list ASAP.,3.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,409.0,23.0,0.0075925925925925935,11385.0,132.70731707317074,6025.0,None,False,,
dbae371090780b81ccecfc0d24aa46715b873f36,4a3419acfcaa178237a09e769aa34163d1391d09,antirez,antirez@gmail.com,Wed Jan 16 18:31:05 2019 +0100,1547659865,ACL: fix and improve ACL key checking.,28.0,10.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.3235315761100483,16.0,2282.333333333333,545.0,0.7356944444444444,11387.0,3.1372186345833644,6028.0,None,False,,
4a3419acfcaa178237a09e769aa34163d1391d09,7b65605ab27e00cfdd58db048da398e27d783038,antirez,antirez@gmail.com,Thu Jan 17 18:05:43 2019 +0100,1547744743,ACL: reimplement requirepass option in term of ACLs.,45.0,5.0,"src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.14144054254182067,16.0,2252.5,494.0,35.49497106481482,11389.5,1.0141853372839835,6030.0,None,False,,
7b65605ab27e00cfdd58db048da398e27d783038,0526d1538beaa36567e595becf8f890e92d109aa,antirez,antirez@gmail.com,Thu Jan 17 18:19:04 2019 +0100,1547745544,ACL: partial implementation of ACL GETUSER.,39.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,413.0,25.0,0.9916550925925924,11391.0,2.008415130895552,6031.0,None,False,,
0526d1538beaa36567e595becf8f890e92d109aa,636424c0ce6d162e13c4b00b01ad43bba06c580b,antirez,antirez@gmail.com,Thu Jan 17 18:22:22 2019 +0100,1547745742,ACL: change requirepass stop condition to use ACLs.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4221.0,269.0,0.9939467592592592,11392.0,2.006090105616172,6032.0,None,False,,
636424c0ce6d162e13c4b00b01ad43bba06c580b,b87815c1f800690c90bbc6c50bbe62878841d0b9,antirez,antirez@gmail.com,Thu Jan 17 18:30:23 2019 +0100,1547746223,ACL: AUTH + no default user password raises an error.This way the behavior is very similar to the past one.nThis is useful in order to remember the user she probably failed tonconfigure a password correctly.n,15.0,6.0,"src/server.c,CAS_DELIMITER,tests/unit/auth.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7024665512903903,16.0,2124.0,276.0,815.4786747685182,11393.5,90.81319638129897,810.0,None,False,,
b87815c1f800690c90bbc6c50bbe62878841d0b9,2c66c525f93539dab5e4fb71327fda2a9672cf3b,antirez,antirez@gmail.com,Thu Jan 17 18:33:36 2019 +0100,1547746416,ACL: configure the master connection without user.,1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2733.0,227.0,31.065474537037037,11395.0,1.0321900764402543,6034.0,None,False,,
2c66c525f93539dab5e4fb71327fda2a9672cf3b,ac6e49de4884eb1c2508179b903b0dfadde0f0b9,antirez,antirez@gmail.com,Fri Jan 18 11:26:29 2019 +0100,1547807189,ACL: implement resetpass directive and adjust test.,4.0,1.0,"src/acl.c,CAS_DELIMITER,tests/unit/dump.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9709505944546686,16.0,410.0,44.0,48.818304398148136,11396.5,1.7059077928885948,811.0,None,False,,
ac6e49de4884eb1c2508179b903b0dfadde0f0b9,7de6e30241127b60d4bf716a3399473320afe571,antirez,antirez@gmail.com,Fri Jan 18 11:30:40 2019 +0100,1547807440,ACL: fix config get requirepass.,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2313.0,241.0,0.7256597222222222,11398.0,2.3780563663333174,6036.0,None,False,,
7de6e30241127b60d4bf716a3399473320afe571,c8391388c221b9255a7b6536c3f43438f36b8e2b,antirez,antirez@gmail.com,Fri Jan 18 11:49:30 2019 +0100,1547808570,ACL: remove server.requirepass + some refactoring.,18.0,11.0,"src/acl.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,1.0,2.153202998653529,16.0,2694.0,1392.0,8.199035493827159,11401.5,17.232409926887144,6042.0,None,False,,
c8391388c221b9255a7b6536c3f43438f36b8e2b,c90cf3d82f3288762441f2c287a21301c8be0ae7,Zhicheng Wei,zhicheng@opensourceforge.net,Sat Jan 19 11:38:36 2019 +0800,1547869116,fix clusterManagerGetAntiAffinityScore double free otypes,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11062.0,329.0,39.47701388888889,0.0,0.0,0.0,Corrective,True,,
c8391388c221b9255a7b6536c3f43438f36b8e2b,ab1992c9c6a985e196e66b5ea185c65e1e69e666,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Jan 21 14:53:46 2019 +0800,1548053626,ACL: fix compile warnings,2.0,2.0,"src/acl.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,1388.5,271.0,2.8362962962962963,140.5,1.2644293549229564,134.0,None,False,,
81008bf99e131a2e56ccf467a6c60debb522759f,3f0c2b1fa28870b15259b4d4fac92732e4c36976,WuYunlong,xzsyeb@126.com,Mon Jan 21 17:27:36 2019 +0800,1548062856,Update dict resize policy when aof rewrite process gets killed.,2.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1781.0,185.0,6.726238425925926,16.0,1.1486715065207254,12.0,None,False,,
3f0c2b1fa28870b15259b4d4fac92732e4c36976,f004a3e7ff01dfb8952fc424a68f780486c846ba,WuYunlong,xzsyeb@126.com,Mon Jan 21 17:33:18 2019 +0800,1548063198,Update dict resize policy when rdb child process gets killed.,2.0,0.0,"src/db.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,2141.5,447.0,27.851076388888888,17.5,1.0185851025909445,14.0,None,False,,
81008bf99e131a2e56ccf467a6c60debb522759f,440385de143902a77338091cf658d15381e028fa,WuYunlong,xzsyeb@126.com,Mon Jan 21 17:48:45 2019 +0800,1548064125,Fix child info pipe fd leak when child process gets killed.,3.0,0.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER",3.0,1.0,1.0,1.584962500721156,16.0,2022.666666666667,635.0,0.012048611111111107,20.0,46.03169157664463,17.0,Corrective,True,,
c8391388c221b9255a7b6536c3f43438f36b8e2b f004a3e7ff01dfb8952fc424a68f780486c846ba,9f939610f3c9ee26e3d4aec507ef7ec8f9c0d02d,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 11:14:48 2019 +0100,1548065688,Merge pull request #5797 from trevor211/fixUpdateDictResizePolicyFix update dict resize policy,,,,,,,,,,,,,,,Merge,False,,
9f939610f3c9ee26e3d4aec507ef7ec8f9c0d02d,cfdc800a5ff5a2bb02ccd1e21c1c36e6cb5a474d,antirez,antirez@gmail.com,Mon Jan 21 11:15:43 2019 +0100,1548065743,Remove non semantical newline space from PR #5797.,0.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1784.0,187.0,0.018726851851851845,11405.0,54.399258343634116,6043.0,Feature Addition,False,,
440385de143902a77338091cf658d15381e028fa cfdc800a5ff5a2bb02ccd1e21c1c36e6cb5a474d,adfaf548e3ad151e31ba84dbb7e6c59982e2c2b8,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 11:20:56 2019 +0100,1548066056,Merge branch 'unstable' into fixChildInfoPipeFdLeak,,,,,,,,,,,,,,,Merge,False,,
cfdc800a5ff5a2bb02ccd1e21c1c36e6cb5a474d adfaf548e3ad151e31ba84dbb7e6c59982e2c2b8,5f42bfce0507308e05937df9336441e59a1b8b90,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 11:21:12 2019 +0100,1548066072,Merge pull request #5798 from trevor211/fixChildInfoPipeFdLeakFix child info pipe fd leak when child process gets killed.,,,,,,,,,,,,,,,Merge,False,,
5f42bfce0507308e05937df9336441e59a1b8b90,4dc69497f509956d298455492fe5ab98a9738cb6,antirez,antirez@gmail.com,Mon Jan 21 11:28:44 2019 +0100,1548066524,Refactoring: always kill AOF/RDB child via helper functions.,17.0,14.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,1.0,2.3706464280594406,16.0,2497.1666666666665,1405.0,9.971684027777778,11408.5,23.978110256362577,6049.0,None,False,,
4dc69497f509956d298455492fe5ab98a9738cb6 ab1992c9c6a985e196e66b5ea185c65e1e69e666,7c53e5bdc45e0faf0087e4d0d2abe3dc5c76071e,Salvatore Sanfilippo,antirez@gmail.com,Mon Jan 21 17:14:04 2019 +0100,1548087244,Merge pull request #5796 from soloestoy/fix-acl-compile-warningACL: fix compile warnings,,,,,,,,,,,,,,,Merge,False,,
7c53e5bdc45e0faf0087e4d0d2abe3dc5c76071e c90cf3d82f3288762441f2c287a21301c8be0ae7,ed356c3a79e2e83e00d29914b7b4958793d68d35,Salvatore Sanfilippo,antirez@gmail.com,Tue Jan 22 17:28:45 2019 +0100,1548174525,Merge pull request #5795 from zhicheng/fix-double-free-issuefix clusterManagerGetAntiAffinityScore double free otypes,,,,,,,,,,,,,,,Merge,False,,
ed356c3a79e2e83e00d29914b7b4958793d68d35 2925bdc63bcf62acd8a536cc629f4a54d64b370c,94460440b7ada26d27e81d0fa5fcef1b3f0f68c7,Salvatore Sanfilippo,antirez@gmail.com,Tue Jan 22 17:29:37 2019 +0100,1548174577,Merge pull request #5743 from AngusP/forever-repeat-cliRedis CLI: Fix broken interval and repeat behaviour (incluing in cluster mode),,,,,,,,,,,,,,,Merge,False,,
94460440b7ada26d27e81d0fa5fcef1b3f0f68c7,dbdc68a658014c54d588bbdae96276edcb0e061e,antirez,antirez@gmail.com,Fri Jan 18 13:24:53 2019 +0100,1547814293,ACL: handle command IDs in case insensitive way.,10.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,465.0,29.0,-2.7700578703703704,11412.0,0.6389967116945845,6050.0,None,False,,
dbdc68a658014c54d588bbdae96276edcb0e061e,48eeec5fb408f71966f9a7b8da28995ac7c9e07d,antirez,antirez@gmail.com,Fri Jan 18 13:37:37 2019 +0100,1547815057,ACL: user commands bitmap check refactoring for new features.,27.0,7.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,472.0,30.0,0.008842592592592595,11413.0,114.08900523560207,6051.0,None,False,,
48eeec5fb408f71966f9a7b8da28995ac7c9e07d,10f121295c68ef0e2f5a71fdae14b4b3b5e2a62d,antirez,antirez@gmail.com,Fri Jan 18 13:39:28 2019 +0100,1547815168,ACL: GetUserCommandBit() is a much better name for the function.,2.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,492.0,31.0,0.0012847222222222225,11414.0,779.3783783783783,6052.0,None,False,,
10f121295c68ef0e2f5a71fdae14b4b3b5e2a62d,4078755ddb69b3ed62579d08a0bea60f34da3e65,antirez,antirez@gmail.com,Fri Jan 18 18:16:03 2019 +0100,1547831763,ACL: setting single commands ACLs implementation.,75.0,28.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,492.0,32.0,0.19207175925925926,11415.0,6.206387466104248,6053.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
4078755ddb69b3ed62579d08a0bea60f34da3e65,53321c3c2c8f3d7c71d9f261d6e16563be85e3dd,antirez,antirez@gmail.com,Mon Jan 21 17:08:54 2019 +0100,1548086934,ACL: subcommand matching.,66.0,6.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,539.0,33.0,2.9533680555555555,11416.0,1.3385964706020672,6054.0,None,False,,
53321c3c2c8f3d7c71d9f261d6e16563be85e3dd,2263d6e173c1c3566d5384e5d69ea01b9a06266a,antirez,antirez@gmail.com,Mon Jan 21 17:09:58 2019 +0100,1548086998,ACL: specify better the command denied error.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4228.0,273.0,0.2369675925925926,11417.0,5.219986324118394,6055.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
2263d6e173c1c3566d5384e5d69ea01b9a06266a,9e5c38282b57e437392d411e826c61286f3debb2,antirez,antirez@gmail.com,Mon Jan 21 18:18:39 2019 +0100,1548091119,ACL: setuser resetkeys implemented.,4.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,599.0,34.0,0.0484375,11418.0,21.64516129032258,6056.0,None,False,,
9e5c38282b57e437392d411e826c61286f3debb2,8dfeb4fba129662364cb630fafc95f6b1c6fd781,antirez,antirez@gmail.com,Mon Jan 21 18:21:02 2019 +0100,1548091262,ACL: setuser reset implemented.,5.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,602.0,35.0,0.0016550925925925926,11419.0,605.1958041958042,6057.0,None,False,,
8dfeb4fba129662364cb630fafc95f6b1c6fd781,561661b145598a00bfad42460fc0c09f40df8071,antirez,antirez@gmail.com,Mon Jan 21 18:23:28 2019 +0100,1548091408,ACL: setuser nocommands / -@all implemented.,9.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,607.0,36.0,0.0016898148148148148,11420.0,592.7808219178082,6058.0,None,False,,
561661b145598a00bfad42460fc0c09f40df8071,9e4fb96ca12476b1c7468b143efca86b478bfb4a,antirez,antirez@gmail.com,Tue Jan 22 13:29:06 2019 +0100,1548160146,ACL: review of Redis command table and new flags format.However the code is yet not able to parse the new flags format.n,849.0,224.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4228.0,274.0,0.8466203703703704,11421.0,2.181166949198884,6059.0,None,False,True,"[""cd2743c0e6b7702535b410db4e51f6d5e22a7d4c"", ""385f6190a3a9f8d2d5775bd058aaa2173dc05c8c""]"
9e4fb96ca12476b1c7468b143efca86b478bfb4a,82d194c1ab1223df807061df058d7dc443fb39d7,antirez,antirez@gmail.com,Tue Jan 22 17:46:49 2019 +0100,1548175609,ACL: populate command table with new flags.,38.0,21.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4853.0,275.0,0.1789699074074074,11422.0,6.5875315268705945,6060.0,None,False,,
82d194c1ab1223df807061df058d7dc443fb39d7,e97481d4f4423d59e4ce7be7479063c1b18309c4,antirez,antirez@gmail.com,Tue Jan 22 17:50:19 2019 +0100,1548175819,ACL: remove no longer existing flag from comment.,0.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4870.0,276.0,0.002430555555555556,11423.0,412.4285714285714,6061.0,None,False,,
e97481d4f4423d59e4ce7be7479063c1b18309c4,711e514ea4ac27709de822f73c8c87a7fa6ddfd2,antirez,antirez@gmail.com,Tue Jan 22 19:02:50 2019 +0100,1548180170,ACL: update comments in command flags.,15.0,13.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2234.0,257.0,1.3153472222222222,11424.0,1.760255530331028,6062.0,None,False,,
711e514ea4ac27709de822f73c8c87a7fa6ddfd2,70e541b7bc022c7eeb325130c9fadbf02b116b15,antirez,antirez@gmail.com,Wed Jan 23 08:10:57 2019 +0100,1548227457,"ACL: better define name, and the idea of reserved ID.",20.0,7.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9509560484549724,16.0,1424.5,295.0,1.0609722222222222,11425.5,1.5531655899244492,6064.0,None,False,,
70e541b7bc022c7eeb325130c9fadbf02b116b15,b270322ff9d008ceafcaac68a89967d2b34d8626,antirez,antirez@gmail.com,Wed Jan 23 08:14:56 2019 +0100,1548227696,ACL: ACLUserCanExecuteFutureCommands() function added.,7.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,624.0,38.0,0.002766203703703704,11427.0,362.50627615062757,6065.0,None,False,,
b270322ff9d008ceafcaac68a89967d2b34d8626,25029568358e70ac92c6048af4001f4c379ab788,Guy Benoish,guy.benoish@redislabs.com,Wed Jan 23 11:11:57 2019 +0200,1548234717,ZPOP should return an empty array if COUNT=0,4.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3302.0,153.0,50.67291666666666,20.0,1.0197344077622004,18.0,None,False,True,"[""74d6af8f8094b6d9e2e4bb7ea4eca1941f6412c0""]"
b270322ff9d008ceafcaac68a89967d2b34d8626,effb84be176b3b8300b5b1498fc6c86ee7f60a71,antirez,antirez@gmail.com,Wed Jan 23 11:05:54 2019 +0100,1548237954,ACL: specify better the +@all semantics in comments.,6.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,631.0,39.0,0.11872685185185185,11428.0,9.422694482355237,6066.0,None,False,,
effb84be176b3b8300b5b1498fc6c86ee7f60a71,932a1196d8d18fb659677068cf88bdcc08ff7ef6,antirez,antirez@gmail.com,Wed Jan 23 11:14:39 2019 +0100,1548238479,ACL: mark more commands as read-only commands.,9.0,9.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4869.0,277.0,0.7252314814814815,11429.0,2.3788700925630386,6067.0,None,False,,
932a1196d8d18fb659677068cf88bdcc08ff7ef6,b8ff73894a076b98380c62ae051be6abfffe47e8,antirez,antirez@gmail.com,Wed Jan 23 11:21:02 2019 +0100,1548238862,ACL: improve top comments of the command table.,68.0,42.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4869.0,278.0,0.00443287037037037,11430.0,226.58746736292431,6068.0,None,False,,
b8ff73894a076b98380c62ae051be6abfffe47e8,c5e717c637cbb1c80e1259560ebf995fb7920628,antirez,antirez@gmail.com,Wed Jan 23 12:15:10 2019 +0100,1548242110,ACL: command categories added to the command table.,200.0,181.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.14700448682349607,16.0,2764.5,319.0,0.042847222222222224,11431.5,17.229294156736547,6070.0,None,False,,
c5e717c637cbb1c80e1259560ebf995fb7920628,91ec53ed13b37681274d22ea19816b7bcc30d71e,antirez,antirez@gmail.com,Wed Jan 23 16:47:29 2019 +0100,1548258449,ACL: define category names and flags.,68.0,18.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.8976844934141643,16.0,1435.0,300.0,0.27390625,11433.5,4.556701709400306,6072.0,None,False,,
711e514ea4ac27709de822f73c8c87a7fa6ddfd2,496497f81a2c64975c7bbb9bd45bef9a2db91687,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jan 23 23:57:18 2019 +0800,1548259038,ACL: fix null pointer in getuser,5.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,659.0,42.0,0.00681712962962963,142.0,147.6893039049236,135.0,None,False,,
91ec53ed13b37681274d22ea19816b7bcc30d71e,f99e0f59efeea13cc91af680f21571a62286e163,antirez,antirez@gmail.com,Wed Jan 23 16:59:09 2019 +0100,1548259149,ACL: populate category flags from command table.,54.0,17.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8185521259267626,16.0,2613.6666666666665,583.0,0.06886574074074074,11436.0,263.7522051291559,6075.0,None,False,,
f99e0f59efeea13cc91af680f21571a62286e163,9fb160b13028edfd5431e3236798c00497e1390b,artix,artix2@gmail.com,Thu Jan 24 17:29:38 2019 +0100,1548347378,Cluster Manager: remove unused code elements,8.0,13.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11063.0,330.0,5.535439814814817,94.0,1.180654118453902,88.0,None,False,,
f99e0f59efeea13cc91af680f21571a62286e163,e8bf9b03ed4c0c051ffe955c45292f686484040b,antirez,antirez@gmail.com,Thu Jan 24 18:11:09 2019 +0100,1548349869,ACL: ACLSetUserCommandBitsForCategory() low level API.,19.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,676.0,44.0,1.05,11438.0,1.9523809523809523,6076.0,None,False,,
e8bf9b03ed4c0c051ffe955c45292f686484040b,7b4f3cc33aa11a035eb28a1b46cd7a73af8b59fd,antirez,antirez@gmail.com,Thu Jan 24 18:15:46 2019 +0100,1548350146,ACL: + and - opcode for categories implemented.,12.0,4.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,695.0,45.0,0.0032060185185185178,11439.0,312.913357400722,6077.0,None,False,,
f99e0f59efeea13cc91af680f21571a62286e163 496497f81a2c64975c7bbb9bd45bef9a2db91687,e545b30f978cceae818897d7398450ca291835e3,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 25 11:27:21 2019 +0100,1548412041,Merge pull request #5801 from soloestoy/fix-getuser-null-pointerACL: fix null pointer in getuser,,,,,,,,,,,,,,,Merge,False,,
7b4f3cc33aa11a035eb28a1b46cd7a73af8b59fd e545b30f978cceae818897d7398450ca291835e3,510327df0b05b21e1e03df4f73ba5cfe954ce790,antirez,antirez@gmail.com,Fri Jan 25 11:27:34 2019 +0100,1548412054,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e545b30f978cceae818897d7398450ca291835e3 9fb160b13028edfd5431e3236798c00497e1390b,5cc3b557f6ab15edf65114054a978da06de632b2,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 25 11:47:45 2019 +0100,1548413265,Merge pull request #5804 from artix75/devCluster Manager: remove unused code elements,,,,,,,,,,,,,,,Merge,False,,
510327df0b05b21e1e03df4f73ba5cfe954ce790 5cc3b557f6ab15edf65114054a978da06de632b2,b82d35688331ebfe9a84641de94ad6c87595e829,antirez,antirez@gmail.com,Fri Jan 25 11:47:50 2019 +0100,1548413270,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e545b30f978cceae818897d7398450ca291835e3,8fc0079366fcf7c75cbfd4864c448ca9aae5c835,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Jan 25 19:06:18 2019 +0800,1548414378,ACL: check patterns instead of passwords in ACLCheckCommandPerm,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,703.0,46.0,0.7434259259259259,143.0,2.3451239257690872,136.0,None,False,,
8fc0079366fcf7c75cbfd4864c448ca9aae5c835,0de83bcc62cec57a3e0bd5912fd3862f25654ddb,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Jan 25 19:35:18 2019 +0800,1548416118,ACL: fix memory leak when key patterns no match,5.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,703.0,47.0,0.02013888888888889,144.0,50.6551724137931,137.0,None,False,,
5cc3b557f6ab15edf65114054a978da06de632b2 0de83bcc62cec57a3e0bd5912fd3862f25654ddb,1aa9fa37e3c884e50546d11bf140ef5193908a64,Salvatore Sanfilippo,antirez@gmail.com,Fri Jan 25 13:00:17 2019 +0100,1548417617,Merge pull request #5806 from soloestoy/bugfix-acl-check-key-patternBugfix in ACLCheckCommandPerm,,,,,,,,,,,,,,,Merge,False,,
b82d35688331ebfe9a84641de94ad6c87595e829 1aa9fa37e3c884e50546d11bf140ef5193908a64,d5fe17dc11cc982f8d2e394cb54746f29ea0bc2d,antirez,antirez@gmail.com,Fri Jan 25 13:00:30 2019 +0100,1548417630,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d5fe17dc11cc982f8d2e394cb54746f29ea0bc2d,53ba09e08a9793e9de9ea9a40d7a1cc1d6d8a3bf,antirez,antirez@gmail.com,Fri Jan 25 13:00:49 2019 +0100,1548417649,ACL: remove useless NULL check.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,706.0,48.0,0.017719907407407406,11440.0,57.43370346178968,6078.0,None,False,,
53ba09e08a9793e9de9ea9a40d7a1cc1d6d8a3bf,eb840f9bc5e44d56a6a0c525955aef37276cfabd,antirez,antirez@gmail.com,Fri Jan 25 13:07:20 2019 +0100,1548418040,ACL: fix command ID assignment off by one error.,2.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,706.0,49.0,0.004525462962962963,11441.0,221.97186700767259,6079.0,None,False,,
eb840f9bc5e44d56a6a0c525955aef37276cfabd,b7750a936ff4390a8e32ce97ba30c4ca9459452f,antirez,antirez@gmail.com,Fri Jan 25 13:27:33 2019 +0100,1548419253,ACL: remove the ALLCOMMANDS user flag at a safer place.This fixes -@<category> as a side effect.n,4.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,707.0,50.0,0.014039351851851851,11442.0,72.22835943940643,6080.0,None,False,,
b270322ff9d008ceafcaac68a89967d2b34d8626,76f20729fc6eeb40f3c1a5598ead18b111fa52bf,ArkayZheng,Arkay_Zheng@163.com,Fri Jan 25 21:48:23 2019 +0800,1548424103,Fix the output bug in rename exceptions.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2733.0,231.0,4.138645833333333,0.0,0.0,0.0,Corrective,True,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
b7750a936ff4390a8e32ce97ba30c4ca9459452f,af72a3149099fc7cdcc0b5bd77be905cff4ca540,antirez,antirez@gmail.com,Sat Jan 26 12:51:43 2019 +0100,1548503503,ACL: fix command bit check.,3.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,709.0,51.0,0.9751157407407408,11443.0,2.025519287833828,6081.0,None,False,,
af72a3149099fc7cdcc0b5bd77be905cff4ca540 76f20729fc6eeb40f3c1a5598ead18b111fa52bf,4e6abe2bbbf65fc116a323f9ba517126472fba2f,Salvatore Sanfilippo,antirez@gmail.com,Sun Jan 27 12:16:14 2019 +0100,1548587774,Merge pull request #5808 from ArkayZheng/ArkayWorkFix the output of serverLog in replication.c,,,,,,,,,,,,,,,Merge,False,,
af72a3149099fc7cdcc0b5bd77be905cff4ca540,9fc1ce2f05d377d7c8d461b2b7cd7dfff3618b3d,antirez,antirez@gmail.com,Mon Jan 28 11:39:58 2019 +0100,1548671998,ACL: create unit test.,5.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,11444.0,0.0,812.0,None,False,,
9fc1ce2f05d377d7c8d461b2b7cd7dfff3618b3d,3c67c1c3940e13351eab2310681bef09b3c3642d,antirez,antirez@gmail.com,Mon Jan 28 11:44:10 2019 +0100,1548672250,ACL: Test: enabled/disabled user.,15.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,5.0,1.0,0.0029166666666666672,11445.0,343.8571428571428,813.0,None,False,,
3c67c1c3940e13351eab2310681bef09b3c3642d,6cec82b94374075405d791827e3a2d55a1c06366,antirez,antirez@gmail.com,Mon Jan 28 12:06:25 2019 +0100,1548673585,ACL: Test: check passwords validity and removal.,19.0,2.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,20.0,2.0,0.015451388888888891,11446.0,65.71910112359551,814.0,None,False,,
6cec82b94374075405d791827e3a2d55a1c06366,4b9b128c4951405031fc94ca5ed172c12a846eb5,antirez,antirez@gmail.com,Mon Jan 28 12:11:11 2019 +0100,1548673871,ACL: remove leak when removing passwords/patterns.,7.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,709.0,52.0,1.971851851851852,11447.0,1.5071374906085648,6082.0,None,False,,
4b9b128c4951405031fc94ca5ed172c12a846eb5,621547b4a2bb434dc20a4587dabdfb8be0a40c38,antirez,antirez@gmail.com,Mon Jan 28 12:12:04 2019 +0100,1548673924,ACL: Test: add the acl tests as default unit.,1.0,0.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,657.0,114.0,178.75332175925925,11448.0,1.0055943016339959,815.0,None,False,,
621547b4a2bb434dc20a4587dabdfb8be0a40c38 4e6abe2bbbf65fc116a323f9ba517126472fba2f,6320aa49f38bbba1fa265942b47a8a5ef4f3b4e3,antirez,antirez@gmail.com,Mon Jan 28 12:13:25 2019 +0100,1548674005,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
6320aa49f38bbba1fa265942b47a8a5ef4f3b4e3,26f98bca9707340bb5a4ddf4d097c81bdb3118d7,antirez,antirez@gmail.com,Mon Jan 28 12:33:14 2019 +0100,1548675194,ACL: Test: check default behavior and keys ACLs.,20.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,37.0,3.0,0.018622685185185187,11449.0,54.69794903666873,816.0,None,False,,
26f98bca9707340bb5a4ddf4d097c81bdb3118d7,f4c39db45022ce3177d8aea7873d40dbdf300da2,antirez,antirez@gmail.com,Mon Jan 28 12:40:07 2019 +0100,1548675607,"ACL: Test: nopass user flag, commands/groups +/- rules.",23.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,57.0,4.0,0.004780092592592593,11450.0,210.2009685230024,817.0,None,False,True,"[""ea7c3fe7fd6d269e1e09443db3e2148cb445febb""]"
b270322ff9d008ceafcaac68a89967d2b34d8626,b0c8d6c227e172ec93d9b1f1c0f0ac49f8575a8f,Guy Benoish,guy.benoish@redislabs.com,Mon Jan 28 17:58:11 2019 +0200,1548691091,Increase string2ld's buffer size (and fix HINCRBYFLOAT)The string representation of `long double` may takenup to ~5000 chars (see PR #3745).nnBefore this fix HINCRBYFLOAT would never overflow (sincenthe string could not exceed 256 chars). Now it can.n,5.0,1.0,"src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,16.0,843.0,109.0,52.02375,21.5,1.013749628348387,20.0,Corrective,True,,
f4c39db45022ce3177d8aea7873d40dbdf300da2,097d57f56e856920010c164da499b62ad06b9c2a,antirez,antirez@gmail.com,Mon Jan 28 18:15:59 2019 +0100,1548695759,ACL: fix crash when checking for subcommands.,6.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,716.0,53.0,0.2533333333333333,11451.0,4.947368421052632,6083.0,None,False,,
097d57f56e856920010c164da499b62ad06b9c2a,7fb9e2b4ce0f29fe0eeeb5f74b1310e54144f63a,antirez,antirez@gmail.com,Mon Jan 28 18:27:41 2019 +0100,1548696461,ACL: reset the subcommands table on +@all / -@all.This also is a bugfix because after -@all the previously enablednsubcommands would remain valid.n,13.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,721.0,54.0,0.008125,11452.0,124.07692307692308,6084.0,None,False,,
7fb9e2b4ce0f29fe0eeeb5f74b1310e54144f63a,e103fd42087e90eab08f1619bb09bd654847c2f0,antirez,antirez@gmail.com,Mon Jan 28 18:29:22 2019 +0100,1548696562,ACL: Test: check subcommands (test fails).,9.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,80.0,5.0,0.24253472222222225,11453.0,5.123120973514673,818.0,None,False,,
e103fd42087e90eab08f1619bb09bd654847c2f0,acd168a70b647098c4976283963e46cd1e8af158,antirez,antirez@gmail.com,Mon Jan 28 18:40:54 2019 +0100,1548697254,ACL: refactoring and fix of adding subcommands to users.,34.0,19.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,734.0,55.0,0.00917824074074074,11454.0,109.95334174022699,6085.0,None,False,,
acd168a70b647098c4976283963e46cd1e8af158,4380423d40afa9c12e8018b7d5da4fe0f5ce5c3e,antirez,antirez@gmail.com,Tue Jan 29 10:12:22 2019 +0100,1548753142,ACL: enforce ACLs in Lua scripts as well.,16.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2468.0,202.0,60.02115740740741,11455.0,1.0166607916807109,6086.0,None,False,,
4380423d40afa9c12e8018b7d5da4fe0f5ce5c3e,11f64c68866538db402e3f327ac59789b373cc35,antirez,antirez@gmail.com,Tue Jan 29 17:25:02 2019 +0100,1548779102,ACL: initial design for ACLDescribeUserCommandRules() and helpers.,88.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,749.0,56.0,0.9473148148148148,11456.0,2.0556152868732287,6087.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
11f64c68866538db402e3f327ac59789b373cc35,4db92e59287b7b577bd0efa74d78a01c8f3cb56d,antirez,antirez@gmail.com,Tue Jan 29 18:41:11 2019 +0100,1548783671,ACL: ACLDescribeUserCommandRules(): add final commands.,14.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,837.0,57.0,0.05288194444444445,11457.0,19.910045961917266,6088.0,None,False,,
4db92e59287b7b577bd0efa74d78a01c8f3cb56d,feba39d3187fc4c705268dfdfd06786bf5f1531d,antirez,antirez@gmail.com,Tue Jan 29 18:54:21 2019 +0100,1548784461,ACL: finish/fix ACLDescribeUserCommandRules() first version.,23.0,6.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,851.0,58.0,0.00914351851851852,11458.0,110.36708860759495,6089.0,None,False,,
feba39d3187fc4c705268dfdfd06786bf5f1531d,9ae8e3fefa034952fac2910628b5a7f3fb4277a0,antirez,antirez@gmail.com,Wed Jan 30 08:09:05 2019 +0100,1548832145,ACL: clear the subcommands array when setting category bits.,6.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,868.0,59.0,0.5518981481481482,11459.0,2.8119285294857805,6090.0,None,False,,
9ae8e3fefa034952fac2910628b5a7f3fb4277a0,efce73a001ab8f30a8191814d1dadb55c7974d02,antirez,antirez@gmail.com,Wed Jan 30 08:17:33 2019 +0100,1548832653,ACL: ACLDescribeUserCommandRules(): emit subcommands.,13.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,873.0,60.0,0.00587962962962963,11460.0,171.07874015748033,6091.0,None,False,,
efce73a001ab8f30a8191814d1dadb55c7974d02,9c2e64db9c098cd4357103d08ff751d584bc4f26,antirez,antirez@gmail.com,Wed Jan 30 08:20:31 2019 +0100,1548832831,ACL: remove leak in ACLSetUser().,1.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,886.0,61.0,0.0020601851851851853,11461.0,486.3932584269663,6092.0,None,False,,
9c2e64db9c098cd4357103d08ff751d584bc4f26,36a0168cfd6c335f9a2ce8ff8d0814e7dfd87722,antirez,antirez@gmail.com,Wed Jan 30 08:25:08 2019 +0100,1548833108,ACL: return error when adding subcommands of fully added commands.It's almost certainly an error from the user side.n,17.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,887.0,62.0,0.0032060185185185178,11462.0,312.913357400722,6093.0,None,False,,
36a0168cfd6c335f9a2ce8ff8d0814e7dfd87722,9db2c84984739008c5cd911943ea97775fc32045,antirez,antirez@gmail.com,Wed Jan 30 11:50:30 2019 +0100,1548845430,ACL: free memory leak when freeing subcommands array.,7.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,903.0,63.0,0.14261574074074074,11463.0,8.011848725856192,6094.0,None,False,,
9db2c84984739008c5cd911943ea97775fc32045,f021da5e30324c398b3a927d97e638ea93cca46d,antirez,antirez@gmail.com,Wed Jan 30 12:01:23 2019 +0100,1548846083,Acl: Test: check command rules synthesis.,22.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,89.0,6.0,1.7305671296296297,11464.0,1.577845252506337,819.0,None,False,,
f021da5e30324c398b3a927d97e638ea93cca46d,77471dfe864e33ca1dd915ecae4dc5b75636fcb6,antirez,antirez@gmail.com,Wed Jan 30 15:52:36 2019 +0100,1548859956,ACL: implement keys field in ACL GETUSER.,17.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,908.0,64.0,0.168125,11465.0,6.947955390334573,6095.0,None,False,,
77471dfe864e33ca1dd915ecae4dc5b75636fcb6,0960259835587401d6ac5d96b0c89a7ca60232c9,antirez,antirez@gmail.com,Wed Jan 30 15:59:45 2019 +0100,1548860385,ACL: don't allow patterns after the * pattern.,11.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,924.0,65.0,0.0049652777777777785,11466.0,202.39860139860141,6096.0,None,False,,
0960259835587401d6ac5d96b0c89a7ca60232c9,479f7f7af4c4778c4c6fc0a93b807c98af08a353,antirez,antirez@gmail.com,Wed Jan 30 16:02:25 2019 +0100,1548860545,ACL: add function to return ACLSetUser() string errors.,21.0,14.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,935.0,66.0,0.001851851851851852,11467.0,541.0,6097.0,None,False,,
479f7f7af4c4778c4c6fc0a93b807c98af08a353,c7cd10dfe96e91582d7e341b20334464d5c51830,antirez,antirez@gmail.com,Thu Jan 31 16:49:22 2019 +0100,1548949762,"ACL: flags refactoring, function to describe user.",74.0,24.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,16.0,1602.0,328.0,4.512905092592591,11468.5,1.5396093390774488,6099.0,None,False,True,"[""ea7c3fe7fd6d269e1e09443db3e2148cb445febb""]"
c7cd10dfe96e91582d7e341b20334464d5c51830,0f1b06aa40daa8341e493193c9e8d859591c2e29,antirez,antirez@gmail.com,Thu Jan 31 17:01:28 2019 +0100,1548950488,ACL: implement LIST and USERS subcommands.,32.0,9.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,991.0,68.0,0.008402777777777778,11470.0,120.00826446280992,6100.0,None,False,,
0f1b06aa40daa8341e493193c9e8d859591c2e29,bc9b118e05722afb557cdc1631294ce985d445da,antirez,antirez@gmail.com,Thu Jan 31 17:04:42 2019 +0100,1548950682,ACL: don't emit useless flags in ACLDescribeUser().,4.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1014.0,69.0,0.0022453703703703702,11471.0,446.36082474226805,6101.0,None,False,,
bc9b118e05722afb557cdc1631294ce985d445da,74b7afdf71e7e06f998e5955b4a088290534acb9,antirez,antirez@gmail.com,Thu Jan 31 18:32:49 2019 +0100,1548955969,ACL: check arity of LIST / USERS subcommand.,3.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1018.0,70.0,0.06119212962962961,11472.0,17.341970871950068,6102.0,None,False,,
74b7afdf71e7e06f998e5955b4a088290534acb9,ec1aee031c847dc3929b2556633ffa33eaf3a5e2,antirez,antirez@gmail.com,Thu Jan 31 18:33:14 2019 +0100,1548955994,ACL: implement DELUSER.,49.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1020.0,71.0,0.00028935185185185184,11473.0,3457.0,6103.0,None,False,,
ec1aee031c847dc3929b2556633ffa33eaf3a5e2,b6372f16c414e5f8a20164e6b1b82fc4c133be68,antirez,antirez@gmail.com,Fri Feb 1 08:17:24 2019 +0100,1549005444,ACL: assign ACL command ID to modules commands.,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5197.0,202.0,45.63755787037037,11474.0,1.021911777199832,6104.0,None,False,,
b6372f16c414e5f8a20164e6b1b82fc4c133be68,1769c222486d1deb33b394899eccab35be975c96,antirez,antirez@gmail.com,Fri Feb 1 11:37:20 2019 +0100,1549017440,ACL: set modules help clients to the root user.It does not make much sense to limit what modules can do: the adminnshould instead limit what module commnads an user may call. SonRedisModule_Call() and other module operations should be able to executeneverything they want: the limitation should be posed by the API exportednby the module itself.n,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5198.0,203.0,0.1388425925925926,11475.0,8.202400800266755,6105.0,None,False,,
1769c222486d1deb33b394899eccab35be975c96,b8323d98e967206e2922dfc30fa2223292bfef5f,antirez,antirez@gmail.com,Fri Feb 1 12:20:09 2019 +0100,1549020009,ACL: skeleton and first ideas for postponed user loading.,35.0,4.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1069.0,72.0,0.7409143518518518,11476.0,2.3496836678903383,6106.0,None,False,,
b8323d98e967206e2922dfc30fa2223292bfef5f,8f16e1ea912110d5459a4ddd370a93485408311c,antirez,antirez@gmail.com,Fri Feb 1 13:02:41 2019 +0100,1549022561,ACL: implement ACLAppendUserForLoading().,18.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1100.0,73.0,0.02953703703703704,11477.0,34.855799373040746,6107.0,None,False,,
8f16e1ea912110d5459a4ddd370a93485408311c,21e84cdae254b715b15e48734fbd8484b2c14810,antirez,antirez@gmail.com,Mon Feb 4 12:55:26 2019 +0100,1549281326,ACL: initial appending of users in user loading list.,17.0,3.0,"src/acl.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0762976257251988,16.0,1897.666666666667,580.0,7.0140007716049375,11479.0,1.146514052746909,6110.0,None,False,,
21e84cdae254b715b15e48734fbd8484b2c14810,b166c41eddec664e64c1e268266d38c3f26edaa2,antirez,antirez@gmail.com,Mon Feb 4 13:00:38 2019 +0100,1549281638,ACL: make ACLAppendUserForLoading() able to report bad argument.,14.0,5.0,"src/acl.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.086987702339905,16.0,1902.333333333333,583.0,0.003611111111111112,11482.0,170.23076923076925,6113.0,None,False,,
b166c41eddec664e64c1e268266d38c3f26edaa2,68fd4a97fa52b1bca8e3dd8c0c2fc5b72714d824,antirez,antirez@gmail.com,Mon Feb 4 13:04:35 2019 +0100,1549281875,ACL: better error reporting in users configuration errors.,6.0,1.0,"src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.5916727785823275,16.0,2291.0,510.0,0.0027430555555555554,11484.5,274.4177215189874,6115.0,None,False,,
68fd4a97fa52b1bca8e3dd8c0c2fc5b72714d824,500b3e128fc312a6aae113975b9f2f585f476500,antirez,antirez@gmail.com,Mon Feb 4 16:35:15 2019 +0100,1549294515,ACL: implement ACLLoadConfiguredUsers().,41.0,0.0,"src/acl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.1654270339962668,16.0,1699.5,341.0,0.14766782407407408,11486.5,6.047807656678297,6117.0,None,False,,
500b3e128fc312a6aae113975b9f2f585f476500,623b17425ef5af170c4bbc7aca9c07b57bc68adf,antirez,antirez@gmail.com,Mon Feb 4 16:39:07 2019 +0100,1549294747,ACL: load the defined users at server startup.,5.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4940.0,281.0,11.986087962962966,11488.0,1.0834300568367263,6118.0,None,False,,
623b17425ef5af170c4bbc7aca9c07b57bc68adf,2262dd184dc567561ef008d136e11def6e6abbe5,antirez,antirez@gmail.com,Mon Feb 4 16:58:35 2019 +0100,1549295915,ACL: fix user/rule inverted error message.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1174.0,77.0,0.016203703703703703,11489.0,62.714285714285715,6119.0,None,False,,
2262dd184dc567561ef008d136e11def6e6abbe5,775bf6193d774280ed19b7cf79fee0987ec83853,antirez,antirez@gmail.com,Tue Feb 5 10:48:17 2019 +0100,1549360097,ACL: implement rewriting of users in redis.conf.,39.0,0.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.7193856441631259,16.0,3177.666666666666,795.0,0.8069212962962963,11491.0,1.7064766623745573,6122.0,None,False,,
775bf6193d774280ed19b7cf79fee0987ec83853,416c640156626978843e03cf573925a75d01c67a,antirez,antirez@gmail.com,Tue Feb 5 10:52:05 2019 +0100,1549360325,ACL: change behavior of redefined user. Last line counts.,5.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1174.0,78.0,0.7454861111111111,11493.0,2.3414066138798324,6123.0,None,False,,
416c640156626978843e03cf573925a75d01c67a,cc116736c1306f53869510a768cb8bb4d6c6b04c,antirez,antirez@gmail.com,Tue Feb 5 17:49:52 2019 +0100,1549385392,ACL: ability to configure an external ACL file.,5.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2355.0,248.0,0.2927662037037037,11494.0,4.41569480134414,6124.0,None,False,,
cc116736c1306f53869510a768cb8bb4d6c6b04c,7604ab7118d1154e9120ea41a88d9c214f2202c3,antirez,antirez@gmail.com,Tue Feb 5 17:59:05 2019 +0100,1549385945,ACL: redis.conf: mark old ACL-alike stuff as deprecated.,28.0,9.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1378.0,195.0,113.33157407407408,11495.0,1.0088236663804422,1408.0,None,False,,
7604ab7118d1154e9120ea41a88d9c214f2202c3,e1e0f993d8e669bc9aad71a072fea70d98661fd1,antirez,antirez@gmail.com,Wed Feb 6 12:39:11 2019 +0100,1549453151,ACL: initial design for ACLLoadFromFile() function.,79.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1174.0,79.0,1.074375,11496.0,1.9307737056428158,6125.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
e1e0f993d8e669bc9aad71a072fea70d98661fd1,0d3fb9f7f13c75c8d0c54c2faddc9e72f5dc5452,antirez,antirez@gmail.com,Wed Feb 6 16:19:17 2019 +0100,1549466357,ACL: refactoring creation of unlinked users.,18.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1253.0,80.0,0.15284722222222222,11497.0,7.542480690595182,6126.0,None,False,,
0d3fb9f7f13c75c8d0c54c2faddc9e72f5dc5452,bbdf02338d865e0bf12b004be966a76ab8a71019,antirez,antirez@gmail.com,Wed Feb 6 16:44:55 2019 +0100,1549467895,ACL: now ACLLoadFromFile() validates against fake user.,34.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1266.0,81.0,0.017800925925925925,11498.0,57.17685305591678,6127.0,None,False,,
bbdf02338d865e0bf12b004be966a76ab8a71019,72e8a080c2d61e008a4134537b3470ed077d5ebc,antirez,antirez@gmail.com,Thu Feb 7 12:04:25 2019 +0100,1549537465,ACL: fix and complete ACLLoadFromFile() loading step.,23.0,4.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1295.0,82.0,0.8052083333333333,11499.0,2.2419146183699867,6128.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
72e8a080c2d61e008a4134537b3470ed077d5ebc,0f0240b526a43eb1323a19f7b706bec68992073c,antirez,antirez@gmail.com,Thu Feb 7 12:20:30 2019 +0100,1549538430,ACL: implement LOAD subcommand plus some minor rafactoring.,24.0,5.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1314.0,83.0,0.01116898148148148,11500.0,90.53367875647669,6129.0,None,False,,
0f0240b526a43eb1323a19f7b706bec68992073c,1790be1496d14efd6af65c8df2271e0b112740cb,antirez,antirez@gmail.com,Thu Feb 7 12:57:21 2019 +0100,1549540641,ACL: WIP: preserve the old config on loading errors.,66.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1333.0,84.0,0.02559027777777777,11501.0,40.07734056987788,6130.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
1790be1496d14efd6af65c8df2271e0b112740cb,7a86ba22e001d0b46bff9bf62f5c762471fd53ec,antirez,antirez@gmail.com,Thu Feb 7 16:20:42 2019 +0100,1549552842,ACL: fix a few ACLLoadFromFile() errors and finish ACLFreeUsersSet().,3.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1397.0,85.0,0.1412152777777778,11502.0,8.0813867715761,6131.0,None,False,,
7a86ba22e001d0b46bff9bf62f5c762471fd53ec,cbed35efd34c08a7610d18269e5860cd874480f9,antirez,antirez@gmail.com,Thu Feb 7 16:47:14 2019 +0100,1549554434,ACL: add assertion and fix comment typo.,2.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1398.0,86.0,0.018425925925925925,11503.0,55.2713567839196,6132.0,None,False,,
cbed35efd34c08a7610d18269e5860cd874480f9,6a7545e4d4d3a817091c1ae0be360fae37548053,antirez,antirez@gmail.com,Thu Feb 7 16:53:35 2019 +0100,1549554815,ACL: fix fgets wrong buffer size.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1399.0,87.0,0.004409722222222222,11504.0,227.77165354330708,6133.0,None,False,,
6a7545e4d4d3a817091c1ae0be360fae37548053,d26c9b5307843fd163fca0e4bd2171ede1c8effc,antirez,antirez@gmail.com,Thu Feb 7 17:00:35 2019 +0100,1549555235,"ACL: ACLLoadFromFile(), restore DefaultUser global.",2.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1399.0,88.0,0.004861111111111111,11505.0,206.7142857142857,6134.0,None,False,,
d26c9b5307843fd163fca0e4bd2171ede1c8effc,db30727547d7b48b73f92c19bebad2aef1514dfe,antirez,antirez@gmail.com,Thu Feb 7 17:07:35 2019 +0100,1549555655,ACL: ACLLoadFromFile(): several errors fixed to make it work.,13.0,9.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1401.0,89.0,0.004861111111111111,11506.0,206.7142857142857,6135.0,None,False,,
db30727547d7b48b73f92c19bebad2aef1514dfe,80f987726d8ccf9ffc0ce73599226e0e14f26a8a,antirez,antirez@gmail.com,Thu Feb 7 17:20:03 2019 +0100,1549556403,ACL: load ACL file at startup. Prevent silly configurations.,35.0,5.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.7725585713084651,16.0,2874.0,640.0,1.5175925925925924,11508.0,39.72204200322388,6138.0,None,False,,
80f987726d8ccf9ffc0ce73599226e0e14f26a8a,af8761e4f22c41727a1b2db9109fde4a7520b0be,antirez,antirez@gmail.com,Fri Feb 8 09:52:07 2019 +0100,1549615927,ACL: some documentation inside redis.conf.,88.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1397.0,196.0,2.661828703703704,11510.0,1.3756815750797888,1409.0,None,False,,
af8761e4f22c41727a1b2db9109fde4a7520b0be,d4890c20c10d91e990b8af044a233d3e1da7bda0,antirez,antirez@gmail.com,Fri Feb 8 11:50:39 2019 +0100,1549623039,"ACL: ignore modules commands when adding categories.We can't trust modules commands flagging, so module commands must benalways explicitly added, with the exception of +@all that will includeneverything. However something like +@readonly should not include commandnfrom modules that may be potentially dangerous: our categories must bensafe and reliable and modules may not be like that.n",1.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1438.0,91.0,0.77125,11511.0,2.296596434359805,6139.0,None,False,,
d4890c20c10d91e990b8af044a233d3e1da7bda0,d453936b52ced6e0fbf74a59c1df4147a9870d37,antirez,antirez@gmail.com,Fri Feb 8 12:38:41 2019 +0100,1549625921,ACL: add arity check in ACL command where missing.,2.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1439.0,92.0,0.03335648148148148,11512.0,30.979181124219288,6140.0,None,False,,
d453936b52ced6e0fbf74a59c1df4147a9870d37,3df1eb85ca6b8a9c26b4bf9bb79c7d6172c60032,antirez,antirez@gmail.com,Fri Feb 8 12:40:42 2019 +0100,1549626042,ACL: add command fingerprint for CAT subcommand.,5.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1439.0,93.0,0.0014004629629629634,11513.0,715.0495867768594,6141.0,None,False,,
3df1eb85ca6b8a9c26b4bf9bb79c7d6172c60032,2ce96c0fa7ec8532dc78a7f0e7a18b1105fe8151,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Feb 11 22:24:15 2019 +0800,1549895055,ACL: kill the old users clients after load aclfile,26.0,22.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1443.0,94.0,3.1135763888888888,145.0,1.3211740696546264,138.0,None,False,,
2ce96c0fa7ec8532dc78a7f0e7a18b1105fe8151,df346bca3938de04dbf9794edc2dbaee64d5fc68,antirez,antirez@gmail.com,Mon Feb 11 16:28:31 2019 +0100,1549898911,ACL: ACLFreeUserAndKillClients(): free user later.Soon or later we may have code in freeClient() that may have to dealnwith ACLs. Imagine for instance the command proposed multiple times (notnsure if this will ever be accepted but still...):nnONCLOSE DEL mykeynnAccumulating commands to run when a client is disconnected. Now thenfunction is compatible with such use cases.nnRelated to #5829.n,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1447.0,95.0,0.04462962962962963,11514.0,23.406639004149376,6142.0,None,False,,
df346bca3938de04dbf9794edc2dbaee64d5fc68,f8a6132f1517a2d7520a11ed216d225e3e3fade5,antirez,antirez@gmail.com,Mon Feb 11 16:47:02 2019 +0100,1549900022,ACL: refactor+fix AUTH check in processCommand().The part that is fixed is that now if the default user is off whatevernis its configuration the user is not considered authenticated.n,11.0,8.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4942.0,284.0,3.9770717592592586,11515.0,1.2514412765301104,6143.0,None,False,,
f8a6132f1517a2d7520a11ed216d225e3e3fade5,f0c7cfa459082768235db764b2847ae850ea9d33,antirez,antirez@gmail.com,Mon Feb 11 17:00:51 2019 +0100,1549900851,ACL: return error when removing a non existing password.Otherwise it's very simple for an human mistake to think a password isnremoved because of a typo in the ACL SETUSER myuser <somepass commandnline.n,10.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1447.0,96.0,0.0224537037037037,11516.0,45.5360824742268,6144.0,None,False,,
df346bca3938de04dbf9794edc2dbaee64d5fc68,d0089cf2082bafabbce15ec35057f403ce881d81,Chris Lamb,chris@chris-lamb.co.uk,Mon Feb 11 17:07:26 2019 +0100,1549901246,Don't assume the __x86_64__ pointer size to avoid warnings on x32.__x86_64__ is defined on the on the x32 architecture and the conditionals inndebug.c therefore assume the size of (void*) etc:nn  debug.c: In function 'getMcontextEip':n  debug.c:757:12: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]n   return (void*) uc->uc_mcontext.gregs[16]; /* Linux 64 */n  ^n  debug.c: In function 'logRegisters':n  debug.c:920:21: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]n   logStackContent((void**)uc->uc_mcontext.gregs[15]);nnWe can remedy this by checking for __ILP32__ first. See:nn  https://wiki.debian.org/ArchitectureSpecificsMemonn... for more info.n,2.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1499.0,170.0,56.005636574074074,17.0,1.0178553456610993,11.0,Corrective,True,,
df346bca3938de04dbf9794edc2dbaee64d5fc68 d0089cf2082bafabbce15ec35057f403ce881d81,85cadafabfa85f596241a64c205979b9287f2542,Salvatore Sanfilippo,antirez@gmail.com,Mon Feb 11 17:17:14 2019 +0100,1549901834,Merge pull request #5831 from lamby/x32-warningsDon't assume the __x86_64__ pointer size to avoid warnings on x32,,,,,,,,,,,,,,,Merge,False,,
85cadafabfa85f596241a64c205979b9287f2542,0f42447a0ec841f0b3e83328ac16a573012e2880,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Feb 12 16:03:58 2019 +0800,1549958638,ACL: show client's user,3.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2415.0,345.0,24.88504629629629,146.0,1.040184775551285,139.0,None,False,,
85cadafabfa85f596241a64c205979b9287f2542 0f42447a0ec841f0b3e83328ac16a573012e2880,efeebb616f5052db9ad5b02a5bf3491cdd9d9afb,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 12 09:42:14 2019 +0100,1549960934,Merge pull request #5832 from soloestoy/show-client-userACL: show client's user,,,,,,,,,,,,,,,Merge,False,,
f0c7cfa459082768235db764b2847ae850ea9d33 efeebb616f5052db9ad5b02a5bf3491cdd9d9afb,cc6d05a1f7d928216b2dd712f2d4e4d5f9f37674,antirez,antirez@gmail.com,Tue Feb 12 09:43:50 2019 +0100,1549961030,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
cc6d05a1f7d928216b2dd712f2d4e4d5f9f37674,d5e4a7f43976d14241c56dd65754189fd8569087,antirez,antirez@gmail.com,Tue Feb 12 09:44:25 2019 +0100,1549961065,ACL: when client->user is NULL the client is a superuser.Related to #5832.n,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2416.0,346.0,0.028090277777777777,11517.0,36.59950556242275,6145.0,None,False,,
85cadafabfa85f596241a64c205979b9287f2542,ea9d3aefec76f5798510e09c9b2c8046e7eb2b8f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Feb 12 16:44:50 2019 +0800,1549961090,"ACL: add masteruser configuration for replicationIn mostly production environment, normal user's behavior should benlimited.nnNow in redis ACL mechanism we can do it like that:nnuser default on +@all ~* -@dangerous nopassnuser admin on +@all ~* >someSeriousPasswordnnThen the default normal user can not execute dangerous commands likenFLUSHALL/KEYS.nnBut some admin commands are in dangerous category too like PSYNC,nand the configurations above will forbid replica from sync with master.nnFinally I think we could add a new configuration for replication,nit is masteruser option, like this:nnmasteruser adminnmasterauth someSeriousPasswordnnThen replica will try AUTH admin someSeriousPassword and get privilegento execute PSYNC. If masteruser is NULL, replica would AUTH with onlynmasterauth like before.n",16.0,1.0,"src/config.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2639334294856337,16.0,2455.333333333333,749.0,9.712083333333332,148.0,1.0750986735592962,142.0,None,False,,
d5e4a7f43976d14241c56dd65754189fd8569087 ea9d3aefec76f5798510e09c9b2c8046e7eb2b8f,a22815b4e9cfaf607378596d1ed715f71d6762c2,Salvatore Sanfilippo,antirez@gmail.com,Tue Feb 12 10:27:59 2019 +0100,1549963679,Merge pull request #5833 from soloestoy/masteruserACL: add masteruser configuration for replication,,,,,,,,,,,,,,,Merge,False,,
a22815b4e9cfaf607378596d1ed715f71d6762c2,bdd9a8002a6fcc93135eb4125da703b87a1959fa,Guy Benoish,guy.benoish@redislabs.com,Tue Feb 12 14:21:21 2019 +0100,1549977681,"Trim SDS free space of retained module stringsIn some cases processMultibulkBuffer uses sdsMakeRoomFor tonexpand the querybuf, but later in some cases it uses that querynbuffer as is for an argv element (see Optimization), which meansnthat the sds in argv may have a lot of wasted space, and then in casenmodules keep that argv RedisString inside their data structure, thisnspace waste will remain for long (until restarted from rdb).n",28.0,5.0,"src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/sds.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.5431633282594823,16.0,2546.0,700.0,38.66776041666667,24.5,1.0286595881279597,24.0,None,False,,
a22815b4e9cfaf607378596d1ed715f71d6762c2,b9c97c0b2e58826efe797e53fec4558fd7f7b95d,antirez,antirez@gmail.com,Tue Feb 12 17:02:45 2019 +0100,1549987365,ACL: CAT subcommand implemented.,26.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1456.0,97.0,1.0013194444444444,11518.0,1.9986822941951592,6146.0,None,False,,
b9c97c0b2e58826efe797e53fec4558fd7f7b95d,bfdcfbb3ed906c005c1411ddd4945738da7214c3,antirez,antirez@gmail.com,Tue Feb 12 17:06:26 2019 +0100,1549987586,ACL: fix setting of FAST flag.,3.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4945.0,285.0,1.0134722222222223,11519.0,1.9867068658352747,6147.0,None,False,,
bfdcfbb3ed906c005c1411ddd4945738da7214c3,fb7bfc17cdfff18631c5394e1770bb8306634b7a,antirez,antirez@gmail.com,Tue Feb 12 18:23:00 2019 +0100,1549992180,ACL: Document masteruser option in redis.conf.,11.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1485.0,197.0,4.354780092592593,11520.0,1.2296327205364477,1410.0,None,False,,
fb7bfc17cdfff18631c5394e1770bb8306634b7a,a65094dae811770c904f9ec5bb54c41caf5d9f66,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Feb 13 11:47:10 2019 +0800,1550029630,ACL: fix cat type format warning,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1482.0,98.0,0.4891782407407407,150.0,3.044244646870933,143.0,None,False,,
fb7bfc17cdfff18631c5394e1770bb8306634b7a,e819c2ef5b6f6b7c196cc7c00c543c4af8c703a7,antirez,antirez@gmail.com,Wed Feb 13 16:30:44 2019 +0100,1550071844,"ACL: tag LASTSAVE as dangerous.That's not REALLY needed, but... right now with LASTSAVE being the onlyncommand tagged as admin but not dangerous what happens is that afternrewrites the rewrite engine will produce from the rules:nnuser default on +@all ~* -@dangerous nopassnnThe rewrite:nnuser default on nopass ~* +@all -@admin -@dangerous +lastsavennWhich is correct but will have users wondering about why LASTSAVE hasnsomething special.nnSince LASTSAVE after all also leaks information about the underlyingnserver configuration, that may not be great for SAAS vendors, let's tagnit as dangerous as well and forget about this issue :-)n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4945.0,286.0,0.9752083333333332,11521.0,2.025421918393506,6148.0,None,False,,
a65094dae811770c904f9ec5bb54c41caf5d9f66,14507457a08acb6886dc8ae37dba8511ffc18939,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Feb 14 00:12:10 2019 +0800,1550074330,"ACL: show categories in COMMAND replyAdding another new filed categories at the end ofncommand reply, it's easy to read and distinguishnflags and categories, also compatible with old format.n",17.0,2.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.167436723286701,16.0,2900.333333333333,656.0,0.5549189814814816,152.0,2.4548752592670158,146.0,None,False,,
e819c2ef5b6f6b7c196cc7c00c543c4af8c703a7 14507457a08acb6886dc8ae37dba8511ffc18939,fd7484cde2d9eb1f659232934ffef46da192b3a0,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 13 18:59:59 2019 +0100,1550080799,Merge pull request #5836 from soloestoy/fix-acl-warningACL: show categories in COMMAND reply,,,,,,,,,,,,,,,Merge,False,,
733438fe23f67559d4da922c749664ed5db5dfc9,93640b0a9df65a4d962d65b0e690491ad1b95031,Madelyn Olson,matolson@amazon.com,Thu Jan 31 18:44:17 2019 +0000,1548960257,Updated redis benchmark with us precision support,23.0,3.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,846.0,65.0,393.5811574074074,4.0,1.0025407720394623,3.0,None,False,,
93640b0a9df65a4d962d65b0e690491ad1b95031,f9bababaa77726969e829950d246bc8618877372,Madelyn Olson,matolson@amazon.com,Wed Feb 13 21:03:31 2019 +0000,1550091811,Rename variable,3.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,866.0,66.0,13.096689814814816,5.0,1.0763551717372746,4.0,None,False,,
fd7484cde2d9eb1f659232934ffef46da192b3a0 f9bababaa77726969e829950d246bc8618877372,da86481e5b732202dbfdc6442de8b66a59e3f7e3,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 14 13:01:26 2019 +0100,1550145686,Merge pull request #5840 from madolson/dev-unstable-benchmark-latencyUpdated redis benchmark with us precision support,,,,,,,,,,,,,,,Merge,False,,
da86481e5b732202dbfdc6442de8b66a59e3f7e3,86802d4f2681baa04869fabfbd0ca6c2fe0a94d7,antirez,antirez@gmail.com,Thu Feb 14 13:19:45 2019 +0100,1550146785,"redis-benchmark: default precision=1, integer ms after 2 milliseconds.Reltaed to discussion and PR #5840.n",14.0,3.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,867.0,67.0,0.6362731481481482,11522.0,2.571652053698112,6149.0,None,False,,
86802d4f2681baa04869fabfbd0ca6c2fe0a94d7,e6948b8f2847896d3c6443744a53f7c3f79a1984,antirez,antirez@gmail.com,Mon Feb 18 12:39:00 2019 +0100,1550489940,showdist.rb utility for SRANDMEMBER analysis added.,35.0,0.0,"utils/srandmember/README.md,CAS_DELIMITER,utils/srandmember/showdist.rb,CAS_DELIMITER",2.0,1.0,1.0,0.3159971329784247,1.0,0.0,0.0,0.0,11523.5,0.0,94.0,Feature Addition,False,,
e6948b8f2847896d3c6443744a53f7c3f79a1984,4cc43a96f67e155a3526a29816510536ef9380c7,vattezhang,vattezhang@163.com,Mon Feb 18 22:48:55 2019 +0800,1550501335,"benchmark: add auth check in benchmark When we run benchmark but forget to set the right requirepass, benchmark should return error.",6.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,878.0,68.0,4.103587962962963,0.0,0.0,0.0,None,False,True,"[""ad223e204222dca7758eb540a455bca93e62b861""]"
e6948b8f2847896d3c6443744a53f7c3f79a1984,61a01793ed23a2b1cb3c468bd4057ddc7ba0e739,antirez,antirez@gmail.com,Mon Feb 18 18:27:18 2019 +0100,1550510838,Better distribution for set get-random-element operations.,26.0,1.0,"src/dict.c,CAS_DELIMITER,src/dict.h,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",3.0,1.0,1.0,0.6052912052261445,16.0,792.0,183.0,247.43648148148145,11526.0,1.002493212912665,6152.0,Perfective,False,,
61a01793ed23a2b1cb3c468bd4057ddc7ba0e739,1613f7a57250c318c20292ea33746341b30031c7,antirez,antirez@gmail.com,Mon Feb 18 18:38:40 2019 +0100,1550511520,"Limit sampling size in dictGetFairRandomKey().This way the implementation is almost as fast as the original one, butnthe distribution is not too bad.n",1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1250.0,89.0,0.007893518518518518,11528.0,127.68621700879768,6153.0,None,False,,
1613f7a57250c318c20292ea33746341b30031c7,a317349cb2363e2bf8f151cb4d9614dd508e9d0e,antirez,antirez@gmail.com,Mon Feb 18 18:47:49 2019 +0100,1550512069,Add showfreq.rb to SRANDMEMBER analysis tools.,23.0,0.0,"utils/srandmember/showfreq.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,11529.0,0.0,95.0,Feature Addition,False,,
a317349cb2363e2bf8f151cb4d9614dd508e9d0e,f1b3a485b4b9d1b36df32d8161a89ffefbcaba07,antirez,antirez@gmail.com,Tue Feb 19 12:01:26 2019 +0100,1550574086,Improve README of better-random-member directory.,14.0,2.0,"utils/srandmember/README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,2.0,1.0,0.973912037037037,11530.0,2.0267867753666247,96.0,Perfective,False,,
f1b3a485b4b9d1b36df32d8161a89ffefbcaba07,f284e37f24629bad61530f02937a2b13fedd6283,antirez,antirez@gmail.com,Tue Feb 19 17:25:58 2019 +0100,1550593558,showfreq.rb: collect more data for better graphs.,1.0,1.0,"utils/srandmember/showfreq.rb,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,23.0,1.0,0.9431597222222222,11531.0,2.060265802746383,97.0,None,False,,
f284e37f24629bad61530f02937a2b13fedd6283,25b392f90c3436d8db44111194070d6e3eeea5cc,antirez,antirez@gmail.com,Tue Feb 19 17:27:42 2019 +0100,1550593662,"Set dictGetFairRandomKey() samples to 20 for final version.Distribution improves dramatically: tests show it clearly. Better tonhave a slower implementation than a wrong one, because random membernextraction should be correct or tends to be useless for a number ofntasks.n",1.0,1.0,"src/dict.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1250.0,90.0,0.9507175925925926,11532.0,2.0518370626476106,6154.0,None,False,,
25b392f90c3436d8db44111194070d6e3eeea5cc,35ffbead5c309ad90c130a885fce1e44613c7467,antirez,antirez@gmail.com,Tue Feb 19 17:29:51 2019 +0100,1550593791,Use dictGetFairRandomKey() for RANDOMKEY as well.,1.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1546.0,222.0,29.25077546296297,11533.0,1.0341871278341386,6155.0,None,False,,
35ffbead5c309ad90c130a885fce1e44613c7467,0f28754021a66f2fe77dee1dd712220a741dc203,artix,artix2@gmail.com,Wed Feb 20 15:36:12 2019 +0100,1550673372,Cluster Manager: fix replica assigment anti-affinity (create)Fix issue #5849n,6.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11058.0,331.0,26.92122685185185,95.0,1.0371454096614179,89.0,None,False,,
35ffbead5c309ad90c130a885fce1e44613c7467,b6de51206e8fd79269d05f0fed3f396683d75446,Oran Agra,oran@redislabs.com,Thu Feb 21 12:06:18 2019 +0200,1550743578,"redis-cli add support for --memkeys, fix --bigkeys for module types* bigkeys used to fail on databases with module type keysn* new code adds more types when it discovers them, but has no way to know element count in modules types yetn* bigkeys was missing XLEN command for streamsn* adding --memkeys and --memkeys-samples to make use of the MEMORY USAGE commandnnsee #5167, #5175n",132.0,81.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11064.0,332.0,0.8125694444444445,122.0,2.2306640458080507,88.0,Corrective,True,,
35ffbead5c309ad90c130a885fce1e44613c7467 b6de51206e8fd79269d05f0fed3f396683d75446,a8921c062dcd0a0faeb0da83b335f49663502853,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 21 12:22:09 2019 +0100,1550748129,"Merge pull request #5856 from oranagra/cli-bigkeysredis-cli add support for --memkeys, fix --bigkeys for module types",,,,,,,,,,,,,,,Merge,False,,
a8921c062dcd0a0faeb0da83b335f49663502853 d56f4b4122aa51f97f5284e6e449943dd46ad659,967a98f57018672fe2804f66f0e88ce2af7e2871,Salvatore Sanfilippo,antirez@gmail.com,Thu Feb 21 12:54:15 2019 +0100,1550750055,Merge pull request #4811 from oranagra/cli-diskless-replAdd redis-cli support for diskless replication (CAPA EOF),,,,,,,,,,,,,,,Merge,False,,
35ffbead5c309ad90c130a885fce1e44613c7467,e4f3a2eecd571aabe2497b0eca5cb4679295289b,antirez,antirez@gmail.com,Thu Feb 21 16:31:33 2019 +0100,1550763093,ACL: add LOAD subcommand to ACL HELP.,2.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1494.0,100.0,7.971793981481483,11534.0,1.1254422784034566,6156.0,None,False,,
e4f3a2eecd571aabe2497b0eca5cb4679295289b,484af7aa7a3b84067bfd5f37703baff911db608f,antirez,antirez@gmail.com,Thu Feb 21 16:50:28 2019 +0100,1550764228,ACL: ACLSaveToFile() implemented.,66.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1496.0,101.0,0.013136574074074077,11535.0,77.12334801762114,6157.0,None,False,,
484af7aa7a3b84067bfd5f37703baff911db608f,91aecf013858e1a83c46a8880472009282587773,antirez,antirez@gmail.com,Thu Feb 21 17:01:08 2019 +0100,1550764868,ACL: implement ACL SAVE.,18.0,10.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1562.0,102.0,0.007407407407407408,11536.0,136.0,6158.0,None,False,,
91aecf013858e1a83c46a8880472009282587773,291e6bccf32e8b6e792482f577304df8f0636903,antirez,antirez@gmail.com,Thu Feb 21 17:03:06 2019 +0100,1550764986,ACL: remove leak in ACLLoadFromFile().,1.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1570.0,103.0,0.0013657407407407407,11537.0,733.2033898305086,6159.0,None,False,,
291e6bccf32e8b6e792482f577304df8f0636903 967a98f57018672fe2804f66f0e88ce2af7e2871,624568ae3f842b0cab96569e784fff40bdbfdf8b,antirez,antirez@gmail.com,Thu Feb 21 17:03:19 2019 +0100,1550764999,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
624568ae3f842b0cab96569e784fff40bdbfdf8b,3de9ccf190e22f46d6ba7b7167d32ee5c8505bd6,antirez,antirez@gmail.com,Thu Feb 21 17:23:17 2019 +0100,1550766197,Gopher: config setting to turn support on/off.,12.0,0.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.188721875540867,16.0,3196.666666666666,809.0,8.44460262345679,11539.0,1.0681681021417389,6162.0,None,False,,
35ffbead5c309ad90c130a885fce1e44613c7467,fdc4003d23dfc287380174f219548c12bee07475,Madelyn Olson,matolson@amazon.com,Thu Feb 21 00:34:54 2019 +0000,1550709294,Making deleting users better defined and update documentation,6.0,2.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1571.0,104.0,-0.6445833333333333,6.0,-0.5513897866839044,5.0,Non Functional,False,,
35ffbead5c309ad90c130a885fce1e44613c7467,9131fc56d69cb4bb2bf2e5d29636f22c3036f4e9,Madelyn Olson,matolson@amazon.com,Wed Feb 20 03:52:57 2019 +0000,1550634777,Refactored manual computation of object length,1.0,17.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2416.0,347.0,7.797592592592593,7.0,1.1282447099057165,6.0,None,False,,
3de9ccf190e22f46d6ba7b7167d32ee5c8505bd6,e00b22e090c68434b9f44986b2ac9fa9b8d96896,antirez,antirez@gmail.com,Thu Feb 21 23:13:08 2019 +0100,1550787188,Gopher: initial request handling.,84.0,1.0,"src/Makefile,CAS_DELIMITER,src/gopher.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.6976315354724983,16.0,1247.0,790.0,16.063680555555553,11542.5,1.0158287145642106,6166.0,None,False,,
e00b22e090c68434b9f44986b2ac9fa9b8d96896,f94d711c8373288995623090d83a02bfdd347342,antirez,antirez@gmail.com,Fri Feb 22 10:21:24 2019 +0100,1550827284,Gopher: basic serving of string type.,2.0,1.0,"src/gopher.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,74.0,1.0,0.4640740740740741,11545.0,3.154828411811652,6167.0,None,False,,
624568ae3f842b0cab96569e784fff40bdbfdf8b 9131fc56d69cb4bb2bf2e5d29636f22c3036f4e9,3a7fd48e30dc5f4835d48db03c0bd1d7c5e7110b,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 22 10:25:17 2019 +0100,1550827517,Merge pull request #5859 from madolson/dev-unstable-networking-cleanupRefactored manual computation of object length,,,,,,,,,,,,,,,Merge,False,,
3a7fd48e30dc5f4835d48db03c0bd1d7c5e7110b fdc4003d23dfc287380174f219548c12bee07475,21b8560e959bc3affb543cfe5867e1721de70f19,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 22 10:27:37 2019 +0100,1550827657,Merge pull request #5858 from madolson/dev-unstable-acl-deluserMaking deleting users better defined and update documentation,,,,,,,,,,,,,,,Merge,False,,
21b8560e959bc3affb543cfe5867e1721de70f19 0f28754021a66f2fe77dee1dd712220a741dc203,2d3cad684c67e96ff59ee5a69f14dea6f5850910,Salvatore Sanfilippo,antirez@gmail.com,Fri Feb 22 10:28:31 2019 +0100,1550827711,Merge pull request #5850 from artix75/devCluster Manager: fix replica assignment anti-affinity (create),,,,,,,,,,,,,,,Merge,False,,
f94d711c8373288995623090d83a02bfdd347342,8b087dff3409969210db1299a7aa4a504e3e2fd8,antirez,antirez@gmail.com,Fri Feb 22 11:17:39 2019 +0100,1550830659,Gopher: TODO list.,9.0,0.0,"src/gopher.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,75.0,2.0,0.0390625,11546.0,26.6,6168.0,None,False,,
2d3cad684c67e96ff59ee5a69f14dea6f5850910,2bea3929d0ba3ba066185102c14370e4269213e6,antirez,antirez@gmail.com,Fri Feb 22 12:41:57 2019 +0100,1550835717,ACL: less error prone error handling in ACLSaveToFile().,14.0,15.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1575.0,105.0,1.4632291666666666,11547.0,1.6834199473197125,6169.0,None,False,,
2bea3929d0ba3ba066185102c14370e4269213e6,07473feaebd9af228baddd6c28ded0da42dab255,antirez,antirez@gmail.com,Fri Feb 22 12:45:13 2019 +0100,1550835913,ACL: fix ACLSaveToFile() return value.,1.0,1.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1574.0,106.0,0.002268518518518519,11548.0,441.8163265306122,6170.0,None,False,,
8b087dff3409969210db1299a7aa4a504e3e2fd8,e247c9ac6ac5dafc3127a1d1fbe696f5087fbc38,antirez,antirez@gmail.com,Sun Feb 24 21:38:15 2019 +0100,1551040695,Gopher: don't add the Lastline.,23.0,10.0,"src/gopher.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,84.0,3.0,2.4309722222222216,11549.0,1.4113580529052163,6171.0,None,False,,
07473feaebd9af228baddd6c28ded0da42dab255,87594a7470063ad095a58f32c04594533ebd485f,antirez,antirez@gmail.com,Mon Feb 25 16:33:36 2019 +0100,1551108816,ACL: move AUTH implementation in acl.c.,47.0,46.0,"src/acl.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",3.0,1.0,1.0,1.128220753974075,16.0,2976.666666666666,745.0,3.615547839506173,11551.0,1.184705019976281,6174.0,None,False,True,"[""dd5f4378718c95eeb753ddc5cb083cd76de5694a""]"
87594a7470063ad095a58f32c04594533ebd485f,36d15882153eeafe2eb5ec5a4d9138ae5c8c9afd,antirez,antirez@gmail.com,Mon Feb 25 16:37:00 2019 +0100,1551109020,ACL: authCommand() refactored into ACLAuthenticateUser().,17.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1620.0,108.0,0.002361111111111111,11553.0,424.5294117647058,6175.0,None,False,,
36d15882153eeafe2eb5ec5a4d9138ae5c8c9afd,3b420034bb692eb871f914c1a90b556c86c3a9eb,antirez,antirez@gmail.com,Mon Feb 25 16:40:58 2019 +0100,1551109258,RESP3: allow HELLO to be used with version = 2.,3.0,9.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,16.0,2343.5,623.0,1.8663888888888889,11554.5,98.87150506532768,6177.0,None,False,,
3b420034bb692eb871f914c1a90b556c86c3a9eb,5748439770de8a1aa4fdc10a7af22bf809d039ab,antirez,antirez@gmail.com,Mon Feb 25 16:51:49 2019 +0100,1551109909,RESP3: refactoring of CLIENT SETNAME to implement SETNAME in HELLO.,40.0,26.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2401.0,351.0,0.007534722222222222,11556.0,133.7188940092166,6178.0,None,False,True,"[""6e4f70b8170e14ba8a2ada2fde4a75e073effee3""]"
5748439770de8a1aa4fdc10a7af22bf809d039ab,d4d15315a87adf3ccaba8d21e2ca29008641edef,antirez,antirez@gmail.com,Mon Feb 25 16:55:16 2019 +0100,1551110116,RESP3: AUTH option for HELLO.,15.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2415.0,352.0,0.0023958333333333327,11557.0,418.3913043478262,6179.0,None,False,,
d4d15315a87adf3ccaba8d21e2ca29008641edef,21f92e9e340f9371ee06ca87f3b16dbe0dbf0fea,antirez,antirez@gmail.com,Mon Feb 25 16:56:58 2019 +0100,1551110218,RESP3: SETNAME option for HELLO.,3.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2430.0,353.0,0.0011805555555555556,11558.0,848.0588235294118,6180.0,None,False,,
e247c9ac6ac5dafc3127a1d1fbe696f5087fbc38,40a01a945d0161efe2b9206f1cfae84256f2d822,antirez,antirez@gmail.com,Mon Feb 25 17:20:43 2019 +0100,1551111643,Gopher: document the feature in redis.conf.,55.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1496.0,198.0,12.956747685185185,11559.0,1.077179862130325,1411.0,None,False,,
21f92e9e340f9371ee06ca87f3b16dbe0dbf0fea 40a01a945d0161efe2b9206f1cfae84256f2d822,a7780f716ea34899050d3b2b2b9241c09624c0d0,antirez,antirez@gmail.com,Mon Feb 25 18:16:58 2019 +0100,1551115018,Merge branch 'gopher' into unstable,,,,,,,,,,,,,,,Merge,False,,
07473feaebd9af228baddd6c28ded0da42dab255,075a3b889355c38cc831aac002cf6eb61cc5f36e,Madelyn Olson,matolson@amazon.com,Sat Feb 23 23:15:48 2019 +0000,1550963748,Updated acl setuser to be all or nothing,18.0,3.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1634.0,109.0,-1.6813888888888888,8.0,0.4052535932595407,7.0,None,False,,
07473feaebd9af228baddd6c28ded0da42dab255,b79efef5d688b37c1bdf404f15e39bf36e7d6bd0,Madelyn Olson,matolson@amazon.com,Sun Feb 24 00:12:00 2019 +0000,1550967120,Updated redis-benchmark so it doesn't show 1 value above 2ms at higher precision,7.0,7.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,884.0,69.0,5.391030092592592,9.0,1.1854933069978637,8.0,None,False,,
a7780f716ea34899050d3b2b2b9241c09624c0d0 075a3b889355c38cc831aac002cf6eb61cc5f36e,0dcb00388723cfc4e136bec8457235c84d74f0c8,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 27 09:31:57 2019 +0100,1551256317,Merge pull request #5872 from madolson/dev-unstable-acl-setuser-fixUpdated acl setuser to be all or nothing,,,,,,,,,,,,,,,Merge,False,,
0dcb00388723cfc4e136bec8457235c84d74f0c8,f311a529be198f1c844dc4b5dcaf59da684a69ca,antirez,antirez@gmail.com,Wed Feb 27 09:34:50 2019 +0100,1551256490,Make PR #5872 more compatible with Redis coding style.,5.0,7.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1649.0,110.0,3.3882175925925933,11560.0,1.2951404308230456,6181.0,None,False,,
68ceb466978ec2babdd246a560d31a597c08dcfb f311a529be198f1c844dc4b5dcaf59da684a69ca,49816941a45f9337ce7c0d3b0b70356f79f54ffa,chendianqiang,c.d_q@163.com,Wed Feb 27 17:22:08 2019 +0800,1551259328,Merge pull request #2 from antirez/unstablemerge from redis,,,,,,,,,,,,,,,Merge,False,,
49816941a45f9337ce7c0d3b0b70356f79f54ffa,8f7e97258b0b71b907a67b3078fe6374c77b9972,chendianqiang,chendianqiang@meituan.com,Wed Feb 27 17:43:05 2019 +0800,1551260585,fix replicationid will not change for server.masterhost==NULL in cluster mode when restart slave,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4903.0,290.0,1.756585648148148,4.0,1.5692862178705798,2.0,Corrective,True,,
4cc43a96f67e155a3526a29816510536ef9380c7,0f0f787a37e6411a02d9a992ecc7bb8af7decf9a,vattezhang,vattezhang@163.com,Wed Feb 27 21:20:00 2019 +0800,1551273600,fix: fix sentinel command table and new flags format,10.0,4.0,"src/sentinel.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,16.0,3399.0,528.0,21.003310185185185,1.5,1.0243703102027566,2.0,Corrective,True,,
e6948b8f2847896d3c6443744a53f7c3f79a1984,9d632230b65f978758721275bd8abf874361ba4d,vattezhang,vattezhang@163.com,Wed Feb 27 21:35:58 2019 +0800,1551274558,fix: fix sentinel command table and new flags format,10.0,4.0,"src/sentinel.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3712323266408756,16.0,3402.0,530.0,0.011087962962962964,3.5,68.64091858037578,4.0,Corrective,True,,
f311a529be198f1c844dc4b5dcaf59da684a69ca 9d632230b65f978758721275bd8abf874361ba4d,88b720672c93c551a66af46b970bab000c3d0cec,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 27 15:45:03 2019 +0100,1551278703,Merge pull request #5877 from vattezhang/unstable_sentinel_cmdfix: fix sentinel command table and new flags format,,,,,,,,,,,,,,,Merge,False,,
f311a529be198f1c844dc4b5dcaf59da684a69ca,68c75f248e9b0b4e4930372e2d09f3898de0a21c,antirez,antirez@gmail.com,Wed Feb 27 22:20:31 2019 +0100,1551302431,Gopher: reply in gopher mode only if argv[0] starts with slash.As documented but never implemented.n,4.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2433.0,354.0,2.2246875,11561.0,1.4495013344570866,6182.0,None,False,,
68c75f248e9b0b4e4930372e2d09f3898de0a21c 88b720672c93c551a66af46b970bab000c3d0cec,74fdfc3763059c1f4a46177e9c138b642bd57973,antirez,antirez@gmail.com,Wed Feb 27 22:21:00 2019 +0100,1551302460,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
74fdfc3763059c1f4a46177e9c138b642bd57973 a28683217073e8670bba79ff1f38d93fb3e90d65,9b0b0b3942b10f4b89cfcff25573cb8ea10e1013,Salvatore Sanfilippo,antirez@gmail.com,Wed Feb 27 22:33:22 2019 +0100,1551303202,Merge pull request #3649 from Alkorin/fixTypoFix typo (unsupproted => unsupported) in error message,,,,,,,,,,,,,,,Merge,False,,
9b0b0b3942b10f4b89cfcff25573cb8ea10e1013,2f499304aafd865e40f121389834a871d4f441cc,artix,artix2@gmail.com,Wed May 23 18:00:42 2018 +0200,1527091242,Cluster Manager: check for unreachable nodes during cluster join.,128.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11115.0,333.0,-273.75388888888887,96.0,0.9963470838567487,90.0,None,False,,
2f499304aafd865e40f121389834a871d4f441cc,3578aabc0528e087b80e8b69378abd50b1e1633a,artix,artix2@gmail.com,Wed Jun 6 17:28:29 2018 +0200,1528298909,Cluster Manager: improve join issue checking,40.0,15.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11243.0,334.0,13.977627314814816,97.0,1.0715429004849848,91.0,None,False,,
3578aabc0528e087b80e8b69378abd50b1e1633a,b013d2c4dbea97544239deebe7a8f5a19f2b5604,artix,artix2@gmail.com,Wed Jun 6 18:45:31 2018 +0200,1528303531,Cluster Manager: fix memory leak in clusterManagerWaitForClusterJoin,5.0,4.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11268.0,335.0,0.05349537037037037,98.0,19.693206404154047,92.0,None,False,,
b013d2c4dbea97544239deebe7a8f5a19f2b5604,121adc604b4cee16fd5af15456bbb7665f37ce71,Artix,artix2@gmail.com,Wed Jun 6 20:14:58 2018 +0200,1528308898,Cluster Manager: fix memory leaks in clusterManagerGetDisconnectedLinks,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11269.0,336.0,0.062118055555555565,2.0,17.098378982671882,2.0,None,False,,
121adc604b4cee16fd5af15456bbb7665f37ce71,6e9864fe0de08f6297b1b89fd143605e6ff99ec2,artix,artix2@gmail.com,Wed Jan 9 18:49:38 2019 +0100,1547056178,Cluster Manager: fix bus error in clusterManagerGetLinkStatus,13.0,7.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11270.0,337.0,216.9824074074074,99.0,1.0046086685641864,93.0,None,False,,
6e9864fe0de08f6297b1b89fd143605e6ff99ec2,2593fb9c0cd55cff13713ec5366a9cdc91d8a052,artix,artix2@gmail.com,Thu Jan 17 18:22:30 2019 +0100,1547745750,Cluster Manager: code cleanup,10.0,12.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11276.0,338.0,7.981157407407408,100.0,1.1252951105903373,94.0,None,False,,
2593fb9c0cd55cff13713ec5366a9cdc91d8a052,23ad3faa50e0f3f91770735a8e0552bfc185af1e,artix,artix2@gmail.com,Tue Feb 26 17:26:31 2019 +0100,1551198391,Cluster Manager: change text alert clusterManagerWaitForClusterJoin,3.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11274.0,339.0,39.96112268518519,101.0,1.0250243219610726,95.0,None,False,,
23ad3faa50e0f3f91770735a8e0552bfc185af1e,6cd64c6a986cb77c8273f1eee95212ade036af41,artix,artix2@gmail.com,Thu Feb 28 16:57:14 2019 +0100,1551369434,Cluster Manager: change join issue message,2.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11274.0,340.0,1.979664351851852,102.0,1.5051361353577757,96.0,None,False,,
49816941a45f9337ce7c0d3b0b70356f79f54ffa,a16da7922895ad31e8b1a13aa5e23b3648e78aea,chendianqiang,chendianqiang@meituan.com,Fri Mar 1 15:28:21 2019 +0800,1551425301,optimize cluster failover,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5707.0,557.0,90.94892361111113,5.0,1.0109951823539542,3.0,Corrective,True,,
9b0b0b3942b10f4b89cfcff25573cb8ea10e1013 6cd64c6a986cb77c8273f1eee95212ade036af41,5f2a256ca9b815f50f7eead442b7d9c7954ca5a7,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 1 16:51:02 2019 +0100,1551455462,Merge pull request #5881 from artix75/cluster_manager_join_issuesCluster Manager: create command checks for issues during CLUSTER MEET,,,,,,,,,,,,,,,Merge,False,,
5f2a256ca9b815f50f7eead442b7d9c7954ca5a7 b79efef5d688b37c1bdf404f15e39bf36e7d6bd0,80b8f9febcc025073076becceaf0bf8bcf0c4bac,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 1 16:55:09 2019 +0100,1551455709,Merge pull request #5873 from madolson/dev-unstable-minor-benchmark-precision-fixUpdated redis-benchmark so it doesn't show 1 value above 2ms ,,,,,,,,,,,,,,,Merge,False,,
80b8f9febcc025073076becceaf0bf8bcf0c4bac 8f7e97258b0b71b907a67b3078fe6374c77b9972,b19e8b9a2c84694cd2586983a260ae6dc36afc86,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 1 17:29:19 2019 +0100,1551457759,Merge pull request #5875 from chendq8/partialsyncfix:Slave will do full sync when restart with SHUTDOWN SAVE on cluster mode,,,,,,,,,,,,,,,Merge,False,,
b19e8b9a2c84694cd2586983a260ae6dc36afc86,fb020ab090f6059bc8dbcfae3d333f9997fba5c3,artix,artix2@gmail.com,Fri Feb 15 20:37:18 2019 +0100,1550259438,Cluster Manager: 'backup' command,117.0,10.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11274.0,341.0,-12.847175925925924,103.0,0.9221618816644384,97.0,None,False,True,"[""0298d3ad1833c0085ebc26baeda58dc3a511de25""]"
fb020ab090f6059bc8dbcfae3d333f9997fba5c3,5e4dfc5c974463e9df867ff049853f7be3772d6e,artix,artix2@gmail.com,Mon Feb 25 18:14:50 2019 +0100,1551114890,Cluster Manager: check cluster before backup- Prevent cluster backup if cluster has issues and needs to be fixed.n  This behaviour can be overridden by adding the optionn  '--cluster-ignore-issues'n,67.0,32.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11381.0,342.0,9.901064814814816,104.0,1.1009992378298257,98.0,None,False,True,"[""5a3d3d8be414d201abb670313f2801aeadd9ba69""]"
5e4dfc5c974463e9df867ff049853f7be3772d6e,e6156a39bd67cd7d20d19d89650507c4f5b4da44,artix,artix2@gmail.com,Fri Mar 1 17:40:22 2019 +0100,1551458422,"Cluster Manager backup: remove --cluster-ignore-issue optionAlways save the backup, even if there are problems in the cluster.nJust display a warn message and save cluster_errors propertyninside the json.n",23.0,27.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11416.0,343.0,3.9760648148148148,105.0,1.2515049544147272,99.0,None,False,,
b19e8b9a2c84694cd2586983a260ae6dc36afc86,ab1e87f5b1eddbe3c556b8f2529757f869690436,varianfeng,varianfeng@tencent.com,Tue Feb 26 10:33:53 2019 +0800,1551148433,fix corrupt_rdb.c bug.Let the name of input rdb file name be valid.,2.0,1.0,"utils/corrupt_rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,44.0,1.0,969.7767939814813,0.0,0.0,0.0,Corrective,True,,
b19e8b9a2c84694cd2586983a260ae6dc36afc86,563885d6d936594068af7b4593e2cc7ac66a0aa4,artix,artix2@gmail.com,Tue Jul 31 10:45:00 2018 +0200,1533026700,Thread support for redis-benchmark.,166.0,22.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,884.0,70.0,-207.64375,106.0,0.9951840592360714,100.0,None,False,,
563885d6d936594068af7b4593e2cc7ac66a0aa4,dfd3cc5f783630c1611ff2922f6f1f1171be44f5,artix,artix2@gmail.com,Mon Sep 24 17:25:28 2018 +0200,1537802728,Added basic support for clusters to redis-benchmark.,1126.0,2.0,"src/crc16_slottable.h,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,0.8263715635756554,14.0,514.0,71.0,27.639050925925932,107.5,0.5090451731020003,102.0,Feature Addition,False,,
dfd3cc5f783630c1611ff2922f6f1f1171be44f5,434f7613041045d6794bde8b93aa1e733bbab6ca,artix,artix2@gmail.com,Sat Sep 29 12:59:03 2018 +0200,1538218743,Redis benchmark: table-based slot hashtag placeholder replacement in cluster mode.,97.0,25.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1317.0,72.0,4.814988425925926,109.0,1.2076848190570049,103.0,None,False,,
434f7613041045d6794bde8b93aa1e733bbab6ca,5fd5799cf91fb8612d03a4d4292f25cfc73e1f84,artix,artix2@gmail.com,Thu Oct 25 17:38:17 2018 +0200,1540481897,Various changes to redis-benchmark thread and cluster support- MOVED or ASK replies are now handled in cluster mode.n- Only the first slot per node is used in cluster mode.n- Mutlithreading: reduced usage of mutexes in favor of atomic vars.n,40.0,39.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1389.0,73.0,26.193912037037038,110.0,1.0381768098856727,104.0,None,False,,
5fd5799cf91fb8612d03a4d4292f25cfc73e1f84,f95e01266eb42d7442f3b62242957e9e99e3ac90,artix,artix2@gmail.com,Thu Jan 17 17:40:15 2019 +0100,1547743215,Redis benchmark: configurable thread count in cluster mode and fixes,35.0,14.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1390.0,74.0,84.04303240740741,111.0,1.0118986663302725,105.0,None,False,,
f95e01266eb42d7442f3b62242957e9e99e3ac90,eb8b4feef7866e49cecb81ffd39cf4d5546740f1,artix,artix2@gmail.com,Fri Jan 18 17:31:32 2019 +0100,1547829092,Redis benchmark: fixed issued with config.hostip and code cleanup,32.0,30.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1411.0,75.0,0.9939467592592592,112.0,2.006090105616172,106.0,None,False,,
eb8b4feef7866e49cecb81ffd39cf4d5546740f1,649c947a0f0da5de89754866e852d2fb3d356970,artix,artix2@gmail.com,Fri Jan 18 18:13:35 2019 +0100,1547831615,Redis benchmark: add {tag} to all default tests,13.0,13.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1413.0,76.0,0.029201388888888888,113.0,35.244946492271104,107.0,None,False,,
649c947a0f0da5de89754866e852d2fb3d356970,834809cbb34a3b9aa8ca2209ad09883a1a9239e2,artix,artix2@gmail.com,Tue Feb 5 19:13:50 2019 +0100,1549390430,Redis Benchmark: display 'save' and 'appendonly' configuration,113.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1413.0,77.0,18.041840277777773,114.0,1.0554267183726098,108.0,None,False,,
834809cbb34a3b9aa8ca2209ad09883a1a9239e2,daaff484a6d6e2f132dea2091cc4d3e8cb629cf3,artix,artix2@gmail.com,Tue Feb 5 19:18:25 2019 +0100,1549390705,Redis Benchmark: use atomic var for liveclients in 'createClient',1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,1525.0,78.0,0.0031828703703703693,115.0,315.1818181818182,109.0,None,False,,
daaff484a6d6e2f132dea2091cc4d3e8cb629cf3,4e78d5cd40f388819a0d304c915c589788ac6137,artix,artix2@gmail.com,Mon Feb 11 17:57:20 2019 +0100,1549904240,Redis Benchmark: update slots configuration after MOVED/ASK reply,184.0,2.0,"src/Makefile,CAS_DELIMITER,src/redis-benchmark.c,CAS_DELIMITER",2.0,1.0,1.0,0.08574268253550253,17.0,917.5,250.0,-2.137806712962963,116.5,0.8341307122610508,111.0,None,False,True,"[""75648f99a5ba41812c115f83f8b668f030acfaee""]"
4e78d5cd40f388819a0d304c915c589788ac6137,a79b84ab7f5079149afdd965e63134883380c06e,artix,artix2@gmail.com,Fri Feb 15 12:31:00 2019 +0100,1550230260,Redis benchmark: fix default hset test key,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1707.0,80.0,3.7733796296296296,118.0,1.2650144162934789,112.0,None,False,,
a79b84ab7f5079149afdd965e63134883380c06e,cb1be1ca8115eb0fcd7768f7d6aa51f70f548c45,artix,artix2@gmail.com,Fri Mar 1 18:15:44 2019 +0100,1551460544,Redis benchmark: update help with threads/cluster options,2.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1707.0,81.0,14.239398148148148,119.0,1.0702276872657046,113.0,None,False,,
ab1e87f5b1eddbe3c556b8f2529757f869690436 cb1be1ca8115eb0fcd7768f7d6aa51f70f548c45,537d859288b3d37bde572a3954525d83b9dd5304,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 1 18:39:58 2019 +0100,1551461998,Merge pull request #5889 from artix75/bm_threads_cluster_devRedis benchmark: multithread support and cluster support,,,,,,,,,,,,,,,Merge,False,,
537d859288b3d37bde572a3954525d83b9dd5304 e6156a39bd67cd7d20d19d89650507c4f5b4da44,56cf4138447590915bd160320a6eec6daaecdab9,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 1 18:43:13 2019 +0100,1551462193,Merge pull request #5888 from artix75/cluster_backupCluster Manager (redis-cli): new backup command,,,,,,,,,,,,,,,Merge,False,,
ab1e87f5b1eddbe3c556b8f2529757f869690436,b9b140e2e2f900bc7a9396e813862b46e86af364,antirez,antirez@gmail.com,Sat Mar 2 21:17:40 2019 +0100,1551557860,"Use the RDB info fields to provide info to users.Fix #5790 and 5878.nnMaybe a better option was to have such fields named with the firstnbyte '%' as those are info fields for specification, however now tonbreak it in a backward incompatible way is not an option, so let's usenthe fields actively to provide info when sensible, otherwise ignorenwhen they are not really helpful.n",19.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2462.0,239.0,40.408981481481476,11562.0,1.0247469736513473,6183.0,Corrective,True,True,"[""fb81d1b3f891746e886f44cad5df96a29e6b9f51""]"
b9b140e2e2f900bc7a9396e813862b46e86af364 56cf4138447590915bd160320a6eec6daaecdab9,4edb1d7e100a75a4cf7d804e716744dbb815733f,antirez,antirez@gmail.com,Sat Mar 2 21:19:21 2019 +0100,1551557961,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
4edb1d7e100a75a4cf7d804e716744dbb815733f,cd2743c0e6b7702535b410db4e51f6d5e22a7d4c,Itamar Haber,itamar@redislabs.com,Sun Mar 3 23:10:45 2019 +0200,1551647445,Fixes BZ[REV]POP's arity,2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,4903.0,291.0,4.477546296296296,76.0,1.22333660755829,73.0,Corrective,True,,
4edb1d7e100a75a4cf7d804e716744dbb815733f,fb81d1b3f891746e886f44cad5df96a29e6b9f51,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Mar 4 19:43:00 2019 +0800,1551699780,Fix compile warning when log aux field,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2479.0,240.0,1.6425925925925926,154.0,1.6087936865839911,147.0,Corrective,True,,
4edb1d7e100a75a4cf7d804e716744dbb815733f,c33cb4938a6debf999a9af312498a4ab91271c81,antirez,antirez@gmail.com,Tue Mar 5 15:51:37 2019 +0100,1551797497,ACL: GENPASS subcommand.,7.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1647.0,111.0,6.2616550925925925,11563.0,1.1597021849994549,6184.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81,93e51239ce1d3778cbe068223221365a1ce7ad89,artix,artix2@gmail.com,Wed Mar 6 16:38:36 2019 +0100,1551886716,Cluster Manager: add importing/migrating nodes to backup info,30.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11412.0,344.0,4.957106481481481,120.0,1.2017305869332748,114.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81,d5b24d31d73d80f27feed5334d9c79eec00afc31,Brad Solomon,brad.solomon.1124@gmail.com,Wed Mar 6 21:24:45 2019 -0500,1551925485,"Provide an uninstall target in MakefileOn `make uninstall`, removes:nn- /usr/local/bin/redis-benchmarkn- /usr/local/bin/redis-check-aofn- /usr/local/bin/redis-check-rdbn- /usr/local/bin/redis-clin- /usr/local/bin/redis-sentineln- /usr/local/bin/redis-servernn(Only the src/ versions are removed in `make clean`)n",3.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,310.0,172.0,23.39403935185185,0.0,0.0,0.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81,0e963e068d15e56254987c12e5aba9162e208099,artix,artix2@gmail.com,Thu Mar 7 11:14:03 2019 +0100,1551953643,Redis Benchmark: add multithread idle modeFix issue #5891n,33.0,22.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1709.0,82.0,5.707164351851853,121.0,1.1752183638579676,115.0,None,False,,
0e963e068d15e56254987c12e5aba9162e208099,c389ad0d52d7770f2b1b1e48608bbbd171bc5a3e,artix,artix2@gmail.com,Thu Mar 7 11:30:09 2019 +0100,1551954609,Redis Benchmark: fix key randomization with zero keyspacelen,8.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1720.0,83.0,0.011180555555555556,122.0,90.44099378881987,116.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81,feb4ebff45c5eb9e6aaabe3c1391d4844a480541,Yuan Zhou,yuan.zhou@intel.com,Thu Mar 7 18:35:27 2019 +0800,1551954927,server.h: remove dead codehashTypeTryObjectEncoding() is not used nown,0.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2282.0,276.0,7.874641203703704,0.0,0.0,0.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81,0137f1a2e33b6f14d7e365adddcf6299a4014b50,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Mar 7 22:08:04 2019 +0800,1551967684,try lazyfree temp set in SUNION & SDIFF,2.0,1.0,"src/t_set.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,961.0,65.0,16.86164351851852,155.0,1.0593061998316913,148.0,None,False,,
c389ad0d52d7770f2b1b1e48608bbbd171bc5a3e,8fadebfcca0d514fd6949eaa72599ab5e163bd4c,artix,artix2@gmail.com,Fri Mar 8 11:05:02 2019 +0100,1552039502,Redis Benchmark: handle CLUSTERDOWN error,20.0,20.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1727.0,84.0,0.9825578703703703,123.0,2.0177517580954847,117.0,None,False,,
c33cb4938a6debf999a9af312498a4ab91271c81 feb4ebff45c5eb9e6aaabe3c1391d4844a480541,0f03312c2331a3a54ada93515c961494f5b4a505,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 8 16:53:20 2019 +0100,1552060400,Merge pull request #5902 from zhouyuan/wip_cleanupserver.h: remove dead code,,,,,,,,,,,,,,,Merge,False,,
0f03312c2331a3a54ada93515c961494f5b4a505,f1e7df4b7c0dfb8ceaaa2e844b2b29024e8dfbcc,Steve Webster,spjwebster@gmail.com,Fri Mar 8 17:09:11 2019 +0000,1552064951,Increment delivery counter on XCLAIM unless RETRYCOUNT specifiedThe XCLAIM docs state the XCLAIM increments the delivery counter fornmessages. This PR makes the code match the documentation - which seemsnlike the desired behaviour - whilst still allowing RETRYCOUNT to benspecified manually.nnMy understanding of the way streamPropagateXCLAIM() works is that thisnchange will safely propagate to replicas since retry count is pulledndirectly from the streamNACK struct.nnFixes #5194n,35.0,2.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7531979910695014,16.0,1398.0,197.0,83.48977430555556,0.5,0.5029943786778612,0.0,Corrective,True,,
0f03312c2331a3a54ada93515c961494f5b4a505,79660e4ff43b55fee1eaa70a27263c4cc3c905a4,Brad Solomon,brad.solomon.1124@gmail.com,Sat Mar 9 10:21:15 2019 -0500,1552144875,Note that install_server.sh is not for Mac OSXIt will fail pretty quickly since there is no -fnreadlink flag there.n,5.0,0.0,"README.md,CAS_DELIMITER,utils/install_server.sh,CAS_DELIMITER",2.0,2.0,2.0,0.9709505944546686,16.0,362.0,47.0,533.7025752314814,1.5,1.008148103490365,0.0,Corrective,True,,
0f03312c2331a3a54ada93515c961494f5b4a505,5b52bc738bcf0881d07805dc300aeee9cf555b77,John Sully,john@csquare.ca,Sat Mar 9 11:03:59 2019 -0500,1552147439,Replicas aren't allowed to run the replicaof command,8.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2740.0,233.0,25.304965277777786,0.0,0.0,0.0,None,False,,
0f03312c2331a3a54ada93515c961494f5b4a505,0298d3ad1833c0085ebc26baeda58dc3a511de25,wurongxin,se.wu.rongxin@gmail.com,Sun Mar 10 15:30:32 2019 +0800,1552203032,fix a bufferoverflow bug,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11442.0,345.0,3.661064814814815,0.0,0.0,0.0,Corrective,True,,
0f03312c2331a3a54ada93515c961494f5b4a505 5b52bc738bcf0881d07805dc300aeee9cf555b77,55acac04b439b758bfcc0bdc3d956df288044e29,Salvatore Sanfilippo,antirez@gmail.com,Sun Mar 10 09:45:55 2019 +0100,1552207555,Merge pull request #5911 from JohnSully/unstableReplicas aren't allowed to run the replicaof command,,,,,,,,,,,,,,,Merge,False,,
55acac04b439b758bfcc0bdc3d956df288044e29,8a46d32be2eaf07b6b2e8c3757e4d9f59cd1ab64,antirez,antirez@gmail.com,Sun Mar 10 09:48:06 2019 +0100,1552207686,Make comment in #5911 stay inside 80 cols.,2.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2748.0,234.0,0.6973032407407408,11564.0,2.434096303550384,6185.0,None,False,,
8a46d32be2eaf07b6b2e8c3757e4d9f59cd1ab64,468860ae18b11486f734c476bc2930de7860abe1,swilly22,roi@redislabs.com,Mon Mar 11 10:02:19 2019 +0200,1552291339,Extend REDISMODULE_CTX_FLAGS to indicate if command was sent by master,6.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,2862.0,282.0,53.707789351851865,0.5,0.5046548182864536,1.0,None,False,,
49816941a45f9337ce7c0d3b0b70356f79f54ffa,3621223fbba8d9b5e9e5ce6348c96513e0186be2,chendianqiang,chendianqiang@meituan.com,Tue Mar 12 20:46:40 2019 +0800,1552394800,remove temp-rewriteaof-xxx.aof when interrupt aofrewrite,3.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1783.0,189.0,50.09578703703704,6.0,1.019961758446088,4.0,None,False,,
0f0f787a37e6411a02d9a992ecc7bb8af7decf9a 8a46d32be2eaf07b6b2e8c3757e4d9f59cd1ab64,270a11143320c7dcc100d4ed0b6bfc7a4bd40b31,vattezhang,vattezhang@163.com,Tue Mar 12 21:52:20 2019 +0800,1552398740,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
8a46d32be2eaf07b6b2e8c3757e4d9f59cd1ab64,bdc783b472769e9881b42ed8c45583ab98a791e8,vattezhang,vattezhang@163.com,Tue Mar 12 22:01:02 2019 +0800,1552399262,fix: fix the if condition in clusterManagerShowClusterInfo,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11442.0,346.0,2.2711805555555555,5.0,1.4402996483718091,5.0,Corrective,True,,
8a46d32be2eaf07b6b2e8c3757e4d9f59cd1ab64 3621223fbba8d9b5e9e5ce6348c96513e0186be2,f63bbb4335165b222c4549e1a149ec49261b2ecf,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 17:03:02 2019 +0100,1552406582,Merge pull request #5920 from chendq8/aofrewriteremove temp-rewriteaof-xxx.aof when interrupt aofrewrite,,,,,,,,,,,,,,,Merge,False,,
8fadebfcca0d514fd6949eaa72599ab5e163bd4c,5284d67e376eee1a01eece66a6d0e3273051f359,artix,artix2@gmail.com,Tue Mar 12 17:07:19 2019 +0100,1552406839,Redis Benchmark: fix possible usage of freed pointer (getRedisConfig)Fixes issue #5912n,11.0,13.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1727.0,85.0,4.251585648148148,124.0,1.2352063636388384,118.0,None,False,,
f63bbb4335165b222c4549e1a149ec49261b2ecf 468860ae18b11486f734c476bc2930de7860abe1,45645aee7f73fa63cad38226126fbfede65b9431,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 17:17:19 2019 +0100,1552407439,Merge pull request #5915 from swilly22/redismodule-replicated-cmd-ctx-flagExtend REDISMODULE_CTX_FLAGS to indicate if command was sent by master,,,,,,,,,,,,,,,Merge,False,,
45645aee7f73fa63cad38226126fbfede65b9431 0137f1a2e33b6f14d7e365adddcf6299a4014b50,c02b414e9a46cb3085aa06e56ed470270d78a15b,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 17:20:52 2019 +0100,1552407652,Merge pull request #5903 from soloestoy/sunionstore-lazyfreetry lazyfree temp set in SUNION & SDIFF,,,,,,,,,,,,,,,Merge,False,,
c02b414e9a46cb3085aa06e56ed470270d78a15b 93e51239ce1d3778cbe068223221365a1ce7ad89,b0bc602bb3f38e5b26a912c6395a0fdc3404c909,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 17:21:17 2019 +0100,1552407677,Merge pull request #5900 from artix75/cluster_backupCluster Manager: add importing/migrating nodes to backup info,,,,,,,,,,,,,,,Merge,False,,
b0bc602bb3f38e5b26a912c6395a0fdc3404c909 0298d3ad1833c0085ebc26baeda58dc3a511de25,fba6e26e87da051dfc4aa55272b78861694f6ee2,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 17:25:21 2019 +0100,1552407921,Merge pull request #5913 from wurongxin1987/unstablefix a bufferoverflow bug,,,,,,,,,,,,,,,Merge,False,,
fba6e26e87da051dfc4aa55272b78861694f6ee2 eca0187370c14aa2c126fe07e5310e44c2780a95,e5acc5ef4f1b163d5a98cf54895c2c6c7d9327fd,Salvatore Sanfilippo,antirez@gmail.com,Tue Mar 12 18:10:28 2019 +0100,1552410628,Merge pull request #2774 from rouzier/blocking-list-commands-support-milliseconds-floatingAdded millisecond resolution for blpop command && friends,,,,,,,,,,,,,,,Merge,False,,
f1e7df4b7c0dfb8ceaaa2e844b2b29024e8dfbcc,dfcb227b5066275df18734ea7a6ab19212e57f1f,Steve Webster,spjwebster@gmail.com,Tue Mar 12 20:27:53 2019 +0000,1552422473,Only increment delivery count if JUSTID option is omitted,18.0,3.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream-cgroups.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7918583525674836,16.0,1414.5,199.0,4.137986111111111,2.5,1.181247587561045,1.0,None,False,,
468860ae18b11486f734c476bc2930de7860abe1,89bf4db4fa41aaedac59c720e837f9e3235d5ad7,swilly22,roi@redislabs.com,Wed Mar 13 08:22:40 2019 +0200,1552458160,document additional flag of RM_GetContextFlags,3.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5214.0,206.0,1.9307986111111108,2.0,1.517920405704318,2.0,Feature Addition,False,,
fb81d1b3f891746e886f44cad5df96a29e6b9f51,5a3d3d8be414d201abb670313f2801aeadd9ba69,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Mar 13 16:54:34 2019 +0800,1552467274,Fix compile warning in redis-cli.c,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11442.0,347.0,0.7871759259259259,156.0,2.2703640534023406,149.0,Corrective,True,,
e5acc5ef4f1b163d5a98cf54895c2c6c7d9327fd 5a3d3d8be414d201abb670313f2801aeadd9ba69,02dab200260fc79cd6c52a9d774ea240671b7558,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 11:47:48 2019 +0100,1552474068,Merge pull request #5894 from soloestoy/fix-rdb-warningFix compile some warnings,,,,,,,,,,,,,,,Merge,False,,
02dab200260fc79cd6c52a9d774ea240671b7558 89bf4db4fa41aaedac59c720e837f9e3235d5ad7,610aff32517536e02d8ddd2600e9813fd7905f99,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 11:52:07 2019 +0100,1552474327,Merge pull request #5924 from swilly22/redismodule-replicated-cmd-ctx-flagdocument additional flag of RM_GetContextFlags,,,,,,,,,,,,,,,Merge,False,,
610aff32517536e02d8ddd2600e9813fd7905f99 dfcb227b5066275df18734ea7a6ab19212e57f1f,3e648907ee4c50458f07dc4a525f094063cd5ba3,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 11:55:46 2019 +0100,1552474546,Merge pull request #5907 from spjwebster/xclaim-increment-delivery-countIncrement delivery counter on XCLAIM unless RETRYCOUNT specified,,,,,,,,,,,,,,,Merge,False,,
3e648907ee4c50458f07dc4a525f094063cd5ba3 bdc783b472769e9881b42ed8c45583ab98a791e8,53d1dc170cdf3e46f6b2e6d063fa7ad6ce218248,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:18:08 2019 +0100,1552475888,Merge pull request #5921 from vattezhang/unstable_tempfix: fix the if condition in clusterManagerShowClusterInfo,,,,,,,,,,,,,,,Merge,False,,
53d1dc170cdf3e46f6b2e6d063fa7ad6ce218248 5284d67e376eee1a01eece66a6d0e3273051f359,84d6ce4f56c346cf35d7b3a8f11de6961268408c,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:18:32 2019 +0100,1552475912,Merge pull request #5901 from artix75/bm_threads_cluster_devRedis Benchmark: add multithread idle mode,,,,,,,,,,,,,,,Merge,False,,
84d6ce4f56c346cf35d7b3a8f11de6961268408c 79660e4ff43b55fee1eaa70a27263c4cc3c905a4,46a8cb2d187d830a97c9f9b4735e8ded806bf9c3,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:19:03 2019 +0100,1552475943,Merge pull request #5910 from bsolomon1124/install-server-osx-noteNote that install_server.sh is not for Mac OSX,,,,,,,,,,,,,,,Merge,False,,
46a8cb2d187d830a97c9f9b4735e8ded806bf9c3 a16da7922895ad31e8b1a13aa5e23b3648e78aea,372cbc37e7bb6e883966669f1825a1c121692196,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:22:23 2019 +0100,1552476143,Merge pull request #5884 from chendq8/cluster_failoverReduce 100ms of cluster failover time on Manual mode,,,,,,,,,,,,,,,Merge,False,,
372cbc37e7bb6e883966669f1825a1c121692196 d5b24d31d73d80f27feed5334d9c79eec00afc31,c49abcb794ce7fc5566bda0baaf9c60bf0c551dc,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:26:43 2019 +0100,1552476403,Merge pull request #5898 from bsolomon1124/make-uninstall-tgtProvide an uninstall target in Makefile,,,,,,,,,,,,,,,Merge,False,,
c49abcb794ce7fc5566bda0baaf9c60bf0c551dc cd2743c0e6b7702535b410db4e51f6d5e22a7d4c,71499ab1c61bd5a24c3e41c89168e4adc0a70b3f,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:27:35 2019 +0100,1552476455,Merge pull request #5893 from itamarhaber/bzpop-arityFixes BZ[REV]POP's arity,,,,,,,,,,,,,,,Merge,False,,
71499ab1c61bd5a24c3e41c89168e4adc0a70b3f 645d44d545ec958b9f541d4b7473ec021331ab04,2537b2140fc45187f8a723505892870b362260d6,Salvatore Sanfilippo,antirez@gmail.com,Wed Mar 13 12:34:29 2019 +0100,1552476869,Merge pull request #5787 from soloestoy/bugfix-xgroup-create-with-mkstreamStreams: checkType before XGROUP CREATE,,,,,,,,,,,,,,,Merge,False,,
270a11143320c7dcc100d4ed0b6bfc7a4bd40b31 2537b2140fc45187f8a723505892870b362260d6,31110f1caf52fbf09092093fb9f009e3a528b302,vattezhang,vattezhang@163.com,Wed Mar 13 20:26:54 2019 +0800,1552480014,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
31110f1caf52fbf09092093fb9f009e3a528b302,ad223e204222dca7758eb540a455bca93e62b861,vattezhang,vattezhang@163.com,Wed Mar 13 20:46:33 2019 +0800,1552481193,fix: fix benchmark cannot exit when NOAUTH err happens,2.0,3.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1725.0,86.0,0.8605787037037037,6.0,2.162008768862469,6.0,Corrective,True,,
e5acc5ef4f1b163d5a98cf54895c2c6c7d9327fd,283d6cfd58600a8c9e90584a67f1ca90d85f5669,Jim Brunner,brunnerj@amazon.com,Wed Mar 13 16:31:24 2019 +0000,1552494684,Addition of OnUnload function,17.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,5217.0,207.0,0.4227314814814815,0.0,0.0,0.0,Feature Addition,False,,
2537b2140fc45187f8a723505892870b362260d6 8a87de130ff9389273516993f9aaec1f75cbb22a,6fd4af1f1208059d0a1eeebd8941756bd6403d81,antirez,antirez@gmail.com,Thu Mar 14 11:24:48 2019 +0100,1552559088,Merge branch 'sharedapi' into unstable,,,,,,,,,,,,,,,Merge,False,,
6fd4af1f1208059d0a1eeebd8941756bd6403d81 25029568358e70ac92c6048af4001f4c379ab788,ebf727419229d98bb3bbd3f77f0f975f8201d6bf,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 11:29:24 2019 +0100,1552559364,Merge pull request #5799 from guybe7/zpop_zero_countZPOP should return an empty array if COUNT=0,,,,,,,,,,,,,,,Merge,False,,
ebf727419229d98bb3bbd3f77f0f975f8201d6bf ed88f77d6dcd36e0c62faa484491530bd6739d38,01ace0b240df2801988e80b13796902bd796f2fd,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 11:32:03 2019 +0100,1552559523,Merge pull request #5694 from guybe7/rm_log_argsCheck server.verbosity in RM_LogRaw,,,,,,,,,,,,,,,Merge,False,,
01ace0b240df2801988e80b13796902bd796f2fd b0c8d6c227e172ec93d9b1f1c0f0ac49f8575a8f,190b63f9933b5bbc6659cb651c2c78a76732eced,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 11:35:01 2019 +0100,1552559701,Merge pull request #5812 from guybe7/fix_string2ldIncrease string2ld's buffer size (and fix HINCRBYFLOAT),,,,,,,,,,,,,,,Merge,False,,
190b63f9933b5bbc6659cb651c2c78a76732eced 8c8e85df874c852b5f125209e9d662a70e310f66,ec03f2db6b9e761f1fc712dcd5798e4675461881,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 11:43:55 2019 +0100,1552560235,Merge pull request #4904 from guybe7/memtoll_fixUse memtoll() in 'CONFIG SET client-output-buffer-limit',,,,,,,,,,,,,,,Merge,False,,
ec03f2db6b9e761f1fc712dcd5798e4675461881 b660fc2fbe545f4a20a907ffa6c8333396435907,d3cd2e9a4a6f6f1ed5c410f40ec6c3310d2b44b8,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 11:44:56 2019 +0100,1552560296,Merge pull request #4742 from guybe7/zrangebylex_leakFix zlexrangespec mem-leak in genericZrangebylexCommand,,,,,,,,,,,,,,,Merge,False,,
d3cd2e9a4a6f6f1ed5c410f40ec6c3310d2b44b8,b2eb48df89d8513a359faa677146d3c36e6266ab,Guy Benoish,guy.benoish@redislabs.com,Thu Mar 14 12:11:16 2019 +0100,1552561876,Fix mismatching keyspace notification classes,2.0,2.0,"src/geo.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,797.5,140.0,103.81552083333334,27.5,1.0072243532949572,26.0,Corrective,True,,
d3cd2e9a4a6f6f1ed5c410f40ec6c3310d2b44b8 b2eb48df89d8513a359faa677146d3c36e6266ab,178114e766dd996d884a1c28a9186368d7788621,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 12:30:10 2019 +0100,1552563010,Merge pull request #5931 from guybe7/fix_notify_classesFix mismatching keyspace notification classes,,,,,,,,,,,,,,,Merge,False,,
178114e766dd996d884a1c28a9186368d7788621 bdd9a8002a6fcc93135eb4125da703b87a1959fa,0cce98f2f98cd90d799f75719756d8cffa3a3c84,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 14 12:41:31 2019 +0100,1552563691,Merge pull request #5834 from guybe7/trim_module_sdsTrim SDS free space of retained module strings,,,,,,,,,,,,,,,Merge,False,,
0cce98f2f98cd90d799f75719756d8cffa3a3c84,d292a516181293b54bb7b8d25e0647ae74b5ea62,antirez,antirez@gmail.com,Thu Mar 14 12:47:36 2019 +0100,1552564056,Improve comments after merging #5834.,14.0,8.0,"src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER",2.0,1.0,1.0,0.9023932827949788,16.0,3336.0,357.0,15.36890625,11565.5,1.638996241285167,6187.0,None,False,,
733438fe23f67559d4da922c749664ed5db5dfc9,68fd59056b19c930b7b118d1f531f25947e026b8,Yossi Gottlieb,yossigo@gmail.com,Sun Jun 3 15:37:48 2018 +0300,1528029468,Add RedisModule_Assert() API call.,14.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8631205685666309,16.0,2877.5,287.0,-282.3869155092592,47.5,0.9973539103422944,47.0,Feature Addition,False,,
d292a516181293b54bb7b8d25e0647ae74b5ea62,052e03495f3e6da64d814f80a5dae91721009317,antirez,antirez@gmail.com,Thu Mar 14 17:06:59 2019 +0100,1552579619,Fix objectSetLRUOrLFU() when LFU underflows.,11.0,7.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1439.0,150.0,0.1801273148148148,11567.0,6.551628863329692,6188.0,Corrective,True,,
052e03495f3e6da64d814f80a5dae91721009317,74d6af8f8094b6d9e2e4bb7ea4eca1941f6412c0,antirez,antirez@gmail.com,Thu Mar 14 17:51:14 2019 +0100,1552582274,Fix ZPOP return type when COUNT=0. Related to #5799.,1.0,1.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3305.0,154.0,50.31894675925926,11568.0,1.019873229954202,6189.0,Corrective,True,,
74d6af8f8094b6d9e2e4bb7ea4eca1941f6412c0,a88264d934744b23c02d92a3ba3fccbe070af0b4,Yossi Gottlieb,yossigo@gmail.com,Wed Nov 30 21:47:02 2016 +0200,1480535222,Add RedisModule_GetKeyNameFromIO().,30.0,17.0,"src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",8.0,1.0,1.0,2.638597896982725,16.0,2318.125,1617.0,-694.5459013310185,52.5,0.9995623307609208,55.0,Feature Addition,False,True,"[""be352633a07552d0c3893ffa096b3732347ea378""]"
74d6af8f8094b6d9e2e4bb7ea4eca1941f6412c0,9f13b2bd4967334b1701c6eccdf53760cb13f79e,John Sully,john@csquare.ca,Thu Mar 14 14:02:16 2019 -0400,1552586536,Fix hyperloglog corruption,6.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1588.0,114.0,104.10032407407408,1.0,1.0096061180298386,1.0,Corrective,True,,
9f13b2bd4967334b1701c6eccdf53760cb13f79e,4208666797b5831eefc022ae46ab5747200cd671,antirez,antirez@gmail.com,Fri Mar 15 13:52:29 2019 +0100,1552654349,HyperLogLog: dense/sparse repr parsing fuzz test.,29.0,0.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,185.0,6.0,1227.7842592592592,11569.0,1.0008144753383654,820.0,None,False,,
4208666797b5831eefc022ae46ab5747200cd671,a4b90be9fcd5e1668ac941cabce3b1ab38dbe326,antirez,antirez@gmail.com,Fri Mar 15 17:10:16 2019 +0100,1552666216,HyperLogLog: enlarge reghisto variable for safety.,6.0,1.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1594.0,115.0,0.9222222222222224,11570.0,2.0843373493975905,6190.0,None,False,,
a4b90be9fcd5e1668ac941cabce3b1ab38dbe326,dca7358279bb6449f93e01f7d2806639b8e9ec4b,antirez,antirez@gmail.com,Fri Mar 15 17:13:19 2019 +0100,1552666399,HyperLogLog: speedup fuzz test.,1.0,2.0,"tests/unit/hyperloglog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,214.0,7.0,0.1394675925925926,11571.0,8.1701244813278,821.0,None,False,,
dca7358279bb6449f93e01f7d2806639b8e9ec4b,e216ceaf0e099536fe3658a29dcb725d812364e0,antirez,antirez@gmail.com,Fri Mar 15 17:16:06 2019 +0100,1552666566,HyperLogLog: handle wrong offset in the base case.,2.0,6.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1599.0,116.0,0.004050925925925926,11572.0,247.85714285714286,6191.0,None,False,,
e216ceaf0e099536fe3658a29dcb725d812364e0,a2ac5c38403564d5f1051b2facf0eda2ef1c16f7,Guy Korland,gkorland@gmail.com,Fri Mar 15 21:09:59 2019 +0200,1552676999,add CI,21.0,0.0,".circleci/config.yml,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,Feature Addition,False,,
a2ac5c38403564d5f1051b2facf0eda2ef1c16f7,3c05bc561d62a48ed0e11d30a4c393f0cc309951,Guy Korland,gkorland@gmail.com,Fri Mar 15 21:14:15 2019 +0200,1552677255,add pull app,5.0,0.0,".github/pull.yml,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,8.0,0.0,0.0,Feature Addition,False,,
3c05bc561d62a48ed0e11d30a4c393f0cc309951,c2b7f14c567a380982f7298e7da9f636042b8716,Guy Korland,gkorland@gmail.com,Fri Mar 15 21:30:09 2019 +0200,1552678209,Update config.yml,1.0,1.0,".circleci/config.yml,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,21.0,1.0,0.014004629629629627,9.0,72.40495867768595,1.0,None,False,,
c2b7f14c567a380982f7298e7da9f636042b8716,656cd1a00ae7fdf1dc76707842a22b1192cd022f,Guy Korland,gkorland@gmail.com,Fri Mar 15 21:35:24 2019 +0200,1552678524,Update pull.yml,9.0,0.0,".github/pull.yml,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,5.0,1.0,0.0146875,10.0,69.08510638297872,1.0,None,False,,
656cd1a00ae7fdf1dc76707842a22b1192cd022f,c1455dc06025259dc662144f3ca668d88789f9c0,Guy Korland,gkorland@gmail.com,Fri Mar 15 22:22:06 2019 +0200,1552681326,Update config.yml,0.0,5.0,".circleci/config.yml,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,21.0,2.0,0.03607638888888889,11.0,28.718960538979783,2.0,None,False,,
e216ceaf0e099536fe3658a29dcb725d812364e0,8ea906a3e8f3e125baa9cf54f6027921d3822b02,antirez,antirez@gmail.com,Sat Mar 16 09:15:12 2019 +0100,1552724112,HyperLogLog: fix comment in hllCount().,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1595.0,117.0,0.6660416666666666,11573.0,2.501407569596497,6192.0,None,False,,
8ea906a3e8f3e125baa9cf54f6027921d3822b02,b78ac354f41e370a4dc21ac01981cb0ccd0a1b7d,antirez,antirez@gmail.com,Mon Mar 18 11:15:39 2019 +0100,1552904139,redis-check-aof: fix potential overflow.Bug signaled by @vattezhang in PR #5940 but fixed differently.n,2.0,2.0,"src/redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,233.0,6.0,611.5155671296296,11574.0,1.0016352813464648,6193.0,None,False,,
b78ac354f41e370a4dc21ac01981cb0ccd0a1b7d,14b17c3615108fdbca5e7fe4d2c3f0e8b7454521,antirez,antirez@gmail.com,Mon Mar 18 11:34:40 2019 +0100,1552905280,replicaofCommand() refactoring: stay into 80 cols.,5.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2749.0,235.0,8.074004629629629,11575.0,1.1238542762695778,6194.0,None,False,,
8ea906a3e8f3e125baa9cf54f6027921d3822b02,c3e187190b5e48e69f666c8faa2100253a9b536e,Yossi Gottlieb,yossigo@gmail.com,Fri Feb 23 16:19:37 2018 +0200,1519395577,Initial command filter experiment.,161.0,2.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/hellofilter.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",6.0,1.0,2.0,1.5828358012020405,17.0,2170.5,874.0,126.82919367283951,59.5,1.0027887822343606,61.0,Feature Addition,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
14b17c3615108fdbca5e7fe4d2c3f0e8b7454521,a5af648fdddaf93e89735a8577b56f12379d1dd2,antirez,antirez@gmail.com,Mon Mar 18 15:38:43 2019 +0100,1552919923,MANIFESTO v2.,41.0,6.0,"MANIFESTO,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,67.0,2.0,2228.852511574074,11576.0,1.0004486613604118,1412.0,None,False,,
a5af648fdddaf93e89735a8577b56f12379d1dd2,3eaa2cdc44a9b0742f0695f44911b92547995836,antirez,antirez@gmail.com,Mon Mar 18 15:49:52 2019 +0100,1552920592,MANIFESTO: simplicity and lock-in.,5.0,1.0,"MANIFESTO,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,102.0,3.0,0.007743055555555556,11577.0,130.14798206278027,1413.0,None,False,,
c3e187190b5e48e69f666c8faa2100253a9b536e,67111320835ee46498ea0e4de07dab5cb59584da,Yossi Gottlieb,yossigo@gmail.com,Mon Mar 18 18:36:46 2019 +0200,1552927006,Add command filtering argument handling API.,132.0,13.0,"src/module.c,CAS_DELIMITER,src/modules/hellofilter.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,2.0,1.3683894331994944,17.0,1977.666666666667,294.0,388.0952430555557,64.0,1.0015746421066636,64.0,Feature Addition,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
67111320835ee46498ea0e4de07dab5cb59584da,9095e4dc9bbb8c0311e0df2af556295ca6ce92ca,Yossi Gottlieb,yossigo@gmail.com,Mon Mar 18 19:34:52 2019 +0200,1552930492,Add command filter Module API tests.,28.0,0.0,"tests/modules/commandfilter.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.22228483068568802,17.0,329.0,115.0,24.63291666666667,66.5,0.5101490214651804,2.0,Feature Addition,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
9095e4dc9bbb8c0311e0df2af556295ca6ce92ca,2a5aeef79f894b80024d49ec1036ac03ae7ac5c5,Yossi Gottlieb,yossigo@gmail.com,Mon Mar 18 23:05:52 2019 +0200,1552943152,CommandFilter API: More cleanup.,10.0,29.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.29181825659888583,17.0,2975.5,295.0,0.186875,68.5,5.013377926421405,66.0,None,False,,
2a5aeef79f894b80024d49ec1036ac03ae7ac5c5,325fc1cb2e2e15a99e5d012184d177dc19257036,Yossi Gottlieb,yossigo@gmail.com,Mon Mar 18 23:06:38 2019 +0200,1552943198,CommandFilter API: Support Lua and RM_call() flows.,18.0,7.0,"src/module.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.7219280948873623,17.0,3940.0,417.0,24.24827546296296,70.5,940.1407447941548,68.0,None,False,,
325fc1cb2e2e15a99e5d012184d177dc19257036,a9a6a894e82442600f11d97d23f70b90316ca0a4,Yossi Gottlieb,yossigo@gmail.com,Mon Mar 18 23:07:28 2019 +0200,1552943248,CommandFilter API: hellofilter and tests.,47.0,5.0,"src/modules/hellofilter.c,CAS_DELIMITER,tests/modules/commandfilter.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.961236604722876,17.0,64.0,3.0,0.16781249999999998,72.5,5.149528878505895,3.0,None,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
3eaa2cdc44a9b0742f0695f44911b92547995836,8620a434a058aa5c66cccf2cc571e4337c73d12b,Dvir Volk,dvirsky@google.com,Tue Mar 19 13:11:37 2019 +0200,1552993897,Added keyspace miss notifications support,28.0,8.0,"src/db.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER",2.0,1.0,2.0,0.7106768538561229,16.0,995.5,234.0,247.3035821759259,54.5,1.0190101083054977,55.0,Feature Addition,False,,
a9a6a894e82442600f11d97d23f70b90316ca0a4,dd8b4be46baf86dc4f5e2c787a72b9d31faecdc0,Yossi Gottlieb,yossigo@gmail.com,Tue Mar 19 19:48:47 2019 +0200,1553017727,CommandFilter API: Extend documentation.,43.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5402.0,215.0,0.8626041666666666,74.0,2.1592802801594013,70.0,None,False,,
3eaa2cdc44a9b0742f0695f44911b92547995836,385f6190a3a9f8d2d5775bd058aaa2173dc05c8c,Oran Agra,oran@redislabs.com,Thu Sep 27 18:12:31 2018 +0300,1538061151,"getKeysFromCommand for TOUCH only extracted the first key.also, airty for COMMAND command was wrong.n",2.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,4905.0,293.0,216.0367361111111,123.0,1.0046288423811665,89.0,Corrective,True,,
3eaa2cdc44a9b0742f0695f44911b92547995836,747174388f305148b0832dd97b9754e2a64bdfef,Oran Agra,oran@redislabs.com,Thu Sep 27 18:03:47 2018 +0300,1538060627,"change SORT and SPOP to use lookupKeyWrite rather than lookupKeyReadlike in SUNIONSTORE etc, commands that perform writes are expected to opennall keys, even input keys, with lookupKeyWriten",32.0,25.0,"src/sort.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER",2.0,1.0,1.0,0.2192973081321754,16.0,776.0,120.0,-112.34805555555555,124.5,0.9899297649948784,91.0,None,False,,
3eaa2cdc44a9b0742f0695f44911b92547995836,c9e2900efc1ed33727356df114fb716442ae2ce6,oranagra,oran@redislabs.com,Thu Feb 23 03:13:44 2017 -0800,1487848424,"bugfix to restartAOF, exit will never happen since retry will get negative.also reduce an excess sleepn",5.0,4.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2752.0,236.0,-752.9728703703702,55.0,0.9986719309030244,52.0,Corrective,True,,
3eaa2cdc44a9b0742f0695f44911b92547995836,b2e03f83292e65602a6c7dcaad1f6977f39f0b30,Oran Agra,oran@redislabs.com,Wed Mar 20 17:46:19 2019 +0200,1553096779,"diskless replication - notify slave when rdb transfer failedin diskless replication - master was not notifing the slave that rdb transfernterminated on error, and lets slave wait for replication timeoutn",1.0,0.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2753.0,237.0,755.1892939814815,126.0,1.0013241713143572,92.0,Corrective,True,,
8620a434a058aa5c66cccf2cc571e4337c73d12b,99c2fe0bcf9876daf774fa7df4939cadc7972129,Dvir Volk,dvirsky@google.com,Thu Mar 21 11:47:14 2019 +0200,1553161634,added special flag for keyspace miss notifications,12.0,7.0,"src/db.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER,src/notify.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,2.0,2.0890038287775923,17.0,993.6,613.0,159.15477083333332,58.0,1.1557697991068243,60.0,Feature Addition,False,,
99c2fe0bcf9876daf774fa7df4939cadc7972129,4a0ee5c6ac7908ee41e69c2d7ace55f698d94418,Dvir Volk,dvirsky@google.com,Thu Mar 21 12:47:51 2019 +0200,1553165271,Added missing REDISMODULE_NOTIFY_KEY_MISS flag to REDISMODULE_NOTIFY_ALL,1.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,537.0,84.0,0.04209490740740741,61.0,24.755842727522683,61.0,Feature Addition,False,,
4a0ee5c6ac7908ee41e69c2d7ace55f698d94418,bc269c85e1d7ff15a377aff5197a1a670c65aab9,Dvir Volk,dvirsky@google.com,Thu Mar 21 12:48:37 2019 +0200,1553165317,remove extra linebreak,0.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,2285.0,280.0,0.04262731481481481,62.0,24.45913657344556,62.0,None,False,,
3eaa2cdc44a9b0742f0695f44911b92547995836 a88264d934744b23c02d92a3ba3fccbe070af0b4,684b140a1355bbad45df4e13109c8cd6edb0960e,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 11:49:25 2019 +0100,1553165365,Merge pull request #3650 from yossigo/key_name_from_module_ioAdd RedisModule_GetKeyNameFromIO(),,,,,,,,,,,,,,,Merge,False,,
684b140a1355bbad45df4e13109c8cd6edb0960e 385f6190a3a9f8d2d5775bd058aaa2173dc05c8c,ce518cea79fcfb656c7366bf964f81d43b300f16,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 11:53:27 2019 +0100,1553165607,Merge pull request #5391 from oranagra/touch_flagsgetKeysFromCommand for TOUCH only extracted the first key.,,,,,,,,,,,,,,,Merge,False,,
ce518cea79fcfb656c7366bf964f81d43b300f16 17c5f17686354b28c715b6f16c9c4e8eb2239df4,5c21eca66eb2d83f32c8531e84ed63e29156d714,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 11:54:09 2019 +0100,1553165649,Merge pull request #5243 from oranagra/sigterm_logAdd log when server dies of SIGTERM during loading,,,,,,,,,,,,,,,Merge,False,,
5c21eca66eb2d83f32c8531e84ed63e29156d714 5def65008ff92519a828e1ba403e9a46836ca802,5c47e2e96451fd4f2e45159f0ad1d6ac4a409bc5,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 12:18:04 2019 +0100,1553167084,Merge pull request #4696 from oranagra/zrealloc_fixFix zrealloc to behave similarly to je_realloc when size is 0,,,,,,,,,,,,,,,Merge,False,,
5c47e2e96451fd4f2e45159f0ad1d6ac4a409bc5,9dabbd1ab072f3abced48b4995d9ef3e745f0608,antirez,antirez@gmail.com,Thu Mar 21 12:18:55 2019 +0100,1553167135,Alter coding style in #4696 to conform to Redis code base.,1.0,1.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,461.0,50.0,172.06240740740742,11578.0,1.0058118447548638,6195.0,None,False,,
9dabbd1ab072f3abced48b4995d9ef3e745f0608 747174388f305148b0832dd97b9754e2a64bdfef,d75c36ee4830137bf06d4a979c7a23d2d79e9b29,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 13:39:38 2019 +0100,1553171978,Merge pull request #5390 from oranagra/lookup_key_writechange SORT and SPOP to use lookupKeyWrite rather than lookupKeyRead,,,,,,,,,,,,,,,Merge,False,,
dd8b4be46baf86dc4f5e2c787a72b9d31faecdc0,e2626f69eccc7addf9283285a6849f798e882af8,Yossi Gottlieb,yossigo@gmail.com,Thu Mar 21 14:44:49 2019 +0200,1553172289,CommandFilter API: Add unregister option.A filter handle is returned and can be used to unregister a filter.  Innthe future it can also be used to further configure or manipulate thenfilter.nnFilters are now automatically unregistered when a module unloads.n,126.0,32.0,"src/module.c,CAS_DELIMITER,src/modules/hellofilter.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/commandfilter.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.5998303104539389,17.0,1536.75,306.0,1.7930034722222223,76.5,1.2862122379112046,4.0,None,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
d75c36ee4830137bf06d4a979c7a23d2d79e9b29 c9e2900efc1ed33727356df114fb716442ae2ce6,544373ea66def918b50e6619f299cea28b8563e0,Salvatore Sanfilippo,antirez@gmail.com,Thu Mar 21 17:15:55 2019 +0100,1553184955,"Merge pull request #3829 from oranagra/restart_aof_prbugfix to restartAOF, exit will never happen",,,,,,,,,,,,,,,Merge,False,,
544373ea66def918b50e6619f299cea28b8563e0,9588fd52ac3333d0bf3243523ec9a165fa18f87e,antirez,antirez@gmail.com,Thu Mar 21 17:18:24 2019 +0100,1553185104,Mostly aesthetic changes to restartAOF().See #3829.n,7.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2754.0,238.0,1.0222800925925926,11579.0,1.9782054910840643,6196.0,None,False,,
9588fd52ac3333d0bf3243523ec9a165fa18f87e,b3408e9a9b1bdf8ea59bf80d715c695a113820f3,antirez,antirez@gmail.com,Thu Mar 21 17:21:25 2019 +0100,1553185285,More sensible name for function: restartAOFAfterSYNC().Related to #3829.n,7.0,3.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2758.0,239.0,0.0020949074074074073,11580.0,478.3480662983426,6197.0,None,False,True,"[""2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6""]"
e2626f69eccc7addf9283285a6849f798e882af8,4ea3ed896b286c8f2bf192e07e1c36802a3a1c38,Yossi Gottlieb,yossigo@gmail.com,Thu Mar 21 19:45:41 2019 +0200,1553190341,CommandFilter API: fix UnregisterCommandFilter.,2.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5488.0,217.0,0.2089351851851852,79.0,5.786173277199201,74.0,None,False,,
4ea3ed896b286c8f2bf192e07e1c36802a3a1c38,6c0a5fde3d0d90c85f086ca955f9473fe41797b3,Yossi Gottlieb,yossigo@gmail.com,Thu Mar 21 19:47:43 2019 +0200,1553190463,CommandFilter API: REDISMODULE_CMDFILTER_NOSELF.Add a flag to automatically protect filters from being callednrecursively by their own module.n,62.0,15.0,"src/module.c,CAS_DELIMITER,src/modules/hellofilter.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/commandfilter.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.8350625957006472,17.0,1560.0,311.0,0.15811342592592592,81.5,180.21731971573882,5.0,None,False,True,"[""822a992f913484162ce508fdb073d8f2ddb6d7c8""]"
b2e03f83292e65602a6c7dcaad1f6977f39f0b30,29b0a5769576327af24b592f5e2d745fe884c73c,Oran Agra,oran@redislabs.com,Tue Mar 21 07:20:02 2017 -0700,1490106002,diskless fork kept streaming RDB to a disconnected slave,10.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2436.0,355.0,-708.2920023148148,127.0,0.9985881529133016,93.0,None,False,,
bc269c85e1d7ff15a377aff5197a1a670c65aab9,040e52c77f870be19792b28c73690dbe8b655b9d,Dvir Volk,dvirsky@dvirsky-macbookpro.roam.corp.google.com,Thu Mar 21 20:33:11 2019 +0200,1553193191,Renamed event name from miss to keymiss,5.0,5.0,"src/db.c,CAS_DELIMITER,src/modules/testmodule.c,CAS_DELIMITER",2.0,1.0,2.0,0.7219280948873623,17.0,1005.5,238.0,0.3652430555555555,63.5,3.0534271318566404,64.0,None,False,,
b3408e9a9b1bdf8ea59bf80d715c695a113820f3 040e52c77f870be19792b28c73690dbe8b655b9d,122f42844adf8aa30f6e7455d0617131d0379985,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 22 17:41:00 2019 +0100,1553272860,Merge pull request #5945 from dvirsky/miss_notificationAdded keyspace miss notifications support,,,,,,,,,,,,,,,Merge,False,,
122f42844adf8aa30f6e7455d0617131d0379985 29b0a5769576327af24b592f5e2d745fe884c73c,fcac34295529c570fb28f9427f9825f914ef0ed2,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 22 17:41:40 2019 +0100,1553272900,Merge pull request #3830 from oranagra/diskless_capa_prseveral bugfixes to diskless replication,,,,,,,,,,,,,,,Merge,False,,
fcac34295529c570fb28f9427f9825f914ef0ed2 6c0a5fde3d0d90c85f086ca955f9473fe41797b3,5e8caca0366e5fdf5fc36292c86964360203de77,Salvatore Sanfilippo,antirez@gmail.com,Fri Mar 22 17:43:49 2019 +0100,1553273029,Merge pull request #5944 from yossigo/command-filteringCommand Filtering API,,,,,,,,,,,,,,,Merge,False,,
5e8caca0366e5fdf5fc36292c86964360203de77,822a992f913484162ce508fdb073d8f2ddb6d7c8,Yossi Gottlieb,yossigo@gmail.com,Sun Mar 24 12:00:33 2019 +0200,1553421633,fix: missing initialization.,234.0,233.0,"src/module.c,CAS_DELIMITER,src/modules/hellofilter.c,CAS_DELIMITER,tests/modules/commandfilter.c,CAS_DELIMITER,tests/modules/commandfilter.tcl,CAS_DELIMITER,tests/unit/moduleapi/commandfilter.tcl,CAS_DELIMITER",5.0,2.0,4.0,1.9610227522909127,17.0,1148.4,228.0,1.6053472222222225,86.0,1.1993338235930269,8.0,Corrective,True,,
822a992f913484162ce508fdb073d8f2ddb6d7c8,ec0b6bd2c35a617101a2e874307be8ae9b504ac0,Yossi Gottlieb,yossigo@gmail.com,Sun Mar 24 12:03:03 2019 +0200,1553421783,Add runtest-moduleapi with commandfilter coverage.,63.0,29.0,"runtest-moduleapi,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/commandfilter.c,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/moduleapi/commandfilter.tcl,CAS_DELIMITER",6.0,3.0,5.0,2.2594693224774054,17.0,158.83333333333334,132.0,66.58525655864197,91.5,0.8354372951494415,12.0,Feature Addition,False,,
5e8caca0366e5fdf5fc36292c86964360203de77,acba2fc9b4c8082e5344d2d53e51dc4c1c37942c,Oran Agra,oran@redislabs.com,Sun Mar 24 13:10:55 2019 +0200,1553425855,"slave corrupts replication stream when module blocked client uses large reply (or POSTPONED_ARRAY)when redis appends the blocked client reply list to the real client, it didn'tnbother to check if it is in fact the master client. so a slave executing thatnmodule command will send replies to the master, causing the master to send thenslave error responses, which will mess up the replication offsetn(slave will advance it's replication offset, and the master does not)n",15.0,6.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.1657840518150733,17.0,3413.333333333333,857.0,245.31100694444447,129.0,7.822319396342273,96.0,None,False,,
5e8caca0366e5fdf5fc36292c86964360203de77,4de88828d9d64b7d64b5ee75f9fb8d25aa1dfaa5,David Carlier,devnexen@gmail.com,Thu Mar 28 06:38:16 2019 +0000,1553755096,build fix,1.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,2459.0,357.0,3.8106597222222223,20.0,1.2624217518474308,20.0,Corrective,True,,
5e8caca0366e5fdf5fc36292c86964360203de77,75648f99a5ba41812c115f83f8b668f030acfaee,antirez,antirez@gmail.com,Mon Apr 8 17:39:22 2019 +0200,1554737962,Fix assert comparison in fetchClusterSlotsConfiguration().,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1724.0,87.0,26.120011574074073,11581.0,1.0382848222392278,6198.0,Corrective,True,,
75648f99a5ba41812c115f83f8b668f030acfaee,f8a9708aa705b6493ef63a82e42ed428997b817a,antirez,antirez@gmail.com,Mon Apr 8 18:06:50 2019 +0200,1554739610,ACL: regression test for #5998.,7.0,0.0,"tests/unit/acl.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,111.0,7.0,68.21211805555555,11582.0,1.0146601517223897,822.0,None,False,,
f8a9708aa705b6493ef63a82e42ed428997b817a,c24e32041b91ac32626e8d8eee1c062942e25f27,antirez,antirez@gmail.com,Mon Apr 8 18:08:37 2019 +0200,1554739717,ACL: Fix memory leak in ACLResetSubcommandsForCommand().This commit fixes bug reported at #5998. Thanks to @tomcat1102.n,3.0,1.0,"src/acl.c,CAS_DELIMITER,tests/unit/acl.tcl,CAS_DELIMITER",2.0,2.0,2.0,1.0,16.0,886.0,120.0,17.027355324074076,11583.5,1.0293650471407796,823.0,None,False,,
c24e32041b91ac32626e8d8eee1c062942e25f27,d490752d58ecd0a815bdbbb350b550919fcc7a4a,yongman,yming0221@gmail.com,Tue Apr 9 09:24:22 2019 +0800,1554773062,Fix memleak in bitfieldCommand,8.0,2.0,"src/bitops.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1125.0,54.0,129.65518518518522,6.0,1.0077127651977182,6.0,Corrective,True,,
c24e32041b91ac32626e8d8eee1c062942e25f27 acba2fc9b4c8082e5344d2d53e51dc4c1c37942c,6de5d25062ef884beb6f9425b86dbc2b81e733fe,Salvatore Sanfilippo,antirez@gmail.com,Wed Apr 10 09:41:36 2019 -0700,1554914496,Merge pull request #5962 from oranagra/module_blocked_replyslave corrupts replication stream when module blocked client uses large reply (or POSTPONED_ARRAY),,,,,,,,,,,,,,,Merge,False,,
6de5d25062ef884beb6f9425b86dbc2b81e733fe,9e67691ffb4709535b56a089a973c3f89bfbe231,antirez,antirez@gmail.com,Wed Apr 10 18:53:27 2019 +0200,1554915207,Aesthetic change to #5962 to conform to Redis style.,1.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5505.0,221.0,17.23787037037037,11585.0,1.0580118064769108,6200.0,None,False,,
9e67691ffb4709535b56a089a973c3f89bfbe231 ec0b6bd2c35a617101a2e874307be8ae9b504ac0,d044e33c20d5448945c763d1421c154953156e5c,Salvatore Sanfilippo,antirez@gmail.com,Thu Apr 11 07:56:23 2019 -0700,1554994583,Merge pull request #5961 from yossigo/modules-testsModules tests,,,,,,,,,,,,,,,Merge,False,,
d044e33c20d5448945c763d1421c154953156e5c,3ccdcbc0880e4f6a6e577bed29826064d03c9509,James Rouzier,rouzier@gmail.com,Thu Apr 11 12:19:02 2019 -0400,1554999542,Fix start and end key initialize,2.0,2.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2553.0,186.0,29.8271875,2.0,1.0335264597106248,1.0,Corrective,True,,
9e67691ffb4709535b56a089a973c3f89bfbe231,487601d85d95acf71414dee8328e65e8b4fafe08,antirez,antirez@gmail.com,Mon Apr 15 16:50:26 2019 +0200,1555339826,Test: disable module testing for now.,0.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,658.0,117.0,22.19957175925926,11586.0,1.0450459139862869,824.0,Preventative,False,,
487601d85d95acf71414dee8328e65e8b4fafe08 d044e33c20d5448945c763d1421c154953156e5c,4a5057000a3af2b970f7e8044ee199fc5d256dd8,antirez,antirez@gmail.com,Mon Apr 15 16:50:48 2019 +0200,1555339848,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d044e33c20d5448945c763d1421c154953156e5c,26d9d4ec2c38c12dd99733db4e415a8bcfd01dc0,Itamar Haber,itamar@redislabs.com,Tue Apr 16 17:15:23 2019 +0300,1555424123,Adds RedisModule_ReplyWithCStringSigned-off-by: Itamar Haber <itamar@redislabs.com>n,13.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,17.0,3024.0,309.0,15.871388888888893,77.5,1.1006379219075213,75.0,Feature Addition,False,,
26d9d4ec2c38c12dd99733db4e415a8bcfd01dc0,c184b32d4c8a59614b29d11c72ba2007c8d147d5,Itamar Haber,itamar@redislabs.com,Tue Apr 16 17:38:33 2019 +0300,1555425513,Uses addReplyBulkCStringSigned-off-by: Itamar Haber <itamar@redislabs.com>n,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5514.0,223.0,0.016087962962962964,79.0,63.158273381294954,76.0,Feature Addition,False,,
d044e33c20d5448945c763d1421c154953156e5c,52686f48664e8a01e556e6a7ee52013816514a26,Itamar Haber,itamar@redislabs.com,Tue Apr 16 22:16:12 2019 +0300,1555442172,"Adds a Modules section to `INFO`Fixes #6012.nnAs long as INFO is broken, this should be adequate IMO. Once we reworkn`INFO`, perhaps into RESP3, this implementation should be revisited.n",27.0,0.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0377724203178629,17.0,4234.666666666667,800.0,74.89967978395063,81.0,2.73193410471552,79.0,Corrective,True,,
49816941a45f9337ce7c0d3b0b70356f79f54ffa,11f2c6b115e108202bd9c3c7e94038d4afd029a8,chendianqiang,chendianqiang@meituan.com,Wed Apr 17 21:20:10 2019 +0800,1555507210,stop ping when client pause,1.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2762.0,240.0,26.87413194444445,7.0,1.0372105042152524,5.0,None,False,,
d044e33c20d5448945c763d1421c154953156e5c,fa97ef34ca5899ef482c543d7122a41fba8e4509,git-hulk,hulk.website@gmail.com,Tue Apr 23 20:08:14 2019 +0800,1556021294,FIX: core dump in redis-benchmark when the `-r` is the last arg,1.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1724.0,88.0,14.853379629629627,0.0,0.0,0.0,Corrective,True,,
ad223e204222dca7758eb540a455bca93e62b861 d044e33c20d5448945c763d1421c154953156e5c,d3d96b041a7880f0d1c7ae0853dc844d24bf7340,vattezhang,vattezhang@163.com,Fri Apr 26 18:47:11 2019 +0800,1556275631,Merge github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
d3d96b041a7880f0d1c7ae0853dc844d24bf7340,bc36404c79b50e80583d4a98a7211bd239fc88f9,vattezhang,vattezhang@163.com,Fri Apr 26 18:50:51 2019 +0800,1556275851, update,0.0,5.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1724.0,89.0,2.9462615740740734,7.0,1.339413176616632,7.0,None,False,,
bc36404c79b50e80583d4a98a7211bd239fc88f9,4e38ced4886446efb70f96685a6a6dfa344095d4,vattezhang,vattezhang@163.com,Fri Apr 26 19:47:07 2019 +0800,1556279227,fix: benchmark auth fails when server have requirepass,13.0,0.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1719.0,90.0,0.03907407407407408,8.0,26.59241706161137,8.0,Corrective,True,,
4a5057000a3af2b970f7e8044ee199fc5d256dd8,162208f94d57b95ef57a3615549f244691213234,abhay,abhay@techtinium.com,Thu Apr 25 13:50:25 2019 +0530,1556180425,removed obsolete warning as per - https://github.com/antirez/redis/issues/5291,1.0,7.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1551.0,199.0,58.66645833333333,0.0,0.0,0.0,None,False,,
162208f94d57b95ef57a3615549f244691213234 fa97ef34ca5899ef482c543d7122a41fba8e4509,2d450d1315ea7fc0f285ad2a97a35ac90eb87503,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 26 17:17:55 2019 +0200,1556291875,Merge pull request #6039 from git-hulk/fix/benchmark-coredump-in-argumentsFIX: coredump in redis-benchmark,,,,,,,,,,,,,,,Merge,False,,
2d450d1315ea7fc0f285ad2a97a35ac90eb87503 3ccdcbc0880e4f6a6e577bed29826064d03c9509,5c5197fe4f40ad697d5350529989f38122327bd1,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 26 17:25:20 2019 +0200,1556292320,Merge pull request #6013 from rouzier/fix/stream_iterator_initFix stream interator start and end key initialize,,,,,,,,,,,,,,,Merge,False,,
5c5197fe4f40ad697d5350529989f38122327bd1 d490752d58ecd0a815bdbbb350b550919fcc7a4a,5ba908fa5ff43f092e28d425230cdbfc2796421a,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 26 17:31:42 2019 +0200,1556292702,Merge pull request #6002 from yongman/fix-memleak-in-bitfieldFix memleak in bitfieldCommand,,,,,,,,,,,,,,,Merge,False,,
5ba908fa5ff43f092e28d425230cdbfc2796421a 4de88828d9d64b7d64b5ee75f9fb8d25aa1dfaa5,843de8b786562d8d77c78d83a971060adc61f77a,Salvatore Sanfilippo,antirez@gmail.com,Fri Apr 26 17:32:21 2019 +0200,1556292741,Merge pull request #5971 from devnexen/unstablebuild fix,,,,,,,,,,,,,,,Merge,False,,
843de8b786562d8d77c78d83a971060adc61f77a,bcac165fabcbec43843800e3f2fcb69a201d8b50,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Apr 29 14:38:28 2019 +0800,1556519908,"aof: enhance AOF_FSYNC_EVERYSEC, more details in #5985",32.0,3.0,"src/aof.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.18717625687320816,17.0,2036.0,474.0,445.9630902777778,157.5,1.0011291201215675,151.0,None,False,,
843de8b786562d8d77c78d83a971060adc61f77a 4e38ced4886446efb70f96685a6a6dfa344095d4,0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,Salvatore Sanfilippo,antirez@gmail.com,Thu May 2 09:48:02 2019 +0200,1556783282,Merge pull request #6051 from vattezhang/unstable fix: benchmark auth fails when server have requirepass,,,,,,,,,,,,,,,Merge,False,,
0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,ba809f26d4bd81d23fa929d0c018f235ab298564,Oran Agra,oran@redislabs.com,Sun May 5 08:19:52 2019 +0300,1557033592,"make replication tests more stable on slow machinessolving few replication related tests race conditions which fail on slow machinesnnbugfix in slave buffers test: since the test is executed twice, each time withna different commands count, the threshold for the delta can't be a constant.n",34.0,4.0,"tests/integration/psync2.tcl,CAS_DELIMITER,tests/integration/replication-psync.tcl,CAS_DELIMITER,tests/unit/maxmemory.tcl,CAS_DELIMITER",3.0,1.0,2.0,1.209175997640732,16.0,206.3333333333333,26.0,235.84602623456792,132.0,1.00259115612599,29.0,Corrective,True,,
0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,9f3679880a7cebc3ce73142e2e19ae3e1150f457,Yossi Gottlieb,yossigo@gmail.com,Sun May 5 20:32:53 2019 +0300,1557077573,Preserve client->id for blocked clients.,4.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5533.0,225.0,18.928252314814817,95.0,1.0528310793499576,81.0,None,False,,
0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,1c0913dc4e22701726b3a39386a17a83058ad24c,WuYunlong,xzsyeb@126.com,Mon May 6 11:46:07 2019 +0800,1557114367,Do not active expire keys in the background when the switch is off.,6.0,4.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,4912.0,295.0,19.354108796296295,22.0,1.0516686152033703,18.0,None,False,,
0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,b1c7e3393d8c6bfd357c981b11b7a84426ccff0d,liaotonglang,liaotonglang@qinglianyun.com,Mon May 6 17:15:49 2019 +0800,1557134149,"delete sdsTest() from REDIS_TESTsdsTest() defined in sds.c dit not match the call in server.c.nremove it from REDIS_TEST, since test-sds defined in Makefile.n",0.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,4914.0,296.0,0.2289583333333333,0.0,0.0,0.0,Preventative,False,,
0a6090bfd8fbec26f682ff0a1dc7a43699e0c9b7,f468e653b5e683f945b0a4a6665c3155cc768a45,antirez,antirez@gmail.com,Tue Oct 24 08:35:05 2017 +0200,1508826905,"Threaded IO: implement handleClientsWithPendingWritesUsingThreads().This is just an experiment for now, there are a couple of racenconditions, mostly harmless for the performance gain experiment thatnthis commit represents so far.nnThe general idea here is to take Redis single threaded and insteadnfan-out on expansive kernel calls: write(2) in this case, but the samenconcept could be easily implemented for read(2) and protcol parsing.nnHowever just threading writes like in this commit, is enough to evaluatenif the approach is sounding.n",162.0,9.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5022005034968862,17.0,3219.666666666666,939.0,-543.7053935185186,11588.0,0.998845722613938,6203.0,None,False,,
f468e653b5e683f945b0a4a6665c3155cc768a45,a2dbd9bd977b814ed69500538c3125c51c4963b5,antirez,antirez@gmail.com,Mon Mar 25 12:16:13 2019 +0100,1553512573,Threaded IO: allow to disable debug printf.,12.0,10.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,2606.0,359.0,517.1952314814815,11590.0,1.0019335058390533,6204.0,None,False,,
a2dbd9bd977b814ed69500538c3125c51c4963b5,6f4f36c0fb9498cee4289655036f6dd12a0bbebb,antirez,antirez@gmail.com,Mon Mar 25 12:56:48 2019 +0100,1553515008,Threaded IO: second attempt without signaling conditions.,56.0,52.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.13303964861069895,17.0,3761.5,658.0,258.6257986111111,11591.5,18.742239748186922,6206.0,None,False,,
6f4f36c0fb9498cee4289655036f6dd12a0bbebb,ea35a81c42a738a73ec4505b69e1b0d16e31fb34,antirez,antirez@gmail.com,Mon Mar 25 16:33:23 2019 +0100,1553528003,Threaded IO: 3rd version: use the mutex only to stop the thread.,33.0,19.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,2614.0,361.0,0.1504050925925926,11593.0,7.648711042708732,6207.0,None,False,,
ea35a81c42a738a73ec4505b69e1b0d16e31fb34,9bf7f302a77e69bad40c3d13639537049ece433c,Ubuntu,ubuntu@ip-172-31-26-106.us-west-2.compute.internal,Mon Mar 25 17:05:06 2019 +0000,1553533506,"Threaded IO: stop threads when no longer needed + C11 in Makefile.Now threads are stopped even when the connections drop immediately tonzero, not allowing the networking code to detect the condition and stopnthe threads. serverCron() will handle that.n",29.0,6.0,"src/Makefile,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.9111019780631648,18.0,2536.25,1119.0,134.08166377314814,1.5,0.7770880972071386,3.0,None,False,,
9bf7f302a77e69bad40c3d13639537049ece433c,30091dc29f5a1aa9e751ab5cbec0b525cd4d0f49,antirez,antirez@gmail.com,Wed Mar 27 18:39:13 2019 +0100,1553708353,Threaded IO: use main thread if num of threads is 1.,11.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2647.0,363.0,2.0236921296296297,11594.0,1.4941463107745632,6208.0,None,False,,
30091dc29f5a1aa9e751ab5cbec0b525cd4d0f49,9814b2a5f3e91eafb21ff1fe865a161abf71045f,antirez,antirez@gmail.com,Wed Mar 27 18:58:45 2019 +0100,1553709525,Threaded IO: make num of I/O threads configurable.,10.0,2.0,"src/config.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.5510981710072649,18.0,3060.0,1201.0,9.53859375,11596.5,1.0281485963122965,6212.0,None,False,,
9814b2a5f3e91eafb21ff1fe865a161abf71045f,74591fb5bddc995dfaa51c05b3362e7675187b0f,antirez,antirez@gmail.com,Wed Mar 27 18:59:39 2019 +0100,1553709579,Threaded IO: hide more debugging printfs under conditional.,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2655.0,365.0,0.000625,11599.0,1601.0,6213.0,None,False,,
74591fb5bddc995dfaa51c05b3362e7675187b0f,dd5b105c73a02389987e457cebbeaa801ba16977,antirez,antirez@gmail.com,Sat Mar 30 11:26:58 2019 +0100,1553941618,Threaded IO: read side WIP.,75.0,46.0,"src/evict.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.5834282515125735,18.0,2625.0,981.0,29.01275462962964,11601.5,1.0089332584545316,6217.0,None,False,,
dd5b105c73a02389987e457cebbeaa801ba16977,a2245f8ff146629159d8c52d60713a262fa1b69a,antirez,antirez@gmail.com,Sun Mar 31 15:58:54 2019 +0200,1554040734,Threaded IO: read side WIP 2.,23.0,7.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2692.0,367.0,1.147175925925926,11604.0,1.8717058799790145,6218.0,None,False,,
a2245f8ff146629159d8c52d60713a262fa1b69a,63a0ffd36a99083b909e2110a7604fe335656a8d,antirez,antirez@gmail.com,Sun Mar 31 21:59:50 2019 +0200,1554062390,Threaded IO: read side WIP 3.,55.0,6.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.24096783080307266,18.0,3303.333333333333,958.0,1.0154320987654322,11606.0,2.6415154056077967,6221.0,None,False,,
63a0ffd36a99083b909e2110a7604fe335656a8d,8d7d2be24fb74234603667e8da4de2d2f466aff1,antirez,antirez@gmail.com,Sun Mar 31 22:06:00 2019 +0200,1554062760,Threaded IO: process read queue before stopping threads.,6.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2755.0,369.0,0.0042824074074074075,11608.0,234.51351351351352,6222.0,None,False,,
8d7d2be24fb74234603667e8da4de2d2f466aff1,463ccf86642ae35e18cf0c84be4e8e9e7c905c70,antirez,antirez@gmail.com,Mon Apr 8 13:12:10 2019 +0200,1554721930,"Threaded IO: logging should be safe in I/O threads.Potentially it is possible that we get interleaved writes, even ifnserverLog() makes sure to write into a buffer and then use printf(), soneven this should be ok. However in general POSIX guarantees that writingnto the same file pointer object from multiple threads is safe. Anywayncurrently we *reopen* the file at each call, but for the standard outputnlogging.nnThe logging functions actually also access global configuration whilenperforming the log (for instance in order to check the log level, thenlog filename and so forth), however dunring the I/O threads executionnwe cannot alter such shared state in any way.n",2.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2760.0,370.0,7.629282407407408,11609.0,1.1310739263012577,6223.0,None,False,,
463ccf86642ae35e18cf0c84be4e8e9e7c905c70,647a66ebba5d12d461e830f174a1c90a4e96c5cd,antirez,antirez@gmail.com,Fri Apr 12 17:18:10 2019 +0200,1555082290,Threaded IO: parsing WIP 1: set current_client in a better scoped way.,12.0,11.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2759.0,371.0,4.170833333333333,11610.0,1.2397602397602396,6224.0,None,False,,
647a66ebba5d12d461e830f174a1c90a4e96c5cd,6ab6a97fe6991d1496a3c8efa52280db3a3df3eb,antirez,antirez@gmail.com,Fri Apr 26 19:29:50 2019 +0200,1556299790,Threaded IO: parsing WIP 2: refactoring to parse from thread.,60.0,28.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.08970338978684995,18.0,2526.0,661.0,19.993634259259263,11611.5,1.0479865260559311,6226.0,None,False,,
6ab6a97fe6991d1496a3c8efa52280db3a3df3eb,90d720e7a5777ec34c93258d97592d8c6b439988,antirez,antirez@gmail.com,Mon Apr 29 12:46:23 2019 +0200,1556534783,Threaded IO: put fflush() inside tio_debug conditional.,2.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2791.0,373.0,2.719826388888889,11613.0,1.3676705263561042,6227.0,None,False,,
90d720e7a5777ec34c93258d97592d8c6b439988,1c0c436757f278565b400c36e763531d073ef4bb,antirez,antirez@gmail.com,Tue Apr 30 15:39:27 2019 +0200,1556631567,Threaded IO: ability to disable reads from threaded path.,5.0,1.0,"src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.4591479170272446,18.0,3332.0,967.0,11.565347222222226,11615.0,1.3179799488239368,6230.0,None,False,,
1c0c436757f278565b400c36e763531d073ef4bb,5baeb14cf3ca8eb345a7a7352bf482542168728e,antirez,antirez@gmail.com,Tue Apr 30 15:55:02 2019 +0200,1556632502,Threaded IO: configuration directive for turning on/off reads.,6.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2383.0,252.0,33.830752314814816,11617.0,1.02955890518468,6231.0,None,False,,
5baeb14cf3ca8eb345a7a7352bf482542168728e,3d053dbb6dea51d59709913e9c0e9f96cc1d24f8,antirez,antirez@gmail.com,Tue Apr 30 15:59:23 2019 +0200,1556632763,Threaded IO: handleClientsWithPendingReadsUsingThreads top comment.,6.0,0.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2792.0,375.0,0.013842592592592592,11618.0,73.2408026755853,6232.0,None,False,,
3d053dbb6dea51d59709913e9c0e9f96cc1d24f8 ba809f26d4bd81d23fa929d0c018f235ab298564,a72ab70fee267759c1e22ddb76b7945a55b7b12c,Salvatore Sanfilippo,antirez@gmail.com,Mon May 6 18:05:33 2019 +0200,1557158733,Merge pull request #6070 from oranagra/stabilize_repl_testsmake replication tests more stable on slow machines,,,,,,,,,,,,,,,Merge,False,,
a72ab70fee267759c1e22ddb76b7945a55b7b12c,340a723b87eff9df140bfb1de239ea65e318fee1,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue May 7 13:35:27 2019 +0800,1557207327,Makefile: 1TD -> STD,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,313.0,174.0,42.521076388888886,159.0,1.023517748959462,152.0,None,False,,
a72ab70fee267759c1e22ddb76b7945a55b7b12c,d9d3d3065ba3f6fc941fc6886da8392193d0cb41,stan011,qiaochenzhi@gmail.com,Tue May 7 14:22:40 2019 +0800,1557210160,change the comments there may have a mis type,1.0,1.0,"src/t_list.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,777.0,85.0,53.79958333333333,0.0,0.0,0.0,None,False,,
a72ab70fee267759c1e22ddb76b7945a55b7b12c,48d591a010bbe4cf0c09a4d84a55ee3f31e5664f,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue May 7 15:59:16 2019 +0800,1557215956,fix memory leak when rewrite config file,3.0,4.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2389.0,253.0,6.752939814814815,160.0,1.1480836535528078,153.0,Corrective,True,,
a72ab70fee267759c1e22ddb76b7945a55b7b12c 48d591a010bbe4cf0c09a4d84a55ee3f31e5664f,f674e83215af5f15096bf53a27de6c4ccf21faae,Salvatore Sanfilippo,antirez@gmail.com,Tue May 7 10:25:13 2019 +0200,1557217513,Merge pull request #6082 from soloestoy/fix-config-rewrite-memleakfix memory leak when rewrite config file,,,,,,,,,,,,,,,Merge,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,842dd85b264f7d77a12273f8b2e7700ce99dd610,u00e5u0094u0090u00e6u009du0083,tangquanawj@gmail.com,Wed May 8 12:53:56 2019 +0800,1557291236,"Update ziplist.cHi, @antirezrnrnIn the code, to get the size of ziplist, unsigned int bytes = ZIPLIST_HEADER_SIZE+1; is correct, rnbut why not make it more readable and easy to understand",1.0,1.0,"src/ziplist.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1932.0,60.0,310.9785416666667,0.0,0.0,0.0,None,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,fb4ee7f0c5ad81cae88a10587d5246a1b4f4dd84,yongman,yming0221@gmail.com,Wed May 8 16:13:42 2019 +0800,1557303222,Fix uint64_t hash value in active defrag,3.0,3.0,"src/defrag.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,1140.0,12.0,294.0396875,7.0,1.003400901451441,7.0,Corrective,True,,
f674e83215af5f15096bf53a27de6c4ccf21faae,bea09a7fa6c2d332d6b298fb7a91cc04099faf47,Angus Pearson,angus@toaster.cc,Wed May 8 11:36:31 2019 +0100,1557311791,Add <strings.h> include to deps/hiredis/read.c to fix Implicit Declaration of strcasecmp warning,1.0,0.0,"deps/hiredis/read.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,664.0,8.0,148.76828703703703,2.0,1.0067218627028425,0.0,Corrective,True,,
bea09a7fa6c2d332d6b298fb7a91cc04099faf47,a1fb0be1d7c1228c7b1c076426cbdf30f9489077,Angus Pearson,angus@toaster.cc,Wed May 8 12:13:45 2019 +0100,1557314025,Enlarge error buffer in redis-check-aof.c to remove compiler warning of output truncation through snprintf format string,1.0,1.0,"src/redis-check-aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,233.0,7.0,51.04034722222222,3.0,1.0195923432034295,2.0,None,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,c64aec9ce7ead321f7b29f6a2a29649b36d4a4a0,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri May 10 16:27:25 2019 +0800,1557476845,test cases: skiptill -> skip-till,1.0,1.0,"tests/test_helper.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,657.0,118.0,24.734016203703703,161.0,1.0404301505976317,5.0,Preventative,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae c64aec9ce7ead321f7b29f6a2a29649b36d4a4a0,1212f22858e3414277ad8ccf54ae67cc224ab775,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:22:19 2019 +0200,1557483739,Merge pull request #6091 from soloestoy/fix-test-skip-tilltest cases: skiptill -> skip-till,,,,,,,,,,,,,,,Merge,False,,
1212f22858e3414277ad8ccf54ae67cc224ab775 a1fb0be1d7c1228c7b1c076426cbdf30f9489077,19c3d5b743ec2f14c2d20af95c2bef35c4f87a6d,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:23:42 2019 +0200,1557483822,Merge pull request #6087 from AngusP/linux-build-warnings[Minor] Fix build warnings on Linux,,,,,,,,,,,,,,,Merge,False,,
19c3d5b743ec2f14c2d20af95c2bef35c4f87a6d fb4ee7f0c5ad81cae88a10587d5246a1b4f4dd84,402b0d0bd12add7516365f5375717f400d84d1d3,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:23:59 2019 +0200,1557483839,Merge pull request #6086 from yongman/fix-uint64-in-defragFix uint64_t hash value in active defrag,,,,,,,,,,,,,,,Merge,False,,
402b0d0bd12add7516365f5375717f400d84d1d3 842dd85b264f7d77a12273f8b2e7700ce99dd610,433f7638141e1490a7d1165b99dd35d81ca38bf8,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:25:18 2019 +0200,1557483918,Merge pull request #6083 from tangquanawj/fix-inappropriate-add-operation-codefix-inappropriate-add-operation-code,,,,,,,,,,,,,,,Merge,False,,
433f7638141e1490a7d1165b99dd35d81ca38bf8 b1c7e3393d8c6bfd357c981b11b7a84426ccff0d,891f4a38f66f78502ee189e76c8a222d77855bad,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:27:47 2019 +0200,1557484067,Merge pull request #6077 from zltl/patch-7delete sdsTest() from REDIS_TEST in server.c to fix build failed,,,,,,,,,,,,,,,Merge,False,,
891f4a38f66f78502ee189e76c8a222d77855bad d9d3d3065ba3f6fc941fc6886da8392193d0cb41,6b490e33c438fa84d1baacd2315b040cbd6a3d7f,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:28:12 2019 +0200,1557484092,Merge pull request #6081 from Happy4Code/mod_commentschange the comments there may have a mis type,,,,,,,,,,,,,,,Merge,False,,
6b490e33c438fa84d1baacd2315b040cbd6a3d7f 9f3679880a7cebc3ce73142e2e19ae3e1150f457,2903c56bdaa49df9f6fee9939b16077145138d49,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:32:47 2019 +0200,1557484367,Merge pull request #6073 from yossigo/fix/blocked-client-idPreserve client->id for blocked clients.,,,,,,,,,,,,,,,Merge,False,,
2903c56bdaa49df9f6fee9939b16077145138d49 340a723b87eff9df140bfb1de239ea65e318fee1,1e9b8d853d77c223418c5bd0f4cc48ef1e767bf5,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:37:07 2019 +0200,1557484627,Merge pull request #6080 from soloestoy/fix-makefileMakefile: 1TD -> STD,,,,,,,,,,,,,,,Merge,False,,
1e9b8d853d77c223418c5bd0f4cc48ef1e767bf5 1c0913dc4e22701726b3a39386a17a83058ad24c,34f6d9470105d5493871a30431a12deba658c8ef,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 12:39:35 2019 +0200,1557484775,Merge pull request #6074 from trevor211/fixActiveExpireDo not active expire keys in the background when the switch is off.,,,,,,,,,,,,,,,Merge,False,,
34f6d9470105d5493871a30431a12deba658c8ef bcac165fabcbec43843800e3f2fcb69a201d8b50,e633254ccf7c0342e981dbeb8687e54bf4a15c64,Salvatore Sanfilippo,antirez@gmail.com,Fri May 10 18:06:40 2019 +0200,1557504400,"Merge pull request #6053 from soloestoy/enhance-aof-fsync-everysecaof: enhance AOF_FSYNC_EVERYSEC, more details in #5985",,,,,,,,,,,,,,,Merge,False,,
e633254ccf7c0342e981dbeb8687e54bf4a15c64,4f4676a1420a446e4233c04a80f2009aa819b21f,antirez,antirez@gmail.com,Mon May 13 17:27:06 2019 +0200,1557761226,"Fix test false positive introduced by threaded I/O.Now clients that are ready to be terminated asynchronously are processednmore often in beforeSleep() instead of being processed in serverCron().nThis means that the test will not be able to catch the moment the clientnwas terminated, also note that the 'omem' figure now changes in bignsteps, because of the new client output buffers layout.nnSo we have to change the test range in order to accomodate for that.nYet the test is useful enough to be worth taking, even if its precisionnis reduced by this commit. Probably if we get more problems, a thingnthat makes sense is just to check that the limit is < 200k. That's morenthan enough actually.n",1.0,1.0,"tests/unit/obuf-limits.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,7.0,73.0,6.0,2240.1881712962963,11619.0,1.0004463910723274,825.0,Corrective,True,,
4f4676a1420a446e4233c04a80f2009aa819b21f,9724ca4e22678038c511d312a78df6e8d9d29374,antirez,antirez@gmail.com,Mon May 13 17:30:02 2019 +0200,1557761402,Make comment in getClientOutputBufferMemoryUsage() describing the present.,1.0,8.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2798.0,376.0,13.062951388888884,11620.0,1.0765523785727766,6233.0,None,False,,
9724ca4e22678038c511d312a78df6e8d9d29374,1a1ba483900005dab36e6749b112735593561f30,antirez,antirez@gmail.com,Tue May 14 16:54:59 2019 +0200,1557845699,Test: fix slowlog test false positive.In fast systems SLOWLOG RESET is fast enough to don't be logged evennwhen the time limit is 1 sometimes. Leading to false positives suchnas:nn[err]: SLOWLOG - can be disabled in tests/unit/slowlog.tclnExpected '1' to be equal to '0'n,3.0,1.0,"tests/unit/slowlog.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,91.0,6.0,305.21103009259264,11621.0,1.0032764215621457,826.0,Preventative,False,,
1a1ba483900005dab36e6749b112735593561f30 11f2c6b115e108202bd9c3c7e94038d4afd029a8,caf74e507e6535dab58ce6f3db19f8b594b5f7ca,Salvatore Sanfilippo,antirez@gmail.com,Wed May 15 12:03:19 2019 +0200,1557914599,Merge pull request #6029 from chendq8/clientpausefix cluster failover time out,,,,,,,,,,,,,,,Merge,False,,
caf74e507e6535dab58ce6f3db19f8b594b5f7ca,074d24df1e82b5c794a5da9fb6cda5b77b60b27b,antirez,antirez@gmail.com,Wed May 15 12:16:43 2019 +0200,1557915403,"Narrow the effects of PR #6029 to the exact state.CLIENT PAUSE may be used, in other contexts, for a long time making allnthe slaves time out. Better for now to be more specific about whatnshould disable senidng PINGs.nnAn alternative to that would be to virtually refresh the slaveninteractions when clients are paused, however for now I went for thisnmore conservative solution.n",17.0,5.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2762.0,241.0,27.872604166666665,11622.0,1.0358775231054986,6234.0,Perfective,False,,
074d24df1e82b5c794a5da9fb6cda5b77b60b27b,fd9407dfc8dcf61628a060c6af7f92749169a5d3,antirez,antirez@gmail.com,Wed May 15 12:46:01 2019 +0200,1557917161,Update CONTRIBUTING with present info.,15.0,5.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,40.0,12.0,314.7985185185185,11623.0,1.0031766350258131,1414.0,None,False,,
fd9407dfc8dcf61628a060c6af7f92749169a5d3,7fababd44e8b8b2df53cad0906ec5ab7c678dd44,Christian Zeller,chrizel@posteo.de,Wed May 15 16:10:48 2019 +0200,1557929448,Typo fixes in CONTRIBUTING,2.0,2.0,"CONTRIBUTING,CAS_DELIMITER",1.0,1.0,1.0,0.0,8.0,50.0,13.0,0.14221064814814816,0.0,0.0,0.0,Corrective,True,,
fd9407dfc8dcf61628a060c6af7f92749169a5d3 7fababd44e8b8b2df53cad0906ec5ab7c678dd44,fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,Salvatore Sanfilippo,antirez@gmail.com,Wed May 15 17:48:40 2019 +0200,1557935320,Merge pull request #6100 from chrizel/typo-fixesTypo fixes in CONTRIBUTING,,,,,,,,,,,,,,,Merge,False,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,bf963253ecfd367b49081a26c1b5c410558aecfc,Angus Pearson,angus@toaster.cc,Wed May 22 16:39:04 2019 +0100,1558539544,"Implement `SCAN cursor [TYPE type]` modifier suggested in issue #6107.Add tests to check basic functionality of this optional keyword, and also tested withna module (redisgraph). Checked quickly with valgrind, no issues.nnCopies name the type name canonicalisation code from `typeCommand`, perhaps this wouldnbe better factored out to prevent the two diverging and both needing to be edited tonadd new `OBJ_*` types, but this is a little fiddly with C strings.nnThe [redis-doc](https://github.com/antirez/redis-doc/blob/master/commands.json) reponwill need to be updated with this new arg if accepted.nnA quirk to be aware of here is that the GEO commands are backed by zsets not their ownntype, so they're not distinguishable from other zsets.nnAdditionally, for sparse types this has the same behaviour as `MATCH` in that it maynreturn many empty results before giving something, even for large `COUNT`s.n",76.0,1.0,"src/db.c,CAS_DELIMITER,tests/unit/scan.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.97933992595678,17.0,918.0,239.0,202.0496701388889,4.5,1.0093175940504913,3.0,Feature Addition,False,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,412eb67d21705ca31162d614fb8e3a6a568ef5ed,Yuan Zhou,yuan.zhou@intel.com,Wed May 29 14:21:47 2019 +0800,1559110907,aof: fix assignment for aof_fsync_offsetSigned-off-by: Yuan Zhou <yuan.zhou@intel.com>n,1.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1814.0,192.0,29.988414351851848,1.0,1.0333462112490202,1.0,None,False,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,2fec7d9c6c630db3bcb13a07a08c39404abad447,Oran Agra,oran@redislabs.com,Thu May 30 11:51:58 2019 +0300,1559206318,"Jemalloc: Avoid blocking on background thread lock for stats.Background threads may run for a long time, especially when the # of dirty pagesnis high.  Avoid blocking stats calls because of this (which may cause latencynspikes).nnsee https://github.com/jemalloc/jemalloc/issues/1502nncherry picked from commit 1a71533511027dbe3f9d989659efeec446915d6bn",7.0,1.0,"deps/jemalloc/src/background_thread.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,15.0,909.0,1.0,370.7321875,134.0,1.0026973649273438,5.0,None,False,,
2fec7d9c6c630db3bcb13a07a08c39404abad447,09f99c2a925a0351985e799c106614082d6053cf,Oran Agra,oran@redislabs.com,Thu May 30 12:51:32 2019 +0300,1559209892,"make redis purge jemalloc after flush, and enable background purging threadjemalloc 5 doesn't immediately release memory back to the OS, instead there's a decayingnmechanism, which doesn't work when there's no traffic (no allocations).nthis is most evident if there's no traffic after flushdb, the RSS will remain high.nn1) enable jemalloc background purgingn2) explicitly purge in flushdbn",124.0,0.0,"src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",7.0,1.0,1.0,1.8899527477394151,18.0,1892.428571428572,1322.0,72.8857242063492,138.0,1.0142352532350756,103.0,None,False,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,d3ed53f11b66d8af4b2334e8651a2eded880d086,artix,artix2@gmail.com,Wed Jun 5 16:34:55 2019 +0200,1559745295,Redis Benchmark: prevent CONFIG failure from exiting program,6.0,2.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1732.0,91.0,40.11652777777777,125.0,1.0249273816901456,119.0,None,False,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56 d3ed53f11b66d8af4b2334e8651a2eded880d086,de035c94816722dd923e4aedd852869de79a5185,Salvatore Sanfilippo,antirez@gmail.com,Wed Jun 5 17:29:50 2019 +0200,1559748590,Merge pull request #6148 from artix75/redis_bm_devRedis Benchmark: prevent CONFIG failure from exiting program,,,,,,,,,,,,,,,Merge,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,dd5f4378718c95eeb753ddc5cb083cd76de5694a,Madelyn Olson,matolson@amazon.com,Fri Jun 7 13:20:22 2019 -0700,1559938822,Fixed some spelling issues in ACL codepath including user facing error,12.0,12.0,"src/acl.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,18.0,3285.5,418.0,34.30575810185185,10.5,1.015596528802024,10.0,Corrective,True,,
de035c94816722dd923e4aedd852869de79a5185 dd5f4378718c95eeb753ddc5cb083cd76de5694a,0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,Salvatore Sanfilippo,antirez@gmail.com,Fri Jun 7 22:54:52 2019 +0200,1559940892,Merge pull request #6149 from madolson/acl-spellingFixed some spelling issues in ACL codepath including a user facing error,,,,,,,,,,,,,,,Merge,False,,
bf963253ecfd367b49081a26c1b5c410558aecfc,e2adea21884260dc983242cc483f4602104146e5,Angus Pearson,angus@toaster.cc,Mon Jun 10 17:41:44 2019 +0100,1560184904,"Add char* typeNameCanonicalize(robj*) to remove duplicate code between SCAN and TYPE commands, and to keep OBJ_* enum to string canonicalization in one place.",17.0,26.0,"src/db.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.5830194167347008,18.0,1945.5,520.0,11.284861111111107,6.5,1.0664607204834402,5.0,Feature Addition,False,,
0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,f54d95e803cb9dc017e1d40e1a0051101d5cb7dd,swilly22,roi@redislabs.com,Wed Jun 12 15:37:19 2019 +0300,1560343039,Extend REDISMODULE_CTX_FLAGS to indicate if redis is currently loading from either RDB or AOF,5.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,17.0,3041.5,314.0,47.363321759259264,3.5,1.0185076982587966,4.0,None,False,,
e2adea21884260dc983242cc483f4602104146e5,38cd5fd9f66aecc0d9a09892701cb938a48d61b1,Angus Pearson,angus@toaster.cc,Thu Jun 13 17:49:33 2019 +0100,1560444573,Spelling cannonical -> canonical,1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2302.0,293.0,3.0054282407407413,8.0,1.3327312848279926,6.0,None,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,dd51fc5a4aa90ccd6897ed268883d4f72b15ed53,Madelyn Olson,matolson@amazon.com,Fri May 31 12:05:18 2019 -0700,1559329518,Refactored yesno configs so there was less duplication,89.0,265.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2397.0,255.0,1.3845601851851852,12.0,1.7222510156654909,11.0,None,False,,
0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,2d236d7aecbf12373618191b7ef4b2365d487c6f,zheng.ren01@mljr.com,renzheng0526@163.com,Tue Jun 25 18:34:35 2019 +0800,1561458875,fix readme.mdu00efu00bcu008cRedis data types should add `t_stream.c`.,1.0,1.0,"README.md,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,448.0,29.0,107.80092592592592,0.0,0.0,0.0,Corrective,True,,
fd0ee469ab165d0e005e9fe1fca1c4f5c604cd56,a28d7918d7ba229666670f29f8202cc67f4f3a1a,antirez,antirez@gmail.com,Sat Jun 29 09:09:38 2019 -0400,1561813778,Client side caching: add new file and description.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,313.0,175.0,53.31540509259259,11624.0,1.0187563050165953,6235.0,None,False,,
a28d7918d7ba229666670f29f8202cc67f4f3a1a,45d64f229eaa0fa17e56bf0589da78d81065344c,antirez,antirez@gmail.com,Sat Jun 29 20:08:41 2019 -0400,1561853321,Client side caching: fields and flags for tracking mode.,23.0,3.0,"src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7062740891876007,18.0,2546.5,671.0,31.832563657407412,11625.5,1.018410986759301,6237.0,None,False,True,"[""5941730c3770cfff0f753403378854e16e3c7d67""]"
45d64f229eaa0fa17e56bf0589da78d81065344c,c29f3bcf2e8d9fa4ebc11834ac4504eaf0393cf7,antirez,antirez@gmail.com,Sun Jun 30 06:19:04 2019 -0400,1561889944,Client side caching: enable tracking mode.,1.0,0.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2317.0,295.0,0.4238773148148148,11627.0,3.3591731971711765,6238.0,None,False,,
0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,593f6656c1c6ce71eccd71496bb0e62c5f0741b7,Angus Pearson,angus@toaster.cc,Tue Jul 2 14:28:48 2019 +0100,1562074128,"RESP3 double representation for -infinity is `,-infrn`, not `-infrn`",1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2796.0,378.0,2.5556365740740743,9.0,1.3912919427373227,7.0,None,False,,
c29f3bcf2e8d9fa4ebc11834ac4504eaf0393cf7,db16a861a1ca2f43f340c68c00a47b69a15a6f03,antirez,antirez@gmail.com,Wed Jul 3 11:58:20 2019 +0200,1562147900,Client side caching: CLIENT TRACKING subcommand.,39.0,2.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2796.0,379.0,0.8538425925925925,11628.0,2.171176055956189,6239.0,None,False,,
db16a861a1ca2f43f340c68c00a47b69a15a6f03,506764b3f87789bfe219da0b07b79f01917bff9f,antirez,antirez@gmail.com,Wed Jul 3 12:42:16 2019 +0200,1562150536,Client side caching: hook inside call() for tracking.,12.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.41381685030363374,18.0,3616.5,602.0,14.307326388888884,11629.5,1.0370059278488981,6241.0,None,False,,
506764b3f87789bfe219da0b07b79f01917bff9f,46edb55de94cd5d8ebf2dd910092ddaf53181fb8,antirez,antirez@gmail.com,Wed Jul 3 19:16:20 2019 +0200,1562174180,Client side caching: implement trackingInvalidateKey().,170.0,2.0,"src/db.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",6.0,1.0,1.0,0.4340244003896211,18.0,1469.833333333333,1090.0,72.50690393518518,11633.5,1.0116789841748088,6247.0,None,False,True,"[""08c3fe8063b0a7e477dee8036ff5409a48c6f9a9""]"
46edb55de94cd5d8ebf2dd910092ddaf53181fb8,3e43aed1acd222806afb7fc51907a0a4358f0f38,antirez,antirez@gmail.com,Thu Jul 4 14:06:44 2019 +0200,1562242004,Client side caching: fix invalidate message len and content.,2.0,2.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,162.0,1.0,0.785,11637.0,2.2738853503184706,6248.0,None,False,,
0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,41c5ebcab6b1b2f9eabe78af88e75de841f8e0e5,Oran Agra,oran@redislabs.com,Thu Jul 4 10:02:26 2019 +0300,1562223746,"missing per-skiplist overheads in MEMORY USAGEthese had severe impact for small zsets, for instance ones with just onenelement that is longer than 64 (causing it not to be ziplist encoded)n",3.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1443.0,151.0,111.6218402777778,142.0,1.0089588202229192,104.0,None,False,,
3e43aed1acd222806afb7fc51907a0a4358f0f38 0cabe0cfa7290d9b14596ec38e0d0a22df65d1df,f099def7339ad064aeae632d48405ada1ce266e0,antirez,antirez@gmail.com,Thu Jul 4 18:34:53 2019 +0200,1562258093,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
f099def7339ad064aeae632d48405ada1ce266e0,6b29f2d83d0b15878b2de603a62d2fcb01a2ddc0,antirez,antirez@gmail.com,Fri Jul 5 12:24:28 2019 +0200,1562322268,Client side caching: RESP2 support.,15.0,2.0,"src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",2.0,1.0,1.0,0.3227569588973983,18.0,1242.0,300.0,1.3214814814814817,11638.5,1.480900052035476,6250.0,None,False,,
6b29f2d83d0b15878b2de603a62d2fcb01a2ddc0 c184b32d4c8a59614b29d11c72ba2007c8d147d5,a714004738025aeed957d748997d1be0f8ee1a7f,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 5 20:25:18 2019 +0200,1562351118,Merge pull request #6022 from itamarhaber/RedisModule_ReplyWithCStringAdds RedisModule_ReplyWithCString,,,,,,,,,,,,,,,Merge,False,,
a714004738025aeed957d748997d1be0f8ee1a7f f54d95e803cb9dc017e1d40e1a0051101d5cb7dd,677e95e2f5ee903682ce44a7bfd9558a22577926,Salvatore Sanfilippo,antirez@gmail.com,Sun Jul 7 17:01:29 2019 +0200,1562511689,Merge pull request #6161 from swilly22/redismodule-loading-ctx-flagExtend REDISMODULE_CTX_FLAGS to indicate if redis is  loading,,,,,,,,,,,,,,,Merge,False,,
677e95e2f5ee903682ce44a7bfd9558a22577926 dd51fc5a4aa90ccd6897ed268883d4f72b15ed53,e8ae07aabfebf655e98c59c53d827c09b6cf66c7,Salvatore Sanfilippo,antirez@gmail.com,Sun Jul 7 17:13:11 2019 +0200,1562512391,Merge pull request #6162 from madolson/dev-unstable-config-refactorRefactored yesno configs so there is less duplication,,,,,,,,,,,,,,,Merge,False,,
e8ae07aabfebf655e98c59c53d827c09b6cf66c7,2d07883cab2bc301f20ceb291904dfafa359f2f6,Guy Korland,gkorland@gmail.com,Sun Jul 7 18:28:15 2019 +0300,1562513295,fix build tracking.c should be tracking.othanks to @rafie,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,313.0,176.0,8.096261574074074,12.0,1.1235137959477757,7.0,Corrective,True,,
e8ae07aabfebf655e98c59c53d827c09b6cf66c7 2d07883cab2bc301f20ceb291904dfafa359f2f6,4c4b7023dd335794ba31a4d0acea10ddf39df61e,Salvatore Sanfilippo,antirez@gmail.com,Sun Jul 7 17:49:17 2019 +0200,1562514557,Merge pull request #6210 from gkorland/patch-3fix build tracking.c should be tracking.o,,,,,,,,,,,,,,,Merge,False,,
38cd5fd9f66aecc0d9a09892701cb938a48d61b1,6eb52e200ce3af68433b69e50e2a5044f7074b08,Angus Pearson,angus@toaster.cc,Mon Jul 8 11:04:37 2019 +0100,1562580277,"Change typeNameCanonicalize -> getObjectTypeName, and other style changes",7.0,8.0,"src/db.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,18.0,1952.0,529.0,3.8432060185185186,10.5,1.1714283818265046,9.0,None,False,,
4c4b7023dd335794ba31a4d0acea10ddf39df61e 6eb52e200ce3af68433b69e50e2a5044f7074b08,722446510faf0debf0d309708b2ed4fe4d939319,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 8 12:53:34 2019 +0200,1562583214,Merge pull request #6116 from AngusP/scan-typesSCAN: New Feature `SCAN cursor [TYPE type]` modifier suggested in issue #6107,,,,,,,,,,,,,,,Merge,False,,
722446510faf0debf0d309708b2ed4fe4d939319,2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6,Oran Agra,oran@redislabs.com,Mon Jul 1 15:22:29 2019 +0300,1561983749,"diskless replication on slave side (don't store rdb to file), plus some other related fixesThe implementation of the diskless replication was currently diskless only on the master side.nThe slave side was still storing the received rdb file to the disk before loading it back in and parsing it.nnThis commit adds two modes to load rdb directly from socket:n1) when-emptyn2) using swapdbnthe third mode of using diskless slave by flushdb is risky and currently not included.nnother changes:n--------------ndistinguish between aof configuration and state so that we can re-enable aof only when sync eventuallynsucceeds (and not when exiting from readSyncBulkPayload after a failed attempt)nalso a CONFIG GET and INFO during rdb loading would have liednnWhen loading rdb from the network, don't kill the server on short read (that can be a network error)nnFix rdb check when performed on preamble AOFnntests:nrun replication tests for diskless slave toonmake replication test a bit more aggressivenAdd test for diskless load swapdbn",647.0,251.0,"redis.conf,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/integration/replication-4.tcl,CAS_DELIMITER,tests/integration/replication-psync.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",17.0,3.0,4.0,2.777999702717036,18.0,1310.6470588235295,2205.0,329.3323454520697,151.0,1.0012605005866952,33.0,Corrective,True,,
722446510faf0debf0d309708b2ed4fe4d939319 2de544cfcc6d1aa7cf6d0c75a6116f7fc27b6fd6,d984732b3517dae198422080a6adf0cc96c1dd92,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 8 18:10:16 2019 +0200,1562602216,"Merge pull request #6193 from oranagra/diskless_slave_refresh3diskless replication on slave side (don't store rdb to file), plus some other related fixes",,,,,,,,,,,,,,,Merge,False,,
d984732b3517dae198422080a6adf0cc96c1dd92,81b18fa3a0926b60a59083eee144cbf3d0e2fd64,antirez,antirez@gmail.com,Mon Jul 8 18:32:47 2019 +0200,1562603567,Diskless replica: a few aesthetic changes to replication.c.,96.0,42.0,"src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER",2.0,1.0,1.0,0.4262286569981449,18.0,1665.0,269.0,7.1738194444444465,11640.5,1.104546818582229,6252.0,None,False,,
81b18fa3a0926b60a59083eee144cbf3d0e2fd64,dfcbeaf11572516e13d619db9a82e2bfebe392a5,antirez,antirez@gmail.com,Mon Jul 8 18:39:59 2019 +0200,1562603999,Diskless replica: a few aesthetic changes to rio.c,32.0,25.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,460.0,27.0,0.005,11642.0,201.0,6253.0,None,False,,
dfcbeaf11572516e13d619db9a82e2bfebe392a5,3300e98ff003709554adf54c4da86c39dd2160d9,antirez,antirez@gmail.com,Wed Jul 10 09:34:21 2019 +0200,1562744061,Diskless replica: fix mispelled var name.,1.0,1.0,"src/rio.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,467.0,28.0,1.6210879629629629,11643.0,1.6168696720023992,6254.0,None,False,,
3300e98ff003709554adf54c4da86c39dd2160d9,3bbb9a14133725e03012ad73b0b0c9f57f11a333,antirez,antirez@gmail.com,Wed Jul 10 11:42:26 2019 +0200,1562751746,Diskless replica: refactoring of DBs backups.,47.0,22.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2924.0,244.0,1.7150347222222222,11644.0,1.5830785738869881,6255.0,None,False,,
3bbb9a14133725e03012ad73b0b0c9f57f11a333,7c9f6ebc8f77bbf3dc06008fb27036ad91667809,antirez,antirez@gmail.com,Wed Jul 10 12:36:14 2019 +0200,1562754974,Diskless replica: fix disklessLoadRestoreBackups() bug.,7.0,7.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2949.0,245.0,0.037361111111111116,11645.0,27.76579925650557,6256.0,None,False,,
7c9f6ebc8f77bbf3dc06008fb27036ad91667809,923e4fb312d819b3dfe4a0b24d475309aad5660e,antirez,antirez@gmail.com,Wed Jul 10 18:08:31 2019 +0200,1562774911,Client side caching: add tracking clients in INFO.,4.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,4931.0,308.0,9.156967592592592,11646.0,1.1092064583486063,6257.0,None,False,,
923e4fb312d819b3dfe4a0b24d475309aad5660e,c7aaf8db4d532c40c832557f71e76466eb0c819f,antirez,antirez@gmail.com,Wed Jul 10 18:17:07 2019 +0200,1562775427,Client side caching: implement CLIENT GETREDIR.This subcommand may simplify the writing of Redis client librariesnusing the tracking feature and/or improve observability and debuggingncapabilities.n,22.0,14.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2834.0,381.0,6.9588773148148135,11647.0,1.1437013407135503,6258.0,None,False,,
c7aaf8db4d532c40c832557f71e76466eb0c819f 41c5ebcab6b1b2f9eabe78af88e75de841f8e0e5,7567323071f8b5762d65e37d7a1777d28fbde9e7,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 10 19:43:24 2019 +0200,1562780604,Merge pull request #6198 from oranagra/skiplist-mem-usagemissing per-skiplist overheads in MEMORY USAGE,,,,,,,,,,,,,,,Merge,False,,
c7aaf8db4d532c40c832557f71e76466eb0c819f,dad0e916ff04fbe84c6260037679e0e3250221a0,antirez,antirez@gmail.com,Wed Jul 10 19:46:46 2019 +0200,1562780806,Client side caching: filter clients no longer there.,1.0,0.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,174.0,3.0,5.3071527777777785,11648.0,1.1884249506038758,6259.0,None,False,,
dad0e916ff04fbe84c6260037679e0e3250221a0 7567323071f8b5762d65e37d7a1777d28fbde9e7,2a99f199bc806a5659c4d7ce0ea588c4ea6c1f6d,antirez,antirez@gmail.com,Wed Jul 10 19:48:44 2019 +0200,1562780924,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
2a99f199bc806a5659c4d7ce0ea588c4ea6c1f6d,54c4e7f86c280f6a3050fdce17039c1572124007,antirez,antirez@gmail.com,Fri Jul 12 12:18:33 2019 +0200,1562926713,Vertically compact code in aofWrite().,1.0,3.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1814.0,194.0,10.913935185185185,11649.0,1.091625979358703,6260.0,None,False,,
2a99f199bc806a5659c4d7ce0ea588c4ea6c1f6d 6b818efeb62356358ea5a5187fd02889940d4bd0,6100a82a3ab03f6e822844392eb0dfcabcd01b42,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 12 12:36:33 2019 +0200,1562927793,Merge pull request #5738 from bmerry/fix-swapdb-int-overflowMake dbSwapDatabases take args as long,,,,,,,,,,,,,,,Merge,False,,
6100a82a3ab03f6e822844392eb0dfcabcd01b42 593f6656c1c6ce71eccd71496bb0e62c5f0741b7,3f1c84751a7e665c8831475cd23be1e93285d032,Salvatore Sanfilippo,antirez@gmail.com,Fri Jul 12 13:08:46 2019 +0200,1562929726,"Merge pull request #6196 from AngusP/resp3[RESP3, Minor] in networking.c double representation for -infiinity leaves out comma",,,,,,,,,,,,,,,Merge,False,,
3f1c84751a7e665c8831475cd23be1e93285d032 b00e1891c04bd375bb7d9877397c675335f8b40c,4b2579a0644e469edb80e7c979f44ec7f2724368,Salvatore Sanfilippo,antirez@gmail.com,Mon Jul 15 23:41:57 2019 +0200,1563226917,Merge pull request #5779 from madolson/dev-unstable-geo-bugfixFixed a rounding bug in geo.tcl,,,,,,,,,,,,,,,Merge,False,,
4b2579a0644e469edb80e7c979f44ec7f2724368 2d236d7aecbf12373618191b7ef4b2365d487c6f,5827b69861079ea8c88408525d526c94adab5e97,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 16 18:33:55 2019 +0200,1563294835,Merge pull request #6185 from AlexRenCN/unstablefix readme.mdu00efu00bcu008cRedis data types should add `t_stream.c`.,,,,,,,,,,,,,,,Merge,False,,
54c4e7f86c280f6a3050fdce17039c1572124007 5827b69861079ea8c88408525d526c94adab5e97,241d18d954289fcccd98a1183cd0d161dbf7acb1,antirez,antirez@gmail.com,Wed Jul 17 12:26:38 2019 +0200,1563359198,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
4b2579a0644e469edb80e7c979f44ec7f2724368,6e07fac40542ae00ea0a3a2522482bbbd547a2da,Oran Agra,oran@redislabs.com,Wed Jul 17 15:08:18 2019 +0300,1563365298,"RM_Log - add support for logging without a context or context without modulefor instance detached thread safe contexts, or various callbacks that don'tnprovide a context.n",6.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,5539.0,227.0,34.97984953703704,160.0,1.0285878874047525,117.0,Feature Addition,False,,
3f1c84751a7e665c8831475cd23be1e93285d032,6191ea90a1ec8b3ebeab65e8b783b2cb6714c0d4,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Jul 17 20:33:52 2019 +0800,1563366832,Client side caching: implement trackingInvalidateKeysOnFlush(),52.0,31.0,"src/db.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",3.0,1.0,1.0,0.18795689841132712,18.0,1368.6666666666667,537.0,12.93283950617284,163.0,1.0398259613235752,156.0,None,False,,
4b2579a0644e469edb80e7c979f44ec7f2724368,56258c6b7d26b6ee44bf31b18e9aad95d0a0142a,Oran Agra,oran@redislabs.com,Wed Jul 17 08:51:02 2019 +0300,1563342662,Module API for Forking* create module API for forking child processes.n* refactor duplicate code around creating and tracking forks by AOF and RDB.n* child processes listen to SIGUSR1 and dies exitFromChild in order ton  eliminate a valgrind warning of unhandled signal.n* note that BGSAVE error reply has changed.nnvalgrind error is:n  Process terminating with default action of signal 10 (SIGUSR1)n,342.0,91.0,"runtest-moduleapi,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/childinfo.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/fork.c,CAS_DELIMITER,tests/unit/moduleapi/fork.tcl,CAS_DELIMITER",15.0,3.0,4.0,2.9739910575209985,19.0,1731.2,2066.0,101.23086033950621,168.0,1.00179610132536,36.0,Feature Addition,False,True,"[""83e87bac762c84f2a2e9ee6922d038ee09ae9cd4""]"
241d18d954289fcccd98a1183cd0d161dbf7acb1,c56b4ddc6f216ff751f9e8e94d345eee30d9997c,Oran Agra,oran@redislabs.com,Tue Jul 16 11:00:34 2019 +0300,1563264034,"prevent diskless replica from terminating on short readnow that replica can read rdb directly from the socket, it should avoid exitingnon short read and instead try to re-sync.nnthis commit tries to have minimal effects on non-diskless rdb reading.nand includes a test that tries to trigger this scenario on various read cases.n",250.0,68.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER",6.0,2.0,3.0,1.4360709474703215,19.0,649.8333333333334,386.0,228.0156809413581,178.5,0.8175744363515722,38.0,Preventative,False,,
c56b4ddc6f216ff751f9e8e94d345eee30d9997c,48d91cf4cc53e820dafa3c6d5efdf4e5a06c2c29,antirez,antirez@gmail.com,Wed Jul 17 12:36:11 2019 +0200,1563359771,Rio: remember read/write error conditions.,32.0,6.0,"src/rdb.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER",3.0,1.0,1.0,0.6567431466322969,19.0,1054.3333333333333,292.0,8.053506944444445,11651.0,1.3551016239596363,6263.0,None,False,,
48d91cf4cc53e820dafa3c6d5efdf4e5a06c2c29,5189db3d818a7058283bad4f53fe88a59ef76ff1,antirez,antirez@gmail.com,Wed Jul 17 12:45:01 2019 +0200,1563360301,RDB: modify rdbReportError() var name for clarity.,4.0,4.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2541.0,246.0,0.0061342592592592594,11653.0,164.0188679245283,6264.0,None,False,,
5189db3d818a7058283bad4f53fe88a59ef76ff1,6b72b04a37e7a17bb1adc822d0685f6fd39886ff,antirez,antirez@gmail.com,Wed Jul 17 16:46:04 2019 +0200,1563374764,Rio: when in error condition avoid doing the operation.,2.0,0.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,177.0,19.0,0.17353009259259258,11654.0,6.76268925498566,6265.0,None,False,,
6b72b04a37e7a17bb1adc822d0685f6fd39886ff,42b6305964cb3a5461402652773ceacf5dec49fd,antirez,antirez@gmail.com,Wed Jul 17 17:30:02 2019 +0200,1563377402,RDB: try to make error handling code more readable.,52.0,47.0,"src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER",3.0,1.0,1.0,0.6779617320254558,19.0,1022.0,314.0,0.9407291666666668,11656.0,3.0229658215890227,6268.0,None,False,,
6191ea90a1ec8b3ebeab65e8b783b2cb6714c0d4,f59119aad68e92f7c08c37ab0dac9355be741198,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Thu Jul 18 16:46:19 2019 +0800,1563439579,Client side caching: filter clients untracking,1.0,1.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,194.0,5.0,0.8419791666666666,165.0,2.187677842385253,157.0,None,False,,
42b6305964cb3a5461402652773ceacf5dec49fd,947319cadd2d239eae9e269ed2f6ef6f240bee95,antirez,antirez@gmail.com,Thu Jul 18 12:37:55 2019 +0200,1563446275,RDB: update rdbLoadRio comment about EOF condition.,7.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2545.0,248.0,0.7971412037037037,11658.0,2.254482888795319,6269.0,None,False,,
947319cadd2d239eae9e269ed2f6ef6f240bee95 f59119aad68e92f7c08c37ab0dac9355be741198,41ed85bd268c9e1f1afe05e9ed317d5d55d8eeef,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 18 16:41:37 2019 +0200,1563460897,Merge pull request #6252 from soloestoy/tracking-flushdbTracking flushdb,,,,,,,,,,,,,,,Merge,False,,
41ed85bd268c9e1f1afe05e9ed317d5d55d8eeef,bd0f06c18ccea62cb5e0fff018a5eaa876d3f90e,antirez,antirez@gmail.com,Thu Jul 18 18:51:45 2019 +0200,1563468705,"RDB: handle encoding errors with rdbExitReportCorruptRDB().Without such change, the diskless replicas, when loading RDB files fromnthe socket will not abort when a broken RDB file gets loaded. This isnpotentially unsafe, because right now Redis is not able to guaranteenthat encoding errors are safe from the POV of memory corruptions (forninstance the LZF library may not be safe against untrusted data?) sonbetter to abort when the RDB file we are going to load is corrupted.nnInstead I/O errors are still returned to the caller without aborting,nso that in case of short read the diskless replica can try again.n",7.0,6.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2550.0,249.0,0.2596064814814815,11659.0,4.8519839500668756,6270.0,None,False,,
bd0f06c18ccea62cb5e0fff018a5eaa876d3f90e,5f450e49280ce01d5329798d87136f109761433a,antirez,antirez@gmail.com,Thu Jul 18 18:59:38 2019 +0200,1563469178,RDB: make sure to abort on LZF encoding error.,1.0,2.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2551.0,250.0,0.0054745370370370364,11660.0,183.66384778012684,6271.0,None,False,,
5f450e49280ce01d5329798d87136f109761433a,70534846d1941819e6cbc7fcadd416f9ae0f43b2,John Sully,john@csquare.ca,Fri Jul 19 01:37:34 2019 -0400,1563514654,Modules must have execute permissions to load,10.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5641.0,229.0,1.9906481481481482,2.0,1.5023489464626258,2.0,None,False,,
5f450e49280ce01d5329798d87136f109761433a,bc5cb168f504c188c7e67ca61853fd73c341fa62,antirez,antirez@gmail.com,Fri Jul 19 11:12:39 2019 +0200,1563527559,RDB: fix MODULE_AUX loading by continuing to next opcode.Thanks to @JohnSully for noticing this problem.n,1.0,0.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2550.0,251.0,0.6757060185185185,11661.0,2.479933540021582,6272.0,None,False,,
70534846d1941819e6cbc7fcadd416f9ae0f43b2,ff682d790249741c6b0f387c1407b40b6f26b05f,John Sully,john@csquare.ca,Fri Jul 19 15:28:31 2019 -0400,1563564511,Modules must have execute permissions to load,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5651.0,230.0,0.5770486111111112,3.0,2.7329562548889825,3.0,None,False,,
3f1c84751a7e665c8831475cd23be1e93285d032,d7d028a7a72388cf3908a5f40c8188e68a447dee,Oran Agra,oran@redislabs.com,Sun Jul 14 17:34:13 2019 +0300,1563114853,"Allow modules to handle RDB loading errors.This is especially needed in diskless loading, were a short read could havencaused redis to exit. now the module can handle the error and return to thencaller gracefully.nnthis fixes #5326n",46.0,6.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8891136180964337,19.0,2851.333333333333,624.0,-3.492577160493827,183.0,0.8616265250717826,135.0,Corrective,True,,
49816941a45f9337ce7c0d3b0b70356f79f54ffa,004c26ec28dcd1e578f0a224e3222b391777d71b,chendianqiang,chendianqiang@meituan.com,Mon Jul 22 17:45:30 2019 +0800,1563788730,make memory usage consistent of robj with OBJ_ENCODING_INT,9.0,4.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1445.0,152.0,18.11324074074074,8.0,1.05520823216084,6.0,None,False,,
bc5cb168f504c188c7e67ca61853fd73c341fa62,e00442eb139c833f35406440a956e03679842034,antirez,antirez@gmail.com,Mon Jul 22 11:47:44 2019 +0200,1563788864,Clinet side caching: take count of used caching slots.,5.0,1.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,194.0,6.0,4.042650462962963,11662.0,1.247362469043904,6273.0,None,False,,
e00442eb139c833f35406440a956e03679842034,f850201c6407d5504b08f2630f525a353a7ef740,antirez,antirez@gmail.com,Mon Jul 22 12:10:51 2019 +0200,1563790251,Client side caching: don't hash the key if not needed.,5.0,2.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,198.0,7.0,0.01605324074074074,11663.0,63.292718096611395,6274.0,None,False,,
f850201c6407d5504b08f2630f525a353a7ef740,842b44dc46cc143fb28f8cadbff1fda9c81e09e2,antirez,antirez@gmail.com,Mon Jul 22 12:29:54 2019 +0200,1563791394,"Client side caching: call the invalidation functions always.Otherwise what happens is that the tracking table will never get garbagencollected if there are no longer clients with tracking enabled.nNow the invalidation function immediately checks if there is any tablenallocated, otherwise it returns ASAP, so the overhead when the featurenis not used should be near zero.n",3.0,3.0,"src/db.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,19.0,1059.5,247.0,11.95570601851852,11664.5,1.1171817885544642,6276.0,None,False,,
842b44dc46cc143fb28f8cadbff1fda9c81e09e2,7d3992a80aa7ba744aa446bc7292c7b7a5616e0b,antirez,antirez@gmail.com,Mon Jul 22 12:31:46 2019 +0200,1563791506,Client side caching: reclaim the tracking table on FLUSHALL.,45.0,9.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,201.0,8.0,0.014525462962962962,11666.0,69.84462151394422,6277.0,None,False,,
7d3992a80aa7ba744aa446bc7292c7b7a5616e0b,436d02dd7bbbacc3dc2132db30bb061ee108da8f,antirez,antirez@gmail.com,Mon Jul 22 12:37:43 2019 +0200,1563791863,"Move signalFlushedDb() into a better place.Now that the call also invalidates client side caching slots, it isnimportant that after an internal flush operation we both send thennotifications to the clients and, at the same time, are able to reclaimnthe memory of the tracking table. This may even fix a few edge casesnrelated to MULTI/EXEC + WATCH during resync, not sure, but in generalnlooks more correct.n",1.0,2.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1592.0,235.0,0.0054282407407407396,11667.0,185.2217484008529,6278.0,Corrective,True,,
436d02dd7bbbacc3dc2132db30bb061ee108da8f,09c06698e99e2745d93e8d4595fba58b3763b22f,antirez,antirez@gmail.com,Mon Jul 22 18:45:47 2019 +0200,1563813947,"Client side caching: redis-cli ability to enable tracking.This is extremely useful in order to simulate an high load of requestsnabout different keys, and force Redis to track a lot of informationsnabout several clients, to simulate real world workloads.n",14.0,1.0,"src/redis-benchmark.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,17.0,1736.0,92.0,47.09087962962963,11668.0,1.0212355345210158,6279.0,None,False,,
09c06698e99e2745d93e8d4595fba58b3763b22f,c41f94d2a3d9ca33ceefcdf67cc50c949d3a9657,antirez,antirez@gmail.com,Mon Jul 22 18:59:53 2019 +0200,1563814793,Client side caching: split invalidation into key / slot.,41.0,16.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",3.0,1.0,1.0,0.4921379905974296,19.0,2528.333333333333,623.0,4.611720679012347,11670.0,1.1096651098626718,6282.0,None,False,,
bc5cb168f504c188c7e67ca61853fd73c341fa62,3b6aeea44cf8bdc64214a5f145da55453722a9a2,Oran Agra,oran@redislabs.com,Sun Jul 21 17:41:03 2019 +0300,1563720063,Implement module api for aux data in rdbOther changes:n* fix memory leak in error handling of rdb loading of type OBJ_MODULEn,431.0,18.0,"runtest-moduleapi,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/testrdb.c,CAS_DELIMITER,tests/unit/moduleapi/testrdb.tcl,CAS_DELIMITER",9.0,3.0,4.0,2.0548559135728217,19.0,1261.111111111111,926.0,3.0936947016460907,189.0,1.070928324952747,41.0,None,False,True,"[""3bfcae247a1c51788940bd4d2f32751ead451e42"", ""be352633a07552d0c3893ffa096b3732347ea378""]"
f674e83215af5f15096bf53a27de6c4ccf21faae,8fe173452ab28c062ecc38e31a7b51f93c6150c7,Madelyn Olson,matolson@amazon.com,Sat Jul 6 18:32:58 2019 -0700,1562463178,Removed unecessary creation of Redis objects,5.0,14.0,"src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER",2.0,1.0,1.0,0.8997437586982626,18.0,3977.5,816.0,476.8945891203704,13.5,1.0010515174014447,13.0,None,False,,
f674e83215af5f15096bf53a27de6c4ccf21faae,7d2175471030422b06f68aa4a420618baef76545,Madelyn Olson,matolson@amazon.com,Fri Jul 19 10:22:40 2019 -0700,1563556960,Hide HELLO and AUTH from slowlog and monitor,35.0,29.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.7281342378690551,19.0,3681.5,617.0,-2.4359722222222224,15.5,0.7298212583503574,15.0,None,False,True,"[""583933e2d6b4c2721554ab77c33a9c0bc7672fa6""]"
c41f94d2a3d9ca33ceefcdf67cc50c949d3a9657,9012e587ca6f7c7ef54e86a782910625fe3dc3e9,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Jul 23 15:25:00 2019 +0800,1563866700,Client side caching: do not reclaim tracking table if it's empty,1.0,4.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,257.0,10.0,0.6007754629629629,166.0,2.664515383281638,158.0,None,False,,
c41f94d2a3d9ca33ceefcdf67cc50c949d3a9657 9012e587ca6f7c7ef54e86a782910625fe3dc3e9,47ce1cebeb080d908537a7c24a56b8fbfe0e6451,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 23 09:43:41 2019 +0200,1563867821,Merge pull request #6267 from soloestoy/opt-claim-trackingtableClient side caching: do not reclaim tracking table if it's empty,,,,,,,,,,,,,,,Merge,False,,
47ce1cebeb080d908537a7c24a56b8fbfe0e6451,9268493e8d9a67bddff9b27f0f7b3f2cd020a227,antirez,antirez@gmail.com,Tue Jul 23 10:57:22 2019 +0200,1563872242,Client side caching: implement full slot limit function.,41.0,0.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",3.0,1.0,1.0,0.6533523081769443,19.0,2541.0,630.0,2.4541126543209875,11673.0,1.1822956644034217,6285.0,None,False,,
9268493e8d9a67bddff9b27f0f7b3f2cd020a227,c98e7717bb741016b87a69901327e1fafac17425,antirez,antirez@gmail.com,Tue Jul 23 11:02:14 2019 +0200,1563872534,Client side caching: show tracking slots usage in INFO.,11.0,2.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tracking.c,CAS_DELIMITER",3.0,1.0,1.0,1.3143204867061788,19.0,2554.6666666666665,633.0,0.0033796296296296296,11676.0,181.82191780821918,6288.0,None,False,,
c98e7717bb741016b87a69901327e1fafac17425 8fe173452ab28c062ecc38e31a7b51f93c6150c7,dbee7ca007f72810b8655267340ce2dc790306bc,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 23 17:05:10 2019 +0200,1563894310,Merge pull request #6265 from madolson/dev-unstable-remove-create-objectRemoved unnecessary creation of Redis objects,,,,,,,,,,,,,,,Merge,False,,
dbee7ca007f72810b8655267340ce2dc790306bc,48f4cfb6016ebc9cc08963305d316516ac84aa73,wubostc,913721086@qq.com,Wed Jul 24 16:22:26 2019 +0800,1563956546,Reduce the calling stack,2.0,3.0,"src/t_zset.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,3305.0,155.0,131.64666666666668,0.0,0.0,0.0,None,False,,
c98e7717bb741016b87a69901327e1fafac17425,a67d0411e7273d9a5619db1889d1143228b0d577,antirez,antirez@gmail.com,Wed Jul 24 11:33:53 2019 +0200,1563960833,Remove experimental warning from diskless replication.,0.0,4.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1561.0,201.0,22.88291666666667,11678.0,1.0437007228827908,1415.0,None,False,,
a67d0411e7273d9a5619db1889d1143228b0d577,32efd9adf8d9ea2005495433f77fdbd4fac09c3a,antirez,antirez@gmail.com,Wed Jul 24 11:35:01 2019 +0200,1563960901,Client side caching: config option for table fill rate.,18.0,4.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8658566174572235,19.0,3207.333333333333,881.0,6.460096450617282,11680.0,1.0545866554082295,6291.0,None,False,,
32efd9adf8d9ea2005495433f77fdbd4fac09c3a,0b780a54771155ba477007ecb027e534f32376ff,antirez,antirez@gmail.com,Wed Jul 24 11:38:11 2019 +0200,1563961091,Example redis.conf: stay under 80 cols.,33.0,31.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1557.0,202.0,0.0029861111111111113,11682.0,335.8837209302325,1416.0,None,False,,
0b780a54771155ba477007ecb027e534f32376ff,e53a26b5d8cf8529064f841a4587a54b1f77c4e4,antirez,antirez@gmail.com,Wed Jul 24 11:45:10 2019 +0200,1563961510,Client side caching: document tracking-table-max-fill in redis.conf.,33.0,0.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1559.0,203.0,0.004849537037037037,11683.0,207.20525059665871,1417.0,None,False,,
e53a26b5d8cf8529064f841a4587a54b1f77c4e4 dbee7ca007f72810b8655267340ce2dc790306bc,fde5e737dcaf13f8121ebbc027c617bc593c3bd2,antirez,antirez@gmail.com,Wed Jul 24 11:45:19 2019 +0200,1563961519,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
bc5cb168f504c188c7e67ca61853fd73c341fa62,e91d9a6fffcac20adfb4fdf2d8fb365ec0816261,Oran Agra,oran@redislabs.com,Wed Jul 24 12:58:15 2019 +0300,1563962295,Extend modules API to allow modules report to redis INFOthis implements #6012n,260.0,3.0,"runtest-moduleapi,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",9.0,3.0,4.0,2.177136254523181,19.0,1698.0,1129.0,3.549165380658436,198.0,1.070465191326403,44.0,None,False,True,"[""1d6e5dc4dcacb1af4698d16e695494f62129071e"", ""4d580438b0ce8b3e02213a01f892a34f36cde144""]"
fde5e737dcaf13f8121ebbc027c617bc593c3bd2 6e07fac40542ae00ea0a3a2522482bbbd547a2da,5591a14c0a1099ac62a4e0f17335bf9a817c5413,Salvatore Sanfilippo,antirez@gmail.com,Thu Jul 25 18:48:46 2019 +0200,1564073326,Merge pull request #6248 from oranagra/module-logRM_Log - add support for logging without a context or context without module,,,,,,,,,,,,,,,Merge,False,,
fde5e737dcaf13f8121ebbc027c617bc593c3bd2,0714581e0cca93c0034d6ad1c1d72847c1e57ffe,antirez,antirez@gmail.com,Thu Jul 25 19:17:58 2019 +0200,1564075078,Mark diskless loads as experimental in redis.conf.,16.0,6.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1592.0,204.0,1.3144444444444443,11684.0,1.7607776838546068,1418.0,None,False,,
0714581e0cca93c0034d6ad1c1d72847c1e57ffe 5591a14c0a1099ac62a4e0f17335bf9a817c5413,505a855000ef8f1fbea9cb41841fa8708175bba4,antirez,antirez@gmail.com,Thu Jul 25 19:18:26 2019 +0200,1564075106,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
505a855000ef8f1fbea9cb41841fa8708175bba4,f1c6c658ac030b37efe0f9bb17f290c0b647d514,David Carlier,devnexen@gmail.com,Sun Jul 28 14:33:57 2019 +0100,1564320837,Updating resident memory request impl on FreeBSD.,20.0,0.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,495.0,52.0,59.15445601851852,21.0,1.016904897235247,21.0,None,False,,
505a855000ef8f1fbea9cb41841fa8708175bba4,d659654f53c276a5a96e8559793ffdb9051957fd,John Sully,john@csquare.ca,Mon Jul 29 18:11:52 2019 -0400,1564438312,Fix HLL corruption bug,1.0,0.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1595.0,118.0,135.5810185185185,4.0,1.0073756637243687,4.0,Corrective,True,,
505a855000ef8f1fbea9cb41841fa8708175bba4 d659654f53c276a5a96e8559793ffdb9051957fd,cc8125a779ad534571bac5904350cf409f09c467,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 30 10:24:28 2019 +0200,1564475068,Merge pull request #6282 from JohnSully/hll_corruptionFix HLL corruption bug,,,,,,,,,,,,,,,Merge,False,,
cc8125a779ad534571bac5904350cf409f09c467,e4b3c8bbc3d01176dee434a6ae8e8e10bb74703a,antirez,antirez@gmail.com,Tue Jul 30 11:20:51 2019 +0200,1564478451,emptyDbGeneric(): call signalFlushDb() before deleting the keys.This was broken since a refactoring performed recently by myself.n,5.0,1.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1591.0,236.0,7.94662037037037,11685.0,1.1258396593007742,6292.0,None,False,,
e4b3c8bbc3d01176dee434a6ae8e8e10bb74703a 48f4cfb6016ebc9cc08963305d316516ac84aa73,ce72cac0f84b5c900cb80f59de914fa1ee90da9c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 30 11:41:48 2019 +0200,1564479708,Merge pull request #6269 from wubostc/patch-1Reduce the calling stack,,,,,,,,,,,,,,,Merge,False,,
ce72cac0f84b5c900cb80f59de914fa1ee90da9c 3b6aeea44cf8bdc64214a5f145da55453722a9a2,f42846e8c7127c8e84b6938a6bd73e2363b4a90c,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 30 11:50:44 2019 +0200,1564480244,Merge pull request #6264 from oranagra/modules_api_aux_rdbImplement module api for aux data in rdb,,,,,,,,,,,,,,,Merge,False,,
d7d028a7a72388cf3908a5f40c8188e68a447dee,4339706e07e15fe5a228d175756c4e4be83e2867,Oran Agra,oran@redislabs.com,Tue Jul 30 15:11:57 2019 +0300,1564488717,Avoid diskelss-load if modules did not declare they handle read errors,45.0,21.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.278490793840075,19.0,2938.75,885.0,7.885766782407408,204.5,1.079296349405542,149.0,None,False,,
4339706e07e15fe5a228d175756c4e4be83e2867 f42846e8c7127c8e84b6938a6bd73e2363b4a90c,e5187ad2aeb9b2d438af0b728b9de4e8e2cc8f33,Oran Agra,oran@redislabs.com,Tue Jul 30 15:14:08 2019 +0300,1564488848,Merge remote-tracking branch 'oss/unstable' into module_rdb_load_errors,,,,,,,,,,,,,,,Merge,False,,
e5187ad2aeb9b2d438af0b728b9de4e8e2cc8f33,07b1abab9543205de4ed2db7bbf28d094a08960b,Oran Agra,oran@redislabs.com,Sun Jul 21 18:18:11 2019 +0300,1563722291,Add test for module diskless short reads,73.0,2.0,"tests/modules/testrdb.c,CAS_DELIMITER,tests/unit/moduleapi/testrdb.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.6652735227649414,19.0,145.5,2.0,0.025787037037037042,207.5,30.084380610412932,46.0,Feature Addition,False,True,"[""02f21113ab6c61d2c01544607b464eb501dbe8fa""]"
07b1abab9543205de4ed2db7bbf28d094a08960b,40c4183196b8c6e1c44c27400965786b9f010c74,Oran Agra,oran@redislabs.com,Tue Jul 30 16:32:58 2019 +0300,1564493578,Log message when modules prevent diskless-load,4.0,1.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2953.0,248.0,0.05626157407407408,209.0,18.774120551326888,150.0,None,False,,
f42846e8c7127c8e84b6938a6bd73e2363b4a90c f1c6c658ac030b37efe0f9bb17f290c0b647d514,f0c10d43602496c960ea683639757a576c374503,Salvatore Sanfilippo,antirez@gmail.com,Tue Jul 30 18:24:38 2019 +0200,1564503878,Merge pull request #6277 from devnexen/fbsd_get_rssUpdating resident memory request impl on FreeBSD.,,,,,,,,,,,,,,,Merge,False,,
f42846e8c7127c8e84b6938a6bd73e2363b4a90c,b2079cb508a1944841abf39715d8a2d522452467,antirez,antirez@gmail.com,Wed Jul 31 10:36:23 2019 +0200,1564562183,HyperLogLog: fix the fix of a corruption bug.,1.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1596.0,119.0,1.4336921296296297,11686.0,1.6974998183594223,6293.0,None,False,,
b2079cb508a1944841abf39715d8a2d522452467 f0c10d43602496c960ea683639757a576c374503,e1b13b4d391e85f440ef8807e03bf3541fbc23dc,antirez,antirez@gmail.com,Wed Jul 31 10:37:17 2019 +0200,1564562237,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
e1b13b4d391e85f440ef8807e03bf3541fbc23dc 7d2175471030422b06f68aa4a420618baef76545,fc5c2052b5749a6a88220a5020db7e1f7056bccf,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 31 11:12:46 2019 +0200,1564564366,Merge pull request #6266 from madolson/dev-unstable-hide-auth-and-helloHide HELLO and AUTH from slowlog and monitor,,,,,,,,,,,,,,,Merge,False,,
fc5c2052b5749a6a88220a5020db7e1f7056bccf 004c26ec28dcd1e578f0a224e3222b391777d71b,f899c31fbceb9d00c3739c65b9eea8065565a1e1,Salvatore Sanfilippo,antirez@gmail.com,Wed Jul 31 11:54:11 2019 +0200,1564566851,Merge pull request #6261 from chendq8/robjmake memory usage consistent of robj with OBJ_ENCODING_INT,,,,,,,,,,,,,,,Merge,False,,
f899c31fbceb9d00c3739c65b9eea8065565a1e1,2a8a63af444d526bb3cdffcd77762dd3605147c6,antirez,antirez@gmail.com,Wed Jul 31 12:03:10 2019 +0200,1564567390,Make EMBSTR case of #6261 more obvious.,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1450.0,153.0,9.01226851851852,11687.0,1.11095985410834,6294.0,None,False,,
2a8a63af444d526bb3cdffcd77762dd3605147c6,583933e2d6b4c2721554ab77c33a9c0bc7672fa6,antirez,antirez@gmail.com,Wed Jul 31 19:04:29 2019 +0200,1564592669,Fix regression causing EXEC to appear in the slow log.This was recently introduced with PR #6266.n,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5027.0,316.0,7.29599537037037,11688.0,1.1370614904802545,6295.0,Corrective,True,,
583933e2d6b4c2721554ab77c33a9c0bc7672fa6,d3f7eb0c87e9d4c9b7c33c01d4c8569083ae9363,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Aug 2 17:17:19 2019 +0800,1564737439,networking: flushSlavesOutputBuffers bugfix,2.0,4.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2842.0,382.0,22.708472222222234,167.0,1.044036427911756,159.0,None,False,,
583933e2d6b4c2721554ab77c33a9c0bc7672fa6,a368209b1d92987462e4f359b59443a2cad9ef7d,antirez,antirez@gmail.com,Fri Aug 2 20:13:16 2019 +0200,1564769596,"tracking_collisions.c: initial skeleton.... of a program to just test the hashing functions collisions on a 24nbit output with strings that are very likely Redis key names, and namesnof a kind that are particularly prone to collisions.n",40.0,0.0,"utils/tracking_collisions.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,11689.0,0.0,98.0,None,False,,
a368209b1d92987462e4f359b59443a2cad9ef7d,5e0faf4959169547f5b943639fcf4eab0bb3f3a2,antirez,antirez@gmail.com,Fri Aug 2 20:24:27 2019 +0200,1564770267,tracking_collisions.c: sha1 + crc64 implemented.,36.0,0.0,"utils/tracking_collisions.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,1.0,40.0,1.0,0.007766203703703705,11690.0,129.76304023845006,99.0,None,False,,
5e0faf4959169547f5b943639fcf4eab0bb3f3a2,0e9b5adbd394837d711d8db34539a60cb181ba5b,antirez,antirez@gmail.com,Mon Aug 5 17:38:15 2019 +0200,1565019495,Replication: clarify why repl_put_online_on_ack exists at all.,34.0,10.0,"src/replication.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.26676498780302604,19.0,2660.0,561.0,6.115133101851853,11691.5,1.1230244237217246,6297.0,None,False,,
0e9b5adbd394837d711d8db34539a60cb181ba5b,b27f388344860394d02e988aa2a6c79b15a4a85a,Diego Bendersky,diego.bendersky@jampp.com,Mon Aug 5 17:35:50 2019 -0300,1565037350,pass len to alloc in clusterManagerMigrateKeysInReply,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11442.0,348.0,145.48699074074077,0.0,0.0,0.0,None,False,,
0e9b5adbd394837d711d8db34539a60cb181ba5b,0a97149dec49b654ed8e9c68dc7704ddd699d273,Oran Agra,oran@redislabs.com,Wed Aug 7 13:05:33 2019 +0300,1565172333,RM_ReplyWithCString was missing registration,1.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5874.0,235.0,7.912222222222222,210.0,1.1263867434349109,151.0,None,False,,
0e9b5adbd394837d711d8db34539a60cb181ba5b,1026d2caf89eecedfec099031870b1535185d491,Oran Agra,oran@redislabs.com,Thu Aug 8 14:53:36 2019 +0300,1565265216,fix error handling on config parsing of repl-diskless-load,1.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2259.0,259.0,15.096238425925925,211.0,1.066241667081955,152.0,Corrective,True,,
e91d9a6fffcac20adfb4fdf2d8fb365ec0816261,1d6e5dc4dcacb1af4698d16e695494f62129071e,Oran Agra,oran@redislabs.com,Sun Aug 18 09:41:45 2019 +0300,1566110505,"Module INFO, add support for dict fields, rename API to have common prefix",129.0,38.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.4577855911124735,19.0,1637.0,332.0,19.8390625,213.5,1.0391992488424324,48.0,Corrective,True,,
1d6e5dc4dcacb1af4698d16e695494f62129071e,61853ad8dea0a3ddd8da77a257405452a114bd65,Oran Agra,oran@redislabs.com,Sun Aug 18 10:01:57 2019 +0300,1566111717,"Module INFO, support default section for simple modules",13.0,2.0,"src/module.c,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",3.0,2.0,3.0,1.5058231002082845,19.0,2015.666666666667,241.0,0.014027777777777778,217.0,44.56435643564357,50.0,None,False,,
0e9b5adbd394837d711d8db34539a60cb181ba5b 0a97149dec49b654ed8e9c68dc7704ddd699d273,d5536e048068e76807c519e90740bab99ee42eca,Salvatore Sanfilippo,antirez@gmail.com,Thu Aug 22 20:02:17 2019 +0200,1566496937,Merge pull request #6307 from oranagra/register_rm_reply_with_cstringRM_ReplyWithCString was missing registration,,,,,,,,,,,,,,,Merge,False,,
56258c6b7d26b6ee44bf31b18e9aad95d0a0142a,78bbb9b58d7e7b0816f11fe1d4c97ad5a37df01e,Oran Agra,oran@redislabs.com,Sun Aug 25 10:11:48 2019 +0300,1566717108,Modlue fork is killed when the parent exists,22.0,11.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.8710241897828374,19.0,4448.333333333333,868.0,17.081184413580242,220.0,1.064627551352051,158.0,None,False,,
a16aa03a678d1312611ca601a6f9da68427bba9f d5536e048068e76807c519e90740bab99ee42eca,5cbc73c657fdf102901b5804a8c2c64b1fad3b43,jared,zhudacai@huawei.com,Fri Aug 30 17:25:56 2019 +0800,1567157156,Merge pull request #1 from antirez/unstablemerge redis,,,,,,,,,,,,,,,Merge,False,,
5cbc73c657fdf102901b5804a8c2c64b1fad3b43,d7c25806c0b40c096bbb2ea3cc36d2e0491ec7a5,zhudacai 00228490,zhudacai@hisilicon.com,Sat Aug 31 07:47:11 2019 +0000,1567237631,"src/debug.c do not support aarch64 dump utcontext, so add the context of aarch64. The content comes from the definition of the sigcontext and tested on my aarch64 server.sigcontext defined at the linux kernel code:narch/arm64/include/uapi/asm/sigcontext.hn",27.0,0.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1567.0,174.0,37.908981481481476,0.0,0.0,0.0,Corrective,True,,
d5536e048068e76807c519e90740bab99ee42eca d3f7eb0c87e9d4c9b7c33c01d4c8569083ae9363,16435e02bfa80ff7254e8b062256494cb77ad708,Salvatore Sanfilippo,antirez@gmail.com,Sat Aug 31 14:39:33 2019 +0200,1567255173,Merge pull request #6296 from soloestoy/flushSlavesOutputBuffers-bugfixnetworking: flushSlavesOutputBuffers bugfix,,,,,,,,,,,,,,,Merge,False,,
0e9b5adbd394837d711d8db34539a60cb181ba5b,ca5ccc58c59801a81a99e42aa52b5fe05b2c0f86,antirez,antirez@gmail.com,Sat Aug 31 14:40:09 2019 +0200,1567255209,Improve comment in flushSlavesOutputBuffers().,2.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2840.0,383.0,29.14085648148148,11693.0,1.0343160812941612,6298.0,None,False,,
ca5ccc58c59801a81a99e42aa52b5fe05b2c0f86 16435e02bfa80ff7254e8b062256494cb77ad708,2303ba1441989d9501f4a97f07cdc3efd9536117,antirez,antirez@gmail.com,Sat Aug 31 14:41:28 2019 +0200,1567255288,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
2303ba1441989d9501f4a97f07cdc3efd9536117,e57067b677bc084b983802aa112b4b1a372e2a10,antirez,antirez@gmail.com,Sat Aug 31 14:46:21 2019 +0200,1567255581,More strict checks and better comments in flushSlaveOutputBuffers().Related to #6296.n,18.0,7.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2841.0,384.0,0.004305555555555556,11694.0,233.25806451612902,6299.0,Perfective,False,,
e57067b677bc084b983802aa112b4b1a372e2a10,b12ccc840e6959027715d8bbc6f6d372ea2fd18f,antirez,antirez@gmail.com,Mon Sep 2 11:41:16 2019 +0200,1567417276,Cluster: abort loading nodes data if vars arguments are unbalanced.See for reference PR #6337. Thanks to @git-hulk for spotting this.n,1.0,0.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,5701.0,560.0,57.33909722222222,11695.0,1.0174401071597696,6300.0,None,False,,
b12ccc840e6959027715d8bbc6f6d372ea2fd18f,06d490342f51cff316588a7a45124cc410b7d050,antirez,antirez@gmail.com,Mon Sep 2 12:50:47 2019 +0200,1567421447,RESP3: fix cases of NULL reported instead of empty aggregate.,29.0,19.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER,src/t_set.c,CAS_DELIMITER,src/t_zset.c,CAS_DELIMITER",6.0,1.0,1.0,2.2621039189772207,19.0,2212.5,1003.0,121.86736496913579,11698.5,1.032325635376392,6306.0,None,False,,
06d490342f51cff316588a7a45124cc410b7d050,b2e10131c09bdb166fc5c1dd6f510042644a6adc,antirez,antirez@gmail.com,Wed Sep 4 13:01:07 2019 +0200,1567594867,"Rio: fix flag name, function is never used btw.Thanks to @tnclong for reporting the problem.n",1.0,1.0,"src/rio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,179.0,20.0,48.843784722222225,11702.0,1.020473433942252,6307.0,None,False,,
d7c25806c0b40c096bbb2ea3cc36d2e0491ec7a5,66a5c1cd7e557187bf3a1913e836d0c9be8adbb7,zhudacai 00228490,zhudacai@hisilicon.com,Wed Sep 4 12:14:25 2019 +0000,1567599265,"The aarch64 architecture is support normal memory unaligned accesses,so add the UNALIGNED_LE_CPU to the aarch64 .n",2.0,1.0,"src/siphash.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,360.0,5.0,457.97216435185203,1.0,1.0021835388214375,1.0,Feature Addition,False,,
b2e10131c09bdb166fc5c1dd6f510042644a6adc,f7090f43add8de1fa67458e9d2fc934fc31c67cd,antirez,antirez@gmail.com,Wed Sep 4 17:20:37 2019 +0200,1567610437,"AOF: be future-proof and close the file pointer.Currently useless but we release the fake client, so better to do a fullncleanup. Thanks to @TomMD reporting this in #6353.n",3.0,0.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1795.0,196.0,49.39554398148147,11703.0,1.020244741112172,6308.0,None,False,,
f7090f43add8de1fa67458e9d2fc934fc31c67cd,12c56a8e752e5f01429ebf3cd9b70d1d9ebf1a14,antirez,antirez@gmail.com,Wed Sep 4 17:55:46 2019 +0200,1567612546,"redis-cli: always report server errors on read errors.Before this commit we may have not consumer buffers when a read error isnencountered. Such buffers may contain errors that are important cluesnfor the user: for instance a protocol error in the payload we send innpipe mode will cause the server to abort the connection. If the userndoes not get the protocol error, debugging what is happening can be annightmare.nnThis commit fixes issue #3756.n",8.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11442.0,349.0,29.805509259259267,11704.0,1.0335508442852506,6309.0,None,False,,
12c56a8e752e5f01429ebf3cd9b70d1d9ebf1a14,89ad0ca566f222368f2346a539dff0a057985a83,antirez,antirez@gmail.com,Thu Sep 5 13:05:57 2019 +0200,1567681557,Fix handleClientsBlockedOnKeys() names in comments.,2.0,2.0,"src/blocked.c,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,19.0,697.5,138.0,139.41564236111108,11705.5,1.003605970572354,6311.0,Corrective,True,,
12c56a8e752e5f01429ebf3cd9b70d1d9ebf1a14,3bfcae247a1c51788940bd4d2f32751ead451e42,Oran Agra,oran@redislabs.com,Thu Sep 5 14:11:37 2019 +0300,1567681897,"Fix to module aux data rdb format for backwards compatibility with old check-rdbWhen implementing the code that saves and loads these aux fields we used rdbnformat that was added for that in redis 5.0, but then we added the 'when' fieldnwhich meant that the old redis-check-rdb won't be able to skip these.nthis fix adds an opcode as if that 'when' is part of the module data.n",9.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2608.0,253.0,45.854560185185186,222.0,1.021808081812615,159.0,Corrective,True,,
89ad0ca566f222368f2346a539dff0a057985a83 3bfcae247a1c51788940bd4d2f32751ead451e42,86aade9a024c3582665903d0cc0c5692c6677cfd,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 5 13:30:26 2019 +0200,1567683026,Merge pull request #6364 from oranagra/fix_module_aux_whenFix to module aux data rdb format for backwards compatibility with old check-rdb,,,,,,,,,,,,,,,Merge,False,,
86aade9a024c3582665903d0cc0c5692c6677cfd,cc8f06ece996238111150f6730d8339e3603b5ff,Doug Nelson,dougnelson@silktide.com,Thu Sep 5 16:25:06 2019 +0100,1567697106,Typo fixes in API documentation,2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5958.0,239.0,11.342569444444445,0.0,0.0,0.0,Corrective,True,,
86aade9a024c3582665903d0cc0c5692c6677cfd,781f3fd8be048773d5a0052150df478db8d0979e,suntiawnen,suntianwen@guazi.com,Fri Sep 6 12:01:44 2019 +0800,1567742504,fix rdb function rdbLoadIntegerObject comment,1.0,1.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2616.0,254.0,0.7014699074074074,0.0,0.0,0.0,Corrective,True,,
89ad0ca566f222368f2346a539dff0a057985a83,a092f20d87f6e435c5b68b8e217ae0d54dd12715,antirez,antirez@gmail.com,Fri Sep 6 12:24:26 2019 +0200,1567765466,handleClientsBlockedOnKeys() refactoring.,208.0,195.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,618.0,52.0,0.9711689814814816,11707.0,2.029686922737728,6312.0,None,False,,
a092f20d87f6e435c5b68b8e217ae0d54dd12715 86aade9a024c3582665903d0cc0c5692c6677cfd,ae8cab3296e71df1130aec59c679d682bec440ae,antirez,antirez@gmail.com,Fri Sep 6 12:24:40 2019 +0200,1567765480,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
ae8cab3296e71df1130aec59c679d682bec440ae,f4d37173fef8a020fe99a7b98e32a9201113cc09,antirez,antirez@gmail.com,Wed Sep 11 19:42:10 2019 +0200,1568223730,ACL: protect MULTI/EXEC transactions after rules change.,13.0,1.0,"src/multi.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,355.0,33.0,285.08697916666665,11708.0,1.0035077014142249,6313.0,None,False,,
f4d37173fef8a020fe99a7b98e32a9201113cc09,9d2ecf6be364dc5686e5f8d3269dc77c64014e35,antirez,antirez@gmail.com,Thu Sep 12 12:21:34 2019 +0200,1568283694,"ACL: add slightly modified version of sha256.c for password hashing.memory.h include removed, types substituted with stdint types.n",194.0,1.0,"src/Makefile,CAS_DELIMITER,src/sha256.c,CAS_DELIMITER,src/sha256.h,CAS_DELIMITER",3.0,1.0,1.0,0.7584981916724001,18.0,104.33333333333331,177.0,22.262341820987654,11710.0,1.014972968073785,6316.0,None,False,,
9d2ecf6be364dc5686e5f8d3269dc77c64014e35,ae5054b47620957b5e74074b1afcdf042e3f57f7,antirez,antirez@gmail.com,Thu Sep 12 12:33:22 2019 +0200,1568284402,ACL: SHA256 based password hashing function implemented.,20.0,0.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1656.0,114.0,96.59236111111113,11712.0,1.010352785546361,6317.0,None,False,True,"[""ea7c3fe7fd6d269e1e09443db3e2148cb445febb""]"
ae5054b47620957b5e74074b1afcdf042e3f57f7,b170a01fa77cb043e9c9e6185e706a20ddfe0608,antirez,antirez@gmail.com,Thu Sep 12 12:54:57 2019 +0200,1568285697,"ACL: store hashed passwords in memory.Note that this breaks API compatibility with Redis < 6:nnCONFIG GET requirepassnnWill no longer return a cleartext password as well, but the SHA256 hashnof the password set.n",17.0,7.0,"src/acl.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,1676.0,115.0,0.014988425925925924,11713.0,67.71814671814671,6318.0,None,False,True,"[""ea7c3fe7fd6d269e1e09443db3e2148cb445febb""]"
b170a01fa77cb043e9c9e6185e706a20ddfe0608,93c52ff5ff8145b570969f695e960cb502c79bb1,antirez,antirez@gmail.com,Fri Sep 13 19:01:39 2019 +0200,1568394099,RESP3: implement lua.setresp().,31.0,6.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2488.0,205.0,58.46570601851853,11714.0,1.017104043859203,6319.0,None,False,,
93c52ff5ff8145b570969f695e960cb502c79bb1,26b6c697d3d9b09b49ad5a1128190d5ba6dba09a,antirez,antirez@gmail.com,Fri Sep 13 19:19:10 2019 +0200,1568395150,RESP3: Lua debugger support for printing sets and maps.,38.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2513.0,206.0,0.012164351851851852,11715.0,83.20742150333017,6320.0,None,False,,
26b6c697d3d9b09b49ad5a1128190d5ba6dba09a,888efc1b3642959b05815473663a5f0971af53ac,antirez,antirez@gmail.com,Fri Sep 13 19:38:35 2019 +0200,1568396315,"RESP3: Lua parsing should depend on lua client, not lua caller.We want all the scripts to run in RESP2 mode by default. It's up to thencaller to switch to V3 using redis.setresp() if it is really needed.nThis way most scripts written for past Redis versions will continue tonwork with Redis >= 6 even if the client is in RESP3 mode.n",2.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2551.0,207.0,0.013483796296296296,11716.0,75.16309012875539,6321.0,None,False,,
888efc1b3642959b05815473663a5f0971af53ac,819a661be5efcb045be4d34d7269ab35dc0fcb88,David Carlier,devnexen@gmail.com,Sun Sep 15 14:05:00 2019 +0100,1568552700,Getting region date per process in Darwin,13.0,0.0,"src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.3912435636292557,18.0,313.5,78.0,78.55712384259259,22.5,1.0133906675444222,23.0,None,False,,
b170a01fa77cb043e9c9e6185e706a20ddfe0608,4a30a26f8fbb54854f5b29b77fd3c744e8be4290,filipecosta90,filipecosta.90@gmail.com,Sun Sep 15 21:16:30 2019 +0100,1568578590,[add] improved performance of RM_ReplyWithSimpleString and RM_ReplyWithError by making usage addReplyProto instead of addReplySds,14.0,15.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5958.0,240.0,10.202361111111113,0.0,0.0,0.0,Feature Addition,False,True,"[""733280d9cb1122dd15440429137610a4237869d4""]"
888efc1b3642959b05815473663a5f0971af53ac,dad38c19c811ca222abd7f4cbb9473bceb82b69c,antirez,antirez@gmail.com,Mon Sep 16 11:49:42 2019 +0200,1568627382,RESP3: report set/map as nested tables to Lua.,27.0,18.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2551.0,208.0,2.674386574074074,11717.0,1.3739175217577586,6322.0,None,False,,
dad38c19c811ca222abd7f4cbb9473bceb82b69c,c792504fabe6c64248546a63b5356cd29e7a6438,antirez,antirez@gmail.com,Mon Sep 16 12:15:39 2019 +0200,1568628939,RESP3: handle map Lua -> Redis conversion.,25.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2560.0,209.0,0.01802083333333333,11718.0,56.4913294797688,6323.0,None,False,,
c792504fabe6c64248546a63b5356cd29e7a6438,ca81d4900647f2cca71499fb4a46b43f5a90a24c,antirez,antirez@gmail.com,Mon Sep 16 12:19:19 2019 +0200,1568629159,RESP3: handle set Lua -> Redis conversion.,22.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2584.0,210.0,0.0025462962962962965,11719.0,393.7272727272728,6324.0,None,False,,
ca81d4900647f2cca71499fb4a46b43f5a90a24c,2cc4d0286c4d92f5f055c157fcc5673c7f90cff0,antirez,antirez@gmail.com,Mon Sep 16 17:49:40 2019 +0200,1568648980,RESP3: implement new NULL representation parsing in Lua.,8.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2606.0,211.0,0.22940972222222225,11720.0,5.359013167852279,6325.0,None,False,,
2cc4d0286c4d92f5f055c157fcc5673c7f90cff0,6931004969d23dc6233a94e422090f35ebec143d,antirez,antirez@gmail.com,Mon Sep 16 18:18:17 2019 +0200,1568650697,"RESP3: change behavior of Lua returning true/false for RESP3.Here we introduce a change in the way we convert values from Lua tonRedis when RESP3 is selected: this is possible without breaking the factnwe can return directly what a command returned, because there is nonRedis command in RESP2 that returns true or false to Lua, so thenconversion in the case of RESP2 is totally arbitrary. When a script isnwritten selecting RESP3 from Lua, it totally makes sense to change suchnbehavior and return RESP3 true/false when Lua true/false is returned.n",5.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2614.0,212.0,0.019872685185185184,11721.0,51.3203261502621,6326.0,None,False,,
6931004969d23dc6233a94e422090f35ebec143d,f01f0c02d14149e826532ba20f084244fdf29d20,antirez,antirez@gmail.com,Mon Sep 16 18:36:16 2019 +0200,1568651776,RESP3: convert RESP3 null as Lua nil. Implement RESP3->Lua bools.,9.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2618.0,213.0,0.012488425925925924,11722.0,81.07414272474514,6327.0,None,False,,
f01f0c02d14149e826532ba20f084244fdf29d20,c1cc5ca7671a5d2b35e1d7e1b7c0e67ab8c0bc91,Okada Haruki,ocadaruma@gmail.com,Tue Sep 17 06:18:01 2019 +0900,1568668681,Fix typo,2.0,2.0,"src/hyperloglog.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1595.0,120.0,47.52891203703704,0.0,0.0,0.0,Corrective,True,,
f01f0c02d14149e826532ba20f084244fdf29d20,e8e30bc40289e43cbd07f532d4ca4c16e03f239c,antirez,antirez@gmail.com,Tue Sep 17 18:57:24 2019 +0200,1568739444,RESP3: bool and null values in RESP -> human readable conversion.,19.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2626.0,214.0,1.014675925925926,11723.0,1.9855363416525984,6328.0,None,False,,
e8e30bc40289e43cbd07f532d4ca4c16e03f239c,19aba4ac7828584be3e0621a8db116646f6ece07,antirez,antirez@gmail.com,Tue Sep 17 19:08:33 2019 +0200,1568740113,RESP3: double -> human readable conversion.,9.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2645.0,215.0,0.007743055555555556,11724.0,130.14798206278027,6329.0,None,False,,
19aba4ac7828584be3e0621a8db116646f6ece07,89f929b12a3ff27593d25ec039dc0e9d6a049084,antirez,antirez@gmail.com,Tue Sep 17 19:20:30 2019 +0200,1568740830,RESP3: RESP3 double -> Lua conversion.,23.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2654.0,216.0,0.008298611111111109,11725.0,121.5020920502092,6330.0,None,False,,
89f929b12a3ff27593d25ec039dc0e9d6a049084,8ea4bdd91d600aa1e9e1ebf7dace19172a7ce23a,antirez,antirez@gmail.com,Tue Sep 17 19:26:46 2019 +0200,1568741206,RESP3: Lua double -> RESP3 conversion.,11.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2677.0,217.0,0.004351851851851852,11726.0,230.78723404255317,6331.0,None,False,,
8ea4bdd91d600aa1e9e1ebf7dace19172a7ce23a,68519b703461bb0890cf347ef575c21423746f0c,antirez,antirez@gmail.com,Wed Sep 18 18:28:39 2019 +0200,1568824119,"RESP3: Verbatim conversion test in the LOLWUT command.redis-cli is currently not able to handle it after going in RESP3 mode,nbecause of hiredis limitations.n",4.0,2.0,"src/lolwut.c,CAS_DELIMITER,src/lolwut5.c,CAS_DELIMITER",2.0,1.0,1.0,1.0,16.0,169.0,20.0,355.73625000000015,11727.5,1.0020568826675802,6333.0,None,False,,
68519b703461bb0890cf347ef575c21423746f0c,aca5482fbf1d958f7bacfb150ce5825a25cf91bd,antirez,antirez@gmail.com,Wed Sep 18 18:33:01 2019 +0200,1568824381,RESP3: Use verbatim in INFO output.,3.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5043.0,319.0,16.237662037037033,11729.0,1.061585220687502,6334.0,None,False,,
aca5482fbf1d958f7bacfb150ce5825a25cf91bd,ff9a5d231b7c36e8aa485fb9a765a82fe0cde462,antirez,antirez@gmail.com,Wed Sep 18 18:46:11 2019 +0200,1568825171,RESP3: Use verbatim in DEBUG HTSTATS / HTSTATS-KEY.,3.0,2.0,"src/debug.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1594.0,175.0,18.374305555555555,11730.0,1.0544238255414036,6335.0,None,False,,
ff9a5d231b7c36e8aa485fb9a765a82fe0cde462,1b3cb3b0de0f3049d3d2793b34a5d9c247ccc4d8,antirez,antirez@gmail.com,Wed Sep 18 18:48:14 2019 +0200,1568825294,RESP3: Use verbatim in MEMORY subcommands.,4.0,2.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1450.0,154.0,49.281296296296304,11731.0,1.02029167402553,6336.0,None,False,True,"[""a1a65d238c4b144b34960a1e7be94766da35a81f""]"
1b3cb3b0de0f3049d3d2793b34a5d9c247ccc4d8,dd2f695d7e52185728d0d3a215b7fdae1986eb9a,antirez,antirez@gmail.com,Wed Sep 18 18:51:15 2019 +0200,1568825475,RESP3: Use verbatim in CLUSTER subcommands.,5.0,5.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,5702.0,561.0,16.29859953703704,11732.0,1.0613549647457496,6337.0,None,False,,
dd2f695d7e52185728d0d3a215b7fdae1986eb9a,cb384127d1ba8e85ccd507599df46541f1349b4c,antirez,antirez@gmail.com,Wed Sep 18 18:52:13 2019 +0200,1568825533,RESP3: Use verbatim in CLIENT LIST.,1.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,2852.0,385.0,18.170740740740737,11733.0,1.055033529687532,6338.0,None,False,,
cb384127d1ba8e85ccd507599df46541f1349b4c,474a9231605f94a1265583282ccc7c123956e30b,antirez,antirez@gmail.com,Wed Sep 18 18:53:22 2019 +0200,1568825602,RESP3: Use verbatim in LATENCY subcommands.,2.0,2.0,"src/latency.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,637.0,40.0,292.02952546296297,11734.0,1.0034243112863834,6339.0,None,False,,
474a9231605f94a1265583282ccc7c123956e30b,74e3a622a2af2c7f561b058de1249c081ae82afd,WuYunlong,xzsyeb@126.com,Fri Sep 20 08:14:36 2019 +0800,1568938476,Fix bad handling of unexpected option while loading config lua-replicate-commands.,3.0,0.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2260.0,260.0,42.51458333333333,23.0,1.0235213407164208,19.0,Corrective,True,,
474a9231605f94a1265583282ccc7c123956e30b,30a3644e643ed60bedd839b2a3f9ec59ff25c00b,WuYunlong,xzsyeb@126.com,Fri Sep 20 08:37:23 2019 +0800,1568939843,RESP3: Fix function redisProtocolToLuaType about RESP3->Lua bools.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2688.0,218.0,2.299039351851852,24.0,1.4349642815789607,20.0,None,False,,
474a9231605f94a1265583282ccc7c123956e30b,a1a65d238c4b144b34960a1e7be94766da35a81f,Evgeny,mors741@yandex.ru,Fri Sep 20 01:11:20 2019 -0700,1568967080,Fix compilation error,1.0,1.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1452.0,155.0,1.6410416666666667,0.0,0.0,0.0,Corrective,True,,
474a9231605f94a1265583282ccc7c123956e30b 74e3a622a2af2c7f561b058de1249c081ae82afd,f42ac40d7c6b564b779b2077ff156cb7b2c32c27,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:14:38 2019 +0200,1568970878,Merge pull request #6397 from trevor211/fixConfigWrongFormatHandlingFix bad handling of unexpected yesno option,,,,,,,,,,,,,,,Merge,False,,
f42ac40d7c6b564b779b2077ff156cb7b2c32c27 30a3644e643ed60bedd839b2a3f9ec59ff25c00b,bd90c99f83257997d7ed0203e9f7201541813681,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:15:20 2019 +0200,1568970920,Merge pull request #6398 from trevor211/fixRESP3ToLuaBoolRESP3: Fix function redisProtocolToLuaType about RESP3->Lua bools.,,,,,,,,,,,,,,,Merge,False,,
bd90c99f83257997d7ed0203e9f7201541813681,0a146a8be4aea201351d4292a936bbf508c48d4b,antirez,antirez@gmail.com,Fri Sep 20 11:18:59 2019 +0200,1568971139,Add useless break for uniformity / future protection.,1.0,1.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2688.0,219.0,0.3622222222222222,11735.0,3.7607361963190185,6340.0,Feature Addition,False,,
0a146a8be4aea201351d4292a936bbf508c48d4b a1a65d238c4b144b34960a1e7be94766da35a81f,975eb731456d9909894abf3cf70e5e0d5f1248ae,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:19:56 2019 +0200,1568971196,Merge pull request #6400 from mors741/unstableFix compilation error,,,,,,,,,,,,,,,Merge,False,,
975eb731456d9909894abf3cf70e5e0d5f1248ae c1cc5ca7671a5d2b35e1d7e1b7c0e67ab8c0bc91,d0050db2369014f0c394c1686d75ecf9147a2217,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:24:07 2019 +0200,1568971447,Merge pull request #6389 from ocadaruma/patch-1Fix typos in hyperloglog.c,,,,,,,,,,,,,,,Merge,False,,
d0050db2369014f0c394c1686d75ecf9147a2217 781f3fd8be048773d5a0052150df478db8d0979e,3976f4c88ef4201a6308db4fae019fe275989d37,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:33:27 2019 +0200,1568972007,Merge pull request #6368 from suntw2015/unstablefix rdb function rdbLoadIntegerObject comment,,,,,,,,,,,,,,,Merge,False,,
3976f4c88ef4201a6308db4fae019fe275989d37 cc8f06ece996238111150f6730d8339e3603b5ff,f135d6295b8f3c41bda9fed532b66962e9aaf676,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 20 11:33:58 2019 +0200,1568972038,Merge pull request #6367 from Dolondro/unstableSpelling: Typo fixes for API documentation,,,,,,,,,,,,,,,Merge,False,,
0a146a8be4aea201351d4292a936bbf508c48d4b,630638dcdeafd5b285b82c1e004abf690e620d67,antirez,antirez@gmail.com,Fri Sep 20 11:44:32 2019 +0200,1568972672,Remove redundant statement in config.c.Thanks to @guybe7 for spotting the error in the original PR I merged.n,3.0,2.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2263.0,261.0,0.39578703703703705,11736.0,3.5266112995672008,6341.0,Non Functional,False,,
630638dcdeafd5b285b82c1e004abf690e620d67 f135d6295b8f3c41bda9fed532b66962e9aaf676,1dd36347eda2742f6b2072cd2bf7ea5a745a3f49,antirez,antirez@gmail.com,Fri Sep 20 11:45:02 2019 +0200,1568972702,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1dd36347eda2742f6b2072cd2bf7ea5a745a3f49,2e4fa7bb48875984c285a63475fbdb8b26e279f3,antirez,antirez@gmail.com,Fri Sep 20 11:46:35 2019 +0200,1568972795,Make config.c always_replicate_commands more uniform.Better if it resembles the other similar code paths.n,4.0,4.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2264.0,262.0,0.0014236111111111116,11737.0,703.4390243902437,6342.0,Perfective,False,,
819a661be5efcb045be4d34d7269ab35dc0fcb88,5a8a0050269382d94d88016ba04272eef658bc97,David Carlier,devnexen@gmail.com,Fri Sep 20 11:01:36 2019 +0100,1568973696,Adding AnonHugePages case + comments,11.0,2.0,"src/zmalloc.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,527.0,54.0,4.872638888888889,24.0,1.2052276031126186,24.0,Feature Addition,False,,
2e4fa7bb48875984c285a63475fbdb8b26e279f3,c3899720f64e62920c7d90bc009afdca5824c087,antirez,antirez@gmail.com,Fri Sep 20 20:06:47 2019 +0200,1569002807,hiredis updated to master version.,2175.0,323.0,"deps/hiredis/.gitignore,CAS_DELIMITER,deps/hiredis/.travis.yml,CAS_DELIMITER,deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/CMakeLists.txt,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/appveyor.yml,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/async_private.h,CAS_DELIMITER,deps/hiredis/examples/CMakeLists.txt,CAS_DELIMITER,deps/hiredis/examples/example-libevent-ssl.c,CAS_DELIMITER,deps/hiredis/examples/example-libevent.c,CAS_DELIMITER,deps/hiredis/examples/example-ssl.c,CAS_DELIMITER,deps/hiredis/examples/example.c,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/hiredis.pc.in,CAS_DELIMITER,deps/hiredis/hiredis_ssl.h,CAS_DELIMITER,deps/hiredis/hiredis_ssl.pc.in,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/sockcompat.c,CAS_DELIMITER,deps/hiredis/sockcompat.h,CAS_DELIMITER,deps/hiredis/ssl.c,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/test.sh,CAS_DELIMITER,deps/hiredis/win32.h,CAS_DELIMITER",33.0,1.0,3.0,4.2106513902374765,16.0,226.5757575757576,164.0,338.53133277216614,11754.0,1.0002488283009217,1628.0,None,False,,
c3899720f64e62920c7d90bc009afdca5824c087,7a73b7f168eb01c4cf43ab0e0348f0f2d9922cb5,valentino,valentino@redislabs.com,Sat Sep 21 20:58:57 2019 +0300,1569088737,"DISCARD should not fail during OOMdiscard command should not fail during OOM, otherwise client MULTI statenwill not be cleared.n",15.0,1.0,"src/server.c,CAS_DELIMITER,tests/unit/multi.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5435644431995964,19.0,2677.0,326.0,1186.1852199074076,1.5,1.1636267593022112,1.0,Corrective,True,,
c3899720f64e62920c7d90bc009afdca5824c087,264708427b87b5c45f8ce5ee9d95bb99ce937732,antirez,antirez@gmail.com,Mon Sep 23 17:39:42 2019 +0200,1569253182,RESP3: implementation of verbatim output with TTY target.,10.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11449.0,350.0,18.988842592592594,11771.0,1.0526625040533062,6343.0,None,False,,
264708427b87b5c45f8ce5ee9d95bb99ce937732,5e399d5d335b2d4464621cbf6a3e2568dd779178,antirez,antirez@gmail.com,Mon Sep 23 17:41:04 2019 +0200,1569253264,hiredis udpated (RESP3 WIP).,5.0,4.0,"deps/hiredis/hiredis.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1216.0,23.0,2.8988078703703706,11772.0,1.3449693959442142,1629.0,None,False,,
5e399d5d335b2d4464621cbf6a3e2568dd779178,bb7546c9134b21b32e2fc9a6850407179bad8a64,antirez,antirez@gmail.com,Mon Sep 23 17:42:57 2019 +0200,1569253377,RESP3: varbatim handling for other redis-cli outputs.,2.0,0.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11456.0,351.0,0.0022569444444444442,11773.0,444.0769230769232,6344.0,None,False,,
bb7546c9134b21b32e2fc9a6850407179bad8a64,8ea185ea30853cd067a44d18895029be76591edb,antirez,antirez@gmail.com,Mon Sep 23 17:47:36 2019 +0200,1569253656,redis-cli: AUTH can now have 3 arguments as well.,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11458.0,352.0,0.003229166666666666,11774.0,310.67741935483866,6345.0,None,False,,
8ea185ea30853cd067a44d18895029be76591edb,cc108057ffda25a5421e2acc23dc63fe3c7b13d8,antirez,antirez@gmail.com,Mon Sep 23 17:55:05 2019 +0200,1569254105,redis-cli: ability to start a session in RESP3 mode.,26.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11459.0,353.0,0.00519675925925926,11775.0,193.4276169265033,6346.0,None,False,,
cc108057ffda25a5421e2acc23dc63fe3c7b13d8,b21dd082c329352362f309743ec0b27abdf68595,antirez,antirez@gmail.com,Mon Sep 23 19:36:06 2019 +0200,1569260166,redis-cli: CSV and RAW target for more RESP3 types.,27.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11482.0,354.0,0.07015046296296296,11776.0,15.255073420227687,6347.0,None,False,,
b21dd082c329352362f309743ec0b27abdf68595,eda703ab284f1ce491fb2c376fd08fe8aa956c62,antirez,antirez@gmail.com,Mon Sep 23 19:57:13 2019 +0200,1569261433,redis-cli: support for ACL style user/pass AUTH.,21.0,3.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,11508.0,355.0,0.014664351851851854,11777.0,69.19258089976321,6348.0,None,False,,
4a30a26f8fbb54854f5b29b77fd3c744e8be4290,733280d9cb1122dd15440429137610a4237869d4,filipecosta90,filipecosta.90@gmail.com,Mon Sep 23 23:45:31 2019 +0100,1569278731,[fix] un-refactor the code. [perf] replyWithStatus now makes usage of addReplyProto,15.0,14.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5957.0,241.0,8.103483796296297,1.0,1.123403714394672,1.0,Corrective,True,True,"[""af15b285faa2a9cece8f5a76e05221836b6abae5""]"
eda703ab284f1ce491fb2c376fd08fe8aa956c62,0a4d2bbd9c07bdaa5979941b5483cebb7419f7a0,Mike A. Owens,mike@meter.md,Mon Sep 23 19:24:09 2019 -0400,1569281049,"Seed SipHash with 128-bit keySipHash expects a 128-bit key, and we were indeed generating 128-bits,nbut restricting them to hex characters 0-9a-f, effectively giving usnonly 4 bits-per-byte of key material, and 64 bits overall.nnNow, we skip the hex conversion and supply 128 bits of unfilterednrandom data.n",3.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5045.0,321.0,2.2258333333333336,0.0,0.0,0.0,None,False,,
eda703ab284f1ce491fb2c376fd08fe8aa956c62,8a531cedb01215e367d88b600bb9178ebb9eb4b2,antirez,antirez@gmail.com,Wed Sep 25 17:45:05 2019 +0200,1569426305,"ACL: fix ##6408, default user state affecting all the connections.",3.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5045.0,322.0,1.6812037037037038,11778.0,1.5948119182684364,6349.0,None,False,,
8a531cedb01215e367d88b600bb9178ebb9eb4b2 0a4d2bbd9c07bdaa5979941b5483cebb7419f7a0,f6cf08e5828c5af18352d55925d9b2de16a332a8,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 25 18:03:39 2019 +0200,1569427419,Merge pull request #6402 from mieko/unstableSeed SipHash with 128-bit key,,,,,,,,,,,,,,,Merge,False,,
f6cf08e5828c5af18352d55925d9b2de16a332a8 7a73b7f168eb01c4cf43ab0e0348f0f2d9922cb5,f3aaf2b4d858a83796392bf2d4206855971b6a19,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 25 18:07:25 2019 +0200,1569427645,Merge pull request #6401 from valentinogeron/fix-discard-during-oomDISCARD should not fail during OOM,,,,,,,,,,,,,,,Merge,False,,
f3aaf2b4d858a83796392bf2d4206855971b6a19,b3d6cb268a14836e8e0d9a209e2f3b7495b1f22d,antirez,antirez@gmail.com,Wed Sep 25 18:08:11 2019 +0200,1569427691,Modify #6401 changes to fit 80 cols.,4.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5046.0,323.0,0.016041666666666666,11779.0,63.337662337662344,6350.0,None,False,,
b3d6cb268a14836e8e0d9a209e2f3b7495b1f22d 66a5c1cd7e557187bf3a1913e836d0c9be8adbb7,388bc55344280365e664552920cf7427edfb0d80,Salvatore Sanfilippo,antirez@gmail.com,Wed Sep 25 18:14:24 2019 +0200,1569428064,Merge pull request #6354 from jaredzhu/aarch64-develAdd aarch64 uc_mcontext debug dump info,,,,,,,,,,,,,,,Merge,False,,
733280d9cb1122dd15440429137610a4237869d4,af15b285faa2a9cece8f5a76e05221836b6abae5,filipecosta90,filipecosta.90@gmail.com,Wed Sep 25 17:28:42 2019 +0100,1569428922,[fix] fixed the un-refactor bug.,4.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5958.0,242.0,1.7383217592592592,2.0,1.5752674927259291,2.0,Corrective,True,,
388bc55344280365e664552920cf7427edfb0d80 68fd59056b19c930b7b118d1f531f25947e026b8,b0a90d8fa825bdc35982529c97ebe316cdca0161,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 26 11:39:29 2019 +0200,1569490769,Merge pull request #4980 from yossigo/rm-assertAdd RedisModule_Assert() API call.,,,,,,,,,,,,,,,Merge,False,,
b0a90d8fa825bdc35982529c97ebe316cdca0161 40c4183196b8c6e1c44c27400965786b9f010c74,959fb5cf6879c5fb04e8fcf00efda4816e358d0d,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 26 11:52:42 2019 +0200,1569491562,Merge pull request #6235 from oranagra/module_rdb_load_errorsAllow modules to handle RDB loading errors.,,,,,,,,,,,,,,,Merge,False,,
959fb5cf6879c5fb04e8fcf00efda4816e358d0d 52686f48664e8a01e556e6a7ee52013816514a26,c1ea6175c5353b37b15e418ddecb7cf87944ccb6,Salvatore Sanfilippo,antirez@gmail.com,Thu Sep 26 11:58:52 2019 +0200,1569491932,Merge pull request #6024 from itamarhaber/info_modulesAdds a Modules section to `INFO`,,,,,,,,,,,,,,,Merge,False,,
c1ea6175c5353b37b15e418ddecb7cf87944ccb6,b7b23bdfb864efb595868100a8857532cff0094f,antirez,antirez@gmail.com,Thu Sep 26 12:18:39 2019 +0200,1569493119,INFO: more info about loaded modules.Related to #6024.n,40.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5959.0,243.0,0.7430208333333334,11780.0,2.3458572830506097,6351.0,None,False,,
78bbb9b58d7e7b0816f11fe1d4c97ad5a37df01e,83e87bac762c84f2a2e9ee6922d038ee09ae9cd4,Oran Agra,oran@redislabs.com,Thu Sep 26 15:16:34 2019 +0300,1569500194,"Fix lastbgsave_status, when new child signal handler get intended killAnd add a test for that.n",22.0,1.0,"src/server.c,CAS_DELIMITER,tests/integration/rdb.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9656361333706098,19.0,2583.0,338.0,228.4141145833333,223.5,1.5969319169147282,51.0,Corrective,True,,
b7b23bdfb864efb595868100a8857532cff0094f,fddc4757c8c585d384889c1c7efba1ccf2121e6b,antirez,antirez@gmail.com,Thu Sep 26 16:14:21 2019 +0200,1569507261,BGREWRITEAOF: improve the generic error message.,2.0,1.0,"src/aof.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1798.0,197.0,21.95398148148148,11781.0,1.045549824337946,6352.0,None,False,,
eda703ab284f1ce491fb2c376fd08fe8aa956c62,6578119a237426a4092c2fc567bd6f4029af2e61,nikhilajayk,nikhilajayk@gmail.com,Thu Sep 26 21:51:49 2019 +0530,1569514909,Added cluster host and protected mode variables,5.0,3.0,"utils/create-cluster/README,CAS_DELIMITER,utils/create-cluster/create-cluster,CAS_DELIMITER",2.0,1.0,1.0,0.8112781244591328,14.0,64.5,10.0,507.10112268518515,0.5,0.5004929983169357,1.0,Feature Addition,False,,
83e87bac762c84f2a2e9ee6922d038ee09ae9cd4 fddc4757c8c585d384889c1c7efba1ccf2121e6b,61297585584f4e4bda3904d678ce001ca8e70758,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 27 11:24:06 2019 +0200,1569576246,Merge branch 'unstable' into modules_fork,,,,,,,,,,,,,,,Merge,False,,
fddc4757c8c585d384889c1c7efba1ccf2121e6b 61297585584f4e4bda3904d678ce001ca8e70758,b7c33af4a56ccc00b90318a91d3676d3c789a723,Salvatore Sanfilippo,antirez@gmail.com,Fri Sep 27 11:24:45 2019 +0200,1569576285,Merge pull request #6247 from oranagra/modules_forkModule API for Forking,,,,,,,,,,,,,,,Merge,False,,
b7c33af4a56ccc00b90318a91d3676d3c789a723,ae3ef964c1f75999499c2d35f7485aea1c0a70b1,antirez,antirez@gmail.com,Fri Sep 27 11:39:40 2019 +0200,1569577180,"Modules fork: improve SIGUSR1 handling, fix include.We can't expect SIGUSR1 to have any specific value range, so let'sndefine an exit code that we can handle in a special way.nThis also fixes an #include <wait.h> that is not standard.n",19.0,5.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.280672129520887,19.0,4472.333333333333,884.0,8.938194444444445,11783.0,1.5338691730894858,6355.0,None,False,,
ae3ef964c1f75999499c2d35f7485aea1c0a70b1,beb1356b5bdeb38eecb5c0bef509d3d4b3f2d3c0,antirez,antirez@gmail.com,Fri Sep 27 11:59:37 2019 +0200,1569578377,Improve error message in BGSAVE.,3.0,3.0,"src/rdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2616.0,255.0,21.248530092592603,11785.0,1.047062078912866,6356.0,None,False,,
beb1356b5bdeb38eecb5c0bef509d3d4b3f2d3c0,82845f8d045a1fdbac17cf1959ad51906a8840ed,antirez,antirez@gmail.com,Fri Sep 27 11:59:58 2019 +0200,1569578398,"TerminateModuleForkChild(): use wait4 for safety.In theory currently there is only one active child, but the API maynchange or for bugs in the implementation we may have several (it wasnlike that for years because of a bug). Better to wait for a specificnpid and avoid consuing other pending children information.n",2.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5996.0,245.0,0.014097222222222225,11786.0,71.935960591133,6357.0,None,False,,
82845f8d045a1fdbac17cf1959ad51906a8840ed,de1f82aa3302461c21f6cfcb8e8972e865b02174,antirez,antirez@gmail.com,Fri Sep 27 12:03:09 2019 +0200,1569578589,Function renamed hasForkChild() -> hasActiveChildProcess().,21.0,21.0,"src/aof.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",8.0,1.0,1.0,2.5820311165404983,19.0,2945.25,1843.0,23.10432291666667,11790.5,1.1583708066099072,6365.0,None,False,,
de1f82aa3302461c21f6cfcb8e8972e865b02174,721d3c9e0cb86117c9ebd61552facc88a286d47c,antirez,antirez@gmail.com,Fri Sep 27 12:17:47 2019 +0200,1569579467,"TerminateModuleForkChild(): move safety checks there.We don't want that the API could be used directly in an unsafe way,nwithout checking if there is an active child. Now the safety checks arenmoved directly in the function performing the operations.n",20.0,19.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5796354087834323,19.0,4477.333333333333,891.0,0.010162037037037035,11796.0,61.136674259681094,6368.0,None,False,,
721d3c9e0cb86117c9ebd61552facc88a286d47c,0a07f8ffeed8fc0a422287d847cf0c9de6c88393,antirez,antirez@gmail.com,Fri Sep 27 12:23:07 2019 +0200,1569579787,TerminateModuleForkChild(): fix function prototype.,2.0,2.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,19.0,4185.5,566.0,0.003703703703703704,11798.5,203.5,6370.0,None,False,,
0a07f8ffeed8fc0a422287d847cf0c9de6c88393,b394817754ade6151f40b64115f9fbe03a9ca09b,antirez,antirez@gmail.com,Fri Sep 27 18:32:52 2019 +0200,1569601972,Fix memory leak in RM_UnregisterCommandFilter().,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5998.0,249.0,0.2567708333333333,11800.0,4.894523326572007,6371.0,Corrective,True,,
b394817754ade6151f40b64115f9fbe03a9ca09b,8b5848a4f50f2fb0d9651ea91b74b22e83e6a452,antirez,antirez@gmail.com,Fri Sep 27 18:33:21 2019 +0200,1569602001,Fix memory leak in moduleLoadFromQueue().,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6000.0,250.0,0.0003356481481481481,11801.0,2980.3103448275865,6372.0,Corrective,True,,
8b5848a4f50f2fb0d9651ea91b74b22e83e6a452,916c4e5d864f55949e0202d2d9a073e19cf49b72,antirez,antirez@gmail.com,Fri Sep 27 18:42:38 2019 +0200,1569602558,"moduleRDBLoadError(): io->ctx may be NULL.The correct way to access the module about a given IO context is tondeference io->type->module, since io->ctx is only populated if the usernrequests an explicit context from an IO object.n",1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6002.0,251.0,0.006446759259259261,11802.0,156.11669658886896,6373.0,None,False,,
916c4e5d864f55949e0202d2d9a073e19cf49b72 af15b285faa2a9cece8f5a76e05221836b6abae5,ad45d7e407798d2996b5782470a64bd39b429be0,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 30 10:57:05 2019 +0200,1569833825,Merge pull request #6385 from filipecosta90/perf-reply-ss-errorImprove performance of RM_ReplyWithSimpleString and RM_ReplyWiu00e2u0080u00a6,,,,,,,,,,,,,,,Merge,False,,
ad45d7e407798d2996b5782470a64bd39b429be0,23f5cb423341b014f6a7005e2cbe10c22e7098e3,antirez,antirez@gmail.com,Mon Sep 30 10:58:15 2019 +0200,1569833895,Change a bit the style of #6385.,2.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6002.0,252.0,2.6775115740740745,11803.0,1.3734811119708477,6374.0,None,False,,
23f5cb423341b014f6a7005e2cbe10c22e7098e3,6a2831c24affd565b111398846c6cf6e40eca6e7,antirez,antirez@gmail.com,Mon Sep 30 17:17:36 2019 +0200,1569856656,Fix comments aesthetics.,3.0,2.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5062.0,328.0,3.2082060185185184,11804.0,1.3117006807629452,6375.0,Corrective,True,,
6a2831c24affd565b111398846c6cf6e40eca6e7 b27f388344860394d02e988aa2a6c79b15a4a85a,2478b47b89c529e9c7361f30d2e406a00d6e01d7,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 30 17:43:58 2019 +0200,1569858238,Merge pull request #6304 from dbenders/fix-issue-6141Fix issue #6141: cluster rebalance does not support binary key,,,,,,,,,,,,,,,Merge,False,,
2478b47b89c529e9c7361f30d2e406a00d6e01d7 6578119a237426a4092c2fc567bd6f4029af2e61,eb2114b9cda51272ab99b4fd8aa280e8e467d7c5,Salvatore Sanfilippo,antirez@gmail.com,Mon Sep 30 17:46:09 2019 +0200,1569858369,Merge pull request #6411 from nikhilajayk/unstableAdded cluster host and protected mode variables to the create cluster script.,,,,,,,,,,,,,,,Merge,False,,
eb2114b9cda51272ab99b4fd8aa280e8e467d7c5,ea7c3fe7fd6d269e1e09443db3e2148cb445febb,Madelyn Olson,matolson@amazon.com,Tue Sep 17 03:32:35 2019 -0700,1568716355,Allowed passing in of password hash and fixed config rewrite,65.0,6.0,"src/acl.c,CAS_DELIMITER,tests/support/test.tcl,CAS_DELIMITER,tests/unit/acl.tcl,CAS_DELIMITER",3.0,2.0,3.0,1.2631745129337288,18.0,651.3333333333334,160.0,193.5395447530864,18.0,1.0682443371565744,2.0,Corrective,True,,
ea7c3fe7fd6d269e1e09443db3e2148cb445febb,09041b9359dfcdc84cf5570ded44160fbe7e2bfb,antirez,antirez@gmail.com,Mon Sep 30 18:22:55 2019 +0200,1569860575,ACLs: change hashed passwords opcode to also remove them.Related to PR #6405n,28.0,10.0,"src/acl.c,CAS_DELIMITER,tests/unit/acl.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.6292492238560345,18.0,928.5,127.0,13.243287037037033,11805.5,1.0566324657845518,827.0,None,False,,
eb2114b9cda51272ab99b4fd8aa280e8e467d7c5,a9628142fd3ce5e3d221ba4b60bcb33c394140e1,antirez,antirez@gmail.com,Mon Sep 30 18:37:59 2019 +0200,1569861479,Clarify a comment about memory total_frag field.,5.0,3.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5063.0,329.0,0.05582175925925927,11807.0,18.914161310387726,6377.0,None,False,,
61853ad8dea0a3ddd8da77a257405452a114bd65 a9628142fd3ce5e3d221ba4b60bcb33c394140e1,d5c14c70b7af33b93c46951aed9879918bd8bffd,Oran Agra,oran@redislabs.com,Mon Sep 30 20:47:35 2019 +0300,1569865655,Merge remote-tracking branch 'antirez/unstable' into modules_info,,,,,,,,,,,,,,,Merge,False,,
d5c14c70b7af33b93c46951aed9879918bd8bffd,1b4f888109b90b8982d16402268c6dbb90225430,Oran Agra,oran@redislabs.com,Mon Sep 30 21:13:13 2019 +0300,1569867193,Use sdscatfmt instead of sdscatprintf in module infosdscatfmt is fastern,21.0,21.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6000.0,253.0,0.3853935185185185,225.0,3.5947504354615893,161.0,None,False,,
a9628142fd3ce5e3d221ba4b60bcb33c394140e1 09041b9359dfcdc84cf5570ded44160fbe7e2bfb,beebb3c013ef37a90cd9910a0c4077f6fed6abf3,antirez,antirez@gmail.com,Tue Oct 1 10:33:04 2019 +0200,1569918784,Merge branch 'hashed-pass-opcode' into unstable,,,,,,,,,,,,,,,Merge,False,,
beebb3c013ef37a90cd9910a0c4077f6fed6abf3,3281ebb495f0c7fb14bf28df3534d800e0c7d6a1,antirez,antirez@gmail.com,Tue Oct 1 10:38:56 2019 +0200,1569919136,Fix GEORADIUS replies broken after RESP3 introduction.This commit fixes #6417.n,2.0,2.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,818.0,57.0,200.8942129629629,11808.0,1.0049777441831256,6378.0,Corrective,True,,
3281ebb495f0c7fb14bf28df3534d800e0c7d6a1 1b4f888109b90b8982d16402268c6dbb90225430,2e2fe98f9c93e0dc7e40bdab261f730afc0e573f,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 1 18:02:33 2019 +0200,1569945753,Merge pull request #6270 from oranagra/modules_infoExtend modules API to allow modules report to redis INFO,,,,,,,,,,,,,,,Merge,False,,
2e2fe98f9c93e0dc7e40bdab261f730afc0e573f,40acb4412d9409ef4339d07caeeba540256a062a,antirez,antirez@gmail.com,Tue Oct 1 19:18:08 2019 +0200,1569950288,GEORADIUS reply: fix of the previous fix about #6417.,1.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,818.0,58.0,0.3605555555555556,11809.0,3.7734976887519274,6379.0,None,False,,
40acb4412d9409ef4339d07caeeba540256a062a,98426e98868e91e8be42849ad13d36ea538ccf25,Oran Agra,oran@redislabs.com,Wed Oct 2 08:40:35 2019 +0300,1569994835,"On LUA script timeout, print the script SHA to the logsince the slowlog and other means that can help you detect the bad scriptnare only exposed after the script is done. it might be a good idea to at leastnprint the script name (sha) to the log when it timeouts.n",9.0,1.0,"src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.4689955935892812,19.0,2530.5,539.0,8.326064814814814,226.5,1.0722262176430912,163.0,None,False,,
40acb4412d9409ef4339d07caeeba540256a062a,f49f0a6f729720cc1462d30d036c8ba2baef361b,antirez,antirez@gmail.com,Wed Oct 2 11:27:21 2019 +0200,1570008441,SDS: make sdscatfmt() faster by pre-allocating a bit.,4.0,0.0,"src/sds.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1284.0,80.0,231.8375,11810.0,1.004313366043026,6380.0,None,False,,
f49f0a6f729720cc1462d30d036c8ba2baef361b,758b39be997f16bc084055edb8caa71be2f2ffcc,antirez,antirez@gmail.com,Wed Oct 2 11:21:24 2019 +0200,1570008084,Speedup INFO server section.,32.0,17.0,"src/release.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.9968178949046368,19.0,2497.0,655.0,641.8465200617285,11812.0,1.0005195152367874,6383.0,None,False,,
09f99c2a925a0351985e799c106614082d6053cf,2e19b941136ebd4e1d9c4766a040d3148a55d24e,Oran Agra,oran@redislabs.com,Mon Sep 9 14:35:06 2019 +0300,1568028906,"RED-31295 - redis: avoid race between dlopen and thread creationIt seeems that since I added the creation of the jemalloc thread redisnsometimes fails to start with the following error:nnInconsistency detected by ld.so: dl-tls.c: 493: _dl_allocate_tls_init: Assertion `listp->slotinfo[cnt].gen <= GL(dl_tls_generation)' failed!nnThis seems to be due to a race bug in ld.so, in which TLS creation on thenthread, collide with dlopen.nnMove the creation of BIO and jemalloc threads to after modules are loaded.nnplus small bugfix when trying to disable the jemalloc thread at runtimen",12.0,4.0,"src/server.c,CAS_DELIMITER,src/zmalloc.c,CAS_DELIMITER",2.0,1.0,1.0,0.9544340029249648,19.0,2800.5,386.0,-16.92111111111111,228.5,0.9633983130726744,165.0,None,False,,
758b39be997f16bc084055edb8caa71be2f2ffcc,c549513acdf2eb3232d7ad7c8903f10ea85789b6,antirez,antirez@gmail.com,Wed Oct 2 18:33:40 2019 +0200,1570034020,Modules: handle propagation when ctx is freed. Flag modules commands ctx.,23.0,19.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6000.0,254.0,1.9308680555555555,11814.0,1.5179017784890934,6384.0,None,False,,
c549513acdf2eb3232d7ad7c8903f10ea85789b6,e938bbc543c7a7aa3d67ee75f87eb5412df0a3ef,antirez,antirez@gmail.com,Thu Oct 3 10:56:37 2019 +0200,1570092997,Modules: implement RM_Replicate() from async callbacks.,33.0,2.0,"src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,0.3159971329784247,19.0,4189.5,576.0,0.8326967592592593,11815.5,2.0327182782233875,6386.0,None,False,,
e938bbc543c7a7aa3d67ee75f87eb5412df0a3ef,1bca62c4b751b325c726482dd9a7264125a2664c,antirez,antirez@gmail.com,Thu Oct 3 11:03:46 2019 +0200,1570093426,Modules: RM_Replicate() in thread safe contexts.,26.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6033.0,256.0,0.0049652777777777785,11817.0,202.39860139860141,6387.0,None,False,,
1bca62c4b751b325c726482dd9a7264125a2664c,45cd8e03cab6c24329c25cbb873405fe86911b5b,antirez,antirez@gmail.com,Thu Oct 3 13:06:09 2019 +0200,1570100769,Modules: RM_Replicate() test module: initial implementation.,86.0,1.0,"tests/modules/Makefile,CAS_DELIMITER,tests/modules/propagate.c,CAS_DELIMITER",2.0,1.0,1.0,0.31732389983585857,19.0,18.5,4.0,35.52357638888889,11818.5,1.0140751593962931,829.0,None,False,,
45cd8e03cab6c24329c25cbb873405fe86911b5b,55a3da87f83c7c912b6c981a3e9fb1259179007a,antirez,antirez@gmail.com,Thu Oct 3 13:23:48 2019 +0200,1570101828,Modules: RM_Replicate() test with threads.,23.0,2.0,"tests/modules/propagate.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,82.0,1.0,0.012256944444444444,11820.0,82.58640226628894,830.0,None,False,,
55a3da87f83c7c912b6c981a3e9fb1259179007a,1b8b8c029fa09511bfeb01c1808456de7a28565d,antirez,antirez@gmail.com,Thu Oct 3 18:44:47 2019 +0200,1570121087,Modules: add RM_Replicate() Tcl test file & fix the module.,32.0,1.0,"runtest-moduleapi,CAS_DELIMITER,tests/modules/propagate.c,CAS_DELIMITER,tests/unit/moduleapi/propagate.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.5229784263810124,19.0,40.0,6.0,23.83507330246914,11822.0,1.0139995703724345,832.0,None,False,,
1b8b8c029fa09511bfeb01c1808456de7a28565d,2a81e49ddee1db6ae3c09bc8b9e1b05d430571f0,antirez,antirez@gmail.com,Fri Oct 4 11:44:39 2019 +0200,1570182279,Modules: RM_Call/Replicate() ability to exclude AOF/replicas.,27.0,9.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6055.0,257.0,1.0283912037037035,11824.0,1.9723926035136683,6388.0,None,False,,
2a81e49ddee1db6ae3c09bc8b9e1b05d430571f0,3eaff2941e6625c77c6eee5a53b8b94f94b78e33,antirez,antirez@gmail.com,Fri Oct 4 11:46:53 2019 +0200,1570182413,Modules: RM_Call(): give pointer to documentation.,4.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6073.0,258.0,0.001550925925925926,11825.0,645.776119402985,6389.0,None,False,,
3eaff2941e6625c77c6eee5a53b8b94f94b78e33 1026d2caf89eecedfec099031870b1535185d491,c326f28833c5c31f545f22c58294f0d6e8ee9733,Salvatore Sanfilippo,antirez@gmail.com,Fri Oct 4 11:56:08 2019 +0200,1570182968,Merge pull request #6308 from oranagra/repl-diskless-load-configfix error handling on config parsing of repl-diskless-load,,,,,,,,,,,,,,,Merge,False,,
c326f28833c5c31f545f22c58294f0d6e8ee9733 98426e98868e91e8be42849ad13d36ea538ccf25,264778af0adee0699c607b6e6b83560f339b285f,Salvatore Sanfilippo,antirez@gmail.com,Fri Oct 4 11:58:05 2019 +0200,1570183085,"Merge pull request #6419 from oranagra/lua_timeout_shaOn LUA script timeout, print the script SHA to the log",,,,,,,,,,,,,,,Merge,False,,
264778af0adee0699c607b6e6b83560f339b285f,ee1cef189fff604f165b2d20a307545840de944e,antirez,antirez@gmail.com,Fri Oct 4 12:00:41 2019 +0200,1570183241,Minor aesthetic changes to #6419.,2.0,2.0,"src/scripting.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",2.0,1.0,1.0,1.0,19.0,2536.0,543.0,1.6125578703703702,11826.5,1.384325256527693,6391.0,None,False,,
2e19b941136ebd4e1d9c4766a040d3148a55d24e ee1cef189fff604f165b2d20a307545840de944e,bf759cc9c3000de05b6591abbfdc9a3450029278,Oran Agra,oran@redislabs.com,Fri Oct 4 13:53:40 2019 +0300,1570186420,Merge remote-tracking branch 'antirez/unstable' into jemalloc_purge_bg,,,,,,,,,,,,,,,Merge,False,,
bf759cc9c3000de05b6591abbfdc9a3450029278,0f1969f16f541c4a4b17b0063ed764059fe89bc5,Oran Agra,oran@redislabs.com,Fri Oct 4 14:22:13 2019 +0300,1570188133,trim the double implementation of jemalloc purge,4.0,16.0,"src/object.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,1452.0,156.0,14.13255787037037,230.0,1.0707585993400779,166.0,None,False,,
ee1cef189fff604f165b2d20a307545840de944e,9073d56eec0d37dda201b8aaa7995652fb8afc33,antirez,antirez@gmail.com,Fri Oct 4 18:52:07 2019 +0200,1570207927,LOLWUT: refactoring + skeleton of LOLWUT 6.,247.0,110.0,"src/Makefile,CAS_DELIMITER,src/lolwut.c,CAS_DELIMITER,src/lolwut.h,CAS_DELIMITER,src/lolwut5.c,CAS_DELIMITER,src/lolwut6.c,CAS_DELIMITER",5.0,1.0,1.0,1.9604127448504591,18.0,130.6,200.0,10.860761574074075,11830.0,1.0267934381734063,6396.0,None,False,,
9073d56eec0d37dda201b8aaa7995652fb8afc33,bd6044706641fa6370a90dc5347e6cd37f5930eb,antirez,antirez@gmail.com,Fri Oct 4 19:18:45 2019 +0200,1570209525,LOLWUT: ability to specify VERSION <ver> option.,15.0,3.0,"src/lolwut.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,176.0,20.0,0.01849537037037037,11833.0,55.06758448060075,6397.0,None,False,,
bd6044706641fa6370a90dc5347e6cd37f5930eb,d1a005ab3963c16b65e805675a76f0e40c723158,Oran Agra,oran@redislabs.com,Sun Oct 6 13:55:21 2019 +0300,1570359321,"fix issues found by a static analyzercluster.c - stack buffer memory alignmentnThe pointer 'buf' is cast to a more strictly aligned pointer typenevict.c - lazyfree_lazy_eviction, lazyfree_lazy_eviction always calledndefrag.c - bug in dead codenserver.c - casting was missing parenthesisnrax.c - indentation / newline suggested an 'else if' was intendedn",24.0,22.0,"src/cluster.c,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/evict.c,CAS_DELIMITER,src/rax.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",5.0,1.0,1.0,1.4277712613490414,19.0,2899.0,950.0,120.34482638888888,233.0,1.0203343486008154,171.0,Corrective,True,,
bd6044706641fa6370a90dc5347e6cd37f5930eb,f019f28e7b9f05205c02261bb3af8261869d600a,antirez,antirez@gmail.com,Mon Oct 7 12:35:05 2019 +0200,1570444505,LOLWUT: version 6 initial concept.,95.0,5.0,"src/lolwut5.c,CAS_DELIMITER,src/lolwut6.c,CAS_DELIMITER",2.0,1.0,1.0,0.2422921890824148,18.0,126.0,5.0,2.7381712962962963,11834.5,1.2739054349939556,6399.0,None,False,,
bd6044706641fa6370a90dc5347e6cd37f5930eb,bea0384f5d616dd44b5202ccb2c5345f4a671d13,charsyam,charsyam@naver.com,Mon Oct 7 23:48:11 2019 +0900,1570459691,fix type salves to slaves,2.0,2.0,"src/replication.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2980.0,251.0,10.197939814814816,27.0,1.0980590215434762,27.0,Corrective,True,,
f019f28e7b9f05205c02261bb3af8261869d600a,c10889150ef10a30edb2ba0503b06154222458df,antirez,antirez@gmail.com,Mon Oct 7 18:24:34 2019 +0200,1570465474,LOLWUT: version 6 initial output. May change a bit.,33.0,13.0,"src/lolwut.c,CAS_DELIMITER,src/lolwut.h,CAS_DELIMITER,src/lolwut5.c,CAS_DELIMITER,src/lolwut6.c,CAS_DELIMITER",4.0,1.0,1.0,0.9274479232123118,18.0,144.75,29.0,1.607158564814815,11837.5,1.2057591597775663,6403.0,None,False,,
c10889150ef10a30edb2ba0503b06154222458df,58cdc054e30e889299fba6e25b780377af3fca9d,antirez,antirez@gmail.com,Mon Oct 7 18:41:29 2019 +0200,1570466489,LOLWUT: version 6: improve rithm of the image.,24.0,16.0,"src/lolwut6.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,185.0,3.0,0.011747685185185186,11840.0,86.12315270935959,6404.0,None,False,,
58cdc054e30e889299fba6e25b780377af3fca9d,c448f6fe55500af0d0f726f43892a7acaef4a1eb,antirez,antirez@gmail.com,Mon Oct 7 18:57:25 2019 +0200,1570467445,LOLWUT: version 6: give credits.,5.0,0.0,"src/lolwut6.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,193.0,4.0,0.011064814814814816,11841.0,91.37656903765688,6405.0,None,False,,
c448f6fe55500af0d0f726f43892a7acaef4a1eb,c65347ab17d61a4118efdc4a3568bf71b088ab63,antirez,antirez@gmail.com,Mon Oct 7 19:19:38 2019 +0200,1570468778,LOLWUT: version 6: change text message & credits.,6.0,4.0,"src/lolwut6.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,198.0,5.0,0.01542824074074074,11842.0,65.81620405101276,6406.0,None,False,,
c65347ab17d61a4118efdc4a3568bf71b088ab63,3ef6b79c801cd6bf9301a3407319f0a79ac882d6,Jamison Judge,jj@jamisonjudge.com,Mon Oct 7 11:01:01 2019 -0700,1570471261,stream.h: fix typo,1.0,1.0,"src/stream.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,114.0,18.0,83.41697916666666,0.0,0.0,0.0,None,False,,
f4d37173fef8a020fe99a7b98e32a9201113cc09,b087dd1db60ed23d9e59304deb0b1599437f6e23,Yossi Gottlieb,yossigo@gmail.com,Thu Sep 12 10:56:54 2019 +0300,1568275014,"TLS: Connections refactoring and TLS support.* Introduce a connection abstraction layer for all socket operations andnintegrate it across the code base.n* Provide an optional TLS connections implementation based on OpenSSL.n* Pull a newer version of hiredis with TLS support.n* Tests, redis-cli updates for TLS support.n",4622.0,832.0,"TLS.md,CAS_DELIMITER,deps/Makefile,CAS_DELIMITER,deps/hiredis/.gitignore,CAS_DELIMITER,deps/hiredis/.travis.yml,CAS_DELIMITER,deps/hiredis/CHANGELOG.md,CAS_DELIMITER,deps/hiredis/CMakeLists.txt,CAS_DELIMITER,deps/hiredis/Makefile,CAS_DELIMITER,deps/hiredis/README.md,CAS_DELIMITER,deps/hiredis/adapters/libevent.h,CAS_DELIMITER,deps/hiredis/appveyor.yml,CAS_DELIMITER,deps/hiredis/async.c,CAS_DELIMITER,deps/hiredis/async.h,CAS_DELIMITER,deps/hiredis/async_private.h,CAS_DELIMITER,deps/hiredis/examples/CMakeLists.txt,CAS_DELIMITER,deps/hiredis/examples/example-libevent-ssl.c,CAS_DELIMITER,deps/hiredis/examples/example-libevent.c,CAS_DELIMITER,deps/hiredis/examples/example-ssl.c,CAS_DELIMITER,deps/hiredis/examples/example.c,CAS_DELIMITER,deps/hiredis/hiredis.c,CAS_DELIMITER,deps/hiredis/hiredis.h,CAS_DELIMITER,deps/hiredis/hiredis.pc.in,CAS_DELIMITER,deps/hiredis/hiredis_ssl.h,CAS_DELIMITER,deps/hiredis/hiredis_ssl.pc.in,CAS_DELIMITER,deps/hiredis/net.c,CAS_DELIMITER,deps/hiredis/net.h,CAS_DELIMITER,deps/hiredis/read.c,CAS_DELIMITER,deps/hiredis/read.h,CAS_DELIMITER,deps/hiredis/sds.c,CAS_DELIMITER,deps/hiredis/sds.h,CAS_DELIMITER,deps/hiredis/sockcompat.c,CAS_DELIMITER,deps/hiredis/sockcompat.h,CAS_DELIMITER,deps/hiredis/ssl.c,CAS_DELIMITER,deps/hiredis/test.c,CAS_DELIMITER,deps/hiredis/test.sh,CAS_DELIMITER,deps/hiredis/win32.h,CAS_DELIMITER,redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/anet.c,CAS_DELIMITER,src/anet.h,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/connection.c,CAS_DELIMITER,src/connection.h,CAS_DELIMITER,src/connhelpers.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tls.c,CAS_DELIMITER,tests/cluster/run.tcl,CAS_DELIMITER,tests/cluster/tests/04-resharding.tcl,CAS_DELIMITER,tests/cluster/tests/12-replica-migration-2.tcl,CAS_DELIMITER,tests/helpers/bg_block_op.tcl,CAS_DELIMITER,tests/helpers/bg_complex_data.tcl,CAS_DELIMITER,tests/helpers/gen_write_load.tcl,CAS_DELIMITER,tests/instances.tcl,CAS_DELIMITER,tests/integration/aof-race.tcl,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER,tests/integration/block-repl.tcl,CAS_DELIMITER,tests/integration/psync2-reg.tcl,CAS_DELIMITER,tests/integration/redis-cli.tcl,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/sentinel/tests/07-down-conditions.tcl,CAS_DELIMITER,tests/support/cli.tcl,CAS_DELIMITER,tests/support/cluster.tcl,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/support/server.tcl,CAS_DELIMITER,tests/support/util.tcl,CAS_DELIMITER,tests/test_helper.tcl,CAS_DELIMITER,tests/unit/limits.tcl,CAS_DELIMITER,tests/unit/other.tcl,CAS_DELIMITER,tests/unit/protocol.tcl,CAS_DELIMITER,tests/unit/tls.tcl,CAS_DELIMITER,tests/unit/wait.tcl,CAS_DELIMITER,utils/gen-test-certs.sh,CAS_DELIMITER",85.0,5.0,15.0,5.170284961924269,19.0,818.7647058823529,5007.0,309.6510155228758,138.0,0.9901001838790926,37.0,None,False,True,"[""0132189007e7343c29e43c588091699693635a8b""]"
b087dd1db60ed23d9e59304deb0b1599437f6e23,5a477946065bcf05b335ededd6b794e82882ab73,Oran Agra,oran@redislabs.com,Sun Aug 11 16:07:53 2019 +0300,1565528873,"diskless replication rdb transfer uses pipe, and writes to sockets form the parent process.misc:n- handle SSL_has_pending by iterating though these in beforeSleep, and setting timeout of 0 to aeProcessEventsn- fix issue with epoll signaling EPOLLHUP and EPOLLERR only to the write handlers. (needed to detect the rdb pipe was closed)n- add key-load-delay config for testingn- trim connShutdown which is no longer neededn- rioFdsetWrite -> rioFdWrite - simplified since there's no longer need to write to multiple FDsn- don't detect rdb child exited (don't call wait3) until we detect the pipe is closedn- Cleanup bad optimization from rio.c, add another onen",580.0,353.0,"TLS.md,CAS_DELIMITER,src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/ae_epoll.c,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/connection.c,CAS_DELIMITER,src/connection.h,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/rio.c,CAS_DELIMITER,src/rio.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tls.c,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER",17.0,3.0,3.0,3.1474968287217964,19.0,1377.764705882353,2158.0,86.84068287037044,244.0,0.9990443387151394,52.0,None,False,,
5a477946065bcf05b335ededd6b794e82882ab73,6b6294807c0bca50041da117c1abb35f5114e972,Oran Agra,oran@redislabs.com,Mon Aug 19 12:18:25 2019 +0300,1566206305,TLS: Implement support for write barrier.,136.0,31.0,"TLS.md,CAS_DELIMITER,src/aof.c,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/connection.c,CAS_DELIMITER,src/connection.h,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tls.c,CAS_DELIMITER,tests/integration/aof.tcl,CAS_DELIMITER",11.0,3.0,3.0,2.87316022462471,19.0,1931.2727272727273,2023.0,-0.8277262205387209,258.0,0.6882437323483769,53.0,None,False,,
6b6294807c0bca50041da117c1abb35f5114e972,61733ded1426908c6b0c1b8c94f03cff3d20f32e,Yossi Gottlieb,yossigo@gmail.com,Thu Sep 12 11:10:22 2019 +0300,1568275822,"TLS: Configuration options.Add configuration options for TLS protocol versions, ciphers/ciphernsuites selection, etc.n",414.0,160.0,"TLS.md,CAS_DELIMITER,redis.conf,CAS_DELIMITER,src/Makefile,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tls.c,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER,tests/sentinel/run.tcl,CAS_DELIMITER,tests/support/redis.tcl,CAS_DELIMITER,tests/unit/tls.tcl,CAS_DELIMITER",13.0,3.0,6.0,2.789115642746524,19.0,1641.6923076923074,1887.0,139.85063746438746,187.0,1.0150362818547851,41.0,None,False,,
61733ded1426908c6b0c1b8c94f03cff3d20f32e,d7f2681a0cbec990c8809400244eeca0b0d11681,Yossi Gottlieb,yossigo@gmail.com,Tue Oct 8 17:57:05 2019 +0300,1570546625,"TLS: Improve CA certifiate configuration options.This adds support for explicit configuration of a CA certs directory (innaddition to the previously supported bundle file).  For redis-cli, if nonexplicit CA configuration is supplied the system-wide defaultnconfiguration will be adopted.n",100.0,13.0,"redis.conf,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/redis-cli.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/tls.c,CAS_DELIMITER",5.0,2.0,2.0,1.2693700532094403,19.0,3780.0,1161.0,26.2843125,196.0,1.0173747730319374,115.0,None,False,,
c65347ab17d61a4118efdc4a3568bf71b088ab63,009862ab7eee394061eeaf1aa187fa339ca50be4,antirez,antirez@gmail.com,Tue Oct 8 17:02:52 2019 +0200,1570546972,"Geo: output 10 chars of geohash, not 11.This does not limit the actual precision, because the last digit bits werengarbage, and the shift value became even negative in the last iteration.n",5.0,5.0,"src/geo.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7219280948873623,16.0,570.5,80.0,136.61155671296297,11843.5,1.074230137623748,833.0,None,False,,
009862ab7eee394061eeaf1aa187fa339ca50be4 d1a005ab3963c16b65e805675a76f0e40c723158,17bf0b25c1171486e3a1b089f3181fff2bc0d4f0,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 8 17:10:57 2019 +0200,1570547457,Merge pull request #6427 from oranagra/static-analyzerfix issues found by a static analyzer,,,,,,,,,,,,,,,Merge,False,,
17bf0b25c1171486e3a1b089f3181fff2bc0d4f0 3ef6b79c801cd6bf9301a3407319f0a79ac882d6,a92921da135e38eedd89138e15fe9fd1ffdd9b48,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 8 17:40:47 2019 +0200,1570549247,Merge pull request #6430 from jaamison/jj/unstablestream.h: fix typo,,,,,,,,,,,,,,,Merge,False,,
a92921da135e38eedd89138e15fe9fd1ffdd9b48,1a292e06342963ab1f82adb70637461466264a89,omg-by,504094596@qq.com,Thu Oct 10 00:43:28 2019 +0800,1570639408,there should is AUTH && HELLO non authenticated state.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5119.0,337.0,27.356319444444445,0.0,0.0,0.0,None,False,,
a92921da135e38eedd89138e15fe9fd1ffdd9b48,98600c9a11419991cdc3fa11acff9100d793f220,Daniel Dai,764122422@qq.com,Wed Oct 9 14:15:31 2019 -0400,1570644931,update typo,1.0,1.0,"tests/integration/replication.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,632.0,37.0,27.42024305555556,0.0,0.0,0.0,None,False,,
ee1cef189fff604f165b2d20a307545840de944e,2fae0192e86c4222d8c735fda8a1f35164e1ca92,Guy Benoish,guy.benoish@redislabs.com,Thu Oct 10 09:47:48 2019 +0200,1570693668,Fix usage of server.stream_node_max_*,3.0,3.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,2553.0,187.0,181.64497685185185,29.0,1.0055052444462342,27.0,Corrective,True,,
17bf0b25c1171486e3a1b089f3181fff2bc0d4f0,747be463d2f825c1e0b620ef2b120a0695121d8a,antirez,antirez@gmail.com,Thu Oct 10 10:23:34 2019 +0200,1570695814,"Cluster: fix memory leak of cached master.This is what happened:nn1. Instance starts, is a slave in the cluster configuration, butnactually server.masterhost is not set, so technically the instancenis acting like a master.nn2. loadDataFromDisk() calls replicationCacheMasterUsingMyself() even ifnthe instance is a master, in the case it is logically a slave and thencluster is enabled. So now we have a cached master even if the instancenis practically configured as a master (from the POV ofnserver.masterhost value and so forth).nn3. clusterCron() sees that the instance requires to replicate from itsnmaster, because logically it is a slave, so it callsnreplicationSetMaster() that will in turn callnreplicationCacheMasterUsingMyself(): before this commit, this call wouldnoverwrite the old cached master, creating a memory leak.n",9.0,4.0,"src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.961236604722876,19.0,4112.0,593.0,14.331006944444445,11845.5,1.0352959905287662,6409.0,None,False,,
747be463d2f825c1e0b620ef2b120a0695121d8a a92921da135e38eedd89138e15fe9fd1ffdd9b48,509fe9cba1356526bc43a9e6b33101acc72d1fbd,antirez,antirez@gmail.com,Thu Oct 10 10:31:43 2019 +0200,1570696303,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
509fe9cba1356526bc43a9e6b33101acc72d1fbd 98600c9a11419991cdc3fa11acff9100d793f220,1d9d27c91aa1134f6a26c8e98bdcf6e60f0f3138,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 10 11:18:47 2019 +0200,1570699127,Merge pull request #6438 from daidaotong/unstableresolve typo in test module,,,,,,,,,,,,,,,Merge,False,,
1d9d27c91aa1134f6a26c8e98bdcf6e60f0f3138 0f1969f16f541c4a4b17b0063ed764059fe89bc5,14a9da061311e8c277b773022af8e2a094eec13a,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 10 14:48:59 2019 +0200,1570711739,"Merge pull request #6145 from oranagra/jemalloc_purge_bgpurge jemalloc after flush, and enable background purging thread",,,,,,,,,,,,,,,Merge,False,,
14a9da061311e8c277b773022af8e2a094eec13a 2fae0192e86c4222d8c735fda8a1f35164e1ca92,1677f4223c6111c5287b58aa171ffc5d5072a47f,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 10 14:49:35 2019 +0200,1570711775,Merge pull request #6443 from guybe7/fix_stream_rax_node_limitsFix usage of server.stream_node_max_*,,,,,,,,,,,,,,,Merge,False,,
1677f4223c6111c5287b58aa171ffc5d5072a47f 1a292e06342963ab1f82adb70637461466264a89,363604a27dc322025bb8867aced75184ea846fff,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 10 14:55:03 2019 +0200,1570712103,Merge pull request #6437 from OMG-By/redis-omg_bythere should is AUTH && HELLO non authenticated state.,,,,,,,,,,,,,,,Merge,False,,
363604a27dc322025bb8867aced75184ea846fff bea0384f5d616dd44b5202ccb2c5345f4a671d13,8e3d910d4e8f8a4147ba5905a9684ce3a392d7ce,Salvatore Sanfilippo,antirez@gmail.com,Thu Oct 10 14:56:43 2019 +0200,1570712203,Merge pull request #6429 from charsyam/feature/typo-slave[trivial] fix typos salves to slaves in replication.c,,,,,,,,,,,,,,,Merge,False,,
8e3d910d4e8f8a4147ba5905a9684ce3a392d7ce,dd29d441364236992ce89230556526c707c3c960,antirez,antirez@gmail.com,Thu Oct 10 15:22:42 2019 +0200,1570713762,Test: fix implementation-dependent test after code change.,2.0,2.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,413.0,19.0,358.89324074074074,11847.0,1.002786343922042,834.0,Preventative,False,,
d7f2681a0cbec990c8809400244eeca0b0d11681,0132189007e7343c29e43c588091699693635a8b,Yossi Gottlieb,yossigo@gmail.com,Tue Oct 15 15:24:32 2019 +0300,1571142272,Fix compile warnings when BUILD_TLS=no.,2.0,1.0,"src/redis-cli.c,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,19.0,8104.0,616.0,20.035283564814808,199.5,1.0850041640247,117.0,Corrective,True,,
0132189007e7343c29e43c588091699693635a8b,71f10de4dea0009efd0bc3b0127adb0f93671a70,Yossi Gottlieb,yossigo@gmail.com,Tue Oct 15 17:20:58 2019 +0300,1571149258,Conns: write() 0 retval should not trigger error.,1.0,3.0,"src/connection.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,404.0,3.0,57.21010416666667,201.0,1.0174794298064336,118.0,None,False,,
71f10de4dea0009efd0bc3b0127adb0f93671a70,c469f6ad9ee46164eed3b33cf067768132ce5e8f,Yossi Gottlieb,yossigo@gmail.com,Tue Oct 15 17:21:33 2019 +0300,1571149293,"Code review minor changes (names, comments).",37.0,7.0,"src/ae.c,CAS_DELIMITER,src/ae.h,CAS_DELIMITER,src/connection.c,CAS_DELIMITER,src/connhelpers.h,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",6.0,1.0,1.0,1.8543013968793671,19.0,1457.0,642.0,38.94493248456789,204.5,1.007587253085233,124.0,None,False,,
dd29d441364236992ce89230556526c707c3c960 283d6cfd58600a8c9e90584a67f1ca90d85f5669,b8e02f2b4005febbdaa11ff978c4f98b664464c9,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 16 11:13:12 2019 +0200,1571217192,Merge pull request #5926 from JimB123/unstableAddition of RedisModule_OnUnload hook,,,,,,,,,,,,,,,Merge,False,,
c469f6ad9ee46164eed3b33cf067768132ce5e8f b8e02f2b4005febbdaa11ff978c4f98b664464c9,0db3b0a0ff28a6dfebbc299a5079289ea259d0a0,Yossi Gottlieb,yossigo@gmail.com,Wed Oct 16 17:08:07 2019 +0300,1571234887,Merge remote-tracking branch 'upstream/unstable' into tls,,,,,,,,,,,,,,,Merge,False,,
0db3b0a0ff28a6dfebbc299a5079289ea259d0a0,8e29b0b22b02cd5d5e9a5f51e7c60fa745254578,Yossi Gottlieb,yossigo@gmail.com,Wed Oct 16 17:31:02 2019 +0300,1571236262,Fix Makefile merge issue.,1.0,1.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,321.0,181.0,34.26435185185185,208.0,1.029184850900542,125.0,Corrective,True,,
b8e02f2b4005febbdaa11ff978c4f98b664464c9 8e29b0b22b02cd5d5e9a5f51e7c60fa745254578,efb6495a446a92328512f8a66db701dab95fb933,Salvatore Sanfilippo,antirez@gmail.com,Wed Oct 16 17:42:35 2019 +0200,1571240555,Merge pull request #6236 from yossigo/poc/connsAbstract Connections I/O API & TLS Support,,,,,,,,,,,,,,,Merge,False,,
efb6495a446a92328512f8a66db701dab95fb933,8651e6a10d7f156692c909065ecbe8f0fca5f783,antirez,antirez@gmail.com,Thu Oct 17 17:49:33 2019 +0200,1571327373,"Modules: add new flags to context, replica state + more.",48.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9313043685793764,19.0,3334.0,355.0,47.85432291666667,11848.5,1.0193771763299135,6411.0,None,False,,
8651e6a10d7f156692c909065ecbe8f0fca5f783,97f6e314c130d8d5bc546a7f0c4cb68d28ea3dfb,antirez,antirez@gmail.com,Thu Oct 17 18:10:50 2019 +0200,1571328650,Modules: allow to check for AOF loading client.,19.0,3.0,"src/aof.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.8031333505578773,19.0,2735.0,887.0,17.091793981481484,11851.5,1.0163040291097234,6415.0,None,False,,
97f6e314c130d8d5bc546a7f0c4cb68d28ea3dfb,673c9d702962a5618650108eaf4c5f38bcafe164,antirez,antirez@gmail.com,Thu Oct 17 18:28:34 2019 +0200,1571329714,module: fix propagation API bug.,2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6116.0,262.0,0.012314814814814815,11854.0,82.203007518797,6416.0,None,False,,
c1455dc06025259dc662144f3ca668d88789f9c0 673c9d702962a5618650108eaf4c5f38bcafe164,1ac30300f027c334aa044a6f579562e52f43f26b,Guy Korland,gkorland@gmail.com,Sun Oct 20 09:59:23 2019 +0300,1571554763,Merge branch 'unstable' of github.com:antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1ac30300f027c334aa044a6f579562e52f43f26b,0381f14accb4dda6372a3bce34aafbc7e38baa0c,Guy Korland,gkorland@gmail.com,Sun Oct 20 10:04:25 2019 +0300,1571555065,add CI action,28.0,30.0,".circleci/config.yml,CAS_DELIMITER,.github/pull.yml,CAS_DELIMITER,.github/workflows/ci.yml,CAS_DELIMITER",3.0,2.0,3.0,1.5147239826031005,1.0,10.0,5.0,145.64151234567905,14.0,1.003051746256059,3.0,Feature Addition,False,,
673c9d702962a5618650108eaf4c5f38bcafe164,ed2ba31e4c5de50b17b768b886d7837992d1d9a7,antirez,antirez@gmail.com,Wed Oct 23 18:39:14 2019 +0200,1571848754,Modules: fix moduleCreateArgvFromUserFormat() casting bug.In 32 bit systems casting to long will cut the result to 32 bit.n,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6116.0,263.0,6.007407407407408,11855.0,1.1664611590628853,6417.0,None,False,,
ed2ba31e4c5de50b17b768b886d7837992d1d9a7,3170f63330741b093c8039145ca5d73a2b2e057f,antirez,antirez@gmail.com,Fri Oct 18 18:01:39 2019 +0200,1571414499,Modules hooks: initial design of data structures.,41.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6116.0,264.0,-5.026099537037037,11856.0,0.8010385602929155,6418.0,None,False,,
3170f63330741b093c8039145ca5d73a2b2e057f,bebb2e19947b4e72e2c446d66341aa5492663c79,antirez,antirez@gmail.com,Mon Oct 21 17:16:34 2019 +0200,1571670994,Modules hooks: a first version of events and some API.,120.0,7.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.994581653424978,19.0,3382.5,362.0,3.4655034722222213,11857.5,1.2405639258638892,6420.0,None,False,,
bebb2e19947b4e72e2c446d66341aa5492663c79,d2d74ca0f321a9d22d8fbe64edf83331a7037328,antirez,antirez@gmail.com,Tue Oct 15 19:31:06 2019 +0200,1571160666,Modules: RM_GetClientInfoById() draft.,90.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6991413063352634,19.0,3439.0,364.0,-5.906574074074074,11859.5,0.8730228402125693,6422.0,None,False,,
d2d74ca0f321a9d22d8fbe64edf83331a7037328,6ea8641ae09e3c3c2f4ca65454236f3d05288c5b,antirez,antirez@gmail.com,Wed Oct 16 10:15:55 2019 +0200,1571213755,Modules: add the client ID to the client info structure.,8.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6273.0,267.0,0.6144560185185185,11861.0,2.6274557818003728,6423.0,None,False,,
6ea8641ae09e3c3c2f4ca65454236f3d05288c5b,e9b5484ddd60e6cab26a44a17d3f99a36b1ea361,antirez,antirez@gmail.com,Wed Oct 16 10:18:07 2019 +0200,1571213887,Modules: export GetClientInfoById().,3.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9182958340544896,19.0,3488.0,367.0,0.30875578703703704,11862.5,329.0824286953277,6425.0,None,False,,
e9b5484ddd60e6cab26a44a17d3f99a36b1ea361,21d8544128f8f2db5118b1e660b6f7bc3c1da352,antirez,antirez@gmail.com,Wed Oct 16 10:27:35 2019 +0200,1571214455,Modules: fix RedisModule_GetClientInfoById() example.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6282.0,269.0,0.006574074074074074,11864.0,153.11267605633802,6426.0,None,False,,
21d8544128f8f2db5118b1e660b6f7bc3c1da352,6e56f513b44748fb3fc1b58181d63b1dd700e66d,antirez,antirez@gmail.com,Mon Oct 21 17:28:24 2019 +0200,1571671704,Modules: refactoring of RM_GetClientInfoById().,40.0,30.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6282.0,270.0,5.292233796296296,11865.0,1.1889561267493205,6427.0,None,False,,
6e56f513b44748fb3fc1b58181d63b1dd700e66d,b9af7e24e40506b1e1062901ba686eb124ad3e5d,antirez,antirez@gmail.com,Mon Oct 21 17:51:18 2019 +0200,1571673078,Modules hooks: event firing logic.,88.0,19.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6536265622705767,19.0,3494.5,371.0,2.665306712962963,11866.5,32.53484587020205,6429.0,None,False,,
b9af7e24e40506b1e1062901ba686eb124ad3e5d,1e78681df83570c287a137e7acb0af705ea59ab4,antirez,antirez@gmail.com,Tue Oct 22 10:15:12 2019 +0200,1571732112,Modules hooks: fix a leak and a few more issues.,10.0,22.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6361.0,272.0,0.6832638888888889,11868.0,2.4635633702612054,6430.0,None,False,,
1e78681df83570c287a137e7acb0af705ea59ab4,d54652682da99e373454c08c8c9f2cc7babbb413,antirez,antirez@gmail.com,Tue Oct 22 10:24:50 2019 +0200,1571732690,Modules hooks: handle module unloading + API export.,25.0,5.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.5608251769947302,19.0,3157.0,703.0,1.7910108024691358,11870.0,51.367512631332815,6433.0,None,False,,
d54652682da99e373454c08c8c9f2cc7babbb413,019ac37e9cab6a88c1bfd1efec6e64216c82dad5,antirez,antirez@gmail.com,Tue Oct 22 10:44:18 2019 +0200,1571733858,Modules hooks: fix define / linker issues. Implement one test event.,42.0,37.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,0.8507110806167102,19.0,3099.25,1095.0,16.004215856481487,11873.5,19.5048688228412,6437.0,None,False,,
019ac37e9cab6a88c1bfd1efec6e64216c82dad5,94c50314f18eeb987c458091dd60843d95308426,antirez,antirez@gmail.com,Tue Oct 22 12:48:07 2019 +0200,1571741287,Modules hooks: fix sub event in calls from client change.,4.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2908.0,390.0,0.0859837962962963,11876.0,12.630098263561713,6438.0,None,False,,
94c50314f18eeb987c458091dd60843d95308426,cf52e0ad446638fd4ae64e035c52001a98b1e415,antirez,antirez@gmail.com,Tue Oct 22 13:26:29 2019 +0200,1571743589,Module hooks: fixes and an example module.,70.0,2.0,"src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/hellohook.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,2.0,0.8481427342384988,19.0,1780.25,393.0,53.070798611111094,11878.5,3.223244471162548,6442.0,None,False,,
cf52e0ad446638fd4ae64e035c52001a98b1e415,c379fdbae2d01f0a44ef33e47adfebeaf86a13f8,antirez,antirez@gmail.com,Tue Oct 22 16:50:52 2019 +0200,1571755852,Modules hooks: do more in example client callback.,6.0,1.0,"src/modules/hellohook.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,60.0,1.0,0.14193287037037036,11881.0,8.045584277909157,6443.0,None,False,,
c379fdbae2d01f0a44ef33e47adfebeaf86a13f8,18d1607f5e3a3882c2ffc76ee984ba41ac8d7b3f,antirez,antirez@gmail.com,Tue Oct 22 17:15:22 2019 +0200,1571757322,Modules hooks: document what yet to implement WIP 1.,79.0,8.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.31732389983585857,19.0,3533.5,380.0,0.15894675925925925,11882.5,5.7185611301245185,6445.0,None,False,,
18d1607f5e3a3882c2ffc76ee984ba41ac8d7b3f,db8c9a8520ae4c3cbc8d32173385a0a82a1468aa,antirez,antirez@gmail.com,Tue Oct 22 17:32:39 2019 +0200,1571758359,Modules hooks: document what yet to implement WIP 2.,60.0,15.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6430.0,277.0,0.012002314814814816,11884.0,84.31726133076181,6446.0,None,False,,
db8c9a8520ae4c3cbc8d32173385a0a82a1468aa,8ec2fc3969b5f66fbcab82b7470ac36ec92f2ee9,antirez,antirez@gmail.com,Wed Oct 23 10:14:23 2019 +0200,1571818463,Modules hooks: unify structures definitions.,42.0,25.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8602858652332408,19.0,3591.5,383.0,0.7016493055555555,11885.5,2.075057512172517,6448.0,None,False,,
8ec2fc3969b5f66fbcab82b7470ac36ec92f2ee9,ed833c9f99c01cf2c780a870c91924747ee4450d,antirez,antirez@gmail.com,Wed Oct 23 10:22:46 2019 +0200,1571818966,Modules hooks: implement the FLUSHDB event.,18.0,2.0,"src/db.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",3.0,1.0,1.0,1.278897902987479,19.0,2931.666666666666,623.0,8.647310956790124,11888.0,1.0385562827559531,6451.0,None,False,,
ed833c9f99c01cf2c780a870c91924747ee4450d,bc1ef48e5667d945d920ca8da7dd7f799148991d,antirez,antirez@gmail.com,Wed Oct 23 10:37:04 2019 +0200,1571819824,Modules hooks: FLUSHDB event example.,29.0,0.0,"src/module.c,CAS_DELIMITER,src/modules/hellohook.c,CAS_DELIMITER",2.0,1.0,2.0,0.362051251733998,19.0,3264.5,282.0,0.3751736111111111,11890.5,52.016008517165396,6453.0,None,False,,
bc1ef48e5667d945d920ca8da7dd7f799148991d,89af7e4c859b221959843611af7bd4e0f1bdc49c,antirez,antirez@gmail.com,Wed Oct 23 10:41:55 2019 +0200,1571820115,Modules hooks: select the right DB for FLUSHDB events.,3.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6466.0,281.0,0.003368055555555556,11892.0,297.9072164948454,6454.0,None,False,,
89af7e4c859b221959843611af7bd4e0f1bdc49c,83de18805cbee7df18aa788d153bf5a974cf5f34,antirez,antirez@gmail.com,Wed Oct 23 10:47:39 2019 +0200,1571820459,"Modules hooks: do not re-enter in hooks.Calling a module hook callback may result in callback operations in turnntriggering other events the module is subscribed too. We don't want tontrigger those, it's unsafe and quite confusing, and to do it correcly wenwould need to maintain an event list: quite a more complexnimplementation.n",5.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6469.0,282.0,0.003981481481481482,11893.0,252.1627906976744,6455.0,None,False,,
83de18805cbee7df18aa788d153bf5a974cf5f34,8cccc6b468f4b134964d4500c44486db681311cb,antirez,antirez@gmail.com,Wed Oct 23 10:52:25 2019 +0200,1571820745,Modules hooks: don't call the hook for fake clients.,7.0,3.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2911.0,391.0,0.9196527777777778,11894.0,2.087366910820811,6456.0,None,False,,
8cccc6b468f4b134964d4500c44486db681311cb,61ac2aef2bb4492fc502b9be663bb84c0484b81b,antirez,antirez@gmail.com,Wed Oct 23 11:05:33 2019 +0200,1571821533,"Modules hooks: for nested calls, create new fake clients.We can't use the same client at the same time when re-entering the hook.n",18.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6473.0,283.0,0.012430555555555556,11895.0,81.4469273743017,6457.0,None,False,,
61ac2aef2bb4492fc502b9be663bb84c0484b81b,dddfde85efb93b6365855c97a9b86e1951672a96,antirez,antirez@gmail.com,Wed Oct 23 18:21:57 2019 +0200,1571847717,Modules hooks: fix memory leak in example module.,1.0,0.0,"src/modules/hellohook.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,92.0,3.0,0.3228356481481481,11896.0,4.097551356971284,6458.0,None,False,,
dddfde85efb93b6365855c97a9b86e1951672a96,d3266d516baf7027d9eb6323bec130ea396fb291,antirez,antirez@gmail.com,Wed Oct 23 18:38:30 2019 +0200,1571848710,Modules hooks: test module draft.,82.0,1.0,"tests/modules/Makefile,CAS_DELIMITER,tests/modules/hooks.c,CAS_DELIMITER",2.0,1.0,1.0,0.3744088453489206,19.0,20.0,5.0,10.115399305555558,11897.5,1.0494295860100542,836.0,None,False,,
d3266d516baf7027d9eb6323bec130ea396fb291,7cefbeaad5dc299e9b9e26fbb1f517012756a89a,antirez,antirez@gmail.com,Wed Oct 23 18:51:44 2019 +0200,1571849504,Modules hooks: select DB zero by default.,5.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6487.0,284.0,0.32373842592592594,11899.0,4.08891351757177,6459.0,None,False,,
673c9d702962a5618650108eaf4c5f38bcafe164,be352633a07552d0c3893ffa096b3732347ea378,Oran Agra,oran@redislabs.com,Thu Oct 24 09:45:25 2019 +0300,1571899525,"Make module tests pass with valgrind, and fix a leak in diskless load",36.0,28.0,"src/rdb.c,CAS_DELIMITER,tests/modules/commandfilter.c,CAS_DELIMITER,tests/modules/testrdb.c,CAS_DELIMITER,tests/unit/moduleapi/testrdb.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.3397999247875143,19.0,751.75,266.0,102.95845486111112,265.5,1.0313096695628337,56.0,Corrective,True,,
7cefbeaad5dc299e9b9e26fbb1f517012756a89a,39f2ab595cb4adb7eb964a2317734f8f7d2892b4,antirez,antirez@gmail.com,Thu Oct 24 10:41:25 2019 +0200,1571906485,Modules hooks: initial Tcl test file.,19.0,1.0,"runtest-moduleapi,CAS_DELIMITER,tests/unit/moduleapi/hooks.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.4689955935892812,19.0,8.5,5.0,10.332164351851851,11900.5,1.0483925712922273,837.0,None,False,True,"[""ed2269762b3be6c384025dcf3237b58f10babf03""]"
39f2ab595cb4adb7eb964a2317734f8f7d2892b4,6e98214f740eb04c9761ccb983ba51988ee35bc2,antirez,antirez@gmail.com,Thu Oct 24 10:51:03 2019 +0200,1571907063,Modules hooks: test flush event.,17.0,3.0,"src/module.c,CAS_DELIMITER,tests/modules/hooks.c,CAS_DELIMITER,tests/unit/moduleapi/hooks.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.9219280948873624,19.0,2195.6666666666665,287.0,0.4494212962962963,11903.0,1.9960520305781,839.0,None,False,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,5dd1130272c3496232a71f954eb51845020ff271,antirez,antirez@gmail.com,Thu Oct 24 11:20:15 2019 +0200,1571908815,Remove trailing space from server.c.,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5121.0,340.0,8.79076388888889,11905.0,1.1137557569102672,6461.0,None,False,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,183d264e9e8576b4ab2f087b33f6532f80edc79a,Yossi Gottlieb,yossigo@gmail.com,Wed Oct 23 19:32:35 2019 +0300,1571848355,"Modules: improve tests Makefile.Removes some boilerplate per module, add clean target.n",15.0,24.0,"tests/modules/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,44.0,6.0,-0.004108796296296296,209.0,-242.38028169014092,42.0,None,False,,
673c9d702962a5618650108eaf4c5f38bcafe164,e3b1d6d3ad0d038c717618a77b8850afb5ce5bcd,Oran Agra,oran@redislabs.com,Thu Oct 24 14:24:55 2019 +0300,1571916295,Module API for LatencyAddSample,13.0,2.0,"src/latency.c,CAS_DELIMITER,src/latency.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",4.0,1.0,1.0,1.6049355947431312,19.0,1990.75,444.0,438.72138020833336,269.5,1.0074162938913815,200.0,Feature Addition,False,,
dda8cc182117cd5b164a524a1246e8be33d08f7e 6e98214f740eb04c9761ccb983ba51988ee35bc2,fb1f4f4e7e4a7a1fd5366afe5581ac6613047faf,Wander Hillen,wjw.hillen@gmail.com,Fri Oct 25 10:18:26 2019 +0200,1571991506,Merge branch 'unstable' into minor-typos,,,,,,,,,,,,,,,Merge,False,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,cd02c5944f178ac8252dce2170990768b428dcf3,happynote3966,01ssrmikururudevice01@gmail.com,Fri Oct 25 22:31:55 2019 +0900,1572010315,fix comment typo in redis-cli.c,1.0,1.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,11652.0,359.0,10.046793981481484,0.0,0.0,0.0,Corrective,True,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,cb2ca37f88d811f3af4c2f91c630e4554d90c87e,Carsten Strotmann,carsten@strotmann.de,Fri Oct 25 19:38:45 2019 +0200,1572025125,Typo fix: kill -> still,3.0,4.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1672.0,208.0,17.11226851851852,0.0,0.0,0.0,Corrective,True,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,c74398e130af6983aa7d109a7b19bb9bb2668745,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Jun 8 10:33:37 2018 +0800,1528425217,"Modules: make unloading module more safeAs we know if a module exports module-side data types,nunload it is not allowed. This rule is the same withnblocked clients in module, because we use backgroundnthreads to implement module blocked clients, and it'snnot safe to unload a module if there are backgroundnthreads running. So it's necessary to check if anynblocked clients running in this module when unload it.nnMoreover, after that we can ensure that if no modules,nthen no module blocked clients even module unloaded.nSo, we can call moduleHandleBlockedClients only whennwe have installed modules.n",12.0,1.0,"src/module.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,19.0,5812.0,628.0,-503.32567129629615,168.5,0.9985099965182704,161.0,None,False,,
6e98214f740eb04c9761ccb983ba51988ee35bc2,56a7c455216afee5e2d1820cf6e1dac7cf3457e6,swilly22,roi@redislabs.com,Mon Oct 28 08:50:25 2019 +0200,1572245425,"Introduce ReplyWithVerbatimString, ReplyWithEmptyArray, ReplyWithNullArray and ReplyWithEmptyString to redis module API",54.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6429383500409614,19.0,3627.5,396.0,255.4938541666667,5.5,1.0019643436481067,6.0,None,False,,
6e98214f740eb04c9761ccb983ba51988ee35bc2 c74398e130af6983aa7d109a7b19bb9bb2668745,24fdc87fe0fafe4f9ccb7acdeeac1748e27ed212,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:55:11 2019 +0100,1572252911,Merge pull request #4994 from soloestoy/module-blocked-clientModules: make unloading module more safe,,,,,,,,,,,,,,,Merge,False,,
24fdc87fe0fafe4f9ccb7acdeeac1748e27ed212 56a7c455216afee5e2d1820cf6e1dac7cf3457e6,d07022170720fa4f66858e8df704cf8803c611f0,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:56:56 2019 +0100,1572253016,"Merge pull request #6505 from swilly22/replaywith-module-API-additionsIntroduce ReplyWithVerbatimString, ReplyWithEmptyArray, ReplyWithNullu00e2u0080u00a6",,,,,,,,,,,,,,,Merge,False,,
d07022170720fa4f66858e8df704cf8803c611f0 cb2ca37f88d811f3af4c2f91c630e4554d90c87e,c6c65d9ab3186c2da1744186158b38412baa1244,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:57:19 2019 +0100,1572253039,Merge pull request #6503 from cstrotm/unstableTypo fix: kill -> still,,,,,,,,,,,,,,,Merge,False,,
c6c65d9ab3186c2da1744186158b38412baa1244 cd02c5944f178ac8252dce2170990768b428dcf3,6f2fc34228f9b4698d6b1f63544225f6cd11db18,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:57:43 2019 +0100,1572253063,Merge pull request #6502 from happynote3966/typo-fixfix comment typo in redis-cli.c,,,,,,,,,,,,,,,Merge,False,,
6f2fc34228f9b4698d6b1f63544225f6cd11db18 fb1f4f4e7e4a7a1fd5366afe5581ac6613047faf,e097c99681b97ae55469a30c18380f9157b9e193,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:58:38 2019 +0100,1572253118,Merge pull request #4761 from WJWH/minor-typosFix some minor typos in comments,,,,,,,,,,,,,,,Merge,False,,
e097c99681b97ae55469a30c18380f9157b9e193 e3b1d6d3ad0d038c717618a77b8850afb5ce5bcd,5aab0126763b4547722a315681115c2b40c5ceec,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 09:59:26 2019 +0100,1572253166,Merge pull request #6498 from oranagra/rm_latency_add_sampleModule API for LatencyAddSample,,,,,,,,,,,,,,,Merge,False,,
5aab0126763b4547722a315681115c2b40c5ceec 183d264e9e8576b4ab2f087b33f6532f80edc79a,d2658f83879e80574cb9541cdb50163da24d0782,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 10:00:40 2019 +0100,1572253240,Merge pull request #6493 from yossigo/modules-make-cleanupModules: improve tests Makefile.,,,,,,,,,,,,,,,Merge,False,,
d2658f83879e80574cb9541cdb50163da24d0782 be352633a07552d0c3893ffa096b3732347ea378,c328c807e7cef76db0fcf6fc2a58f62349489458,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 10:05:52 2019 +0100,1572253552,"Merge pull request #6496 from oranagra/module_tests_valgrindMake module tests pass with valgrind, and fix a leak in diskless load",,,,,,,,,,,,,,,Merge,False,,
5dd1130272c3496232a71f954eb51845020ff271 c328c807e7cef76db0fcf6fc2a58f62349489458,8337e083b6e356c938891a1b63c1f9807b647f34,antirez,antirez@gmail.com,Mon Oct 28 11:09:09 2019 +0100,1572257349,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
c328c807e7cef76db0fcf6fc2a58f62349489458,a12f07792f8fc0a96710e22f18752f7bb8f212b9,Oran Agra,oran@redislabs.com,Wed Oct 23 12:08:47 2019 +0300,1571821727,Module API for explicit SignalModifiedKey instead of implicit one.This commit also fixes an uninitialized module struct member (that luckily never got released)n,24.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.7950402793845223,19.0,3654.0,398.0,-4.903912037037037,272.5,0.8470608782670676,202.0,Corrective,True,,
8337e083b6e356c938891a1b63c1f9807b647f34,cfcb475435a9efb3de794e93103b931d16e3a959,antirez,antirez@gmail.com,Mon Oct 28 11:10:58 2019 +0100,1572257458,LOLWUT 6: always pick a default color sequence.,1.0,0.0,"src/lolwut6.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,200.0,6.0,20.702314814814816,11906.0,1.0483037770870138,6462.0,None,False,,
cfcb475435a9efb3de794e93103b931d16e3a959,cee6dead3c66530e8bf0b6cea455e3451d1fd0c7,Guy Benoish,guy.benoish@redislabs.com,Tue Oct 15 12:51:30 2019 +0200,1571136690,"Modules: Allow notifying custom keyspace eventsAlso, add an API for getting server.notify_keyspace_eventsnnOther (unrelated) changes:nAdd RM_GetKeynameFromModuleKeyn",30.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8366407419411673,19.0,3665.5,400.0,-7.928668981481483,30.5,0.9054065692801996,29.0,None,False,,
c328c807e7cef76db0fcf6fc2a58f62349489458,0399b5a27e3a41436fac77bad5a580f396fed365,Oran Agra,oran@redislabs.com,Thu Oct 24 09:38:52 2019 +0300,1571899132,Module api tests for RM_CallAdding a test for coverage for RM_Call in a new misc unitnto be used for various short simple testsnnalso solves compilation warnings in redismodule.h and fork.cn,94.0,4.0,"runtest-moduleapi,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/fork.c,CAS_DELIMITER,tests/modules/misc.c,CAS_DELIMITER,tests/unit/moduleapi/misc.tcl,CAS_DELIMITER",7.0,3.0,4.0,1.9103822581262109,19.0,1071.0,416.0,16.740704365079363,277.0,-0.6426080046645489,60.0,Feature Addition,False,True,"[""060af1858dabc537854c7a9fef302e9ecd9e1ad2""]"
cfcb475435a9efb3de794e93103b931d16e3a959 cee6dead3c66530e8bf0b6cea455e3451d1fd0c7,469a6e5f1a07463d46c7a258a4ea59a8da9348ec,Salvatore Sanfilippo,antirez@gmail.com,Mon Oct 28 12:16:04 2019 +0100,1572261364,Merge pull request #6481 from guybe7/modules_notifyModules: Allow notifying custom keyspace events,,,,,,,,,,,,,,,Merge,False,,
469a6e5f1a07463d46c7a258a4ea59a8da9348ec,43e2a398f9954b889171e1b9b5ecabba021e7c5d,Guy Benoish,guy.benoish@redislabs.com,Mon Oct 28 17:58:07 2019 +0530,1572265687,Fix compilation error introduced by cee6dead3Need to add calls to REDISMODULE_API_FUNC...n,3.0,0.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,762.0,112.0,4.242534722222223,32.0,1.2357081474812783,30.0,Corrective,True,,
469a6e5f1a07463d46c7a258a4ea59a8da9348ec 0399b5a27e3a41436fac77bad5a580f396fed365,90169cdf16709092761777908d27fcb1cf815827,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 29 10:07:05 2019 +0100,1572340025,Merge pull request #6495 from oranagra/rm_call_argvModule api RM_CallArgv and test,,,,,,,,,,,,,,,Merge,False,,
90169cdf16709092761777908d27fcb1cf815827 43e2a398f9954b889171e1b9b5ecabba021e7c5d,94973fd0ebecda08bd142974aeba65965364fb91,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 29 10:07:45 2019 +0100,1572340065,Merge pull request #6508 from guybe7/fix_module_notify_comp_errorFix compilation error introduced by cee6dead3,,,,,,,,,,,,,,,Merge,False,,
94973fd0ebecda08bd142974aeba65965364fb91 0381f14accb4dda6372a3bce34aafbc7e38baa0c,568dfd4b49d4038de780fa44703862523e49e31b,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 29 10:25:34 2019 +0100,1572341134,Merge pull request #6470 from gkorland/CIAdd Github action for CI,,,,,,,,,,,,,,,Merge,False,,
568dfd4b49d4038de780fa44703862523e49e31b a12f07792f8fc0a96710e22f18752f7bb8f212b9,764b420f5fddfe177638828a43c921eb949b140c,Salvatore Sanfilippo,antirez@gmail.com,Tue Oct 29 10:40:22 2019 +0100,1572342022,Merge pull request #6487 from oranagra/module_modified_keyModule API for explicit SignalModifiedKey instead of implicit one.,,,,,,,,,,,,,,,Merge,False,,
764b420f5fddfe177638828a43c921eb949b140c,e978bdf9ef62404083afed28d98e7a455bcecd3b,Oran Agra,oran@redislabs.com,Wed Oct 23 11:53:15 2019 +0300,1571820795,"Module API for controlling LRU and LFU, and OpenKey without TOUCHSome commands would want to open a key without touching it's LRU/LFUnsimilarly to the OBJECT or DEBUG command do.nnOther commands may want to implement logic similar to what RESTOREndoes (and in the future MIGRATE) and get/set the LRU or LFU.n",57.0,6.0,"src/db.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.6837050899724886,19.0,2568.8,1132.0,2.7736087962962963,283.0,10.263002773761043,209.0,Corrective,True,,
764b420f5fddfe177638828a43c921eb949b140c,a0cfd519e3cbbb4c432d25094e4cb202631f131f,Oran Agra,oran@redislabs.com,Tue Oct 29 17:29:06 2019 +0200,1572362946,"test infra: improve prints on failed assertionssometimes we have several assertions with the same condition in the same testnat different stages, and when these fail (the ones that print the conditionntext) you don't know which one it was. other assertions didn't print thencondition text (variable names), just the expected and unexpected values.nnSo now, all assertions print context line, and conditin text.nnbesides, one of the major differences between 'assert' and 'assert_equal',nis that the later is able to print the value that doesn't match the expected.nif there is a rare non-reproducible failure, it is helpful to know what wasnthe value the test encountered and how far it was from the threshold.nnSo now, adding assert_lessthan and assert_range that can be used in some places.nwere we used just 'assert { a > b }' so far.n",33.0,6.0,"tests/support/test.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,18.0,156.0,36.0,42.20591435185185,286.0,1.023693361827526,61.0,Preventative,False,,
764b420f5fddfe177638828a43c921eb949b140c,51c3ff8d75d9c784297ad587a31a37acd89499d8,Oran Agra,oran@redislabs.com,Tue Oct 29 17:59:09 2019 +0200,1572364749,"Modules hooks: complete missing hooks for the initial set of hooks* replication hooks: role change, master link status, replica online/offlinen* persistence hooks: saving, loading, loading progressn* misc hooks: cron loop, shutdown, module loaded/unloadedn* change the way hooks test work, and add tests for all of the abovennstartLoading() now gets flag indicating what is loaded.nstopLoading() now gets an indication of success or failure.nadding startSaving() and stopSaving() with similar args and role.n",737.0,94.0,"src/aof.c,CAS_DELIMITER,src/debug.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/rdb.h,CAS_DELIMITER,src/redis-check-rdb.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/hooks.c,CAS_DELIMITER,tests/unit/moduleapi/hooks.tcl,CAS_DELIMITER",13.0,2.0,3.0,2.787428456681916,19.0,2117.3846153846152,2445.0,65.87562767094016,293.0,1.011235553957878,63.0,None,False,True,"[""ed2269762b3be6c384025dcf3237b58f10babf03""]"
764b420f5fddfe177638828a43c921eb949b140c,5eb2290f68891b468406355885ca7859bbe9f30f,Jamie Scott,jamie@redislabs.com,Tue Oct 29 15:10:07 2019 -0700,1572387007,Add no-slowlog to acl command to prevent passwordsAdding no-slowlog to acl command to prevent acl passwords from showing in slowlog,1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,5130.0,343.0,0.25761574074074073,0.0,0.0,0.0,Feature Addition,False,,
cfcb475435a9efb3de794e93103b931d16e3a959,3649568ff22dbb6ea3e26c722d115ba5635547ae,antirez,antirez@gmail.com,Wed Oct 30 10:11:58 2019 +0100,1572426718,Modules: block on keys functions layout and mechanism.,104.0,17.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6750.0,294.0,0.7172337962962962,11907.0,2.3942455098517,6463.0,None,False,,
3649568ff22dbb6ea3e26c722d115ba5635547ae,fb6110ac2062a548aa79c9bb5f11e3fa10e71ba2,antirez,antirez@gmail.com,Wed Oct 30 10:20:28 2019 +0100,1572427228,Modules: block on keys: export APIs.,15.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.8366407419411673,19.0,3840.0,410.0,0.3645196759259259,11908.5,86.39171638745512,6465.0,None,False,,
fb6110ac2062a548aa79c9bb5f11e3fa10e71ba2,215b72c0ba1f42d15dcfe6fa60abb414275296ba,antirez,antirez@gmail.com,Wed Oct 30 10:57:44 2019 +0100,1572429464,Modules: block on keys: implement the internals.,78.0,8.0,"src/blocked.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.0777689060383435,19.0,3303.666666666666,682.0,18.25211805555556,11911.0,1.0184345341206062,6468.0,None,False,,
215b72c0ba1f42d15dcfe6fa60abb414275296ba,228bc89ecbeeb61ee2a37ba7bd5f565cb5a78f63,antirez,antirez@gmail.com,Thu Oct 31 10:30:54 2019 +0100,1572514254,Modules: block on keys: example on hellotype.c.,68.0,0.0,"src/modules/hellotype.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,286.0,9.0,847.0427662037036,11913.0,1.001180577935258,6469.0,None,False,,
228bc89ecbeeb61ee2a37ba7bd5f565cb5a78f63,4534960b293d41fd5193c1d8a51a19453c2aabf6,antirez,antirez@gmail.com,Thu Oct 31 10:32:59 2019 +0100,1572514379,Modules: remove spurious call from moduleHandleBlockedClients().Now we handle propagation when we free the context.n,0.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6886.0,297.0,0.9828125,11914.0,2.0174880763116056,6470.0,None,False,,
4534960b293d41fd5193c1d8a51a19453c2aabf6,91f4bdc9f9d80ba7431f093cb58b6c49f4021d0b,antirez,antirez@gmail.com,Thu Oct 31 11:35:05 2019 +0100,1572518105,"Modules: block on keys: use a better interface.Using the is_key_ready() callback plus the reply callback later, createsndifferent issues AFAIK:nn1. More complex API.n2. We need to call the reply callback() ASAP if the is_key_ready()ninterface returned success, however the internals do not work in thatnway, so when the reply callback is called the setup could be different.nTo fix that, there is to break the current design that handles thenunblocked clients asyncrhonously, and run the list ASAP.n",65.0,45.0,"src/blocked.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/hellotype.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,2.0,1.3338982886834083,19.0,2236.2,812.0,0.6382777777777778,11917.0,1.7166437625099984,6475.0,None,False,,
91f4bdc9f9d80ba7431f093cb58b6c49f4021d0b,629081f839498734d3426d71653619d4f9e93dc9,antirez,antirez@gmail.com,Thu Oct 31 11:43:45 2019 +0100,1572518625,Modules: block on keys: fix the top comments.,23.0,18.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6901.0,299.0,0.0060185185185185185,11920.0,167.15384615384616,6476.0,None,False,,
629081f839498734d3426d71653619d4f9e93dc9,66f55bc5c15d72542983f37c6c1b48b0c1618917,antirez,antirez@gmail.com,Thu Oct 31 12:23:55 2019 +0100,1572521035,Modules: block on keys: fix bugs in processing order.,23.0,0.0,"src/blocked.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER",2.0,1.0,1.0,0.8865408928220899,19.0,3784.0,355.0,0.030902777777777782,11921.5,23.833914944203702,6478.0,None,False,,
66f55bc5c15d72542983f37c6c1b48b0c1618917,37bf3e18cbc4db5538940ac4a6006627122e1c17,antirez,antirez@gmail.com,Thu Oct 31 12:31:22 2019 +0100,1572521482,Modules: block ok keys: improve example.,8.0,0.0,"src/modules/hellotype.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,354.0,11.0,0.03908564814814815,11923.0,26.584838614154574,6479.0,None,False,,
764b420f5fddfe177638828a43c921eb949b140c,9f32d0eed2695422c828eeeebf8f695285022ef7,Itamar Haber,itamar@redislabs.com,Thu Oct 31 15:45:52 2019 +0200,1572529552,Ommits  from redis-cli's history,6.0,2.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,11652.0,360.0,6.0096875,83.0,1.1663980032239614,80.0,None,False,,
37bf3e18cbc4db5538940ac4a6006627122e1c17,825adcf3f5775271583ebe4df0ba92fd8f9c821b,antirez,antirez@gmail.com,Thu Oct 31 17:38:58 2019 +0100,1572539938,Modules: block on keys: finish implementing RM_UnblockClient().,14.0,5.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6913.0,301.0,0.21878472222222226,11924.0,5.570703063005872,6480.0,None,False,,
825adcf3f5775271583ebe4df0ba92fd8f9c821b,dd5feec5e81288950784740ad23d9dc13b7df9a2,antirez,antirez@gmail.com,Thu Oct 31 17:45:07 2019 +0100,1572540307,Modules: block on keys: fix stale comment.,3.0,2.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,678.0,56.0,0.2230555555555556,11925.0,5.483188044831881,6481.0,None,False,,
dd5feec5e81288950784740ad23d9dc13b7df9a2 764b420f5fddfe177638828a43c921eb949b140c,1ee195d25514abe77f0d38ae681da9c923de408f,antirez,antirez@gmail.com,Thu Oct 31 17:55:18 2019 +0100,1572540918,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
1ee195d25514abe77f0d38ae681da9c923de408f,fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,antirez,antirez@gmail.com,Thu Oct 31 18:07:33 2019 +0100,1572541653,"Modules: fix thread safe context creation crash.See #6525, this likely creates a NULL deference if the client wasnterminated by Redis between the creation of the blocked client and thencreation of the thread safe context.n",1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,6922.0,302.0,0.01984953703703704,11926.0,51.37900874635569,6482.0,None,False,,
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,4d580438b0ce8b3e02213a01f892a34f36cde144,Oran Agra,oran@redislabs.com,Sun Nov 3 15:02:25 2019 +0200,1572786145,Add module api for looking into INFO fields- Add RM_GetServerInfo and friendsn- Add auto memory for new opaque structn- Add tests for new APIsnnother minor fixes:n- add const in various char pointersn- requested_section in modulesCollectInfo was actually not sds but char*n- extract new string2d out of getDoubleFromObject for code reusennAdd module API forn,220.0,14.0,"src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",9.0,2.0,3.0,2.209693877171523,19.0,1977.7777777777771,1326.0,87.24761445473251,304.0,1.0641261390426446,65.0,Corrective,True,True,"[""04233097688ee35d451c6f5cd64c28e57ca81b53""]"
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,779aebc91cd8d3043ab172e0bc5b8c988df88e33,Oran Agra,oran@redislabs.com,Sun Nov 3 16:42:31 2019 +0200,1572792151,"Module API for loading and saving long doublelooks like each platform implements long double differently (different bit count)nso we can't save them as binary, and we also want to avoid creating a new RDBnformat version, so we save these are hex strings using %La.nnThis commit includes a change in the arguments of ld2string to support this.nas well as tests for coverage and short reads.nncoded by @guybe7n",86.0,29.0,"src/module.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/t_hash.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER,tests/modules/testrdb.c,CAS_DELIMITER",8.0,2.0,2.0,2.02936789163232,19.0,1783.25,1105.0,9.723324652777778,312.5,2.879117486202804,66.0,Feature Addition,False,,
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,87332ce524e30d4949d2144a4da15b5ae17e5051,Oran Agra,oran@redislabs.com,Sun Nov 3 17:35:35 2019 +0200,1572795335,"Module API for PUBLISH, FLUSHALL, RANDOMKEY, DBSIZE",69.0,20.0,"src/db.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.467419983628028,19.0,2992.0,1000.0,2.864866898148148,318.5,1.0880928633076006,238.0,None,False,,
4d580438b0ce8b3e02213a01f892a34f36cde144,deebed23e16c2cab9e0362e94bca8545d6e33596,Oran Agra,oran@redislabs.com,Mon Nov 4 07:57:52 2019 +0200,1572847072,Adding RM_ServerInfoGetFieldC,27.0,8.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.6402626506038278,19.0,2035.25,434.0,0.6519907407407408,322.5,1.853490593099964,68.0,Feature Addition,False,True,"[""04233097688ee35d451c6f5cd64c28e57ca81b53""]"
deebed23e16c2cab9e0362e94bca8545d6e33596,04233097688ee35d451c6f5cd64c28e57ca81b53,Oran Agra,oran@redislabs.com,Mon Nov 4 08:50:29 2019 +0200,1572850229,Add RM_ServerInfoGetFieldUnsignedrename RM_ServerInfoGetFieldNumerical RM_ServerInfoGetFieldSignednmove string2ull to util.cnfix leak in RM_GetServerInfo when duplicate info fields existn,66.0,28.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER,src/util.c,CAS_DELIMITER,src/util.h,CAS_DELIMITER,tests/modules/infotest.c,CAS_DELIMITER,tests/unit/moduleapi/infotest.tcl,CAS_DELIMITER",7.0,2.0,3.0,2.3875746707849648,19.0,1667.2857142857142,693.0,3.778678902116402,328.0,6.892007958231969,70.0,Corrective,True,,
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,b81f486c2f0d9f8ae14fc7c0568ba59e629995d6,Guy Benoish,guy.benoish@redislabs.com,Thu Mar 29 17:46:13 2018 +0700,1522320373,Modules: Test RedisModule_BlockClientOnKeys,349.0,1.0,"runtest-moduleapi,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/blockonkeys.c,CAS_DELIMITER,tests/unit/moduleapi/blockonkeys.tcl,CAS_DELIMITER",4.0,2.0,3.0,0.8945351627505921,20.0,15.25,15.0,-286.91411458333334,34.5,0.9989108238873023,4.0,None,False,,
51c3ff8d75d9c784297ad587a31a37acd89499d8 fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,da44c548977dc2ce5bb0bd8c9d77a1c84b609e6b,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 10:37:06 2019 +0100,1572860226,Merge branch 'unstable' into module_hooks,,,,,,,,,,,,,,,Merge,False,,
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d da44c548977dc2ce5bb0bd8c9d77a1c84b609e6b,dcc4347c53cc31a8f0f63f68bfcc5e46490024fc,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 10:37:16 2019 +0100,1572860236,Merge pull request #6514 from oranagra/module_hooksModules hooks: complete missing hooks for the initial set of hooks,,,,,,,,,,,,,,,Merge,False,,
dcc4347c53cc31a8f0f63f68bfcc5e46490024fc b81f486c2f0d9f8ae14fc7c0568ba59e629995d6,23c681b51dc62bccd5b86d31a135ec21062872b5,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 10:53:59 2019 +0100,1572861239,Merge pull request #6535 from guybe7/module_block_on_keys_testsModules: Test RedisModule_BlockClientOnKeys,,,,,,,,,,,,,,,Merge,False,,
23c681b51dc62bccd5b86d31a135ec21062872b5 87332ce524e30d4949d2144a4da15b5ae17e5051,327cb45ed5a0c7cc4f6dd22676519856cc23eaa7,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 11:02:37 2019 +0100,1572861757,"Merge pull request #6532 from oranagra/rm_misc_commandsModule API for PUBLISH, FLUSHALL, RANDOMKEY, DBSIZE",,,,,,,,,,,,,,,Merge,False,,
e978bdf9ef62404083afed28d98e7a455bcecd3b 327cb45ed5a0c7cc4f6dd22676519856cc23eaa7,18b62a51e290f25fdb35405ce1c47ef686f38ee7,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 11:04:49 2019 +0100,1572861889,Merge branch 'unstable' into module_lru_lfu,,,,,,,,,,,,,,,Merge,False,,
327cb45ed5a0c7cc4f6dd22676519856cc23eaa7 18b62a51e290f25fdb35405ce1c47ef686f38ee7,720d1fd3bbe47f6c19ff31924600e7de13430e15,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 11:05:08 2019 +0100,1572861908,"Merge pull request #6486 from oranagra/module_lru_lfuModule API for controlling LRU and LFU, and OpenKey without TOUCH",,,,,,,,,,,,,,,Merge,False,,
8ea4bdd91d600aa1e9e1ebf7dace19172a7ce23a 720d1fd3bbe47f6c19ff31924600e7de13430e15,3f14bfd809e1aba63ec3ffc852ca7b169f993aff,Loris Cro,kappaloris@gmail.com,Mon Nov 4 16:12:09 2019 +0100,1572880329,Merge pull request #1 from antirez/unstableupdate to latest unstable,,,,,,,,,,,,,,,Merge,False,,
3f14bfd809e1aba63ec3ffc852ca7b169f993aff,b12d2f65d660b4139b322af90b6ef60ed267210b,Loris Cro,kappaloris@gmail.com,Mon Nov 4 16:36:06 2019 +0100,1572881766,fix unreported overflow in autogerenared stream IDs,19.0,10.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7355085815538398,19.0,1473.0,209.0,12.728825231481485,0.5,0.5196404613508,0.0,Corrective,True,,
720d1fd3bbe47f6c19ff31924600e7de13430e15 779aebc91cd8d3043ab172e0bc5b8c988df88e33,bbdbfabf9e73aa8af660aa9f7243fec714a2895b,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 17:33:35 2019 +0100,1572885215,Merge pull request #6531 from oranagra/rm_save_long_doubleModule API for loading and saving long double,,,,,,,,,,,,,,,Merge,False,,
bbdbfabf9e73aa8af660aa9f7243fec714a2895b b12d2f65d660b4139b322af90b6ef60ed267210b,576a7b8cafe0c9eef1afbc16f8dc85aee25dc92f,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 17:37:28 2019 +0100,1572885448,Merge pull request #6539 from kristoff-it/unstablefix unreported overflow in autogerenared stream IDs,,,,,,,,,,,,,,,Merge,False,,
720d1fd3bbe47f6c19ff31924600e7de13430e15,3adf10b8095475e2170831e036f67e6b2c9c6bdb,Oran Agra,oran@redislabs.com,Mon Nov 4 19:30:31 2019 +0200,1572888631,"Test coverage for new module APIs: dbsize, flushall, randomkey, lru get/set",88.0,0.0,"tests/modules/misc.c,CAS_DELIMITER,tests/unit/moduleapi/misc.tcl,CAS_DELIMITER",2.0,1.0,2.0,0.7526269564427315,19.0,37.0,2.0,11.452534722222225,332.5,1.0654876861927096,72.0,Feature Addition,False,,
576a7b8cafe0c9eef1afbc16f8dc85aee25dc92f,60ec2b78b3bd5905dd1405f2f8dfa94b1ec97d75,artix,artix2@gmail.com,Thu Oct 31 16:51:30 2019 +0100,1572537090,Start support for long double in modulesNew API:nn- RedisModule_StringToLongDoublen- RedisModule_CreateStringFromLongDoublen- RedisModule_ReplyWithLongDoublen,46.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.5586293734521992,19.0,3997.0,430.0,-3.6242939814814816,126.5,0.7930631444821629,121.0,Feature Addition,False,True,"[""060af1858dabc537854c7a9fef302e9ecd9e1ad2""]"
60ec2b78b3bd5905dd1405f2f8dfa94b1ec97d75,060af1858dabc537854c7a9fef302e9ecd9e1ad2,artix,artix2@gmail.com,Mon Nov 4 18:04:35 2019 +0100,1572887075,"Fix RedisModule_ReplyWithLongDouble ptr definition, add tests",45.0,2.0,"src/redismodule.h,CAS_DELIMITER,tests/modules/misc.c,CAS_DELIMITER,tests/unit/moduleapi/misc.tcl,CAS_DELIMITER",3.0,2.0,3.0,0.735721526785482,19.0,348.0,127.0,1.3382445987654321,129.0,1.2479734716111246,5.0,Corrective,True,,
060af1858dabc537854c7a9fef302e9ecd9e1ad2,a68c19df6c884af6dfbc198bde75878ef741faf9,artix,artix2@gmail.com,Mon Nov 4 18:12:03 2019 +0100,1572887523,RM_CreateStringFromLongDouble: use new ld2string 'mode' type,6.0,1.0,"src/module.c,CAS_DELIMITER,tests/modules/misc.c,CAS_DELIMITER",2.0,2.0,2.0,0.9852281360342516,19.0,3660.0,312.0,2.030561342592593,131.5,1.2463947254923342,6.0,Feature Addition,False,,
576a7b8cafe0c9eef1afbc16f8dc85aee25dc92f 3adf10b8095475e2170831e036f67e6b2c9c6bdb,a15a5d70976cc185389b0d515265b443e5a3a0f3,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 4 18:52:31 2019 +0100,1572889951,"Merge pull request #6540 from oranagra/simple_module_api_testsTest coverage for new module APIs: dbsize, flushall, randomkey, lru get/set",,,,,,,,,,,,,,,Merge,False,,
a15a5d70976cc185389b0d515265b443e5a3a0f3,5350e7669e9dfe7b2b4bcf663171920c441c19e1,Yossi Gottlieb,yossigo@gmail.com,Mon Jul 11 16:47:37 2016 +0300,1468244857,Add ModuleDataType to/from string serialization.Add two new functions that leverage the RedisModuleDataType mechanismnfor RDB serialization/deserialization and make it possible to use itnto/from arbitrary strings:nn* RM_SaveDataTypeToString()n* RM_LoadDataTypeFromString()n,250.0,1.0,"runtest-moduleapi,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/datatype.c,CAS_DELIMITER,tests/unit/moduleapi/datatype.tcl,CAS_DELIMITER",6.0,3.0,4.0,1.4401122723536135,20.0,1350.6666666666667,451.0,-612.337800925926,212.5,0.9994522105006428,45.0,Feature Addition,False,True,"[""a37cca36441abe697e884651a5558c4650534381""]"
fdaea2a7a7eed1499f46bb98552f8d8bb8dc7e9d,e542132b07a76c73cd5e1dd067671afbb4c53fe6,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Mon Nov 4 20:32:19 2019 +0800,1572870739,"expires: refactoring judgment about whether a key is expiredCalling lookupKey*() many times to search a key in one commandnmay get different result.nnThat's because lookupKey*() calls expireIfNeeded(), and deletenthe key when reach the expire time. So we can get an robj beforenthe expire time, but a NULL after the expire time.nnThe worst is that may lead to Redis crash, for examplen`RPOPLPUSH foo foo` the first time we get a list form `foo` andnhold the pointer, but when we get `foo` again it's expired andndeleted. Now we hold a freed memory, when execute rpoplpushHandlePush()nredis crash.nnTo fix it, we can refactor the judgment about whether a key is expired,nusing the same basetime `server.cmd_start_mstime` instead of callingnmstime() everytime.n",3.0,1.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.5,19.0,3061.0,923.0,0.9081867283950616,171.0,1.6842887578619916,164.0,None,False,,
e542132b07a76c73cd5e1dd067671afbb4c53fe6,824f5f0b7a1f32a6e6abf3d355d523d2c6e7bf09,antirez,antirez@gmail.com,Tue Nov 5 10:14:34 2019 +0100,1572945274,"Update PR #6537 patch to for generality.After the thread in #6537 and thanks to the suggestions received, thisncommit updates the original patch in order to:nn1. Solve the problem of updating the time in multiple places by updatingnit in call().n2. Avoid introducing a new field but use our cached time.nnThis required some minor refactoring to the function updating the time,nand the introduction of a new cached time in microseconds in order tonuse less gettimeofday() calls.n",34.0,19.0,"src/db.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.3549245204815676,19.0,2932.75,1188.0,2.326765046296296,11928.5,1.3792376129354311,6486.0,None,False,,
824f5f0b7a1f32a6e6abf3d355d523d2c6e7bf09,8b2c0f90442c0646d7265ef150dd5afa3172b86e,antirez,antirez@gmail.com,Wed Nov 6 09:57:29 2019 +0100,1573030649,"Update PR #6537: use a fresh time outside call().One problem with the solution proposed so far in #6537 is that keynlookups outside a command execution via call(), still used a cachedntime. The cached time needed to be refreshed in multiple places,nespecially because of modules callbacks from timers, cluster bus, andnthread safe contexts, that may use RM_Open().nnIn order to avoid this problem, this commit introduces the ability tondetect if we are inside call(): this way we can use the reference fixedntime only when we are in the context of a command execution or Luanscript, but for the asynchronous lookups, we can still use mstime() tonget a fresh time reference.n",27.0,7.0,"src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.9363790159392478,19.0,3066.666666666666,929.0,0.9881365740740741,11932.0,1.6184480234260616,6489.0,None,False,True,"[""ce03d6833213901c95e0b5961b555744d3815bd2""]"
a15a5d70976cc185389b0d515265b443e5a3a0f3,089ee5979d1b3d36dad57cecaf444b0dfc00db31,meir@redislabs.com,meir@redislabs.com,Wed Aug 28 18:08:07 2019 +0300,1567004887,"expose used memory via redismodule apiThe exposed functions:n1. RedisModule_GetUsedMemoryPercentage - return the used memoryn2. RedisModue_MallocSize - return for a given pointer, the amount of memory allocated for this pointern",26.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6193821946787638,20.0,4050.0,436.0,1143.055902777778,0.5,0.5002187119627242,1.0,None,False,,
089ee5979d1b3d36dad57cecaf444b0dfc00db31,aded138a591fea32ebf0444dd2d217fc3bde7f2d,meir@redislabs.com,meir@redislabs.com,Wed Nov 6 11:25:21 2019 +0200,1573032321,return value between 0 to 100 instead of 0 to 1.,2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,7236.0,312.0,69.7619675925926,2.0,1.0143344580795075,2.0,None,False,True,"[""e45239e3501edfa7012955a76536dff98c87e2a5""]"
aded138a591fea32ebf0444dd2d217fc3bde7f2d,c032dc45d1945db248af32f024ce457e9c94e083,meir@redislabs.com,meir@redislabs.com,Wed Nov 6 12:17:09 2019 +0200,1573035429,changed GetUsedMemoryPresentage -> GetUsedMemoryRatio and return value between 0 and 1.,5.0,5.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.9709505944546686,20.0,4063.0,439.0,34.91695601851852,3.5,14.906773744815393,4.0,None,False,,
a15a5d70976cc185389b0d515265b443e5a3a0f3,1833d008b3af8628835b5f082c5b4b1359557893,Guy Benoish,guy.benoish@redislabs.com,Wed Nov 6 15:48:46 2019 +0530,1573035526,"Support streams in general module API functionsFixes GitHub issue #6492nAdded stream support in RM_KeyType and RM_ValueLength.nAlso moduleDelKeyIfEmpty was updated, even though it hasnno effect now (It will be relevant when stream type directnAPI will be coded - i.e. RM_StreamAdd)n",12.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER",4.0,1.0,1.0,1.6143308351592656,20.0,2694.0,650.0,7.865217013888889,38.5,335.0369877654398,34.0,Corrective,True,,
c032dc45d1945db248af32f024ce457e9c94e083,e45239e3501edfa7012955a76536dff98c87e2a5,meir@redislabs.com,meir@redislabs.com,Wed Nov 6 12:26:03 2019 +0200,1573035963,fix documentation,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,7239.0,315.0,0.0050578703703703706,5.0,198.7116704805492,5.0,Corrective,True,,
8b2c0f90442c0646d7265ef150dd5afa3172b86e a15a5d70976cc185389b0d515265b443e5a3a0f3,0f026af185e918a9773148f6ceaa1b084662be88,antirez,antirez@gmail.com,Wed Nov 6 17:44:42 2019 +0100,1573058682,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
0f026af185e918a9773148f6ceaa1b084662be88,9593ffde2ed92af512c5d33a2e8e6b9fed516d8c,Patrick Valsecchi,patrick@thus.ch,Thu Nov 7 08:49:19 2019 +0100,1573112959,"Redis sentinel kill pubsub client connections as wellWhen a redis instance becomes a slave, sentinel also kills pubsubnclients.nnCloses #6545n",15.0,5.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,4557.0,259.0,22.80887731481481,0.0,0.0,0.0,None,False,,
0f026af185e918a9773148f6ceaa1b084662be88,7059eceeb027d9ffb7cf9ae47201c8554d6e5010,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 8 19:06:51 2019 +0800,1573211211,expires & blocking: handle ready keys as call(),5.0,0.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,679.0,57.0,7.765092592592592,173.0,1.1287814650084065,165.0,None,False,True,"[""b42466b92586d1adfeec54bda14d4ad54b0764d6"", ""ce03d6833213901c95e0b5961b555744d3815bd2""]"
a15a5d70976cc185389b0d515265b443e5a3a0f3,02f21113ab6c61d2c01544607b464eb501dbe8fa,Oran Agra,oran@redislabs.com,Sun Nov 10 09:21:19 2019 +0200,1573370479,"fix leak in module api rdb testrecently added more reads into that function, if a later read fails, i mustneither free what's already allocated, or return the pointer so that the freencallback will release it.n",4.0,1.0,"tests/modules/testrdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,255.0,4.0,6.693611111111113,334.0,1.1493961903971448,73.0,Corrective,True,True,"[""5661b190055b5feef3da0a211e316f57317f55aa""]"
a15a5d70976cc185389b0d515265b443e5a3a0f3,28c20b4ef95aa5f74b938681a6f78f6b92dec2a8,Oran Agra,oran@redislabs.com,Sun Nov 10 09:04:39 2019 +0200,1573369479,"rename RN_SetLRUOrLFU -> RM_SetLRU and RN_SetLFU- the API name was odd, separated to two apis one for LRU and one for LFUn- the LRU idle time was in 1 second resolution, which might be ok for RDBn  and RESTORE, but i think modules may need higher resolutionn- adding tests for LFU and for handling maxmemory policy mismatchn",141.0,44.0,"src/cluster.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/object.c,CAS_DELIMITER,src/rdb.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/misc.c,CAS_DELIMITER,tests/unit/moduleapi/misc.tcl,CAS_DELIMITER",8.0,2.0,3.0,2.091302715515551,20.0,2562.125,1779.0,14.663434606481482,338.5,1.0101416545809216,75.0,Feature Addition,False,,
0f026af185e918a9773148f6ceaa1b084662be88,960c25ac0af08b9a7ccf3f64fc9b7ee5dc58732d,David Carlier,devnexen@gmail.com,Mon Nov 11 13:06:08 2019 +0000,1573477568,Add missing header,1.0,0.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,2440.0,341.0,1.2510300925925926,25.0,1.7993412835718714,25.0,Feature Addition,False,,
0f026af185e918a9773148f6ceaa1b084662be88,11c6ce812aa32cf6a6011697cbfe8881ff9450fa,meir@redislabs.com,meir@redislabs.com,Thu Oct 17 15:37:01 2019 +0300,1571315821,"Added scan implementation to module api.The implementation expose the following new functions:n1. RedisModule_CursorCreate - allow to create a new cursor object fornkeys scanningn2. RedisModule_CursorRestart - restart an existing cursor to restart thenscann3. RedisModule_CursorDestroy - destroy an existing cursorn4. RedisModule_Scan - scan keysnnThe RedisModule_Scan function gets a cursor object, a callback and void*n(used as user private data).nThe callback will be called for each key in the database proving the keynname and the value as RedisModuleKey.n",215.0,12.0,"runtest-moduleapi,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/scan.c,CAS_DELIMITER,tests/unit/moduleapi/scan.tcl,CAS_DELIMITER",6.0,3.0,4.0,1.5686385593497558,21.0,1369.8333333333333,465.0,389.7272608024691,8.5,1.0006415921242406,2.0,Feature Addition,False,,
11c6ce812aa32cf6a6011697cbfe8881ff9450fa,0f8692b4646013b7d98d4b21f86da0686546d43a,Oran Agra,oran@redislabs.com,Mon Nov 11 13:30:37 2019 +0200,1573471837,"Add RM_ScanKey to scan hash, set, zset, changes to RM_Scan API- Adding RM_ScanKeyn- Adding tests for RM_ScanKeyn- Refactoring RM_Scan APInnChanges in RM_Scann- cleanup in docs and coding conventionn- Moving out of experimantal Apin- Adding ctx to scan callbackn- Dont use cursor of -1 as an indication of done (can be a valid cursor)n- Set errno when returning 0 for various reasonsn- Rename Cursor to ScanCursorn- Test filters key that are not strings, and opens a key if NULLn",323.0,107.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/scan.c,CAS_DELIMITER,tests/unit/moduleapi/scan.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.5131407373381156,21.0,2088.75,450.0,24.953888888888887,344.5,1.0208718302647104,77.0,Feature Addition,False,,
0f026af185e918a9773148f6ceaa1b084662be88,0bc3dab0954e481b882a722f768ec0a5a7f725ae,Oran Agra,oran@redislabs.com,Sun Nov 10 09:38:50 2019 +0200,1573371530,"Adjustments for active defrag defaults and tuningReduce default minimum effort, so that when fragmentation is just detected,nthe impact on the latency will be minor.nnReduce the default maximum effort, mainly to prevent a case were a suddennmassive deletions, won't trigger an aggressive defrag that will cause latency.nnWhen activedefrag is disabled mid-run, reset the 'running' info field, andnclear the scan cursor, so that when it'll be re-enabled, a new fresh scan willnstart.nnClearing the 'running' variable is important since lowering the defraggerntunables mid-scan won't help, the defragger only considers new threshold whenna new scan starts, and during a scan it can only become more aggressive,n(when more severe fragmentation is detected), it'll never go less aggressive.nSo by temporarily disabling activedefrag, one can lower th the tunables.nnRemoving the experimantal warning.n",41.0,27.0,"redis.conf,CAS_DELIMITER,src/defrag.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,2.0,2.0,1.3784188527203236,20.0,2599.25,915.0,13.291252893518514,348.5,1.0302970042554107,256.0,Feature Addition,False,,
0f026af185e918a9773148f6ceaa1b084662be88,253d9d6d12c5a19ae8faa7632068772845b4a552,u00e5u0096u009cu00e6u00acu00a2u00e5u0085u00b0u00e8u008au00b1u00e5u00b1u00b1u00e4u00b8u0098,csharpwz@outlook.com,Wed Nov 13 10:14:45 2019 +0800,1573611285,Update adlist.hUpdate listGetFree keep format consistent,1.0,1.0,"src/adlist.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,95.0,6.0,924.5479861111113,0.0,0.0,0.0,None,False,,
0f026af185e918a9773148f6ceaa1b084662be88,4a12047c61570ec3a4dbf9513b0881b41b224399,Guy Benoish,guy.benoish@redislabs.com,Wed Nov 13 16:43:07 2019 +0530,1573643587,"XADD with ID 0-0 stores an empty keyCalling XADD with 0-0 or 0 would result in creating annempty key and storing it in the database.nEven worse, because XADD will reply with error the actionnwill not be replicated, creating a master-replicaninconsistencyn",14.0,0.0,"src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9852281360342516,20.0,1480.5,212.0,7.9275578703703715,41.5,1.102581066575448,5.0,Feature Addition,False,True,"[""936e01e5bb286d9a8701b2d71d8e90f5b7168475""]"
0f026af185e918a9773148f6ceaa1b084662be88,9c76875f413190a547244e72a3f9e9bbeb6811e9,Yossi Gottlieb,yossigo@gmail.com,Fri Jun 23 10:29:49 2017 +0300,1498202989,"Add RM_ModuleTypeReplaceValue.This is a light-weight replace function, useful for use cases such asnrealloc()ing an existing value, etc.  Using RM_ModuleTypeSetValue() innsuch cases is wasteful and complex as it attempts to delete the oldnvalue, call its destructor, etc.n",30.0,1.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.345117314944953,21.0,4207.5,450.0,-871.1672222222223,216.5,0.9991390860665224,129.0,Feature Addition,False,,
0f026af185e918a9773148f6ceaa1b084662be88,2d30afc45fac6d0dcb0e5e12ebdf197d4c77649a,Oran Agra,oran@redislabs.com,Thu Nov 14 09:09:10 2019 +0200,1573715350,"module docs, missing LOADING flag",2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7534.0,320.0,873.9856597222223,351.0,1.0011441835330774,257.0,Non Functional,False,,
0f026af185e918a9773148f6ceaa1b084662be88,c426bbf3a54939775fceac1a318f2fa22778ee08,Oran Agra,oran@redislabs.com,Thu Nov 14 09:46:46 2019 +0200,1573717606,Slightly more efficient RM_ReplyWithEmptyStringtrimming talk about RESP protocol from API docs (should be independent to that anyway)n,2.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7536.0,321.0,0.02611111111111112,352.0,39.29787234042553,258.0,Non Functional,False,,
0f026af185e918a9773148f6ceaa1b084662be88,8d50a8327e9f77f70ac7c11edd41a74a193ed830,antirez,antirez@gmail.com,Thu Nov 14 12:48:54 2019 +0100,1573732134,Rax library updated.,2.0,1.0,"src/rax.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,1944.0,14.0,39.0371875,11934.0,1.0256165995565123,6490.0,None,False,,
8d50a8327e9f77f70ac7c11edd41a74a193ed830,2f6fe5ce3adb84cfc7506577c49504a8a65aaf2b,antirez,antirez@gmail.com,Thu Nov 14 18:27:37 2019 +0100,1573752457,Expire cycle: introduce the new state needed for the new algo.,11.0,3.0,"src/db.c,CAS_DELIMITER,src/expire.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.8631205685666308,20.0,2437.0,950.0,33.11552372685185,11936.5,1.0357864294131736,6494.0,None,False,,
2f6fe5ce3adb84cfc7506577c49504a8a65aaf2b,ffc7e509aa93c2441f8d40ceab62cd299a18f275,antirez,antirez@gmail.com,Fri Nov 15 10:38:55 2019 +0100,1573810735,Expire cycle: scan hash table buckets directly.,68.0,29.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,532.0,15.0,0.6745138888888889,11939.0,2.482549160918357,6495.0,None,False,,
ffc7e509aa93c2441f8d40ceab62cd299a18f275,27668056808192a3192bc6a79a2bec862a66c94e,antirez,antirez@gmail.com,Fri Nov 15 11:08:03 2019 +0100,1573812483,"Expire cycle: tollerate less stale keys, expire cycle CPU in INFO.",21.0,12.0,"src/expire.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER",2.0,1.0,1.0,0.32984607020714635,20.0,2859.0,366.0,0.3574884259259259,11940.5,26.413282149985122,6497.0,None,False,True,"[""0af467d18f9d12b137af3b709c0af579c29d8414""]"
27668056808192a3192bc6a79a2bec862a66c94e,84b01f63dbe28d5541e09313d35deacf4344ab16,antirez,antirez@gmail.com,Mon Nov 18 11:30:05 2019 +0100,1574073005,Expire cycle: introduce configurable effort.,31.0,9.0,"src/expire.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.4531837316805838,20.0,2722.333333333333,712.0,3.2468827160493827,11943.0,1.2000417863634538,6500.0,None,False,True,"[""0af467d18f9d12b137af3b709c0af579c29d8414""]"
84b01f63dbe28d5541e09313d35deacf4344ab16,1ccc270a2cb3f489e85560f1c953b105997c8b1a,antirez,antirez@gmail.com,Mon Nov 18 11:33:40 2019 +0100,1574073220,Expire cycle: make expire effort configurable.,13.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2436.0,267.0,40.81707175925926,11945.0,1.024499552684672,6501.0,None,False,,
1ccc270a2cb3f489e85560f1c953b105997c8b1a,2ab51a644d3d390df50dc1bc59958a15affeb341,antirez,antirez@gmail.com,Mon Nov 18 11:43:42 2019 +0100,1574073822,Expire cycle: fix parameters computation.,2.0,3.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,597.0,18.0,0.009456018518518518,11946.0,106.7527539779682,6502.0,None,False,,
2ab51a644d3d390df50dc1bc59958a15affeb341,e8ceba4e64d6ae7ce8baef90785b4f758e84f5e7,antirez,antirez@gmail.com,Mon Nov 18 17:47:19 2019 +0100,1574095639,Expire cycle: set a buckets limit as well.,13.0,2.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,596.0,19.0,0.2525115740740741,11947.0,4.9602145116193785,6503.0,None,False,,
e8ceba4e64d6ae7ce8baef90785b4f758e84f5e7,3243252cb05869ed4abd49f06e45d7eac4912298,antirez,antirez@gmail.com,Mon Nov 18 18:11:38 2019 +0100,1574097098,Expire cycle: document expire effort in redis.conf.,20.0,3.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,1669.0,210.0,8.397777777777778,11948.0,1.119079121460704,1421.0,None,False,,
3243252cb05869ed4abd49f06e45d7eac4912298,4ece8bd7a776898f86bfe363565a5af53b6d17d0,Daniel Dai,764122422@qq.com,Tue Nov 19 00:02:45 2019 -0500,1574139765,fix move command,7.0,0.0,"src/db.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,1637.0,245.0,4.482731481481482,1.0,1.2230782736220271,0.0,Corrective,True,,
3243252cb05869ed4abd49f06e45d7eac4912298,7c95e89ec320c2f8ecc767e7dc5e93abfbbd07bf,u00e5u0096u009cu00e6u00acu00a2u00e5u0085u00b0u00e8u008au00b1u00e5u00b1u00b1u00e4u00b8u0098,csharpwz@outlook.com,Tue Nov 19 17:23:47 2019 +0800,1574155427,Update mkreleasehdr.shfix date +%s errata,1.0,1.0,"src/mkreleasehdr.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,12.0,14.0,5.0,1298.7346527777775,1.0,1.000769980224876,1.0,Corrective,True,,
3243252cb05869ed4abd49f06e45d7eac4912298 7c95e89ec320c2f8ecc767e7dc5e93abfbbd07bf,64a78f5ba3538f57e03d3157e99962fd013eab92,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 10:48:32 2019 +0100,1574156912,Merge pull request #6596 from wangzhione/patch-5Update mkreleasehdr.sh,,,,,,,,,,,,,,,Merge,False,,
64a78f5ba3538f57e03d3157e99962fd013eab92 4a12047c61570ec3a4dbf9513b0881b41b224399,70016f786132ea974cd9422e0f8f8389aa7a661f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 10:50:45 2019 +0100,1574157045,Merge pull request #6574 from guybe7/fix_xadd_empty_idXADD with ID 0-0 stores an empty key,,,,,,,,,,,,,,,Merge,False,,
70016f786132ea974cd9422e0f8f8389aa7a661f c426bbf3a54939775fceac1a318f2fa22778ee08,a7122f451895200f23f7b5794e5569d374e8356b,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 10:54:00 2019 +0100,1574157240,Merge pull request #6579 from oranagra/rm_reply_string_optSlightly more efficient RM_ReplyWithEmptyString,,,,,,,,,,,,,,,Merge,False,,
a7122f451895200f23f7b5794e5569d374e8356b 5350e7669e9dfe7b2b4bcf663171920c441c19e1,3d892104776cf05b4d334ec7bb91822035769b8d,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 10:55:42 2019 +0100,1574157342,Merge pull request #3383 from yossigo/datatype_load_saveRedis Module API calls to allow re-use of data type RDB save/load.,,,,,,,,,,,,,,,Merge,False,,
3d892104776cf05b4d334ec7bb91822035769b8d 9c76875f413190a547244e72a3f9e9bbeb6811e9,32a8301073ae5c3e1bb78a3b87ab0a39766ea687,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:00:01 2019 +0100,1574157601,Merge pull request #4076 from yossigo/add_mt_replacevalueAdd RM_ModuleTypeReplaceValue.,,,,,,,,,,,,,,,Merge,False,,
32a8301073ae5c3e1bb78a3b87ab0a39766ea687 2d30afc45fac6d0dcb0e5e12ebdf197d4c77649a,1530a3cfc69e711dc21d84dcb194b0941e0ee02e,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:02:58 2019 +0100,1574157778,"Merge pull request #6577 from oranagra/module_docmodule docs, missing LOADING flag",,,,,,,,,,,,,,,Merge,False,,
1530a3cfc69e711dc21d84dcb194b0941e0ee02e,5b80a41caddb9c5fa820de08a3c8646cd1b9640d,antirez,antirez@gmail.com,Tue Nov 19 11:05:55 2019 +0100,1574157955,Remove additional space from comment.,1.0,1.0,"src/t_stream.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,2550.0,192.0,5.953333333333332,11949.0,1.167973124300112,6504.0,Feature Addition,False,,
0f8692b4646013b7d98d4b21f86da0686546d43a 1530a3cfc69e711dc21d84dcb194b0941e0ee02e,656e40eed262f61bed8cc5535b963ae1a6b300d7,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:08:02 2019 +0100,1574158082,Merge branch 'unstable' into scan_module_impl,,,,,,,,,,,,,,,Merge,False,,
1530a3cfc69e711dc21d84dcb194b0941e0ee02e 656e40eed262f61bed8cc5535b963ae1a6b300d7,2f41c8d51863252bfb4fe4f61d5115354f9fc53e,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:08:15 2019 +0100,1574158095,Merge pull request #6512 from MeirShpilraien/scan_module_implAdded scan implementation to module api.,,,,,,,,,,,,,,,Merge,False,,
5b80a41caddb9c5fa820de08a3c8646cd1b9640d 2f41c8d51863252bfb4fe4f61d5115354f9fc53e,77ad9aaafe6a66bd31f2cd7f670cfdb20ba9271b,antirez,antirez@gmail.com,Tue Nov 19 11:10:35 2019 +0100,1574158235,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
64a78f5ba3538f57e03d3157e99962fd013eab92,2d1e893b3e133dcceecef2110d2c41aa8f904b87,Yossi Gottlieb,yossigo@gmail.com,Tue Nov 19 12:10:48 2019 +0200,1574158248,Improve RM_Call() errno classification.RM_Call() will now use EBADF and ENONET in addition to EINVAL in ordernto provide more information about errors (i.e. when return value isnNULL).n,5.0,3.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7535.0,322.0,5.100023148148149,218.0,1.1960775414054947,130.0,Feature Addition,False,,
77ad9aaafe6a66bd31f2cd7f670cfdb20ba9271b 7059eceeb027d9ffb7cf9ae47201c8554d6e5010,6a9851c7f8d65e36f77705eff8e272a081a0648c,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:14:05 2019 +0100,1574158445,Merge pull request #6554 from soloestoy/unblock-as-callexpires & blocking: handle ready keys as call(),,,,,,,,,,,,,,,Merge,False,,
6a9851c7f8d65e36f77705eff8e272a081a0648c,b42466b92586d1adfeec54bda14d4ad54b0764d6,antirez,antirez@gmail.com,Tue Nov 19 11:23:43 2019 +0100,1574159023,Fix patch provided in #6554.,8.0,1.0,"src/blocked.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,684.0,58.0,10.970046296296296,11950.0,1.091157318117939,6505.0,Corrective,True,True,"[""ce03d6833213901c95e0b5961b555744d3815bd2""]"
b42466b92586d1adfeec54bda14d4ad54b0764d6,ce03d6833213901c95e0b5961b555744d3815bd2,antirez,antirez@gmail.com,Tue Nov 19 11:28:04 2019 +0100,1574159284,Rename var to fixed_time_expire now that is more general.,7.0,8.0,"src/blocked.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,1.0,1.0,1.8322628970242685,20.0,2481.75,1002.0,0.5565335648148149,11952.5,85.16659535113553,6509.0,Corrective,True,,
ce03d6833213901c95e0b5961b555744d3815bd2 a0cfd519e3cbbb4c432d25094e4cb202631f131f,397a8b57ccb47c93a5e49b41c70e6a4e0551dd7f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:34:11 2019 +0100,1574159651,Merge pull request #6513 from oranagra/test_assertionstest infra: improve prints on failed assertions,,,,,,,,,,,,,,,Merge,False,,
397a8b57ccb47c93a5e49b41c70e6a4e0551dd7f 412eb67d21705ca31162d614fb8e3a6a568ef5ed,8e950644082196874d33579b421b56eca86329b2,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:40:34 2019 +0100,1574160034,Merge pull request #6134 from zhouyuan/fix_aofaof: fix assignment for aof_fsync_offset,,,,,,,,,,,,,,,Merge,False,,
8e950644082196874d33579b421b56eca86329b2 2d1e893b3e133dcceecef2110d2c41aa8f904b87,06a24b9cfab01f89c1a5da6e4566f398b3b13cf2,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:41:32 2019 +0100,1574160092,Merge pull request #6597 from yossigo/rm-call-extended-errorsImprove RM_Call() errno classification.,,,,,,,,,,,,,,,Merge,False,,
06a24b9cfab01f89c1a5da6e4566f398b3b13cf2 253d9d6d12c5a19ae8faa7632068772845b4a552,2151b82be92bc6dedbeec485f368f0bb15bf6046,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:42:46 2019 +0100,1574160166,Merge pull request #6571 from wangzhione/patch-2Update adlist.h,,,,,,,,,,,,,,,Merge,False,,
ce03d6833213901c95e0b5961b555744d3815bd2,936e01e5bb286d9a8701b2d71d8e90f5b7168475,antirez,antirez@gmail.com,Tue Nov 19 11:49:05 2019 +0100,1574160545,Fix stream test after addition of 0-0 ID test.,3.0,3.0,"tests/unit/type/stream.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,425.0,22.0,5.983310185185185,11955.0,1.1671315658138572,840.0,Corrective,True,,
2151b82be92bc6dedbeec485f368f0bb15bf6046 02f21113ab6c61d2c01544607b464eb501dbe8fa,b311a368e0e1f7a8badcd4093311f0a570f71542,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:49:43 2019 +0100,1574160583,Merge pull request #6558 from oranagra/module_testrdb_leakfix leak in module api rdb test,,,,,,,,,,,,,,,Merge,False,,
936e01e5bb286d9a8701b2d71d8e90f5b7168475 b311a368e0e1f7a8badcd4093311f0a570f71542,446f24e66dfb3fa6fbaad3fec2ac055ecc75d4a6,antirez,antirez@gmail.com,Tue Nov 19 11:52:40 2019 +0100,1574160760,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
446f24e66dfb3fa6fbaad3fec2ac055ecc75d4a6 9593ffde2ed92af512c5d33a2e8e6b9fed516d8c,065872e001490689a20a3503fe6e5a45bc3345a6,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:53:10 2019 +0100,1574160790,Merge pull request #6551 from pvalsecc/sentinel_kill_pubsubRedis sentinel kill pubsub client connections as well,,,,,,,,,,,,,,,Merge,False,,
065872e001490689a20a3503fe6e5a45bc3345a6,fe5aea38c35e3fc35a744ad2de73543df553ae48,antirez,antirez@gmail.com,Tue Nov 19 11:56:02 2019 +0100,1574160962,Simplify PR #6551 implementation.,2.0,9.0,"src/sentinel.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,4567.0,260.0,12.129664351851853,11956.0,1.0824425120920456,6510.0,None,False,,
fe5aea38c35e3fc35a744ad2de73543df553ae48 28c20b4ef95aa5f74b938681a6f78f6b92dec2a8,e916058f0ba59e964f5de3dee17f46ae08f1d385,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 11:58:07 2019 +0100,1574161087,Merge pull request #6557 from oranagra/rm_lru_lfu_revizedrename RN_SetLRUOrLFU -> RM_SetLRU and RN_SetLFU,,,,,,,,,,,,,,,Merge,False,,
a68c19df6c884af6dfbc198bde75878ef741faf9 e916058f0ba59e964f5de3dee17f46ae08f1d385,e7144fbed86ebee06253f630c6faff14615a4935,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 12:15:45 2019 +0100,1574162145,Merge branch 'unstable' into module-long-double,,,,,,,,,,,,,,,Merge,False,,
e916058f0ba59e964f5de3dee17f46ae08f1d385 e7144fbed86ebee06253f630c6faff14615a4935,45025713a8b284d649af540c0cab2e5af52e1a9f,Salvatore Sanfilippo,antirez@gmail.com,Tue Nov 19 12:15:53 2019 +0100,1574162153,Merge pull request #6541 from artix75/module-long-doubleModule API: add support for long double conversions and replies,,,,,,,,,,,,,,,Merge,False,,
45025713a8b284d649af540c0cab2e5af52e1a9f,ed2269762b3be6c384025dcf3237b58f10babf03,Oran Agra,oran@redislabs.com,Tue Nov 19 14:53:39 2019 +0200,1574168019,"try to fix an unstable test (module hook for loading progress)there were two lssues, one is taht BGREWRITEAOF failed since the initial one was still in progressnthe solution for this one is to enable appendonly from the server startup so there's no initial aofrw.nnthe other problem was 0 loading progress events, theory is that on somenplatforms a sleep of 1 will cause a much greater delay due to the contextnswitch, but on other platform it doesn't. in theory a sleep of 100 micronfor 1k keys whould take 100ms, and with hz of 500 we should be getteringn50 events (one every 2ms). in practise it doesn't work like that, so tryingnto find a sleep that would be long enough but still not cause the test to takentoo long.n",8.0,6.0,"tests/unit/moduleapi/hooks.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,140.0,3.0,20.871180555555554,353.0,1.0479129581260709,78.0,Corrective,True,,
45025713a8b284d649af540c0cab2e5af52e1a9f,641c64ada10404356fc76c0b56a69b32c76f253c,Johannes Truschnigg,johannes@truschnigg.info,Sat Apr 27 18:07:30 2019 +0200,1556381250,"Use libsystemd's sd_notify for communicating redis status to systemdInstead of replicating a subset of libsystemd's sd_notify(3) internally,nuse the dynamic library provided by systemd to communicate with thenservice manager.nnWhen systemd supervision was auto-detected or configured, communicatenthe actual server status (i.e. Loading dataset, Waiting fornmaster<->replica sync) to systemd, instead of declaring readiness rightnafter initializing the server process.n",48.0,42.0,"src/replication.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.3966941631313117,20.0,3581.666666666666,956.0,-198.84092206790126,1.0,0.6652548308490895,2.0,Feature Addition,False,True,"[""129d14e1431e913426485526663e1a9aac67838c""]"
641c64ada10404356fc76c0b56a69b32c76f253c,5bbc112fb183a4e9b38ebf86535a52784d5b03ff,Johannes Truschnigg,johannes@truschnigg.info,Sat Apr 27 18:14:59 2019 +0200,1556381699,Provide example systemd service unit files for redis-server,78.0,0.0,"utils/systemd-redis_multiple_servers@.service,CAS_DELIMITER,utils/systemd-redis_server.service,CAS_DELIMITER",2.0,1.0,1.0,0.9981021327390104,1.0,0.0,0.0,0.0,3.5,0.0,1.0,None,False,,
5bbc112fb183a4e9b38ebf86535a52784d5b03ff,ec5681f0f1e6df237c6b5e650317d52183bc19b7,Johannes Truschnigg,johannes@truschnigg.info,Sat Apr 27 18:13:44 2019 +0200,1556381624,"Do not install SysV init-scripts on systemd-enabled hostsAlso, hint at example service unit files if systemd is detected. Thanksnto @mika for spotting a bug in the original iteration of this patch.n",10.0,0.0,"utils/install_server.sh,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,281.0,20.0,49.03644675925926,5.0,1.0203929947230763,2.0,Corrective,True,,
ec5681f0f1e6df237c6b5e650317d52183bc19b7,129d14e1431e913426485526663e1a9aac67838c,Johannes Truschnigg,johannes@truschnigg.info,Thu May 30 18:44:17 2019 +0200,1559234657,"Auto-detect and link libsystemd at compile-timeThis adds Makefile/build-system support for USE_SYSTEMD=(yes|no|*). Thisnvariable's value determines whether or not libsystemd will be linked atnbuild-time.nnIf USE_SYSTEMD is set to yes, make will use PKG_CONFIG to check fornlibsystemd's presence, and fail the build early if it isn'tninstalled/detected properly.nnIf USE_SYSTEM is set to no, libsystemd will *not* be linked, even ifnsupport for it is available on the system redis is being built on.nnFor any other value that USE_SYSTEM might assume (e.g. auto),nPKG_CONFIG will try to determine libsystemd's presence, and set up thenbuild process to link against it, if it was indicated as beingninstalled/available.nnThis approach has a number of repercussions of its own, most importantlynthe following: If you build redis on a system that actually has systemdnsupport, but no libsystemd-dev package(s) installed, you'll end upn*without* support for systemd notification/status reporting support innredis-server. This changes established runtime behaviour.nnI'm not sure if the build system and/or the server binary shouldnindicate this. I'm also wondering if not actually havingnsystemd-notify-support, but requesting it via the server's config,nshould result in a fatal error now.n",34.0,27.0,"src/Makefile,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,1.2734192269994746,20.0,2638.0,883.0,-24.28545910493827,7.0,0.9898769485025158,5.0,Corrective,True,,
3243252cb05869ed4abd49f06e45d7eac4912298,99b5696390735fb53756dc0f2e54edaa0cf0c9e2,Daniel Dai,764122422@qq.com,Tue Nov 19 20:14:59 2019 -0500,1574212499,fix typo,1.0,1.0,"tests/unit/scripting.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,16.0,743.0,54.0,434.67857638888887,2.0,1.0023005504626143,1.0,Corrective,True,,
45025713a8b284d649af540c0cab2e5af52e1a9f 99b5696390735fb53756dc0f2e54edaa0cf0c9e2,808394b77d5b8c42d234e3bc991cd5f9cd29ab34,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 20 10:06:33 2019 +0100,1574240793,Merge pull request #6603 from daidaotong/typofixfix typo in scripting.acl,,,,,,,,,,,,,,,Merge,False,,
808394b77d5b8c42d234e3bc991cd5f9cd29ab34 0bc3dab0954e481b882a722f768ec0a5a7f725ae,c697edf4f46c853230dfda2f934631759cd8ea6b,Salvatore Sanfilippo,antirez@gmail.com,Wed Nov 20 10:08:08 2019 +0100,1574240888,Merge pull request #6559 from oranagra/active_defrag_tunablesAdjustments for active defrag defaults,,,,,,,,,,,,,,,Merge,False,,
45025713a8b284d649af540c0cab2e5af52e1a9f,803d765d49986e166e2131b5bff6f94006ef7425,Madelyn Olson,matolson@amazon.com,Fri Jul 19 10:15:35 2019 -0700,1563556535,Refactored renaming types in config,515.0,669.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2448.0,268.0,-121.72089120370373,20.0,0.9917844834184916,17.0,None,False,True,"[""818a4e0f703156d1f4113ff9791907b96ffb5af7"", ""d50ae36e178db2dfb48d1ef551b9bac2731eb994"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85"", ""28beb05aa322e4e72ac6b7b477f38f8c5eab0d57""]"
129d14e1431e913426485526663e1a9aac67838c,c7b68d10ea6137305715d2660897237a864c552e,Maxim Ivanov,ulidtko@gmail.com,Wed Nov 20 19:45:25 2019 +0200,1574271925,"Prune leftover TODO commentIs it sufficient... ? -- Yes it is. In standalone mode, we say READY=1rnat the comment point; however in replicated mode, we delay sendingrnREADY=1 until the replication sync completes.",0.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,5128.0,355.0,174.0424537037037,0.0,0.0,0.0,None,False,,
3243252cb05869ed4abd49f06e45d7eac4912298,bfd8c1fdd2218c0c4d965338291b084a9ff52ec9,Daniel Dai,764122422@qq.com,Wed Nov 20 20:18:00 2019 -0500,1574299080,macro fixmacro fixn,5.0,0.0,"src/bio.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,13.0,42.0,9.0,1519.438472222222,3.0,1.0006581378701946,1.0,Corrective,True,,
e45239e3501edfa7012955a76536dff98c87e2a5 c697edf4f46c853230dfda2f934631759cd8ea6b,70469b76d6fd2385408ab86a273c69c58be1d075,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 21 09:57:19 2019 +0100,1574326639,Merge branch 'unstable' into expose_zmalloc_capabilities,,,,,,,,,,,,,,,Merge,False,,
c697edf4f46c853230dfda2f934631759cd8ea6b 70469b76d6fd2385408ab86a273c69c58be1d075,fef1e63c7045eb4ab5f3df8d8d3bd2d91cebb724,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 21 09:58:11 2019 +0100,1574326691,Merge pull request #6346 from MeirShpilraien/expose_zmalloc_capabilitiesExpose used memory to modules via redismodule api,,,,,,,,,,,,,,,Merge,False,,
fef1e63c7045eb4ab5f3df8d8d3bd2d91cebb724,da47d52c79ec970a2e47812b1e8fae714c47010d,antirez,antirez@gmail.com,Thu Nov 21 10:01:49 2019 +0100,1574326909,Recomment PR #6346.,12.0,8.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7537.0,323.0,1.952094907407408,11957.0,1.5122701750849337,6511.0,None,False,,
da47d52c79ec970a2e47812b1e8fae714c47010d 1833d008b3af8628835b5f082c5b4b1359557893,f1f259de5bc1785f22b663b8af78b887ddea5c6c,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 21 10:03:50 2019 +0100,1574327030,Merge pull request #6547 from guybe7/module_api_streamsSupport streams in general module API functions,,,,,,,,,,,,,,,Merge,False,,
04233097688ee35d451c6f5cd64c28e57ca81b53 f1f259de5bc1785f22b663b8af78b887ddea5c6c,64c2508ee3e7ab86f1cc03d214061305a1a410fb,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 21 10:06:15 2019 +0100,1574327175,Merge branch 'unstable' into rm_get_server_info,,,,,,,,,,,,,,,Merge,False,,
f1f259de5bc1785f22b663b8af78b887ddea5c6c 64c2508ee3e7ab86f1cc03d214061305a1a410fb,b93945585a74ab1c2e399447fad4cfe379ed8d25,Salvatore Sanfilippo,antirez@gmail.com,Thu Nov 21 10:07:23 2019 +0100,1574327243,Merge pull request #6530 from oranagra/rm_get_server_infoAdd module api for looking into INFO fields,,,,,,,,,,,,,,,Merge,False,,
b93945585a74ab1c2e399447fad4cfe379ed8d25,097c4a65367d9d7c9cdfffe42c2103f3e64937fd,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Jan 15 16:58:29 2019 +0800,1547542709,"scripting: flag lua_client as CLIENT_MULTI after redis.replicate_commands() immediatelyTo avoid nested MULTI/EXEC, we check the lua_caller's flag,nif we are in the MULTI context we flag the lua_client asnCLIENT_MULTI, but it's not enough we shoud flag lua_clientnas CLIENT_MULTI after redis.replicate_commands() immediatelynor the first write command after redis.replicate_commands()ncannot know it's in an transaction, I know the missing CLIENT_MULTIndoesn't have any effect now, but it's a real bug and we should fixnit, in case someday we allow some dangerous command like BLPOP.n",3.0,0.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2695.0,223.0,-239.95723379629632,174.0,0.9958325907321932,166.0,None,False,,
097c4a65367d9d7c9cdfffe42c2103f3e64937fd,73841e8c495ec4917a8cdee3cbef6fb83433f018,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Tue Jan 15 20:08:11 2019 +0800,1547554091,scripting: a little refactor about EVAL and redis.call()Change server.lua_client's flag in a more explicit way.n,20.0,11.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2698.0,224.0,0.1317361111111111,175.0,8.590933052187664,167.0,None,False,,
803d765d49986e166e2131b5bff6f94006ef7425,519822bcf969cc676d924aa0c37295056b2bd483,Madelyn Olson,matolson@amazon.com,Thu Nov 21 21:31:53 2019 -0800,1574400713,Added a flag for strings that are stored as NULL,36.0,20.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2294.0,269.0,125.51131944444445,21.0,1.0079674088713777,18.0,Feature Addition,False,True,"[""818a4e0f703156d1f4113ff9791907b96ffb5af7"", ""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
519822bcf969cc676d924aa0c37295056b2bd483,818a4e0f703156d1f4113ff9791907b96ffb5af7,Madelyn Olson,matolson@amazon.com,Fri Nov 22 05:49:52 2019 +0000,1574401792,Fixed some linux warnings,23.0,9.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2310.0,270.0,0.012488425925925924,22.0,81.07414272474514,19.0,Corrective,True,True,"[""e0cc3c99d208f12eec85012f763c1c31f5719a85""]"
818a4e0f703156d1f4113ff9791907b96ffb5af7,d50ae36e178db2dfb48d1ef551b9bac2731eb994,Madelyn Olson,matolson@amazon.com,Fri Nov 22 06:28:50 2019 +0000,1574404130,Fixed a bug with enum log printing,9.0,9.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2324.0,271.0,0.027060185185185184,23.0,37.954662104362704,20.0,Corrective,True,,
d50ae36e178db2dfb48d1ef551b9bac2731eb994,e8f4010e27d0d9e6f9b0ed4a6ba6c92136deccc3,Madelyn Olson,matolson@amazon.com,Fri Nov 22 06:44:12 2019 +0000,1574405052,Changed a tab to a space,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2324.0,272.0,0.010671296296296295,24.0,94.70932754880694,21.0,None,False,,
b93945585a74ab1c2e399447fad4cfe379ed8d25,37a10cef028f0ed16e6768dabdd3ffa56fc77761,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 22 15:32:43 2019 +0800,1574407963,"Propagation: wrap commands in also_propagate array with MULIT/EXECRandom command like SPOP with count is replicated asnsome SREM operations, and store them in also_propagatenarray to propagate after the call, but this would breaknatomicity.nnTo keep the command's atomicity, wrap also_propagatenarray with MULTI/EXEC.n",27.0,11.0,"src/module.c,CAS_DELIMITER,src/multi.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",5.0,1.0,1.0,1.9774556456847632,21.0,3637.8,1287.0,112.10301620370369,178.0,1.2173474449572017,172.0,None,False,,
37a10cef028f0ed16e6768dabdd3ffa56fc77761,c73d70fb4654f1758c73e4d23e278e1c01575ffa,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 22 15:45:21 2019 +0800,1574408721,Propagation: propagate EXEC directly in lua script,1.0,2.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,2704.0,226.0,0.008773148148148148,181.0,114.98416886543535,173.0,None,False,,
c73d70fb4654f1758c73e4d23e278e1c01575ffa,2c970532dc47e68efee55082718502e4fa591c7d,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 22 16:20:27 2019 +0800,1574410827,Propagation: flag module client as CLIENT_MULTI if neededin case of nested MULTI/EXECn,5.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7538.0,325.0,0.03314814814814815,182.0,31.16759776536313,174.0,None,False,,
2c970532dc47e68efee55082718502e4fa591c7d,6b056d29f31c01188c4758ade8900c847bbd025c,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Fri Nov 22 16:38:49 2019 +0800,1574411929,block: propagate BRPOPLPUSH as RPOPLPUSH when unblock,7.0,13.0,"src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/t_list.c,CAS_DELIMITER",3.0,1.0,1.0,0.7475846798245739,21.0,2790.333333333333,794.0,25.996543209876545,184.0,11.896861061936248,177.0,None,False,,
b93945585a74ab1c2e399447fad4cfe379ed8d25 e8f4010e27d0d9e6f9b0ed4a6ba6c92136deccc3,a5e4c95cfdea9a945cf88cbfece172fd13434bf9,Salvatore Sanfilippo,antirez@gmail.com,Fri Nov 22 17:42:42 2019 +0100,1574440962,Merge pull request #6607 from madolson/dev-unstable-new-refactorRefactored configs into types that can be generic,,,,,,,,,,,,,,,Merge,False,,
a5e4c95cfdea9a945cf88cbfece172fd13434bf9,ef5186d9207be43b1e828fa99b633701bdb3c577,antirez,antirez@gmail.com,Fri Nov 22 17:54:22 2019 +0100,1574441662,"config.c: remove trailing spaces, trim comments to 80 cols.",102.0,103.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,2324.0,273.0,0.4237268518518518,11958.0,3.3600109259765087,6512.0,None,False,True,"[""e0cc3c99d208f12eec85012f763c1c31f5719a85"", ""28beb05aa322e4e72ac6b7b477f38f8c5eab0d57""]"
ef5186d9207be43b1e828fa99b633701bdb3c577 960c25ac0af08b9a7ccf3f64fc9b7ee5dc58732d,d39afb687d4fffb96cb685bc3b3d78c34819a800,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 25 09:45:29 2019 +0100,1574671529,Merge pull request #6563 from devnexen/fbsd_build_fix2Add missing header,,,,,,,,,,,,,,,Merge,False,,
d39afb687d4fffb96cb685bc3b3d78c34819a800 4ece8bd7a776898f86bfe363565a5af53b6d17d0,6203ed0474754b9e59f198eafb241998f8a75940,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 25 10:02:43 2019 +0100,1574672563,Merge pull request #6593 from daidaotong/movecommandfixfix move command: WATCH/MULTI/EXEC mechanism breaks ,,,,,,,,,,,,,,,Merge,False,,
6203ed0474754b9e59f198eafb241998f8a75940 bfd8c1fdd2218c0c4d965338291b084a9ff52ec9,a40669893e29fb0c95b8d12315fb48c82cee2b1d,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 25 10:04:28 2019 +0100,1574672668,Merge pull request #6609 from daidaotong/macrofixAdd macro in bio.h,,,,,,,,,,,,,,,Merge,False,,
a40669893e29fb0c95b8d12315fb48c82cee2b1d ed2269762b3be6c384025dcf3237b58f10babf03,a1b654819cc0031ba30910afa1d68174d4f926ae,Salvatore Sanfilippo,antirez@gmail.com,Mon Nov 25 17:54:21 2019 +0100,1574700861,Merge pull request #6598 from oranagra/module-hook-testtry to fix an unstable test (module hook for loading progress),,,,,,,,,,,,,,,Merge,False,,
a1b654819cc0031ba30910afa1d68174d4f926ae,e0cc3c99d208f12eec85012f763c1c31f5719a85,Oran Agra,oran@redislabs.com,Tue Nov 26 16:52:28 2019 +0200,1574779948,"Additional config.c refactory and bugfixes- add capability for each config to have a callback to check if value is valid and return error stringn  will enable converting many of the remaining custom configs into generic ones (reducing the x4 repetition for set,get,config,rewrite)n- add capability for each config to  to run some update code after config is changed (only for CONFIG SET)n  will also enable converting many of the remaining custom configs into generic onesn- add capability to move default values from server.h and server.c to config.cn  will reduce many excess lines in server.h and server.c (plus, no need to rebuild the entire code base when a default change 8-))nnother behavior changes:n- fix bug in bool config get (always returning 'yes')n- fix a bug in modifying jemalloc-bg-thread at runtime (didn't call set_jemalloc_bg_thread, due to bad merge conflict resolution (my fault))n- side effect when a failed attempt to enable activedefrag at runtime, we now respond with -ERR and not with -DISABLEDn",226.0,144.0,"src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",3.0,1.0,1.0,0.11639603855075265,21.0,3306.0,982.0,4.144768518518519,355.0,1.1527182041112904,261.0,Corrective,True,True,"[""28beb05aa322e4e72ac6b7b477f38f8c5eab0d57""]"
e0cc3c99d208f12eec85012f763c1c31f5719a85,28beb05aa322e4e72ac6b7b477f38f8c5eab0d57,Oran Agra,oran@redislabs.com,Thu Nov 28 11:11:07 2019 +0200,1574932267,"More improvements and fixes to generic config infra- Adding is_valid_fn and update_fn, both return 1 for success and 0 for failure with an optional error message.n- Bugfix in handling boundary check of unsigned numeric types (was boundaries as signed)n- Adding more numeric types to generic mechanism: uint, ulonglong, long, time_t, off_tn- More verbose error replies (argument must be between in out of range CONFIG SET (like config file parsing)n",221.0,84.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,2404.0,275.0,1.7629513888888888,357.0,1.5672306146967876,262.0,Corrective,True,,
28beb05aa322e4e72ac6b7b477f38f8c5eab0d57,18e72c5cc723c60489b1598de8c3c503ef42c7d0,Oran Agra,oran@redislabs.com,Thu Nov 28 11:24:57 2019 +0200,1574933097,"Converting more configs to use generic infra, and moving defaults to config.cChanges in behavior:n- Change server.stream_node_max_entries from int64_t to long long, so that it can be used by the generic infran- standard error reply instead of repl-backlog-size must be 1 or greater and suchn- tls-port and a few TLS booleans were readable (config get) even when USE_OPENSSL was off (now they aren't)n- syslog-enabled, syslog-ident, cluster-enabled, appendfilename, and supervised didn't have a get (now they do)n- pidfile was initialized to NULL in InitServerConfig but had CONFIG_DEFAULT_PID_FILE in rewriteConfig (so the real default was , but rewrite would cause it to be set), fixed the rewrite.n- TLS config in server.h was uninitialized (if no tls config args were provided)nnAdding test for sanity and coveragen",294.0,632.0,"src/cluster.h,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/unit/introspection.tcl,CAS_DELIMITER",5.0,2.0,2.0,1.3581397699732898,21.0,2097.4,1044.0,110.46033796296295,360.0,1.0105700587015294,79.0,None,False,True,"[""0c3fe52ef7e3acf135428be81dd8e27b4ef191e5""]"
a1b654819cc0031ba30910afa1d68174d4f926ae,f5d48537f1aa76e5ce4f14953517bd25c9ad4673,antirez,antirez@gmail.com,Fri Nov 29 17:35:59 2019 +0100,1575045359,Fix Pi build needing -latomic. Issue #6275.,9.0,0.0,"src/Makefile,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,346.0,183.0,182.9942361111111,11959.0,1.0054646529926374,6513.0,Corrective,True,,
18e72c5cc723c60489b1598de8c3c503ef42c7d0,6b4366b85b63c03791abb9a58a5361e5e01b7c89,Oran Agra,oran@redislabs.com,Sun Dec 1 08:19:25 2019 +0200,1575181165,config.c post refactory cleanup,122.0,142.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,2338.0,277.0,2.8711574074074075,363.0,1.3482915974652112,267.0,Perfective,False,True,"[""0c3fe52ef7e3acf135428be81dd8e27b4ef191e5""]"
f5d48537f1aa76e5ce4f14953517bd25c9ad4673,07b365b7d780d7ec82f53a268372eb82765fb755,Oran Agra,oran@redislabs.com,Sun Dec 1 14:57:18 2019 +0200,1575205038,"revert an accidental test code change done as part of the tls projectit seems that commit b087dd1db60ed23d9e59304deb0b1599437f6e23 accidentially changedngen_write_load to not use deferred client, which causes them to be slower and notngenerate high load which they should, making some tests less effecitiven",1.0,1.0,"tests/helpers/gen_write_load.tcl,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,17.0,2.0,80.20861111111111,364.0,1.0124674892900805,80.0,Preventative,False,,
f5d48537f1aa76e5ce4f14953517bd25c9ad4673,1ed5f84a79bba85ef921c931a3875a112f15c38b,Andy Guan,guan.yuying.zhang@gmail.com,Mon Dec 2 00:28:41 2019 -0500,1575264521,Added the missed macro definition in slowlog.h,5.0,0.0,"src/slowlog.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,49.0,7.0,899.7713773148148,0.0,0.0,0.0,Feature Addition,False,,
f5d48537f1aa76e5ce4f14953517bd25c9ad4673 07b365b7d780d7ec82f53a268372eb82765fb755,ddde700b64a02a348617b78e1ce0e6b178ae1089,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 08:50:20 2019 +0100,1575273020,Merge pull request #6634 from oranagra/fix_gen_write_loadrevert an accidental test code change done as part of the tls project,,,,,,,,,,,,,,,Merge,False,,
ddde700b64a02a348617b78e1ce0e6b178ae1089 1ed5f84a79bba85ef921c931a3875a112f15c38b,731f10225ba31ddf2d7903797abba8055afec98d,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 08:51:05 2019 +0100,1575273065,Merge pull request #6637 from andygua/add-missed-macroAdded the missed macro definition in slowlog.h,,,,,,,,,,,,,,,Merge,False,,
731f10225ba31ddf2d7903797abba8055afec98d a344c4cfade5350467baf12a5d255b75eed428ac,ff14945e226540bc818d3fce51d98ee8e596729c,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 08:56:08 2019 +0100,1575273368,Merge pull request #5360 from youjh90/unstableupdate leap year comment when div by 400,,,,,,,,,,,,,,,Merge,False,,
ff14945e226540bc818d3fce51d98ee8e596729c 6b4366b85b63c03791abb9a58a5361e5e01b7c89,ce7ec725e34a65d607b155a557a0485e3fd230af,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 08:59:36 2019 +0100,1575273576,Merge pull request #6624 from oranagra/config_c_step_3Additional config.c refractory and bugfixes,,,,,,,,,,,,,,,Merge,False,,
ce7ec725e34a65d607b155a557a0485e3fd230af 5a8a0050269382d94d88016ba04272eef658bc97,e5b5f9a2f6245be8496192c80a809a47f2f235ef,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 09:02:08 2019 +0100,1575273728,Merge pull request #6384 from devnexen/apple_smaps_implGetting region date per process in Darwin,,,,,,,,,,,,,,,Merge,False,,
e5b5f9a2f6245be8496192c80a809a47f2f235ef,4092a75d850ab5f9ec4bc8941f6d5c28f44422e7,antirez,antirez@gmail.com,Mon Dec 2 09:13:23 2019 +0100,1575274403,Avoid collision with MacOS LIST_HEAD macro after #6384.,8.0,1.0,"src/zmalloc.c,CAS_DELIMITER,src/zmalloc.h,CAS_DELIMITER",2.0,1.0,1.0,0.5032583347756457,19.0,323.5,82.0,80.8287037037037,11960.5,1.0090552845602625,6515.0,None,False,,
4092a75d850ab5f9ec4bc8941f6d5c28f44422e7,5661b190055b5feef3da0a211e316f57317f55aa,Oran Agra,oran@redislabs.com,Mon Dec 2 19:17:35 2019 +0200,1575307055,fix crash in module short read test,2.0,1.0,"tests/modules/testrdb.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,258.0,5.0,22.414074074074072,365.0,1.0446148253412209,81.0,Corrective,True,,
4092a75d850ab5f9ec4bc8941f6d5c28f44422e7 5661b190055b5feef3da0a211e316f57317f55aa,89849c8b015a0bf973918c006ea63cb4e3acdaa9,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 2 18:23:28 2019 +0100,1575307408,Merge pull request #6638 from oranagra/fix_module_short_read_testfix crash in module short read test,,,,,,,,,,,,,,,Merge,False,,
89849c8b015a0bf973918c006ea63cb4e3acdaa9,7b5f4b175b96dca2093dc1898c3df97e3e096526,antirez,antirez@gmail.com,Tue Dec 3 16:21:23 2019 +0100,1575386483,Modules: create timers in contexts without a client.,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7543.0,326.0,11.292314814814816,11962.0,1.0885558024549638,6516.0,None,False,,
7b5f4b175b96dca2093dc1898c3df97e3e096526,ecb742acc5af59d887534cf7a40300a07db5873d,antirez,antirez@gmail.com,Tue Dec 3 17:52:04 2019 +0100,1575391924,create-cluster script: allow additional options.,2.0,1.0,"utils/create-cluster/create-cluster,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,104.0,7.0,68.02100694444445,11963.0,1.014701340731647,100.0,Feature Addition,False,,
ecb742acc5af59d887534cf7a40300a07db5873d,2271cf03f56525f153227c95b9521a5377321776,antirez,antirez@gmail.com,Thu Dec 5 10:38:18 2019 +0100,1575538698,Modules: clarify when the disconnection callback is called.,4.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7543.0,327.0,1.7617476851851852,11964.0,1.567618171665079,6517.0,None,False,,
ef5186d9207be43b1e828fa99b633701bdb3c577,08c3fe8063b0a7e477dee8036ff5409a48c6f9a9,Eran Liberty,eranl@amazon.com,Thu Dec 5 13:37:11 2019 +0000,1575553031,"-memcpy(&id,ri.key,ri.key_len); +memcpy(&id,ri.key,sizeof(id));The memcpy from the key to the id reliease on the fact that this keyn*should* be 8 bytes long as it was entered as such a few lines up thencode.nnBUT if someone will change the code to the point this is no longer true,ncurrent code can trash the stack which makes debugging very hardnwhile this fix will result in some garbage id, or even page fault.nBoth are preferable to stack mangaling.n",1.0,1.0,"src/tracking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,296.0,13.0,135.1909375,0.0,0.0,0.0,Corrective,True,,
2271cf03f56525f153227c95b9521a5377321776 08c3fe8063b0a7e477dee8036ff5409a48c6f9a9,7e24e219fdc0a32cf81c3503a4aac3c6700efb8b,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 5 16:51:42 2019 +0100,1575561102,Merge pull request #6645 from eliblight/fix-memcpyFix memcpy of id from key to be slightly safer.,,,,,,,,,,,,,,,Merge,False,,
7e24e219fdc0a32cf81c3503a4aac3c6700efb8b,52d83d57f964f323db4f097f6b5977269b2f6fc2,Michael Chaten,mchaten@gmail.com,Fri Dec 6 11:56:52 2019 -0800,1575662212,Fix outdated information on max memory policies,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,1686.0,211.0,18.114745370370372,0.0,0.0,0.0,Corrective,True,,
7e24e219fdc0a32cf81c3503a4aac3c6700efb8b,5941730c3770cfff0f753403378854e16e3c7d67,Oran Agra,oran@redislabs.com,Mon Dec 9 10:03:23 2019 +0200,1575878603,Add ULL suffix to CLIENT_TRACKING flag to prevent sign extensionthe code in:nc->flags &= ~(CLIENT_TRACKING|CLIENT_TRACKING_BROKEN_REDIR);nwill do sign extension and turn on all the high 31 bitsnno damage so far since we don't have any yetn,1.0,1.0,"src/server.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,2355.0,352.0,10.943356481481485,366.0,1.0913796422233175,268.0,Corrective,True,,
7e24e219fdc0a32cf81c3503a4aac3c6700efb8b 5941730c3770cfff0f753403378854e16e3c7d67,14045adf9211179687ebd694197643a0fca0116a,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 9 10:41:14 2019 +0100,1575884474,Merge pull request #6653 from oranagra/client_tracking_flagAdd ULL suffix to CLIENT_TRACKING flag to prevent sign extension,,,,,,,,,,,,,,,Merge,False,,
2271cf03f56525f153227c95b9521a5377321776,e4b6070c0f86ae2cd92c53301253cbabf565dd68,antirez,antirez@gmail.com,Mon Dec 9 12:15:38 2019 +0100,1575890138,Modules: more clarification about disconnection callback.,2.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7546.0,328.0,4.067592592592591,11965.0,1.2458456635556567,6518.0,None,False,,
52d83d57f964f323db4f097f6b5977269b2f6fc2,389faae58e9f981064f23418a0884902428b0047,Michael Chaten,mchaten@gmail.com,Mon Dec 9 11:27:53 2019 -0800,1575919673,Change description to be agnostic to the number of policies.,1.0,1.0,"redis.conf,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,1686.0,212.0,2.9798726851851853,1.0,1.3355848070193157,1.0,None,False,,
e4b6070c0f86ae2cd92c53301253cbabf565dd68,29fddf32918e905453398fafb4433c30f2b4aba3,antirez,antirez@gmail.com,Wed Dec 11 10:16:25 2019 +0100,1576055785,create-cluster script tailall option.,7.0,0.0,"utils/create-cluster/create-cluster,CAS_DELIMITER",1.0,1.0,1.0,0.0,14.0,105.0,8.0,7.683576388888889,11966.0,1.13014772670785,101.0,Feature Addition,False,,
29fddf32918e905453398fafb4433c30f2b4aba3,441cd9713c8cfce01ae90a1f9b603b03af3b8f81,antirez,antirez@gmail.com,Wed Dec 11 10:17:23 2019 +0100,1576055843,"Clients connected and bytes used is too spammy for verbose.This message is there for ten years, but is hardly useful.nMoreover it is likely that it will fill an entire disk if log ratationnis not configured, for no good reasons.n",1.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,5046.0,360.0,12.994745370370367,11967.0,1.0769541819788269,6519.0,None,False,,
441cd9713c8cfce01ae90a1f9b603b03af3b8f81 14045adf9211179687ebd694197643a0fca0116a,25b36f8d65ca489f0c7b4526f2a116009d133989,antirez,antirez@gmail.com,Wed Dec 11 10:18:15 2019 +0100,1576055895,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
7e24e219fdc0a32cf81c3503a4aac3c6700efb8b,a37cca36441abe697e884651a5558c4650534381,Oran Agra,oran@redislabs.com,Wed Dec 11 12:35:00 2019 +0200,1576060500,"fix leak in RM_LoadDataTypeFromString, and save",12.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7546.0,329.0,1.9717824074074075,367.0,1.5071553515455325,269.0,Corrective,True,,
25b36f8d65ca489f0c7b4526f2a116009d133989 a37cca36441abe697e884651a5558c4650534381,c6fb9d09633239943e5ac8644b442de5e8d3664a,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 11 11:39:27 2019 +0100,1576060767,"Merge pull request #6656 from oranagra/leak_rm_load_from_strfix leak in RM_LoadDataTypeFromString, and save",,,,,,,,,,,,,,,Merge,False,,
4092a75d850ab5f9ec4bc8941f6d5c28f44422e7,b5f3247ca55424d57d77efe51bedd1fb3861c8c0,Oran Agra,oran@redislabs.com,Thu Oct 24 11:11:24 2019 +0300,1571904684,"Add module API for AvoidReplicaTrafficThis is useful to tell redis and modules to try to avoid doing things that maynincrement the replication offset, and should be used when draining a masternand waiting for replicas to be in perfect sync before a failover.n",11.0,0.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER",2.0,1.0,1.0,0.6840384356390417,21.0,4233.0,462.0,402.4645775462963,368.5,0.9902261022528028,271.0,Corrective,True,,
ff682d790249741c6b0f387c1407b40b6f26b05f c6fb9d09633239943e5ac8644b442de5e8d3664a,2968d8e3cb7e3616eee063784d8245ab5fc5b307,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 09:27:14 2019 +0100,1576139234,Merge branch 'unstable' into ModuleSecurity,,,,,,,,,,,,,,,Merge,False,,
c6fb9d09633239943e5ac8644b442de5e8d3664a 2968d8e3cb7e3616eee063784d8245ab5fc5b307,c227f5e7bdbcb29d6f1212e7b0bd2872ce59cbe8,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 09:27:47 2019 +0100,1576139267,Merge pull request #6257 from JohnSully/ModuleSecurityModules must have execute permissions to load,,,,,,,,,,,,,,,Merge,False,,
c227f5e7bdbcb29d6f1212e7b0bd2872ce59cbe8,476333d19204a4b8acaf76e2c9d3629ab4f73772,antirez,antirez@gmail.com,Thu Dec 12 09:29:10 2019 +0100,1576139350,Remove useless space from moduleLoad().,1.0,1.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7565.0,331.0,49.01233796296296,11968.0,1.0204030258820884,6520.0,None,False,,
476333d19204a4b8acaf76e2c9d3629ab4f73772 9f32d0eed2695422c828eeeebf8f695285022ef7,81dc180323759998335df1f5aa91c64198c97bf4,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 09:33:48 2019 +0100,1576139628,Merge pull request #6524 from itamarhaber/acl-cliOmits  `ACL SETUSER` from redis-cli's history,,,,,,,,,,,,,,,Merge,False,,
81dc180323759998335df1f5aa91c64198c97bf4,d7a87d0ea46bcac6f55e3df3e7525a488e4c0694,antirez,antirez@gmail.com,Thu Dec 12 09:40:36 2019 +0100,1576140036,redis-cli: some refactoring about not logging AUTH & co.,13.0,5.0,"src/redis-cli.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,19.0,11656.0,361.0,41.788009259259255,11969.0,1.0239303096205383,6521.0,None,False,,
d7a87d0ea46bcac6f55e3df3e7525a488e4c0694 5eb2290f68891b468406355885ca7859bbe9f30f,118db9eeaebb6ed9e4ae7d43143124c5c8179d84,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 09:41:19 2019 +0100,1576140079,Merge pull request #6516 from IAmATeaPot418/patch-2Add no-slowlog to acl command to prevent passwords,,,,,,,,,,,,,,,Merge,False,,
c6fb9d09633239943e5ac8644b442de5e8d3664a,ef6e263fdeb1f11bd17a307a83c1e52c42895841,Oran Agra,oran@redislabs.com,Thu Dec 12 17:56:02 2019 +0200,1576166162,"init server.hz early to avoid div by 0 during config file loadingsince the refactory of config.c, it was initialized from config_hz in initServernbut apparently that's too late since the config file loading creates objectsnwhich call LRU_CLOCKn",1.0,0.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,5046.0,361.0,1.276840277777778,370.0,1.7831833138443969,272.0,Feature Addition,False,,
118db9eeaebb6ed9e4ae7d43143124c5c8179d84,0283db5883e8dc08e8d3c7019a213712adb3d420,Yossi Gottlieb,yossigo@gmail.com,Thu Dec 12 18:50:11 2019 +0200,1576169411,"Improve RM_ModuleTypeReplaceValue() API.With the previous API, a NULL return value was ambiguous and couldnrepresent either an old value of NULL or an error condition. The new APInreturns a status code and allows the old value to be returnednby-reference.nnThis commit also includes test coverage based onntests/modules/datatype.c which did not exist at the time of the originalncommit.n",59.0,9.0,"src/module.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,tests/modules/datatype.c,CAS_DELIMITER,tests/unit/moduleapi/datatype.tcl,CAS_DELIMITER",4.0,2.0,3.0,1.7106632373836983,21.0,2166.25,467.0,636.9904398148149,220.5,1.7238589204454091,47.0,Feature Addition,False,,
118db9eeaebb6ed9e4ae7d43143124c5c8179d84 0283db5883e8dc08e8d3c7019a213712adb3d420,ba2873808382bcf26f92a2659f171eae003cf375,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 12 18:00:07 2019 +0100,1576170007,Merge pull request #6663 from yossigo/fix-replace-valueImprove RM_ModuleTypeReplaceValue() API.,,,,,,,,,,,,,,,Merge,False,,
d7a87d0ea46bcac6f55e3df3e7525a488e4c0694,096592506ef3f548a4a3484d5829e04749a24a99,antirez,antirez@gmail.com,Fri Dec 13 17:34:37 2019 +0100,1576254877,Modules: allow to execute RM_Call() from the module init function.,2.0,0.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,7573.0,333.0,0.9891898148148148,11970.0,2.0109283223738093,6522.0,None,False,,
ba2873808382bcf26f92a2659f171eae003cf375 ef6e263fdeb1f11bd17a307a83c1e52c42895841,276a0937539f18085ee0fc9e904e6df692c70eb0,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 16 11:18:08 2019 +0100,1576491488,Merge pull request #6662 from oranagra/fix_hz_div0init server.hz early to avoid div by 0 during config file loading,,,,,,,,,,,,,,,Merge,False,,
096592506ef3f548a4a3484d5829e04749a24a99 276a0937539f18085ee0fc9e904e6df692c70eb0,aa3f13761f137956f5846d3c01526647c43c0f81,antirez,antirez@gmail.com,Mon Dec 16 11:18:20 2019 +0100,1576491500,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
aa3f13761f137956f5846d3c01526647c43c0f81,901b7469b95d95f5a7e40b04561985e3d992ebd4,antirez,antirez@gmail.com,Mon Dec 16 11:24:19 2019 +0100,1576491859,Clarify change in #6662.,4.0,1.0,"src/server.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,21.0,5047.0,362.0,3.7696412037037037,11971.0,1.2652772362042022,6523.0,None,False,,
901b7469b95d95f5a7e40b04561985e3d992ebd4 389faae58e9f981064f23418a0884902428b0047,e9b99c78dfd338ecf3c5b7b69318c10ce9dead03,Salvatore Sanfilippo,antirez@gmail.com,Mon Dec 16 11:25:53 2019 +0100,1576491953,Merge pull request #6649 from chaten/unstableFix outdated information on max memory policies,,,,,,,,,,,,,,,Merge,False,,
e9b99c78dfd338ecf3c5b7b69318c10ce9dead03,034dcf185cfaa844154e422d26a9ec7afa314189,Madelyn Olson,matolson@amazon.com,Tue Feb 26 01:23:11 2019 +0000,1551144191,Add module APIs for custom authentication,685.0,32.0,"runtest-moduleapi,CAS_DELIMITER,src/acl.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/modules/Makefile,CAS_DELIMITER,src/modules/helloacl.c,CAS_DELIMITER,src/networking.c,CAS_DELIMITER,src/redismodule.h,CAS_DELIMITER,src/sentinel.c,CAS_DELIMITER,src/server.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/Makefile,CAS_DELIMITER,tests/modules/auth.c,CAS_DELIMITER,tests/unit/moduleapi/auth.tcl,CAS_DELIMITER",13.0,3.0,5.0,2.540494023515122,22.0,1940.9230769230767,1994.0,-199.91253472222215,31.0,0.998924069378898,5.0,Feature Addition,False,True,"[""67aa527b222a9bd72f7c6f1d58abb3d30776aea5"", ""a511a37bb7e40d4a90d248180716ee4e53e84273""]"
034dcf185cfaa844154e422d26a9ec7afa314189,67aa527b222a9bd72f7c6f1d58abb3d30776aea5,Madelyn Olson,matolson@amazon.com,Tue Dec 17 07:15:04 2019 +0000,1576566904,Added some documentation and fixed a test,18.0,15.0,"src/modules/helloacl.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,tests/modules/auth.c,CAS_DELIMITER",3.0,2.0,3.0,1.5733553850075008,22.0,894.3333333333335,356.0,294.24436342592594,39.0,1.0020768829825517,6.0,Corrective,True,,
67aa527b222a9bd72f7c6f1d58abb3d30776aea5,f891b64a8338e4e0014dc162f76e03a3bbc7ecf8,Madelyn Olson,matolson@amazon.com,Tue Dec 17 07:28:55 2019 +0000,1576567735,Tweaking the documentation,17.0,19.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,7797.0,335.0,294.2539814814815,41.0,1.003398424704282,33.0,Non Functional,False,,
e9b99c78dfd338ecf3c5b7b69318c10ce9dead03,c95a582a749a83b117bdd51f4a7a29a616a0bf3c,Madelyn Olson,matolson@amazon.com,Thu May 30 11:50:31 2019 -0700,1559242231,Add configuration option for allowing reads on cluster down,30.0,3.0,"redis.conf,CAS_DELIMITER,src/cluster.c,CAS_DELIMITER,src/config.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER",4.0,2.0,2.0,1.526039078878629,22.0,3028.5,1412.0,-185.38280381944443,43.5,0.99720441008728,36.0,Feature Addition,False,,
c95a582a749a83b117bdd51f4a7a29a616a0bf3c,44aa22c63553d6be2879c51161feb50c1b31eab8,Madelyn Olson,matolson@amazon.com,Mon Oct 28 12:58:03 2019 -0700,1572292683,Added better exception handling around scripting and module,21.0,6.0,"src/module.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",2.0,1.0,1.0,0.975119064940866,22.0,5249.0,563.0,-36.98547453703704,46.5,0.9831354493918112,38.0,Feature Addition,False,,
44aa22c63553d6be2879c51161feb50c1b31eab8,576a08908b0fcf85a01803507238c4cc14bd85d1,Madelyn Olson,matolson@amazon.com,Wed Oct 30 00:11:17 2019 -0700,1572419477,Split error message so dependandent callers give a useful result,27.0,12.0,"src/cluster.c,CAS_DELIMITER,src/cluster.h,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/scripting.c,CAS_DELIMITER",4.0,1.0,1.0,1.4682010287950251,22.0,4135.5,1181.0,31.58916087962963,49.5,1.0076450690722305,42.0,None,False,,
576a08908b0fcf85a01803507238c4cc14bd85d1,12caffee6159c6fc2bdf226a224a6c5ed67a42cb,Madelyn Olson,matolson@amazon.com,Mon Dec 16 23:38:31 2019 -0800,1576568311,Added a missed space in lua errors,3.0,3.0,"src/scripting.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,2715.0,229.0,48.01891203703704,52.0,1.020825128216747,43.0,Feature Addition,False,,
12caffee6159c6fc2bdf226a224a6c5ed67a42cb,7b3e3d6a13db7bfe0b93056d9a004185e18d6ae3,Madelyn Olson,matolson@amazon.com,Mon Dec 16 23:40:19 2019 -0800,1576568419,Resolved merge miss,1.0,1.0,"src/config.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,2320.0,279.0,200.53458333333333,53.0,1.0049866710438558,44.0,Non Functional,False,,
f891b64a8338e4e0014dc162f76e03a3bbc7ecf8,a511a37bb7e40d4a90d248180716ee4e53e84273,Madelyn Olson,matolson@amazon.com,Tue Dec 17 07:49:21 2019 +0000,1576568961,Fixed some documentation,0.0,33.0,"src/redismodule.h,CAS_DELIMITER,tests/modules/auth.c,CAS_DELIMITER",2.0,2.0,2.0,0.19590927087360493,22.0,524.5,137.0,147.14598958333337,54.5,1.003398123372266,7.0,Corrective,True,,
a511a37bb7e40d4a90d248180716ee4e53e84273,7f04a15311b1dfe25f8f63c7a6dabce5a12d55ed,Madelyn Olson,matolson@amazon.com,Tue Dec 17 07:51:19 2019 +0000,1576569079,Removed old auth context reference,0.0,1.0,"src/redismodule.h,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,926.0,136.0,0.0013657407407407407,56.0,733.2033898305086,46.0,None,False,,
e9b99c78dfd338ecf3c5b7b69318c10ce9dead03 7b3e3d6a13db7bfe0b93056d9a004185e18d6ae3,f3d67b3842dde34937eb94153d2b0ed90e1c0f09,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 17 09:15:20 2019 +0100,1576570520,Merge pull request #6144 from madolson/dev-unstable-cluster-downAdd configuration option for allowing reads on cluster down,,,,,,,,,,,,,,,Merge,False,,
f3d67b3842dde34937eb94153d2b0ed90e1c0f09,4348d25fc45706ffd611d251d961eb3f1bf1ebde,antirez,antirez@gmail.com,Tue Dec 17 09:19:47 2019 +0100,1576570787,Add some comment to PR #6144 changes.,12.0,4.0,"src/cluster.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,5751.0,568.0,48.04756944444443,11972.0,1.0208127073140767,6524.0,Feature Addition,False,,
4348d25fc45706ffd611d251d961eb3f1bf1ebde 7f04a15311b1dfe25f8f63c7a6dabce5a12d55ed,b7c78b7651c5458ccf5d95ef5857ec427b927a27,Salvatore Sanfilippo,antirez@gmail.com,Tue Dec 17 09:58:26 2019 +0100,1576573106,Merge pull request #5916 from madolson/dev-unstable-acl-module-prAdd module APIs for custom authentication,,,,,,,,,,,,,,,Merge,False,,
b7c78b7651c5458ccf5d95ef5857ec427b927a27,24044f33560e9c34e73d8ffc493ed7c0b6b95dbc,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Dec 18 14:49:38 2019 +0800,1576651778,add a new SET option KEEPTTL that doesn't remove expire time,38.0,18.0,"src/bitops.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER,tests/unit/expire.tcl,CAS_DELIMITER",8.0,2.0,2.0,2.312499634833868,22.0,1883.0,1199.0,247.18629629629632,189.5,1.0020790560559565,6.0,Feature Addition,False,True,"[""5b9d3ac6c6932b292c8895af8562c4df3c00464b""]"
24044f33560e9c34e73d8ffc493ed7c0b6b95dbc,58554396d6d49b2c80fcf61ce5c2ccfdc550c7c2,zhaozhao.zz,zhaozhao.zz@alibaba-inc.com,Wed Dec 18 15:44:51 2019 +0800,1576655091,incrbyfloat: fix issue #5256 ttl lost after propagate,14.0,4.0,"src/t_string.c,CAS_DELIMITER,tests/integration/replication.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.9640787648082292,22.0,555.5,109.0,34.800190972222225,194.5,14.04672506995111,7.0,None,False,,
b7c78b7651c5458ccf5d95ef5857ec427b927a27 58554396d6d49b2c80fcf61ce5c2ccfdc550c7c2,9d1baa070521f648e836eb741a050a8897d48129,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 18 11:52:08 2019 +0100,1576666328,Merge pull request #6679 from soloestoy/keepttlAdd a new SET option KEEPTTL and fix issue #5256,,,,,,,,,,,,,,,Merge,False,,
9d1baa070521f648e836eb741a050a8897d48129,5b9d3ac6c6932b292c8895af8562c4df3c00464b,antirez,antirez@gmail.com,Wed Dec 18 11:58:02 2019 +0100,1576666682,Avoid changing setKey() API after #6679 fix.,21.0,12.0,"src/bitops.c,CAS_DELIMITER,src/db.c,CAS_DELIMITER,src/geo.c,CAS_DELIMITER,src/module.c,CAS_DELIMITER,src/server.h,CAS_DELIMITER,src/sort.c,CAS_DELIMITER,src/t_string.c,CAS_DELIMITER",7.0,1.0,1.0,2.474879346041144,22.0,2121.714285714286,1189.0,0.16702215608465604,11976.0,3.1511738668252227,6531.0,Corrective,True,,
5b9d3ac6c6932b292c8895af8562c4df3c00464b,e6e58e455c1adce82592a5dcf276dd8083088e2b,antirez,antirez@gmail.com,Wed Dec 18 12:54:46 2019 +0100,1576670086,"Revert Geo: output 10 chars of geohash, not 11.This reverts commit 009862ab7eee394061eeaf1aa187fa339ca50be4.n",5.0,5.0,"src/geo.c,CAS_DELIMITER,tests/unit/geo.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.7219280948873623,22.0,570.5,84.0,35.45438657407408,11980.5,13.698003135036545,841.0,None,False,,
e6e58e455c1adce82592a5dcf276dd8083088e2b,5a72c5058c27cdc778cde8f61d16691b11a6adc5,antirez,antirez@gmail.com,Wed Dec 18 12:57:32 2019 +0100,1576670252,Fix GEOHASH negative shifting in a more compatible way.,9.0,1.0,"src/geo.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,818.0,63.0,0.0019212962962962964,11982.0,521.4819277108434,6533.0,Corrective,True,,
5a72c5058c27cdc778cde8f61d16691b11a6adc5 b5f3247ca55424d57d77efe51bedd1fb3861c8c0,ef0b45ece8ee629dc2234f9061e0b28f9159df55,Salvatore Sanfilippo,antirez@gmail.com,Wed Dec 18 17:06:05 2019 +0100,1576685165,Merge pull request #6497 from oranagra/avoid_replica_trafficAdd config and module API for AvoidReplicaTraffic,,,,,,,,,,,,,,,Merge,False,,
ef0b45ece8ee629dc2234f9061e0b28f9159df55,c5bc1c14c0bfb5213b230a1d0dd96c5f24341885,antirez,antirez@gmail.com,Wed Dec 18 17:11:03 2019 +0100,1576685463,Modules: rewrite top function doc of AvoidReplicaTraffic().,20.0,4.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,7805.0,340.0,0.2173726851851852,11983.0,5.600394015228156,6534.0,None,False,,
c5bc1c14c0bfb5213b230a1d0dd96c5f24341885 c7b68d10ea6137305715d2660897237a864c552e,f4b81970601ee138af13f66d62ad10eabe56f41c,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 19 08:54:22 2019 +0100,1576742062,Merge pull request #6052 from jtru/better-systemd-integration-v2Better systemd integration v2,,,,,,,,,,,,,,,Merge,False,,
f4b81970601ee138af13f66d62ad10eabe56f41c 73841e8c495ec4917a8cdee3cbef6fb83433f018,9a7b6a9f51939e09576b3e26be2da6d6ac20f097,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 19 09:06:28 2019 +0100,1576742788,Merge pull request #5780 from soloestoy/lua-multi-more-clearscripting: flag lua_client as CLIENT_MULTI after redis.replicate_command() immediately,,,,,,,,,,,,,,,Merge,False,,
9a7b6a9f51939e09576b3e26be2da6d6ac20f097 6b056d29f31c01188c4758ade8900c847bbd025c,d3a9dff6b95eb2ec16e432dd102202694dfc285a,Salvatore Sanfilippo,antirez@gmail.com,Thu Dec 19 09:24:52 2019 +0100,1576743892,Merge pull request #6615 from soloestoy/wrap-also-propagate-as-multiWrap also propagate as multi,,,,,,,,,,,,,,,Merge,False,,
d3a9dff6b95eb2ec16e432dd102202694dfc285a,324e22accf457edc996971bc97f5474349cd7c4c,antirez,antirez@gmail.com,Fri Dec 20 12:29:02 2019 +0100,1576841342,Fix ip and missing mode in RM_GetClusterNodeInfo().,5.0,2.0,"src/module.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,7821.0,341.0,1.8041550925925929,11984.0,1.5542760731079874,6535.0,Corrective,True,,
324e22accf457edc996971bc97f5474349cd7c4c,1f75ce30dfdb1c8c4df8474f9580f2aff032cfb4,Guy Benoish,guy.benoish@redislabs.com,Thu Dec 26 15:31:37 2019 +0530,1577354497,Stream: Handle streamID-related edge casesThis commit solves several edge cases that are related tonexhausting the streamID limits: We should correctly calculatenthe succeeding streamID instead of blindly incrementing 'seq'nThis affects both XREAD and XADD.nnOther (unrelated) changes:nReply with a better error message when trying to add an entrynto a stream that has exhausted last_idn,54.0,4.0,"src/blocked.c,CAS_DELIMITER,src/stream.h,CAS_DELIMITER,src/t_stream.c,CAS_DELIMITER,tests/unit/type/stream.tcl,CAS_DELIMITER",4.0,2.0,2.0,1.2892240920926314,20.0,945.0,296.0,40.23344328703704,44.5,1.0132047803811584,6.0,None,False,,
324e22accf457edc996971bc97f5474349cd7c4c,0c3fe52ef7e3acf135428be81dd8e27b4ef191e5,Oran Agra,oran@redislabs.com,Thu Dec 26 13:59:58 2019 +0200,1577361598,"config.c adjust config limits and mutable- make lua-replicate-commands mutable (it never was, but i don't see why)n- make tcp-backlog immutable (fix a recent refactory mistake)n- increase the max limit of a few configs to match what they were beforenthe recent refactoryn",7.0,7.0,"src/config.c,CAS_DELIMITER,tests/unit/introspection.tcl,CAS_DELIMITER",2.0,2.0,2.0,0.5916727785823275,22.0,1222.5,291.0,18.64398148148148,371.5,1.067873529881991,82.0,Corrective,True,,
324e22accf457edc996971bc97f5474349cd7c4c 0c3fe52ef7e3acf135428be81dd8e27b4ef191e5,1bae5dfff612287dccafeca25230970666bb262d,Salvatore Sanfilippo,antirez@gmail.com,Sun Dec 29 14:51:40 2019 +0100,1577627500,Merge pull request #6707 from oranagra/fix_config_limitsconfig.c adjust config limits and mutable,,,,,,,,,,,,,,,Merge,False,,
1bae5dfff612287dccafeca25230970666bb262d 1f75ce30dfdb1c8c4df8474f9580f2aff032cfb4,3ff95d9074a88d53c339260225beaf304d393c70,Salvatore Sanfilippo,antirez@gmail.com,Sun Dec 29 14:53:06 2019 +0100,1577627586,Merge pull request #6706 from guybe7/stream_id_edge_casesStream: Handle streamID-related edge cases,,,,,,,,,,,,,,,Merge,False,,
324e22accf457edc996971bc97f5474349cd7c4c,5521910de77d8a9d7587ec8497cc589c4245a599,antirez,antirez@gmail.com,Sun Dec 29 15:40:40 2019 +0100,1577630440,"Inline protocol: handle empty strings well.This bug is from the first version of Redis. Probably the problem herenis that before we used an SDS split function that created empty stringsnfor additional spaces, like in SETfoo  bar.nAFAIK later we replaced it with the curretn sdssplitarg() API that hasnno such a problem. As a result, we introduced a bug, where it is nonlonger possible to do something like:nnSET foo nnUsing the inline protocol. Now it is fixed.n",2.0,6.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,2926.0,395.0,306.55380787037035,11985.0,1.0032620700651118,6536.0,None,False,,
5521910de77d8a9d7587ec8497cc589c4245a599 3ff95d9074a88d53c339260225beaf304d393c70,faea46710c4abf56bac9e5e0dba84aa4ad46820b,antirez,antirez@gmail.com,Sun Dec 29 15:42:08 2019 +0100,1577630528,Merge branch 'unstable' of github.com:/antirez/redis into unstable,,,,,,,,,,,,,,,Merge,False,,
faea46710c4abf56bac9e5e0dba84aa4ad46820b,6e4f70b8170e14ba8a2ada2fde4a75e073effee3,antirez,antirez@gmail.com,Sun Dec 29 15:44:59 2019 +0100,1577630699,Fix duplicated CLIENT SETNAME reply.Happened when we set the name to  to cancel the name.nWas introduced during the RESP3 refactoring.nnSee #6036.n,0.0,1.0,"src/networking.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,22.0,2922.0,396.0,0.0029976851851851853,11986.0,334.59073359073363,6537.0,Corrective,True,,
6e4f70b8170e14ba8a2ada2fde4a75e073effee3,0af467d18f9d12b137af3b709c0af579c29d8414,antirez,antirez@gmail.com,Wed Jan 1 18:10:39 2020 +0100,1577898639,"Fix active expire division by zero.Likely fix #6723.nnThis is what happens AFAIK: we enter the main loop where we expire stuffnuntil a given percentage of keys is still found to be logically expired.nThere are however other potential exit conditions.nnHowever the sampled variable is not always incremented inside thenloop, because we may found no valid slot as we scan the hash table, butnjust NULLs ad dict entries. So when the do/while loop condition isntriggered at the end, we do (expired*100/sampled), dividing by zero ifnwe sampled 0 keys.n",7.0,4.0,"src/expire.c,CAS_DELIMITER",1.0,1.0,1.0,0.0,20.0,607.0,20.0,44.0162037037037,11987.0,1.022718906126742,6538.0,Corrective,True,,
